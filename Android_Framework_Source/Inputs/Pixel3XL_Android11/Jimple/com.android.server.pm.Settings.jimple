public final class com.android.server.pm.Settings extends java.lang.Object
{
    private static final java.lang.String ATTR_APP_LINK_GENERATION;
    private static final java.lang.String ATTR_BLOCKED;
    private static final java.lang.String ATTR_BLOCK_UNINSTALL;
    private static final java.lang.String ATTR_CE_DATA_INODE;
    private static final java.lang.String ATTR_DATABASE_VERSION;
    private static final java.lang.String ATTR_DISTRACTION_FLAGS;
    private static final java.lang.String ATTR_DOMAIN_VERIFICATON_STATE;
    private static final java.lang.String ATTR_ENABLED;
    private static final java.lang.String ATTR_ENABLED_CALLER;
    private static final java.lang.String ATTR_ENFORCEMENT;
    private static final java.lang.String ATTR_FINGERPRINT;
    private static final java.lang.String ATTR_FLAGS;
    private static final java.lang.String ATTR_GRANTED;
    private static final java.lang.String ATTR_HARMFUL_APP_WARNING;
    private static final java.lang.String ATTR_HIDDEN;
    private static final java.lang.String ATTR_INSTALLED;
    private static final java.lang.String ATTR_INSTALL_REASON;
    private static final java.lang.String ATTR_INSTANT_APP;
    public static final java.lang.String ATTR_NAME;
    private static final java.lang.String ATTR_NOT_LAUNCHED;
    public static final java.lang.String ATTR_PACKAGE;
    private static final java.lang.String ATTR_PACKAGE_NAME;
    private static final java.lang.String ATTR_SDK_VERSION;
    private static final java.lang.String ATTR_STOPPED;
    private static final java.lang.String ATTR_SUSPENDED;
    private static final java.lang.String ATTR_SUSPENDING_PACKAGE;
    private static final java.lang.String ATTR_SUSPEND_DIALOG_MESSAGE;
    private static final java.lang.String ATTR_UNINSTALL_REASON;
    private static final java.lang.String ATTR_VALUE;
    private static final java.lang.String ATTR_VERSION;
    private static final java.lang.String ATTR_VIRTUAL_PRELOAD;
    private static final java.lang.String ATTR_VOLUME_UUID;
    public static final int CURRENT_DATABASE_VERSION;
    private static final boolean DEBUG_KERNEL;
    private static final boolean DEBUG_MU;
    private static final boolean DEBUG_PARSER;
    private static final boolean DEBUG_STOPPED;
    static final java.lang.Object[] FLAG_DUMP_SPEC;
    private static int PRE_M_APP_INFO_FLAG_CANT_SAVE_STATE;
    private static int PRE_M_APP_INFO_FLAG_HIDDEN;
    private static int PRE_M_APP_INFO_FLAG_PRIVILEGED;
    private static final java.lang.Object[] PRIVATE_FLAG_DUMP_SPEC;
    private static final java.lang.String RUNTIME_PERMISSIONS_FILE_NAME;
    private static final java.lang.String TAG;
    private static final java.lang.String TAG_ALL_INTENT_FILTER_VERIFICATION;
    private static final java.lang.String TAG_BLOCK_UNINSTALL;
    private static final java.lang.String TAG_BLOCK_UNINSTALL_PACKAGES;
    private static final java.lang.String TAG_CHILD_PACKAGE;
    static final java.lang.String TAG_CROSS_PROFILE_INTENT_FILTERS;
    private static final java.lang.String TAG_DEFAULT_APPS;
    private static final java.lang.String TAG_DEFAULT_BROWSER;
    private static final java.lang.String TAG_DEFAULT_DIALER;
    private static final java.lang.String TAG_DISABLED_COMPONENTS;
    private static final java.lang.String TAG_DOMAIN_VERIFICATION;
    private static final java.lang.String TAG_ENABLED_COMPONENTS;
    public static final java.lang.String TAG_ITEM;
    private static final java.lang.String TAG_MIME_GROUP;
    private static final java.lang.String TAG_MIME_TYPE;
    private static final java.lang.String TAG_PACKAGE;
    private static final java.lang.String TAG_PACKAGE_RESTRICTIONS;
    private static final java.lang.String TAG_PERMISSIONS;
    private static final java.lang.String TAG_PERSISTENT_PREFERRED_ACTIVITIES;
    private static final java.lang.String TAG_READ_EXTERNAL_STORAGE;
    private static final java.lang.String TAG_RUNTIME_PERMISSIONS;
    private static final java.lang.String TAG_SHARED_USER;
    private static final java.lang.String TAG_SUSPENDED_APP_EXTRAS;
    private static final java.lang.String TAG_SUSPENDED_DIALOG_INFO;
    private static final java.lang.String TAG_SUSPENDED_LAUNCHER_EXTRAS;
    private static final java.lang.String TAG_SUSPEND_PARAMS;
    private static final java.lang.String TAG_USES_STATIC_LIB;
    private static final java.lang.String TAG_VERSION;
    private static int mFirstAvailableUid;
    private final java.util.ArrayList mAppIds;
    private final java.io.File mBackupSettingsFilename;
    private final java.io.File mBackupStoppedPackagesFilename;
    private final android.util.SparseArray mBlockUninstallPackages;
    final android.util.SparseArray mCrossProfileIntentResolvers;
    final android.util.SparseArray mDefaultBrowserApp;
    private final android.util.ArrayMap mDisabledSysPackages;
    private final android.util.ArraySet mInstallerPackages;
    private final android.util.ArrayMap mKernelMapping;
    private final java.io.File mKernelMappingFilename;
    public final com.android.server.pm.KeySetManagerService mKeySetManagerService;
    private final android.util.ArrayMap mKeySetRefs;
    private final java.lang.Object mLock;
    final android.util.SparseIntArray mNextAppLinkGeneration;
    private final android.util.SparseArray mOtherAppIds;
    private final java.io.File mPackageListFilename;
    final android.util.ArrayMap mPackages;
    private final java.util.ArrayList mPastSignatures;
    private final java.util.ArrayList mPendingPackages;
    final com.android.server.pm.permission.PermissionSettings mPermissions;
    final android.util.SparseArray mPersistentPreferredActivities;
    final android.util.SparseArray mPreferredActivities;
    java.lang.Boolean mReadExternalStorageEnforced;
    final java.lang.StringBuilder mReadMessages;
    private final android.util.ArrayMap mRenamedPackages;
    private final android.util.ArrayMap mRestoredIntentFilterVerifications;
    private final com.android.server.pm.Settings$RuntimePermissionPersistence mRuntimePermissionsPersistence;
    private final java.io.File mSettingsFilename;
    final android.util.ArrayMap mSharedUsers;
    private final java.io.File mStoppedPackagesFilename;
    private final java.io.File mSystemDir;
    private android.content.pm.VerifierDeviceIdentity mVerifierDeviceIdentity;
    private android.util.ArrayMap mVersion;

    static void <clinit>()
    {
        java.lang.Integer r0, r1, r2, r3, r4, r5, r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33;
        java.lang.Object[] $r7, $r16;

        <com.android.server.pm.Settings: java.lang.String TAG_VERSION> = "version";

        <com.android.server.pm.Settings: java.lang.String TAG_USES_STATIC_LIB> = "uses-static-lib";

        <com.android.server.pm.Settings: java.lang.String TAG_SUSPEND_PARAMS> = "suspend-params";

        <com.android.server.pm.Settings: java.lang.String TAG_SUSPENDED_LAUNCHER_EXTRAS> = "suspended-launcher-extras";

        <com.android.server.pm.Settings: java.lang.String TAG_SUSPENDED_DIALOG_INFO> = "suspended-dialog-info";

        <com.android.server.pm.Settings: java.lang.String TAG_SUSPENDED_APP_EXTRAS> = "suspended-app-extras";

        <com.android.server.pm.Settings: java.lang.String TAG_SHARED_USER> = "shared-user";

        <com.android.server.pm.Settings: java.lang.String TAG_RUNTIME_PERMISSIONS> = "runtime-permissions";

        <com.android.server.pm.Settings: java.lang.String TAG_READ_EXTERNAL_STORAGE> = "read-external-storage";

        <com.android.server.pm.Settings: java.lang.String TAG_PERSISTENT_PREFERRED_ACTIVITIES> = "persistent-preferred-activities";

        <com.android.server.pm.Settings: java.lang.String TAG_PERMISSIONS> = "perms";

        <com.android.server.pm.Settings: java.lang.String TAG_PACKAGE_RESTRICTIONS> = "package-restrictions";

        <com.android.server.pm.Settings: java.lang.String TAG_PACKAGE> = "pkg";

        <com.android.server.pm.Settings: java.lang.String TAG_MIME_TYPE> = "mime-type";

        <com.android.server.pm.Settings: java.lang.String TAG_MIME_GROUP> = "mime-group";

        <com.android.server.pm.Settings: java.lang.String TAG_ITEM> = "item";

        <com.android.server.pm.Settings: java.lang.String TAG_ENABLED_COMPONENTS> = "enabled-components";

        <com.android.server.pm.Settings: java.lang.String TAG_DOMAIN_VERIFICATION> = "domain-verification";

        <com.android.server.pm.Settings: java.lang.String TAG_DISABLED_COMPONENTS> = "disabled-components";

        <com.android.server.pm.Settings: java.lang.String TAG_DEFAULT_DIALER> = "default-dialer";

        <com.android.server.pm.Settings: java.lang.String TAG_DEFAULT_BROWSER> = "default-browser";

        <com.android.server.pm.Settings: java.lang.String TAG_DEFAULT_APPS> = "default-apps";

        <com.android.server.pm.Settings: java.lang.String TAG_CROSS_PROFILE_INTENT_FILTERS> = "crossProfile-intent-filters";

        <com.android.server.pm.Settings: java.lang.String TAG_CHILD_PACKAGE> = "child-package";

        <com.android.server.pm.Settings: java.lang.String TAG_BLOCK_UNINSTALL_PACKAGES> = "block-uninstall-packages";

        <com.android.server.pm.Settings: java.lang.String TAG_BLOCK_UNINSTALL> = "block-uninstall";

        <com.android.server.pm.Settings: java.lang.String TAG_ALL_INTENT_FILTER_VERIFICATION> = "all-intent-filter-verifications";

        <com.android.server.pm.Settings: java.lang.String TAG> = "PackageSettings";

        <com.android.server.pm.Settings: java.lang.String RUNTIME_PERMISSIONS_FILE_NAME> = "runtime-permissions.xml";

        <com.android.server.pm.Settings: boolean DEBUG_STOPPED> = 0;

        <com.android.server.pm.Settings: boolean DEBUG_PARSER> = 0;

        <com.android.server.pm.Settings: boolean DEBUG_MU> = 0;

        <com.android.server.pm.Settings: boolean DEBUG_KERNEL> = 0;

        <com.android.server.pm.Settings: int CURRENT_DATABASE_VERSION> = 3;

        <com.android.server.pm.Settings: java.lang.String ATTR_VOLUME_UUID> = "volumeUuid";

        <com.android.server.pm.Settings: java.lang.String ATTR_VIRTUAL_PRELOAD> = "virtual-preload";

        <com.android.server.pm.Settings: java.lang.String ATTR_VERSION> = "version";

        <com.android.server.pm.Settings: java.lang.String ATTR_VALUE> = "value";

        <com.android.server.pm.Settings: java.lang.String ATTR_UNINSTALL_REASON> = "uninstall-reason";

        <com.android.server.pm.Settings: java.lang.String ATTR_SUSPEND_DIALOG_MESSAGE> = "suspend_dialog_message";

        <com.android.server.pm.Settings: java.lang.String ATTR_SUSPENDING_PACKAGE> = "suspending-package";

        <com.android.server.pm.Settings: java.lang.String ATTR_SUSPENDED> = "suspended";

        <com.android.server.pm.Settings: java.lang.String ATTR_STOPPED> = "stopped";

        <com.android.server.pm.Settings: java.lang.String ATTR_SDK_VERSION> = "sdkVersion";

        <com.android.server.pm.Settings: java.lang.String ATTR_PACKAGE_NAME> = "packageName";

        <com.android.server.pm.Settings: java.lang.String ATTR_PACKAGE> = "package";

        <com.android.server.pm.Settings: java.lang.String ATTR_NOT_LAUNCHED> = "nl";

        <com.android.server.pm.Settings: java.lang.String ATTR_NAME> = "name";

        <com.android.server.pm.Settings: java.lang.String ATTR_INSTANT_APP> = "instant-app";

        <com.android.server.pm.Settings: java.lang.String ATTR_INSTALL_REASON> = "install-reason";

        <com.android.server.pm.Settings: java.lang.String ATTR_INSTALLED> = "inst";

        <com.android.server.pm.Settings: java.lang.String ATTR_HIDDEN> = "hidden";

        <com.android.server.pm.Settings: java.lang.String ATTR_HARMFUL_APP_WARNING> = "harmful-app-warning";

        <com.android.server.pm.Settings: java.lang.String ATTR_GRANTED> = "granted";

        <com.android.server.pm.Settings: java.lang.String ATTR_FLAGS> = "flags";

        <com.android.server.pm.Settings: java.lang.String ATTR_FINGERPRINT> = "fingerprint";

        <com.android.server.pm.Settings: java.lang.String ATTR_ENFORCEMENT> = "enforcement";

        <com.android.server.pm.Settings: java.lang.String ATTR_ENABLED_CALLER> = "enabledCaller";

        <com.android.server.pm.Settings: java.lang.String ATTR_ENABLED> = "enabled";

        <com.android.server.pm.Settings: java.lang.String ATTR_DOMAIN_VERIFICATON_STATE> = "domainVerificationStatus";

        <com.android.server.pm.Settings: java.lang.String ATTR_DISTRACTION_FLAGS> = "distraction_flags";

        <com.android.server.pm.Settings: java.lang.String ATTR_DATABASE_VERSION> = "databaseVersion";

        <com.android.server.pm.Settings: java.lang.String ATTR_CE_DATA_INODE> = "ceDataInode";

        <com.android.server.pm.Settings: java.lang.String ATTR_BLOCK_UNINSTALL> = "blockUninstall";

        <com.android.server.pm.Settings: java.lang.String ATTR_BLOCKED> = "blocked";

        <com.android.server.pm.Settings: java.lang.String ATTR_APP_LINK_GENERATION> = "app-link-generation";

        <com.android.server.pm.Settings: int mFirstAvailableUid> = 0;

        <com.android.server.pm.Settings: int PRE_M_APP_INFO_FLAG_HIDDEN> = 134217728;

        <com.android.server.pm.Settings: int PRE_M_APP_INFO_FLAG_CANT_SAVE_STATE> = 268435456;

        <com.android.server.pm.Settings: int PRE_M_APP_INFO_FLAG_PRIVILEGED> = 1073741824;

        r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(16);

        r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(32);

        r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(64);

        r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(128);

        $r7 = newarray (java.lang.Object)[30];

        $r7[0] = r0;

        $r7[1] = "SYSTEM";

        $r7[2] = r1;

        $r7[3] = "DEBUGGABLE";

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r7[4] = $r8;

        $r7[5] = "HAS_CODE";

        $r7[6] = r2;

        $r7[7] = "PERSISTENT";

        $r7[8] = r3;

        $r7[9] = "FACTORY_TEST";

        $r7[10] = r4;

        $r7[11] = "ALLOW_TASK_REPARENTING";

        $r7[12] = r5;

        $r7[13] = "ALLOW_CLEAR_USER_DATA";

        $r7[14] = r6;

        $r7[15] = "UPDATED_SYSTEM_APP";

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(256);

        $r7[16] = $r9;

        $r7[17] = "TEST_ONLY";

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(16384);

        $r7[18] = $r10;

        $r7[19] = "VM_SAFE_MODE";

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(32768);

        $r7[20] = $r11;

        $r7[21] = "ALLOW_BACKUP";

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(65536);

        $r7[22] = $r12;

        $r7[23] = "KILL_AFTER_RESTORE";

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(131072);

        $r7[24] = $r13;

        $r7[25] = "RESTORE_ANY_VERSION";

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(262144);

        $r7[26] = $r14;

        $r7[27] = "EXTERNAL_STORAGE";

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1048576);

        $r7[28] = $r15;

        $r7[29] = "LARGE_HEAP";

        <com.android.server.pm.Settings: java.lang.Object[] FLAG_DUMP_SPEC> = $r7;

        $r16 = newarray (java.lang.Object)[48];

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1024);

        $r16[0] = $r17;

        $r16[1] = "PRIVATE_FLAG_ACTIVITIES_RESIZE_MODE_RESIZEABLE";

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4096);

        $r16[2] = $r18;

        $r16[3] = "PRIVATE_FLAG_ACTIVITIES_RESIZE_MODE_RESIZEABLE_VIA_SDK_VERSION";

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2048);

        $r16[4] = $r19;

        $r16[5] = "PRIVATE_FLAG_ACTIVITIES_RESIZE_MODE_UNRESIZEABLE";

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(134217728);

        $r16[6] = $r20;

        $r16[7] = "ALLOW_AUDIO_PLAYBACK_CAPTURE";

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(536870912);

        $r16[8] = $r21;

        $r16[9] = "PRIVATE_FLAG_REQUEST_LEGACY_EXTERNAL_STORAGE";

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8192);

        $r16[10] = $r22;

        $r16[11] = "BACKUP_IN_FOREGROUND";

        $r16[12] = r1;

        $r16[13] = "CANT_SAVE_STATE";

        $r16[14] = r4;

        $r16[15] = "DEFAULT_TO_DEVICE_PROTECTED_STORAGE";

        $r16[16] = r5;

        $r16[17] = "DIRECT_BOOT_AWARE";

        $r16[18] = r3;

        $r16[19] = "HAS_DOMAIN_URLS";

        $r16[20] = r0;

        $r16[21] = "HIDDEN";

        $r16[22] = r6;

        $r16[23] = "EPHEMERAL";

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(32768);

        $r16[24] = $r23;

        $r16[25] = "ISOLATED_SPLIT_LOADING";

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(131072);

        $r16[26] = $r24;

        $r16[27] = "OEM";

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(256);

        $r16[28] = $r25;

        $r16[29] = "PARTIALLY_DIRECT_BOOT_AWARE";

        $r16[30] = r2;

        $r16[31] = "PRIVILEGED";

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(512);

        $r16[32] = $r26;

        $r16[33] = "REQUIRED_FOR_SYSTEM_USER";

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(16384);

        $r16[34] = $r27;

        $r16[35] = "STATIC_SHARED_LIBRARY";

        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(262144);

        $r16[36] = $r28;

        $r16[37] = "VENDOR";

        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(524288);

        $r16[38] = $r29;

        $r16[39] = "PRODUCT";

        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2097152);

        $r16[40] = $r30;

        $r16[41] = "SYSTEM_EXT";

        $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(65536);

        $r16[42] = $r31;

        $r16[43] = "VIRTUAL_PRELOAD";

        $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1073741824);

        $r16[44] = $r32;

        $r16[45] = "ODM";

        $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-2147483648);

        $r16[46] = $r33;

        $r16[47] = "PRIVATE_FLAG_ALLOW_NATIVE_HEAP_POINTER_TAGGING";

        <com.android.server.pm.Settings: java.lang.Object[] PRIVATE_FLAG_DUMP_SPEC> = $r16;

        return;
    }

    void <init>(java.io.File, com.android.server.pm.permission.PermissionSettings, java.lang.Object)
    {
        com.android.server.pm.Settings r0;
        com.android.server.pm.permission.PermissionSettings r1;
        java.lang.Object r2;
        android.util.ArrayMap $r3, $r5, $r6, $r8, $r9, $r13, $r17, $r18, $r24;
        android.util.ArraySet $r4;
        android.util.SparseArray $r7, $r10, $r11, $r12, $r15, $r19;
        java.util.ArrayList $r14, $r16, $r22;
        android.util.SparseIntArray $r20;
        java.lang.StringBuilder $r21;
        com.android.server.pm.KeySetManagerService $r23;
        com.android.server.pm.Settings$RuntimePermissionPersistence $r25;
        java.io.File $r26, $r27, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, r40, r43;
        java.lang.String $r28;
        boolean $z1;

        r0 := @this: com.android.server.pm.Settings;

        r40 := @parameter0: java.io.File;

        r1 := @parameter1: com.android.server.pm.permission.PermissionSettings;

        r2 := @parameter2: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages> = $r3;

        $r4 = new android.util.ArraySet;

        specialinvoke $r4.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.pm.Settings: android.util.ArraySet mInstallerPackages> = $r4;

        $r5 = new android.util.ArrayMap;

        specialinvoke $r5.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.pm.Settings: android.util.ArrayMap mKernelMapping> = $r5;

        $r6 = new android.util.ArrayMap;

        specialinvoke $r6.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.pm.Settings: android.util.ArrayMap mDisabledSysPackages> = $r6;

        $r7 = new android.util.SparseArray;

        specialinvoke $r7.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.pm.Settings: android.util.SparseArray mBlockUninstallPackages> = $r7;

        $r8 = new android.util.ArrayMap;

        specialinvoke $r8.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.pm.Settings: android.util.ArrayMap mRestoredIntentFilterVerifications> = $r8;

        $r9 = new android.util.ArrayMap;

        specialinvoke $r9.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.pm.Settings: android.util.ArrayMap mVersion> = $r9;

        $r10 = new android.util.SparseArray;

        specialinvoke $r10.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.pm.Settings: android.util.SparseArray mPreferredActivities> = $r10;

        $r11 = new android.util.SparseArray;

        specialinvoke $r11.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.pm.Settings: android.util.SparseArray mPersistentPreferredActivities> = $r11;

        $r12 = new android.util.SparseArray;

        specialinvoke $r12.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.pm.Settings: android.util.SparseArray mCrossProfileIntentResolvers> = $r12;

        $r13 = new android.util.ArrayMap;

        specialinvoke $r13.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.pm.Settings: android.util.ArrayMap mSharedUsers> = $r13;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.pm.Settings: java.util.ArrayList mAppIds> = $r14;

        $r15 = new android.util.SparseArray;

        specialinvoke $r15.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.pm.Settings: android.util.SparseArray mOtherAppIds> = $r15;

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.pm.Settings: java.util.ArrayList mPastSignatures> = $r16;

        $r17 = new android.util.ArrayMap;

        specialinvoke $r17.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.pm.Settings: android.util.ArrayMap mKeySetRefs> = $r17;

        $r18 = new android.util.ArrayMap;

        specialinvoke $r18.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.pm.Settings: android.util.ArrayMap mRenamedPackages> = $r18;

        $r19 = new android.util.SparseArray;

        specialinvoke $r19.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.pm.Settings: android.util.SparseArray mDefaultBrowserApp> = $r19;

        $r20 = new android.util.SparseIntArray;

        specialinvoke $r20.<android.util.SparseIntArray: void <init>()>();

        r0.<com.android.server.pm.Settings: android.util.SparseIntArray mNextAppLinkGeneration> = $r20;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages> = $r21;

        $r22 = new java.util.ArrayList;

        specialinvoke $r22.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.pm.Settings: java.util.ArrayList mPendingPackages> = $r22;

        $r23 = new com.android.server.pm.KeySetManagerService;

        $r24 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        specialinvoke $r23.<com.android.server.pm.KeySetManagerService: void <init>(android.util.ArrayMap)>($r24);

        r0.<com.android.server.pm.Settings: com.android.server.pm.KeySetManagerService mKeySetManagerService> = $r23;

        r0.<com.android.server.pm.Settings: java.lang.Object mLock> = r2;

        r0.<com.android.server.pm.Settings: com.android.server.pm.permission.PermissionSettings mPermissions> = r1;

        $r25 = new com.android.server.pm.Settings$RuntimePermissionPersistence;

        specialinvoke $r25.<com.android.server.pm.Settings$RuntimePermissionPersistence: void <init>(com.android.server.pm.Settings,java.lang.Object)>(r0, r2);

        r0.<com.android.server.pm.Settings: com.android.server.pm.Settings$RuntimePermissionPersistence mRuntimePermissionsPersistence> = $r25;

        $r26 = new java.io.File;

        specialinvoke $r26.<java.io.File: void <init>(java.io.File,java.lang.String)>(r40, "system");

        r0.<com.android.server.pm.Settings: java.io.File mSystemDir> = $r26;

        virtualinvoke $r26.<java.io.File: boolean mkdirs()>();

        $r27 = r0.<com.android.server.pm.Settings: java.io.File mSystemDir>;

        $r28 = virtualinvoke $r27.<java.io.File: java.lang.String toString()>();

        staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r28, 509, -1, -1);

        $r29 = new java.io.File;

        $r30 = r0.<com.android.server.pm.Settings: java.io.File mSystemDir>;

        specialinvoke $r29.<java.io.File: void <init>(java.io.File,java.lang.String)>($r30, "packages.xml");

        r0.<com.android.server.pm.Settings: java.io.File mSettingsFilename> = $r29;

        $r31 = new java.io.File;

        $r32 = r0.<com.android.server.pm.Settings: java.io.File mSystemDir>;

        specialinvoke $r31.<java.io.File: void <init>(java.io.File,java.lang.String)>($r32, "packages-backup.xml");

        r0.<com.android.server.pm.Settings: java.io.File mBackupSettingsFilename> = $r31;

        $r33 = new java.io.File;

        $r34 = r0.<com.android.server.pm.Settings: java.io.File mSystemDir>;

        specialinvoke $r33.<java.io.File: void <init>(java.io.File,java.lang.String)>($r34, "packages.list");

        r0.<com.android.server.pm.Settings: java.io.File mPackageListFilename> = $r33;

        staticinvoke <android.os.FileUtils: int setPermissions(java.io.File,int,int,int)>($r33, 416, 1000, 1032);

        $r35 = new java.io.File;

        specialinvoke $r35.<java.io.File: void <init>(java.lang.String)>("/config/sdcardfs");

        r43 = $r35;

        $z1 = virtualinvoke $r35.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        r43 = null;

     label2:
        r0.<com.android.server.pm.Settings: java.io.File mKernelMappingFilename> = r43;

        $r36 = new java.io.File;

        $r37 = r0.<com.android.server.pm.Settings: java.io.File mSystemDir>;

        specialinvoke $r36.<java.io.File: void <init>(java.io.File,java.lang.String)>($r37, "packages-stopped.xml");

        r0.<com.android.server.pm.Settings: java.io.File mStoppedPackagesFilename> = $r36;

        $r38 = new java.io.File;

        $r39 = r0.<com.android.server.pm.Settings: java.io.File mSystemDir>;

        specialinvoke $r38.<java.io.File: void <init>(java.io.File,java.lang.String)>($r39, "packages-stopped-backup.xml");

        r0.<com.android.server.pm.Settings: java.io.File mBackupStoppedPackagesFilename> = $r38;

        return;
    }

    public void <init>(java.util.Map)
    {
        com.android.server.pm.Settings r0;
        java.util.Map r1;
        android.util.ArrayMap $r2, $r4, $r5, $r7, $r8, $r12, $r16, $r17, $r23, $r25;
        android.util.ArraySet $r3;
        android.util.SparseArray $r6, $r9, $r10, $r11, $r14, $r18;
        java.util.ArrayList $r13, $r15, $r21;
        android.util.SparseIntArray $r19;
        java.lang.StringBuilder $r20;
        com.android.server.pm.KeySetManagerService $r22;
        java.lang.Object $r24;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.util.ArrayMap;

        specialinvoke $r2.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages> = $r2;

        $r3 = new android.util.ArraySet;

        specialinvoke $r3.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.pm.Settings: android.util.ArraySet mInstallerPackages> = $r3;

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.pm.Settings: android.util.ArrayMap mKernelMapping> = $r4;

        $r5 = new android.util.ArrayMap;

        specialinvoke $r5.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.pm.Settings: android.util.ArrayMap mDisabledSysPackages> = $r5;

        $r6 = new android.util.SparseArray;

        specialinvoke $r6.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.pm.Settings: android.util.SparseArray mBlockUninstallPackages> = $r6;

        $r7 = new android.util.ArrayMap;

        specialinvoke $r7.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.pm.Settings: android.util.ArrayMap mRestoredIntentFilterVerifications> = $r7;

        $r8 = new android.util.ArrayMap;

        specialinvoke $r8.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.pm.Settings: android.util.ArrayMap mVersion> = $r8;

        $r9 = new android.util.SparseArray;

        specialinvoke $r9.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.pm.Settings: android.util.SparseArray mPreferredActivities> = $r9;

        $r10 = new android.util.SparseArray;

        specialinvoke $r10.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.pm.Settings: android.util.SparseArray mPersistentPreferredActivities> = $r10;

        $r11 = new android.util.SparseArray;

        specialinvoke $r11.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.pm.Settings: android.util.SparseArray mCrossProfileIntentResolvers> = $r11;

        $r12 = new android.util.ArrayMap;

        specialinvoke $r12.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.pm.Settings: android.util.ArrayMap mSharedUsers> = $r12;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.pm.Settings: java.util.ArrayList mAppIds> = $r13;

        $r14 = new android.util.SparseArray;

        specialinvoke $r14.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.pm.Settings: android.util.SparseArray mOtherAppIds> = $r14;

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.pm.Settings: java.util.ArrayList mPastSignatures> = $r15;

        $r16 = new android.util.ArrayMap;

        specialinvoke $r16.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.pm.Settings: android.util.ArrayMap mKeySetRefs> = $r16;

        $r17 = new android.util.ArrayMap;

        specialinvoke $r17.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.pm.Settings: android.util.ArrayMap mRenamedPackages> = $r17;

        $r18 = new android.util.SparseArray;

        specialinvoke $r18.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.pm.Settings: android.util.SparseArray mDefaultBrowserApp> = $r18;

        $r19 = new android.util.SparseIntArray;

        specialinvoke $r19.<android.util.SparseIntArray: void <init>()>();

        r0.<com.android.server.pm.Settings: android.util.SparseIntArray mNextAppLinkGeneration> = $r19;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages> = $r20;

        $r21 = new java.util.ArrayList;

        specialinvoke $r21.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.pm.Settings: java.util.ArrayList mPendingPackages> = $r21;

        $r22 = new com.android.server.pm.KeySetManagerService;

        $r23 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        specialinvoke $r22.<com.android.server.pm.KeySetManagerService: void <init>(android.util.ArrayMap)>($r23);

        r0.<com.android.server.pm.Settings: com.android.server.pm.KeySetManagerService mKeySetManagerService> = $r22;

        $r24 = new java.lang.Object;

        specialinvoke $r24.<java.lang.Object: void <init>()>();

        r0.<com.android.server.pm.Settings: java.lang.Object mLock> = $r24;

        $r25 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        virtualinvoke $r25.<android.util.ArrayMap: void putAll(java.util.Map)>(r1);

        r0.<com.android.server.pm.Settings: java.io.File mSystemDir> = null;

        r0.<com.android.server.pm.Settings: com.android.server.pm.permission.PermissionSettings mPermissions> = null;

        r0.<com.android.server.pm.Settings: com.android.server.pm.Settings$RuntimePermissionPersistence mRuntimePermissionsPersistence> = null;

        r0.<com.android.server.pm.Settings: java.io.File mSettingsFilename> = null;

        r0.<com.android.server.pm.Settings: java.io.File mBackupSettingsFilename> = null;

        r0.<com.android.server.pm.Settings: java.io.File mPackageListFilename> = null;

        r0.<com.android.server.pm.Settings: java.io.File mStoppedPackagesFilename> = null;

        r0.<com.android.server.pm.Settings: java.io.File mBackupStoppedPackagesFilename> = null;

        r0.<com.android.server.pm.Settings: java.io.File mKernelMappingFilename> = null;

        return;
    }

    static java.io.File access$200(com.android.server.pm.Settings, int)
    {
        com.android.server.pm.Settings r0;
        int i0;
        java.io.File $r1;

        r0 := @parameter0: com.android.server.pm.Settings;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.server.pm.Settings: java.io.File getUserRuntimePermissionsFile(int)>(i0);

        return $r1;
    }

    private int acquireAndRegisterNewAppIdLPw(com.android.server.pm.SettingBase)
    {
        com.android.server.pm.Settings r0;
        com.android.server.pm.SettingBase r1;
        int i0, $i1, $i2, i3;
        java.util.ArrayList $r2, $r3, $r4, $r6;
        java.lang.Object $r5;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: com.android.server.pm.SettingBase;

        $r2 = r0.<com.android.server.pm.Settings: java.util.ArrayList mAppIds>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i3 = <com.android.server.pm.Settings: int mFirstAvailableUid>;

     label1:
        if i3 >= i0 goto label3;

        $r4 = r0.<com.android.server.pm.Settings: java.util.ArrayList mAppIds>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        if $r5 != null goto label2;

        $r6 = r0.<com.android.server.pm.Settings: java.util.ArrayList mAppIds>;

        virtualinvoke $r6.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i3, r1);

        $i2 = i3 + 10000;

        return $i2;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        if i0 <= 9999 goto label4;

        return -1;

     label4:
        $r3 = r0.<com.android.server.pm.Settings: java.util.ArrayList mAppIds>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $i1 = i0 + 10000;

        return $i1;
    }

    private void addPackageSettingLPw(com.android.server.pm.PackageSetting, com.android.server.pm.SharedUserSetting)
    {
        com.android.server.pm.Settings r0;
        com.android.server.pm.PackageSetting r1;
        java.lang.String $r2, $r5, $r11, $r20, $r24, $r32, $r39;
        android.util.ArrayMap $r3, $r6, $r38;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        com.android.server.pm.SharedUserSetting $r8, $r21, $r27, $r33, r34;
        java.lang.StringBuilder $r9, $r22;
        com.android.server.pm.SettingBase r37;
        java.lang.Object $r40;
        android.content.pm.IntentFilterVerificationInfo r41;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: com.android.server.pm.PackageSetting;

        r34 := @parameter1: com.android.server.pm.SharedUserSetting;

        $r3 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r2 = r1.<com.android.server.pm.PackageSetting: java.lang.String name>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, r1);

        if r34 == null goto label3;

        $r8 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r8 == null goto label1;

        $r21 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r21 == r34 goto label1;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r24 = r1.<com.android.server.pm.PackageSetting: java.lang.String name>;

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was user ");

        $r27 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r27);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but is now ");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r34);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; I am not changing its files so it will probably fail!");

        $r32 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r32);

        $r33 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        virtualinvoke $r33.<com.android.server.pm.SharedUserSetting: boolean removePackage(com.android.server.pm.PackageSetting)>(r1);

        goto label2;

     label1:
        $i3 = r1.<com.android.server.pm.PackageSetting: int appId>;

        $i2 = r34.<com.android.server.pm.SharedUserSetting: int userId>;

        if $i3 == $i2 goto label2;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r11 = r1.<com.android.server.pm.PackageSetting: java.lang.String name>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was user id ");

        $i4 = r1.<com.android.server.pm.PackageSetting: int appId>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but is now user ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r34);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with id ");

        $i5 = r34.<com.android.server.pm.SharedUserSetting: int userId>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; I am not changing its files so it will probably fail!");

        $r20 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r20);

     label2:
        virtualinvoke r34.<com.android.server.pm.SharedUserSetting: void addPackage(com.android.server.pm.PackageSetting)>(r1);

        r1.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser> = r34;

        $i6 = r34.<com.android.server.pm.SharedUserSetting: int userId>;

        r1.<com.android.server.pm.PackageSetting: int appId> = $i6;

     label3:
        $i7 = r1.<com.android.server.pm.PackageSetting: int appId>;

        r37 = virtualinvoke r0.<com.android.server.pm.Settings: com.android.server.pm.SettingBase getSettingLPr(int)>($i7);

        if r34 != null goto label4;

        if r37 == null goto label5;

        if r37 == r1 goto label5;

        $i1 = r1.<com.android.server.pm.PackageSetting: int appId>;

        specialinvoke r0.<com.android.server.pm.Settings: void replaceAppIdLPw(int,com.android.server.pm.SettingBase)>($i1, r1);

        goto label5;

     label4:
        if r37 == null goto label5;

        if r37 == r34 goto label5;

        $i0 = r1.<com.android.server.pm.PackageSetting: int appId>;

        specialinvoke r0.<com.android.server.pm.Settings: void replaceAppIdLPw(int,com.android.server.pm.SettingBase)>($i0, r34);

     label5:
        $r38 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mRestoredIntentFilterVerifications>;

        $r39 = r1.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r40 = virtualinvoke $r38.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r39);

        r41 = (android.content.pm.IntentFilterVerificationInfo) $r40;

        if r41 == null goto label6;

        $r6 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mRestoredIntentFilterVerifications>;

        $r5 = r1.<com.android.server.pm.PackageSetting: java.lang.String name>;

        virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r5);

        virtualinvoke r1.<com.android.server.pm.PackageSetting: void setIntentFilterVerificationInfo(android.content.pm.IntentFilterVerificationInfo)>(r41);

     label6:
        return;
    }

    private void applyDefaultPreferredActivityLPw(android.content.pm.PackageManagerInternal, android.content.Intent, int, android.content.ComponentName, java.lang.String, android.os.PatternMatcher, android.content.IntentFilter$AuthorityEntry, android.os.PatternMatcher, int)
    {
        com.android.server.pm.Settings r0;
        android.content.Intent r1;
        android.content.ComponentName r2, $r15, $r29, r51, r53;
        android.os.PatternMatcher r3, r5;
        android.content.IntentFilter$AuthorityEntry r4;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, i12, i13, i14;
        java.util.List r6;
        android.content.ComponentName[] r7;
        java.lang.String $r8, $r10, $r11, $r13, $r14, $r16, $r18, $r20, $r21, $r22, $r25, $r26, $r30, $r31, $r33, $r34, $r35, $r36, $r42, $r43, $r46, $r47, r49;
        java.lang.StringBuilder $r9, $r12, $r41, $r45;
        android.content.IntentFilter $r17;
        java.util.Set $r19, $r23;
        boolean $z0, $z1, $z2, z3, z4;
        java.lang.Object $r24, $r27, $r37, $r39;
        android.content.pm.ResolveInfo $r28, $r38, $r40;
        android.content.pm.ApplicationInfo $r32;
        android.content.IntentFilter$MalformedMimeTypeException $r44;
        android.content.pm.PackageManagerInternal r48;
        android.content.pm.ActivityInfo r52;
        java.util.Iterator r55;
        com.android.server.pm.PreferredActivity $r57;
        com.android.server.pm.PreferredIntentResolver $r59;

        r0 := @this: com.android.server.pm.Settings;

        r48 := @parameter0: android.content.pm.PackageManagerInternal;

        r1 := @parameter1: android.content.Intent;

        i9 := @parameter2: int;

        r2 := @parameter3: android.content.ComponentName;

        r49 := @parameter4: java.lang.String;

        r3 := @parameter5: android.os.PatternMatcher;

        r4 := @parameter6: android.content.IntentFilter$AuthorityEntry;

        r5 := @parameter7: android.os.PatternMatcher;

        i0 := @parameter8: int;

        $r8 = virtualinvoke r1.<android.content.Intent: java.lang.String getType()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r6 = virtualinvoke r48.<android.content.pm.PackageManagerInternal: java.util.List queryIntentActivities(android.content.Intent,java.lang.String,int,int,int)>(r1, $r8, i9, $i1, 0);

        if r6 != null goto label01;

        i10 = 0;

        goto label02;

     label01:
        i10 = interfaceinvoke r6.<java.util.List: int size()>();

     label02:
        if i10 > 1 goto label03;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No potential matches found for ");

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" while setting preferred ");

        $r42 = virtualinvoke r2.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageSettings", $r43);

        return;

     label03:
        $i2 = interfaceinvoke r6.<java.util.List: int size()>();

        r7 = newarray (android.content.ComponentName)[$i2];

        i11 = 0;

        z3 = 0;

        i12 = 0;

     label04:
        r51 = null;

        if i11 >= i10 goto label07;

        $r27 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i11);

        $r28 = (android.content.pm.ResolveInfo) $r27;

        r52 = $r28.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r29 = new android.content.ComponentName;

        $r31 = r52.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r30 = r52.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r29.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r31, $r30);

        r7[i11] = $r29;

        $r32 = r52.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i6 = $r32.<android.content.pm.ApplicationInfo: int flags>;

        $i7 = $i6 & 1;

        if $i7 != 0 goto label05;

        i13 = i12;

        z4 = z3;

        $r39 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i11);

        $r40 = (android.content.pm.ResolveInfo) $r39;

        $i8 = $r40.<android.content.pm.ResolveInfo: int match>;

        if $i8 < 0 goto label06;

        r51 = r7[i11];

        goto label07;

     label05:
        i13 = i12;

        z4 = z3;

        $r33 = virtualinvoke r2.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r34 = r52.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $z1 = virtualinvoke $r33.<java.lang.String: boolean equals(java.lang.Object)>($r34);

        if $z1 == 0 goto label06;

        i13 = i12;

        z4 = z3;

        $r35 = virtualinvoke r2.<android.content.ComponentName: java.lang.String getClassName()>();

        $r36 = r52.<android.content.pm.ActivityInfo: java.lang.String name>;

        $z2 = virtualinvoke $r35.<java.lang.String: boolean equals(java.lang.Object)>($r36);

        if $z2 == 0 goto label06;

        $r37 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i11);

        $r38 = (android.content.pm.ResolveInfo) $r37;

        i13 = $r38.<android.content.pm.ResolveInfo: int match>;

        z4 = 1;

     label06:
        i11 = i11 + 1;

        i12 = i13;

        z3 = z4;

        goto label04;

     label07:
        r53 = r51;

        if r51 == null goto label08;

        r53 = r51;

        if i12 >= 0 goto label08;

        r53 = null;

     label08:
        if z3 == 0 goto label21;

        if r53 != null goto label21;

        $r17 = new android.content.IntentFilter;

        specialinvoke $r17.<android.content.IntentFilter: void <init>()>();

        $r18 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        if $r18 == null goto label09;

        $r26 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        virtualinvoke $r17.<android.content.IntentFilter: void addAction(java.lang.String)>($r26);

     label09:
        $r19 = virtualinvoke r1.<android.content.Intent: java.util.Set getCategories()>();

        if $r19 == null goto label11;

        $r23 = virtualinvoke r1.<android.content.Intent: java.util.Set getCategories()>();

        r55 = interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>();

     label10:
        $z0 = interfaceinvoke r55.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r24 = interfaceinvoke r55.<java.util.Iterator: java.lang.Object next()>();

        $r25 = (java.lang.String) $r24;

        virtualinvoke $r17.<android.content.IntentFilter: void addCategory(java.lang.String)>($r25);

        goto label10;

     label11:
        $i4 = i9 & 65536;

        if $i4 == 0 goto label12;

        virtualinvoke $r17.<android.content.IntentFilter: void addCategory(java.lang.String)>("android.intent.category.DEFAULT");

     label12:
        if r49 == null goto label13;

        virtualinvoke $r17.<android.content.IntentFilter: void addDataScheme(java.lang.String)>(r49);

     label13:
        if r3 == null goto label14;

        $r22 = virtualinvoke r3.<android.os.PatternMatcher: java.lang.String getPath()>();

        $i5 = virtualinvoke r3.<android.os.PatternMatcher: int getType()>();

        virtualinvoke $r17.<android.content.IntentFilter: void addDataSchemeSpecificPart(java.lang.String,int)>($r22, $i5);

     label14:
        if r4 == null goto label15;

        virtualinvoke $r17.<android.content.IntentFilter: void addDataAuthority(android.content.IntentFilter$AuthorityEntry)>(r4);

     label15:
        if r5 == null goto label16;

        virtualinvoke $r17.<android.content.IntentFilter: void addDataPath(android.os.PatternMatcher)>(r5);

     label16:
        $r20 = virtualinvoke r1.<android.content.Intent: java.lang.String getType()>();

        if $r20 == null goto label20;

     label17:
        $r21 = virtualinvoke r1.<android.content.Intent: java.lang.String getType()>();

        virtualinvoke $r17.<android.content.IntentFilter: void addDataType(java.lang.String)>($r21);

     label18:
        goto label20;

     label19:
        $r44 := @caughtexception;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Malformed mimetype ");

        $r46 = virtualinvoke r1.<android.content.Intent: java.lang.String getType()>();

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageSettings", $r47);

        goto label20;

     label20:
        $r57 = new com.android.server.pm.PreferredActivity;

        specialinvoke $r57.<com.android.server.pm.PreferredActivity: void <init>(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,boolean)>($r17, i12, r7, r2, 1);

        $r59 = virtualinvoke r0.<com.android.server.pm.Settings: com.android.server.pm.PreferredIntentResolver editPreferredActivitiesLPw(int)>(i0);

        virtualinvoke $r59.<com.android.server.pm.PreferredIntentResolver: void addFilter(java.lang.Object)>($r57);

        goto label26;

     label21:
        if r53 != null goto label25;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No component ");

        $r13 = virtualinvoke r2.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" found setting preferred ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; possible matches are ");

        i14 = 0;

     label22:
        $i3 = lengthof r7;

        if i14 >= $i3 goto label24;

        if i14 <= 0 goto label23;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label23:
        $r15 = r7[i14];

        $r16 = virtualinvoke $r15.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        i14 = i14 + 1;

        goto label22;

     label24:
        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageSettings", $r14);

        goto label26;

     label25:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not setting preferred ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; found third party match ");

        $r10 = virtualinvoke r53.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageSettings", $r11);

     label26:
        return;

        catch android.content.IntentFilter$MalformedMimeTypeException from label17 to label18 with label19;
    }

    private void applyDefaultPreferredActivityLPw(android.content.pm.PackageManagerInternal, android.content.IntentFilter, android.content.ComponentName, int)
    {
        com.android.server.pm.Settings r0;
        android.content.pm.PackageManagerInternal r1;
        android.content.IntentFilter r2;
        android.content.ComponentName r3;
        int i0, $i1, $i2, $i3, i4, i5, i6, i7, i8, i9, i10, i11, i13, i14, i15, i16;
        android.content.Intent $r6, $r9, $r12, $r18, $r24, $r34, $r43;
        java.lang.String $r7, $r23, $r27, $r31, $r32, $r37, $r41, r47, r48, r59, r61;
        android.net.Uri$Builder $r11, $r16, $r21, $r29, $r39;
        boolean $z0, $z1, $z2, z3, z4, z5, z6, z7, z8;
        android.net.Uri $r14, $r19, $r25, $r35, $r44;
        android.os.PatternMatcher r50, r54;
        android.content.IntentFilter$AuthorityEntry r52;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: android.content.pm.PackageManagerInternal;

        r2 := @parameter1: android.content.IntentFilter;

        r3 := @parameter2: android.content.ComponentName;

        i0 := @parameter3: int;

        $r6 = new android.content.Intent;

        specialinvoke $r6.<android.content.Intent: void <init>()>();

        $r7 = virtualinvoke r2.<android.content.IntentFilter: java.lang.String getAction(int)>(0);

        virtualinvoke $r6.<android.content.Intent: android.content.Intent setAction(java.lang.String)>($r7);

        i4 = 0;

        i5 = 786432;

     label01:
        $i1 = virtualinvoke r2.<android.content.IntentFilter: int countCategories()>();

        if i4 >= $i1 goto label04;

        r47 = virtualinvoke r2.<android.content.IntentFilter: java.lang.String getCategory(int)>(i4);

        $z2 = virtualinvoke r47.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.category.DEFAULT");

        if $z2 == 0 goto label02;

        i5 = 65536 | i5;

        goto label03;

     label02:
        virtualinvoke $r6.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>(r47);

     label03:
        i4 = i4 + 1;

        goto label01;

     label04:
        z3 = 1;

        i6 = virtualinvoke r2.<android.content.IntentFilter: int countDataSchemes()>();

        z4 = 0;

        i7 = 0;

     label05:
        if i7 >= i6 goto label17;

        r48 = virtualinvoke r2.<android.content.IntentFilter: java.lang.String getDataScheme(int)>(i7);

        z5 = z4;

        if r48 == null goto label06;

        z5 = z4;

        $z1 = virtualinvoke r48.<java.lang.String: boolean isEmpty()>();

        if $z1 != 0 goto label06;

        z5 = 1;

     label06:
        i8 = virtualinvoke r2.<android.content.IntentFilter: int countDataSchemeSpecificParts()>();

        z6 = 1;

        i9 = 0;

     label07:
        if i9 >= i8 goto label08;

        $r39 = new android.net.Uri$Builder;

        specialinvoke $r39.<android.net.Uri$Builder: void <init>()>();

        virtualinvoke $r39.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>(r48);

        r50 = virtualinvoke r2.<android.content.IntentFilter: android.os.PatternMatcher getDataSchemeSpecificPart(int)>(i9);

        $r41 = virtualinvoke r50.<android.os.PatternMatcher: java.lang.String getPath()>();

        virtualinvoke $r39.<android.net.Uri$Builder: android.net.Uri$Builder opaquePart(java.lang.String)>($r41);

        $r43 = new android.content.Intent;

        specialinvoke $r43.<android.content.Intent: void <init>(android.content.Intent)>($r6);

        $r44 = virtualinvoke $r39.<android.net.Uri$Builder: android.net.Uri build()>();

        virtualinvoke $r43.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r44);

        specialinvoke r0.<com.android.server.pm.Settings: void applyDefaultPreferredActivityLPw(android.content.pm.PackageManagerInternal,android.content.Intent,int,android.content.ComponentName,java.lang.String,android.os.PatternMatcher,android.content.IntentFilter$AuthorityEntry,android.os.PatternMatcher,int)>(r1, $r43, i5, r3, r48, r50, null, null, i0);

        z6 = 0;

        i9 = i9 + 1;

        goto label07;

     label08:
        i10 = virtualinvoke r2.<android.content.IntentFilter: int countDataAuthorities()>();

        i11 = 0;

        z7 = z6;

     label09:
        if i11 >= i10 goto label15;

        r52 = virtualinvoke r2.<android.content.IntentFilter: android.content.IntentFilter$AuthorityEntry getDataAuthority(int)>(i11);

        i13 = virtualinvoke r2.<android.content.IntentFilter: int countDataPaths()>();

        i14 = 0;

        z8 = 1;

     label10:
        if i14 >= i13 goto label12;

        $r29 = new android.net.Uri$Builder;

        specialinvoke $r29.<android.net.Uri$Builder: void <init>()>();

        virtualinvoke $r29.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>(r48);

        $r31 = virtualinvoke r52.<android.content.IntentFilter$AuthorityEntry: java.lang.String getHost()>();

        if $r31 == null goto label11;

        $r37 = virtualinvoke r52.<android.content.IntentFilter$AuthorityEntry: java.lang.String getHost()>();

        virtualinvoke $r29.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>($r37);

     label11:
        r54 = virtualinvoke r2.<android.content.IntentFilter: android.os.PatternMatcher getDataPath(int)>(i14);

        $r32 = virtualinvoke r54.<android.os.PatternMatcher: java.lang.String getPath()>();

        virtualinvoke $r29.<android.net.Uri$Builder: android.net.Uri$Builder path(java.lang.String)>($r32);

        $r34 = new android.content.Intent;

        specialinvoke $r34.<android.content.Intent: void <init>(android.content.Intent)>($r6);

        $r35 = virtualinvoke $r29.<android.net.Uri$Builder: android.net.Uri build()>();

        virtualinvoke $r34.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r35);

        specialinvoke r0.<com.android.server.pm.Settings: void applyDefaultPreferredActivityLPw(android.content.pm.PackageManagerInternal,android.content.Intent,int,android.content.ComponentName,java.lang.String,android.os.PatternMatcher,android.content.IntentFilter$AuthorityEntry,android.os.PatternMatcher,int)>(r1, $r34, i5, r3, r48, null, r52, r54, i0);

        z7 = 0;

        z8 = 0;

        i14 = i14 + 1;

        goto label10;

     label12:
        if z8 == 0 goto label14;

        $r21 = new android.net.Uri$Builder;

        specialinvoke $r21.<android.net.Uri$Builder: void <init>()>();

        virtualinvoke $r21.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>(r48);

        $r23 = virtualinvoke r52.<android.content.IntentFilter$AuthorityEntry: java.lang.String getHost()>();

        if $r23 == null goto label13;

        $r27 = virtualinvoke r52.<android.content.IntentFilter$AuthorityEntry: java.lang.String getHost()>();

        virtualinvoke $r21.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>($r27);

     label13:
        $r24 = new android.content.Intent;

        specialinvoke $r24.<android.content.Intent: void <init>(android.content.Intent)>($r6);

        $r25 = virtualinvoke $r21.<android.net.Uri$Builder: android.net.Uri build()>();

        virtualinvoke $r24.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r25);

        specialinvoke r0.<com.android.server.pm.Settings: void applyDefaultPreferredActivityLPw(android.content.pm.PackageManagerInternal,android.content.Intent,int,android.content.ComponentName,java.lang.String,android.os.PatternMatcher,android.content.IntentFilter$AuthorityEntry,android.os.PatternMatcher,int)>(r1, $r24, i5, r3, r48, null, r52, null, i0);

        z7 = 0;

        goto label14;

     label14:
        i11 = i11 + 1;

        goto label09;

     label15:
        if z7 == 0 goto label16;

        $r16 = new android.net.Uri$Builder;

        specialinvoke $r16.<android.net.Uri$Builder: void <init>()>();

        virtualinvoke $r16.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>(r48);

        $r18 = new android.content.Intent;

        specialinvoke $r18.<android.content.Intent: void <init>(android.content.Intent)>($r6);

        $r19 = virtualinvoke $r16.<android.net.Uri$Builder: android.net.Uri build()>();

        virtualinvoke $r18.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r19);

        specialinvoke r0.<com.android.server.pm.Settings: void applyDefaultPreferredActivityLPw(android.content.pm.PackageManagerInternal,android.content.Intent,int,android.content.ComponentName,java.lang.String,android.os.PatternMatcher,android.content.IntentFilter$AuthorityEntry,android.os.PatternMatcher,int)>(r1, $r18, i5, r3, r48, null, null, null, i0);

     label16:
        z3 = 0;

        i7 = i7 + 1;

        z4 = z5;

        goto label05;

     label17:
        i15 = 0;

     label18:
        $i2 = virtualinvoke r2.<android.content.IntentFilter: int countDataTypes()>();

        if i15 >= $i2 goto label24;

        r59 = virtualinvoke r2.<android.content.IntentFilter: java.lang.String getDataType(int)>(i15);

        if z4 == 0 goto label22;

        $r11 = new android.net.Uri$Builder;

        specialinvoke $r11.<android.net.Uri$Builder: void <init>()>();

        i16 = 0;

     label19:
        $i3 = virtualinvoke r2.<android.content.IntentFilter: int countDataSchemes()>();

        if i16 >= $i3 goto label21;

        r61 = virtualinvoke r2.<android.content.IntentFilter: java.lang.String getDataScheme(int)>(i16);

        if r61 == null goto label20;

        $z0 = virtualinvoke r61.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label20;

        $r12 = new android.content.Intent;

        specialinvoke $r12.<android.content.Intent: void <init>(android.content.Intent)>($r6);

        virtualinvoke $r11.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>(r61);

        $r14 = virtualinvoke $r11.<android.net.Uri$Builder: android.net.Uri build()>();

        virtualinvoke $r12.<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>($r14, r59);

        specialinvoke r0.<com.android.server.pm.Settings: void applyDefaultPreferredActivityLPw(android.content.pm.PackageManagerInternal,android.content.Intent,int,android.content.ComponentName,java.lang.String,android.os.PatternMatcher,android.content.IntentFilter$AuthorityEntry,android.os.PatternMatcher,int)>(r1, $r12, i5, r3, r61, null, null, null, i0);

        goto label20;

     label20:
        i16 = i16 + 1;

        goto label19;

     label21:
        goto label23;

     label22:
        $r9 = new android.content.Intent;

        specialinvoke $r9.<android.content.Intent: void <init>(android.content.Intent)>($r6);

        virtualinvoke $r9.<android.content.Intent: android.content.Intent setType(java.lang.String)>(r59);

        specialinvoke r0.<com.android.server.pm.Settings: void applyDefaultPreferredActivityLPw(android.content.pm.PackageManagerInternal,android.content.Intent,int,android.content.ComponentName,java.lang.String,android.os.PatternMatcher,android.content.IntentFilter$AuthorityEntry,android.os.PatternMatcher,int)>(r1, $r9, i5, r3, null, null, null, null, i0);

     label23:
        z3 = 0;

        i15 = i15 + 1;

        goto label18;

     label24:
        if z3 == 0 goto label25;

        specialinvoke r0.<com.android.server.pm.Settings: void applyDefaultPreferredActivityLPw(android.content.pm.PackageManagerInternal,android.content.Intent,int,android.content.ComponentName,java.lang.String,android.os.PatternMatcher,android.content.IntentFilter$AuthorityEntry,android.os.PatternMatcher,int)>(r1, $r6, i5, r3, null, null, null, null, i0);

     label25:
        return;
    }

    private static java.util.Map createMimeGroups(java.util.Set)
    {
        java.util.Set r0;
        com.android.server.pm.Settings$KeySetToValueMap $r1;
        android.util.ArraySet $r2;

        r0 := @parameter0: java.util.Set;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new com.android.server.pm.Settings$KeySetToValueMap;

        $r2 = new android.util.ArraySet;

        specialinvoke $r2.<android.util.ArraySet: void <init>()>();

        specialinvoke $r1.<com.android.server.pm.Settings$KeySetToValueMap: void <init>(java.util.Set,java.lang.Object)>(r0, $r2);

        return $r1;
    }

    static com.android.server.pm.PackageSetting createNewSetting(java.lang.String, com.android.server.pm.PackageSetting, com.android.server.pm.PackageSetting, java.lang.String, com.android.server.pm.SharedUserSetting, java.io.File, java.io.File, java.lang.String, java.lang.String, java.lang.String, long, int, int, android.os.UserHandle, boolean, boolean, boolean, com.android.server.pm.UserManagerService, java.lang.String[], long[], java.util.Set)
    {
        com.android.server.pm.PackageSetting r0, $r12, $r23, r26, r28;
        com.android.server.pm.SharedUserSetting r1;
        java.io.File r2, r3;
        java.lang.String r4, r5, r6, r25, r27;
        long l0, $l2, $l8;
        int i1, $i3, $i4, $i5, $i6, $i7, i9, i10, $i11, i12;
        android.os.UserHandle r7;
        boolean z0, z1, $z2, $z3, $z4, z5, z6;
        com.android.server.pm.UserManagerService r8;
        java.lang.String[] r9;
        long[] r10;
        java.util.Set r11;
        java.util.Map $r13;
        com.android.server.pm.PackageSignatures $r14, $r15, $r24;
        com.android.server.pm.permission.PermissionsState $r16, $r17;
        java.lang.Object $r18, $r22;
        android.content.pm.UserInfo $r19, r32;
        android.util.ArraySet $r20, $r21;
        java.util.List r30, r33;
        java.util.Iterator r31, r34;

        r25 := @parameter0: java.lang.String;

        r26 := @parameter1: com.android.server.pm.PackageSetting;

        r0 := @parameter2: com.android.server.pm.PackageSetting;

        r27 := @parameter3: java.lang.String;

        r1 := @parameter4: com.android.server.pm.SharedUserSetting;

        r2 := @parameter5: java.io.File;

        r3 := @parameter6: java.io.File;

        r4 := @parameter7: java.lang.String;

        r5 := @parameter8: java.lang.String;

        r6 := @parameter9: java.lang.String;

        l0 := @parameter10: long;

        i9 := @parameter11: int;

        i1 := @parameter12: int;

        r7 := @parameter13: android.os.UserHandle;

        z5 := @parameter14: boolean;

        z0 := @parameter15: boolean;

        z1 := @parameter16: boolean;

        r8 := @parameter17: com.android.server.pm.UserManagerService;

        r9 := @parameter18: java.lang.String[];

        r10 := @parameter19: long[];

        r11 := @parameter20: java.util.Set;

        if r26 == null goto label01;

        $r23 = new com.android.server.pm.PackageSetting;

        specialinvoke $r23.<com.android.server.pm.PackageSetting: void <init>(com.android.server.pm.PackageSetting,java.lang.String)>(r26, r25);

        r28 = $r23;

        $r23.<com.android.server.pm.PackageSetting: java.io.File codePath> = r2;

        $r23.<com.android.server.pm.PackageSetting: java.lang.String legacyNativeLibraryPathString> = r4;

        $r23.<com.android.server.pm.PackageSetting: int pkgFlags> = i9;

        $r23.<com.android.server.pm.PackageSetting: int pkgPrivateFlags> = i1;

        $r23.<com.android.server.pm.PackageSetting: java.lang.String primaryCpuAbiString> = r5;

        $r23.<com.android.server.pm.PackageSetting: java.io.File resourcePath> = r3;

        $r23.<com.android.server.pm.PackageSetting: java.lang.String secondaryCpuAbiString> = r6;

        $r24 = new com.android.server.pm.PackageSignatures;

        specialinvoke $r24.<com.android.server.pm.PackageSignatures: void <init>()>();

        $r23.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures> = $r24;

        $r23.<com.android.server.pm.PackageSetting: long versionCode> = l0;

        $r23.<com.android.server.pm.PackageSetting: java.lang.String[] usesStaticLibraries> = r9;

        $r23.<com.android.server.pm.PackageSetting: long[] usesStaticLibrariesVersions> = r10;

        $l8 = virtualinvoke r2.<java.io.File: long lastModified()>();

        virtualinvoke $r23.<com.android.server.pm.PackageSetting: void setTimeStamp(long)>($l8);

        goto label15;

     label01:
        $r12 = new com.android.server.pm.PackageSetting;

        $r13 = staticinvoke <com.android.server.pm.Settings: java.util.Map createMimeGroups(java.util.Set)>(r11);

        specialinvoke $r12.<com.android.server.pm.PackageSetting: void <init>(java.lang.String,java.lang.String,java.io.File,java.io.File,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,int,int,int,java.lang.String[],long[],java.util.Map)>(r25, r27, r2, r3, r4, r5, r6, null, l0, i9, i1, 0, r9, r10, $r13);

        $l2 = virtualinvoke r2.<java.io.File: long lastModified()>();

        virtualinvoke $r12.<com.android.server.pm.PackageSetting: void setTimeStamp(long)>($l2);

        $r12.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser> = r1;

        $i3 = i9 & 1;

        if $i3 != 0 goto label12;

        r30 = staticinvoke <com.android.server.pm.Settings: java.util.List getAllUsers(com.android.server.pm.UserManagerService)>(r8);

        if r7 == null goto label02;

        i10 = virtualinvoke r7.<android.os.UserHandle: int getIdentifier()>();

        goto label03;

     label02:
        i10 = 0;

     label03:
        if r30 == null goto label11;

        if z5 == 0 goto label11;

        r31 = interfaceinvoke r30.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z3 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label10;

        $r22 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>();

        r32 = (android.content.pm.UserInfo) $r22;

        if r7 == null goto label08;

        if i10 != -1 goto label05;

        $i7 = r32.<android.content.pm.UserInfo: int id>;

        $z4 = staticinvoke <com.android.server.pm.Settings: boolean isAdbInstallDisallowed(com.android.server.pm.UserManagerService,int)>(r8, $i7);

        if $z4 == 0 goto label06;

        goto label05;

     label05:
        $i6 = r32.<android.content.pm.UserInfo: int id>;

        if i10 != $i6 goto label07;

     label06:
        goto label08;

     label07:
        z6 = 0;

        goto label09;

     label08:
        z6 = 1;

     label09:
        $i11 = r32.<android.content.pm.UserInfo: int id>;

        virtualinvoke $r12.<com.android.server.pm.PackageSetting: void setUserState(int,long,int,boolean,boolean,boolean,boolean,int,boolean,android.util.ArrayMap,boolean,boolean,java.lang.String,android.util.ArraySet,android.util.ArraySet,int,int,int,int,java.lang.String)>($i11, 0L, 0, z6, 1, 1, 0, 0, 0, null, z0, z1, null, null, null, 0, 0, 0, 0, null);

        goto label04;

     label10:
        goto label12;

     label11:
        goto label12;

     label12:
        if r1 == null goto label13;

        $i5 = r1.<com.android.server.pm.SharedUserSetting: int userId>;

        $r12.<com.android.server.pm.PackageSetting: int appId> = $i5;

        r28 = $r12;

        goto label15;

     label13:
        r28 = $r12;

        if r0 == null goto label15;

        $r14 = new com.android.server.pm.PackageSignatures;

        $r15 = r0.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        specialinvoke $r14.<com.android.server.pm.PackageSignatures: void <init>(com.android.server.pm.PackageSignatures)>($r15);

        $r12.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures> = $r14;

        $i4 = r0.<com.android.server.pm.PackageSetting: int appId>;

        $r12.<com.android.server.pm.PackageSetting: int appId> = $i4;

        $r16 = virtualinvoke $r12.<com.android.server.pm.PackageSetting: com.android.server.pm.permission.PermissionsState getPermissionsState()>();

        $r17 = virtualinvoke r0.<com.android.server.pm.PackageSetting: com.android.server.pm.permission.PermissionsState getPermissionsState()>();

        virtualinvoke $r16.<com.android.server.pm.permission.PermissionsState: void copyFrom(com.android.server.pm.permission.PermissionsState)>($r17);

        r33 = staticinvoke <com.android.server.pm.Settings: java.util.List getAllUsers(com.android.server.pm.UserManagerService)>(r8);

        r28 = $r12;

        if r33 == null goto label15;

        r34 = interfaceinvoke r33.<java.util.List: java.util.Iterator iterator()>();

     label14:
        r28 = $r12;

        $z2 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label15;

        $r18 = interfaceinvoke r34.<java.util.Iterator: java.lang.Object next()>();

        $r19 = (android.content.pm.UserInfo) $r18;

        i12 = $r19.<android.content.pm.UserInfo: int id>;

        $r20 = virtualinvoke r0.<com.android.server.pm.PackageSetting: android.util.ArraySet getDisabledComponents(int)>(i12);

        virtualinvoke $r12.<com.android.server.pm.PackageSetting: void setDisabledComponentsCopy(android.util.ArraySet,int)>($r20, i12);

        $r21 = virtualinvoke r0.<com.android.server.pm.PackageSetting: android.util.ArraySet getEnabledComponents(int)>(i12);

        virtualinvoke $r12.<com.android.server.pm.PackageSetting: void setEnabledComponentsCopy(android.util.ArraySet,int)>($r21, i12);

        goto label14;

     label15:
        return r28;
    }

    private static void dumpSplitNames(java.io.PrintWriter, com.android.server.pm.parsing.pkg.AndroidPackage)
    {
        java.io.PrintWriter r0;
        java.lang.String[] r1;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String $r2;
        com.android.server.pm.parsing.pkg.AndroidPackage r3;
        int[] r4;

        r0 := @parameter0: java.io.PrintWriter;

        r3 := @parameter1: com.android.server.pm.parsing.pkg.AndroidPackage;

        if r3 != null goto label1;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("unknown");

        goto label6;

     label1:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("[");

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("base");

        $i0 = interfaceinvoke r3.<com.android.server.pm.parsing.pkg.AndroidPackage: int getBaseRevisionCode()>();

        if $i0 == 0 goto label2;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(":");

        $i4 = interfaceinvoke r3.<com.android.server.pm.parsing.pkg.AndroidPackage: int getBaseRevisionCode()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i4);

     label2:
        r1 = interfaceinvoke r3.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String[] getSplitNames()>();

        r4 = interfaceinvoke r3.<com.android.server.pm.parsing.pkg.AndroidPackage: int[] getSplitRevisionCodes()>();

        if r1 == null goto label5;

        i5 = 0;

     label3:
        $i1 = lengthof r1;

        if i5 >= $i1 goto label5;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(", ");

        $r2 = r1[i5];

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r2);

        $i2 = r4[i5];

        if $i2 == 0 goto label4;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(":");

        $i3 = r4[i5];

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i3);

     label4:
        i5 = i5 + 1;

        goto label3;

     label5:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("]");

     label6:
        return;
    }

    private static java.util.List getAllUsers(com.android.server.pm.UserManagerService)
    {
        com.android.server.pm.UserManagerService r0;
        java.util.List $r1;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        $r1 = staticinvoke <com.android.server.pm.Settings: java.util.List getUsers(com.android.server.pm.UserManagerService,boolean)>(r0, 0);

        return $r1;
    }

    private java.io.File getUserPackagesStateBackupFile(int)
    {
        com.android.server.pm.Settings r0;
        int i0;
        java.io.File $r1, $r2;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        $r1 = new java.io.File;

        $r2 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>(i0);

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "package-restrictions-backup.xml");

        return $r1;
    }

    private java.io.File getUserPackagesStateFile(int)
    {
        com.android.server.pm.Settings r0;
        int i0;
        java.io.File $r1, $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        $r1 = new java.io.File;

        $r2 = new java.io.File;

        $r3 = new java.io.File;

        $r4 = r0.<com.android.server.pm.Settings: java.io.File mSystemDir>;

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, "users");

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r5);

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "package-restrictions.xml");

        return $r1;
    }

    private java.io.File getUserRuntimePermissionsFile(int)
    {
        com.android.server.pm.Settings r0;
        int i0;
        java.io.File $r1, $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        $r1 = new java.io.File;

        $r2 = new java.io.File;

        $r3 = new java.io.File;

        $r4 = r0.<com.android.server.pm.Settings: java.io.File mSystemDir>;

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, "users");

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r5);

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "runtime-permissions.xml");

        return $r1;
    }

    private static java.util.List getUsers(com.android.server.pm.UserManagerService, boolean)
    {
        boolean z0;
        long l0;
        java.lang.NullPointerException $r0;
        java.lang.Throwable $r1;
        com.android.server.pm.UserManagerService r2;
        java.util.List r3;

        r2 := @parameter0: com.android.server.pm.UserManagerService;

        z0 := @parameter1: boolean;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r3 = virtualinvoke r2.<com.android.server.pm.UserManagerService: java.util.List getUsers(boolean)>(z0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return r3;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r1;

     label4:
        $r0 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return null;

        catch java.lang.NullPointerException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private static void invalidatePackageCache()
    {
        staticinvoke <android.content.pm.PackageManager: void invalidatePackageInfoCache()>();

        staticinvoke <android.app.compat.ChangeIdStateCache: void invalidate()>();

        return;
    }

    static boolean isAdbInstallDisallowed(com.android.server.pm.UserManagerService, int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<com.android.server.pm.UserManagerService: boolean hasUserRestriction(java.lang.String,int)>("no_debugging_features", i0);

        return $z0;
    }

    private static java.lang.String permissionFlagsToString(java.lang.String, int)
    {
        java.lang.String r0, $r2, $r3;
        int i0, $i1, i2;
        java.lang.StringBuilder $r6, r9, r10;

        r0 := @parameter0: java.lang.String;

        i2 := @parameter1: int;

        r9 = null;

     label1:
        if i2 == 0 goto label4;

        r10 = r9;

        if r9 != null goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        r10 = $r6;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[ ");

     label2:
        $i1 = staticinvoke <java.lang.Integer: int numberOfTrailingZeros(int)>(i2);

        i0 = 1 << $i1;

        i2 = i2 & i0;

        $r3 = staticinvoke <android.content.pm.PackageManager: java.lang.String permissionFlagToString(int)>(i0);

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        if i2 == 0 goto label3;

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(124);

     label3:
        r9 = r10;

        goto label1;

     label4:
        if r9 == null goto label5;

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r2 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label5:
        return "";
    }

    static void printFlags(java.io.PrintWriter, int, java.lang.Object[])
    {
        java.io.PrintWriter r0;
        int i0, $i1, $i2, $i3, $i4, i5;
        java.lang.Object[] r1;
        java.lang.Object $r2, $r4;
        java.lang.Integer $r3;

        r0 := @parameter0: java.io.PrintWriter;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object[];

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("[ ");

        i5 = 0;

     label1:
        $i1 = lengthof r1;

        if i5 >= $i1 goto label3;

        $r2 = r1[i5];

        $r3 = (java.lang.Integer) $r2;

        $i2 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $i3 = i0 & $i2;

        if $i3 == 0 goto label2;

        $i4 = i5 + 1;

        $r4 = r1[$i4];

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.Object)>($r4);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" ");

     label2:
        i5 = i5 + 2;

        goto label1;

     label3:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("]");

        return;
    }

    private android.util.ArraySet readComponentsLPr(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlPullParser r1;
        int i0, i1, $i2;
        java.lang.String r2, $r3;
        boolean $z0;
        android.util.ArraySet $r4, r5, r6;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r5 = null;

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 == 1 goto label6;

        if i1 != 3 goto label2;

        $i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 <= i0 goto label6;

     label2:
        if i1 == 3 goto label1;

        if i1 != 4 goto label3;

        goto label1;

     label3:
        $r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label1;

        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        r6 = r5;

        if r2 == null goto label5;

        r6 = r5;

        if r5 != null goto label4;

        $r4 = new android.util.ArraySet;

        specialinvoke $r4.<android.util.ArraySet: void <init>()>();

        r6 = $r4;

     label4:
        virtualinvoke r6.<android.util.ArraySet: boolean add(java.lang.Object)>(r2);

     label5:
        r5 = r6;

        goto label1;

     label6:
        return r5;
    }

    private void readCrossProfileIntentFiltersLPw(org.xmlpull.v1.XmlPullParser, int) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlPullParser r1;
        int i0, i1, i2, $i3;
        java.lang.String r2, $r6;
        boolean $z0;
        java.lang.StringBuilder $r3;
        com.android.server.pm.CrossProfileIntentFilter $r7;
        com.android.server.pm.CrossProfileIntentResolver $r8;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i0 := @parameter1: int;

        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i2 == 1 goto label6;

        if i2 != 3 goto label2;

        $i3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i3 <= i1 goto label6;

     label2:
        if i2 == 3 goto label1;

        if i2 != 4 goto label3;

        goto label1;

     label3:
        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label4;

        $r7 = new com.android.server.pm.CrossProfileIntentFilter;

        specialinvoke $r7.<com.android.server.pm.CrossProfileIntentFilter: void <init>(org.xmlpull.v1.XmlPullParser)>(r1);

        $r8 = virtualinvoke r0.<com.android.server.pm.Settings: com.android.server.pm.CrossProfileIntentResolver editCrossProfileIntentResolverLPw(int)>(i0);

        virtualinvoke $r8.<com.android.server.pm.CrossProfileIntentResolver: void addFilter(java.lang.Object)>($r7);

        goto label5;

     label4:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under crossProfile-intent-filters: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r6);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label5:
        goto label1;

     label6:
        return;
    }

    private void readDefaultPreferredActivitiesLPw(org.xmlpull.v1.XmlPullParser, int) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlPullParser r1;
        int i0, i1, i2, $i3;
        android.content.pm.PackageManagerInternal r2;
        java.lang.Object $r4;
        java.lang.String $r5, $r8, $r10, $r13, $r17, $r20, $r22;
        boolean $z0;
        java.lang.StringBuilder $r6, $r14;
        com.android.server.pm.PreferredActivity $r11;
        com.android.server.pm.PreferredComponent $r12, $r16, $r23;
        android.content.ComponentName $r24;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i0 := @parameter1: int;

        $r4 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/content/pm/PackageManagerInternal;");

        r2 = (android.content.pm.PackageManagerInternal) $r4;

        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i2 == 1 goto label8;

        if i2 != 3 goto label2;

        $i3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i3 <= i1 goto label8;

     label2:
        if i2 == 3 goto label1;

        if i2 != 4 goto label3;

        goto label1;

     label3:
        $r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label6;

        $r11 = new com.android.server.pm.PreferredActivity;

        specialinvoke $r11.<com.android.server.pm.PreferredActivity: void <init>(org.xmlpull.v1.XmlPullParser)>(r1);

        $r12 = $r11.<com.android.server.pm.PreferredActivity: com.android.server.pm.PreferredComponent mPref>;

        $r13 = virtualinvoke $r12.<com.android.server.pm.PreferredComponent: java.lang.String getParseError()>();

        if $r13 != null goto label4;

        $r23 = $r11.<com.android.server.pm.PreferredActivity: com.android.server.pm.PreferredComponent mPref>;

        $r24 = $r23.<com.android.server.pm.PreferredComponent: android.content.ComponentName mComponent>;

        specialinvoke r0.<com.android.server.pm.Settings: void applyDefaultPreferredActivityLPw(android.content.pm.PackageManagerInternal,android.content.IntentFilter,android.content.ComponentName,int)>(r2, $r11, $r24, i0);

        goto label5;

     label4:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: <preferred-activity> ");

        $r16 = $r11.<com.android.server.pm.PreferredActivity: com.android.server.pm.PreferredComponent mPref>;

        $r17 = virtualinvoke $r16.<com.android.server.pm.PreferredComponent: java.lang.String getParseError()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r20 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r22);

     label5:
        goto label7;

     label6:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <preferred-activities>: ");

        $r8 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r10);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label7:
        goto label1;

     label8:
        return;
    }

    private void readDisabledComponentsLPw(com.android.server.pm.PackageSettingBase, org.xmlpull.v1.XmlPullParser, int) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.pm.Settings r0;
        com.android.server.pm.PackageSettingBase r1;
        org.xmlpull.v1.XmlPullParser r2;
        int i0, i1, i2, $i3;
        java.lang.String $r3, $r6, $r8, $r11, $r13, $r14, r15;
        boolean $z0;
        java.lang.StringBuilder $r4, $r9;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: com.android.server.pm.PackageSettingBase;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        i0 := @parameter2: int;

        i1 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        i2 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i2 == 1 goto label8;

        if i2 != 3 goto label2;

        $i3 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i3 <= i1 goto label8;

     label2:
        if i2 == 3 goto label1;

        if i2 != 4 goto label3;

        goto label1;

     label3:
        $r3 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label6;

        r15 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        if r15 == null goto label4;

        $r14 = virtualinvoke r15.<java.lang.String: java.lang.String intern()>();

        virtualinvoke r1.<com.android.server.pm.PackageSettingBase: void addDisabledComponent(java.lang.String,int)>($r14, i0);

        goto label5;

     label4:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: <disabled-components> has no name at ");

        $r11 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r13);

     label5:
        goto label7;

     label6:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <disabled-components>: ");

        $r6 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r8);

     label7:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r2);

        goto label1;

     label8:
        return;
    }

    private void readDisabledSysPackageLPw(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r3, r4, r5, r6, r7, $r14, $r15, $r18, $r20, r27, r28, r29, r30, r33, r35, r37, r39, r41, r42;
        com.android.server.pm.PackageSetting $r9;
        java.io.File $r10, $r11;
        byte $b0, b8;
        int $i1, $i2, i10, i11, i12, i13;
        android.util.ArrayMap $r12;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r16;
        com.android.server.pm.permission.PermissionsState $r21;
        long $l3, $l4, $l5, $l6, l7;
        java.lang.Throwable $r22, $r23, $r24, $r25, $r26;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "realName");

        r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "codePath");

        r27 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "resourcePath");

        r28 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "requiredCpuAbi");

        r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "nativeLibraryPath");

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "parentPackageName");

        r29 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "primaryCpuAbi");

        r6 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "secondaryCpuAbi");

        r7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "cpuAbiOverride");

        if r29 != null goto label01;

        if r28 == null goto label01;

        goto label02;

     label01:
        r28 = r29;

     label02:
        if r27 != null goto label03;

        r27 = r4;

        goto label03;

     label03:
        r30 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "version");

        if r30 == null goto label07;

     label04:
        l7 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r30);

     label05:
        goto label08;

     label06:
        $r23 := @caughtexception;

     label07:
        l7 = 0L;

     label08:
        $z2 = virtualinvoke r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("/priv-app/");

        if $z2 == 0 goto label09;

        b8 = 0 | 8;

        goto label10;

     label09:
        b8 = 0;

     label10:
        $r9 = new com.android.server.pm.PackageSetting;

        $r10 = new java.io.File;

        specialinvoke $r10.<java.io.File: void <init>(java.lang.String)>(r4);

        $r11 = new java.io.File;

        specialinvoke $r11.<java.io.File: void <init>(java.lang.String)>(r27);

        $b0 = 0 | 1;

        specialinvoke $r9.<com.android.server.pm.PackageSetting: void <init>(java.lang.String,java.lang.String,java.io.File,java.io.File,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,int,int,int,java.lang.String[],long[],java.util.Map)>(r2, r3, $r10, $r11, r5, r28, r6, r7, l7, $b0, b8, 0, null, null, null);

        r33 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "ft");

        if r33 == null goto label15;

     label11:
        $l6 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(r33, 16);

        virtualinvoke $r9.<com.android.server.pm.PackageSetting: void setTimeStamp(long)>($l6);

     label12:
        goto label14;

     label13:
        $r25 := @caughtexception;

     label14:
        goto label19;

     label15:
        r35 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "ts");

        if r35 == null goto label19;

     label16:
        $l5 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r35);

        virtualinvoke $r9.<com.android.server.pm.PackageSetting: void setTimeStamp(long)>($l5);

     label17:
        goto label19;

     label18:
        $r26 := @caughtexception;

     label19:
        r37 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "it");

        if r37 == null goto label23;

     label20:
        $l4 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(r37, 16);

        $r9.<com.android.server.pm.PackageSetting: long firstInstallTime> = $l4;

     label21:
        goto label23;

     label22:
        $r24 := @caughtexception;

     label23:
        r39 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "ut");

        if r39 == null goto label27;

     label24:
        $l3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(r39, 16);

        $r9.<com.android.server.pm.PackageSetting: long lastUpdateTime> = $l3;

     label25:
        goto label27;

     label26:
        $r22 := @caughtexception;

     label27:
        r41 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "userId");

        if r41 == null goto label28;

        i10 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r41);

        goto label29;

     label28:
        i10 = 0;

     label29:
        $r9.<com.android.server.pm.PackageSetting: int appId> = i10;

        $i1 = $r9.<com.android.server.pm.PackageSetting: int appId>;

        if $i1 > 0 goto label31;

        r42 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "sharedUserId");

        i11 = 0;

        if r42 == null goto label30;

        i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r42);

     label30:
        $r9.<com.android.server.pm.PackageSetting: int appId> = i11;

     label31:
        i12 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label32:
        i13 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i13 == 1 goto label37;

        if i13 != 3 goto label33;

        $i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 <= i12 goto label37;

     label33:
        if i13 == 3 goto label32;

        if i13 != 4 goto label34;

        goto label32;

     label34:
        $r14 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>("perms");

        if $z0 == 0 goto label35;

        $r21 = virtualinvoke $r9.<com.android.server.pm.PackageSetting: com.android.server.pm.permission.PermissionsState getPermissionsState()>();

        virtualinvoke r0.<com.android.server.pm.Settings: void readInstallPermissionsLPr(org.xmlpull.v1.XmlPullParser,com.android.server.pm.permission.PermissionsState)>(r1, $r21);

        goto label32;

     label35:
        $r15 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>("uses-static-lib");

        if $z1 == 0 goto label36;

        virtualinvoke r0.<com.android.server.pm.Settings: void readUsesStaticLibLPw(org.xmlpull.v1.XmlPullParser,com.android.server.pm.PackageSetting)>(r1, $r9);

        goto label32;

     label36:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <updated-package>: ");

        $r18 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r20);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label32;

     label37:
        $r12 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mDisabledSysPackages>;

        virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r9);

        return;

        catch java.lang.NumberFormatException from label04 to label05 with label06;
        catch java.lang.NumberFormatException from label11 to label12 with label13;
        catch java.lang.NumberFormatException from label16 to label17 with label18;
        catch java.lang.NumberFormatException from label20 to label21 with label22;
        catch java.lang.NumberFormatException from label24 to label25 with label26;
    }

    private void readDomainVerificationLPw(org.xmlpull.v1.XmlPullParser, com.android.server.pm.PackageSettingBase) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlPullParser r1;
        com.android.server.pm.PackageSettingBase r2;
        android.content.pm.IntentFilterVerificationInfo $r3;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: com.android.server.pm.PackageSettingBase;

        $r3 = new android.content.pm.IntentFilterVerificationInfo;

        specialinvoke $r3.<android.content.pm.IntentFilterVerificationInfo: void <init>(org.xmlpull.v1.XmlPullParser)>(r1);

        virtualinvoke r2.<com.android.server.pm.PackageSettingBase: void setIntentFilterVerificationInfo(android.content.pm.IntentFilterVerificationInfo)>($r3);

        return;
    }

    private void readEnabledComponentsLPw(com.android.server.pm.PackageSettingBase, org.xmlpull.v1.XmlPullParser, int) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.pm.Settings r0;
        com.android.server.pm.PackageSettingBase r1;
        org.xmlpull.v1.XmlPullParser r2;
        int i0, i1, i2, $i3;
        java.lang.String $r3, $r6, $r8, $r11, $r13, $r14, r15;
        boolean $z0;
        java.lang.StringBuilder $r4, $r9;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: com.android.server.pm.PackageSettingBase;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        i0 := @parameter2: int;

        i1 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        i2 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i2 == 1 goto label8;

        if i2 != 3 goto label2;

        $i3 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i3 <= i1 goto label8;

     label2:
        if i2 == 3 goto label1;

        if i2 != 4 goto label3;

        goto label1;

     label3:
        $r3 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label6;

        r15 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        if r15 == null goto label4;

        $r14 = virtualinvoke r15.<java.lang.String: java.lang.String intern()>();

        virtualinvoke r1.<com.android.server.pm.PackageSettingBase: void addEnabledComponent(java.lang.String,int)>($r14, i0);

        goto label5;

     label4:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: <enabled-components> has no name at ");

        $r11 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r13);

     label5:
        goto label7;

     label6:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <enabled-components>: ");

        $r6 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r8);

     label7:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r2);

        goto label1;

     label8:
        return;
    }

    private java.util.Map readMimeGroupLPw(org.xmlpull.v1.XmlPullParser, java.util.Map) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, $r4, $r7, $r9, r17;
        int i0, i1, $i2;
        java.lang.Object $r3, r14;
        boolean $z0;
        java.util.Map r13, r22, r23, r24;
        android.util.ArraySet r15, r16, r20;
        android.util.ArrayMap r19;
        java.lang.StringBuilder r21;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r13 := @parameter1: java.util.Map;

        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        if r2 != null goto label01;

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        return r13;

     label01:
        r14 = r13;

        if r13 != null goto label02;

        r19 = new android.util.ArrayMap;

        specialinvoke r19.<android.util.ArrayMap: void <init>()>();

        r14 = r19;

     label02:
        r22 = (java.util.Map) r14;

        $r3 = interfaceinvoke r22.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r15 = (android.util.ArraySet) $r3;

        r16 = r15;

        if r15 != null goto label03;

        r20 = new android.util.ArraySet;

        specialinvoke r20.<android.util.ArraySet: void <init>()>();

        r16 = r20;

        r23 = (java.util.Map) r14;

        interfaceinvoke r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r20);

     label03:
        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label04:
        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 == 1 goto label10;

        if i1 != 3 goto label05;

        $i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 <= i0 goto label10;

     label05:
        if i1 == 3 goto label04;

        if i1 != 4 goto label06;

        goto label04;

     label06:
        $r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("mime-type");

        if $z0 == 0 goto label08;

        r17 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        if r17 == null goto label07;

        virtualinvoke r16.<android.util.ArraySet: boolean add(java.lang.Object)>(r17);

     label07:
        goto label09;

     label08:
        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <mime-group>: ");

        $r7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r9);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label09:
        goto label04;

     label10:
        r24 = (java.util.Map) r14;

        return r24;
    }

    private void readPackageLPw(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r3, r4, $r5, $r6, $r7, $r8, $r9, $r10, $r12, $r13, $r20, $r31, $r33, $r47, $r49, $r50, $r51, $r52, $r53, $r60, $r61, r112, r113, r114, r115, r116, r117, r118, r119, r120, r121, r122, r124, r127, r128, r129, r130, r131, r132, r133, r134, r135, r136, r137, r138, r139, r140, r141, r142, r143, r144, r145, r146, r147, r148, r149, r150, r151, r152, r153, r154, r157, r158, r159, r160, r161, r162, r163, r165, r166, r169, r170, r171, r172, r175, r179, r186, r190, r216, r236, r245, r249, r250, r252, r253, r254, r255, r257, r258, $r282, $r283, r290, r292, r294;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19;
        java.lang.StringBuilder $r11, $r59, r178, r185, r194, r235, r244, $r280;
        java.util.Map $r14, $r15;
        com.android.server.pm.PackageSignatures $r16, $r46;
        java.util.ArrayList $r17, $r45, $r48;
        com.android.server.pm.InstallSource $r18, $r19, r289;
        android.util.ArrayMap $r21, $r24, $r28, $r34, $r37, $r41;
        java.lang.Long $r22, $r25, $r29, $r35, $r38, $r42;
        java.lang.Object $r23, $r36;
        java.lang.Integer $r26, $r30, $r39, $r43, r293, r295;
        com.android.server.pm.PackageKeySetData $r27, $r32, $r40;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i14, i16, i17, i18, i20, i23, i24, i25, i31, i32, i35, i36, i37, i38;
        com.android.server.pm.permission.PermissionsState $r44;
        java.lang.Throwable $r54, $r55, $r56, $r57, $r58, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r101, $r102, $r103, $r104, $r105, $r106, $r107, $r108, $r109, $r110, $r111;
        long l13, l15, l27, l28, l29, l30, l39, l40, l41;
        com.android.server.pm.PackageSetting r164, r180, r193, r215, r247;
        byte b21, b22, b26;
        java.io.File r191, r192, r217, r218;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r112 = null;

        r113 = null;

        r114 = null;

        r115 = null;

        r116 = null;

        r117 = null;

        r118 = null;

        l13 = 0L;

        r119 = null;

        r120 = null;

     label001:
        r121 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

     label002:
        r112 = r121;

     label003:
        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "realName");

     label004:
        r122 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "userId");

     label005:
        r117 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "uidError");

     label006:
        r118 = r117;

     label007:
        r124 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "sharedUserId");

     label008:
        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "codePath");

     label009:
        r127 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "resourcePath");

     label010:
        r128 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "requiredCpuAbi");

     label011:
        r129 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "nativeLibraryPath");

     label012:
        r130 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "primaryCpuAbi");

     label013:
        r120 = r130;

     label014:
        r131 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "secondaryCpuAbi");

     label015:
        r132 = r131;

     label016:
        r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "cpuAbiOverride");

     label017:
        r133 = null;

        r134 = null;

        r135 = null;

        r136 = null;

        r137 = null;

        r138 = null;

        r139 = null;

        i14 = -1;

        r140 = null;

        r141 = r130;

     label018:
        r142 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "updateAvailable");

     label019:
        r133 = null;

        r134 = null;

        r135 = null;

        r136 = null;

        r137 = null;

        r138 = null;

        r139 = r142;

        i14 = -1;

        r140 = null;

        r141 = r130;

     label020:
        r143 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "forceQueryable");

     label021:
        r144 = r130;

        if r130 != null goto label022;

        r144 = r130;

        if r128 == null goto label022;

        r144 = r128;

     label022:
        r133 = null;

        r134 = null;

        r135 = null;

        r136 = null;

        r137 = null;

        r138 = null;

        r139 = r142;

        i14 = -1;

        r140 = r143;

        r141 = r144;

     label023:
        r145 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "version");

     label024:
        l15 = 0L;

        if r145 == null goto label028;

     label025:
        l15 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r145);

     label026:
        goto label028;

     label027:
        $r92 := @caughtexception;

        l15 = 0L;

     label028:
        r133 = null;

        r134 = null;

        r135 = null;

        r136 = null;

        r137 = null;

        r138 = null;

        r139 = r142;

        i14 = -1;

        r140 = r143;

        r141 = r144;

     label029:
        r146 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "installer");

     label030:
        r133 = r146;

        r134 = null;

        r135 = null;

        r136 = null;

        r137 = null;

        r138 = null;

        r139 = r142;

        i14 = -1;

        r140 = r143;

        r141 = r144;

     label031:
        r147 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "isOrphaned");

     label032:
        r133 = r146;

        r134 = r147;

        r135 = null;

        r136 = null;

        r137 = null;

        r138 = null;

        r139 = r142;

        i14 = -1;

        r140 = r143;

        r141 = r144;

     label033:
        r148 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "installInitiator");

     label034:
        r133 = r146;

        r134 = r147;

        r135 = null;

        r136 = r148;

        r137 = null;

        r138 = null;

        r139 = r142;

        i14 = -1;

        r140 = r143;

        r141 = r144;

     label035:
        r149 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "installOriginator");

     label036:
        r133 = r146;

        r134 = r147;

        r135 = r149;

        r136 = r148;

        r137 = null;

        r138 = null;

        r139 = r142;

        i14 = -1;

        r140 = r143;

        r141 = r144;

     label037:
        r150 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "installInitiatorUninstalled");

     label038:
        r133 = r146;

        r134 = r147;

        r135 = r149;

        r136 = r148;

        r137 = r150;

        r138 = null;

        r139 = r142;

        i14 = -1;

        r140 = r143;

        r141 = r144;

     label039:
        r151 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "volumeUuid");

     label040:
        r133 = r146;

        r134 = r147;

        r135 = r149;

        r136 = r148;

        r137 = r150;

        r138 = r151;

        r139 = r142;

        i14 = -1;

        r140 = r143;

        r141 = r144;

     label041:
        r152 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "categoryHint");

     label042:
        i16 = -1;

        if r152 == null goto label046;

     label043:
        i16 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r152);

     label044:
        goto label046;

     label045:
        $r84 := @caughtexception;

        i16 = -1;

     label046:
        r133 = r146;

        r134 = r147;

        r135 = r149;

        r136 = r148;

        r137 = r150;

        r138 = r151;

        r139 = r142;

        i14 = i16;

        r140 = r143;

        r141 = r144;

     label047:
        r153 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "publicFlags");

     label048:
        if r153 == null goto label059;

     label049:
        i17 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r153);

     label050:
        goto label052;

     label051:
        $r107 := @caughtexception;

        i17 = 0;

     label052:
        r154 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "privateFlags");

     label053:
        if r154 == null goto label057;

     label054:
        i18 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r154);

     label055:
        goto label085;

     label056:
        $r106 := @caughtexception;

     label057:
        i18 = 0;

        goto label085;

     label058:
        $r109 := @caughtexception;

        r114 = r129;

        r113 = r122;

        r157 = r144;

        r158 = r131;

        r159 = r146;

        r160 = r147;

        r161 = r149;

        r115 = r148;

        r116 = r150;

        r162 = r151;

        r163 = r142;

        r164 = null;

        r119 = r143;

        goto label208;

     label059:
        r133 = r146;

        r134 = r147;

        r135 = r149;

        r136 = r148;

        r137 = r150;

        r138 = r151;

        r139 = r142;

        i14 = i16;

        r140 = r143;

        r141 = r144;

     label060:
        r165 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "flags");

     label061:
        if r165 == null goto label076;

     label062:
        i20 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r165);

     label063:
        goto label065;

     label064:
        $r96 := @caughtexception;

        i20 = 0;

     label065:
        b21 = 0;

     label066:
        $i5 = <com.android.server.pm.Settings: int PRE_M_APP_INFO_FLAG_HIDDEN>;

        $i6 = i20 & $i5;

        if $i6 == 0 goto label068;

     label067:
        b21 = 1;

     label068:
        b22 = b21;

     label069:
        $i7 = <com.android.server.pm.Settings: int PRE_M_APP_INFO_FLAG_CANT_SAVE_STATE>;

        $i8 = i20 & $i7;

        if $i8 == 0 goto label071;

     label070:
        b22 = b21 | 2;

     label071:
        i18 = b22;

     label072:
        $i9 = <com.android.server.pm.Settings: int PRE_M_APP_INFO_FLAG_PRIVILEGED>;

        $i10 = i20 & $i9;

        if $i10 == 0 goto label074;

     label073:
        i18 = b22 | 8;

     label074:
        i23 = <com.android.server.pm.Settings: int PRE_M_APP_INFO_FLAG_HIDDEN>;

        i24 = <com.android.server.pm.Settings: int PRE_M_APP_INFO_FLAG_CANT_SAVE_STATE>;

        i25 = <com.android.server.pm.Settings: int PRE_M_APP_INFO_FLAG_PRIVILEGED>;

     label075:
        $i11 = i23 | i24;

        $i12 = $i11 | i25;

        i17 = i20 & $i12;

        goto label085;

     label076:
        r133 = r146;

        r134 = r147;

        r135 = r149;

        r136 = r148;

        r137 = r150;

        r138 = r151;

        r139 = r142;

        i14 = i16;

        r140 = r143;

        r141 = r144;

     label077:
        r166 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "system");

     label078:
        if r166 == null goto label084;

     label079:
        $r53 = "true";

        z0 = virtualinvoke $r53.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r166);

     label080:
        if z0 == 0 goto label081;

        b26 = 1;

        goto label082;

     label081:
        b26 = 0;

     label082:
        i17 = 0 | b26;

        i18 = 0;

        goto label085;

     label083:
        $r101 := @caughtexception;

        r114 = r129;

        r113 = r122;

        r157 = r144;

        r158 = r131;

        r159 = r146;

        r160 = r147;

        r161 = r149;

        r115 = r148;

        r116 = r150;

        r162 = r151;

        r163 = r142;

        r164 = null;

        r119 = r143;

        goto label208;

     label084:
        i17 = 1;

        i18 = 0;

     label085:
        r133 = r146;

        r134 = r147;

        r135 = r149;

        r136 = r148;

        r137 = r150;

        r138 = r151;

        r139 = r142;

        i14 = i16;

        r140 = r143;

        r141 = r144;

     label086:
        r169 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "ft");

     label087:
        if r169 == null goto label092;

     label088:
        l27 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(r169, 16);

     label089:
        l13 = l27;

        goto label091;

     label090:
        $r88 := @caughtexception;

     label091:
        l28 = l13;

        goto label098;

     label092:
        r170 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "ts");

     label093:
        if r170 == null goto label097;

     label094:
        l28 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r170);

     label095:
        goto label098;

     label096:
        $r73 := @caughtexception;

     label097:
        l28 = 0L;

     label098:
        r171 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "it");

     label099:
        if r171 == null goto label103;

     label100:
        l29 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(r171, 16);

     label101:
        goto label104;

     label102:
        $r87 := @caughtexception;

     label103:
        l29 = 0L;

     label104:
        r172 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "ut");

     label105:
        if r172 == null goto label109;

     label106:
        l30 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(r172, 16);

     label107:
        goto label110;

     label108:
        $r100 := @caughtexception;

     label109:
        l30 = 0L;

     label110:
        if r122 == null goto label114;

     label111:
        i31 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r122);

     label112:
        goto label115;

     label113:
        $r56 := @caughtexception;

        r114 = r129;

        r113 = r122;

        r157 = r144;

        r158 = r131;

        r159 = r146;

        r160 = r147;

        r161 = r149;

        r115 = r148;

        r116 = r150;

        r162 = r151;

        r163 = r142;

        r164 = null;

        r119 = r143;

        goto label208;

     label114:
        i31 = 0;

     label115:
        if r124 == null goto label118;

     label116:
        i32 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r124);

     label117:
        goto label119;

     label118:
        i32 = 0;

     label119:
        if r127 != null goto label120;

        r127 = r3;

        goto label120;

     label120:
        if r2 == null goto label124;

     label121:
        r175 = virtualinvoke r2.<java.lang.String: java.lang.String intern()>();

     label122:
        goto label125;

     label123:
        $r63 := @caughtexception;

        r114 = r129;

        r113 = r122;

        r157 = r144;

        r158 = r131;

        r159 = r146;

        r160 = r147;

        r161 = r149;

        r115 = r148;

        r116 = r150;

        r162 = r151;

        r163 = r142;

        r164 = null;

        r119 = r143;

        goto label208;

     label124:
        r175 = r2;

     label125:
        if r121 != null goto label132;

     label126:
        r178 = new java.lang.StringBuilder;

        specialinvoke r178.<java.lang.StringBuilder: void <init>()>();

     label127:
        virtualinvoke r178.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: <package> has no name at ");

        $r52 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke r178.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        r179 = virtualinvoke r178.<java.lang.StringBuilder: java.lang.String toString()>();

     label128:
        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, r179);

     label129:
        r180 = null;

        goto label187;

     label130:
        $r108 := @caughtexception;

        r114 = r129;

        r113 = r122;

        r157 = r144;

        r158 = r131;

        r159 = r146;

        r160 = r147;

        r161 = r149;

        r115 = r148;

        r116 = r150;

        r162 = r151;

        r163 = r142;

        r164 = null;

        r119 = r143;

        goto label208;

     label131:
        $r77 := @caughtexception;

        r114 = r129;

        r113 = r122;

        r157 = r144;

        r158 = r131;

        r159 = r146;

        r160 = r147;

        r161 = r149;

        r115 = r148;

        r116 = r150;

        r162 = r151;

        r163 = r142;

        r164 = null;

        r119 = r143;

        goto label208;

     label132:
        if r3 != null goto label137;

     label133:
        r185 = new java.lang.StringBuilder;

        specialinvoke r185.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r185.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: <package> has no codePath at ");

        $r51 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke r185.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        r186 = virtualinvoke r185.<java.lang.StringBuilder: java.lang.String toString()>();

     label134:
        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, r186);

     label135:
        r180 = null;

        goto label187;

     label136:
        $r79 := @caughtexception;

        r114 = r129;

        r113 = r122;

        r157 = r144;

        r158 = r131;

        r159 = r146;

        r160 = r147;

        r161 = r149;

        r115 = r148;

        r116 = r150;

        r162 = r151;

        r163 = r142;

        r164 = null;

        r119 = r143;

        goto label208;

     label137:
        if i31 <= 0 goto label157;

     label138:
        r190 = virtualinvoke r121.<java.lang.String: java.lang.String intern()>();

     label139:
        r191 = new java.io.File;

        specialinvoke r191.<java.io.File: void <init>(java.lang.String)>(r3);

     label140:
        r192 = new java.io.File;

        specialinvoke r192.<java.io.File: void <init>(java.lang.String)>(r127);

     label141:
        r193 = virtualinvoke r0.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting addPackageLPw(java.lang.String,java.lang.String,java.io.File,java.io.File,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,long,int,int,java.lang.String[],long[],java.util.Map)>(r190, r175, r191, r192, r129, r144, r131, r4, i31, l15, i17, i18, null, null, null);

     label142:
        if r193 != null goto label146;

     label143:
        r194 = new java.lang.StringBuilder;

        specialinvoke r194.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r194.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure adding uid ");

        virtualinvoke r194.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i31);

        virtualinvoke r194.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" while parsing settings at ");

        $r49 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke r194.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r50 = virtualinvoke r194.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r50);

     label144:
        goto label149;

     label145:
        $r93 := @caughtexception;

        r114 = r129;

        r113 = r122;

        r157 = r144;

        r158 = r131;

        r159 = r146;

        r160 = r147;

        r161 = r149;

        r115 = r148;

        r116 = r150;

        r162 = r151;

        r163 = r142;

        r164 = r193;

        r119 = r143;

        goto label208;

     label146:
        virtualinvoke r193.<com.android.server.pm.PackageSetting: void setTimeStamp(long)>(l28);

     label147:
        r193.<com.android.server.pm.PackageSetting: long firstInstallTime> = l29;

     label148:
        r193.<com.android.server.pm.PackageSetting: long lastUpdateTime> = l30;

     label149:
        r180 = r193;

        goto label187;

     label150:
        $r90 := @caughtexception;

        r114 = r129;

        r113 = r122;

        r157 = r144;

        r158 = r131;

        r159 = r146;

        r160 = r147;

        r161 = r149;

        r115 = r148;

        r116 = r150;

        r162 = r151;

        r163 = r142;

        r164 = r193;

        r119 = r143;

        goto label208;

     label151:
        $r64 := @caughtexception;

        r114 = r129;

        r113 = r122;

        r157 = r144;

        r158 = r131;

        r159 = r146;

        r160 = r147;

        r161 = r149;

        r115 = r148;

        r116 = r150;

        r162 = r151;

        r163 = r142;

        r164 = r193;

        r119 = r143;

        goto label208;

     label152:
        $r102 := @caughtexception;

        r114 = r129;

        r113 = r122;

        r157 = r144;

        r158 = r131;

        r159 = r146;

        r160 = r147;

        r161 = r149;

        r115 = r148;

        r116 = r150;

        r162 = r151;

        r163 = r142;

        r164 = r193;

        r119 = r143;

        goto label208;

     label153:
        $r83 := @caughtexception;

        r114 = r129;

        r113 = r122;

        r157 = r144;

        r158 = r131;

        r159 = r146;

        r160 = r147;

        r161 = r149;

        r115 = r148;

        r116 = r150;

        r162 = r151;

        r163 = r142;

        r164 = null;

        r119 = r143;

        goto label208;

     label154:
        $r66 := @caughtexception;

        r114 = r129;

        r113 = r122;

        r157 = r144;

        r158 = r131;

        r159 = r146;

        r160 = r147;

        r161 = r149;

        r115 = r148;

        r116 = r150;

        r162 = r151;

        r163 = r142;

        r164 = null;

        r119 = r143;

        goto label208;

     label155:
        $r104 := @caughtexception;

        r114 = r129;

        r113 = r122;

        r157 = r144;

        r158 = r131;

        r159 = r146;

        r160 = r147;

        r161 = r149;

        r115 = r148;

        r116 = r150;

        r162 = r151;

        r163 = r142;

        r164 = null;

        r119 = r143;

        goto label208;

     label156:
        $r57 := @caughtexception;

        r114 = r129;

        r113 = r122;

        r157 = r144;

        r158 = r131;

        r159 = r146;

        r160 = r147;

        r161 = r149;

        r115 = r148;

        r116 = r150;

        r162 = r151;

        r163 = r142;

        r164 = null;

        r119 = r143;

        goto label208;

     label157:
        if r124 == null goto label181;

        if i32 <= 0 goto label169;

     label158:
        r215 = new com.android.server.pm.PackageSetting;

        r216 = virtualinvoke r121.<java.lang.String: java.lang.String intern()>();

        r217 = new java.io.File;

     label159:
        specialinvoke r217.<java.io.File: void <init>(java.lang.String)>(r3);

        r218 = new java.io.File;

     label160:
        specialinvoke r218.<java.io.File: void <init>(java.lang.String)>(r127);

        specialinvoke r215.<com.android.server.pm.PackageSetting: void <init>(java.lang.String,java.lang.String,java.io.File,java.io.File,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,int,int,int,java.lang.String[],long[],java.util.Map)>(r216, r175, r217, r218, r129, r144, r131, r4, l15, i17, i18, i32, null, null, null);

     label161:
        virtualinvoke r215.<com.android.server.pm.PackageSetting: void setTimeStamp(long)>(l28);

        r215.<com.android.server.pm.PackageSetting: long firstInstallTime> = l29;

        r215.<com.android.server.pm.PackageSetting: long lastUpdateTime> = l30;

     label162:
        $r48 = r0.<com.android.server.pm.Settings: java.util.ArrayList mPendingPackages>;

        virtualinvoke $r48.<java.util.ArrayList: boolean add(java.lang.Object)>(r215);

     label163:
        r180 = r215;

        goto label187;

     label164:
        $r78 := @caughtexception;

        r114 = r129;

        r113 = r122;

        r157 = r144;

        r158 = r131;

        r159 = r146;

        r160 = r147;

        r161 = r149;

        r115 = r148;

        r116 = r150;

        r162 = r151;

        r163 = r142;

        r164 = r215;

        r119 = r143;

        goto label208;

     label165:
        $r80 := @caughtexception;

        r114 = r129;

        r113 = r122;

        r157 = r144;

        r158 = r131;

        r159 = r146;

        r160 = r147;

        r161 = r149;

        r115 = r148;

        r116 = r150;

        r162 = r151;

        r163 = r142;

        r164 = r215;

        r119 = r143;

        goto label208;

     label166:
        $r110 := @caughtexception;

        r114 = r129;

        r113 = r122;

        r157 = r144;

        r158 = r131;

        r159 = r146;

        r160 = r147;

        r161 = r149;

        r115 = r148;

        r116 = r150;

        r162 = r151;

        r163 = r142;

        r164 = null;

        r119 = r143;

        goto label208;

     label167:
        $r86 := @caughtexception;

        r114 = r129;

        r113 = r122;

        r157 = r144;

        r158 = r131;

        r159 = r146;

        r160 = r147;

        r161 = r149;

        r115 = r148;

        r116 = r150;

        r162 = r151;

        r163 = r142;

        r164 = null;

        r119 = r143;

        goto label208;

     label168:
        $r91 := @caughtexception;

        r114 = r129;

        r113 = r122;

        r157 = r144;

        r158 = r131;

        r159 = r146;

        r160 = r147;

        r161 = r149;

        r115 = r148;

        r116 = r150;

        r162 = r151;

        r163 = r142;

        r164 = null;

        r119 = r143;

        goto label208;

     label169:
        r235 = new java.lang.StringBuilder;

        specialinvoke r235.<java.lang.StringBuilder: void <init>()>();

     label170:
        virtualinvoke r235.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: package ");

     label171:
        virtualinvoke r235.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r121);

        virtualinvoke r235.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has bad sharedId ");

        virtualinvoke r235.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r124);

     label172:
        virtualinvoke r235.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r47 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke r235.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        r236 = virtualinvoke r235.<java.lang.StringBuilder: java.lang.String toString()>();

     label173:
        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, r236);

     label174:
        r180 = null;

        goto label187;

     label175:
        $r105 := @caughtexception;

        r114 = r129;

        r113 = r122;

        r157 = r144;

        r158 = r131;

        r159 = r146;

        r160 = r147;

        r161 = r149;

        r115 = r148;

        r116 = r150;

        r162 = r151;

        r163 = r142;

        r164 = null;

        r119 = r143;

        goto label208;

     label176:
        $r62 := @caughtexception;

        r114 = r129;

        r113 = r122;

        r157 = r144;

        r158 = r131;

        r159 = r146;

        r160 = r147;

        r161 = r149;

        r115 = r148;

        r116 = r150;

        r162 = r151;

        r163 = r142;

        r164 = null;

        r119 = r143;

        goto label208;

     label177:
        $r54 := @caughtexception;

        r158 = r131;

        r114 = r129;

        r113 = r122;

        r157 = r144;

        r159 = r146;

        r160 = r147;

        r161 = r149;

        r115 = r148;

        r116 = r150;

        r162 = r151;

        r163 = r142;

        r164 = null;

        r119 = r143;

        goto label208;

     label178:
        $r82 := @caughtexception;

        goto label180;

     label179:
        $r71 := @caughtexception;

     label180:
        r158 = r131;

        r114 = r129;

        r113 = r122;

        r112 = r121;

        r157 = r144;

        r159 = r146;

        r160 = r147;

        r161 = r149;

        r115 = r148;

        r116 = r150;

        r162 = r151;

        r163 = r142;

        r164 = null;

        r119 = r143;

        goto label208;

     label181:
        r244 = new java.lang.StringBuilder;

        specialinvoke r244.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r244.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: package ");

        virtualinvoke r244.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r121);

     label182:
        virtualinvoke r244.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has bad userId ");

     label183:
        virtualinvoke r244.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r122);

        virtualinvoke r244.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

     label184:
        $r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke r244.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        r245 = virtualinvoke r244.<java.lang.StringBuilder: java.lang.String toString()>();

     label185:
        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, r245);

     label186:
        r180 = null;

     label187:
        r159 = r146;

        r247 = r180;

        r249 = r122;

        r250 = r121;

        i35 = i16;

        r252 = r144;

        r253 = r143;

        r162 = r151;

        r254 = r142;

        r255 = r147;

        r257 = r129;

        r258 = r117;

        goto label209;

     label188:
        $r81 := @caughtexception;

        r114 = r129;

        r113 = r122;

        r157 = r144;

        r158 = r131;

        r159 = r146;

        r160 = r147;

        r161 = r149;

        r115 = r148;

        r116 = r150;

        r162 = r151;

        r163 = r142;

        r164 = null;

        r119 = r143;

        goto label208;

     label189:
        $r76 := @caughtexception;

        r114 = r129;

        r113 = r122;

        r157 = r144;

        r158 = r131;

        r159 = r146;

        r160 = r147;

        r161 = r149;

        r115 = r148;

        r116 = r150;

        r162 = r151;

        r163 = r142;

        r164 = null;

        r119 = r143;

        goto label208;

     label190:
        $r85 := @caughtexception;

        r114 = r129;

        r113 = r122;

        r157 = r144;

        r158 = r131;

        r159 = r146;

        r160 = r147;

        r161 = r149;

        r115 = r148;

        r116 = r150;

        r162 = r151;

        r163 = r142;

        r164 = null;

        r119 = r143;

        goto label208;

     label191:
        $r75 := @caughtexception;

        goto label193;

     label192:
        $r89 := @caughtexception;

     label193:
        r158 = r131;

        r112 = r121;

        r114 = r129;

        r113 = r122;

        r157 = r144;

        r159 = r146;

        r160 = r147;

        r161 = r149;

        r115 = r148;

        r116 = r150;

        r162 = r151;

        r163 = r142;

        r164 = null;

        r119 = r143;

        goto label208;

     label194:
        $r99 := @caughtexception;

        r114 = r129;

        r113 = r122;

        r157 = r144;

        r158 = r131;

        r159 = r146;

        r160 = r147;

        r161 = r149;

        r115 = r148;

        r116 = r150;

        r162 = r151;

        r163 = r142;

        r164 = null;

        r119 = r143;

        goto label208;

     label195:
        $r55 := @caughtexception;

        r114 = r129;

        r113 = r122;

        r157 = r144;

        r158 = r131;

        r159 = r146;

        r160 = r147;

        r161 = r149;

        r115 = r148;

        r116 = r150;

        r162 = r151;

        r163 = r142;

        r164 = null;

        r119 = r143;

        goto label208;

     label196:
        $r68 := @caughtexception;

        r114 = r129;

        r113 = r122;

        r157 = r144;

        r158 = r131;

        r159 = r146;

        r160 = r147;

        r161 = r149;

        r115 = r148;

        r116 = r150;

        r162 = r151;

        r163 = r142;

        r164 = null;

        r119 = r143;

        goto label208;

     label197:
        $r103 := @caughtexception;

        r114 = r129;

        r113 = r122;

        r157 = r141;

        r158 = r131;

        r159 = r133;

        r160 = r134;

        r161 = r135;

        r115 = r136;

        r116 = r137;

        r162 = r138;

        r163 = r139;

        i16 = i14;

        r164 = null;

        r119 = r140;

        goto label208;

     label198:
        $r97 := @caughtexception;

        r113 = r122;

        r114 = r129;

        r157 = r130;

        r158 = r131;

        r159 = null;

        r160 = null;

        r161 = null;

        r162 = null;

        r163 = null;

        i16 = -1;

        r164 = null;

        goto label208;

     label199:
        $r74 := @caughtexception;

        r114 = r129;

        r113 = r122;

        r157 = r120;

        r158 = null;

        r159 = null;

        r160 = null;

        r161 = null;

        r162 = null;

        r163 = null;

        i16 = -1;

        r164 = null;

        goto label208;

     label200:
        $r72 := @caughtexception;

        r113 = r122;

        r157 = null;

        r158 = null;

        r159 = null;

        r160 = null;

        r161 = null;

        r162 = null;

        r163 = null;

        i16 = -1;

        r164 = null;

        goto label208;

     label201:
        $r94 := @caughtexception;

        r157 = null;

        r113 = r122;

        r158 = null;

        r159 = null;

        r160 = null;

        r161 = null;

        r162 = null;

        r163 = null;

        i16 = -1;

        r164 = null;

        goto label208;

     label202:
        $r65 := @caughtexception;

        r157 = null;

        r113 = r122;

        r158 = null;

        r159 = null;

        r160 = null;

        r161 = null;

        r162 = null;

        r163 = null;

        i16 = -1;

        r164 = null;

        goto label208;

     label203:
        $r69 := @caughtexception;

        r157 = null;

        r113 = r122;

        r158 = null;

        r159 = null;

        r160 = null;

        r161 = null;

        r162 = null;

        r163 = null;

        i16 = -1;

        r164 = null;

        goto label208;

     label204:
        $r111 := @caughtexception;

        r157 = null;

        r113 = r122;

        r158 = null;

        r159 = null;

        r160 = null;

        r161 = null;

        r162 = null;

        r163 = null;

        i16 = -1;

        r117 = r118;

        r164 = null;

        goto label208;

     label205:
        $r95 := @caughtexception;

        r157 = null;

        r113 = null;

        r158 = null;

        r159 = null;

        r160 = null;

        r161 = null;

        r162 = null;

        r163 = null;

        i16 = -1;

        r164 = null;

        goto label208;

     label206:
        $r98 := @caughtexception;

        r113 = null;

        r157 = null;

        r158 = null;

        r159 = null;

        r160 = null;

        r161 = null;

        r162 = null;

        r163 = null;

        i16 = -1;

        r164 = null;

        goto label208;

     label207:
        $r67 := @caughtexception;

        r157 = null;

        r164 = null;

        i16 = -1;

        r163 = null;

        r162 = null;

        r161 = null;

        r160 = null;

        r159 = null;

        r158 = null;

     label208:
        $r280 = new java.lang.StringBuilder;

        specialinvoke $r280.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r280.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: package ");

        virtualinvoke $r280.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r112);

        virtualinvoke $r280.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has bad userId ");

        virtualinvoke $r280.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r113);

        virtualinvoke $r280.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r282 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r280.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r282);

        $r283 = virtualinvoke $r280.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r283);

        r150 = r116;

        r252 = r157;

        r254 = r163;

        i35 = i16;

        r253 = r119;

        r255 = r160;

        r250 = r112;

        r249 = r113;

        r258 = r117;

        r148 = r115;

        r149 = r161;

        r247 = r164;

        r257 = r114;

        r132 = r158;

     label209:
        if r247 == null goto label245;

        $r6 = "true";

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r258);

        r247.<com.android.server.pm.PackageSetting: boolean uidError> = $z1;

        $r7 = "true";

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r255);

        $r8 = "true";

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r150);

        r289 = staticinvoke <com.android.server.pm.InstallSource: com.android.server.pm.InstallSource create(java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>(r148, r149, r159, $z2, $z3);

        r247.<com.android.server.pm.PackageSetting: com.android.server.pm.InstallSource installSource> = r289;

        r247.<com.android.server.pm.PackageSetting: java.lang.String volumeUuid> = r162;

        r247.<com.android.server.pm.PackageSetting: int categoryHint> = i35;

        r247.<com.android.server.pm.PackageSetting: java.lang.String legacyNativeLibraryPathString> = r257;

        r247.<com.android.server.pm.PackageSetting: java.lang.String primaryCpuAbiString> = r252;

        r247.<com.android.server.pm.PackageSetting: java.lang.String secondaryCpuAbiString> = r132;

        $r9 = "true";

        $z4 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r254);

        r247.<com.android.server.pm.PackageSetting: boolean updateAvailable> = $z4;

        $r10 = "true";

        $z5 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r253);

        r247.<com.android.server.pm.PackageSetting: boolean forceQueryableOverride> = $z5;

        r290 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "enabled");

        if r290 == null goto label220;

     label210:
        i36 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r290);

     label211:
        virtualinvoke r247.<com.android.server.pm.PackageSetting: void setEnabled(int,int,java.lang.String)>(i36, 0, null);

     label212:
        goto label221;

     label213:
        $r70 := @caughtexception;

        goto label215;

     label214:
        $r58 := @caughtexception;

     label215:
        $z17 = virtualinvoke r290.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        if $z17 == 0 goto label216;

        virtualinvoke r247.<com.android.server.pm.PackageSetting: void setEnabled(int,int,java.lang.String)>(1, 0, null);

        goto label219;

     label216:
        $z18 = virtualinvoke r290.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("false");

        if $z18 == 0 goto label217;

        virtualinvoke r247.<com.android.server.pm.PackageSetting: void setEnabled(int,int,java.lang.String)>(2, 0, null);

        goto label219;

     label217:
        $z19 = virtualinvoke r290.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("default");

        if $z19 == 0 goto label218;

        virtualinvoke r247.<com.android.server.pm.PackageSetting: void setEnabled(int,int,java.lang.String)>(0, 0, null);

        goto label219;

     label218:
        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: package ");

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r250);

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has bad enabled value: ");

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r249);

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r60 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r61);

     label219:
        goto label221;

     label220:
        virtualinvoke r247.<com.android.server.pm.PackageSetting: void setEnabled(int,int,java.lang.String)>(0, 0, null);

     label221:
        virtualinvoke r0.<com.android.server.pm.Settings: void addInstallerPackageNames(com.android.server.pm.InstallSource)>(r289);

        i37 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label222:
        i38 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i38 == 1 goto label244;

        if i38 != 3 goto label224;

        $i4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i4 <= i37 goto label223;

        goto label224;

     label223:
        goto label244;

     label224:
        if i38 == 3 goto label243;

        if i38 != 4 goto label225;

        goto label222;

     label225:
        r292 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z6 = virtualinvoke r292.<java.lang.String: boolean equals(java.lang.Object)>("disabled-components");

        if $z6 == 0 goto label226;

        specialinvoke r0.<com.android.server.pm.Settings: void readDisabledComponentsLPw(com.android.server.pm.PackageSettingBase,org.xmlpull.v1.XmlPullParser,int)>(r247, r1, 0);

        goto label242;

     label226:
        $z7 = virtualinvoke r292.<java.lang.String: boolean equals(java.lang.Object)>("enabled-components");

        if $z7 == 0 goto label227;

        specialinvoke r0.<com.android.server.pm.Settings: void readEnabledComponentsLPw(com.android.server.pm.PackageSettingBase,org.xmlpull.v1.XmlPullParser,int)>(r247, r1, 0);

        goto label242;

     label227:
        $z8 = virtualinvoke r292.<java.lang.String: boolean equals(java.lang.Object)>("sigs");

        if $z8 == 0 goto label228;

        $r46 = r247.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        $r45 = r0.<com.android.server.pm.Settings: java.util.ArrayList mPastSignatures>;

        virtualinvoke $r46.<com.android.server.pm.PackageSignatures: void readXml(org.xmlpull.v1.XmlPullParser,java.util.ArrayList)>(r1, $r45);

        goto label242;

     label228:
        $z9 = virtualinvoke r292.<java.lang.String: boolean equals(java.lang.Object)>("perms");

        if $z9 == 0 goto label229;

        $r44 = virtualinvoke r247.<com.android.server.pm.PackageSetting: com.android.server.pm.permission.PermissionsState getPermissionsState()>();

        virtualinvoke r0.<com.android.server.pm.Settings: void readInstallPermissionsLPr(org.xmlpull.v1.XmlPullParser,com.android.server.pm.permission.PermissionsState)>(r1, $r44);

        r247.<com.android.server.pm.PackageSetting: boolean installPermissionsFixed> = 1;

        goto label242;

     label229:
        $z10 = virtualinvoke r292.<java.lang.String: boolean equals(java.lang.Object)>("proper-signing-keyset");

        if $z10 == 0 goto label232;

        $r33 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "identifier");

        l39 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r33);

        $r34 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mKeySetRefs>;

        $r35 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l39);

        $r36 = virtualinvoke $r34.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r35);

        r293 = (java.lang.Integer) $r36;

        if r293 == null goto label230;

        $r41 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mKeySetRefs>;

        $r42 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l39);

        $i2 = virtualinvoke r293.<java.lang.Integer: int intValue()>();

        $i3 = $i2 + 1;

        $r43 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        virtualinvoke $r41.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r42, $r43);

        goto label231;

     label230:
        $r37 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mKeySetRefs>;

        $r38 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l39);

        $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke $r37.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r38, $r39);

     label231:
        $r40 = r247.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageKeySetData keySetData>;

        virtualinvoke $r40.<com.android.server.pm.PackageKeySetData: void setProperSigningKeySet(long)>(l39);

        goto label233;

     label232:
        $z11 = virtualinvoke r292.<java.lang.String: boolean equals(java.lang.Object)>("signing-keyset");

        if $z11 == 0 goto label234;

     label233:
        goto label242;

     label234:
        $z12 = virtualinvoke r292.<java.lang.String: boolean equals(java.lang.Object)>("upgrade-keyset");

        if $z12 == 0 goto label235;

        $r31 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "identifier");

        l40 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r31);

        $r32 = r247.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageKeySetData keySetData>;

        virtualinvoke $r32.<com.android.server.pm.PackageKeySetData: void addUpgradeKeySetById(long)>(l40);

        goto label242;

     label235:
        $z13 = virtualinvoke r292.<java.lang.String: boolean equals(java.lang.Object)>("defined-keyset");

        if $z13 == 0 goto label238;

        $r20 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "identifier");

        l41 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r20);

        r294 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "alias");

        $r21 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mKeySetRefs>;

        $r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l41);

        $r23 = virtualinvoke $r21.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r22);

        r295 = (java.lang.Integer) $r23;

        if r295 == null goto label236;

        $r28 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mKeySetRefs>;

        $r29 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l41);

        $i0 = virtualinvoke r295.<java.lang.Integer: int intValue()>();

        $i1 = $i0 + 1;

        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke $r28.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r29, $r30);

        goto label237;

     label236:
        $r24 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mKeySetRefs>;

        $r25 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l41);

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke $r24.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r25, $r26);

     label237:
        $r27 = r247.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageKeySetData keySetData>;

        virtualinvoke $r27.<com.android.server.pm.PackageKeySetData: void addDefinedKeySet(long,java.lang.String)>(l41, r294);

        goto label242;

     label238:
        $z14 = virtualinvoke r292.<java.lang.String: boolean equals(java.lang.Object)>("install-initiator-sigs");

        if $z14 == 0 goto label239;

        $r16 = new com.android.server.pm.PackageSignatures;

        specialinvoke $r16.<com.android.server.pm.PackageSignatures: void <init>()>();

        $r17 = r0.<com.android.server.pm.Settings: java.util.ArrayList mPastSignatures>;

        virtualinvoke $r16.<com.android.server.pm.PackageSignatures: void readXml(org.xmlpull.v1.XmlPullParser,java.util.ArrayList)>(r1, $r17);

        $r18 = r247.<com.android.server.pm.PackageSetting: com.android.server.pm.InstallSource installSource>;

        $r19 = virtualinvoke $r18.<com.android.server.pm.InstallSource: com.android.server.pm.InstallSource setInitiatingPackageSignatures(com.android.server.pm.PackageSignatures)>($r16);

        r247.<com.android.server.pm.PackageSetting: com.android.server.pm.InstallSource installSource> = $r19;

        goto label242;

     label239:
        $z15 = virtualinvoke r292.<java.lang.String: boolean equals(java.lang.Object)>("domain-verification");

        if $z15 == 0 goto label240;

        specialinvoke r0.<com.android.server.pm.Settings: void readDomainVerificationLPw(org.xmlpull.v1.XmlPullParser,com.android.server.pm.PackageSettingBase)>(r1, r247);

        goto label242;

     label240:
        $z16 = virtualinvoke r292.<java.lang.String: boolean equals(java.lang.Object)>("mime-group");

        if $z16 == 0 goto label241;

        $r14 = r247.<com.android.server.pm.PackageSetting: java.util.Map mimeGroups>;

        $r15 = specialinvoke r0.<com.android.server.pm.Settings: java.util.Map readMimeGroupLPw(org.xmlpull.v1.XmlPullParser,java.util.Map)>(r1, $r14);

        r247.<com.android.server.pm.PackageSetting: java.util.Map mimeGroups> = $r15;

        goto label242;

     label241:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <package>: ");

        $r12 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r13);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label242:
        goto label222;

     label243:
        goto label222;

     label244:
        goto label246;

     label245:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label246:
        return;

        catch java.lang.NumberFormatException from label001 to label002 with label207;
        catch java.lang.NumberFormatException from label003 to label004 with label206;
        catch java.lang.NumberFormatException from label004 to label005 with label205;
        catch java.lang.NumberFormatException from label005 to label006 with label204;
        catch java.lang.NumberFormatException from label007 to label008 with label204;
        catch java.lang.NumberFormatException from label008 to label009 with label203;
        catch java.lang.NumberFormatException from label009 to label010 with label202;
        catch java.lang.NumberFormatException from label010 to label011 with label201;
        catch java.lang.NumberFormatException from label011 to label012 with label200;
        catch java.lang.NumberFormatException from label012 to label013 with label199;
        catch java.lang.NumberFormatException from label014 to label015 with label199;
        catch java.lang.NumberFormatException from label016 to label017 with label198;
        catch java.lang.NumberFormatException from label018 to label019 with label197;
        catch java.lang.NumberFormatException from label020 to label021 with label197;
        catch java.lang.NumberFormatException from label023 to label024 with label197;
        catch java.lang.NumberFormatException from label025 to label026 with label027;
        catch java.lang.NumberFormatException from label029 to label030 with label197;
        catch java.lang.NumberFormatException from label031 to label032 with label197;
        catch java.lang.NumberFormatException from label033 to label034 with label197;
        catch java.lang.NumberFormatException from label035 to label036 with label197;
        catch java.lang.NumberFormatException from label037 to label038 with label197;
        catch java.lang.NumberFormatException from label039 to label040 with label197;
        catch java.lang.NumberFormatException from label041 to label042 with label197;
        catch java.lang.NumberFormatException from label043 to label044 with label045;
        catch java.lang.NumberFormatException from label047 to label048 with label197;
        catch java.lang.NumberFormatException from label049 to label050 with label051;
        catch java.lang.NumberFormatException from label052 to label053 with label058;
        catch java.lang.NumberFormatException from label054 to label055 with label056;
        catch java.lang.NumberFormatException from label060 to label061 with label197;
        catch java.lang.NumberFormatException from label062 to label063 with label064;
        catch java.lang.NumberFormatException from label066 to label067 with label058;
        catch java.lang.NumberFormatException from label069 to label070 with label058;
        catch java.lang.NumberFormatException from label072 to label073 with label058;
        catch java.lang.NumberFormatException from label074 to label075 with label058;
        catch java.lang.NumberFormatException from label077 to label078 with label197;
        catch java.lang.NumberFormatException from label079 to label080 with label083;
        catch java.lang.NumberFormatException from label086 to label087 with label197;
        catch java.lang.NumberFormatException from label088 to label089 with label090;
        catch java.lang.NumberFormatException from label092 to label093 with label196;
        catch java.lang.NumberFormatException from label094 to label095 with label096;
        catch java.lang.NumberFormatException from label098 to label099 with label195;
        catch java.lang.NumberFormatException from label100 to label101 with label102;
        catch java.lang.NumberFormatException from label104 to label105 with label194;
        catch java.lang.NumberFormatException from label106 to label107 with label108;
        catch java.lang.NumberFormatException from label111 to label112 with label113;
        catch java.lang.NumberFormatException from label116 to label117 with label113;
        catch java.lang.NumberFormatException from label121 to label122 with label123;
        catch java.lang.NumberFormatException from label126 to label127 with label131;
        catch java.lang.NumberFormatException from label127 to label128 with label136;
        catch java.lang.NumberFormatException from label128 to label129 with label130;
        catch java.lang.NumberFormatException from label133 to label134 with label136;
        catch java.lang.NumberFormatException from label134 to label135 with label130;
        catch java.lang.NumberFormatException from label138 to label139 with label156;
        catch java.lang.NumberFormatException from label139 to label140 with label155;
        catch java.lang.NumberFormatException from label140 to label141 with label154;
        catch java.lang.NumberFormatException from label141 to label142 with label153;
        catch java.lang.NumberFormatException from label143 to label144 with label145;
        catch java.lang.NumberFormatException from label146 to label147 with label152;
        catch java.lang.NumberFormatException from label147 to label148 with label151;
        catch java.lang.NumberFormatException from label148 to label149 with label150;
        catch java.lang.NumberFormatException from label158 to label159 with label168;
        catch java.lang.NumberFormatException from label159 to label160 with label167;
        catch java.lang.NumberFormatException from label160 to label161 with label166;
        catch java.lang.NumberFormatException from label161 to label162 with label165;
        catch java.lang.NumberFormatException from label162 to label163 with label164;
        catch java.lang.NumberFormatException from label169 to label170 with label179;
        catch java.lang.NumberFormatException from label170 to label171 with label178;
        catch java.lang.NumberFormatException from label171 to label172 with label177;
        catch java.lang.NumberFormatException from label172 to label173 with label176;
        catch java.lang.NumberFormatException from label173 to label174 with label175;
        catch java.lang.NumberFormatException from label181 to label182 with label192;
        catch java.lang.NumberFormatException from label182 to label183 with label191;
        catch java.lang.NumberFormatException from label183 to label184 with label190;
        catch java.lang.NumberFormatException from label184 to label185 with label189;
        catch java.lang.NumberFormatException from label185 to label186 with label188;
        catch java.lang.NumberFormatException from label210 to label211 with label214;
        catch java.lang.NumberFormatException from label211 to label212 with label213;
    }

    private void readPersistentPreferredActivitiesLPw(org.xmlpull.v1.XmlPullParser, int) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlPullParser r1;
        int i0, i1, i2, $i3;
        java.lang.String $r2, $r5, $r7;
        boolean $z0;
        java.lang.StringBuilder $r3;
        com.android.server.pm.PersistentPreferredActivity $r8;
        com.android.server.pm.PersistentPreferredIntentResolver $r9;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i0 := @parameter1: int;

        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i2 == 1 goto label6;

        if i2 != 3 goto label2;

        $i3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i3 <= i1 goto label6;

     label2:
        if i2 == 3 goto label1;

        if i2 != 4 goto label3;

        goto label1;

     label3:
        $r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label4;

        $r8 = new com.android.server.pm.PersistentPreferredActivity;

        specialinvoke $r8.<com.android.server.pm.PersistentPreferredActivity: void <init>(org.xmlpull.v1.XmlPullParser)>(r1);

        $r9 = virtualinvoke r0.<com.android.server.pm.Settings: com.android.server.pm.PersistentPreferredIntentResolver editPersistentPreferredActivitiesLPw(int)>(i0);

        virtualinvoke $r9.<com.android.server.pm.PersistentPreferredIntentResolver: void addFilter(java.lang.Object)>($r8);

        goto label5;

     label4:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <persistent-preferred-activities>: ");

        $r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r7);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label5:
        goto label1;

     label6:
        return;
    }

    private void readRestoredIntentFilterVerifications(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlPullParser r1;
        int i0, i1, $i3;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.String $r6, $r9, r11;
        android.content.pm.IntentFilterVerificationInfo $r7;
        android.util.ArrayMap $r8;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 == 1 goto label6;

        if i1 != 3 goto label2;

        $i3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i3 <= i0 goto label6;

     label2:
        if i1 == 3 goto label1;

        if i1 != 4 goto label3;

        goto label1;

     label3:
        r11 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>("domain-verification");

        if $z0 == 0 goto label4;

        $r7 = new android.content.pm.IntentFilterVerificationInfo;

        specialinvoke $r7.<android.content.pm.IntentFilterVerificationInfo: void <init>(org.xmlpull.v1.XmlPullParser)>(r1);

        $r8 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mRestoredIntentFilterVerifications>;

        $r9 = virtualinvoke $r7.<android.content.pm.IntentFilterVerificationInfo: java.lang.String getPackageName()>();

        virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r7);

        goto label5;

     label4:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageSettings", $r6);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label5:
        goto label1;

     label6:
        return;
    }

    private void readSharedUserLPw(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, $r3, $r4, $r5, $r7, $r8, $r12, $r13, $r14, $r15, $r16, $r17, $r20, $r21, r22, r23, r25, r32;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r6, $r19, r26, r27, r30;
        com.android.server.pm.permission.PermissionsState $r9;
        java.util.ArrayList $r10;
        com.android.server.pm.PackageSignatures $r11;
        int $i0, i2, i3, i4;
        java.lang.Throwable $r18;
        byte b1;
        com.android.server.pm.SharedUserSetting r24, r28;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r22 = null;

        b1 = 0;

        r23 = null;

        r24 = null;

     label01:
        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

     label02:
        r22 = r2;

        r23 = null;

        r24 = null;

     label03:
        r25 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "userId");

     label04:
        if r25 == null goto label07;

        r22 = r2;

        r23 = r25;

        r24 = null;

     label05:
        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r25);

     label06:
        goto label08;

     label07:
        i2 = 0;

     label08:
        r22 = r2;

        r23 = r25;

        r24 = null;

     label09:
        $r3 = "true";

        $r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "system");

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label11;

     label10:
        b1 = 1;

     label11:
        if r2 != null goto label22;

        r22 = r2;

        r23 = r25;

        r24 = null;

     label12:
        r26 = new java.lang.StringBuilder;

     label13:
        r22 = r2;

        r23 = r25;

        r24 = null;

     label14:
        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

     label15:
        r22 = r2;

        r23 = r25;

        r24 = null;

     label16:
        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: <shared-user> has no name at ");

     label17:
        r22 = r2;

        r23 = r25;

        r24 = null;

     label18:
        $r16 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

     label19:
        r22 = r2;

        r23 = r25;

        r24 = null;

     label20:
        $r17 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r17);

     label21:
        r24 = null;

        goto label54;

     label22:
        if i2 != 0 goto label41;

        r22 = r2;

        r23 = r25;

        r24 = null;

     label23:
        r27 = new java.lang.StringBuilder;

     label24:
        r22 = r2;

        r23 = r25;

        r24 = null;

     label25:
        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

     label26:
        r22 = r2;

        r23 = r25;

        r24 = null;

     label27:
        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: shared-user ");

     label28:
        r22 = r2;

        r23 = r25;

        r24 = null;

     label29:
        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

     label30:
        r22 = r2;

        r23 = r25;

        r24 = null;

     label31:
        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has bad userId ");

     label32:
        r22 = r2;

        r23 = r25;

        r24 = null;

     label33:
        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

     label34:
        r22 = r2;

        r23 = r25;

        r24 = null;

     label35:
        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

     label36:
        r22 = r2;

        r23 = r25;

        r24 = null;

     label37:
        $r14 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

     label38:
        r22 = r2;

        r23 = r25;

        r24 = null;

     label39:
        $r15 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r15);

     label40:
        r24 = null;

        goto label54;

     label41:
        r22 = r2;

        r23 = r25;

        r24 = null;

     label42:
        $r5 = virtualinvoke r2.<java.lang.String: java.lang.String intern()>();

        r28 = virtualinvoke r0.<com.android.server.pm.Settings: com.android.server.pm.SharedUserSetting addSharedUserLPw(java.lang.String,int,int,int)>($r5, i2, b1, 0);

     label43:
        r24 = r28;

        if r28 != null goto label54;

        r22 = r2;

        r23 = r25;

        r24 = r28;

     label44:
        r30 = new java.lang.StringBuilder;

     label45:
        r22 = r2;

        r23 = r25;

        r24 = r28;

     label46:
        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

     label47:
        r22 = r2;

        r23 = r25;

        r24 = r28;

     label48:
        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Occurred while parsing settings at ");

     label49:
        r22 = r2;

        r23 = r25;

        r24 = r28;

     label50:
        $r12 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

     label51:
        r22 = r2;

        r23 = r25;

        r24 = r28;

     label52:
        $r13 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r13);

     label53:
        r24 = r28;

     label54:
        goto label56;

     label55:
        $r18 := @caughtexception;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: package ");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has bad userId ");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r20 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r21);

     label56:
        if r24 == null goto label64;

        i3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label57:
        i4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i4 == 1 goto label63;

        if i4 != 3 goto label58;

        $i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i0 <= i3 goto label63;

     label58:
        if i4 == 3 goto label57;

        if i4 != 4 goto label59;

        goto label57;

     label59:
        r32 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke r32.<java.lang.String: boolean equals(java.lang.Object)>("sigs");

        if $z1 == 0 goto label60;

        $r11 = r24.<com.android.server.pm.SharedUserSetting: com.android.server.pm.PackageSignatures signatures>;

        $r10 = r0.<com.android.server.pm.Settings: java.util.ArrayList mPastSignatures>;

        virtualinvoke $r11.<com.android.server.pm.PackageSignatures: void readXml(org.xmlpull.v1.XmlPullParser,java.util.ArrayList)>(r1, $r10);

        goto label62;

     label60:
        $z2 = virtualinvoke r32.<java.lang.String: boolean equals(java.lang.Object)>("perms");

        if $z2 == 0 goto label61;

        $r9 = virtualinvoke r24.<com.android.server.pm.SharedUserSetting: com.android.server.pm.permission.PermissionsState getPermissionsState()>();

        virtualinvoke r0.<com.android.server.pm.Settings: void readInstallPermissionsLPr(org.xmlpull.v1.XmlPullParser,com.android.server.pm.permission.PermissionsState)>(r1, $r9);

        goto label62;

     label61:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <shared-user>: ");

        $r7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r8);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label62:
        goto label57;

     label63:
        goto label65;

     label64:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label65:
        return;

        catch java.lang.NumberFormatException from label01 to label02 with label55;
        catch java.lang.NumberFormatException from label03 to label04 with label55;
        catch java.lang.NumberFormatException from label05 to label06 with label55;
        catch java.lang.NumberFormatException from label09 to label10 with label55;
        catch java.lang.NumberFormatException from label12 to label13 with label55;
        catch java.lang.NumberFormatException from label14 to label15 with label55;
        catch java.lang.NumberFormatException from label16 to label17 with label55;
        catch java.lang.NumberFormatException from label18 to label19 with label55;
        catch java.lang.NumberFormatException from label20 to label21 with label55;
        catch java.lang.NumberFormatException from label23 to label24 with label55;
        catch java.lang.NumberFormatException from label25 to label26 with label55;
        catch java.lang.NumberFormatException from label27 to label28 with label55;
        catch java.lang.NumberFormatException from label29 to label30 with label55;
        catch java.lang.NumberFormatException from label31 to label32 with label55;
        catch java.lang.NumberFormatException from label33 to label34 with label55;
        catch java.lang.NumberFormatException from label35 to label36 with label55;
        catch java.lang.NumberFormatException from label37 to label38 with label55;
        catch java.lang.NumberFormatException from label39 to label40 with label55;
        catch java.lang.NumberFormatException from label42 to label43 with label55;
        catch java.lang.NumberFormatException from label44 to label45 with label55;
        catch java.lang.NumberFormatException from label46 to label47 with label55;
        catch java.lang.NumberFormatException from label48 to label49 with label55;
        catch java.lang.NumberFormatException from label50 to label51 with label55;
        catch java.lang.NumberFormatException from label52 to label53 with label55;
    }

    private boolean registerExistingAppIdLPw(int, com.android.server.pm.SettingBase, java.lang.Object)
    {
        com.android.server.pm.Settings r0;
        int i0, i1, i2;
        java.lang.Object r1, $r3, $r13;
        android.util.SparseArray $r2, $r4;
        java.lang.StringBuilder $r5, $r16;
        java.lang.String $r10, $r21;
        java.util.ArrayList $r11, $r12, $r14, $r22;
        com.android.server.pm.SettingBase r23;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        r23 := @parameter1: com.android.server.pm.SettingBase;

        r1 := @parameter2: java.lang.Object;

        if i0 <= 19999 goto label1;

        return 0;

     label1:
        if i0 < 10000 goto label5;

        $r11 = r0.<com.android.server.pm.Settings: java.util.ArrayList mAppIds>;

        i2 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        i1 = i0 - 10000;

     label2:
        if i1 < i2 goto label3;

        $r22 = r0.<com.android.server.pm.Settings: java.util.ArrayList mAppIds>;

        virtualinvoke $r22.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

        i2 = i2 + 1;

        goto label2;

     label3:
        $r12 = r0.<com.android.server.pm.Settings: java.util.ArrayList mAppIds>;

        $r13 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        if $r13 == null goto label4;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding duplicate app id: ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" name=");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r21 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r21);

        return 0;

     label4:
        $r14 = r0.<com.android.server.pm.Settings: java.util.ArrayList mAppIds>;

        virtualinvoke $r14.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i1, r23);

        goto label7;

     label5:
        $r2 = r0.<com.android.server.pm.Settings: android.util.SparseArray mOtherAppIds>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        if $r3 == null goto label6;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding duplicate shared id: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" name=");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r10);

        return 0;

     label6:
        $r4 = r0.<com.android.server.pm.Settings: android.util.SparseArray mOtherAppIds>;

        virtualinvoke $r4.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r23);

     label7:
        return 1;
    }

    private void removeInstallerPackageStatus(java.lang.String)
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1;
        android.util.ArraySet $r2, $r4;
        boolean $z0;
        android.util.ArrayMap $r3, $r5;
        int $i0, i1;
        java.lang.Object $r6;
        com.android.server.pm.PackageSetting $r7;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.pm.Settings: android.util.ArraySet mInstallerPackages>;

        $z0 = virtualinvoke $r2.<android.util.ArraySet: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        return;

     label1:
        i1 = 0;

     label2:
        $r3 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $i0 = virtualinvoke $r3.<android.util.ArrayMap: int size()>();

        if i1 >= $i0 goto label3;

        $r5 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        $r7 = (com.android.server.pm.PackageSetting) $r6;

        virtualinvoke $r7.<com.android.server.pm.PackageSetting: void removeInstallerPackage(java.lang.String)>(r1);

        i1 = i1 + 1;

        goto label2;

     label3:
        $r4 = r0.<com.android.server.pm.Settings: android.util.ArraySet mInstallerPackages>;

        virtualinvoke $r4.<android.util.ArraySet: boolean remove(java.lang.Object)>(r1);

        return;
    }

    private void replaceAppIdLPw(int, com.android.server.pm.SettingBase)
    {
        com.android.server.pm.Settings r0;
        com.android.server.pm.SettingBase r1;
        int i0, i1, i2;
        android.util.SparseArray $r2;
        java.util.ArrayList $r3, $r4;

        r0 := @this: com.android.server.pm.Settings;

        i1 := @parameter0: int;

        r1 := @parameter1: com.android.server.pm.SettingBase;

        if i1 < 10000 goto label2;

        $r3 = r0.<com.android.server.pm.Settings: java.util.ArrayList mAppIds>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i2 = i1 + -10000;

        if i2 >= i0 goto label1;

        $r4 = r0.<com.android.server.pm.Settings: java.util.ArrayList mAppIds>;

        virtualinvoke $r4.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i2, r1);

     label1:
        goto label3;

     label2:
        $r2 = r0.<com.android.server.pm.Settings: android.util.SparseArray mOtherAppIds>;

        virtualinvoke $r2.<android.util.SparseArray: void put(int,java.lang.Object)>(i1, r1);

     label3:
        return;
    }

    private void setFirstAvailableUid(int)
    {
        com.android.server.pm.Settings r0;
        int i0, $i1;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        $i1 = <com.android.server.pm.Settings: int mFirstAvailableUid>;

        if i0 <= $i1 goto label1;

        <com.android.server.pm.Settings: int mFirstAvailableUid> = i0;

     label1:
        return;
    }

    static void updatePackageSetting(com.android.server.pm.PackageSetting, com.android.server.pm.PackageSetting, com.android.server.pm.SharedUserSetting, java.io.File, java.io.File, java.lang.String, java.lang.String, java.lang.String, int, int, com.android.server.pm.UserManagerService, java.lang.String[], long[], java.util.Set) throws com.android.server.pm.PackageManagerException
    {
        java.lang.String r0, r1, r2, r6, $r18, $r21, $r24, $r25, $r32, $r35, $r38, $r39, $r48, $r54, r65, r66, r69, r75;
        int i0, i1, $i2, $i3, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33;
        java.lang.String[] r3;
        long[] r4;
        java.util.Set r5;
        com.android.server.pm.SharedUserSetting $r9, $r55, r58, r63;
        java.io.File $r10, $r11, r59, r60;
        boolean $z0, $z1, z2, z3, z4;
        java.lang.StringBuilder $r12, $r26, $r41, $r49;
        java.lang.Object $r40;
        com.android.server.pm.PackageManagerException $r53;
        com.android.server.pm.PackageSetting r56, r57;
        com.android.server.pm.UserManagerService r61;
        java.util.List r70;
        java.util.Iterator r71;
        android.content.pm.UserInfo r73;

        r56 := @parameter0: com.android.server.pm.PackageSetting;

        r57 := @parameter1: com.android.server.pm.PackageSetting;

        r58 := @parameter2: com.android.server.pm.SharedUserSetting;

        r59 := @parameter3: java.io.File;

        r60 := @parameter4: java.io.File;

        r0 := @parameter5: java.lang.String;

        r1 := @parameter6: java.lang.String;

        r2 := @parameter7: java.lang.String;

        i0 := @parameter8: int;

        i1 := @parameter9: int;

        r61 := @parameter10: com.android.server.pm.UserManagerService;

        r3 := @parameter11: java.lang.String[];

        r4 := @parameter12: long[];

        r5 := @parameter13: java.util.Set;

        r6 = r56.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r9 = r56.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r9 == r58 goto label04;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" shared user changed from ");

        r63 = r56.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if r63 == null goto label01;

        $r55 = r56.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        r65 = $r55.<com.android.server.pm.SharedUserSetting: java.lang.String name>;

        goto label02;

     label01:
        r65 = "<nothing>";

     label02:
        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r65);

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        r66 = "<nothing>";

        if r58 == null goto label03;

        r66 = r58.<com.android.server.pm.SharedUserSetting: java.lang.String name>;

     label03:
        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r66);

        $r48 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r48);

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Updating application package ");

        virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed");

        $r53 = new com.android.server.pm.PackageManagerException;

        $r54 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r53.<com.android.server.pm.PackageManagerException: void <init>(int,java.lang.String)>(-8, $r54);

        throw $r53;

     label04:
        $r10 = r56.<com.android.server.pm.PackageSetting: java.io.File codePath>;

        z2 = virtualinvoke $r10.<java.io.File: boolean equals(java.lang.Object)>(r59);

        if z2 != 0 goto label12;

        z3 = virtualinvoke r56.<com.android.server.pm.PackageSetting: boolean isSystem()>();

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Update");

        if z3 == 0 goto label05;

        r69 = " system";

        goto label06;

     label05:
        r69 = "";

     label06:
        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r69);

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" package ");

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" code path from ");

        $r32 = r56.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r35 = virtualinvoke r59.<java.io.File: java.lang.String toString()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; Retain data and using new");

        $r38 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r38);

        if z3 != 0 goto label11;

        $i6 = i0 & 1;

        if $i6 == 0 goto label10;

        if r57 != null goto label10;

        r70 = staticinvoke <com.android.server.pm.Settings: java.util.List getAllUsers(com.android.server.pm.UserManagerService)>(r61);

        if r70 == null goto label09;

        r71 = interfaceinvoke r70.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z1 = interfaceinvoke r71.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r40 = interfaceinvoke r71.<java.util.Iterator: java.lang.Object next()>();

        r73 = (android.content.pm.UserInfo) $r40;

        $i7 = r73.<android.content.pm.UserInfo: int id>;

        virtualinvoke r56.<com.android.server.pm.PackageSetting: void setInstalled(boolean,int)>(1, $i7);

        $i8 = r73.<android.content.pm.UserInfo: int id>;

        virtualinvoke r56.<com.android.server.pm.PackageSetting: void setUninstallReason(int,int)>(0, $i8);

        goto label07;

     label08:
        goto label10;

     label09:
        goto label10;

     label10:
        r56.<com.android.server.pm.PackageSetting: java.lang.String legacyNativeLibraryPathString> = r0;

        goto label11;

     label11:
        r56.<com.android.server.pm.PackageSetting: java.io.File codePath> = r59;

        $r39 = virtualinvoke r59.<java.io.File: java.lang.String toString()>();

        r56.<com.android.server.pm.PackageSetting: java.lang.String codePathString> = $r39;

        goto label12;

     label12:
        $r11 = r56.<com.android.server.pm.PackageSetting: java.io.File resourcePath>;

        $z0 = virtualinvoke $r11.<java.io.File: boolean equals(java.lang.Object)>(r60);

        if $z0 != 0 goto label14;

        z4 = virtualinvoke r56.<com.android.server.pm.PackageSetting: boolean isSystem()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Update");

        r75 = "";

        if z4 == 0 goto label13;

        r75 = " system";

     label13:
        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r75);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" package ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" resource path from ");

        $r18 = r56.<com.android.server.pm.PackageSetting: java.lang.String resourcePathString>;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r21 = virtualinvoke r60.<java.io.File: java.lang.String toString()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; Retain data and using new");

        $r24 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r24);

        r56.<com.android.server.pm.PackageSetting: java.io.File resourcePath> = r60;

        $r25 = virtualinvoke r60.<java.io.File: java.lang.String toString()>();

        r56.<com.android.server.pm.PackageSetting: java.lang.String resourcePathString> = $r25;

     label14:
        $i9 = r56.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $i10 = $i9 & -2;

        r56.<com.android.server.pm.PackageSetting: int pkgFlags> = $i10;

        $i11 = r56.<com.android.server.pm.PackageSetting: int pkgPrivateFlags>;

        $i12 = $i11 & -1076756489;

        r56.<com.android.server.pm.PackageSetting: int pkgPrivateFlags> = $i12;

        $i13 = r56.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $i14 = i0 & 1;

        $i15 = $i13 | $i14;

        r56.<com.android.server.pm.PackageSetting: int pkgFlags> = $i15;

        $i16 = r56.<com.android.server.pm.PackageSetting: int pkgPrivateFlags>;

        $i17 = i1 & 8;

        $i18 = $i16 | $i17;

        r56.<com.android.server.pm.PackageSetting: int pkgPrivateFlags> = $i18;

        $i19 = r56.<com.android.server.pm.PackageSetting: int pkgPrivateFlags>;

        $i20 = i1 & 131072;

        $i21 = $i19 | $i20;

        r56.<com.android.server.pm.PackageSetting: int pkgPrivateFlags> = $i21;

        $i22 = r56.<com.android.server.pm.PackageSetting: int pkgPrivateFlags>;

        $i23 = i1 & 262144;

        $i24 = $i22 | $i23;

        r56.<com.android.server.pm.PackageSetting: int pkgPrivateFlags> = $i24;

        $i25 = r56.<com.android.server.pm.PackageSetting: int pkgPrivateFlags>;

        $i26 = i1 & 524288;

        $i27 = $i25 | $i26;

        r56.<com.android.server.pm.PackageSetting: int pkgPrivateFlags> = $i27;

        $i28 = r56.<com.android.server.pm.PackageSetting: int pkgPrivateFlags>;

        $i29 = i1 & 2097152;

        $i30 = $i28 | $i29;

        r56.<com.android.server.pm.PackageSetting: int pkgPrivateFlags> = $i30;

        $i31 = r56.<com.android.server.pm.PackageSetting: int pkgPrivateFlags>;

        $i32 = i1 & 1073741824;

        $i33 = $i31 | $i32;

        r56.<com.android.server.pm.PackageSetting: int pkgPrivateFlags> = $i33;

        r56.<com.android.server.pm.PackageSetting: java.lang.String primaryCpuAbiString> = r1;

        r56.<com.android.server.pm.PackageSetting: java.lang.String secondaryCpuAbiString> = r2;

        if r3 == null goto label15;

        if r4 == null goto label15;

        $i3 = lengthof r3;

        $i2 = lengthof r4;

        if $i3 != $i2 goto label15;

        r56.<com.android.server.pm.PackageSetting: java.lang.String[] usesStaticLibraries> = r3;

        r56.<com.android.server.pm.PackageSetting: long[] usesStaticLibrariesVersions> = r4;

        goto label16;

     label15:
        r56.<com.android.server.pm.PackageSetting: java.lang.String[] usesStaticLibraries> = null;

        r56.<com.android.server.pm.PackageSetting: long[] usesStaticLibrariesVersions> = null;

     label16:
        virtualinvoke r56.<com.android.server.pm.PackageSetting: void updateMimeGroups(java.util.Set)>(r5);

        return;
    }

    private void writeIntToFile(java.io.File, int)
    {
        com.android.server.pm.Settings r0;
        java.io.File r1;
        int i0;
        java.lang.String $r2, $r3, $r11, $r13;
        java.nio.charset.Charset $r4;
        byte[] $r5;
        java.lang.Throwable $r6;
        java.lang.StringBuilder $r7;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.io.File;

        i0 := @parameter1: int;

     label1:
        $r2 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r4 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset US_ASCII>;

        $r5 = virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r4);

        staticinvoke <android.os.FileUtils: void bytesToFile(java.lang.String,byte[])>($r2, $r5);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t write ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r11 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageSettings", $r13);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private void writeKernelRemoveUserLPr(int)
    {
        com.android.server.pm.Settings r0;
        int i0;
        java.io.File $r1, $r2, $r3;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.pm.Settings: java.io.File mKernelMappingFilename>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = new java.io.File;

        $r3 = r0.<com.android.server.pm.Settings: java.io.File mKernelMappingFilename>;

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, "remove_userid");

        specialinvoke r0.<com.android.server.pm.Settings: void writeIntToFile(java.io.File,int)>($r2, i0);

        return;
    }

    private void writeMimeGroupLPr(org.xmlpull.v1.XmlSerializer, java.util.Map) throws java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlSerializer r1;
        java.util.Map r2;
        java.util.Iterator r3, r4;
        java.util.Set $r5;
        boolean $z0, $z1;
        java.lang.Object $r6, $r9, $r12;
        android.util.ArraySet $r10;
        java.lang.String r16, r17;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r2 := @parameter1: java.util.Map;

        if r2 != null goto label1;

        return;

     label1:
        $r5 = interfaceinvoke r2.<java.util.Map: java.util.Set keySet()>();

        r3 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r16 = (java.lang.String) $r6;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "mime-group");

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r16);

        $r9 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r16);

        $r10 = (android.util.ArraySet) $r9;

        r4 = virtualinvoke $r10.<android.util.ArraySet: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r17 = (java.lang.String) $r12;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "mime-type");

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", r17);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "mime-type");

        goto label3;

     label4:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "mime-group");

        goto label2;

     label5:
        return;
    }

    private void writePackageListLPrInternal(int)
    {
        com.android.server.pm.Settings r0;
        java.io.FileOutputStream r2;
        java.lang.StringBuilder r3, $r8, r53;
        java.util.Iterator r4;
        com.android.server.pm.PackageSetting r5;
        boolean z0, $z1, $z2, $z3;
        int[] r6, r40, r41;
        com.android.server.pm.UserManagerService $r7;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, i10, i11, i12;
        java.io.File $r9, $r11, $r14, $r22, r44;
        java.lang.String $r10, $r12, $r24, $r25, $r26, $r30, $r33, r49, r50, r52;
        com.android.internal.util.JournaledFile $r13;
        java.nio.charset.Charset $r15;
        java.io.FileDescriptor $r16;
        android.util.ArrayMap $r17;
        java.util.Collection $r18;
        java.lang.Object $r19, $r35;
        com.android.server.pm.parsing.pkg.AndroidPackage $r20, $r21, $r23, $r27, $r29, $r31, $r32, $r34, $r51;
        com.android.server.pm.permission.PermissionsState $r28;
        long $l4;
        android.content.pm.UserInfo $r36;
        java.lang.Exception $r37, $r38, r54;
        java.util.List r39;
        java.io.BufferedWriter r45, r46, r48;
        java.io.OutputStreamWriter r47;

        r0 := @this: com.android.server.pm.Settings;

        i10 := @parameter0: int;

        $r7 = staticinvoke <com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService getInstance()>();

        r39 = staticinvoke <com.android.server.pm.Settings: java.util.List getUsers(com.android.server.pm.UserManagerService,boolean)>($r7, 1);

        $i0 = interfaceinvoke r39.<java.util.List: int size()>();

        r40 = newarray (int)[$i0];

        i11 = 0;

     label01:
        $i1 = lengthof r40;

        if i11 >= $i1 goto label02;

        $r35 = interfaceinvoke r39.<java.util.List: java.lang.Object get(int)>(i11);

        $r36 = (android.content.pm.UserInfo) $r35;

        $i9 = $r36.<android.content.pm.UserInfo: int id>;

        r40[i11] = $i9;

        i11 = i11 + 1;

        goto label01;

     label02:
        r41 = r40;

        if i10 == -1 goto label03;

        r41 = staticinvoke <com.android.internal.util.ArrayUtils: int[] appendInt(int[],int)>(r40, i10);

     label03:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = r0.<com.android.server.pm.Settings: java.io.File mPackageListFilename>;

        $r10 = virtualinvoke $r9.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tmp");

        $r11 = new java.io.File;

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.io.File: void <init>(java.lang.String)>($r12);

        $r13 = new com.android.internal.util.JournaledFile;

        $r14 = r0.<com.android.server.pm.Settings: java.io.File mPackageListFilename>;

        specialinvoke $r13.<com.android.internal.util.JournaledFile: void <init>(java.io.File,java.io.File)>($r14, $r11);

        r44 = virtualinvoke $r13.<com.android.internal.util.JournaledFile: java.io.File chooseForWrite()>();

        r45 = null;

     label04:
        r2 = new java.io.FileOutputStream;

     label05:
        r45 = null;

     label06:
        specialinvoke r2.<java.io.FileOutputStream: void <init>(java.io.File)>(r44);

     label07:
        r45 = null;

     label08:
        r46 = new java.io.BufferedWriter;

     label09:
        r45 = null;

     label10:
        r47 = new java.io.OutputStreamWriter;

     label11:
        r45 = null;

     label12:
        $r15 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>();

        specialinvoke r47.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>(r2, $r15);

     label13:
        r45 = null;

     label14:
        specialinvoke r46.<java.io.BufferedWriter: void <init>(java.io.Writer)>(r47);

     label15:
        r48 = r46;

        r45 = r46;

     label16:
        $r16 = virtualinvoke r2.<java.io.FileOutputStream: java.io.FileDescriptor getFD()>();

        staticinvoke <android.os.FileUtils: int setPermissions(java.io.FileDescriptor,int,int,int)>($r16, 416, 1000, 1032);

     label17:
        r45 = r46;

     label18:
        r3 = new java.lang.StringBuilder;

     label19:
        r45 = r46;

     label20:
        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

     label21:
        r45 = r46;

     label22:
        $r17 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r18 = virtualinvoke $r17.<android.util.ArrayMap: java.util.Collection values()>();

        r4 = interfaceinvoke $r18.<java.util.Collection: java.util.Iterator iterator()>();

     label23:
        r45 = r46;

     label24:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label79;

     label25:
        r45 = r46;

     label26:
        $r19 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.server.pm.PackageSetting) $r19;

     label27:
        r45 = r46;

     label28:
        $r20 = r5.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        if $r20 != null goto label30;

     label29:
        r49 = null;

        goto label32;

     label30:
        r45 = r46;

     label31:
        $r21 = r5.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        $r22 = staticinvoke <android.content.pm.parsing.PackageInfoWithoutStateUtils: java.io.File getDataDir(android.content.pm.parsing.ParsingPackageRead,int)>($r21, 0);

        r49 = virtualinvoke $r22.<java.io.File: java.lang.String getAbsolutePath()>();

     label32:
        r45 = r46;

     label33:
        $r23 = r5.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        if $r23 == null goto label76;

     label34:
        if r49 != null goto label35;

        goto label76;

     label35:
        r45 = r46;

     label36:
        $r27 = r5.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        z0 = interfaceinvoke $r27.<com.android.server.pm.parsing.pkg.AndroidPackage: boolean isDebuggable()>();

     label37:
        r45 = r46;

     label38:
        $r28 = virtualinvoke r5.<com.android.server.pm.PackageSetting: com.android.server.pm.permission.PermissionsState getPermissionsState()>();

        r6 = virtualinvoke $r28.<com.android.server.pm.permission.PermissionsState: int[] computeGids(int[])>(r41);

     label39:
        r45 = r46;

     label40:
        $i2 = virtualinvoke r49.<java.lang.String: int indexOf(int)>(32);

        if $i2 < 0 goto label42;

     label41:
        goto label23;

     label42:
        r45 = r46;

     label43:
        virtualinvoke r3.<java.lang.StringBuilder: void setLength(int)>(0);

     label44:
        r45 = r46;

     label45:
        $r29 = r5.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        $r30 = interfaceinvoke $r29.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getPackageName()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

     label46:
        r45 = r46;

     label47:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label48:
        r45 = r46;

     label49:
        $r31 = r5.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        $i3 = interfaceinvoke $r31.<com.android.server.pm.parsing.pkg.AndroidPackage: int getUid()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

     label50:
        if z0 == 0 goto label51;

        r50 = " 1 ";

        goto label52;

     label51:
        r50 = " 0 ";

     label52:
        r45 = r46;

     label53:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r50);

     label54:
        r45 = r46;

     label55:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r49);

     label56:
        r45 = r46;

     label57:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label58:
        r45 = r46;

     label59:
        $r32 = r5.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        $r33 = staticinvoke <com.android.server.pm.parsing.pkg.AndroidPackageUtils: java.lang.String getSeInfo(com.android.server.pm.parsing.pkg.AndroidPackage,com.android.server.pm.PackageSetting)>($r32, r5);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

     label60:
        r45 = r46;

     label61:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label62:
        if r6 == null goto label70;

        r45 = r46;

     label63:
        $i5 = lengthof r6;

        if $i5 <= 0 goto label70;

     label64:
        r45 = r46;

     label65:
        $i6 = r6[0];

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

     label66:
        i12 = 1;

     label67:
        $i7 = lengthof r6;

        if i12 >= $i7 goto label69;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i8 = r6[i12];

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

     label68:
        i12 = i12 + 1;

        goto label67;

     label69:
        goto label71;

     label70:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("none");

     label71:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r51 = r5.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        $z3 = interfaceinvoke $r51.<com.android.server.pm.parsing.pkg.AndroidPackage: boolean isProfileableByShell()>();

        if $z3 == 0 goto label73;

     label72:
        r52 = "1";

        goto label74;

     label73:
        r52 = "0";

     label74:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r34 = r5.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        $l4 = interfaceinvoke $r34.<com.android.server.pm.parsing.pkg.AndroidPackage: long getLongVersionCode()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke r46.<java.io.BufferedWriter: java.io.Writer append(java.lang.CharSequence)>(r3);

     label75:
        goto label23;

     label76:
        $r25 = "android";

        $r24 = r5.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $z1 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>($r24);

        if $z1 != 0 goto label78;

        r53 = new java.lang.StringBuilder;

        specialinvoke r53.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping ");

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" due to missing metadata");

        $r26 = virtualinvoke r53.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageSettings", $r26);

     label77:
        goto label23;

     label78:
        goto label23;

     label79:
        virtualinvoke r46.<java.io.BufferedWriter: void flush()>();

        staticinvoke <android.os.FileUtils: boolean sync(java.io.FileOutputStream)>(r2);

        virtualinvoke r46.<java.io.BufferedWriter: void close()>();

        virtualinvoke $r13.<com.android.internal.util.JournaledFile: void commit()>();

     label80:
        goto label84;

     label81:
        $r37 := @caughtexception;

        r54 = $r37;

        goto label83;

     label82:
        $r38 := @caughtexception;

        r54 = $r38;

        r48 = r45;

     label83:
        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageSettings", "Failed to write packages.list", r54);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r48);

        virtualinvoke $r13.<com.android.internal.util.JournaledFile: void rollback()>();

     label84:
        return;

        catch java.lang.Exception from label04 to label05 with label82;
        catch java.lang.Exception from label06 to label07 with label82;
        catch java.lang.Exception from label08 to label09 with label82;
        catch java.lang.Exception from label10 to label11 with label82;
        catch java.lang.Exception from label12 to label13 with label82;
        catch java.lang.Exception from label14 to label15 with label82;
        catch java.lang.Exception from label16 to label17 with label82;
        catch java.lang.Exception from label18 to label19 with label82;
        catch java.lang.Exception from label20 to label21 with label82;
        catch java.lang.Exception from label22 to label23 with label82;
        catch java.lang.Exception from label24 to label25 with label82;
        catch java.lang.Exception from label26 to label27 with label82;
        catch java.lang.Exception from label28 to label29 with label82;
        catch java.lang.Exception from label31 to label32 with label82;
        catch java.lang.Exception from label33 to label34 with label82;
        catch java.lang.Exception from label36 to label37 with label82;
        catch java.lang.Exception from label38 to label39 with label82;
        catch java.lang.Exception from label40 to label41 with label82;
        catch java.lang.Exception from label43 to label44 with label82;
        catch java.lang.Exception from label45 to label46 with label82;
        catch java.lang.Exception from label47 to label48 with label82;
        catch java.lang.Exception from label49 to label50 with label82;
        catch java.lang.Exception from label53 to label54 with label82;
        catch java.lang.Exception from label55 to label56 with label82;
        catch java.lang.Exception from label57 to label58 with label82;
        catch java.lang.Exception from label59 to label60 with label82;
        catch java.lang.Exception from label61 to label62 with label82;
        catch java.lang.Exception from label63 to label64 with label82;
        catch java.lang.Exception from label65 to label66 with label82;
        catch java.lang.Exception from label67 to label68 with label81;
        catch java.lang.Exception from label70 to label71 with label81;
        catch java.lang.Exception from label71 to label72 with label81;
        catch java.lang.Exception from label74 to label75 with label81;
        catch java.lang.Exception from label76 to label77 with label81;
        catch java.lang.Exception from label79 to label80 with label81;
    }

    void addInstallerPackageNames(com.android.server.pm.InstallSource)
    {
        com.android.server.pm.Settings r0;
        com.android.server.pm.InstallSource r1;
        java.lang.String $r2, $r3, $r4, $r5, $r7, $r9;
        android.util.ArraySet $r6, $r8, $r10;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: com.android.server.pm.InstallSource;

        $r2 = r1.<com.android.server.pm.InstallSource: java.lang.String installerPackageName>;

        if $r2 == null goto label1;

        $r10 = r0.<com.android.server.pm.Settings: android.util.ArraySet mInstallerPackages>;

        $r9 = r1.<com.android.server.pm.InstallSource: java.lang.String installerPackageName>;

        virtualinvoke $r10.<android.util.ArraySet: boolean add(java.lang.Object)>($r9);

     label1:
        $r3 = r1.<com.android.server.pm.InstallSource: java.lang.String initiatingPackageName>;

        if $r3 == null goto label2;

        $r8 = r0.<com.android.server.pm.Settings: android.util.ArraySet mInstallerPackages>;

        $r7 = r1.<com.android.server.pm.InstallSource: java.lang.String initiatingPackageName>;

        virtualinvoke $r8.<android.util.ArraySet: boolean add(java.lang.Object)>($r7);

     label2:
        $r4 = r1.<com.android.server.pm.InstallSource: java.lang.String originatingPackageName>;

        if $r4 == null goto label3;

        $r6 = r0.<com.android.server.pm.Settings: android.util.ArraySet mInstallerPackages>;

        $r5 = r1.<com.android.server.pm.InstallSource: java.lang.String originatingPackageName>;

        virtualinvoke $r6.<android.util.ArraySet: boolean add(java.lang.Object)>($r5);

     label3:
        return;
    }

    com.android.server.pm.PackageSetting addPackageLPw(java.lang.String, java.lang.String, java.io.File, java.io.File, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, long, int, int, java.lang.String[], long[], java.util.Map)
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1, r4, r5, r6, r7, $r20, r21;
        java.io.File r2, r3;
        int i0, i2, i3, $i4;
        long l1;
        java.lang.String[] r8;
        long[] r9;
        java.util.Map r10;
        com.android.server.pm.PackageSetting r11, $r14;
        android.util.ArrayMap $r12, $r15;
        java.lang.Object $r13;
        boolean $z0;
        java.lang.StringBuilder $r17;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        r21 := @parameter1: java.lang.String;

        r2 := @parameter2: java.io.File;

        r3 := @parameter3: java.io.File;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: java.lang.String;

        r6 := @parameter6: java.lang.String;

        r7 := @parameter7: java.lang.String;

        i0 := @parameter8: int;

        l1 := @parameter9: long;

        i2 := @parameter10: int;

        i3 := @parameter11: int;

        r8 := @parameter12: java.lang.String[];

        r9 := @parameter13: long[];

        r10 := @parameter14: java.util.Map;

        $r12 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r13 = virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r11 = (com.android.server.pm.PackageSetting) $r13;

        if r11 == null goto label2;

        $i4 = r11.<com.android.server.pm.PackageSetting: int appId>;

        if $i4 != i0 goto label1;

        return r11;

     label1:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding duplicate package, keeping first: ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r20);

        return null;

     label2:
        $r14 = new com.android.server.pm.PackageSetting;

        specialinvoke $r14.<com.android.server.pm.PackageSetting: void <init>(java.lang.String,java.lang.String,java.io.File,java.io.File,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,int,int,int,java.lang.String[],long[],java.util.Map)>(r1, r21, r2, r3, r4, r5, r6, r7, l1, i2, i3, 0, r8, r9, r10);

        $r14.<com.android.server.pm.PackageSetting: int appId> = i0;

        $z0 = specialinvoke r0.<com.android.server.pm.Settings: boolean registerExistingAppIdLPw(int,com.android.server.pm.SettingBase,java.lang.Object)>(i0, $r14, r1);

        if $z0 == 0 goto label3;

        $r15 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        virtualinvoke $r15.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r14);

        return $r14;

     label3:
        return null;
    }

    java.lang.String addRenamedPackageLPw(java.lang.String, java.lang.String)
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1, r2, $r5;
        android.util.ArrayMap $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mRenamedPackages>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r5 = (java.lang.String) $r4;

        return $r5;
    }

    com.android.server.pm.SharedUserSetting addSharedUserLPw(java.lang.String, int, int, int)
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1, $r10;
        int i0, i1, i2, $i3;
        android.util.ArrayMap $r2, $r5;
        java.lang.Object $r3;
        com.android.server.pm.SharedUserSetting $r4, r11;
        boolean $z0;
        java.lang.StringBuilder $r7;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mSharedUsers>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r11 = (com.android.server.pm.SharedUserSetting) $r3;

        if r11 == null goto label2;

        $i3 = r11.<com.android.server.pm.SharedUserSetting: int userId>;

        if $i3 != i0 goto label1;

        return r11;

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding duplicate shared user, keeping first: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r10);

        return null;

     label2:
        $r4 = new com.android.server.pm.SharedUserSetting;

        specialinvoke $r4.<com.android.server.pm.SharedUserSetting: void <init>(java.lang.String,int,int)>(r1, i1, i2);

        $r4.<com.android.server.pm.SharedUserSetting: int userId> = i0;

        $z0 = specialinvoke r0.<com.android.server.pm.Settings: boolean registerExistingAppIdLPw(int,com.android.server.pm.SettingBase,java.lang.Object)>(i0, $r4, r1);

        if $z0 == 0 goto label3;

        $r5 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mSharedUsers>;

        virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

        return $r4;

     label3:
        return null;
    }

    void applyDefaultPreferredAppsLPw(int)
    {
        com.android.server.pm.Settings r0;
        int i0, i1, i2, $i8, $i9, $i10, i13, i14, i15, i16;
        java.io.File[] r2;
        java.io.File r3, $r10, $r11;
        java.lang.Object $r4, $r9, $r40, $r45, $r46, $r48;
        android.util.ArrayMap $r5;
        java.util.Collection $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.util.List $r7, $r8, $r43, r69;
        java.lang.String $r12, $r13, $r14, $r18, $r22, $r27, $r34, $r39, $r49, $r50, $r90, $r93;
        java.lang.StringBuilder $r23, $r28, $r35, r80, r83, $r88, $r91;
        com.android.server.pm.parsing.pkg.AndroidPackage $r41, $r42, $r44;
        android.content.ComponentName $r47;
        android.content.IntentFilter $r51;
        java.lang.Throwable $r52, $r53, $r54, $r57, $r58, $r61, $r62, $r63, $r64, $r65, r84, r86, r87;
        android.content.pm.PackageManagerInternal r66;
        java.util.Iterator r67;
        com.android.server.pm.PackageSetting r68;
        android.util.Pair r70;
        com.android.server.pm.PackageManagerService$ScanPartition r71;
        java.io.BufferedInputStream r76;
        java.io.FileInputStream r77;
        org.xmlpull.v1.XmlPullParser r78;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        $r4 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/content/pm/PackageManagerInternal;");

        r66 = (android.content.pm.PackageManagerInternal) $r4;

        $r5 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.util.Collection values()>();

        r67 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r67.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r40 = interfaceinvoke r67.<java.util.Iterator: java.lang.Object next()>();

        r68 = (com.android.server.pm.PackageSetting) $r40;

        $i8 = r68.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $i9 = 1 & $i8;

        if $i9 == 0 goto label03;

        $r41 = r68.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        if $r41 == null goto label03;

        $r42 = r68.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        $r43 = interfaceinvoke $r42.<com.android.server.pm.parsing.pkg.AndroidPackage: java.util.List getPreferredActivityFilters()>();

        $z8 = interfaceinvoke $r43.<java.util.List: boolean isEmpty()>();

        if $z8 != 0 goto label03;

        $r44 = r68.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        r69 = interfaceinvoke $r44.<com.android.server.pm.parsing.pkg.AndroidPackage: java.util.List getPreferredActivityFilters()>();

        i13 = 0;

     label02:
        $i10 = interfaceinvoke r69.<java.util.List: int size()>();

        if i13 >= $i10 goto label03;

        $r45 = interfaceinvoke r69.<java.util.List: java.lang.Object get(int)>(i13);

        r70 = (android.util.Pair) $r45;

        $r46 = r70.<android.util.Pair: java.lang.Object second>;

        $r51 = (android.content.IntentFilter) $r46;

        $r47 = new android.content.ComponentName;

        $r50 = r68.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r48 = r70.<android.util.Pair: java.lang.Object first>;

        $r49 = (java.lang.String) $r48;

        specialinvoke $r47.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r50, $r49);

        specialinvoke r0.<com.android.server.pm.Settings: void applyDefaultPreferredActivityLPw(android.content.pm.PackageManagerInternal,android.content.IntentFilter,android.content.ComponentName,int)>(r66, $r51, $r47, i0);

        i13 = i13 + 1;

        goto label02;

     label03:
        goto label01;

     label04:
        $r7 = <com.android.server.pm.PackageManagerService: java.util.List SYSTEM_PARTITIONS>;

        i14 = interfaceinvoke $r7.<java.util.List: int size()>();

        i15 = 0;

     label05:
        if i15 >= i14 goto label46;

        $r8 = <com.android.server.pm.PackageManagerService: java.util.List SYSTEM_PARTITIONS>;

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i15);

        r71 = (com.android.server.pm.PackageManagerService$ScanPartition) $r9;

        $r10 = new java.io.File;

        $r11 = virtualinvoke r71.<com.android.server.pm.PackageManagerService$ScanPartition: java.io.File getFolder()>();

        specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>($r11, "etc/preferred-apps");

        $z1 = virtualinvoke $r10.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label45;

        $z2 = virtualinvoke $r10.<java.io.File: boolean isDirectory()>();

        if $z2 != 0 goto label06;

        goto label45;

     label06:
        $z3 = virtualinvoke $r10.<java.io.File: boolean canRead()>();

        if $z3 != 0 goto label07;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Directory ");

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be read");

        $r39 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageSettings", $r39);

        goto label45;

     label07:
        r2 = virtualinvoke $r10.<java.io.File: java.io.File[] listFiles()>();

        $z4 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r2);

        if $z4 == 0 goto label08;

        goto label45;

     label08:
        i1 = lengthof r2;

        i16 = 0;

     label09:
        if i16 >= i1 goto label44;

        r3 = r2[i16];

        $r12 = virtualinvoke r3.<java.io.File: java.lang.String getPath()>();

        $z5 = virtualinvoke $r12.<java.lang.String: boolean endsWith(java.lang.String)>(".xml");

        if $z5 != 0 goto label10;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Non-xml file ");

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" directory, ignoring");

        $r34 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageSettings", $r34);

        goto label43;

     label10:
        $z6 = virtualinvoke r3.<java.io.File: boolean canRead()>();

        if $z6 != 0 goto label11;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Preferred apps file ");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be read");

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageSettings", $r27);

        goto label43;

     label11:
        r76 = new java.io.BufferedInputStream;

     label12:
        r77 = new java.io.FileInputStream;

        specialinvoke r77.<java.io.FileInputStream: void <init>(java.io.File)>(r3);

        specialinvoke r76.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r77);

     label13:
        r78 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

     label14:
        interfaceinvoke r78.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r76, null);

     label15:
        i2 = interfaceinvoke r78.<org.xmlpull.v1.XmlPullParser: int next()>();

     label16:
        if i2 == 2 goto label17;

        if i2 == 1 goto label17;

        goto label15;

     label17:
        if i2 == 2 goto label21;

     label18:
        r80 = new java.lang.StringBuilder;

        specialinvoke r80.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Preferred apps file ");

        virtualinvoke r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        virtualinvoke r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have start tag");

        $r22 = virtualinvoke r80.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageSettings", $r22);

     label19:
        virtualinvoke r76.<java.io.InputStream: void close()>();

     label20:
        goto label43;

     label21:
        $r13 = "preferred-activities";

        $r14 = interfaceinvoke r78.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z7 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z7 != 0 goto label24;

        r83 = new java.lang.StringBuilder;

        specialinvoke r83.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Preferred apps file ");

        virtualinvoke r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        virtualinvoke r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not start with \'preferred-activities\'");

        $r18 = virtualinvoke r83.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageSettings", $r18);

     label22:
        virtualinvoke r76.<java.io.InputStream: void close()>();

     label23:
        goto label43;

     label24:
        specialinvoke r0.<com.android.server.pm.Settings: void readDefaultPreferredActivitiesLPw(org.xmlpull.v1.XmlPullParser,int)>(r78, i0);

     label25:
        virtualinvoke r76.<java.io.InputStream: void close()>();

     label26:
        goto label43;

     label27:
        $r52 := @caughtexception;

        r84 = $r52;

        goto label30;

     label28:
        $r63 := @caughtexception;

        r84 = $r63;

        goto label30;

     label29:
        $r53 := @caughtexception;

        r84 = $r53;

     label30:
        virtualinvoke r76.<java.io.InputStream: void close()>();

     label31:
        goto label34;

     label32:
        $r65 := @caughtexception;

     label33:
        virtualinvoke r84.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r65);

     label34:
        throw r84;

     label35:
        $r57 := @caughtexception;

        r86 = $r57;

        goto label40;

     label36:
        $r58 := @caughtexception;

        r87 = $r58;

        goto label42;

     label37:
        $r54 := @caughtexception;

        r86 = $r54;

        goto label40;

     label38:
        $r61 := @caughtexception;

        r87 = $r61;

        goto label42;

     label39:
        $r64 := @caughtexception;

        r86 = $r64;

     label40:
        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading apps file ");

        virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r90 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageSettings", $r90, r86);

        goto label43;

     label41:
        $r62 := @caughtexception;

        r87 = $r62;

     label42:
        $r91 = new java.lang.StringBuilder;

        specialinvoke $r91.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading apps file ");

        virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r93 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageSettings", $r93, r87);

     label43:
        i16 = i16 + 1;

        goto label09;

     label44:
        goto label45;

     label45:
        i15 = i15 + 1;

        goto label05;

     label46:
        return;

        catch org.xmlpull.v1.XmlPullParserException from label11 to label12 with label41;
        catch java.io.IOException from label11 to label12 with label39;
        catch org.xmlpull.v1.XmlPullParserException from label12 to label13 with label38;
        catch java.io.IOException from label12 to label13 with label37;
        catch java.lang.Throwable from label13 to label14 with label29;
        catch java.lang.Throwable from label14 to label15 with label28;
        catch java.lang.Throwable from label15 to label16 with label28;
        catch java.lang.Throwable from label18 to label19 with label27;
        catch org.xmlpull.v1.XmlPullParserException from label19 to label20 with label36;
        catch java.io.IOException from label19 to label20 with label35;
        catch java.lang.Throwable from label21 to label22 with label27;
        catch org.xmlpull.v1.XmlPullParserException from label22 to label23 with label36;
        catch java.io.IOException from label22 to label23 with label35;
        catch java.lang.Throwable from label24 to label25 with label27;
        catch org.xmlpull.v1.XmlPullParserException from label25 to label26 with label36;
        catch java.io.IOException from label25 to label26 with label35;
        catch java.lang.Throwable from label30 to label31 with label32;
        catch org.xmlpull.v1.XmlPullParserException from label33 to label34 with label36;
        catch java.io.IOException from label33 to label34 with label35;
        catch org.xmlpull.v1.XmlPullParserException from label34 to label35 with label36;
        catch java.io.IOException from label34 to label35 with label35;
    }

    public boolean canPropagatePermissionToInstantApp(java.lang.String)
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1;
        com.android.server.pm.permission.PermissionSettings $r2;
        boolean $z0;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.pm.Settings: com.android.server.pm.permission.PermissionSettings mPermissions>;

        $z0 = virtualinvoke $r2.<com.android.server.pm.permission.PermissionSettings: boolean canPropagatePermissionToInstantApp(java.lang.String)>(r1);

        return $z0;
    }

    void clearBlockUninstallLPw(int)
    {
        com.android.server.pm.Settings r0;
        int i0;
        android.util.SparseArray $r1;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.pm.Settings: android.util.SparseArray mBlockUninstallPackages>;

        virtualinvoke $r1.<android.util.SparseArray: void remove(int)>(i0);

        return;
    }

    android.content.pm.IntentFilterVerificationInfo createIntentFilterVerificationIfNeededLPw(java.lang.String, android.util.ArraySet)
    {
        com.android.server.pm.Settings r0;
        android.util.ArraySet r1;
        com.android.server.pm.PackageSetting r2;
        android.content.pm.IntentFilterVerificationInfo r3, $r6, r8;
        android.util.ArrayMap $r4;
        java.lang.Object $r5;
        java.lang.String r7;

        r0 := @this: com.android.server.pm.Settings;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: android.util.ArraySet;

        $r4 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r7);

        r2 = (com.android.server.pm.PackageSetting) $r5;

        if r2 != null goto label1;

        return null;

     label1:
        r3 = virtualinvoke r2.<com.android.server.pm.PackageSetting: android.content.pm.IntentFilterVerificationInfo getIntentFilterVerificationInfo()>();

        if r3 != null goto label2;

        $r6 = new android.content.pm.IntentFilterVerificationInfo;

        specialinvoke $r6.<android.content.pm.IntentFilterVerificationInfo: void <init>(java.lang.String,android.util.ArraySet)>(r7, r1);

        r8 = $r6;

        virtualinvoke r2.<com.android.server.pm.PackageSetting: void setIntentFilterVerificationInfo(android.content.pm.IntentFilterVerificationInfo)>($r6);

        goto label3;

     label2:
        virtualinvoke r3.<android.content.pm.IntentFilterVerificationInfo: void setDomains(android.util.ArraySet)>(r1);

        r8 = r3;

     label3:
        return r8;
    }

    void createNewUserLI(com.android.server.pm.PackageManagerService, com.android.server.pm.Installer, int, java.util.Set, java.lang.String[])
    {
        com.android.server.pm.Settings r0;
        int i0, i1, $i2, $i3, i5;
        java.util.Set r1;
        java.lang.String[] r2, r3, r4, r6;
        int[] r5, r7;
        com.android.server.pm.PackageSetting r8;
        java.lang.String r9, $r14, $r18, $r19, $r21, $r23;
        com.android.server.utils.TimingsTraceAndSlog $r10;
        java.lang.StringBuilder $r11;
        android.util.ArrayMap $r15;
        java.lang.Object $r16, r33, r38;
        com.android.server.pm.parsing.pkg.AndroidPackage $r17, $r20, $r22;
        boolean $z0, $z1, $z2, $z3, z4, z5, z6;
        com.android.server.pm.pkg.PackageStateUnserialized $r24;
        java.lang.Throwable $r25, $r26, $r27, r36;
        com.android.server.pm.Installer$InstallerException $r28;
        com.android.server.pm.PackageManagerService r29;
        com.android.server.pm.Installer r30;
        java.util.Collection r34;
        java.util.Iterator r35;
        byte b6;

        r0 := @this: com.android.server.pm.Settings;

        r29 := @parameter0: com.android.server.pm.PackageManagerService;

        r30 := @parameter1: com.android.server.pm.Installer;

        i0 := @parameter2: int;

        r1 := @parameter3: java.util.Set;

        r2 := @parameter4: java.lang.String[];

        $r10 = new com.android.server.utils.TimingsTraceAndSlog;

        specialinvoke $r10.<com.android.server.utils.TimingsTraceAndSlog: void <init>(java.lang.String,long)>("PackageSettingsTiming", 262144L);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("createNewUser-");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>($r14);

        if r1 != null goto label01;

        z4 = 1;

        goto label02;

     label01:
        z4 = 0;

     label02:
        r33 = r0.<com.android.server.pm.Settings: java.lang.Object mLock>;

        entermonitor r33;

     label03:
        $r15 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        r34 = virtualinvoke $r15.<android.util.ArrayMap: java.util.Collection values()>();

        i1 = interfaceinvoke r34.<java.util.Collection: int size()>();

        r3 = newarray (java.lang.String)[i1];

        r4 = newarray (java.lang.String)[i1];

        r5 = newarray (int)[i1];

        r6 = newarray (java.lang.String)[i1];

        r7 = newarray (int)[i1];

        r35 = interfaceinvoke r34.<java.util.Collection: java.util.Iterator iterator()>();

     label04:
        i5 = 0;

     label05:
        if i5 >= i1 goto label25;

     label06:
        $r16 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.android.server.pm.PackageSetting) $r16;

        $r17 = r8.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        if $r17 != null goto label08;

     label07:
        goto label23;

     label08:
        $z0 = virtualinvoke r8.<com.android.server.pm.PackageSetting: boolean isSystem()>();

        if $z0 == 0 goto label11;

        r9 = r8.<com.android.server.pm.PackageSetting: java.lang.String name>;

     label09:
        $z2 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>(r2, r9);

        if $z2 != 0 goto label11;

        $r24 = virtualinvoke r8.<com.android.server.pm.PackageSetting: com.android.server.pm.pkg.PackageStateUnserialized getPkgState()>();

        $z3 = virtualinvoke $r24.<com.android.server.pm.pkg.PackageStateUnserialized: boolean isHiddenUntilInstalled()>();

        if $z3 != 0 goto label11;

     label10:
        z5 = 1;

        goto label12;

     label11:
        z5 = 0;

     label12:
        if z5 == 0 goto label15;

        if z4 != 0 goto label14;

     label13:
        $r23 = r8.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $z1 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>($r23);

        if $z1 == 0 goto label15;

     label14:
        z6 = 1;

        goto label16;

     label15:
        z6 = 0;

     label16:
        virtualinvoke r8.<com.android.server.pm.PackageSetting: void setInstalled(boolean,int)>(z6, i0);

     label17:
        if z5 == 0 goto label18;

        if z6 != 0 goto label18;

        b6 = 1;

        goto label19;

     label18:
        b6 = 0;

     label19:
        virtualinvoke r8.<com.android.server.pm.PackageSetting: void setUninstallReason(int,int)>(b6, i0);

     label20:
        if z6 != 0 goto label22;

     label21:
        virtualinvoke r0.<com.android.server.pm.Settings: void writeKernelMappingLPr(com.android.server.pm.PackageSetting)>(r8);

     label22:
        $r18 = r8.<com.android.server.pm.PackageSetting: java.lang.String volumeUuid>;

        r3[i5] = $r18;

        $r19 = r8.<com.android.server.pm.PackageSetting: java.lang.String name>;

        r4[i5] = $r19;

        $i2 = r8.<com.android.server.pm.PackageSetting: int appId>;

        r5[i5] = $i2;

        $r20 = r8.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        $r21 = staticinvoke <com.android.server.pm.parsing.pkg.AndroidPackageUtils: java.lang.String getSeInfo(com.android.server.pm.parsing.pkg.AndroidPackage,com.android.server.pm.PackageSetting)>($r20, r8);

        r6[i5] = $r21;

        $r22 = r8.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        $i3 = interfaceinvoke $r22.<com.android.server.pm.parsing.pkg.AndroidPackage: int getTargetSdkVersion()>();

        r7[i5] = $i3;

     label23:
        i5 = i5 + 1;

        goto label05;

     label24:
        $r26 := @caughtexception;

        r36 = $r26;

        goto label37;

     label25:
        exitmonitor r33;

     label26:
        virtualinvoke $r10.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("createAppData");

     label27:
        virtualinvoke r30.<com.android.server.pm.Installer: void createAppDataBatched(java.lang.String[],java.lang.String[],int,int,int[],java.lang.String[],int[])>(r3, r4, i0, 3, r5, r6, r7);

     label28:
        goto label30;

     label29:
        $r28 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageSettings", "Failed to prepare app data", $r28);

     label30:
        virtualinvoke $r10.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

        r38 = r0.<com.android.server.pm.Settings: java.lang.Object mLock>;

        entermonitor r38;

     label31:
        virtualinvoke r0.<com.android.server.pm.Settings: void applyDefaultPreferredAppsLPw(int)>(i0);

        exitmonitor r38;

     label32:
        virtualinvoke $r10.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

        return;

     label33:
        $r25 := @caughtexception;

     label34:
        exitmonitor r38;

     label35:
        throw $r25;

     label36:
        $r27 := @caughtexception;

        r36 = $r27;

     label37:
        exitmonitor r33;

     label38:
        throw r36;

        catch java.lang.Throwable from label03 to label04 with label36;
        catch java.lang.Throwable from label06 to label07 with label24;
        catch java.lang.Throwable from label08 to label09 with label24;
        catch java.lang.Throwable from label09 to label10 with label36;
        catch java.lang.Throwable from label13 to label14 with label36;
        catch java.lang.Throwable from label16 to label17 with label36;
        catch java.lang.Throwable from label19 to label20 with label36;
        catch java.lang.Throwable from label21 to label22 with label36;
        catch java.lang.Throwable from label22 to label23 with label36;
        catch java.lang.Throwable from label25 to label26 with label36;
        catch com.android.server.pm.Installer$InstallerException from label27 to label28 with label29;
        catch java.lang.Throwable from label31 to label32 with label33;
        catch java.lang.Throwable from label34 to label35 with label33;
        catch java.lang.Throwable from label37 to label38 with label36;
    }

    boolean disableSystemPackageLPw(java.lang.String, boolean)
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1, $r19;
        boolean z0, $z1, $z2;
        android.util.ArrayMap $r2, $r4, $r12;
        java.lang.Object $r3, $r5;
        com.android.server.pm.PackageSetting $r6, $r14, r20;
        com.android.server.pm.parsing.pkg.AndroidPackage $r7, $r8;
        com.android.server.pm.pkg.PackageStateUnserialized $r9, $r10;
        java.lang.StringBuilder $r15;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r20 = (com.android.server.pm.PackageSetting) $r3;

        if r20 != null goto label1;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not an installed package");

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r19);

        return 0;

     label1:
        $r4 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mDisabledSysPackages>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        $r6 = (com.android.server.pm.PackageSetting) $r5;

        if $r6 != null goto label3;

        $r7 = r20.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        if $r7 == null goto label3;

        $r8 = r20.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        $z1 = interfaceinvoke $r8.<com.android.server.pm.parsing.pkg.AndroidPackage: boolean isSystem()>();

        if $z1 == 0 goto label3;

        $r9 = virtualinvoke r20.<com.android.server.pm.PackageSetting: com.android.server.pm.pkg.PackageStateUnserialized getPkgState()>();

        $z2 = virtualinvoke $r9.<com.android.server.pm.pkg.PackageStateUnserialized: boolean isUpdatedSystemApp()>();

        if $z2 != 0 goto label3;

        $r10 = virtualinvoke r20.<com.android.server.pm.PackageSetting: com.android.server.pm.pkg.PackageStateUnserialized getPkgState()>();

        virtualinvoke $r10.<com.android.server.pm.pkg.PackageStateUnserialized: com.android.server.pm.pkg.PackageStateUnserialized setUpdatedSystemApp(boolean)>(1);

        if z0 == 0 goto label2;

        $r14 = new com.android.server.pm.PackageSetting;

        specialinvoke $r14.<com.android.server.pm.PackageSetting: void <init>(com.android.server.pm.PackageSetting)>(r20);

        r20 = $r14;

        goto label2;

     label2:
        $r12 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mDisabledSysPackages>;

        virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r20);

        return 1;

     label3:
        return 0;
    }

    void dumpComponents(java.io.PrintWriter, java.lang.String, com.android.server.pm.PackageSetting)
    {
        com.android.server.pm.Settings r0;
        java.io.PrintWriter r1;
        java.lang.String r2;
        com.android.server.pm.PackageSetting r3;
        com.android.server.pm.parsing.pkg.AndroidPackage $r4, $r6, $r8, $r10, $r12;
        java.util.List $r5, $r7, $r9, $r11, $r13;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.android.server.pm.PackageSetting;

        $r4 = r3.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        $r5 = interfaceinvoke $r4.<com.android.server.pm.parsing.pkg.AndroidPackage: java.util.List getActivities()>();

        virtualinvoke r0.<com.android.server.pm.Settings: void dumpComponents(java.io.PrintWriter,java.lang.String,java.lang.String,java.util.List)>(r1, r2, "activities:", $r5);

        $r6 = r3.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        $r7 = interfaceinvoke $r6.<com.android.server.pm.parsing.pkg.AndroidPackage: java.util.List getServices()>();

        virtualinvoke r0.<com.android.server.pm.Settings: void dumpComponents(java.io.PrintWriter,java.lang.String,java.lang.String,java.util.List)>(r1, r2, "services:", $r7);

        $r8 = r3.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        $r9 = interfaceinvoke $r8.<com.android.server.pm.parsing.pkg.AndroidPackage: java.util.List getReceivers()>();

        virtualinvoke r0.<com.android.server.pm.Settings: void dumpComponents(java.io.PrintWriter,java.lang.String,java.lang.String,java.util.List)>(r1, r2, "receivers:", $r9);

        $r10 = r3.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        $r11 = interfaceinvoke $r10.<com.android.server.pm.parsing.pkg.AndroidPackage: java.util.List getProviders()>();

        virtualinvoke r0.<com.android.server.pm.Settings: void dumpComponents(java.io.PrintWriter,java.lang.String,java.lang.String,java.util.List)>(r1, r2, "providers:", $r11);

        $r12 = r3.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        $r13 = interfaceinvoke $r12.<com.android.server.pm.parsing.pkg.AndroidPackage: java.util.List getInstrumentations()>();

        virtualinvoke r0.<com.android.server.pm.Settings: void dumpComponents(java.io.PrintWriter,java.lang.String,java.lang.String,java.util.List)>(r1, r2, "instrumentations:", $r13);

        return;
    }

    void dumpComponents(java.io.PrintWriter, java.lang.String, java.lang.String, java.util.List)
    {
        com.android.server.pm.Settings r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r6, r7;
        java.util.List r3;
        int i0, i1;
        java.lang.Object $r4;
        android.content.ComponentName $r5;
        android.content.pm.parsing.component.ParsedComponent r8;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.String;

        r3 := @parameter3: java.util.List;

        i0 = staticinvoke <com.android.internal.util.CollectionUtils: int size(java.util.Collection)>(r3);

        if i0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r7);

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r4 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i1);

        r8 = (android.content.pm.parsing.component.ParsedComponent) $r4;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        $r5 = virtualinvoke r8.<android.content.pm.parsing.component.ParsedComponent: android.content.ComponentName getComponentName()>();

        $r6 = virtualinvoke $r5.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r6);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    void dumpGidsLPr(java.io.PrintWriter, java.lang.String, int[])
    {
        com.android.server.pm.Settings r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r4;
        int[] r3;
        boolean $z0;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: int[];

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(int[])>(r3);

        if $z0 != 0 goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("gids=");

        $r4 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String arrayToString(int[])>(r3);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

     label1:
        return;
    }

    void dumpInstallPermissionsLPr(java.io.PrintWriter, java.lang.String, android.util.ArraySet, com.android.server.pm.permission.PermissionsState)
    {
        com.android.server.pm.Settings r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r6, $r7, $r8;
        android.util.ArraySet r3;
        com.android.server.pm.permission.PermissionsState$PermissionState r4;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r5;
        int $i0;
        com.android.server.pm.permission.PermissionsState r9;
        java.util.List r10;
        java.util.Iterator r11;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.util.ArraySet;

        r9 := @parameter3: com.android.server.pm.permission.PermissionsState;

        r10 = virtualinvoke r9.<com.android.server.pm.permission.PermissionsState: java.util.List getInstallPermissionStates()>();

        $z0 = interfaceinvoke r10.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("install permissions:");

        r11 = interfaceinvoke r10.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label3;

        $r5 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.pm.permission.PermissionsState$PermissionState) $r5;

        if r3 == null goto label2;

        $r8 = virtualinvoke r4.<com.android.server.pm.permission.PermissionsState$PermissionState: java.lang.String getName()>();

        $z2 = virtualinvoke r3.<android.util.ArraySet: boolean contains(java.lang.Object)>($r8);

        if $z2 != 0 goto label2;

        goto label1;

     label2:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        $r6 = virtualinvoke r4.<com.android.server.pm.permission.PermissionsState$PermissionState: java.lang.String getName()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r6);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": granted=");

        $z1 = virtualinvoke r4.<com.android.server.pm.permission.PermissionsState$PermissionState: boolean isGranted()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z1);

        $i0 = virtualinvoke r4.<com.android.server.pm.permission.PermissionsState$PermissionState: int getFlags()>();

        $r7 = staticinvoke <com.android.server.pm.Settings: java.lang.String permissionFlagsToString(java.lang.String,int)>(", flags=", $i0);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        goto label1;

     label3:
        return;
    }

    void dumpPackageLPr(java.io.PrintWriter, java.lang.String, java.lang.String, android.util.ArraySet, com.android.server.pm.PackageSetting, java.text.SimpleDateFormat, java.util.Date, java.util.List, boolean, boolean)
    {
        com.android.server.pm.Settings r0;
        java.io.PrintWriter r1, $r90, $r91, $r94, $r95;
        com.android.server.pm.PackageSetting r2;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, z34, z35, $z36, z37, $z38, z39, $z40, z41, $z42, $z44, $z46, $z47;
        com.android.server.pm.parsing.pkg.AndroidPackage r4, $r66, $r67, $r69, $r92, $r96;
        java.lang.String r5, $r6, $r7, $r8, $r10, $r11, $r23, $r28, $r34, $r39, $r46, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r61, $r62, $r64, $r71, $r75, $r80, $r82, $r84, $r86, $r87, $r89, $r99, $r100, $r101, $r102, $r104, $r105, $r107, $r109, $r113, r115, r116, r121, r122, r126, r127, r128, r129, r130, r131, r132, r133, r134, r135, $r138, $r151, $r152, $r153, $r155, r159, $r165, r172, r177, r178, r182, r185, r188;
        int $i0, $i1, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i50, $i52, $i53, $i54, $i55, $i56, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, i75, i76, i77, i78, i79, i80, i81, i82, i86, i87, i88, i89, i90, $i91, i92, i93, $i94;
        com.android.server.pm.SharedUserSetting $r9, $r17, $r103, $r161;
        long $l2, $l6, $l49, $l51, $l57, $l58, $l59, $l83, $l84, $l85;
        com.android.server.pm.PackageSignatures $r12;
        java.lang.Object[] $r13, $r65, $r98;
        java.lang.Object $r16, $r18, $r19, $r31, $r32, $r33, $r35, $r38, $r41, $r49, $r52, $r74, $r78, $r79, $r81, $r83, $r85, $r88, $r108;
        java.lang.StringBuilder $r20, $r25, $r43, $r163;
        int[] $r24, r123;
        java.util.List $r29, $r47, $r48, $r51, $r68, $r70, $r93, $r97, r120, r137, r139, r140, r143, r144, r156, r158;
        java.util.Set $r30, $r76, $r77;
        android.util.ArrayMap $r36, $r37, $r40;
        android.content.pm.SuspendDialogInfo $r42;
        com.android.server.pm.permission.PermissionSettings $r50;
        com.android.server.pm.InstallSource $r60, $r106, $r114, $r154;
        android.content.pm.PackageParser$SigningDetails $r63;
        com.android.server.pm.pkg.PackageStateUnserialized $r72;
        java.util.Collection $r73;
        java.lang.String[] $r110, $r111, $r112, r171, r176;
        android.util.ArraySet r117, r183, r186;
        java.text.SimpleDateFormat r118;
        java.util.Date r119;
        java.util.Iterator r124, r146, r150, r167, r174, r184, r187;
        android.content.pm.UserInfo r125, r168;
        java.io.File r136;
        long[] r141;
        java.util.Map r145, r173;
        android.content.pm.parsing.component.ParsedProcess r149;
        android.content.pm.parsing.component.ParsedPermission r157;
        com.android.server.pm.permission.BasePermission r160;
        com.android.server.pm.permission.PermissionsState r162, r179;
        android.content.pm.PackageUserState r169;
        android.content.pm.PackageUserState$SuspendParams r170;
        java.util.Map$Entry r175;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.io.PrintWriter;

        r115 := @parameter1: java.lang.String;

        r116 := @parameter2: java.lang.String;

        r117 := @parameter3: android.util.ArraySet;

        r2 := @parameter4: com.android.server.pm.PackageSetting;

        r118 := @parameter5: java.text.SimpleDateFormat;

        r119 := @parameter6: java.util.Date;

        r120 := @parameter7: java.util.List;

        z0 := @parameter8: boolean;

        z1 := @parameter9: boolean;

        r4 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        if r116 == null goto label027;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r116);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $r105 = r2.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        if $r105 == null goto label001;

        r121 = r2.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        goto label002;

     label001:
        r121 = r2.<com.android.server.pm.PackageSetting: java.lang.String name>;

     label002:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r121);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $i56 = r2.<com.android.server.pm.PackageSetting: int appId>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i56);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $l57 = r2.<com.android.server.pm.PackageSetting: long versionCode>;

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l57);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $l58 = r2.<com.android.server.pm.PackageSetting: long firstInstallTime>;

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l58);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $l59 = r2.<com.android.server.pm.PackageSetting: long lastUpdateTime>;

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l59);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $r106 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.InstallSource installSource>;

        $r107 = $r106.<com.android.server.pm.InstallSource: java.lang.String installerPackageName>;

        if $r107 == null goto label003;

        $r114 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.InstallSource installSource>;

        r122 = $r114.<com.android.server.pm.InstallSource: java.lang.String installerPackageName>;

        goto label004;

     label003:
        r122 = "?";

     label004:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r122);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        if r4 == null goto label006;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r116);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("-");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("splt,");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("base,");

        $i72 = interfaceinvoke r4.<com.android.server.pm.parsing.pkg.AndroidPackage: int getBaseRevisionCode()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i72);

        $r110 = interfaceinvoke r4.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String[] getSplitNames()>();

        if $r110 == null goto label006;

        r123 = interfaceinvoke r4.<com.android.server.pm.parsing.pkg.AndroidPackage: int[] getSplitRevisionCodes()>();

        i75 = 0;

     label005:
        $r111 = interfaceinvoke r4.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String[] getSplitNames()>();

        $i73 = lengthof $r111;

        if i75 >= $i73 goto label006;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r116);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("-");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("splt,");

        $r112 = interfaceinvoke r4.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String[] getSplitNames()>();

        $r113 = $r112[i75];

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r113);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $i74 = r123[i75];

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i74);

        i75 = i75 + 1;

        goto label005;

     label006:
        r124 = interfaceinvoke r120.<java.util.List: java.util.Iterator iterator()>();

     label007:
        $z33 = interfaceinvoke r124.<java.util.Iterator: boolean hasNext()>();

        if $z33 == 0 goto label026;

        $r108 = interfaceinvoke r124.<java.util.Iterator: java.lang.Object next()>();

        r125 = (android.content.pm.UserInfo) $r108;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r116);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("-");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("usr");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $i60 = r125.<android.content.pm.UserInfo: int id>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i60);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $i61 = r125.<android.content.pm.UserInfo: int id>;

        $z26 = virtualinvoke r2.<com.android.server.pm.PackageSetting: boolean getInstalled(int)>($i61);

        if $z26 == 0 goto label008;

        r126 = "I";

        goto label009;

     label008:
        r126 = "i";

     label009:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r126);

        $i62 = r125.<android.content.pm.UserInfo: int id>;

        $z27 = virtualinvoke r2.<com.android.server.pm.PackageSetting: boolean getHidden(int)>($i62);

        if $z27 == 0 goto label010;

        r127 = "B";

        goto label011;

     label010:
        r127 = "b";

     label011:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r127);

        $i63 = r125.<android.content.pm.UserInfo: int id>;

        $z28 = virtualinvoke r2.<com.android.server.pm.PackageSetting: boolean getSuspended(int)>($i63);

        if $z28 == 0 goto label012;

        r128 = "SU";

        goto label013;

     label012:
        r128 = "su";

     label013:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r128);

        $i64 = r125.<android.content.pm.UserInfo: int id>;

        $z29 = virtualinvoke r2.<com.android.server.pm.PackageSetting: boolean getStopped(int)>($i64);

        if $z29 == 0 goto label014;

        r129 = "S";

        goto label015;

     label014:
        r129 = "s";

     label015:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r129);

        $i65 = r125.<android.content.pm.UserInfo: int id>;

        $z30 = virtualinvoke r2.<com.android.server.pm.PackageSetting: boolean getNotLaunched(int)>($i65);

        if $z30 == 0 goto label016;

        r130 = "l";

        goto label017;

     label016:
        r130 = "L";

     label017:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r130);

        $i66 = r125.<android.content.pm.UserInfo: int id>;

        $z31 = virtualinvoke r2.<com.android.server.pm.PackageSetting: boolean getInstantApp(int)>($i66);

        if $z31 == 0 goto label018;

        r131 = "IA";

        goto label019;

     label018:
        r131 = "ia";

     label019:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r131);

        $i67 = r125.<android.content.pm.UserInfo: int id>;

        $z32 = virtualinvoke r2.<com.android.server.pm.PackageSetting: boolean getVirtulalPreload(int)>($i67);

        if $z32 == 0 goto label020;

        r132 = "VPI";

        goto label021;

     label020:
        r132 = "vpi";

     label021:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r132);

        $i68 = r125.<android.content.pm.UserInfo: int id>;

        $r109 = virtualinvoke r2.<com.android.server.pm.PackageSetting: java.lang.String getHarmfulAppWarning(int)>($i68);

        if $r109 == null goto label022;

        r133 = "HA";

        goto label023;

     label022:
        r133 = "ha";

     label023:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r133);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $i69 = r125.<android.content.pm.UserInfo: int id>;

        $i70 = virtualinvoke r2.<com.android.server.pm.PackageSetting: int getEnabled(int)>($i69);

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i70);

        $i71 = r125.<android.content.pm.UserInfo: int id>;

        r134 = virtualinvoke r2.<com.android.server.pm.PackageSetting: java.lang.String getLastDisabledAppCaller(int)>($i71);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        if r134 == null goto label024;

        goto label025;

     label024:
        r134 = "?";

     label025:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r134);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        goto label007;

     label026:
        return;

     label027:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Package [");

        $r6 = r2.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        if $r6 == null goto label028;

        r135 = r2.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        goto label029;

     label028:
        r135 = r2.<com.android.server.pm.PackageSetting: java.lang.String name>;

     label029:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r135);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("] (");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r2);

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r7);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("):");

        $r8 = r2.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        if $r8 == null goto label030;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  compat name=");

        $r104 = r2.<com.android.server.pm.PackageSetting: java.lang.String name>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r104);

     label030:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  userId=");

        $i1 = r2.<com.android.server.pm.PackageSetting: int appId>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i1);

        $r9 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r9 == null goto label031;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  sharedUser=");

        $r103 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r103);

     label031:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  pkg=");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>(r4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  codePath=");

        $r10 = r2.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r10);

        if r117 != null goto label032;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  resourcePath=");

        $r99 = r2.<com.android.server.pm.PackageSetting: java.lang.String resourcePathString>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r99);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  legacyNativeLibraryDir=");

        $r100 = r2.<com.android.server.pm.PackageSetting: java.lang.String legacyNativeLibraryPathString>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r100);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  primaryCpuAbi=");

        $r101 = r2.<com.android.server.pm.PackageSetting: java.lang.String primaryCpuAbiString>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r101);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  secondaryCpuAbi=");

        $r102 = r2.<com.android.server.pm.PackageSetting: java.lang.String secondaryCpuAbiString>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r102);

     label032:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  versionCode=");

        $l2 = r2.<com.android.server.pm.PackageSetting: long versionCode>;

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l2);

        if r4 == null goto label033;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" minSdk=");

        $i54 = interfaceinvoke r4.<com.android.server.pm.parsing.pkg.AndroidPackage: int getMinSdkVersion()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i54);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" targetSdk=");

        $i55 = interfaceinvoke r4.<com.android.server.pm.parsing.pkg.AndroidPackage: int getTargetSdkVersion()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i55);

     label033:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        if r4 == null goto label068;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  versionName=");

        $r62 = interfaceinvoke r4.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getVersionName()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r62);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  splits=");

        staticinvoke <com.android.server.pm.Settings: void dumpSplitNames(java.io.PrintWriter,com.android.server.pm.parsing.pkg.AndroidPackage)>(r1, r4);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        $r63 = interfaceinvoke r4.<com.android.server.pm.parsing.pkg.AndroidPackage: android.content.pm.PackageParser$SigningDetails getSigningDetails()>();

        i76 = $r63.<android.content.pm.PackageParser$SigningDetails: int signatureSchemeVersion>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  apkSigningVersion=");

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>(i76);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  applicationInfo=");

        $r64 = interfaceinvoke r4.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String toAppInfoToString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r64);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  flags=");

        $i40 = staticinvoke <com.android.server.pm.parsing.PackageInfoUtils: int appInfoFlags(com.android.server.pm.parsing.pkg.AndroidPackage,com.android.server.pm.PackageSetting)>(r4, r2);

        $r65 = <com.android.server.pm.Settings: java.lang.Object[] FLAG_DUMP_SPEC>;

        staticinvoke <com.android.server.pm.Settings: void printFlags(java.io.PrintWriter,int,java.lang.Object[])>(r1, $i40, $r65);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        i77 = staticinvoke <com.android.server.pm.parsing.PackageInfoUtils: int appInfoPrivateFlags(com.android.server.pm.parsing.pkg.AndroidPackage,com.android.server.pm.PackageSetting)>(r4, r2);

        if i77 == 0 goto label034;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  privateFlags=");

        $r98 = <com.android.server.pm.Settings: java.lang.Object[] PRIVATE_FLAG_DUMP_SPEC>;

        staticinvoke <com.android.server.pm.Settings: void printFlags(java.io.PrintWriter,int,java.lang.Object[])>(r1, i77, $r98);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label034:
        $z17 = interfaceinvoke r4.<com.android.server.pm.parsing.pkg.AndroidPackage: boolean hasPreserveLegacyExternalStorage()>();

        if $z17 == 0 goto label035;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  hasPreserveLegacyExternalStorage=true");

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label035:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  forceQueryable=");

        $r66 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        $z18 = interfaceinvoke $r66.<com.android.server.pm.parsing.pkg.AndroidPackage: boolean isForceQueryable()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z18);

        $z19 = r2.<com.android.server.pm.PackageSetting: boolean forceQueryableOverride>;

        if $z19 == 0 goto label036;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" (override=true)");

     label036:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        $r67 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        $r68 = interfaceinvoke $r67.<com.android.server.pm.parsing.pkg.AndroidPackage: java.util.List getQueriesPackages()>();

        $z20 = interfaceinvoke $r68.<java.util.List: boolean isEmpty()>();

        if $z20 == 0 goto label037;

        $r94 = virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r115);

        $r95 = virtualinvoke $r94.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("  queriesPackages=");

        $r96 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        $r97 = interfaceinvoke $r96.<com.android.server.pm.parsing.pkg.AndroidPackage: java.util.List getQueriesPackages()>();

        virtualinvoke $r95.<java.io.PrintWriter: void println(java.lang.Object)>($r97);

     label037:
        $r69 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        $r70 = interfaceinvoke $r69.<com.android.server.pm.parsing.pkg.AndroidPackage: java.util.List getQueriesIntents()>();

        $z21 = interfaceinvoke $r70.<java.util.List: boolean isEmpty()>();

        if $z21 != 0 goto label038;

        $r90 = virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r115);

        $r91 = virtualinvoke $r90.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("  queriesIntents=");

        $r92 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        $r93 = interfaceinvoke $r92.<com.android.server.pm.parsing.pkg.AndroidPackage: java.util.List getQueriesIntents()>();

        virtualinvoke $r91.<java.io.PrintWriter: void println(java.lang.Object)>($r93);

     label038:
        $i41 = staticinvoke <android.os.UserHandle: int myUserId()>();

        r136 = staticinvoke <android.content.pm.parsing.PackageInfoWithoutStateUtils: java.io.File getDataDir(android.content.pm.parsing.ParsingPackageRead,int)>(r4, $i41);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  dataDir=");

        $r71 = virtualinvoke r136.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r71);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  supportsScreens=[");

        z34 = 1;

        $z22 = interfaceinvoke r4.<com.android.server.pm.parsing.pkg.AndroidPackage: boolean isSupportsSmallScreens()>();

        if $z22 == 0 goto label040;

        goto label039;

     label039:
        z34 = 0;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("small");

     label040:
        z35 = z34;

        $z36 = interfaceinvoke r4.<com.android.server.pm.parsing.pkg.AndroidPackage: boolean isSupportsNormalScreens()>();

        if $z36 == 0 goto label042;

        if z34 != 0 goto label041;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", ");

     label041:
        z35 = 0;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("medium");

     label042:
        z37 = z35;

        $z38 = interfaceinvoke r4.<com.android.server.pm.parsing.pkg.AndroidPackage: boolean isSupportsLargeScreens()>();

        if $z38 == 0 goto label044;

        if z35 != 0 goto label043;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", ");

     label043:
        z37 = 0;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("large");

     label044:
        z39 = z37;

        $z40 = interfaceinvoke r4.<com.android.server.pm.parsing.pkg.AndroidPackage: boolean isSupportsExtraLargeScreens()>();

        if $z40 == 0 goto label046;

        if z37 != 0 goto label045;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", ");

     label045:
        z39 = 0;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("xlarge");

     label046:
        z41 = z39;

        $z42 = interfaceinvoke r4.<com.android.server.pm.parsing.pkg.AndroidPackage: boolean isResizeable()>();

        if $z42 == 0 goto label048;

        if z39 != 0 goto label047;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", ");

     label047:
        z41 = 0;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("resizeable");

     label048:
        $z44 = interfaceinvoke r4.<com.android.server.pm.parsing.pkg.AndroidPackage: boolean isAnyDensity()>();

        if $z44 == 0 goto label050;

        if z41 != 0 goto label049;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", ");

     label049:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("anyDensity");

     label050:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("]");

        r137 = interfaceinvoke r4.<com.android.server.pm.parsing.pkg.AndroidPackage: java.util.List getLibraryNames()>();

        if r137 == null goto label052;

        $i52 = interfaceinvoke r137.<java.util.List: int size()>();

        if $i52 <= 0 goto label052;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  dynamic libraries:");

        i78 = 0;

     label051:
        $i53 = interfaceinvoke r137.<java.util.List: int size()>();

        if i78 >= $i53 goto label052;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $r88 = interfaceinvoke r137.<java.util.List: java.lang.Object get(int)>(i78);

        $r89 = (java.lang.String) $r88;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r89);

        i78 = i78 + 1;

        goto label051;

     label052:
        $r138 = interfaceinvoke r4.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getStaticSharedLibName()>();

        if $r138 == null goto label053;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  static library:");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("name:");

        $r87 = interfaceinvoke r4.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getStaticSharedLibName()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r87);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" version:");

        $l51 = interfaceinvoke r4.<com.android.server.pm.parsing.pkg.AndroidPackage: long getStaticSharedLibVersion()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(long)>($l51);

        goto label053;

     label053:
        r139 = interfaceinvoke r4.<com.android.server.pm.parsing.pkg.AndroidPackage: java.util.List getUsesLibraries()>();

        $i42 = interfaceinvoke r139.<java.util.List: int size()>();

        if $i42 <= 0 goto label055;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  usesLibraries:");

        i79 = 0;

     label054:
        $i50 = interfaceinvoke r139.<java.util.List: int size()>();

        if i79 >= $i50 goto label055;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $r85 = interfaceinvoke r139.<java.util.List: java.lang.Object get(int)>(i79);

        $r86 = (java.lang.String) $r85;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r86);

        i79 = i79 + 1;

        goto label054;

     label055:
        r140 = interfaceinvoke r4.<com.android.server.pm.parsing.pkg.AndroidPackage: java.util.List getUsesStaticLibraries()>();

        r141 = interfaceinvoke r4.<com.android.server.pm.parsing.pkg.AndroidPackage: long[] getUsesStaticLibrariesVersions()>();

        $i43 = interfaceinvoke r140.<java.util.List: int size()>();

        if $i43 <= 0 goto label058;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  usesStaticLibraries:");

        i80 = 0;

     label056:
        $i48 = interfaceinvoke r140.<java.util.List: int size()>();

        if i80 >= $i48 goto label057;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $r83 = interfaceinvoke r140.<java.util.List: java.lang.Object get(int)>(i80);

        $r84 = (java.lang.String) $r83;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r84);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" version:");

        $l49 = r141[i80];

        virtualinvoke r1.<java.io.PrintWriter: void println(long)>($l49);

        i80 = i80 + 1;

        goto label056;

     label057:
        goto label058;

     label058:
        r143 = interfaceinvoke r4.<com.android.server.pm.parsing.pkg.AndroidPackage: java.util.List getUsesOptionalLibraries()>();

        $i44 = interfaceinvoke r143.<java.util.List: int size()>();

        if $i44 <= 0 goto label060;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  usesOptionalLibraries:");

        i81 = 0;

     label059:
        $i47 = interfaceinvoke r143.<java.util.List: int size()>();

        if i81 >= $i47 goto label060;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $r81 = interfaceinvoke r143.<java.util.List: java.lang.Object get(int)>(i81);

        $r82 = (java.lang.String) $r81;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r82);

        i81 = i81 + 1;

        goto label059;

     label060:
        $r72 = virtualinvoke r2.<com.android.server.pm.PackageSetting: com.android.server.pm.pkg.PackageStateUnserialized getPkgState()>();

        r144 = virtualinvoke $r72.<com.android.server.pm.pkg.PackageStateUnserialized: java.util.List getUsesLibraryFiles()>();

        $i45 = interfaceinvoke r144.<java.util.List: int size()>();

        if $i45 <= 0 goto label062;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  usesLibraryFiles:");

        i82 = 0;

     label061:
        $i46 = interfaceinvoke r144.<java.util.List: int size()>();

        if i82 >= $i46 goto label062;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $r79 = interfaceinvoke r144.<java.util.List: java.lang.Object get(int)>(i82);

        $r80 = (java.lang.String) $r79;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r80);

        i82 = i82 + 1;

        goto label061;

     label062:
        r145 = interfaceinvoke r4.<com.android.server.pm.parsing.pkg.AndroidPackage: java.util.Map getProcesses()>();

        $z23 = interfaceinvoke r145.<java.util.Map: boolean isEmpty()>();

        if $z23 != 0 goto label068;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  processes:");

        $r73 = interfaceinvoke r145.<java.util.Map: java.util.Collection values()>();

        r146 = interfaceinvoke $r73.<java.util.Collection: java.util.Iterator iterator()>();

     label063:
        $z24 = interfaceinvoke r146.<java.util.Iterator: boolean hasNext()>();

        if $z24 == 0 goto label067;

        $r74 = interfaceinvoke r146.<java.util.Iterator: java.lang.Object next()>();

        r149 = (android.content.pm.parsing.component.ParsedProcess) $r74;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $r75 = virtualinvoke r149.<android.content.pm.parsing.component.ParsedProcess: java.lang.String getName()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r75);

        $r76 = virtualinvoke r149.<android.content.pm.parsing.component.ParsedProcess: java.util.Set getDeniedPermissions()>();

        if $r76 == null goto label066;

        $r77 = virtualinvoke r149.<android.content.pm.parsing.component.ParsedProcess: java.util.Set getDeniedPermissions()>();

        r150 = interfaceinvoke $r77.<java.util.Set: java.util.Iterator iterator()>();

     label064:
        $z25 = interfaceinvoke r150.<java.util.Iterator: boolean hasNext()>();

        if $z25 == 0 goto label065;

        $r78 = interfaceinvoke r150.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r78;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("      deny: ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r5);

        goto label064;

     label065:
        goto label066;

     label066:
        goto label063;

     label067:
        goto label068;

     label068:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  timeStamp=");

        $l83 = r2.<com.android.server.pm.PackageSetting: long timeStamp>;

        virtualinvoke r119.<java.util.Date: void setTime(long)>($l83);

        $r151 = virtualinvoke r118.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r119);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r151);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  firstInstallTime=");

        $l84 = r2.<com.android.server.pm.PackageSetting: long firstInstallTime>;

        virtualinvoke r119.<java.util.Date: void setTime(long)>($l84);

        $r152 = virtualinvoke r118.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r119);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r152);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  lastUpdateTime=");

        $l85 = r2.<com.android.server.pm.PackageSetting: long lastUpdateTime>;

        virtualinvoke r119.<java.util.Date: void setTime(long)>($l85);

        $r153 = virtualinvoke r118.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r119);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r153);

        $r154 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.InstallSource installSource>;

        $r155 = $r154.<com.android.server.pm.InstallSource: java.lang.String installerPackageName>;

        if $r155 == null goto label069;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  installerPackageName=");

        $r60 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.InstallSource installSource>;

        $r61 = $r60.<com.android.server.pm.InstallSource: java.lang.String installerPackageName>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r61);

     label069:
        $r11 = r2.<com.android.server.pm.PackageSetting: java.lang.String volumeUuid>;

        if $r11 == null goto label070;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  volumeUuid=");

        $r59 = r2.<com.android.server.pm.PackageSetting: java.lang.String volumeUuid>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r59);

     label070:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  signatures=");

        $r12 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r12);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  installPermissionsFixed=");

        $z2 = r2.<com.android.server.pm.PackageSetting: boolean installPermissionsFixed>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z2);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  pkgFlags=");

        $i3 = r2.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $r13 = <com.android.server.pm.Settings: java.lang.Object[] FLAG_DUMP_SPEC>;

        staticinvoke <com.android.server.pm.Settings: void printFlags(java.io.PrintWriter,int,java.lang.Object[])>(r1, $i3, $r13);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        if r4 == null goto label071;

        $r56 = interfaceinvoke r4.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getOverlayTarget()>();

        if $r56 == null goto label071;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  overlayTarget=");

        $r57 = interfaceinvoke r4.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getOverlayTarget()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r57);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  overlayCategory=");

        $r58 = interfaceinvoke r4.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getOverlayCategory()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r58);

     label071:
        if r4 == null goto label078;

        $r51 = interfaceinvoke r4.<com.android.server.pm.parsing.pkg.AndroidPackage: java.util.List getPermissions()>();

        $z15 = interfaceinvoke $r51.<java.util.List: boolean isEmpty()>();

        if $z15 != 0 goto label078;

        r156 = interfaceinvoke r4.<com.android.server.pm.parsing.pkg.AndroidPackage: java.util.List getPermissions()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  declared permissions:");

        i86 = 0;

     label072:
        $i32 = interfaceinvoke r156.<java.util.List: int size()>();

        if i86 >= $i32 goto label078;

        $r52 = interfaceinvoke r156.<java.util.List: java.lang.Object get(int)>(i86);

        r157 = (android.content.pm.parsing.component.ParsedPermission) $r52;

        if r117 == null goto label073;

        $r55 = virtualinvoke r157.<android.content.pm.parsing.component.ParsedPermission: java.lang.String getName()>();

        $z16 = virtualinvoke r117.<android.util.ArraySet: boolean contains(java.lang.Object)>($r55);

        if $z16 != 0 goto label073;

        goto label077;

     label073:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $r53 = virtualinvoke r157.<android.content.pm.parsing.component.ParsedPermission: java.lang.String getName()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r53);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": prot=");

        $i33 = virtualinvoke r157.<android.content.pm.parsing.component.ParsedPermission: int getProtectionLevel()>();

        $r54 = staticinvoke <android.content.pm.PermissionInfo: java.lang.String protectionToString(int)>($i33);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r54);

        $i34 = virtualinvoke r157.<android.content.pm.parsing.component.ParsedPermission: int getFlags()>();

        $i35 = $i34 & 1;

        if $i35 == 0 goto label074;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", COSTS_MONEY");

     label074:
        $i36 = virtualinvoke r157.<android.content.pm.parsing.component.ParsedPermission: int getFlags()>();

        $i37 = $i36 & 2;

        if $i37 == 0 goto label075;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", HIDDEN");

     label075:
        $i38 = virtualinvoke r157.<android.content.pm.parsing.component.ParsedPermission: int getFlags()>();

        $i39 = $i38 & 1073741824;

        if $i39 == 0 goto label076;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", INSTALLED");

     label076:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label077:
        i86 = i86 + 1;

        goto label072;

     label078:
        if r117 != null goto label079;

        if z0 == 0 goto label084;

     label079:
        if r4 == null goto label084;

        $r47 = interfaceinvoke r4.<com.android.server.pm.parsing.pkg.AndroidPackage: java.util.List getRequestedPermissions()>();

        if $r47 == null goto label084;

        $r48 = interfaceinvoke r4.<com.android.server.pm.parsing.pkg.AndroidPackage: java.util.List getRequestedPermissions()>();

        $i30 = interfaceinvoke $r48.<java.util.List: int size()>();

        if $i30 <= 0 goto label084;

        r158 = interfaceinvoke r4.<com.android.server.pm.parsing.pkg.AndroidPackage: java.util.List getRequestedPermissions()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  requested permissions:");

        i87 = 0;

     label080:
        $i31 = interfaceinvoke r158.<java.util.List: int size()>();

        if i87 >= $i31 goto label084;

        $r49 = interfaceinvoke r158.<java.util.List: java.lang.Object get(int)>(i87);

        r159 = (java.lang.String) $r49;

        if r117 == null goto label081;

        $z14 = virtualinvoke r117.<android.util.ArraySet: boolean contains(java.lang.Object)>(r159);

        if $z14 != 0 goto label081;

        goto label083;

     label081:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r159);

        $r50 = r0.<com.android.server.pm.Settings: com.android.server.pm.permission.PermissionSettings mPermissions>;

        r160 = virtualinvoke $r50.<com.android.server.pm.permission.PermissionSettings: com.android.server.pm.permission.BasePermission getPermission(java.lang.String)>(r159);

        if r160 == null goto label082;

        $z13 = virtualinvoke r160.<com.android.server.pm.permission.BasePermission: boolean isHardOrSoftRestricted()>();

        if $z13 == 0 goto label082;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(": restricted=true");

        goto label083;

     label082:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label083:
        i87 = i87 + 1;

        goto label080;

     label084:
        $r161 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r161 == null goto label085;

        if r117 != null goto label085;

        if z0 == 0 goto label086;

     label085:
        r162 = virtualinvoke r2.<com.android.server.pm.PackageSetting: com.android.server.pm.permission.PermissionsState getPermissionsState()>();

        $r163 = new java.lang.StringBuilder;

        specialinvoke $r163.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r163.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r115);

        virtualinvoke $r163.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r165 = virtualinvoke $r163.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.pm.Settings: void dumpInstallPermissionsLPr(java.io.PrintWriter,java.lang.String,android.util.ArraySet,com.android.server.pm.permission.PermissionsState)>(r1, $r165, r117, r162);

     label086:
        if z1 == 0 goto label087;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r115);

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r46 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.pm.Settings: void dumpComponents(java.io.PrintWriter,java.lang.String,com.android.server.pm.PackageSetting)>(r1, $r46, r2);

     label087:
        r167 = interfaceinvoke r120.<java.util.List: java.util.Iterator iterator()>();

     label088:
        $z46 = interfaceinvoke r167.<java.util.Iterator: boolean hasNext()>();

        if $z46 == 0 goto label106;

        $r16 = interfaceinvoke r167.<java.util.Iterator: java.lang.Object next()>();

        r168 = (android.content.pm.UserInfo) $r16;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  User ");

        $i4 = r168.<android.content.pm.UserInfo: int id>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("ceDataInode=");

        $i5 = r168.<android.content.pm.UserInfo: int id>;

        $l6 = virtualinvoke r2.<com.android.server.pm.PackageSetting: long getCeDataInode(int)>($i5);

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l6);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" installed=");

        $i7 = r168.<android.content.pm.UserInfo: int id>;

        $z3 = virtualinvoke r2.<com.android.server.pm.PackageSetting: boolean getInstalled(int)>($i7);

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" hidden=");

        $i8 = r168.<android.content.pm.UserInfo: int id>;

        $z4 = virtualinvoke r2.<com.android.server.pm.PackageSetting: boolean getHidden(int)>($i8);

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" suspended=");

        $i9 = r168.<android.content.pm.UserInfo: int id>;

        $z5 = virtualinvoke r2.<com.android.server.pm.PackageSetting: boolean getSuspended(int)>($i9);

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" distractionFlags=");

        $i10 = r168.<android.content.pm.UserInfo: int id>;

        $i11 = virtualinvoke r2.<com.android.server.pm.PackageSetting: int getDistractionFlags(int)>($i10);

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i11);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" stopped=");

        $i12 = r168.<android.content.pm.UserInfo: int id>;

        $z6 = virtualinvoke r2.<com.android.server.pm.PackageSetting: boolean getStopped(int)>($i12);

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z6);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" notLaunched=");

        $i13 = r168.<android.content.pm.UserInfo: int id>;

        $z7 = virtualinvoke r2.<com.android.server.pm.PackageSetting: boolean getNotLaunched(int)>($i13);

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z7);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" enabled=");

        $i14 = r168.<android.content.pm.UserInfo: int id>;

        $i15 = virtualinvoke r2.<com.android.server.pm.PackageSetting: int getEnabled(int)>($i14);

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i15);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" instant=");

        $i16 = r168.<android.content.pm.UserInfo: int id>;

        $z8 = virtualinvoke r2.<com.android.server.pm.PackageSetting: boolean getInstantApp(int)>($i16);

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z8);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" virtual=");

        $i17 = r168.<android.content.pm.UserInfo: int id>;

        $z9 = virtualinvoke r2.<com.android.server.pm.PackageSetting: boolean getVirtulalPreload(int)>($i17);

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z9);

        $i18 = r168.<android.content.pm.UserInfo: int id>;

        $z10 = virtualinvoke r2.<com.android.server.pm.PackageSetting: boolean getSuspended(int)>($i18);

        if $z10 == 0 goto label091;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  Suspend params:");

        $i28 = r168.<android.content.pm.UserInfo: int id>;

        r169 = virtualinvoke r2.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>($i28);

        i88 = 0;

     label089:
        $r36 = r169.<android.content.pm.PackageUserState: android.util.ArrayMap suspendParams>;

        $i29 = virtualinvoke $r36.<android.util.ArrayMap: int size()>();

        if i88 >= $i29 goto label091;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    suspendingPackage=");

        $r37 = r169.<android.content.pm.PackageUserState: android.util.ArrayMap suspendParams>;

        $r38 = virtualinvoke $r37.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i88);

        $r39 = (java.lang.String) $r38;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r39);

        $r40 = r169.<android.content.pm.PackageUserState: android.util.ArrayMap suspendParams>;

        $r41 = virtualinvoke $r40.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i88);

        r170 = (android.content.pm.PackageUserState$SuspendParams) $r41;

        if r170 == null goto label090;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" dialogInfo=");

        $r42 = r170.<android.content.pm.PackageUserState$SuspendParams: android.content.pm.SuspendDialogInfo dialogInfo>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.Object)>($r42);

     label090:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        i88 = i88 + 1;

        goto label089;

     label091:
        $i19 = r168.<android.content.pm.UserInfo: int id>;

        r171 = virtualinvoke r2.<com.android.server.pm.PackageSetting: java.lang.String[] getOverlayPaths(int)>($i19);

        if r171 == null goto label093;

        $i27 = lengthof r171;

        if $i27 <= 0 goto label093;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  overlay paths:");

        i89 = lengthof r171;

        i90 = 0;

     label092:
        if i90 >= i89 goto label093;

        r172 = r171[i90];

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r172);

        i90 = i90 + 1;

        goto label092;

     label093:
        $i91 = r168.<android.content.pm.UserInfo: int id>;

        r173 = virtualinvoke r2.<com.android.server.pm.PackageSetting: java.util.Map getOverlayPathsForLibrary(int)>($i91);

        if r173 == null goto label098;

        $r30 = interfaceinvoke r173.<java.util.Map: java.util.Set entrySet()>();

        r174 = interfaceinvoke $r30.<java.util.Set: java.util.Iterator iterator()>();

     label094:
        $z47 = interfaceinvoke r174.<java.util.Iterator: boolean hasNext()>();

        if $z47 == 0 goto label098;

        $r31 = interfaceinvoke r174.<java.util.Iterator: java.lang.Object next()>();

        r175 = (java.util.Map$Entry) $r31;

        $r32 = interfaceinvoke r175.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r32 != null goto label095;

        goto label094;

     label095:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        $r33 = interfaceinvoke r175.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r34 = (java.lang.String) $r33;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r34);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(" overlay paths:");

        $r35 = interfaceinvoke r175.<java.util.Map$Entry: java.lang.Object getValue()>();

        r176 = (java.lang.String[]) $r35;

        i92 = lengthof r176;

        i93 = 0;

     label096:
        if i93 >= i92 goto label097;

        r177 = r176[i93];

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r177);

        i93 = i93 + 1;

        goto label096;

     label097:
        goto label094;

     label098:
        $i20 = r168.<android.content.pm.UserInfo: int id>;

        r178 = virtualinvoke r2.<com.android.server.pm.PackageSetting: java.lang.String getLastDisabledAppCaller(int)>($i20);

        if r178 == null goto label099;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    lastDisabledCaller: ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r178);

     label099:
        $r17 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r17 != null goto label100;

        r179 = virtualinvoke r2.<com.android.server.pm.PackageSetting: com.android.server.pm.permission.PermissionsState getPermissionsState()>();

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r115);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        $i25 = r168.<android.content.pm.UserInfo: int id>;

        $r24 = virtualinvoke r179.<com.android.server.pm.permission.PermissionsState: int[] computeGids(int)>($i25);

        virtualinvoke r0.<com.android.server.pm.Settings: void dumpGidsLPr(java.io.PrintWriter,java.lang.String,int[])>(r1, $r23, $r24);

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r115);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        $i26 = r168.<android.content.pm.UserInfo: int id>;

        $r29 = virtualinvoke r179.<com.android.server.pm.permission.PermissionsState: java.util.List getRuntimePermissionStates(int)>($i26);

        virtualinvoke r0.<com.android.server.pm.Settings: void dumpRuntimePermissionsLPr(java.io.PrintWriter,java.lang.String,android.util.ArraySet,java.util.List,boolean)>(r1, $r28, r117, $r29, z0);

        goto label100;

     label100:
        $i21 = r168.<android.content.pm.UserInfo: int id>;

        r182 = virtualinvoke r2.<com.android.server.pm.PackageSetting: java.lang.String getHarmfulAppWarning(int)>($i21);

        if r182 == null goto label101;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("      harmfulAppWarning: ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r182);

     label101:
        if r117 != null goto label105;

        $i22 = r168.<android.content.pm.UserInfo: int id>;

        r183 = virtualinvoke r2.<com.android.server.pm.PackageSetting: android.util.ArraySet getDisabledComponents(int)>($i22);

        if r183 == null goto label103;

        $i24 = virtualinvoke r183.<android.util.ArraySet: int size()>();

        if $i24 <= 0 goto label103;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    disabledComponents:");

        r184 = virtualinvoke r183.<android.util.ArraySet: java.util.Iterator iterator()>();

     label102:
        $z12 = interfaceinvoke r184.<java.util.Iterator: boolean hasNext()>();

        if $z12 == 0 goto label103;

        $r19 = interfaceinvoke r184.<java.util.Iterator: java.lang.Object next()>();

        r185 = (java.lang.String) $r19;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("      ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r185);

        goto label102;

     label103:
        $i94 = r168.<android.content.pm.UserInfo: int id>;

        r186 = virtualinvoke r2.<com.android.server.pm.PackageSetting: android.util.ArraySet getEnabledComponents(int)>($i94);

        if r186 == null goto label105;

        $i23 = virtualinvoke r186.<android.util.ArraySet: int size()>();

        if $i23 <= 0 goto label105;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    enabledComponents:");

        r187 = virtualinvoke r186.<android.util.ArraySet: java.util.Iterator iterator()>();

     label104:
        $z11 = interfaceinvoke r187.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label105;

        $r18 = interfaceinvoke r187.<java.util.Iterator: java.lang.Object next()>();

        r188 = (java.lang.String) $r18;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r115);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("      ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r188);

        goto label104;

     label105:
        goto label088;

     label106:
        return;
    }

    void dumpPackagesLPr(java.io.PrintWriter, java.lang.String, android.util.ArraySet, com.android.server.pm.DumpState, boolean)
    {
        com.android.server.pm.Settings r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r17, $r18, $r23, $r25, $r31, $r32, r36, r40, r45;
        android.util.ArraySet r3;
        com.android.server.pm.DumpState r4;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, z12, z13, z14, z15, $z16, z17, z18, $z19, z20, z21;
        java.util.List r7;
        java.text.SimpleDateFormat $r8;
        java.util.Date $r9;
        com.android.server.pm.UserManagerService $r10;
        android.util.ArrayMap $r11, $r13, $r14, $r19, $r41;
        java.util.Collection $r12, $r15;
        int $i0, $i1;
        java.lang.Object $r16, $r21, $r22, $r24, $r26, $r27, $r28;
        java.util.Set $r20;
        com.android.server.pm.SharedUserSetting $r29;
        com.android.server.pm.permission.PermissionsState $r30;
        java.util.Iterator r35, r38, r42;
        com.android.server.pm.PackageSetting r37, r44;
        java.util.Map$Entry r39;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.util.ArraySet;

        r4 := @parameter3: com.android.server.pm.DumpState;

        z0 := @parameter4: boolean;

        $r8 = new java.text.SimpleDateFormat;

        specialinvoke $r8.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd HH:mm:ss");

        $r9 = new java.util.Date;

        specialinvoke $r9.<java.util.Date: void <init>()>();

        z12 = 0;

        z1 = virtualinvoke r4.<com.android.server.pm.DumpState: boolean isOptionEnabled(int)>(2);

        $r10 = staticinvoke <com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService getInstance()>();

        r7 = staticinvoke <com.android.server.pm.Settings: java.util.List getAllUsers(com.android.server.pm.UserManagerService)>($r10);

        $r11 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r12 = virtualinvoke $r11.<android.util.ArrayMap: java.util.Collection values()>();

        r35 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();

     label01:
        z13 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>();

        r36 = null;

        if z13 == 0 goto label10;

        $r28 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>();

        r37 = (com.android.server.pm.PackageSetting) $r28;

        if r2 == null goto label02;

        $r31 = r37.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        $z10 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r31);

        if $z10 != 0 goto label02;

        $r32 = r37.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $z11 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r32);

        if $z11 != 0 goto label02;

        goto label01;

     label02:
        if r3 == null goto label03;

        $r30 = virtualinvoke r37.<com.android.server.pm.PackageSetting: com.android.server.pm.permission.PermissionsState getPermissionsState()>();

        $z9 = virtualinvoke $r30.<com.android.server.pm.permission.PermissionsState: boolean hasRequestedPermission(android.util.ArraySet)>(r3);

        if $z9 != 0 goto label03;

        goto label01;

     label03:
        if z0 != 0 goto label04;

        if r2 == null goto label04;

        $r29 = r37.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        virtualinvoke r4.<com.android.server.pm.DumpState: void setSharedUser(com.android.server.pm.SharedUserSetting)>($r29);

     label04:
        if z0 != 0 goto label06;

        if z12 != 0 goto label06;

        $z8 = virtualinvoke r4.<com.android.server.pm.DumpState: boolean onTitlePrinted()>();

        if $z8 == 0 goto label05;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label05:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Packages:");

        z12 = 1;

        goto label06;

     label06:
        if z0 == 0 goto label07;

        r36 = "pkg";

     label07:
        if r2 == null goto label08;

        z14 = 1;

        goto label09;

     label08:
        z14 = 0;

     label09:
        virtualinvoke r0.<com.android.server.pm.Settings: void dumpPackageLPr(java.io.PrintWriter,java.lang.String,java.lang.String,android.util.ArraySet,com.android.server.pm.PackageSetting,java.text.SimpleDateFormat,java.util.Date,java.util.List,boolean,boolean)>(r1, "  ", r36, r3, r37, $r8, $r9, r7, z14, z1);

        goto label01;

     label10:
        z15 = 0;

        $r13 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mRenamedPackages>;

        $i0 = virtualinvoke $r13.<android.util.ArrayMap: int size()>();

        if $i0 <= 0 goto label19;

        if r3 != null goto label19;

        $r19 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mRenamedPackages>;

        $r20 = virtualinvoke $r19.<android.util.ArrayMap: java.util.Set entrySet()>();

        r38 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();

     label11:
        $z16 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>();

        if $z16 == 0 goto label19;

        $r21 = interfaceinvoke r38.<java.util.Iterator: java.lang.Object next()>();

        r39 = (java.util.Map$Entry) $r21;

        if r2 == null goto label12;

        $r26 = interfaceinvoke r39.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r26);

        if $z6 != 0 goto label12;

        $r27 = interfaceinvoke r39.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z7 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r27);

        if $z7 != 0 goto label12;

        goto label11;

     label12:
        if z0 != 0 goto label15;

        z17 = z15;

        if z15 != 0 goto label14;

        $z5 = virtualinvoke r4.<com.android.server.pm.DumpState: boolean onTitlePrinted()>();

        if $z5 == 0 goto label13;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label13:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Renamed packages:");

        z17 = 1;

     label14:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        goto label16;

     label15:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("ren,");

        z17 = z15;

     label16:
        $r22 = interfaceinvoke r39.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r23 = (java.lang.String) $r22;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r23);

        if z0 == 0 goto label17;

        r40 = " -> ";

        goto label18;

     label17:
        r40 = ",";

     label18:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r40);

        $r24 = interfaceinvoke r39.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r25 = (java.lang.String) $r24;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r25);

        z15 = z17;

        goto label11;

     label19:
        z18 = 0;

        $r41 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mDisabledSysPackages>;

        $i1 = virtualinvoke $r41.<android.util.ArrayMap: int size()>();

        if $i1 <= 0 goto label28;

        if r3 != null goto label28;

        $r14 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mDisabledSysPackages>;

        $r15 = virtualinvoke $r14.<android.util.ArrayMap: java.util.Collection values()>();

        r42 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>();

     label20:
        $z19 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>();

        if $z19 == 0 goto label28;

        $r16 = interfaceinvoke r42.<java.util.Iterator: java.lang.Object next()>();

        r44 = (com.android.server.pm.PackageSetting) $r16;

        if r2 == null goto label21;

        $r17 = r44.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z3 != 0 goto label21;

        $r18 = r44.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z4 != 0 goto label21;

        goto label20;

     label21:
        z20 = z18;

        if z0 != 0 goto label23;

        z20 = z18;

        if z18 != 0 goto label23;

        $z2 = virtualinvoke r4.<com.android.server.pm.DumpState: boolean onTitlePrinted()>();

        if $z2 == 0 goto label22;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label22:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Hidden system packages:");

        z20 = 1;

     label23:
        if z0 == 0 goto label24;

        r45 = "dis";

        goto label25;

     label24:
        r45 = null;

     label25:
        if r2 == null goto label26;

        z21 = 1;

        goto label27;

     label26:
        z21 = 0;

     label27:
        virtualinvoke r0.<com.android.server.pm.Settings: void dumpPackageLPr(java.io.PrintWriter,java.lang.String,java.lang.String,android.util.ArraySet,com.android.server.pm.PackageSetting,java.text.SimpleDateFormat,java.util.Date,java.util.List,boolean,boolean)>(r1, "  ", r45, r3, r44, $r8, $r9, r7, z21, z1);

        z18 = z20;

        goto label20;

     label28:
        return;
    }

    void dumpPackagesProto(android.util.proto.ProtoOutputStream)
    {
        com.android.server.pm.Settings r0;
        android.util.proto.ProtoOutputStream r1;
        java.util.List r2;
        int i0, i1;
        com.android.server.pm.UserManagerService $r3;
        android.util.ArrayMap $r4, $r5;
        java.lang.Object $r6;
        com.android.server.pm.PackageSetting $r7;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        $r3 = staticinvoke <com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService getInstance()>();

        r2 = staticinvoke <com.android.server.pm.Settings: java.util.List getAllUsers(com.android.server.pm.UserManagerService)>($r3);

        $r4 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        i0 = virtualinvoke $r4.<android.util.ArrayMap: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r5 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        $r7 = (com.android.server.pm.PackageSetting) $r6;

        virtualinvoke $r7.<com.android.server.pm.PackageSetting: void dumpDebug(android.util.proto.ProtoOutputStream,long,java.util.List)>(r1, 2246267895813L, r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void dumpPermissionsLPr(java.io.PrintWriter, java.lang.String, android.util.ArraySet, com.android.server.pm.DumpState)
    {
        com.android.server.pm.Settings r0;
        java.io.PrintWriter r1;
        java.lang.String r2;
        android.util.ArraySet r3;
        com.android.server.pm.DumpState r4;
        com.android.server.pm.permission.PermissionSettings r5;
        java.lang.Boolean $r6, $r7;
        boolean z0;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.util.ArraySet;

        r4 := @parameter3: com.android.server.pm.DumpState;

        r5 = r0.<com.android.server.pm.Settings: com.android.server.pm.permission.PermissionSettings mPermissions>;

        $r7 = r0.<com.android.server.pm.Settings: java.lang.Boolean mReadExternalStorageEnforced>;

        $r6 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        if $r7 != $r6 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        virtualinvoke r5.<com.android.server.pm.permission.PermissionSettings: void dumpPermissions(java.io.PrintWriter,java.lang.String,android.util.ArraySet,boolean,com.android.server.pm.DumpState)>(r1, r2, r3, z0, r4);

        return;
    }

    void dumpReadMessagesLPr(java.io.PrintWriter, com.android.server.pm.DumpState)
    {
        com.android.server.pm.Settings r0;
        java.io.PrintWriter r1;
        com.android.server.pm.DumpState r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: com.android.server.pm.DumpState;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Settings parse messages:");

        $r3 = r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r4);

        return;
    }

    void dumpRuntimePermissionsLPr(java.io.PrintWriter, java.lang.String, android.util.ArraySet, java.util.List, boolean)
    {
        com.android.server.pm.Settings r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r6, $r7, $r8;
        android.util.ArraySet r3;
        boolean z0, $z1, $z2, $z3, $z4;
        java.util.Iterator r4;
        java.lang.Object $r5;
        int $i0;
        java.util.List r9;
        com.android.server.pm.permission.PermissionsState$PermissionState r10;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.util.ArraySet;

        r9 := @parameter3: java.util.List;

        z0 := @parameter4: boolean;

        $z1 = interfaceinvoke r9.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        if z0 == 0 goto label4;

     label1:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("runtime permissions:");

        r4 = interfaceinvoke r9.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z4 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label4;

        $r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r10 = (com.android.server.pm.permission.PermissionsState$PermissionState) $r5;

        if r3 == null goto label3;

        $r8 = virtualinvoke r10.<com.android.server.pm.permission.PermissionsState$PermissionState: java.lang.String getName()>();

        $z3 = virtualinvoke r3.<android.util.ArraySet: boolean contains(java.lang.Object)>($r8);

        if $z3 != 0 goto label3;

        goto label2;

     label3:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        $r6 = virtualinvoke r10.<com.android.server.pm.permission.PermissionsState$PermissionState: java.lang.String getName()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r6);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": granted=");

        $z2 = virtualinvoke r10.<com.android.server.pm.permission.PermissionsState$PermissionState: boolean isGranted()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z2);

        $i0 = virtualinvoke r10.<com.android.server.pm.permission.PermissionsState$PermissionState: int getFlags()>();

        $r7 = staticinvoke <com.android.server.pm.Settings: java.lang.String permissionFlagsToString(java.lang.String,int)>(", flags=", $i0);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        goto label2;

     label4:
        return;
    }

    void dumpSharedUsersLPr(java.io.PrintWriter, java.lang.String, android.util.ArraySet, com.android.server.pm.DumpState, boolean)
    {
        com.android.server.pm.Settings r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r10, $r11, $r12, $r18, $r27, $r31, $r32, r44;
        android.util.ArraySet r3, $r13, $r22;
        com.android.server.pm.DumpState r4;
        boolean z0, $z1, $z2, $z3, $z4, $z5, z6, $z7, z8;
        java.util.Iterator r5;
        int i0, $i1, $i2, $i3, i4, i5, i6, i7;
        int[] r6, r40;
        android.util.ArrayMap $r7;
        java.util.Collection $r8;
        java.lang.Object $r9, $r23;
        com.android.server.pm.UserManagerService $r14;
        java.lang.StringBuilder $r15, $r19, $r24, $r28;
        com.android.server.pm.permission.PermissionsState $r33, r39;
        com.android.server.pm.SharedUserSetting $r34, r35;
        com.android.server.pm.PackageSetting r36;
        java.util.List r41;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.util.ArraySet;

        r4 := @parameter3: com.android.server.pm.DumpState;

        z0 := @parameter4: boolean;

        z6 = 0;

        $r7 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mSharedUsers>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.util.Collection values()>();

        r5 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label01:
        $z7 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label20;

        $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r35 = (com.android.server.pm.SharedUserSetting) $r9;

        if r2 == null goto label02;

        $r34 = virtualinvoke r4.<com.android.server.pm.DumpState: com.android.server.pm.SharedUserSetting getSharedUser()>();

        if r35 == $r34 goto label02;

        goto label01;

     label02:
        if r3 == null goto label03;

        $r33 = virtualinvoke r35.<com.android.server.pm.SharedUserSetting: com.android.server.pm.permission.PermissionsState getPermissionsState()>();

        $z5 = virtualinvoke $r33.<com.android.server.pm.permission.PermissionsState: boolean hasRequestedPermission(android.util.ArraySet)>(r3);

        if $z5 != 0 goto label03;

        goto label01;

     label03:
        if z0 != 0 goto label18;

        if z6 != 0 goto label05;

        $z4 = virtualinvoke r4.<com.android.server.pm.DumpState: boolean onTitlePrinted()>();

        if $z4 == 0 goto label04;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label04:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Shared users:");

        z6 = 1;

        goto label05;

     label05:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  SharedUser [");

        $r11 = r35.<com.android.server.pm.SharedUserSetting: java.lang.String name>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r11);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("] (");

        $i2 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r35);

        $r12 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r12);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("):");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("userId=");

        $i3 = r35.<com.android.server.pm.SharedUserSetting: int userId>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Packages");

        $r13 = r35.<com.android.server.pm.SharedUserSetting: android.util.ArraySet packages>;

        i4 = virtualinvoke $r13.<android.util.ArraySet: int size()>();

        i5 = 0;

     label06:
        if i5 >= i4 goto label09;

        $r22 = r35.<com.android.server.pm.SharedUserSetting: android.util.ArraySet packages>;

        $r23 = virtualinvoke $r22.<android.util.ArraySet: java.lang.Object valueAt(int)>(i5);

        r36 = (com.android.server.pm.PackageSetting) $r23;

        if r36 == null goto label07;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r31);

        $r32 = virtualinvoke r36.<com.android.server.pm.PackageSetting: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r32);

        goto label08;

     label07:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r27);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("NULL?!");

     label08:
        i5 = i5 + 1;

        goto label06;

     label09:
        $z1 = virtualinvoke r4.<com.android.server.pm.DumpState: boolean isOptionEnabled(int)>(4);

        if $z1 == 0 goto label10;

        goto label01;

     label10:
        r39 = virtualinvoke r35.<com.android.server.pm.SharedUserSetting: com.android.server.pm.permission.PermissionsState getPermissionsState()>();

        virtualinvoke r0.<com.android.server.pm.Settings: void dumpInstallPermissionsLPr(java.io.PrintWriter,java.lang.String,android.util.ArraySet,com.android.server.pm.permission.PermissionsState)>(r1, "    ", r3, r39);

        $r14 = staticinvoke <com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService getInstance()>();

        r40 = virtualinvoke $r14.<com.android.server.pm.UserManagerService: int[] getUserIds()>();

        i6 = lengthof r40;

        i7 = 0;

     label11:
        if i7 >= i6 goto label17;

        i0 = r40[i7];

        r6 = virtualinvoke r39.<com.android.server.pm.permission.PermissionsState: int[] computeGids(int)>(i0);

        r41 = virtualinvoke r39.<com.android.server.pm.permission.PermissionsState: java.util.List getRuntimePermissionStates(int)>(i0);

        $z2 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(int[])>(r6);

        if $z2 == 0 goto label13;

        $z3 = interfaceinvoke r41.<java.util.List: boolean isEmpty()>();

        if $z3 != 0 goto label12;

        goto label13;

     label12:
        goto label16;

     label13:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("User ");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i0);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(": ");

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.pm.Settings: void dumpGidsLPr(java.io.PrintWriter,java.lang.String,int[])>(r1, $r18, r6);

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        r44 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        if r2 == null goto label14;

        z8 = 1;

        goto label15;

     label14:
        z8 = 0;

     label15:
        virtualinvoke r0.<com.android.server.pm.Settings: void dumpRuntimePermissionsLPr(java.io.PrintWriter,java.lang.String,android.util.ArraySet,java.util.List,boolean)>(r1, r44, r3, r41, z8);

     label16:
        i7 = i7 + 1;

        goto label11;

     label17:
        goto label19;

     label18:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("suid,");

        $i1 = r35.<com.android.server.pm.SharedUserSetting: int userId>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $r10 = r35.<com.android.server.pm.SharedUserSetting: java.lang.String name>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r10);

     label19:
        goto label01;

     label20:
        return;
    }

    void dumpSharedUsersProto(android.util.proto.ProtoOutputStream)
    {
        com.android.server.pm.Settings r0;
        android.util.proto.ProtoOutputStream r1;
        int i0, i1;
        android.util.ArrayMap $r2, $r3;
        java.lang.Object $r4;
        com.android.server.pm.SharedUserSetting $r5;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        $r2 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mSharedUsers>;

        i0 = virtualinvoke $r2.<android.util.ArrayMap: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mSharedUsers>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        $r5 = (com.android.server.pm.SharedUserSetting) $r4;

        virtualinvoke $r5.<com.android.server.pm.SharedUserSetting: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r1, 2246267895814L);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void dumpVersionLPr(com.android.internal.util.IndentingPrintWriter)
    {
        com.android.server.pm.Settings r0;
        com.android.internal.util.IndentingPrintWriter r1;
        java.lang.String r2, $r12, $r17, $r25;
        com.android.server.pm.Settings$VersionInfo r3;
        android.util.ArrayMap $r6, $r8, $r10;
        int $i0, i1, $i2, $i3;
        java.lang.Object $r9, $r11;
        boolean $z0, $z1;
        java.lang.StringBuilder $r13;
        java.lang.Integer $r23, $r24;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        i1 = 0;

     label1:
        $r6 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mVersion>;

        $i0 = virtualinvoke $r6.<android.util.ArrayMap: int size()>();

        if i1 >= $i0 goto label5;

        $r8 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mVersion>;

        $r9 = virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i1);

        r2 = (java.lang.String) $r9;

        $r10 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mVersion>;

        $r11 = virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        r3 = (com.android.server.pm.Settings$VersionInfo) $r11;

        $r12 = <android.os.storage.StorageManager: java.lang.String UUID_PRIVATE_INTERNAL>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r12, r2);

        if $z0 == 0 goto label2;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Internal:");

        goto label4;

     label2:
        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>("primary_physical", r2);

        if $z1 == 0 goto label3;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("External:");

        goto label4;

     label3:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UUID ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r17);

     label4:
        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        $i2 = r3.<com.android.server.pm.Settings$VersionInfo: int sdkVersion>;

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("sdkVersion", $r23);

        $i3 = r3.<com.android.server.pm.Settings$VersionInfo: int databaseVersion>;

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("databaseVersion", $r24);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println()>();

        $r25 = r3.<com.android.server.pm.Settings$VersionInfo: java.lang.String fingerprint>;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("fingerprint", $r25);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        i1 = i1 + 1;

        goto label1;

     label5:
        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        return;
    }

    com.android.server.pm.CrossProfileIntentResolver editCrossProfileIntentResolverLPw(int)
    {
        com.android.server.pm.Settings r0;
        int i0;
        com.android.server.pm.CrossProfileIntentResolver r1, $r4, r6;
        android.util.SparseArray $r2, $r5;
        java.lang.Object $r3;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.pm.Settings: android.util.SparseArray mCrossProfileIntentResolvers>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.pm.CrossProfileIntentResolver) $r3;

        r6 = r1;

        if r1 != null goto label1;

        $r4 = new com.android.server.pm.CrossProfileIntentResolver;

        specialinvoke $r4.<com.android.server.pm.CrossProfileIntentResolver: void <init>()>();

        r6 = $r4;

        $r5 = r0.<com.android.server.pm.Settings: android.util.SparseArray mCrossProfileIntentResolvers>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r4);

     label1:
        return r6;
    }

    com.android.server.pm.PersistentPreferredIntentResolver editPersistentPreferredActivitiesLPw(int)
    {
        com.android.server.pm.Settings r0;
        int i0;
        com.android.server.pm.PersistentPreferredIntentResolver r1, $r4, r6;
        android.util.SparseArray $r2, $r5;
        java.lang.Object $r3;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.pm.Settings: android.util.SparseArray mPersistentPreferredActivities>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.pm.PersistentPreferredIntentResolver) $r3;

        r6 = r1;

        if r1 != null goto label1;

        $r4 = new com.android.server.pm.PersistentPreferredIntentResolver;

        specialinvoke $r4.<com.android.server.pm.PersistentPreferredIntentResolver: void <init>()>();

        r6 = $r4;

        $r5 = r0.<com.android.server.pm.Settings: android.util.SparseArray mPersistentPreferredActivities>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r4);

     label1:
        return r6;
    }

    com.android.server.pm.PreferredIntentResolver editPreferredActivitiesLPw(int)
    {
        com.android.server.pm.Settings r0;
        int i0;
        com.android.server.pm.PreferredIntentResolver r1, $r4, r6;
        android.util.SparseArray $r2, $r5;
        java.lang.Object $r3;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.pm.Settings: android.util.SparseArray mPreferredActivities>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.pm.PreferredIntentResolver) $r3;

        r6 = r1;

        if r1 != null goto label1;

        $r4 = new com.android.server.pm.PreferredIntentResolver;

        specialinvoke $r4.<com.android.server.pm.PreferredIntentResolver: void <init>()>();

        r6 = $r4;

        $r5 = r0.<com.android.server.pm.Settings: android.util.SparseArray mPreferredActivities>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r4);

     label1:
        return r6;
    }

    com.android.server.pm.PackageSetting enableSystemPackageLPw(java.lang.String)
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1, $r9, $r10, $r11, $r12, $r15, $r24;
        android.util.ArrayMap $r2, $r16;
        java.lang.Object $r3;
        com.android.server.pm.pkg.PackageStateUnserialized $r4, $r18;
        java.util.Map $r6;
        long[] $r7;
        java.lang.String[] $r8;
        int $i0, $i1, $i3;
        long $l2;
        java.io.File $r13, $r14;
        java.lang.StringBuilder $r20;
        com.android.server.pm.PackageSetting r25, r27;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mDisabledSysPackages>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r25 = (com.android.server.pm.PackageSetting) $r3;

        if r25 != null goto label1;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not disabled");

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r24);

        return null;

     label1:
        $r4 = virtualinvoke r25.<com.android.server.pm.PackageSetting: com.android.server.pm.pkg.PackageStateUnserialized getPkgState()>();

        virtualinvoke $r4.<com.android.server.pm.pkg.PackageStateUnserialized: com.android.server.pm.pkg.PackageStateUnserialized setUpdatedSystemApp(boolean)>(0);

        $r15 = r25.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        $r14 = r25.<com.android.server.pm.PackageSetting: java.io.File codePath>;

        $r13 = r25.<com.android.server.pm.PackageSetting: java.io.File resourcePath>;

        $r12 = r25.<com.android.server.pm.PackageSetting: java.lang.String legacyNativeLibraryPathString>;

        $r11 = r25.<com.android.server.pm.PackageSetting: java.lang.String primaryCpuAbiString>;

        $r10 = r25.<com.android.server.pm.PackageSetting: java.lang.String secondaryCpuAbiString>;

        $r9 = r25.<com.android.server.pm.PackageSetting: java.lang.String cpuAbiOverrideString>;

        $i3 = r25.<com.android.server.pm.PackageSetting: int appId>;

        $l2 = r25.<com.android.server.pm.PackageSetting: long versionCode>;

        $i1 = r25.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $i0 = r25.<com.android.server.pm.PackageSetting: int pkgPrivateFlags>;

        $r8 = r25.<com.android.server.pm.PackageSetting: java.lang.String[] usesStaticLibraries>;

        $r7 = r25.<com.android.server.pm.PackageSetting: long[] usesStaticLibrariesVersions>;

        $r6 = r25.<com.android.server.pm.PackageSetting: java.util.Map mimeGroups>;

        r27 = virtualinvoke r0.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting addPackageLPw(java.lang.String,java.lang.String,java.io.File,java.io.File,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,long,int,int,java.lang.String[],long[],java.util.Map)>(r1, $r15, $r14, $r13, $r12, $r11, $r10, $r9, $i3, $l2, $i1, $i0, $r8, $r7, $r6);

        if r27 == null goto label2;

        $r18 = virtualinvoke r27.<com.android.server.pm.PackageSetting: com.android.server.pm.pkg.PackageStateUnserialized getPkgState()>();

        virtualinvoke $r18.<com.android.server.pm.pkg.PackageStateUnserialized: com.android.server.pm.pkg.PackageStateUnserialized setUpdatedSystemApp(boolean)>(0);

     label2:
        $r16 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mDisabledSysPackages>;

        virtualinvoke $r16.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

        return r27;
    }

    public com.android.server.pm.Settings$VersionInfo findOrCreateVersion(java.lang.String)
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1;
        com.android.server.pm.Settings$VersionInfo r2, $r5, r8;
        android.util.ArrayMap $r3, $r6;
        java.lang.Object $r4;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mVersion>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.server.pm.Settings$VersionInfo) $r4;

        r8 = r2;

        if r2 != null goto label1;

        $r5 = new com.android.server.pm.Settings$VersionInfo;

        specialinvoke $r5.<com.android.server.pm.Settings$VersionInfo: void <init>()>();

        r8 = $r5;

        $r6 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mVersion>;

        virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r5);

     label1:
        return r8;
    }

    java.util.Collection getAllSharedUsersLPw()
    {
        com.android.server.pm.Settings r0;
        android.util.ArrayMap $r1;
        java.util.Collection $r2;

        r0 := @this: com.android.server.pm.Settings;

        $r1 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mSharedUsers>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.util.Collection values()>();

        return $r2;
    }

    int getApplicationEnabledSettingLPr(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1;
        int i0, $i1;
        com.android.server.pm.PackageSetting r2;
        android.util.ArrayMap $r3;
        java.lang.Object $r4;
        android.content.pm.PackageManager$NameNotFoundException $r5;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.server.pm.PackageSetting) $r4;

        if r2 == null goto label1;

        $i1 = virtualinvoke r2.<com.android.server.pm.PackageSetting: int getEnabled(int)>(i0);

        return $i1;

     label1:
        $r5 = new android.content.pm.PackageManager$NameNotFoundException;

        specialinvoke $r5.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>(r1);

        throw $r5;
    }

    boolean getBlockUninstallLPr(int, java.lang.String)
    {
        com.android.server.pm.Settings r0;
        int i0;
        java.lang.String r1;
        android.util.ArraySet r2;
        android.util.SparseArray $r3;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.pm.Settings: android.util.SparseArray mBlockUninstallPackages>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (android.util.ArraySet) $r4;

        if r2 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r2.<android.util.ArraySet: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    int getComponentEnabledSettingLPr(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        com.android.server.pm.Settings r0;
        android.content.ComponentName r1;
        int i0, $i1;
        android.util.ArrayMap $r2;
        java.lang.Object $r3;
        android.content.pm.PackageManager$NameNotFoundException $r4;
        java.lang.String $r5, $r6, r7;
        com.android.server.pm.PackageSetting r8;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        r7 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r2 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r7);

        r8 = (com.android.server.pm.PackageSetting) $r3;

        if r8 == null goto label1;

        $r6 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getClassName()>();

        $i1 = virtualinvoke r8.<com.android.server.pm.PackageSetting: int getCurrentEnabledStateLPr(java.lang.String,int)>($r6, i0);

        return $i1;

     label1:
        $r4 = new android.content.pm.PackageManager$NameNotFoundException;

        $r5 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        specialinvoke $r4.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    int getDefaultRuntimePermissionsVersionLPr(int)
    {
        com.android.server.pm.Settings r0;
        int i0, $i1;
        com.android.server.pm.Settings$RuntimePermissionPersistence $r1;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.pm.Settings: com.android.server.pm.Settings$RuntimePermissionPersistence mRuntimePermissionsPersistence>;

        $i1 = virtualinvoke $r1.<com.android.server.pm.Settings$RuntimePermissionPersistence: int getVersionLPr(int)>(i0);

        return $i1;
    }

    public com.android.server.pm.PackageSetting getDisabledSystemPkgLPr(com.android.server.pm.PackageSetting)
    {
        com.android.server.pm.Settings r0;
        com.android.server.pm.PackageSetting r1, $r3;
        java.lang.String $r2;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: com.android.server.pm.PackageSetting;

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = r1.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r3 = virtualinvoke r0.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting getDisabledSystemPkgLPr(java.lang.String)>($r2);

        return $r3;
    }

    public com.android.server.pm.PackageSetting getDisabledSystemPkgLPr(java.lang.String)
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1;
        android.util.ArrayMap $r2;
        java.lang.Object $r3;
        com.android.server.pm.PackageSetting $r4;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mDisabledSysPackages>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (com.android.server.pm.PackageSetting) $r3;

        return $r4;
    }

    public com.android.server.pm.Settings$VersionInfo getExternalVersion()
    {
        com.android.server.pm.Settings r0;
        android.util.ArrayMap $r1;
        java.lang.Object $r2;
        com.android.server.pm.Settings$VersionInfo $r3;

        r0 := @this: com.android.server.pm.Settings;

        $r1 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mVersion>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>("primary_physical");

        $r3 = (com.android.server.pm.Settings$VersionInfo) $r2;

        return $r3;
    }

    java.lang.String getHarmfulAppWarningLPr(java.lang.String, int)
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1, $r8, $r9;
        int i0;
        android.util.ArrayMap $r2;
        java.lang.Object $r3;
        java.lang.StringBuilder $r4;
        java.lang.IllegalArgumentException $r7;
        com.android.server.pm.PackageSetting r10;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r10 = (com.android.server.pm.PackageSetting) $r3;

        if r10 == null goto label1;

        $r9 = virtualinvoke r10.<com.android.server.pm.PackageSetting: java.lang.String getHarmfulAppWarning(int)>(i0);

        return $r9;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }

    android.content.pm.IntentFilterVerificationInfo getIntentFilterVerificationLPr(java.lang.String)
    {
        com.android.server.pm.Settings r0;
        android.util.ArrayMap $r1;
        java.lang.Object $r2;
        android.content.pm.IntentFilterVerificationInfo $r3;
        java.lang.String r4;
        com.android.server.pm.PackageSetting r5;

        r0 := @this: com.android.server.pm.Settings;

        r4 := @parameter0: java.lang.String;

        $r1 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (com.android.server.pm.PackageSetting) $r2;

        if r5 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r5.<com.android.server.pm.PackageSetting: android.content.pm.IntentFilterVerificationInfo getIntentFilterVerificationInfo()>();

        return $r3;
    }

    int getIntentFilterVerificationStatusLPr(java.lang.String, int)
    {
        com.android.server.pm.Settings r0;
        int i0, $i3;
        android.util.ArrayMap $r1;
        java.lang.Object $r2;
        long $l1, $l2;
        java.lang.String r3;
        com.android.server.pm.PackageSetting r4;

        r0 := @this: com.android.server.pm.Settings;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (com.android.server.pm.PackageSetting) $r2;

        if r4 != null goto label1;

        return 0;

     label1:
        $l1 = virtualinvoke r4.<com.android.server.pm.PackageSetting: long getDomainVerificationStatusForUser(int)>(i0);

        $l2 = $l1 >> 32;

        $i3 = (int) $l2;

        return $i3;
    }

    java.util.List getIntentFilterVerificationsLPr(java.lang.String)
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1, $r10, $r11;
        java.util.Iterator r3;
        android.content.pm.IntentFilterVerificationInfo r4;
        java.util.ArrayList $r5;
        android.util.ArrayMap $r6;
        java.util.Collection $r7;
        java.lang.Object $r8;
        com.android.server.pm.PackageSetting $r9;
        boolean $z0, $z1, $z3;
        java.util.List $r12;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r12 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r12;

     label1:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r6 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.util.Collection values()>();

        r3 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label4;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (com.android.server.pm.PackageSetting) $r8;

        r4 = virtualinvoke $r9.<com.android.server.pm.PackageSetting: android.content.pm.IntentFilterVerificationInfo getIntentFilterVerificationInfo()>();

        if r4 == null goto label2;

        $r10 = virtualinvoke r4.<android.content.pm.IntentFilterVerificationInfo: java.lang.String getPackageName()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r10);

        if $z0 != 0 goto label2;

        $r11 = virtualinvoke r4.<android.content.pm.IntentFilterVerificationInfo: java.lang.String getPackageName()>();

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z1 != 0 goto label3;

        goto label2;

     label3:
        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        goto label2;

     label4:
        return $r5;
    }

    public com.android.server.pm.Settings$VersionInfo getInternalVersion()
    {
        com.android.server.pm.Settings r0;
        java.lang.String $r1;
        android.util.ArrayMap $r2;
        java.lang.Object $r3;
        com.android.server.pm.Settings$VersionInfo $r4;

        r0 := @this: com.android.server.pm.Settings;

        $r2 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mVersion>;

        $r1 = <android.os.storage.StorageManager: java.lang.String UUID_PRIVATE_INTERNAL>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (com.android.server.pm.Settings$VersionInfo) $r3;

        return $r4;
    }

    com.android.server.pm.PackageSetting getPackageLPr(java.lang.String)
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1;
        android.util.ArrayMap $r2;
        java.lang.Object $r3;
        com.android.server.pm.PackageSetting $r4;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (com.android.server.pm.PackageSetting) $r3;

        return $r4;
    }

    java.lang.String getRenamedPackageLPr(java.lang.String)
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1, $r4;
        android.util.ArrayMap $r2;
        java.lang.Object $r3;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mRenamedPackages>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public com.android.server.pm.SettingBase getSettingLPr(int)
    {
        com.android.server.pm.Settings r0;
        int i0, i1, i2;
        android.util.SparseArray $r1;
        java.lang.Object $r2, $r6;
        com.android.server.pm.SettingBase $r3, r7;
        java.util.ArrayList $r4, $r5;

        r0 := @this: com.android.server.pm.Settings;

        i1 := @parameter0: int;

        if i1 < 10000 goto label3;

        $r4 = r0.<com.android.server.pm.Settings: java.util.ArrayList mAppIds>;

        i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i2 = i1 + -10000;

        if i2 >= i0 goto label1;

        $r5 = r0.<com.android.server.pm.Settings: java.util.ArrayList mAppIds>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r7 = (com.android.server.pm.SettingBase) $r6;

        goto label2;

     label1:
        r7 = null;

     label2:
        return r7;

     label3:
        $r1 = r0.<com.android.server.pm.Settings: android.util.SparseArray mOtherAppIds>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        $r3 = (com.android.server.pm.SettingBase) $r2;

        return $r3;
    }

    com.android.server.pm.SharedUserSetting getSharedUserLPw(java.lang.String, int, int, boolean) throws com.android.server.pm.PackageManagerException
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1, $r10, $r16;
        int i0, i1, $i2, $i3, $i4;
        boolean z0;
        android.util.ArrayMap $r2, $r17;
        java.lang.Object $r3;
        com.android.server.pm.SharedUserSetting $r4, r19, r20;
        java.lang.StringBuilder $r5, $r11;
        com.android.server.pm.PackageManagerException $r9;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r2 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mSharedUsers>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r19 = (com.android.server.pm.SharedUserSetting) $r3;

        r20 = r19;

        if r19 != null goto label2;

        r20 = r19;

        if z0 == 0 goto label2;

        $r4 = new com.android.server.pm.SharedUserSetting;

        specialinvoke $r4.<com.android.server.pm.SharedUserSetting: void <init>(java.lang.String,int,int)>(r1, i0, i1);

        r20 = $r4;

        $i2 = specialinvoke r0.<com.android.server.pm.Settings: int acquireAndRegisterNewAppIdLPw(com.android.server.pm.SettingBase)>($r4);

        $r4.<com.android.server.pm.SharedUserSetting: int userId> = $i2;

        $i3 = $r4.<com.android.server.pm.SharedUserSetting: int userId>;

        if $i3 < 0 goto label1;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("New shared user ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": id=");

        $i4 = $r4.<com.android.server.pm.SharedUserSetting: int userId>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r16 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", $r16);

        $r17 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mSharedUsers>;

        virtualinvoke $r17.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

        goto label2;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating shared user ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed");

        $r9 = new com.android.server.pm.PackageManagerException;

        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<com.android.server.pm.PackageManagerException: void <init>(int,java.lang.String)>(-4, $r10);

        throw $r9;

     label2:
        return r20;
    }

    public android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentityLPw()
    {
        com.android.server.pm.Settings r0;
        android.content.pm.VerifierDeviceIdentity $r1, $r2, $r3;

        r0 := @this: com.android.server.pm.Settings;

        $r1 = r0.<com.android.server.pm.Settings: android.content.pm.VerifierDeviceIdentity mVerifierDeviceIdentity>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <android.content.pm.VerifierDeviceIdentity: android.content.pm.VerifierDeviceIdentity generate()>();

        r0.<com.android.server.pm.Settings: android.content.pm.VerifierDeviceIdentity mVerifierDeviceIdentity> = $r3;

        virtualinvoke r0.<com.android.server.pm.Settings: void writeLPr()>();

     label1:
        $r2 = r0.<com.android.server.pm.Settings: android.content.pm.VerifierDeviceIdentity mVerifierDeviceIdentity>;

        return $r2;
    }

    java.util.List getVolumePackagesLPr(java.lang.String)
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1, $r8;
        com.android.server.pm.PackageSetting r3;
        java.util.ArrayList $r4;
        android.util.ArrayMap $r5, $r6;
        int $i0, i1;
        java.lang.Object $r7;
        boolean $z0;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        i1 = 0;

     label1:
        $r5 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $i0 = virtualinvoke $r5.<android.util.ArrayMap: int size()>();

        if i1 >= $i0 goto label3;

        $r6 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        r3 = (com.android.server.pm.PackageSetting) $r7;

        $r8 = r3.<com.android.server.pm.PackageSetting: java.lang.String volumeUuid>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r1, $r8);

        if $z0 == 0 goto label2;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return $r4;
    }

    void insertPackageSettingLPw(com.android.server.pm.PackageSetting, com.android.server.pm.parsing.pkg.AndroidPackage)
    {
        com.android.server.pm.Settings r0;
        com.android.server.pm.PackageSetting r1;
        com.android.server.pm.parsing.pkg.AndroidPackage r2;
        com.android.server.pm.PackageSignatures $r3, $r8, $r12, $r14;
        android.content.pm.PackageParser$SigningDetails $r4, $r9, $r13, $r15;
        android.content.pm.Signature[] $r5, $r10;
        com.android.server.pm.SharedUserSetting $r6, $r7, $r11, $r16;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: com.android.server.pm.PackageSetting;

        r2 := @parameter1: com.android.server.pm.parsing.pkg.AndroidPackage;

        $r3 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        $r4 = $r3.<com.android.server.pm.PackageSignatures: android.content.pm.PackageParser$SigningDetails mSigningDetails>;

        $r5 = $r4.<android.content.pm.PackageParser$SigningDetails: android.content.pm.Signature[] signatures>;

        if $r5 != null goto label1;

        $r14 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        $r15 = interfaceinvoke r2.<com.android.server.pm.parsing.pkg.AndroidPackage: android.content.pm.PackageParser$SigningDetails getSigningDetails()>();

        $r14.<com.android.server.pm.PackageSignatures: android.content.pm.PackageParser$SigningDetails mSigningDetails> = $r15;

     label1:
        $r6 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r6 == null goto label2;

        $r7 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $r8 = $r7.<com.android.server.pm.SharedUserSetting: com.android.server.pm.PackageSignatures signatures>;

        $r9 = $r8.<com.android.server.pm.PackageSignatures: android.content.pm.PackageParser$SigningDetails mSigningDetails>;

        $r10 = $r9.<android.content.pm.PackageParser$SigningDetails: android.content.pm.Signature[] signatures>;

        if $r10 != null goto label2;

        $r11 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $r12 = $r11.<com.android.server.pm.SharedUserSetting: com.android.server.pm.PackageSignatures signatures>;

        $r13 = interfaceinvoke r2.<com.android.server.pm.parsing.pkg.AndroidPackage: android.content.pm.PackageParser$SigningDetails getSigningDetails()>();

        $r12.<com.android.server.pm.PackageSignatures: android.content.pm.PackageParser$SigningDetails mSigningDetails> = $r13;

     label2:
        $r16 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        specialinvoke r0.<com.android.server.pm.Settings: void addPackageSettingLPw(com.android.server.pm.PackageSetting,com.android.server.pm.SharedUserSetting)>(r1, $r16);

        return;
    }

    boolean isDisabledSystemPackageLPr(java.lang.String)
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1;
        android.util.ArrayMap $r2;
        boolean $z0;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mDisabledSysPackages>;

        $z0 = virtualinvoke $r2.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    boolean isEnabledAndMatchLPr(android.content.pm.ComponentInfo, int, int)
    {
        com.android.server.pm.Settings r0;
        android.content.pm.ComponentInfo r1;
        int i0, i1;
        com.android.server.pm.PackageSetting r2;
        java.lang.String $r3;
        android.util.ArrayMap $r4;
        java.lang.Object $r5;
        android.content.pm.PackageUserState $r6;
        boolean $z0;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: android.content.pm.ComponentInfo;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r4 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r3 = r1.<android.content.pm.ComponentInfo: java.lang.String packageName>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r3);

        r2 = (com.android.server.pm.PackageSetting) $r5;

        if r2 != null goto label1;

        return 0;

     label1:
        $r6 = virtualinvoke r2.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>(i1);

        $z0 = virtualinvoke $r6.<android.content.pm.PackageUserState: boolean isMatch(android.content.pm.ComponentInfo,int)>(r1, i0);

        return $z0;
    }

    public boolean isEnabledAndMatchLPr(com.android.server.pm.parsing.pkg.AndroidPackage, android.content.pm.parsing.component.ParsedMainComponent, int, int)
    {
        com.android.server.pm.Settings r0;
        com.android.server.pm.parsing.pkg.AndroidPackage r1;
        android.content.pm.parsing.component.ParsedMainComponent r2;
        int i0, i1;
        com.android.server.pm.PackageSetting r3;
        android.util.ArrayMap $r4;
        java.lang.String $r5;
        java.lang.Object $r6;
        android.content.pm.PackageUserState $r7;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: com.android.server.pm.parsing.pkg.AndroidPackage;

        r2 := @parameter1: android.content.pm.parsing.component.ParsedMainComponent;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r4 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r5 = virtualinvoke r2.<android.content.pm.parsing.component.ParsedMainComponent: java.lang.String getPackageName()>();

        $r6 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r5);

        r3 = (com.android.server.pm.PackageSetting) $r6;

        if r3 != null goto label1;

        return 0;

     label1:
        $r7 = virtualinvoke r3.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>(i1);

        $z0 = interfaceinvoke r1.<com.android.server.pm.parsing.pkg.AndroidPackage: boolean isSystem()>();

        $z1 = interfaceinvoke r1.<com.android.server.pm.parsing.pkg.AndroidPackage: boolean isEnabled()>();

        $z2 = virtualinvoke $r7.<android.content.pm.PackageUserState: boolean isMatch(boolean,boolean,android.content.pm.parsing.component.ParsedMainComponent,int)>($z0, $z1, r2, i0);

        return $z2;
    }

    boolean isOrphaned(java.lang.String)
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1, $r8;
        android.util.ArrayMap $r2;
        java.lang.Object $r3;
        java.lang.StringBuilder $r4;
        java.lang.IllegalArgumentException $r7;
        com.android.server.pm.InstallSource $r9;
        boolean $z0;
        com.android.server.pm.PackageSetting r10;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r10 = (com.android.server.pm.PackageSetting) $r3;

        if r10 == null goto label1;

        $r9 = r10.<com.android.server.pm.PackageSetting: com.android.server.pm.InstallSource installSource>;

        $z0 = $r9.<com.android.server.pm.InstallSource: boolean isOrphaned>;

        return $z0;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }

    boolean isPermissionUpgradeNeededLPr(int)
    {
        com.android.server.pm.Settings r0;
        int i0;
        com.android.server.pm.Settings$RuntimePermissionPersistence $r1;
        boolean $z0;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.pm.Settings: com.android.server.pm.Settings$RuntimePermissionPersistence mRuntimePermissionsPersistence>;

        $z0 = virtualinvoke $r1.<com.android.server.pm.Settings$RuntimePermissionPersistence: boolean isPermissionUpgradeNeeded(int)>(i0);

        return $z0;
    }

    public void onVolumeForgotten(java.lang.String)
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1;
        android.util.ArrayMap $r2;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mVersion>;

        virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    void pruneSharedUsersLPw()
    {
        com.android.server.pm.Settings r0;
        java.util.Iterator r2, r5;
        java.util.Map$Entry r3;
        com.android.server.pm.SharedUserSetting r4;
        com.android.server.pm.PackageSetting r6;
        java.util.ArrayList $r7;
        android.util.ArrayMap $r8, $r10, $r21;
        java.util.Set $r9;
        int $i0, $i1, i2;
        java.lang.Object $r11, $r13, $r14, $r17, $r19, $r22, $r23;
        android.util.ArraySet $r15, $r16;
        boolean $z0, $z3;
        java.lang.String $r18, $r20, $r24;

        r0 := @this: com.android.server.pm.Settings;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        $r8 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mSharedUsers>;

        $r9 = virtualinvoke $r8.<android.util.ArrayMap: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label7;

        $r13 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r13;

        $r14 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        r4 = (com.android.server.pm.SharedUserSetting) $r14;

        if r4 != null goto label2;

        $r23 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r24 = (java.lang.String) $r23;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r24);

        goto label1;

     label2:
        $r15 = r4.<com.android.server.pm.SharedUserSetting: android.util.ArraySet packages>;

        r5 = virtualinvoke $r15.<android.util.ArraySet: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r19 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.android.server.pm.PackageSetting) $r19;

        $r21 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r20 = r6.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r22 = virtualinvoke $r21.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r20);

        if $r22 != null goto label4;

        interfaceinvoke r5.<java.util.Iterator: void remove()>();

     label4:
        goto label3;

     label5:
        $r16 = r4.<com.android.server.pm.SharedUserSetting: android.util.ArraySet packages>;

        $i1 = virtualinvoke $r16.<android.util.ArraySet: int size()>();

        if $i1 != 0 goto label6;

        $r17 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r18 = (java.lang.String) $r17;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r18);

     label6:
        goto label1;

     label7:
        i2 = 0;

     label8:
        $i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if i2 >= $i0 goto label9;

        $r10 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mSharedUsers>;

        $r11 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r11);

        i2 = i2 + 1;

        goto label8;

     label9:
        return;
    }

    void readAllDomainVerificationsLPr(org.xmlpull.v1.XmlPullParser, int) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlPullParser r1;
        int i0, $i1, i2, i3;
        java.lang.String r3, $r5, $r8, $r10;
        android.util.ArrayMap $r4, $r12, $r14;
        boolean $z0;
        java.lang.StringBuilder $r6;
        android.content.pm.IntentFilterVerificationInfo $r11;
        java.lang.Object $r13;
        com.android.server.pm.PackageSetting r16;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i2 := @parameter1: int;

        $r4 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mRestoredIntentFilterVerifications>;

        virtualinvoke $r4.<android.util.ArrayMap: void clear()>();

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        i3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i3 == 1 goto label8;

        if i3 != 3 goto label2;

        $i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i1 <= i0 goto label8;

     label2:
        if i3 == 3 goto label1;

        if i3 != 4 goto label3;

        goto label1;

     label3:
        $r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("domain-verification");

        if $z0 == 0 goto label6;

        $r11 = new android.content.pm.IntentFilterVerificationInfo;

        specialinvoke $r11.<android.content.pm.IntentFilterVerificationInfo: void <init>(org.xmlpull.v1.XmlPullParser)>(r1);

        r3 = virtualinvoke $r11.<android.content.pm.IntentFilterVerificationInfo: java.lang.String getPackageName()>();

        $r12 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r13 = virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r3);

        r16 = (com.android.server.pm.PackageSetting) $r13;

        if r16 == null goto label4;

        virtualinvoke r16.<com.android.server.pm.PackageSetting: void setIntentFilterVerificationInfo(android.content.pm.IntentFilterVerificationInfo)>($r11);

        goto label5;

     label4:
        $r14 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mRestoredIntentFilterVerifications>;

        virtualinvoke $r14.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r11);

     label5:
        goto label7;

     label6:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <all-intent-filter-verification>: ");

        $r8 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r10);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label7:
        goto label1;

     label8:
        return;
    }

    void readBlockUninstallPackagesLPw(org.xmlpull.v1.XmlPullParser, int) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlPullParser r1;
        int i0, i1, i2, $i3;
        android.util.ArraySet $r4;
        boolean $z0, $z1;
        android.util.SparseArray $r5, $r6;
        java.lang.String $r7, $r10, $r12, $r13;
        java.lang.StringBuilder $r8;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i0 := @parameter1: int;

        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        $r4 = new android.util.ArraySet;

        specialinvoke $r4.<android.util.ArraySet: void <init>()>();

     label1:
        i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i2 == 1 goto label6;

        if i2 != 3 goto label2;

        $i3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i3 <= i1 goto label6;

     label2:
        if i2 == 3 goto label1;

        if i2 != 4 goto label3;

        goto label1;

     label3:
        $r7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("block-uninstall");

        if $z1 == 0 goto label4;

        $r13 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "packageName");

        virtualinvoke $r4.<android.util.ArraySet: boolean add(java.lang.Object)>($r13);

        goto label5;

     label4:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under block-uninstall-packages: ");

        $r10 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r12);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label5:
        goto label1;

     label6:
        $z0 = virtualinvoke $r4.<android.util.ArraySet: boolean isEmpty()>();

        if $z0 == 0 goto label7;

        $r6 = r0.<com.android.server.pm.Settings: android.util.SparseArray mBlockUninstallPackages>;

        virtualinvoke $r6.<android.util.SparseArray: void remove(int)>(i0);

        goto label8;

     label7:
        $r5 = r0.<com.android.server.pm.Settings: android.util.SparseArray mBlockUninstallPackages>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r4);

     label8:
        return;
    }

    void readDefaultAppsLPw(org.xmlpull.v1.XmlPullParser, int) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlPullParser r1;
        int i0, i1, i2, $i3;
        boolean $z0, $z1;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r6, r8, r9;
        android.util.SparseArray $r7;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i0 := @parameter1: int;

        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i2 == 1 goto label8;

        if i2 != 3 goto label2;

        $i3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i3 <= i1 goto label8;

     label2:
        if i2 == 3 goto label1;

        if i2 != 4 goto label3;

        goto label1;

     label3:
        r8 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("default-browser");

        if $z0 == 0 goto label5;

        r9 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "packageName");

        $r7 = r0.<com.android.server.pm.Settings: android.util.SparseArray mDefaultBrowserApp>;

        virtualinvoke $r7.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r9);

     label4:
        goto label7;

     label5:
        $z1 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("default-dialer");

        if $z1 == 0 goto label6;

        goto label4;

     label6:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under default-apps: ");

        $r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r6);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label7:
        goto label1;

     label8:
        return;
    }

    void readInstallPermissionsLPr(org.xmlpull.v1.XmlPullParser, com.android.server.pm.permission.PermissionsState) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlPullParser r1;
        com.android.server.pm.permission.PermissionsState r2;
        int i0, $i2, $i4, $i7, i8, i9;
        java.lang.String $r3, $r6, $r8, $r13, $r17, $r21, r22, r25, r26;
        boolean $z0, $z3, z4;
        java.lang.StringBuilder $r4, $r10, $r14, $r18;
        com.android.server.pm.permission.PermissionSettings $r9;
        com.android.server.pm.permission.BasePermission r23;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: com.android.server.pm.permission.PermissionsState;

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label01:
        i8 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        z4 = 1;

        if i8 == 1 goto label16;

        if i8 != 3 goto label03;

        $i7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i7 <= i0 goto label02;

        goto label03;

     label02:
        goto label16;

     label03:
        if i8 == 3 goto label15;

        if i8 != 4 goto label04;

        goto label01;

     label04:
        $r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label13;

        r22 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        $r9 = r0.<com.android.server.pm.Settings: com.android.server.pm.permission.PermissionSettings mPermissions>;

        r23 = virtualinvoke $r9.<com.android.server.pm.permission.PermissionSettings: com.android.server.pm.permission.BasePermission getPermission(java.lang.String)>(r22);

        if r23 != null goto label05;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown permission: ");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r21);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label01;

     label05:
        r25 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "granted");

        i9 = 0;

        if r25 == null goto label07;

        $z3 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r25);

        if $z3 == 0 goto label06;

        goto label07;

     label06:
        z4 = 0;

        goto label07;

     label07:
        r26 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "flags");

        if r26 == null goto label08;

        i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r26, 16);

        goto label08;

     label08:
        if z4 == 0 goto label10;

        $i4 = virtualinvoke r2.<com.android.server.pm.permission.PermissionsState: int grantInstallPermission(com.android.server.pm.permission.BasePermission)>(r23);

        if $i4 != -1 goto label09;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission already added: ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r17);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label12;

     label09:
        virtualinvoke r2.<com.android.server.pm.permission.PermissionsState: boolean updatePermissionFlags(com.android.server.pm.permission.BasePermission,int,int,int)>(r23, -1, 261119, i9);

        goto label12;

     label10:
        $i2 = virtualinvoke r2.<com.android.server.pm.permission.PermissionsState: int revokeInstallPermission(com.android.server.pm.permission.BasePermission)>(r23);

        if $i2 != -1 goto label11;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission already added: ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r13);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label12;

     label11:
        virtualinvoke r2.<com.android.server.pm.permission.PermissionsState: boolean updatePermissionFlags(com.android.server.pm.permission.BasePermission,int,int,int)>(r23, -1, 261119, i9);

     label12:
        goto label14;

     label13:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <permissions>: ");

        $r6 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r8);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label14:
        goto label01;

     label15:
        goto label01;

     label16:
        return;
    }

    boolean readLPw(java.util.List)
    {
        com.android.server.pm.Settings r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28;
        java.lang.String r1, $r4, $r14, $r25, $r28, $r30, $r31, $r32, $r33, $r34, $r35, $r38, $r40, $r41, $r49, $r56, $r60, $r61, $r63, $r67, $r68, $r70, $r72, $r73, r85, r86, r87, r92, r95, r112, r114;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16, i17, i18;
        java.io.File $r2, $r6, $r7, $r8, $r19, $r46, $r47, $r52, $r54, $r55, $r57;
        java.nio.charset.Charset $r3;
        java.util.ArrayList $r5, $r22, $r79, $r80, $r107;
        android.util.ArrayMap $r9, $r12, $r13, $r36, $r42, $r81;
        java.util.Collection $r10;
        java.lang.Object $r15, $r17, $r20, $r23;
        com.android.server.pm.SharedUserSetting $r16, r110;
        com.android.server.pm.Settings$RuntimePermissionPersistence $r18;
        android.content.pm.UserInfo $r21, r117;
        java.lang.StringBuilder $r26, $r29, $r45, $r48, $r53, r100, r104, r121, r124, r126, r127, r128, r129, r130, r131, r132, r133, r134;
        com.android.server.pm.KeySetManagerService $r37;
        android.content.pm.VerifierDeviceIdentity $r39;
        com.android.server.pm.permission.PermissionSettings $r43, $r44;
        com.android.server.pm.Settings$VersionInfo $r50, $r51, r88, r89, r90, r91, r97;
        java.lang.Throwable $r58, $r64, $r65, $r71;
        java.util.List r74;
        java.io.FileInputStream r75, r83, r123, r125;
        android.util.ArraySet $r82;
        org.xmlpull.v1.XmlPullParser r84;
        java.lang.Boolean r96;
        com.android.server.pm.PackageSetting r108, r119;
        com.android.server.pm.SettingBase r109, r120;
        java.util.Iterator r115, r116, r118;
        java.lang.IllegalArgumentException r135;
        java.io.IOException r136;
        org.xmlpull.v1.XmlPullParserException r137;

        r0 := @this: com.android.server.pm.Settings;

        r74 := @parameter0: java.util.List;

        r75 = null;

        $r2 = r0.<com.android.server.pm.Settings: java.io.File mBackupSettingsFilename>;

        $z1 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label024;

        r75 = null;

     label001:
        r123 = new java.io.FileInputStream;

     label002:
        r75 = null;

     label003:
        $r52 = r0.<com.android.server.pm.Settings: java.io.File mBackupSettingsFilename>;

        specialinvoke r123.<java.io.FileInputStream: void <init>(java.io.File)>($r52);

     label004:
        r75 = r123;

     label005:
        $r53 = r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reading from backup settings file\n");

     label006:
        r75 = r123;

     label007:
        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(4, "Need to read from backup settings file");

     label008:
        r75 = r123;

     label009:
        $r54 = r0.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        $z27 = virtualinvoke $r54.<java.io.File: boolean exists()>();

        if $z27 == 0 goto label022;

     label010:
        r75 = r123;

     label011:
        r124 = new java.lang.StringBuilder;

     label012:
        r75 = r123;

     label013:
        specialinvoke r124.<java.lang.StringBuilder: void <init>()>();

     label014:
        r75 = r123;

     label015:
        virtualinvoke r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cleaning up settings file ");

     label016:
        r75 = r123;

     label017:
        $r55 = r0.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        virtualinvoke r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r55);

     label018:
        r75 = r123;

     label019:
        $r56 = virtualinvoke r124.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r56);

     label020:
        r75 = r123;

     label021:
        $r57 = r0.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        virtualinvoke $r57.<java.io.File: boolean delete()>();

     label022:
        r75 = r123;

        goto label024;

     label023:
        $r64 := @caughtexception;

     label024:
        $r79 = r0.<com.android.server.pm.Settings: java.util.ArrayList mPendingPackages>;

        virtualinvoke $r79.<java.util.ArrayList: void clear()>();

        $r80 = r0.<com.android.server.pm.Settings: java.util.ArrayList mPastSignatures>;

        virtualinvoke $r80.<java.util.ArrayList: void clear()>();

        $r81 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mKeySetRefs>;

        virtualinvoke $r81.<android.util.ArrayMap: void clear()>();

        $r82 = r0.<com.android.server.pm.Settings: android.util.ArraySet mInstallerPackages>;

        virtualinvoke $r82.<android.util.ArraySet: void clear()>();

        r83 = r75;

        if r75 != null goto label028;

     label025:
        $r46 = r0.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        $z26 = virtualinvoke $r46.<java.io.File: boolean exists()>();

        if $z26 != 0 goto label027;

        $r48 = r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No settings file found\n");

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(4, "No settings file; creating initial state");

        $r49 = <android.os.storage.StorageManager: java.lang.String UUID_PRIVATE_INTERNAL>;

        $r50 = virtualinvoke r0.<com.android.server.pm.Settings: com.android.server.pm.Settings$VersionInfo findOrCreateVersion(java.lang.String)>($r49);

        virtualinvoke $r50.<com.android.server.pm.Settings$VersionInfo: void forceCurrent()>();

        $r51 = virtualinvoke r0.<com.android.server.pm.Settings: com.android.server.pm.Settings$VersionInfo findOrCreateVersion(java.lang.String)>("primary_physical");

        virtualinvoke $r51.<com.android.server.pm.Settings$VersionInfo: void forceCurrent()>();

     label026:
        return 0;

     label027:
        r125 = new java.io.FileInputStream;

        r83 = r125;

        $r47 = r0.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        specialinvoke r125.<java.io.FileInputStream: void <init>(java.io.File)>($r47);

     label028:
        r84 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        $r3 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r4 = virtualinvoke $r3.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r84.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r83, $r4);

     label029:
        i14 = interfaceinvoke r84.<org.xmlpull.v1.XmlPullParser: int next()>();

     label030:
        if i14 == 2 goto label031;

        if i14 == 1 goto label031;

        goto label029;

     label031:
        if i14 == 2 goto label034;

     label032:
        $r45 = r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No start tag found in settings file\n");

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, "No start tag found in package manager settings");

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("PackageManager", "No start tag found in package manager settings");

     label033:
        return 0;

     label034:
        i15 = interfaceinvoke r84.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label035:
        i16 = interfaceinvoke r84.<org.xmlpull.v1.XmlPullParser: int next()>();

     label036:
        if i16 == 1 goto label090;

        if i16 != 3 goto label038;

     label037:
        $i13 = interfaceinvoke r84.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i13 <= i15 goto label090;

     label038:
        if i16 == 3 goto label089;

        if i16 != 4 goto label039;

        goto label089;

     label039:
        r85 = interfaceinvoke r84.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z8 = virtualinvoke r85.<java.lang.String: boolean equals(java.lang.Object)>("package");

        if $z8 == 0 goto label041;

        specialinvoke r0.<com.android.server.pm.Settings: void readPackageLPw(org.xmlpull.v1.XmlPullParser)>(r84);

     label040:
        goto label089;

     label041:
        $z9 = virtualinvoke r85.<java.lang.String: boolean equals(java.lang.Object)>("permissions");

        if $z9 == 0 goto label043;

        $r44 = r0.<com.android.server.pm.Settings: com.android.server.pm.permission.PermissionSettings mPermissions>;

        virtualinvoke $r44.<com.android.server.pm.permission.PermissionSettings: void readPermissions(org.xmlpull.v1.XmlPullParser)>(r84);

     label042:
        goto label089;

     label043:
        $z10 = virtualinvoke r85.<java.lang.String: boolean equals(java.lang.Object)>("permission-trees");

        if $z10 == 0 goto label045;

        $r43 = r0.<com.android.server.pm.Settings: com.android.server.pm.permission.PermissionSettings mPermissions>;

        virtualinvoke $r43.<com.android.server.pm.permission.PermissionSettings: void readPermissionTrees(org.xmlpull.v1.XmlPullParser)>(r84);

     label044:
        goto label089;

     label045:
        $z11 = virtualinvoke r85.<java.lang.String: boolean equals(java.lang.Object)>("shared-user");

        if $z11 == 0 goto label047;

        specialinvoke r0.<com.android.server.pm.Settings: void readSharedUserLPw(org.xmlpull.v1.XmlPullParser)>(r84);

     label046:
        goto label089;

     label047:
        $z12 = virtualinvoke r85.<java.lang.String: boolean equals(java.lang.Object)>("preferred-packages");

        if $z12 == 0 goto label049;

     label048:
        goto label089;

     label049:
        $z13 = virtualinvoke r85.<java.lang.String: boolean equals(java.lang.Object)>("preferred-activities");

        if $z13 == 0 goto label051;

        virtualinvoke r0.<com.android.server.pm.Settings: void readPreferredActivitiesLPw(org.xmlpull.v1.XmlPullParser,int)>(r84, 0);

     label050:
        goto label089;

     label051:
        $z14 = virtualinvoke r85.<java.lang.String: boolean equals(java.lang.Object)>("persistent-preferred-activities");

        if $z14 == 0 goto label053;

        specialinvoke r0.<com.android.server.pm.Settings: void readPersistentPreferredActivitiesLPw(org.xmlpull.v1.XmlPullParser,int)>(r84, 0);

     label052:
        goto label089;

     label053:
        $z15 = virtualinvoke r85.<java.lang.String: boolean equals(java.lang.Object)>("crossProfile-intent-filters");

        if $z15 == 0 goto label055;

        specialinvoke r0.<com.android.server.pm.Settings: void readCrossProfileIntentFiltersLPw(org.xmlpull.v1.XmlPullParser,int)>(r84, 0);

     label054:
        goto label089;

     label055:
        $z16 = virtualinvoke r85.<java.lang.String: boolean equals(java.lang.Object)>("default-browser");

        if $z16 == 0 goto label057;

        virtualinvoke r0.<com.android.server.pm.Settings: void readDefaultAppsLPw(org.xmlpull.v1.XmlPullParser,int)>(r84, 0);

     label056:
        goto label089;

     label057:
        $z17 = virtualinvoke r85.<java.lang.String: boolean equals(java.lang.Object)>("updated-package");

        if $z17 == 0 goto label059;

        specialinvoke r0.<com.android.server.pm.Settings: void readDisabledSysPackageLPw(org.xmlpull.v1.XmlPullParser)>(r84);

     label058:
        goto label089;

     label059:
        $z18 = virtualinvoke r85.<java.lang.String: boolean equals(java.lang.Object)>("renamed-package");

        if $z18 == 0 goto label063;

        r86 = interfaceinvoke r84.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "new");

        r87 = interfaceinvoke r84.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "old");

     label060:
        if r86 == null goto label062;

        if r87 == null goto label062;

     label061:
        $r42 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mRenamedPackages>;

        virtualinvoke $r42.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r86, r87);

     label062:
        goto label089;

     label063:
        $z19 = virtualinvoke r85.<java.lang.String: boolean equals(java.lang.Object)>("restored-ivi");

        if $z19 == 0 goto label065;

        specialinvoke r0.<com.android.server.pm.Settings: void readRestoredIntentFilterVerifications(org.xmlpull.v1.XmlPullParser)>(r84);

     label064:
        goto label089;

     label065:
        z0 = virtualinvoke r85.<java.lang.String: boolean equals(java.lang.Object)>("last-platform-version");

     label066:
        if z0 == 0 goto label070;

     label067:
        $r41 = <android.os.storage.StorageManager: java.lang.String UUID_PRIVATE_INTERNAL>;

        r88 = virtualinvoke r0.<com.android.server.pm.Settings: com.android.server.pm.Settings$VersionInfo findOrCreateVersion(java.lang.String)>($r41);

        r89 = virtualinvoke r0.<com.android.server.pm.Settings: com.android.server.pm.Settings$VersionInfo findOrCreateVersion(java.lang.String)>("primary_physical");

        $i11 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r84, "internal", 0);

        r88.<com.android.server.pm.Settings$VersionInfo: int sdkVersion> = $i11;

        $i12 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r84, "external", 0);

        r89.<com.android.server.pm.Settings$VersionInfo: int sdkVersion> = $i12;

     label068:
        r1 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.String readStringAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r84, "fingerprint");

        r89.<com.android.server.pm.Settings$VersionInfo: java.lang.String fingerprint> = r1;

        r88.<com.android.server.pm.Settings$VersionInfo: java.lang.String fingerprint> = r1;

     label069:
        goto label089;

     label070:
        $z20 = virtualinvoke r85.<java.lang.String: boolean equals(java.lang.Object)>("database-version");

        if $z20 == 0 goto label072;

        $r40 = <android.os.storage.StorageManager: java.lang.String UUID_PRIVATE_INTERNAL>;

        r90 = virtualinvoke r0.<com.android.server.pm.Settings: com.android.server.pm.Settings$VersionInfo findOrCreateVersion(java.lang.String)>($r40);

        r91 = virtualinvoke r0.<com.android.server.pm.Settings: com.android.server.pm.Settings$VersionInfo findOrCreateVersion(java.lang.String)>("primary_physical");

        $i9 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r84, "internal", 0);

        r90.<com.android.server.pm.Settings$VersionInfo: int databaseVersion> = $i9;

        $i10 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r84, "external", 0);

        r91.<com.android.server.pm.Settings$VersionInfo: int databaseVersion> = $i10;

     label071:
        goto label089;

     label072:
        $z21 = virtualinvoke r85.<java.lang.String: boolean equals(java.lang.Object)>("verifier");

        if $z21 == 0 goto label078;

        r92 = interfaceinvoke r84.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "device");

     label073:
        $r39 = staticinvoke <android.content.pm.VerifierDeviceIdentity: android.content.pm.VerifierDeviceIdentity parse(java.lang.String)>(r92);

        r0.<com.android.server.pm.Settings: android.content.pm.VerifierDeviceIdentity mVerifierDeviceIdentity> = $r39;

     label074:
        goto label077;

     label075:
        $r71 := @caughtexception;

     label076:
        r126 = new java.lang.StringBuilder;

        specialinvoke r126.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Discard invalid verifier device id: ");

        r135 = (java.lang.IllegalArgumentException) $r71;

        $r72 = virtualinvoke r135.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        virtualinvoke r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r72);

        $r73 = virtualinvoke r126.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r73);

     label077:
        goto label089;

     label078:
        $r30 = "read-external-storage";

        $z22 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>(r85);

        if $z22 == 0 goto label084;

        r95 = interfaceinvoke r84.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "enforcement");

     label079:
        $r38 = "1";

        $z25 = virtualinvoke $r38.<java.lang.String: boolean equals(java.lang.Object)>(r95);

        if $z25 == 0 goto label081;

        r96 = <java.lang.Boolean: java.lang.Boolean TRUE>;

     label080:
        goto label082;

     label081:
        r96 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label082:
        r0.<com.android.server.pm.Settings: java.lang.Boolean mReadExternalStorageEnforced> = r96;

     label083:
        goto label089;

     label084:
        $z23 = virtualinvoke r85.<java.lang.String: boolean equals(java.lang.Object)>("keyset-settings");

        if $z23 == 0 goto label086;

        $r37 = r0.<com.android.server.pm.Settings: com.android.server.pm.KeySetManagerService mKeySetManagerService>;

        $r36 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mKeySetRefs>;

        virtualinvoke $r37.<com.android.server.pm.KeySetManagerService: void readKeySetsLPw(org.xmlpull.v1.XmlPullParser,android.util.ArrayMap)>(r84, $r36);

     label085:
        goto label089;

     label086:
        $r31 = "version";

        $z24 = virtualinvoke $r31.<java.lang.String: boolean equals(java.lang.Object)>(r85);

        if $z24 == 0 goto label088;

        $r34 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.String readStringAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r84, "volumeUuid");

        r97 = virtualinvoke r0.<com.android.server.pm.Settings: com.android.server.pm.Settings$VersionInfo findOrCreateVersion(java.lang.String)>($r34);

        $i7 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r84, "sdkVersion");

        r97.<com.android.server.pm.Settings$VersionInfo: int sdkVersion> = $i7;

        $i8 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r84, "databaseVersion");

        r97.<com.android.server.pm.Settings$VersionInfo: int databaseVersion> = $i8;

        $r35 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.String readStringAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r84, "fingerprint");

        r97.<com.android.server.pm.Settings$VersionInfo: java.lang.String fingerprint> = $r35;

     label087:
        goto label089;

     label088:
        r127 = new java.lang.StringBuilder;

        specialinvoke r127.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <packages>: ");

        $r32 = interfaceinvoke r84.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r33 = virtualinvoke r127.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r33);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r84);

     label089:
        goto label035;

     label090:
        virtualinvoke r83.<java.io.FileInputStream: void close()>();

     label091:
        goto label094;

     label092:
        $r58 := @caughtexception;

        r100 = r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        r128 = new java.lang.StringBuilder;

        specialinvoke r128.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading: ");

        r136 = (java.io.IOException) $r58;

        $r60 = virtualinvoke r136.<java.io.IOException: java.lang.String toString()>();

        virtualinvoke r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        $r61 = virtualinvoke r128.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        r129 = new java.lang.StringBuilder;

        specialinvoke r129.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading settings: ");

        virtualinvoke r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r58);

        $r63 = virtualinvoke r129.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r63);

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Error reading package manager settings", $r58);

        goto label094;

     label093:
        $r65 := @caughtexception;

        r104 = r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        r130 = new java.lang.StringBuilder;

        specialinvoke r130.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading: ");

        r137 = (org.xmlpull.v1.XmlPullParserException) $r65;

        $r67 = virtualinvoke r137.<org.xmlpull.v1.XmlPullParserException: java.lang.String toString()>();

        virtualinvoke r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67);

        $r68 = virtualinvoke r130.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r68);

        r131 = new java.lang.StringBuilder;

        specialinvoke r131.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading settings: ");

        virtualinvoke r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r65);

        $r70 = virtualinvoke r131.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r70);

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Error reading package manager settings", $r65);

     label094:
        $r107 = r0.<com.android.server.pm.Settings: java.util.ArrayList mPendingPackages>;

        i17 = virtualinvoke $r107.<java.util.ArrayList: int size()>();

        i18 = 0;

     label095:
        if i18 >= i17 goto label099;

        $r22 = r0.<com.android.server.pm.Settings: java.util.ArrayList mPendingPackages>;

        $r23 = virtualinvoke $r22.<java.util.ArrayList: java.lang.Object get(int)>(i18);

        r108 = (com.android.server.pm.PackageSetting) $r23;

        i0 = virtualinvoke r108.<com.android.server.pm.PackageSetting: int getSharedUserId()>();

        r109 = virtualinvoke r0.<com.android.server.pm.Settings: com.android.server.pm.SettingBase getSettingLPr(int)>(i0);

        $z7 = r109 instanceof com.android.server.pm.SharedUserSetting;

        if $z7 == 0 goto label096;

        r110 = (com.android.server.pm.SharedUserSetting) r109;

        r108.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser> = r110;

        $i6 = r110.<com.android.server.pm.SharedUserSetting: int userId>;

        r108.<com.android.server.pm.PackageSetting: int appId> = $i6;

        specialinvoke r0.<com.android.server.pm.Settings: void addPackageSettingLPw(com.android.server.pm.PackageSetting,com.android.server.pm.SharedUserSetting)>(r108, r110);

        goto label098;

     label096:
        if r109 == null goto label097;

        r132 = new java.lang.StringBuilder;

        specialinvoke r132.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad package setting: package ");

        $r28 = r108.<com.android.server.pm.PackageSetting: java.lang.String name>;

        virtualinvoke r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        virtualinvoke r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has shared uid ");

        virtualinvoke r132.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that is not a shared uid\n");

        r112 = virtualinvoke r132.<java.lang.StringBuilder: java.lang.String toString()>();

        $r29 = r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r112);

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, r112);

        goto label098;

     label097:
        r133 = new java.lang.StringBuilder;

        specialinvoke r133.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad package setting: package ");

        $r25 = r108.<com.android.server.pm.PackageSetting: java.lang.String name>;

        virtualinvoke r133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        virtualinvoke r133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has shared uid ");

        virtualinvoke r133.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that is not defined\n");

        r114 = virtualinvoke r133.<java.lang.StringBuilder: java.lang.String toString()>();

        $r26 = r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r114);

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, r114);

     label098:
        i18 = i18 + 1;

        goto label095;

     label099:
        $r5 = r0.<com.android.server.pm.Settings: java.util.ArrayList mPendingPackages>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        $r6 = r0.<com.android.server.pm.Settings: java.io.File mBackupStoppedPackagesFilename>;

        $z2 = virtualinvoke $r6.<java.io.File: boolean exists()>();

        if $z2 != 0 goto label102;

        $r19 = r0.<com.android.server.pm.Settings: java.io.File mStoppedPackagesFilename>;

        $z5 = virtualinvoke $r19.<java.io.File: boolean exists()>();

        if $z5 == 0 goto label100;

        goto label102;

     label100:
        r115 = interfaceinvoke r74.<java.util.List: java.util.Iterator iterator()>();

     label101:
        $z6 = interfaceinvoke r115.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label103;

        $r20 = interfaceinvoke r115.<java.util.Iterator: java.lang.Object next()>();

        $r21 = (android.content.pm.UserInfo) $r20;

        $i5 = $r21.<android.content.pm.UserInfo: int id>;

        virtualinvoke r0.<com.android.server.pm.Settings: void readPackageRestrictionsLPr(int)>($i5);

        goto label101;

     label102:
        virtualinvoke r0.<com.android.server.pm.Settings: void readStoppedLPw()>();

        $r7 = r0.<com.android.server.pm.Settings: java.io.File mBackupStoppedPackagesFilename>;

        virtualinvoke $r7.<java.io.File: boolean delete()>();

        $r8 = r0.<com.android.server.pm.Settings: java.io.File mStoppedPackagesFilename>;

        virtualinvoke $r8.<java.io.File: boolean delete()>();

        virtualinvoke r0.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(0);

     label103:
        r116 = interfaceinvoke r74.<java.util.List: java.util.Iterator iterator()>();

     label104:
        $z28 = interfaceinvoke r116.<java.util.Iterator: boolean hasNext()>();

        if $z28 == 0 goto label105;

        $r17 = interfaceinvoke r116.<java.util.Iterator: java.lang.Object next()>();

        r117 = (android.content.pm.UserInfo) $r17;

        $r18 = r0.<com.android.server.pm.Settings: com.android.server.pm.Settings$RuntimePermissionPersistence mRuntimePermissionsPersistence>;

        $i4 = r117.<android.content.pm.UserInfo: int id>;

        virtualinvoke $r18.<com.android.server.pm.Settings$RuntimePermissionPersistence: void readStateForUserSyncLPr(int)>($i4);

        goto label104;

     label105:
        $r9 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mDisabledSysPackages>;

        $r10 = virtualinvoke $r9.<android.util.ArrayMap: java.util.Collection values()>();

        r118 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();

     label106:
        $z3 = interfaceinvoke r118.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label108;

        $r15 = interfaceinvoke r118.<java.util.Iterator: java.lang.Object next()>();

        r119 = (com.android.server.pm.PackageSetting) $r15;

        $i3 = r119.<com.android.server.pm.PackageSetting: int appId>;

        r120 = virtualinvoke r0.<com.android.server.pm.Settings: com.android.server.pm.SettingBase getSettingLPr(int)>($i3);

        if r120 == null goto label107;

        $z4 = r120 instanceof com.android.server.pm.SharedUserSetting;

        if $z4 == 0 goto label107;

        $r16 = (com.android.server.pm.SharedUserSetting) r120;

        r119.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser> = $r16;

     label107:
        goto label106;

     label108:
        r121 = r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        r134 = new java.lang.StringBuilder;

        specialinvoke r134.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r134.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Read completed successfully: ");

        $r12 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $i1 = virtualinvoke $r12.<android.util.ArrayMap: int size()>();

        virtualinvoke r134.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke r134.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" packages, ");

        $r13 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mSharedUsers>;

        $i2 = virtualinvoke $r13.<android.util.ArrayMap: int size()>();

        virtualinvoke r134.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke r134.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" shared uids\n");

        $r14 = virtualinvoke r134.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke r0.<com.android.server.pm.Settings: void writeKernelMappingLPr()>();

        return 1;

        catch java.io.IOException from label001 to label002 with label023;
        catch java.io.IOException from label003 to label004 with label023;
        catch java.io.IOException from label005 to label006 with label023;
        catch java.io.IOException from label007 to label008 with label023;
        catch java.io.IOException from label009 to label010 with label023;
        catch java.io.IOException from label011 to label012 with label023;
        catch java.io.IOException from label013 to label014 with label023;
        catch java.io.IOException from label015 to label016 with label023;
        catch java.io.IOException from label017 to label018 with label023;
        catch java.io.IOException from label019 to label020 with label023;
        catch java.io.IOException from label021 to label022 with label023;
        catch org.xmlpull.v1.XmlPullParserException from label025 to label026 with label093;
        catch java.io.IOException from label025 to label026 with label092;
        catch org.xmlpull.v1.XmlPullParserException from label027 to label028 with label093;
        catch java.io.IOException from label027 to label028 with label092;
        catch org.xmlpull.v1.XmlPullParserException from label028 to label029 with label093;
        catch java.io.IOException from label028 to label029 with label092;
        catch org.xmlpull.v1.XmlPullParserException from label029 to label030 with label093;
        catch java.io.IOException from label029 to label030 with label092;
        catch org.xmlpull.v1.XmlPullParserException from label032 to label033 with label093;
        catch java.io.IOException from label032 to label033 with label092;
        catch org.xmlpull.v1.XmlPullParserException from label034 to label035 with label093;
        catch java.io.IOException from label034 to label035 with label092;
        catch org.xmlpull.v1.XmlPullParserException from label035 to label036 with label093;
        catch java.io.IOException from label035 to label036 with label092;
        catch org.xmlpull.v1.XmlPullParserException from label037 to label038 with label093;
        catch java.io.IOException from label037 to label038 with label092;
        catch org.xmlpull.v1.XmlPullParserException from label039 to label040 with label093;
        catch java.io.IOException from label039 to label040 with label092;
        catch org.xmlpull.v1.XmlPullParserException from label041 to label042 with label093;
        catch java.io.IOException from label041 to label042 with label092;
        catch org.xmlpull.v1.XmlPullParserException from label043 to label044 with label093;
        catch java.io.IOException from label043 to label044 with label092;
        catch org.xmlpull.v1.XmlPullParserException from label045 to label046 with label093;
        catch java.io.IOException from label045 to label046 with label092;
        catch org.xmlpull.v1.XmlPullParserException from label047 to label048 with label093;
        catch java.io.IOException from label047 to label048 with label092;
        catch org.xmlpull.v1.XmlPullParserException from label049 to label050 with label093;
        catch java.io.IOException from label049 to label050 with label092;
        catch org.xmlpull.v1.XmlPullParserException from label051 to label052 with label093;
        catch java.io.IOException from label051 to label052 with label092;
        catch org.xmlpull.v1.XmlPullParserException from label053 to label054 with label093;
        catch java.io.IOException from label053 to label054 with label092;
        catch org.xmlpull.v1.XmlPullParserException from label055 to label056 with label093;
        catch java.io.IOException from label055 to label056 with label092;
        catch org.xmlpull.v1.XmlPullParserException from label057 to label058 with label093;
        catch java.io.IOException from label057 to label058 with label092;
        catch org.xmlpull.v1.XmlPullParserException from label059 to label060 with label093;
        catch java.io.IOException from label059 to label060 with label092;
        catch org.xmlpull.v1.XmlPullParserException from label061 to label062 with label093;
        catch java.io.IOException from label061 to label062 with label092;
        catch org.xmlpull.v1.XmlPullParserException from label063 to label064 with label093;
        catch java.io.IOException from label063 to label064 with label092;
        catch org.xmlpull.v1.XmlPullParserException from label065 to label066 with label093;
        catch java.io.IOException from label065 to label066 with label092;
        catch org.xmlpull.v1.XmlPullParserException from label067 to label068 with label093;
        catch java.io.IOException from label067 to label068 with label092;
        catch org.xmlpull.v1.XmlPullParserException from label068 to label069 with label093;
        catch java.io.IOException from label068 to label069 with label092;
        catch org.xmlpull.v1.XmlPullParserException from label070 to label071 with label093;
        catch java.io.IOException from label070 to label071 with label092;
        catch org.xmlpull.v1.XmlPullParserException from label072 to label073 with label093;
        catch java.io.IOException from label072 to label073 with label092;
        catch java.lang.IllegalArgumentException from label073 to label074 with label075;
        catch org.xmlpull.v1.XmlPullParserException from label073 to label074 with label093;
        catch java.io.IOException from label073 to label074 with label092;
        catch org.xmlpull.v1.XmlPullParserException from label076 to label077 with label093;
        catch java.io.IOException from label076 to label077 with label092;
        catch org.xmlpull.v1.XmlPullParserException from label078 to label079 with label093;
        catch java.io.IOException from label078 to label079 with label092;
        catch org.xmlpull.v1.XmlPullParserException from label079 to label080 with label093;
        catch java.io.IOException from label079 to label080 with label092;
        catch org.xmlpull.v1.XmlPullParserException from label081 to label082 with label093;
        catch java.io.IOException from label081 to label082 with label092;
        catch org.xmlpull.v1.XmlPullParserException from label082 to label083 with label093;
        catch java.io.IOException from label082 to label083 with label092;
        catch org.xmlpull.v1.XmlPullParserException from label084 to label085 with label093;
        catch java.io.IOException from label084 to label085 with label092;
        catch org.xmlpull.v1.XmlPullParserException from label086 to label087 with label093;
        catch java.io.IOException from label086 to label087 with label092;
        catch org.xmlpull.v1.XmlPullParserException from label088 to label089 with label093;
        catch java.io.IOException from label088 to label089 with label092;
        catch org.xmlpull.v1.XmlPullParserException from label090 to label091 with label093;
        catch java.io.IOException from label090 to label091 with label092;
    }

    void readPackageRestrictionsLPr(int)
    {
        com.android.server.pm.Settings r0;
        int i0, i2, i3, i4, i5, $i6, $i7, i8, i9, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i23, i25, i26, i27;
        java.lang.String r1, r3, r4, r5, $r7, $r9, $r14, $r15, $r22, r74, r75, r76, r78, r79, r82, r84, r85, r89, r90, r92, r95, r104, r106, r109, r110, r111, r112, r119, r121, r145, $r152, $r153, $r156, $r160, $r161, $r164;
        com.android.server.pm.PackageSetting r2, r83;
        long l1;
        boolean z0, z1, z2, z3, z4, z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, z14, z15, z16, z17, z18, z19, z21, z22, z23, z24, z25, z26;
        java.nio.charset.Charset $r6;
        android.util.SparseIntArray $r8;
        android.util.ArrayMap $r10, $r18, r115, r126, r170, r172;
        java.lang.Object $r11, $r20;
        android.content.pm.SuspendDialogInfo$Builder $r12, r171;
        android.content.pm.PackageUserState$SuspendParams $r13, r125;
        java.lang.StringBuilder $r16, $r17, $r21, r149, r157, r166, r168, r169, r173, r174, r175, r176, r177;
        java.util.Collection $r19;
        java.lang.Throwable $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, r87, r94, r123, r138, r146;
        java.io.File r66, r68;
        java.io.FileInputStream r69, r73, r97, r165, r167;
        java.util.Iterator r81;
        org.xmlpull.v1.XmlPullParser r99;
        android.util.ArraySet r113, r116;
        android.content.pm.SuspendDialogInfo r114;
        android.os.PersistableBundle r117, r118;
        byte b24;
        java.io.IOException r178;
        org.xmlpull.v1.XmlPullParserException r179;

        r0 := @this: com.android.server.pm.Settings;

        i8 := @parameter0: int;

        r66 = specialinvoke r0.<com.android.server.pm.Settings: java.io.File getUserPackagesStateFile(int)>(i8);

        r68 = specialinvoke r0.<com.android.server.pm.Settings: java.io.File getUserPackagesStateBackupFile(int)>(i8);

        z14 = virtualinvoke r68.<java.io.File: boolean exists()>();

        i9 = 4;

        if z14 == 0 goto label024;

        r69 = null;

     label001:
        r165 = new java.io.FileInputStream;

     label002:
        r69 = null;

     label003:
        specialinvoke r165.<java.io.FileInputStream: void <init>(java.io.File)>(r68);

     label004:
        r69 = r165;

     label005:
        $r21 = r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reading from backup stopped packages file\n");

     label006:
        r69 = r165;

     label007:
        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(4, "Need to read from backup stopped packages file");

     label008:
        r69 = r165;

     label009:
        $z13 = virtualinvoke r66.<java.io.File: boolean exists()>();

        if $z13 == 0 goto label022;

     label010:
        r69 = r165;

     label011:
        r166 = new java.lang.StringBuilder;

     label012:
        r69 = r165;

     label013:
        specialinvoke r166.<java.lang.StringBuilder: void <init>()>();

     label014:
        r69 = r165;

     label015:
        virtualinvoke r166.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cleaning up stopped packages file ");

     label016:
        r69 = r165;

     label017:
        virtualinvoke r166.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r66);

     label018:
        r69 = r165;

     label019:
        $r22 = virtualinvoke r166.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r22);

     label020:
        r69 = r165;

     label021:
        virtualinvoke r66.<java.io.File: boolean delete()>();

     label022:
        r73 = r165;

        goto label025;

     label023:
        $r48 := @caughtexception;

        r73 = r69;

        goto label025;

     label024:
        r73 = null;

     label025:
        r74 = "Error reading package manager stopped packages";

        if r73 != null goto label056;

     label026:
        z15 = virtualinvoke r66.<java.io.File: boolean exists()>();

     label027:
        if z15 != 0 goto label046;

        r75 = "Error reading: ";

        r76 = "Error reading package manager stopped packages";

        r78 = "Error reading: ";

        r79 = "Error reading package manager stopped packages";

     label028:
        $r17 = r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No stopped packages file found\n");

     label029:
        r75 = "Error reading: ";

        r76 = "Error reading package manager stopped packages";

        r78 = "Error reading: ";

        r79 = "Error reading package manager stopped packages";

     label030:
        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(4, "No stopped packages file; assuming all started");

     label031:
        r75 = "Error reading: ";

        r76 = "Error reading package manager stopped packages";

        r78 = "Error reading: ";

        r79 = "Error reading package manager stopped packages";

     label032:
        $r18 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r19 = virtualinvoke $r18.<android.util.ArrayMap: java.util.Collection values()>();

        r81 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>();

     label033:
        r82 = "Error reading: ";

     label034:
        r75 = r82;

        r76 = r74;

        r78 = r82;

        r79 = r74;

     label035:
        $z12 = interfaceinvoke r81.<java.util.Iterator: boolean hasNext()>();

        if $z12 == 0 goto label043;

     label036:
        r75 = r82;

        r76 = r74;

        r78 = r82;

        r79 = r74;

     label037:
        $r20 = interfaceinvoke r81.<java.util.Iterator: java.lang.Object next()>();

        r83 = (com.android.server.pm.PackageSetting) $r20;

     label038:
        r84 = r74;

        r85 = r82;

     label039:
        virtualinvoke r83.<com.android.server.pm.PackageSetting: void setUserState(int,long,int,boolean,boolean,boolean,boolean,int,boolean,android.util.ArrayMap,boolean,boolean,java.lang.String,android.util.ArraySet,android.util.ArraySet,int,int,int,int,java.lang.String)>(i8, 0L, 0, 1, 0, 0, 0, 0, 0, null, 0, 0, null, null, null, 0, 0, 0, 0, null);

     label040:
        goto label034;

     label041:
        $r57 := @caughtexception;

        r87 = $r57;

        r89 = r84;

        r90 = r85;

        goto label221;

     label042:
        $r53 := @caughtexception;

        r92 = r84;

        r94 = $r53;

        r95 = r85;

        goto label223;

     label043:
        return;

     label044:
        $r38 := @caughtexception;

        r87 = $r38;

        r89 = r76;

        r90 = r75;

        goto label221;

     label045:
        $r47 := @caughtexception;

        r94 = $r47;

        r95 = r78;

        r92 = r79;

        goto label223;

     label046:
        r89 = "Error reading package manager stopped packages";

     label047:
        r167 = new java.io.FileInputStream;

     label048:
        specialinvoke r167.<java.io.FileInputStream: void <init>(java.io.File)>(r66);

     label049:
        r97 = r167;

        goto label057;

     label050:
        $r29 := @caughtexception;

        r87 = $r29;

        r90 = "Error reading: ";

        goto label221;

     label051:
        $r45 := @caughtexception;

        r94 = $r45;

        r92 = "Error reading package manager stopped packages";

        r95 = "Error reading: ";

        goto label223;

     label052:
        $r43 := @caughtexception;

        r87 = $r43;

        r90 = "Error reading: ";

        goto label221;

     label053:
        $r27 := @caughtexception;

        r94 = $r27;

        r92 = "Error reading package manager stopped packages";

        r95 = "Error reading: ";

        goto label223;

     label054:
        $r52 := @caughtexception;

        r87 = $r52;

        r89 = "Error reading package manager stopped packages";

        r90 = "Error reading: ";

        goto label221;

     label055:
        $r28 := @caughtexception;

        r94 = $r28;

        r95 = "Error reading: ";

        r92 = "Error reading package manager stopped packages";

        goto label223;

     label056:
        r97 = r73;

     label057:
        r99 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

     label058:
        $r6 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r7 = virtualinvoke $r6.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r99.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r97, $r7);

     label059:
        i11 = interfaceinvoke r99.<org.xmlpull.v1.XmlPullParser: int next()>();

     label060:
        i12 = 1;

        if i11 == 2 goto label061;

        if i11 == 1 goto label061;

        goto label059;

     label061:
        if i11 == 2 goto label067;

     label062:
        $r16 = r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No start tag found in package restrictions file\n");

     label063:
        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, "No start tag found in package manager stopped packages");

     label064:
        return;

     label065:
        $r36 := @caughtexception;

        r87 = $r36;

        r89 = "Error reading package manager stopped packages";

        r90 = "Error reading: ";

        goto label221;

     label066:
        $r56 := @caughtexception;

        r94 = $r56;

        r92 = "Error reading package manager stopped packages";

        r95 = "Error reading: ";

        goto label223;

     label067:
        i0 = interfaceinvoke r99.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label068:
        i13 = 0;

     label069:
        i14 = interfaceinvoke r99.<org.xmlpull.v1.XmlPullParser: int next()>();

     label070:
        if i14 == i12 goto label211;

        if i14 != 3 goto label074;

     label071:
        i15 = interfaceinvoke r99.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label072:
        if i15 <= i0 goto label073;

        goto label074;

     label073:
        goto label211;

     label074:
        if i14 == 3 goto label210;

        if i14 != i9 goto label075;

        goto label210;

     label075:
        r104 = interfaceinvoke r99.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

     label076:
        z16 = virtualinvoke r104.<java.lang.String: boolean equals(java.lang.Object)>("pkg");

     label077:
        if z16 == 0 goto label179;

     label078:
        r1 = interfaceinvoke r99.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        $r10 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r11 = virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.server.pm.PackageSetting) $r11;

     label079:
        if r2 != null goto label089;

     label080:
        r168 = new java.lang.StringBuilder;

     label081:
        specialinvoke r168.<java.lang.StringBuilder: void <init>()>();

     label082:
        virtualinvoke r168.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No package known for stopped package ");

     label083:
        virtualinvoke r168.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

     label084:
        r106 = virtualinvoke r168.<java.lang.StringBuilder: java.lang.String toString()>();

     label085:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", r106);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r99);

     label086:
        i9 = 4;

        i12 = 1;

        goto label069;

     label087:
        $r64 := @caughtexception;

        r87 = $r64;

        r89 = "Error reading package manager stopped packages";

        r90 = "Error reading: ";

        goto label221;

     label088:
        $r26 := @caughtexception;

        r92 = "Error reading package manager stopped packages";

        r94 = $r26;

        r95 = "Error reading: ";

        goto label223;

     label089:
        l1 = staticinvoke <com.android.internal.util.XmlUtils: long readLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r99, "ceDataInode", 0L);

        z17 = staticinvoke <com.android.internal.util.XmlUtils: boolean readBooleanAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,boolean)>(r99, "inst", 1);

     label090:
        z0 = staticinvoke <com.android.internal.util.XmlUtils: boolean readBooleanAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,boolean)>(r99, "stopped", 0);

        z1 = staticinvoke <com.android.internal.util.XmlUtils: boolean readBooleanAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,boolean)>(r99, "nl", 0);

        r109 = interfaceinvoke r99.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "blocked");

     label091:
        if r109 != null goto label092;

        z18 = 0;

        goto label093;

     label092:
        z18 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r109);

     label093:
        r110 = interfaceinvoke r99.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "hidden");

     label094:
        if r110 != null goto label095;

        z19 = z18;

        goto label096;

     label095:
        z19 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r110);

     label096:
        i2 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r99, "distraction_flags", 0);

        z2 = staticinvoke <com.android.internal.util.XmlUtils: boolean readBooleanAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,boolean)>(r99, "suspended", 0);

        r111 = interfaceinvoke r99.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "suspending-package");

        r3 = interfaceinvoke r99.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "suspend_dialog_message");

     label097:
        r112 = r111;

        if z2 == 0 goto label098;

        r112 = r111;

        if r111 != null goto label098;

        r112 = "android";

        goto label098;

     label098:
        z3 = staticinvoke <com.android.internal.util.XmlUtils: boolean readBooleanAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,boolean)>(r99, "blockUninstall", 0);

        z4 = staticinvoke <com.android.internal.util.XmlUtils: boolean readBooleanAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,boolean)>(r99, "instant-app", 0);

     label099:
        z5 = staticinvoke <com.android.internal.util.XmlUtils: boolean readBooleanAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,boolean)>(r99, "virtual-preload", 0);

        i16 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r99, "enabled", 0);

        r4 = interfaceinvoke r99.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "enabledCaller");

        r5 = interfaceinvoke r99.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "harmful-app-warning");

        i3 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r99, "domainVerificationStatus", 0);

        i17 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r99, "app-link-generation", 0);

     label100:
        if i17 <= i13 goto label101;

        i18 = i17;

        goto label102;

     label101:
        i18 = i13;

     label102:
        i4 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r99, "install-reason", 0);

        i5 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r99, "uninstall-reason", 0);

     label103:
        r113 = null;

        r114 = null;

     label104:
        i19 = interfaceinvoke r99.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label105:
        r115 = null;

        r116 = null;

        r117 = null;

        r118 = null;

     label106:
        i20 = interfaceinvoke r99.<org.xmlpull.v1.XmlPullParser: int next()>();

     label107:
        if i20 == 1 goto label150;

        if i20 != 3 goto label111;

     label108:
        i21 = interfaceinvoke r99.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label109:
        if i21 <= i19 goto label110;

        goto label111;

     label110:
        goto label150;

     label111:
        i23 = i19;

        if i20 == 3 goto label149;

        if i20 != 4 goto label112;

        goto label149;

     label112:
        r119 = interfaceinvoke r99.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $i7 = virtualinvoke r119.<java.lang.String: int hashCode()>();

        lookupswitch($i7)
        {
            case -2027581689: goto label124;
            case -1963032286: goto label122;
            case -1592287551: goto label120;
            case -1422791362: goto label118;
            case -858175433: goto label116;
            case 1660896545: goto label114;
            default: goto label113;
        };

     label113:
        goto label126;

     label114:
        $z7 = virtualinvoke r119.<java.lang.String: boolean equals(java.lang.Object)>("suspended-dialog-info");

        if $z7 == 0 goto label126;

     label115:
        b24 = 4;

        goto label127;

     label116:
        $z8 = virtualinvoke r119.<java.lang.String: boolean equals(java.lang.Object)>("suspend-params");

        if $z8 == 0 goto label126;

     label117:
        b24 = 5;

        goto label127;

     label118:
        $z9 = virtualinvoke r119.<java.lang.String: boolean equals(java.lang.Object)>("suspended-launcher-extras");

        if $z9 == 0 goto label126;

     label119:
        b24 = 3;

        goto label127;

     label120:
        $z10 = virtualinvoke r119.<java.lang.String: boolean equals(java.lang.Object)>("suspended-app-extras");

        if $z10 == 0 goto label126;

     label121:
        b24 = 2;

        goto label127;

     label122:
        $z11 = virtualinvoke r119.<java.lang.String: boolean equals(java.lang.Object)>("enabled-components");

        if $z11 == 0 goto label126;

     label123:
        b24 = 0;

        goto label127;

     label124:
        z21 = virtualinvoke r119.<java.lang.String: boolean equals(java.lang.Object)>("disabled-components");

     label125:
        if z21 == 0 goto label126;

        b24 = 1;

        goto label127;

     label126:
        b24 = -1;

     label127:
        if b24 == 0 goto label147;

        if b24 == 1 goto label145;

        if b24 == 2 goto label143;

        if b24 == 3 goto label141;

        if b24 == 4 goto label139;

        if b24 == 5 goto label130;

     label128:
        r169 = new java.lang.StringBuilder;

        specialinvoke r169.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown tag ");

        $r14 = interfaceinvoke r99.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" under tag ");

        virtualinvoke r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pkg");

        $r15 = virtualinvoke r169.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("PackageSettings", $r15);

     label129:
        goto label148;

     label130:
        r121 = interfaceinvoke r99.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "suspending-package");

     label131:
        if r121 != null goto label134;

     label132:
        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("PackageSettings", "No suspendingPackage found inside tag suspend-params");

     label133:
        goto label149;

     label134:
        if r115 != null goto label137;

     label135:
        r170 = new android.util.ArrayMap;

        r115 = r170;

        specialinvoke r170.<android.util.ArrayMap: void <init>()>();

     label136:
        goto label137;

     label137:
        $r13 = staticinvoke <android.content.pm.PackageUserState$SuspendParams: android.content.pm.PackageUserState$SuspendParams restoreFromXml(org.xmlpull.v1.XmlPullParser)>(r99);

        virtualinvoke r115.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r121, $r13);

     label138:
        goto label148;

     label139:
        r114 = staticinvoke <android.content.pm.SuspendDialogInfo: android.content.pm.SuspendDialogInfo restoreFromXml(org.xmlpull.v1.XmlPullParser)>(r99);

     label140:
        goto label148;

     label141:
        r118 = staticinvoke <android.os.PersistableBundle: android.os.PersistableBundle restoreFromXml(org.xmlpull.v1.XmlPullParser)>(r99);

     label142:
        goto label148;

     label143:
        r117 = staticinvoke <android.os.PersistableBundle: android.os.PersistableBundle restoreFromXml(org.xmlpull.v1.XmlPullParser)>(r99);

     label144:
        goto label148;

     label145:
        r113 = specialinvoke r0.<com.android.server.pm.Settings: android.util.ArraySet readComponentsLPr(org.xmlpull.v1.XmlPullParser)>(r99);

     label146:
        goto label148;

     label147:
        r116 = specialinvoke r0.<com.android.server.pm.Settings: android.util.ArraySet readComponentsLPr(org.xmlpull.v1.XmlPullParser)>(r99);

     label148:
        i19 = i23;

        goto label106;

     label149:
        i19 = i23;

        goto label106;

     label150:
        if r114 != null goto label156;

     label151:
        $z6 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z6 != 0 goto label156;

        r171 = new android.content.pm.SuspendDialogInfo$Builder;

        specialinvoke r171.<android.content.pm.SuspendDialogInfo$Builder: void <init>()>();

        $r12 = virtualinvoke r171.<android.content.pm.SuspendDialogInfo$Builder: android.content.pm.SuspendDialogInfo$Builder setMessage(java.lang.String)>(r3);

        r114 = virtualinvoke $r12.<android.content.pm.SuspendDialogInfo$Builder: android.content.pm.SuspendDialogInfo build()>();

     label152:
        goto label156;

     label153:
        $r54 := @caughtexception;

        r123 = $r54;

     label154:
        r87 = r123;

        r89 = "Error reading package manager stopped packages";

        r90 = "Error reading: ";

        goto label221;

     label155:
        $r42 := @caughtexception;

        r94 = $r42;

        r92 = "Error reading package manager stopped packages";

        r95 = "Error reading: ";

        goto label223;

     label156:
        if z2 == 0 goto label159;

        if r115 != null goto label159;

     label157:
        r125 = staticinvoke <android.content.pm.PackageUserState$SuspendParams: android.content.pm.PackageUserState$SuspendParams getInstanceOrNull(android.content.pm.SuspendDialogInfo,android.os.PersistableBundle,android.os.PersistableBundle)>(r114, r117, r118);

        r172 = new android.util.ArrayMap;

        r126 = r172;

        specialinvoke r172.<android.util.ArrayMap: void <init>()>();

        virtualinvoke r172.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r112, r125);

     label158:
        goto label160;

     label159:
        r126 = r115;

     label160:
        if z3 == 0 goto label165;

     label161:
        virtualinvoke r0.<com.android.server.pm.Settings: void setBlockUninstallLPw(int,java.lang.String,boolean)>(i8, r1, 1);

     label162:
        goto label165;

     label163:
        $r58 := @caughtexception;

        r123 = $r58;

        goto label154;

     label164:
        $r35 := @caughtexception;

        r94 = $r35;

        r92 = "Error reading package manager stopped packages";

        r95 = "Error reading: ";

        goto label223;

     label165:
        virtualinvoke r2.<com.android.server.pm.PackageSetting: void setUserState(int,long,int,boolean,boolean,boolean,boolean,int,boolean,android.util.ArrayMap,boolean,boolean,java.lang.String,android.util.ArraySet,android.util.ArraySet,int,int,int,int,java.lang.String)>(i8, l1, i16, z17, z0, z1, z19, i2, z2, r126, z4, z5, r4, r116, r113, i3, i17, i4, i5, r5);

     label166:
        i13 = i18;

        i25 = 1;

        i26 = 4;

        goto label205;

     label167:
        $r32 := @caughtexception;

        r87 = $r32;

        r89 = "Error reading package manager stopped packages";

        r90 = "Error reading: ";

        goto label221;

     label168:
        $r49 := @caughtexception;

        r95 = "Error reading: ";

        r94 = $r49;

        r92 = "Error reading package manager stopped packages";

        goto label223;

     label169:
        $r44 := @caughtexception;

        r87 = $r44;

        r89 = "Error reading package manager stopped packages";

        r90 = "Error reading: ";

        goto label221;

     label170:
        $r30 := @caughtexception;

        r94 = $r30;

        r92 = "Error reading package manager stopped packages";

        r95 = "Error reading: ";

        goto label223;

     label171:
        $r39 := @caughtexception;

        r87 = $r39;

        r89 = "Error reading package manager stopped packages";

        r90 = "Error reading: ";

        goto label221;

     label172:
        $r62 := @caughtexception;

        r94 = $r62;

        r92 = "Error reading package manager stopped packages";

        r95 = "Error reading: ";

        goto label223;

     label173:
        $r33 := @caughtexception;

        r87 = $r33;

        r89 = "Error reading package manager stopped packages";

        r90 = "Error reading: ";

        goto label221;

     label174:
        $r46 := @caughtexception;

        r94 = $r46;

        goto label217;

     label175:
        $r59 := @caughtexception;

        r87 = $r59;

        goto label220;

     label176:
        $r34 := @caughtexception;

        r94 = $r34;

        goto label217;

     label177:
        $r37 := @caughtexception;

        r138 = $r37;

        goto label219;

     label178:
        $r63 := @caughtexception;

        r94 = $r63;

        goto label217;

     label179:
        i27 = i12;

     label180:
        z22 = virtualinvoke r104.<java.lang.String: boolean equals(java.lang.Object)>("preferred-activities");

     label181:
        if z22 == 0 goto label186;

     label182:
        virtualinvoke r0.<com.android.server.pm.Settings: void readPreferredActivitiesLPw(org.xmlpull.v1.XmlPullParser,int)>(r99, i8);

     label183:
        goto label204;

     label184:
        $r50 := @caughtexception;

        r87 = $r50;

        r89 = "Error reading package manager stopped packages";

        r90 = "Error reading: ";

        goto label221;

     label185:
        $r24 := @caughtexception;

        r95 = "Error reading: ";

        r94 = $r24;

        r92 = "Error reading package manager stopped packages";

        goto label223;

     label186:
        z23 = virtualinvoke r104.<java.lang.String: boolean equals(java.lang.Object)>("persistent-preferred-activities");

     label187:
        if z23 == 0 goto label190;

     label188:
        specialinvoke r0.<com.android.server.pm.Settings: void readPersistentPreferredActivitiesLPw(org.xmlpull.v1.XmlPullParser,int)>(r99, i8);

     label189:
        goto label204;

     label190:
        z24 = virtualinvoke r104.<java.lang.String: boolean equals(java.lang.Object)>("crossProfile-intent-filters");

     label191:
        if z24 == 0 goto label194;

     label192:
        specialinvoke r0.<com.android.server.pm.Settings: void readCrossProfileIntentFiltersLPw(org.xmlpull.v1.XmlPullParser,int)>(r99, i8);

     label193:
        goto label204;

     label194:
        z25 = virtualinvoke r104.<java.lang.String: boolean equals(java.lang.Object)>("default-apps");

     label195:
        if z25 == 0 goto label198;

     label196:
        virtualinvoke r0.<com.android.server.pm.Settings: void readDefaultAppsLPw(org.xmlpull.v1.XmlPullParser,int)>(r99, i8);

     label197:
        goto label204;

     label198:
        z26 = virtualinvoke r104.<java.lang.String: boolean equals(java.lang.Object)>("block-uninstall-packages");

     label199:
        if z26 == 0 goto label202;

     label200:
        virtualinvoke r0.<com.android.server.pm.Settings: void readBlockUninstallPackagesLPw(org.xmlpull.v1.XmlPullParser,int)>(r99, i8);

     label201:
        goto label204;

     label202:
        r173 = new java.lang.StringBuilder;

        specialinvoke r173.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r173.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <stopped-packages>: ");

        $r9 = interfaceinvoke r99.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke r173.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        r145 = virtualinvoke r173.<java.lang.StringBuilder: java.lang.String toString()>();

     label203:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", r145);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r99);

     label204:
        i26 = i9;

        i25 = i27;

     label205:
        i9 = i26;

        i12 = i25;

        goto label069;

     label206:
        $r61 := @caughtexception;

        r146 = $r61;

        goto label214;

     label207:
        $r60 := @caughtexception;

        r95 = "Error reading: ";

        r94 = $r60;

        r92 = "Error reading package manager stopped packages";

        goto label223;

     label208:
        $r23 := @caughtexception;

        r146 = $r23;

        goto label214;

     label209:
        $r31 := @caughtexception;

        r95 = "Error reading: ";

        r94 = $r31;

        r92 = "Error reading package manager stopped packages";

        goto label223;

     label210:
        goto label069;

     label211:
        virtualinvoke r97.<java.io.FileInputStream: void close()>();

        $r8 = r0.<com.android.server.pm.Settings: android.util.SparseIntArray mNextAppLinkGeneration>;

        $i6 = i13 + 1;

        virtualinvoke $r8.<android.util.SparseIntArray: void put(int,int)>(i8, $i6);

     label212:
        goto label224;

     label213:
        $r55 := @caughtexception;

        r146 = $r55;

     label214:
        r87 = r146;

        r89 = "Error reading package manager stopped packages";

        r90 = "Error reading: ";

        goto label221;

     label215:
        $r41 := @caughtexception;

        r94 = $r41;

        r95 = "Error reading: ";

        r92 = "Error reading package manager stopped packages";

        goto label223;

     label216:
        $r51 := @caughtexception;

        r94 = $r51;

     label217:
        r95 = "Error reading: ";

        r92 = "Error reading package manager stopped packages";

        goto label223;

     label218:
        $r25 := @caughtexception;

        r138 = $r25;

     label219:
        r87 = r138;

     label220:
        r90 = "Error reading: ";

        r89 = "Error reading package manager stopped packages";

     label221:
        r149 = r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        r174 = new java.lang.StringBuilder;

        specialinvoke r174.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r174.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r90);

        r178 = (java.io.IOException) r87;

        $r152 = virtualinvoke r178.<java.io.IOException: java.lang.String toString()>();

        virtualinvoke r174.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r152);

        $r153 = virtualinvoke r174.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r153);

        r175 = new java.lang.StringBuilder;

        specialinvoke r175.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r175.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading settings: ");

        virtualinvoke r175.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r87);

        $r156 = virtualinvoke r175.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r156);

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", r89, r87);

        goto label224;

     label222:
        $r40 := @caughtexception;

        r94 = $r40;

        r95 = "Error reading: ";

        r92 = "Error reading package manager stopped packages";

     label223:
        r157 = r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        r176 = new java.lang.StringBuilder;

        specialinvoke r176.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r176.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r95);

        r179 = (org.xmlpull.v1.XmlPullParserException) r94;

        $r160 = virtualinvoke r179.<org.xmlpull.v1.XmlPullParserException: java.lang.String toString()>();

        virtualinvoke r176.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r160);

        $r161 = virtualinvoke r176.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r157.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r161);

        r177 = new java.lang.StringBuilder;

        specialinvoke r177.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading stopped packages: ");

        virtualinvoke r177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r94);

        $r164 = virtualinvoke r177.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r164);

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", r92, r94);

     label224:
        return;

        catch java.io.IOException from label001 to label002 with label023;
        catch java.io.IOException from label003 to label004 with label023;
        catch java.io.IOException from label005 to label006 with label023;
        catch java.io.IOException from label007 to label008 with label023;
        catch java.io.IOException from label009 to label010 with label023;
        catch java.io.IOException from label011 to label012 with label023;
        catch java.io.IOException from label013 to label014 with label023;
        catch java.io.IOException from label015 to label016 with label023;
        catch java.io.IOException from label017 to label018 with label023;
        catch java.io.IOException from label019 to label020 with label023;
        catch java.io.IOException from label021 to label022 with label023;
        catch org.xmlpull.v1.XmlPullParserException from label026 to label027 with label055;
        catch java.io.IOException from label026 to label027 with label054;
        catch org.xmlpull.v1.XmlPullParserException from label028 to label029 with label045;
        catch java.io.IOException from label028 to label029 with label044;
        catch org.xmlpull.v1.XmlPullParserException from label030 to label031 with label045;
        catch java.io.IOException from label030 to label031 with label044;
        catch org.xmlpull.v1.XmlPullParserException from label032 to label033 with label045;
        catch java.io.IOException from label032 to label033 with label044;
        catch org.xmlpull.v1.XmlPullParserException from label035 to label036 with label045;
        catch java.io.IOException from label035 to label036 with label044;
        catch org.xmlpull.v1.XmlPullParserException from label037 to label038 with label045;
        catch java.io.IOException from label037 to label038 with label044;
        catch org.xmlpull.v1.XmlPullParserException from label039 to label040 with label042;
        catch java.io.IOException from label039 to label040 with label041;
        catch org.xmlpull.v1.XmlPullParserException from label047 to label048 with label053;
        catch java.io.IOException from label047 to label048 with label052;
        catch org.xmlpull.v1.XmlPullParserException from label048 to label049 with label051;
        catch java.io.IOException from label048 to label049 with label050;
        catch org.xmlpull.v1.XmlPullParserException from label057 to label058 with label222;
        catch java.io.IOException from label057 to label058 with label218;
        catch org.xmlpull.v1.XmlPullParserException from label058 to label059 with label216;
        catch java.io.IOException from label058 to label059 with label218;
        catch org.xmlpull.v1.XmlPullParserException from label059 to label060 with label216;
        catch java.io.IOException from label059 to label060 with label218;
        catch org.xmlpull.v1.XmlPullParserException from label062 to label063 with label066;
        catch java.io.IOException from label062 to label063 with label065;
        catch org.xmlpull.v1.XmlPullParserException from label063 to label064 with label066;
        catch java.io.IOException from label063 to label064 with label065;
        catch org.xmlpull.v1.XmlPullParserException from label067 to label068 with label216;
        catch java.io.IOException from label067 to label068 with label218;
        catch org.xmlpull.v1.XmlPullParserException from label069 to label070 with label216;
        catch java.io.IOException from label069 to label070 with label218;
        catch org.xmlpull.v1.XmlPullParserException from label071 to label072 with label066;
        catch java.io.IOException from label071 to label072 with label065;
        catch org.xmlpull.v1.XmlPullParserException from label075 to label076 with label216;
        catch java.io.IOException from label075 to label076 with label218;
        catch org.xmlpull.v1.XmlPullParserException from label076 to label077 with label216;
        catch java.io.IOException from label076 to label077 with label218;
        catch org.xmlpull.v1.XmlPullParserException from label078 to label079 with label178;
        catch java.io.IOException from label078 to label079 with label177;
        catch org.xmlpull.v1.XmlPullParserException from label080 to label081 with label066;
        catch java.io.IOException from label080 to label081 with label065;
        catch org.xmlpull.v1.XmlPullParserException from label081 to label082 with label066;
        catch java.io.IOException from label081 to label082 with label065;
        catch org.xmlpull.v1.XmlPullParserException from label082 to label083 with label066;
        catch java.io.IOException from label082 to label083 with label065;
        catch org.xmlpull.v1.XmlPullParserException from label083 to label084 with label066;
        catch java.io.IOException from label083 to label084 with label065;
        catch org.xmlpull.v1.XmlPullParserException from label084 to label085 with label066;
        catch java.io.IOException from label084 to label085 with label065;
        catch org.xmlpull.v1.XmlPullParserException from label085 to label086 with label088;
        catch java.io.IOException from label085 to label086 with label087;
        catch org.xmlpull.v1.XmlPullParserException from label089 to label090 with label176;
        catch java.io.IOException from label089 to label090 with label175;
        catch org.xmlpull.v1.XmlPullParserException from label090 to label091 with label174;
        catch java.io.IOException from label090 to label091 with label173;
        catch org.xmlpull.v1.XmlPullParserException from label092 to label093 with label174;
        catch java.io.IOException from label092 to label093 with label173;
        catch org.xmlpull.v1.XmlPullParserException from label093 to label094 with label174;
        catch java.io.IOException from label093 to label094 with label173;
        catch org.xmlpull.v1.XmlPullParserException from label095 to label096 with label174;
        catch java.io.IOException from label095 to label096 with label173;
        catch org.xmlpull.v1.XmlPullParserException from label096 to label097 with label174;
        catch java.io.IOException from label096 to label097 with label173;
        catch org.xmlpull.v1.XmlPullParserException from label098 to label099 with label172;
        catch java.io.IOException from label098 to label099 with label171;
        catch org.xmlpull.v1.XmlPullParserException from label099 to label100 with label170;
        catch java.io.IOException from label099 to label100 with label169;
        catch org.xmlpull.v1.XmlPullParserException from label102 to label103 with label170;
        catch java.io.IOException from label102 to label103 with label169;
        catch org.xmlpull.v1.XmlPullParserException from label104 to label105 with label170;
        catch java.io.IOException from label104 to label105 with label169;
        catch org.xmlpull.v1.XmlPullParserException from label106 to label107 with label170;
        catch java.io.IOException from label106 to label107 with label169;
        catch org.xmlpull.v1.XmlPullParserException from label108 to label109 with label155;
        catch java.io.IOException from label108 to label109 with label153;
        catch org.xmlpull.v1.XmlPullParserException from label112 to label113 with label155;
        catch java.io.IOException from label112 to label113 with label153;
        catch org.xmlpull.v1.XmlPullParserException from label114 to label115 with label155;
        catch java.io.IOException from label114 to label115 with label153;
        catch org.xmlpull.v1.XmlPullParserException from label116 to label117 with label155;
        catch java.io.IOException from label116 to label117 with label153;
        catch org.xmlpull.v1.XmlPullParserException from label118 to label119 with label155;
        catch java.io.IOException from label118 to label119 with label153;
        catch org.xmlpull.v1.XmlPullParserException from label120 to label121 with label155;
        catch java.io.IOException from label120 to label121 with label153;
        catch org.xmlpull.v1.XmlPullParserException from label122 to label123 with label155;
        catch java.io.IOException from label122 to label123 with label153;
        catch org.xmlpull.v1.XmlPullParserException from label124 to label125 with label155;
        catch java.io.IOException from label124 to label125 with label153;
        catch org.xmlpull.v1.XmlPullParserException from label128 to label129 with label155;
        catch java.io.IOException from label128 to label129 with label153;
        catch org.xmlpull.v1.XmlPullParserException from label130 to label131 with label155;
        catch java.io.IOException from label130 to label131 with label153;
        catch org.xmlpull.v1.XmlPullParserException from label132 to label133 with label155;
        catch java.io.IOException from label132 to label133 with label153;
        catch org.xmlpull.v1.XmlPullParserException from label135 to label136 with label155;
        catch java.io.IOException from label135 to label136 with label153;
        catch org.xmlpull.v1.XmlPullParserException from label137 to label138 with label155;
        catch java.io.IOException from label137 to label138 with label153;
        catch org.xmlpull.v1.XmlPullParserException from label139 to label140 with label155;
        catch java.io.IOException from label139 to label140 with label153;
        catch org.xmlpull.v1.XmlPullParserException from label141 to label142 with label155;
        catch java.io.IOException from label141 to label142 with label153;
        catch org.xmlpull.v1.XmlPullParserException from label143 to label144 with label155;
        catch java.io.IOException from label143 to label144 with label153;
        catch org.xmlpull.v1.XmlPullParserException from label145 to label146 with label155;
        catch java.io.IOException from label145 to label146 with label153;
        catch org.xmlpull.v1.XmlPullParserException from label147 to label148 with label155;
        catch java.io.IOException from label147 to label148 with label153;
        catch org.xmlpull.v1.XmlPullParserException from label151 to label152 with label155;
        catch java.io.IOException from label151 to label152 with label153;
        catch org.xmlpull.v1.XmlPullParserException from label157 to label158 with label155;
        catch java.io.IOException from label157 to label158 with label153;
        catch org.xmlpull.v1.XmlPullParserException from label161 to label162 with label164;
        catch java.io.IOException from label161 to label162 with label163;
        catch org.xmlpull.v1.XmlPullParserException from label165 to label166 with label168;
        catch java.io.IOException from label165 to label166 with label167;
        catch org.xmlpull.v1.XmlPullParserException from label180 to label181 with label209;
        catch java.io.IOException from label180 to label181 with label208;
        catch org.xmlpull.v1.XmlPullParserException from label182 to label183 with label185;
        catch java.io.IOException from label182 to label183 with label184;
        catch org.xmlpull.v1.XmlPullParserException from label186 to label187 with label207;
        catch java.io.IOException from label186 to label187 with label206;
        catch org.xmlpull.v1.XmlPullParserException from label188 to label189 with label185;
        catch java.io.IOException from label188 to label189 with label184;
        catch org.xmlpull.v1.XmlPullParserException from label190 to label191 with label207;
        catch java.io.IOException from label190 to label191 with label206;
        catch org.xmlpull.v1.XmlPullParserException from label192 to label193 with label185;
        catch java.io.IOException from label192 to label193 with label184;
        catch org.xmlpull.v1.XmlPullParserException from label194 to label195 with label207;
        catch java.io.IOException from label194 to label195 with label206;
        catch org.xmlpull.v1.XmlPullParserException from label196 to label197 with label185;
        catch java.io.IOException from label196 to label197 with label184;
        catch org.xmlpull.v1.XmlPullParserException from label198 to label199 with label207;
        catch java.io.IOException from label198 to label199 with label206;
        catch org.xmlpull.v1.XmlPullParserException from label200 to label201 with label185;
        catch java.io.IOException from label200 to label201 with label184;
        catch org.xmlpull.v1.XmlPullParserException from label202 to label203 with label207;
        catch java.io.IOException from label202 to label203 with label206;
        catch org.xmlpull.v1.XmlPullParserException from label203 to label204 with label215;
        catch java.io.IOException from label203 to label204 with label213;
        catch org.xmlpull.v1.XmlPullParserException from label211 to label212 with label215;
        catch java.io.IOException from label211 to label212 with label213;
    }

    void readPermissionStateForUserSyncLPr(int)
    {
        com.android.server.pm.Settings r0;
        int i0;
        com.android.server.pm.Settings$RuntimePermissionPersistence $r1;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.pm.Settings: com.android.server.pm.Settings$RuntimePermissionPersistence mRuntimePermissionsPersistence>;

        virtualinvoke $r1.<com.android.server.pm.Settings$RuntimePermissionPersistence: void readStateForUserSyncLPr(int)>(i0);

        return;
    }

    void readPreferredActivitiesLPw(org.xmlpull.v1.XmlPullParser, int) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlPullParser r1;
        int i0, i1, i2, $i3, $i4;
        java.util.ArrayList r2;
        java.lang.String $r3, $r6, $r8, $r11, $r15, $r18, $r20;
        boolean $z0, $z1;
        java.lang.StringBuilder $r4, $r12;
        com.android.server.pm.PreferredActivity $r9;
        com.android.server.pm.PreferredComponent $r10, $r14, $r21;
        com.android.server.pm.PreferredIntentResolver r23;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i0 := @parameter1: int;

        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label01:
        i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i2 == 1 goto label10;

        if i2 != 3 goto label02;

        $i4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i4 <= i1 goto label10;

     label02:
        if i2 == 3 goto label01;

        if i2 != 4 goto label03;

        goto label01;

     label03:
        $r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label08;

        $r9 = new com.android.server.pm.PreferredActivity;

        specialinvoke $r9.<com.android.server.pm.PreferredActivity: void <init>(org.xmlpull.v1.XmlPullParser)>(r1);

        $r10 = $r9.<com.android.server.pm.PreferredActivity: com.android.server.pm.PreferredComponent mPref>;

        $r11 = virtualinvoke $r10.<com.android.server.pm.PreferredComponent: java.lang.String getParseError()>();

        if $r11 != null goto label06;

        r23 = virtualinvoke r0.<com.android.server.pm.Settings: com.android.server.pm.PreferredIntentResolver editPreferredActivitiesLPw(int)>(i0);

        r2 = virtualinvoke r23.<com.android.server.pm.PreferredIntentResolver: java.util.ArrayList findFilters(android.content.IntentFilter)>($r9);

        if r2 == null goto label04;

        $i3 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if $i3 == 0 goto label04;

        $r21 = $r9.<com.android.server.pm.PreferredActivity: com.android.server.pm.PreferredComponent mPref>;

        $z1 = $r21.<com.android.server.pm.PreferredComponent: boolean mAlways>;

        if $z1 == 0 goto label05;

     label04:
        virtualinvoke r23.<com.android.server.pm.PreferredIntentResolver: void addFilter(java.lang.Object)>($r9);

     label05:
        goto label07;

     label06:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: <preferred-activity> ");

        $r14 = $r9.<com.android.server.pm.PreferredActivity: com.android.server.pm.PreferredComponent mPref>;

        $r15 = virtualinvoke $r14.<com.android.server.pm.PreferredComponent: java.lang.String getParseError()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r18 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r20);

     label07:
        goto label09;

     label08:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <preferred-activities>: ");

        $r6 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r8);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label09:
        goto label01;

     label10:
        return;
    }

    void readStoppedLPw()
    {
        com.android.server.pm.Settings r0;
        int i0, $i1, i2, i3;
        java.io.File $r1, $r11, $r12, $r17, $r19, $r20, $r22;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.String $r2, $r3, $r4, $r7, $r8, $r9, $r21, $r26, $r27, $r29, $r32, $r33, $r35, r44;
        android.util.ArrayMap $r5, $r14;
        java.lang.Object $r6, $r16;
        java.lang.StringBuilder $r10, $r13, $r18, r49, r53, r57, r59, r60, r61, r62, r63, r64;
        java.util.Collection $r15;
        java.lang.Throwable $r23, $r24, $r30;
        java.io.FileInputStream r36, r40, r56, r58;
        java.util.Iterator r41;
        com.android.server.pm.PackageSetting r42, r45;
        org.xmlpull.v1.XmlPullParser r43;
        java.io.IOException r65;
        org.xmlpull.v1.XmlPullParserException r66;

        r0 := @this: com.android.server.pm.Settings;

        r36 = null;

        $r1 = r0.<com.android.server.pm.Settings: java.io.File mBackupStoppedPackagesFilename>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label24;

        r36 = null;

     label01:
        r56 = new java.io.FileInputStream;

     label02:
        r36 = null;

     label03:
        $r17 = r0.<com.android.server.pm.Settings: java.io.File mBackupStoppedPackagesFilename>;

        specialinvoke r56.<java.io.FileInputStream: void <init>(java.io.File)>($r17);

     label04:
        r36 = r56;

     label05:
        $r18 = r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reading from backup stopped packages file\n");

     label06:
        r36 = r56;

     label07:
        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(4, "Need to read from backup stopped packages file");

     label08:
        r36 = r56;

     label09:
        $r19 = r0.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        $z5 = virtualinvoke $r19.<java.io.File: boolean exists()>();

        if $z5 == 0 goto label22;

     label10:
        r36 = r56;

     label11:
        r57 = new java.lang.StringBuilder;

     label12:
        r36 = r56;

     label13:
        specialinvoke r57.<java.lang.StringBuilder: void <init>()>();

     label14:
        r36 = r56;

     label15:
        virtualinvoke r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cleaning up stopped packages file ");

     label16:
        r36 = r56;

     label17:
        $r20 = r0.<com.android.server.pm.Settings: java.io.File mStoppedPackagesFilename>;

        virtualinvoke r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

     label18:
        r36 = r56;

     label19:
        $r21 = virtualinvoke r57.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r21);

     label20:
        r36 = r56;

     label21:
        $r22 = r0.<com.android.server.pm.Settings: java.io.File mStoppedPackagesFilename>;

        virtualinvoke $r22.<java.io.File: boolean delete()>();

     label22:
        r36 = r56;

        goto label24;

     label23:
        $r23 := @caughtexception;

     label24:
        r40 = r36;

        if r36 != null goto label30;

     label25:
        $r11 = r0.<com.android.server.pm.Settings: java.io.File mStoppedPackagesFilename>;

        $z3 = virtualinvoke $r11.<java.io.File: boolean exists()>();

        if $z3 != 0 goto label29;

        $r13 = r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No stopped packages file found\n");

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(4, "No stopped packages file file; assuming all started");

        $r14 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r15 = virtualinvoke $r14.<android.util.ArrayMap: java.util.Collection values()>();

        r41 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>();

     label26:
        $z4 = interfaceinvoke r41.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label28;

        $r16 = interfaceinvoke r41.<java.util.Iterator: java.lang.Object next()>();

        r42 = (com.android.server.pm.PackageSetting) $r16;

        virtualinvoke r42.<com.android.server.pm.PackageSetting: void setStopped(boolean,int)>(0, 0);

        virtualinvoke r42.<com.android.server.pm.PackageSetting: void setNotLaunched(boolean,int)>(0, 0);

     label27:
        goto label26;

     label28:
        return;

     label29:
        r58 = new java.io.FileInputStream;

        r40 = r58;

        $r12 = r0.<com.android.server.pm.Settings: java.io.File mStoppedPackagesFilename>;

        specialinvoke r58.<java.io.FileInputStream: void <init>(java.io.File)>($r12);

     label30:
        r43 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r43.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r40, null);

     label31:
        i2 = interfaceinvoke r43.<org.xmlpull.v1.XmlPullParser: int next()>();

     label32:
        if i2 == 2 goto label33;

        if i2 == 1 goto label33;

        goto label31;

     label33:
        if i2 == 2 goto label36;

     label34:
        $r10 = r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No start tag found in stopped packages file\n");

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, "No start tag found in package manager stopped packages");

     label35:
        return;

     label36:
        i0 = interfaceinvoke r43.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label37:
        i3 = interfaceinvoke r43.<org.xmlpull.v1.XmlPullParser: int next()>();

     label38:
        if i3 == 1 goto label50;

        if i3 != 3 goto label40;

     label39:
        $i1 = interfaceinvoke r43.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i1 <= i0 goto label50;

     label40:
        if i3 == 3 goto label49;

        if i3 != 4 goto label41;

        goto label49;

     label41:
        $r2 = interfaceinvoke r43.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("pkg");

        if $z1 == 0 goto label48;

        r44 = interfaceinvoke r43.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        $r5 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r44);

        r45 = (com.android.server.pm.PackageSetting) $r6;

     label42:
        if r45 == null goto label45;

     label43:
        virtualinvoke r45.<com.android.server.pm.PackageSetting: void setStopped(boolean,int)>(1, 0);

        $r8 = "1";

        $r9 = interfaceinvoke r43.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "nl");

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z2 == 0 goto label46;

        virtualinvoke r45.<com.android.server.pm.PackageSetting: void setNotLaunched(boolean,int)>(1, 0);

     label44:
        goto label46;

     label45:
        r59 = new java.lang.StringBuilder;

        specialinvoke r59.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No package known for stopped package ");

        virtualinvoke r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r44);

        $r7 = virtualinvoke r59.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r7);

     label46:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r43);

     label47:
        goto label49;

     label48:
        r60 = new java.lang.StringBuilder;

        specialinvoke r60.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <stopped-packages>: ");

        $r3 = interfaceinvoke r43.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke r60.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r4);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r43);

     label49:
        goto label37;

     label50:
        virtualinvoke r40.<java.io.FileInputStream: void close()>();

     label51:
        goto label54;

     label52:
        $r30 := @caughtexception;

        r49 = r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        r61 = new java.lang.StringBuilder;

        specialinvoke r61.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading: ");

        r65 = (java.io.IOException) $r30;

        $r32 = virtualinvoke r65.<java.io.IOException: java.lang.String toString()>();

        virtualinvoke r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r33 = virtualinvoke r61.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        r62 = new java.lang.StringBuilder;

        specialinvoke r62.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading settings: ");

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30);

        $r35 = virtualinvoke r62.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r35);

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Error reading package manager stopped packages", $r30);

        goto label54;

     label53:
        $r24 := @caughtexception;

        r53 = r0.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        r63 = new java.lang.StringBuilder;

        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading: ");

        r66 = (org.xmlpull.v1.XmlPullParserException) $r24;

        $r26 = virtualinvoke r66.<org.xmlpull.v1.XmlPullParserException: java.lang.String toString()>();

        virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r27 = virtualinvoke r63.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        r64 = new java.lang.StringBuilder;

        specialinvoke r64.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading stopped packages: ");

        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        $r29 = virtualinvoke r64.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r29);

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Error reading package manager stopped packages", $r24);

     label54:
        return;

        catch java.io.IOException from label01 to label02 with label23;
        catch java.io.IOException from label03 to label04 with label23;
        catch java.io.IOException from label05 to label06 with label23;
        catch java.io.IOException from label07 to label08 with label23;
        catch java.io.IOException from label09 to label10 with label23;
        catch java.io.IOException from label11 to label12 with label23;
        catch java.io.IOException from label13 to label14 with label23;
        catch java.io.IOException from label15 to label16 with label23;
        catch java.io.IOException from label17 to label18 with label23;
        catch java.io.IOException from label19 to label20 with label23;
        catch java.io.IOException from label21 to label22 with label23;
        catch org.xmlpull.v1.XmlPullParserException from label25 to label26 with label53;
        catch java.io.IOException from label25 to label26 with label52;
        catch org.xmlpull.v1.XmlPullParserException from label26 to label27 with label53;
        catch java.io.IOException from label26 to label27 with label52;
        catch org.xmlpull.v1.XmlPullParserException from label29 to label30 with label53;
        catch java.io.IOException from label29 to label30 with label52;
        catch org.xmlpull.v1.XmlPullParserException from label30 to label31 with label53;
        catch java.io.IOException from label30 to label31 with label52;
        catch org.xmlpull.v1.XmlPullParserException from label31 to label32 with label53;
        catch java.io.IOException from label31 to label32 with label52;
        catch org.xmlpull.v1.XmlPullParserException from label34 to label35 with label53;
        catch java.io.IOException from label34 to label35 with label52;
        catch org.xmlpull.v1.XmlPullParserException from label36 to label37 with label53;
        catch java.io.IOException from label36 to label37 with label52;
        catch org.xmlpull.v1.XmlPullParserException from label37 to label38 with label53;
        catch java.io.IOException from label37 to label38 with label52;
        catch org.xmlpull.v1.XmlPullParserException from label39 to label40 with label53;
        catch java.io.IOException from label39 to label40 with label52;
        catch org.xmlpull.v1.XmlPullParserException from label41 to label42 with label53;
        catch java.io.IOException from label41 to label42 with label52;
        catch org.xmlpull.v1.XmlPullParserException from label43 to label44 with label53;
        catch java.io.IOException from label43 to label44 with label52;
        catch org.xmlpull.v1.XmlPullParserException from label45 to label46 with label53;
        catch java.io.IOException from label45 to label46 with label52;
        catch org.xmlpull.v1.XmlPullParserException from label46 to label47 with label53;
        catch java.io.IOException from label46 to label47 with label52;
        catch org.xmlpull.v1.XmlPullParserException from label48 to label49 with label53;
        catch java.io.IOException from label48 to label49 with label52;
        catch org.xmlpull.v1.XmlPullParserException from label50 to label51 with label53;
        catch java.io.IOException from label50 to label51 with label52;
    }

    void readUsesStaticLibLPw(org.xmlpull.v1.XmlPullParser, com.android.server.pm.PackageSetting) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlPullParser r1;
        com.android.server.pm.PackageSetting r2;
        int i0, i1, $i4;
        java.lang.String r3, r10;
        long l2, l5;
        byte $b3;
        java.lang.String[] $r4, $r6;
        java.lang.Object[] $r5;
        long[] $r7, $r8;
        java.lang.Throwable $r9;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: com.android.server.pm.PackageSetting;

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 == 1 goto label9;

        if i1 != 3 goto label2;

        $i4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i4 <= i0 goto label9;

     label2:
        if i1 == 3 goto label1;

        if i1 != 4 goto label3;

        goto label1;

     label3:
        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        r10 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "version");

        l5 = -1L;

     label4:
        l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r10);

     label5:
        l5 = l2;

        goto label7;

     label6:
        $r9 := @caughtexception;

     label7:
        if r3 == null goto label8;

        $b3 = l5 cmp 0L;

        if $b3 < 0 goto label8;

        $r4 = r2.<com.android.server.pm.PackageSetting: java.lang.String[] usesStaticLibraries>;

        $r5 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] appendElement(java.lang.Class,java.lang.Object[],java.lang.Object)>(class "Ljava/lang/String;", $r4, r3);

        $r6 = (java.lang.String[]) $r5;

        r2.<com.android.server.pm.PackageSetting: java.lang.String[] usesStaticLibraries> = $r6;

        $r7 = r2.<com.android.server.pm.PackageSetting: long[] usesStaticLibrariesVersions>;

        $r8 = staticinvoke <com.android.internal.util.ArrayUtils: long[] appendLong(long[],long)>($r7, l5);

        r2.<com.android.server.pm.PackageSetting: long[] usesStaticLibrariesVersions> = $r8;

     label8:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label1;

     label9:
        return;

        catch java.lang.NumberFormatException from label4 to label5 with label6;
    }

    boolean registerAppIdLPw(com.android.server.pm.PackageSetting) throws com.android.server.pm.PackageManagerException
    {
        com.android.server.pm.Settings r0;
        com.android.server.pm.PackageSetting r1;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r2, $r5, $r8, $r11, $r15;
        java.lang.StringBuilder $r3, $r9;
        com.android.server.pm.PackageManagerException $r14;
        boolean z0;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: com.android.server.pm.PackageSetting;

        $i0 = r1.<com.android.server.pm.PackageSetting: int appId>;

        if $i0 != 0 goto label1;

        $i3 = specialinvoke r0.<com.android.server.pm.Settings: int acquireAndRegisterNewAppIdLPw(com.android.server.pm.SettingBase)>(r1);

        r1.<com.android.server.pm.PackageSetting: int appId> = $i3;

        z0 = 1;

        goto label2;

     label1:
        $i1 = r1.<com.android.server.pm.PackageSetting: int appId>;

        $r2 = r1.<com.android.server.pm.PackageSetting: java.lang.String name>;

        z0 = specialinvoke r0.<com.android.server.pm.Settings: boolean registerExistingAppIdLPw(int,com.android.server.pm.SettingBase,java.lang.Object)>($i1, r1, $r2);

     label2:
        $i2 = r1.<com.android.server.pm.PackageSetting: int appId>;

        if $i2 < 0 goto label3;

        return z0;

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r5 = r1.<com.android.server.pm.PackageSetting: java.lang.String name>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" could not be assigned a valid UID");

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r8);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r11 = r1.<com.android.server.pm.PackageSetting: java.lang.String name>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" could not be assigned a valid UID");

        $r14 = new com.android.server.pm.PackageManagerException;

        $r15 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<com.android.server.pm.PackageManagerException: void <init>(int,java.lang.String)>(-4, $r15);

        throw $r14;
    }

    void removeAppIdLPw(int)
    {
        com.android.server.pm.Settings r0;
        int i0, i1, i2, $i3;
        android.util.SparseArray $r1;
        java.util.ArrayList $r2, $r3;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        if i0 < 10000 goto label2;

        $r2 = r0.<com.android.server.pm.Settings: java.util.ArrayList mAppIds>;

        i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i2 = i0 - 10000;

        if i2 >= i1 goto label1;

        $r3 = r0.<com.android.server.pm.Settings: java.util.ArrayList mAppIds>;

        virtualinvoke $r3.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i2, null);

     label1:
        goto label3;

     label2:
        $r1 = r0.<com.android.server.pm.Settings: android.util.SparseArray mOtherAppIds>;

        virtualinvoke $r1.<android.util.SparseArray: void remove(int)>(i0);

     label3:
        $i3 = i0 + 1;

        specialinvoke r0.<com.android.server.pm.Settings: void setFirstAvailableUid(int)>($i3);

        return;
    }

    void removeCrossProfileIntentFiltersLPw(int)
    {
        com.android.server.pm.Settings r0;
        int i0, i1, i2, $i3, i4;
        android.util.SparseArray r1, $r3, $r5, $r6, $r7, $r11;
        java.util.Iterator r2;
        java.lang.Object $r4, $r8, $r10;
        java.util.Set $r9;
        boolean $z0, z1;
        java.lang.Throwable $r12;
        com.android.server.pm.CrossProfileIntentResolver r13;
        android.util.ArraySet r14;
        com.android.server.pm.CrossProfileIntentFilter r15;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.pm.Settings: android.util.SparseArray mCrossProfileIntentResolvers>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.pm.Settings: android.util.SparseArray mCrossProfileIntentResolvers>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        if $r4 == null goto label02;

        $r11 = r0.<com.android.server.pm.Settings: android.util.SparseArray mCrossProfileIntentResolvers>;

        virtualinvoke $r11.<android.util.SparseArray: void remove(int)>(i0);

        virtualinvoke r0.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(i0);

     label02:
        $r5 = r0.<com.android.server.pm.Settings: android.util.SparseArray mCrossProfileIntentResolvers>;

        i1 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

     label03:
        i4 = 0;

     label04:
        if i4 >= i1 goto label16;

     label05:
        $r6 = r0.<com.android.server.pm.Settings: android.util.SparseArray mCrossProfileIntentResolvers>;

        i2 = virtualinvoke $r6.<android.util.SparseArray: int keyAt(int)>(i4);

        $r7 = r0.<com.android.server.pm.Settings: android.util.SparseArray mCrossProfileIntentResolvers>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object get(int)>(i2);

        r13 = (com.android.server.pm.CrossProfileIntentResolver) $r8;

     label06:
        z1 = 0;

     label07:
        r14 = new android.util.ArraySet;

        $r9 = virtualinvoke r13.<com.android.server.pm.CrossProfileIntentResolver: java.util.Set filterSet()>();

        specialinvoke r14.<android.util.ArraySet: void <init>(java.util.Collection)>($r9);

        r2 = virtualinvoke r14.<android.util.ArraySet: java.util.Iterator iterator()>();

     label08:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label13;

        $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r15 = (com.android.server.pm.CrossProfileIntentFilter) $r10;

     label09:
        $i3 = virtualinvoke r15.<com.android.server.pm.CrossProfileIntentFilter: int getTargetUserId()>();

        if $i3 != i0 goto label12;

     label10:
        z1 = 1;

     label11:
        virtualinvoke r13.<com.android.server.pm.CrossProfileIntentResolver: void removeFilter(java.lang.Object)>(r15);

     label12:
        goto label08;

     label13:
        if z1 == 0 goto label15;

     label14:
        virtualinvoke r0.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(i2);

     label15:
        i4 = i4 + 1;

        goto label04;

     label16:
        exitmonitor r1;

     label17:
        return;

     label18:
        $r12 := @caughtexception;

     label19:
        exitmonitor r1;

     label20:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label02 to label03 with label18;
        catch java.lang.Throwable from label05 to label06 with label18;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.lang.Throwable from label08 to label09 with label18;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch java.lang.Throwable from label11 to label12 with label18;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
    }

    java.lang.String removeDefaultBrowserPackageNameLPw(int)
    {
        com.android.server.pm.Settings r0;
        int i0;
        android.util.SparseArray $r1;
        java.lang.Object $r2;
        java.lang.String r3;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        if i0 != -1 goto label1;

        r3 = null;

        goto label2;

     label1:
        $r1 = r0.<com.android.server.pm.Settings: android.util.SparseArray mDefaultBrowserApp>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object removeReturnOld(int)>(i0);

        r3 = (java.lang.String) $r2;

     label2:
        return r3;
    }

    void removeDisabledSystemPackageLPw(java.lang.String)
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1;
        android.util.ArrayMap $r2;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mDisabledSysPackages>;

        virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    boolean removeIntentFilterVerificationLPw(java.lang.String, int, boolean)
    {
        com.android.server.pm.Settings r0;
        int i0;
        boolean z0;
        android.util.ArrayMap $r1;
        java.lang.Object $r2;
        java.lang.String r3;
        com.android.server.pm.PackageSetting r4;

        r0 := @this: com.android.server.pm.Settings;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r1 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (com.android.server.pm.PackageSetting) $r2;

        if r4 != null goto label1;

        return 0;

     label1:
        if z0 == 0 goto label2;

        virtualinvoke r4.<com.android.server.pm.PackageSetting: void clearDomainVerificationStatusForUser(int)>(i0);

     label2:
        virtualinvoke r4.<com.android.server.pm.PackageSetting: void setIntentFilterVerificationInfo(android.content.pm.IntentFilterVerificationInfo)>(null);

        return 1;
    }

    boolean removeIntentFilterVerificationLPw(java.lang.String, int[])
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1;
        int[] r2;
        int i0, $i1, i2;
        boolean $z0, z1;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: int[];

        z1 = 0;

        i0 = lengthof r2;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $i1 = r2[i2];

        $z0 = virtualinvoke r0.<com.android.server.pm.Settings: boolean removeIntentFilterVerificationLPw(java.lang.String,int,boolean)>(r1, $i1, 1);

        z1 = z1 | $z0;

        i2 = i2 + 1;

        goto label1;

     label2:
        return z1;
    }

    int removePackageLPw(java.lang.String)
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1, $r12;
        com.android.server.pm.PackageSetting r2;
        android.util.ArrayMap $r3, $r5, $r13;
        java.lang.Object $r4;
        com.android.server.pm.SharedUserSetting $r7, $r8, $r9, $r11, $r15, $r16;
        int $i0, $i1, $i2, $i3, $i4;
        android.util.ArraySet $r10;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.server.pm.PackageSetting) $r4;

        if r2 == null goto label2;

        $r5 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

        specialinvoke r0.<com.android.server.pm.Settings: void removeInstallerPackageStatus(java.lang.String)>(r1);

        $r7 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r7 == null goto label1;

        $r8 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        virtualinvoke $r8.<com.android.server.pm.SharedUserSetting: boolean removePackage(com.android.server.pm.PackageSetting)>(r2);

        $r9 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $r10 = $r9.<com.android.server.pm.SharedUserSetting: android.util.ArraySet packages>;

        $i2 = virtualinvoke $r10.<android.util.ArraySet: int size()>();

        if $i2 != 0 goto label2;

        $r13 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mSharedUsers>;

        $r11 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $r12 = $r11.<com.android.server.pm.SharedUserSetting: java.lang.String name>;

        virtualinvoke $r13.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r12);

        $r15 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $i3 = $r15.<com.android.server.pm.SharedUserSetting: int userId>;

        virtualinvoke r0.<com.android.server.pm.Settings: void removeAppIdLPw(int)>($i3);

        $r16 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $i4 = $r16.<com.android.server.pm.SharedUserSetting: int userId>;

        return $i4;

     label1:
        $i0 = r2.<com.android.server.pm.PackageSetting: int appId>;

        virtualinvoke r0.<com.android.server.pm.Settings: void removeAppIdLPw(int)>($i0);

        $i1 = r2.<com.android.server.pm.PackageSetting: int appId>;

        return $i1;

     label2:
        return -1;
    }

    void removeUserLPw(int)
    {
        com.android.server.pm.Settings r0;
        int i0;
        java.util.Iterator r1;
        android.util.ArrayMap $r2;
        java.util.Set $r3;
        boolean $z0;
        android.util.SparseArray $r4;
        java.io.File $r5, $r6;
        com.android.server.pm.Settings$RuntimePermissionPersistence $r7;
        java.lang.Object $r8, $r10;
        java.util.Map$Entry $r9;
        com.android.server.pm.PackageSetting $r11;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.util.Set entrySet()>();

        r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (java.util.Map$Entry) $r8;

        $r10 = interfaceinvoke $r9.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r11 = (com.android.server.pm.PackageSetting) $r10;

        virtualinvoke $r11.<com.android.server.pm.PackageSetting: void removeUser(int)>(i0);

        goto label1;

     label2:
        $r4 = r0.<com.android.server.pm.Settings: android.util.SparseArray mPreferredActivities>;

        virtualinvoke $r4.<android.util.SparseArray: void remove(int)>(i0);

        $r5 = specialinvoke r0.<com.android.server.pm.Settings: java.io.File getUserPackagesStateFile(int)>(i0);

        virtualinvoke $r5.<java.io.File: boolean delete()>();

        $r6 = specialinvoke r0.<com.android.server.pm.Settings: java.io.File getUserPackagesStateBackupFile(int)>(i0);

        virtualinvoke $r6.<java.io.File: boolean delete()>();

        virtualinvoke r0.<com.android.server.pm.Settings: void removeCrossProfileIntentFiltersLPw(int)>(i0);

        $r7 = r0.<com.android.server.pm.Settings: com.android.server.pm.Settings$RuntimePermissionPersistence mRuntimePermissionsPersistence>;

        staticinvoke <com.android.server.pm.Settings$RuntimePermissionPersistence: void access$100(com.android.server.pm.Settings$RuntimePermissionPersistence,int)>($r7, i0);

        virtualinvoke r0.<com.android.server.pm.Settings: void writePackageListLPr()>();

        specialinvoke r0.<com.android.server.pm.Settings: void writeKernelRemoveUserLPr(int)>(i0);

        return;
    }

    void setBlockUninstallLPw(int, java.lang.String, boolean)
    {
        com.android.server.pm.Settings r0;
        int i0;
        java.lang.String r1;
        boolean z0, $z2;
        android.util.ArraySet r2, $r6, r8;
        android.util.SparseArray $r3, $r5, $r7;
        java.lang.Object $r4;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r3 = r0.<com.android.server.pm.Settings: android.util.SparseArray mBlockUninstallPackages>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (android.util.ArraySet) $r4;

        if z0 == 0 goto label2;

        r8 = r2;

        if r2 != null goto label1;

        $r6 = new android.util.ArraySet;

        specialinvoke $r6.<android.util.ArraySet: void <init>()>();

        r8 = $r6;

        $r7 = r0.<com.android.server.pm.Settings: android.util.SparseArray mBlockUninstallPackages>;

        virtualinvoke $r7.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r6);

     label1:
        virtualinvoke r8.<android.util.ArraySet: boolean add(java.lang.Object)>(r1);

        goto label3;

     label2:
        if r2 == null goto label3;

        virtualinvoke r2.<android.util.ArraySet: boolean remove(java.lang.Object)>(r1);

        $z2 = virtualinvoke r2.<android.util.ArraySet: boolean isEmpty()>();

        if $z2 == 0 goto label3;

        $r5 = r0.<com.android.server.pm.Settings: android.util.SparseArray mBlockUninstallPackages>;

        virtualinvoke $r5.<android.util.SparseArray: void remove(int)>(i0);

     label3:
        return;
    }

    void setDefaultRuntimePermissionsVersionLPr(int, int)
    {
        com.android.server.pm.Settings r0;
        int i0, i1;
        com.android.server.pm.Settings$RuntimePermissionPersistence $r1;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.pm.Settings: com.android.server.pm.Settings$RuntimePermissionPersistence mRuntimePermissionsPersistence>;

        virtualinvoke $r1.<com.android.server.pm.Settings$RuntimePermissionPersistence: void setVersionLPr(int,int)>(i0, i1);

        return;
    }

    void setHarmfulAppWarningLPw(java.lang.String, java.lang.CharSequence, int)
    {
        com.android.server.pm.Settings r0;
        int i0;
        com.android.server.pm.PackageSetting r1;
        android.util.ArrayMap $r2;
        java.lang.Object $r3;
        java.lang.StringBuilder $r4;
        java.lang.IllegalArgumentException $r7;
        java.lang.String $r8, r9, r11;
        java.lang.CharSequence r10;

        r0 := @this: com.android.server.pm.Settings;

        r9 := @parameter0: java.lang.String;

        r10 := @parameter1: java.lang.CharSequence;

        i0 := @parameter2: int;

        $r2 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r9);

        r1 = (com.android.server.pm.PackageSetting) $r3;

        if r1 == null goto label3;

        if r10 != null goto label1;

        r11 = null;

        goto label2;

     label1:
        r11 = interfaceinvoke r10.<java.lang.CharSequence: java.lang.String toString()>();

     label2:
        virtualinvoke r1.<com.android.server.pm.PackageSetting: void setHarmfulAppWarning(int,java.lang.String)>(i0, r11);

        return;

     label3:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }

    boolean setPackageStoppedStateLPw(com.android.server.pm.PackageManagerService, java.lang.String, boolean, boolean, int, int)
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1, $r9, $r11, $r13, $r14, $r23;
        boolean z0, z1, $z2, $z3;
        int i0, i1, i2, $i3, $i4, $i5;
        com.android.server.pm.PackageSetting r2;
        android.util.ArrayMap $r3;
        java.lang.Object $r4;
        java.lang.StringBuilder $r5, $r15;
        java.lang.IllegalArgumentException $r8;
        com.android.server.pm.InstallSource $r10, $r12;
        java.lang.SecurityException $r22;
        com.android.server.pm.PackageManagerService r24;

        r0 := @this: com.android.server.pm.Settings;

        r24 := @parameter0: com.android.server.pm.PackageManagerService;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        i2 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        $r3 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.server.pm.PackageSetting) $r4;

        if r2 == null goto label6;

        if z1 != 0 goto label2;

        $i3 = r2.<com.android.server.pm.PackageSetting: int appId>;

        if i2 != $i3 goto label1;

        goto label2;

     label1:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: attempt to change stopped state from pid=");

        $i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", package uid=");

        $i5 = r2.<com.android.server.pm.PackageSetting: int appId>;

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r22 = new java.lang.SecurityException;

        $r23 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.lang.SecurityException: void <init>(java.lang.String)>($r23);

        throw $r22;

     label2:
        $z2 = virtualinvoke r2.<com.android.server.pm.PackageSetting: boolean getStopped(int)>(i1);

        if $z2 == z0 goto label5;

        virtualinvoke r2.<com.android.server.pm.PackageSetting: void setStopped(boolean,int)>(z0, i1);

        $z3 = virtualinvoke r2.<com.android.server.pm.PackageSetting: boolean getNotLaunched(int)>(i1);

        if $z3 == 0 goto label4;

        $r10 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.InstallSource installSource>;

        $r11 = $r10.<com.android.server.pm.InstallSource: java.lang.String installerPackageName>;

        if $r11 == null goto label3;

        $r14 = r2.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r12 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.InstallSource installSource>;

        $r13 = $r12.<com.android.server.pm.InstallSource: java.lang.String installerPackageName>;

        virtualinvoke r24.<com.android.server.pm.PackageManagerService: void notifyFirstLaunch(java.lang.String,java.lang.String,int)>($r14, $r13, i1);

     label3:
        virtualinvoke r2.<com.android.server.pm.PackageSetting: void setNotLaunched(boolean,int)>(0, i1);

     label4:
        return 1;

     label5:
        return 0;

     label6:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r8;
    }

    void setPermissionControllerVersion(long)
    {
        com.android.server.pm.Settings r0;
        long l0;
        com.android.server.pm.Settings$RuntimePermissionPersistence $r1;

        r0 := @this: com.android.server.pm.Settings;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.server.pm.Settings: com.android.server.pm.Settings$RuntimePermissionPersistence mRuntimePermissionsPersistence>;

        virtualinvoke $r1.<com.android.server.pm.Settings$RuntimePermissionPersistence: void setPermissionControllerVersion(long)>(l0);

        return;
    }

    boolean updateIntentFilterVerificationStatusLPw(java.lang.String, int, int)
    {
        com.android.server.pm.Settings r0;
        int i0, i1, $i2, i3;
        android.util.ArrayMap $r1;
        java.lang.Object $r2;
        android.util.SparseIntArray $r3, $r4;
        java.lang.String r5;
        com.android.server.pm.PackageSetting r6;

        r0 := @this: com.android.server.pm.Settings;

        r5 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r5);

        r6 = (com.android.server.pm.PackageSetting) $r2;

        if r6 != null goto label1;

        return 0;

     label1:
        if i0 != 2 goto label2;

        $r3 = r0.<com.android.server.pm.Settings: android.util.SparseIntArray mNextAppLinkGeneration>;

        $i2 = virtualinvoke $r3.<android.util.SparseIntArray: int get(int)>(i1);

        i3 = $i2 + 1;

        $r4 = r0.<com.android.server.pm.Settings: android.util.SparseIntArray mNextAppLinkGeneration>;

        virtualinvoke $r4.<android.util.SparseIntArray: void put(int,int)>(i1, i3);

        goto label3;

     label2:
        i3 = 0;

     label3:
        virtualinvoke r6.<com.android.server.pm.PackageSetting: void setDomainVerificationStatusForUser(int,int,int)>(i0, i3, i1);

        return 1;
    }

    void updateRuntimePermissionsFingerprintLPr(int)
    {
        com.android.server.pm.Settings r0;
        int i0;
        com.android.server.pm.Settings$RuntimePermissionPersistence $r1;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.pm.Settings: com.android.server.pm.Settings$RuntimePermissionPersistence mRuntimePermissionsPersistence>;

        virtualinvoke $r1.<com.android.server.pm.Settings$RuntimePermissionPersistence: void updateRuntimePermissionsFingerprintLPr(int)>(i0);

        return;
    }

    int updateSharedUserPermsLPw(com.android.server.pm.PackageSetting, int)
    {
        com.android.server.pm.Settings r0;
        com.android.server.pm.PackageSetting r1, r28, r30;
        int i0, $i2, $i3, i4, i5;
        com.android.server.pm.SharedUserSetting r2, $r7;
        java.util.Iterator r3, r27, r31;
        java.lang.String r4, $r14, $r18, $r22, $r24;
        com.android.server.pm.permission.BasePermission r5;
        com.android.server.pm.parsing.pkg.AndroidPackage $r6, $r8, $r13, $r15, $r20, $r21, $r23, $r25;
        java.util.List $r9, $r16, $r26;
        java.lang.Object $r10, $r17, $r19;
        com.android.server.pm.permission.PermissionSettings $r11;
        android.util.ArraySet $r12;
        boolean $z0, $z2, $z3, $z4, $z5, $z6, z8, z10;
        com.android.server.pm.permission.PermissionsState r29;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: com.android.server.pm.PackageSetting;

        i0 := @parameter1: int;

        if r1 == null goto label17;

        $r6 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        if $r6 != null goto label01;

        goto label17;

     label01:
        $r7 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r7 != null goto label02;

        return -10000;

     label02:
        r2 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        i4 = -10000;

        $r8 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        $r9 = interfaceinvoke $r8.<com.android.server.pm.parsing.pkg.AndroidPackage: java.util.List getRequestedPermissions()>();

        r3 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z6 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label16;

        $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r10;

        $r11 = r0.<com.android.server.pm.Settings: com.android.server.pm.permission.PermissionSettings mPermissions>;

        r5 = virtualinvoke $r11.<com.android.server.pm.permission.PermissionSettings: com.android.server.pm.permission.BasePermission getPermission(java.lang.String)>(r4);

        if r5 != null goto label04;

        goto label03;

     label04:
        $r12 = r2.<com.android.server.pm.SharedUserSetting: android.util.ArraySet packages>;

        r27 = virtualinvoke $r12.<android.util.ArraySet: java.util.Iterator iterator()>();

     label05:
        z8 = 0;

        $z0 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r19 = interfaceinvoke r27.<java.util.Iterator: java.lang.Object next()>();

        r28 = (com.android.server.pm.PackageSetting) $r19;

        $r20 = r28.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        if $r20 == null goto label06;

        $r21 = r28.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        $r22 = interfaceinvoke $r21.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getPackageName()>();

        $r23 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        $r24 = interfaceinvoke $r23.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getPackageName()>();

        $z4 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>($r24);

        if $z4 != 0 goto label06;

        $r25 = r28.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        $r26 = interfaceinvoke $r25.<com.android.server.pm.parsing.pkg.AndroidPackage: java.util.List getRequestedPermissions()>();

        $z5 = interfaceinvoke $r26.<java.util.List: boolean contains(java.lang.Object)>(r4);

        if $z5 == 0 goto label06;

        z8 = 1;

        goto label07;

     label06:
        goto label05;

     label07:
        if z8 == 0 goto label08;

        goto label03;

     label08:
        r29 = virtualinvoke r2.<com.android.server.pm.SharedUserSetting: com.android.server.pm.permission.PermissionsState getPermissionsState()>();

        $r13 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        $r14 = interfaceinvoke $r13.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getPackageName()>();

        r30 = virtualinvoke r0.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting getDisabledSystemPkgLPr(java.lang.String)>($r14);

        if r30 == null goto label12;

        $r15 = r30.<com.android.server.pm.PackageSetting: com.android.server.pm.parsing.pkg.AndroidPackage pkg>;

        $r16 = interfaceinvoke $r15.<com.android.server.pm.parsing.pkg.AndroidPackage: java.util.List getRequestedPermissions()>();

        r31 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();

     label09:
        z10 = 0;

        $z2 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label11;

        $r17 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>();

        $r18 = (java.lang.String) $r17;

        $z3 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z3 == 0 goto label10;

        z10 = 1;

        goto label11;

     label10:
        goto label09;

     label11:
        if z10 == 0 goto label12;

        goto label03;

     label12:
        virtualinvoke r29.<com.android.server.pm.permission.PermissionsState: boolean updatePermissionFlags(com.android.server.pm.permission.BasePermission,int,int,int)>(r5, i0, 261119, 0);

        i5 = i4;

        $i2 = virtualinvoke r29.<com.android.server.pm.permission.PermissionsState: int revokeInstallPermission(com.android.server.pm.permission.BasePermission)>(r5);

        if $i2 != 1 goto label13;

        i5 = -1;

     label13:
        i4 = i5;

        $i3 = virtualinvoke r29.<com.android.server.pm.permission.PermissionsState: int revokeRuntimePermission(com.android.server.pm.permission.BasePermission,int)>(r5, i0);

        if $i3 != 1 goto label15;

        if i5 != -10000 goto label14;

        i4 = i0;

        goto label15;

     label14:
        i4 = i5;

        if i5 == i0 goto label15;

        i4 = -1;

     label15:
        goto label03;

     label16:
        return i4;

     label17:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", "Trying to update info for null package. Just ignoring");

        return -10000;
    }

    boolean wasPackageEverLaunchedLPr(java.lang.String, int)
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1, $r8;
        int i0;
        android.util.ArrayMap $r2;
        java.lang.Object $r3;
        java.lang.StringBuilder $r4;
        java.lang.IllegalArgumentException $r7;
        boolean $z0, $z1;
        com.android.server.pm.PackageSetting r9;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r9 = (com.android.server.pm.PackageSetting) $r3;

        if r9 == null goto label1;

        $z0 = virtualinvoke r9.<com.android.server.pm.PackageSetting: boolean getNotLaunched(int)>(i0);

        $z1 = $z0 ^ 1;

        return $z1;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }

    void writeAllDomainVerificationsLPr(org.xmlpull.v1.XmlSerializer, int) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlSerializer r1;
        int i0, i1, i2;
        android.content.pm.IntentFilterVerificationInfo r2;
        android.util.ArrayMap $r4, $r6;
        java.lang.Object $r7;
        com.android.server.pm.PackageSetting $r8;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        i1 := @parameter1: int;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "all-intent-filter-verifications");

        $r4 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        i0 = virtualinvoke $r4.<android.util.ArrayMap: int size()>();

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        $r6 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i2);

        $r8 = (com.android.server.pm.PackageSetting) $r7;

        r2 = virtualinvoke $r8.<com.android.server.pm.PackageSetting: android.content.pm.IntentFilterVerificationInfo getIntentFilterVerificationInfo()>();

        if r2 == null goto label2;

        virtualinvoke r0.<com.android.server.pm.Settings: void writeDomainVerificationsLPr(org.xmlpull.v1.XmlSerializer,android.content.pm.IntentFilterVerificationInfo)>(r1, r2);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "all-intent-filter-verifications");

        return;
    }

    void writeAllRuntimePermissionsLPr()
    {
        com.android.server.pm.Settings r0;
        int[] r1;
        int i0, i1, i2;
        com.android.server.pm.UserManagerService $r2;
        com.android.server.pm.Settings$RuntimePermissionPersistence $r3;

        r0 := @this: com.android.server.pm.Settings;

        $r2 = staticinvoke <com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService getInstance()>();

        r1 = virtualinvoke $r2.<com.android.server.pm.UserManagerService: int[] getUserIds()>();

        i0 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        i1 = r1[i2];

        $r3 = r0.<com.android.server.pm.Settings: com.android.server.pm.Settings$RuntimePermissionPersistence mRuntimePermissionsPersistence>;

        virtualinvoke $r3.<com.android.server.pm.Settings$RuntimePermissionPersistence: void writePermissionsForUserAsyncLPr(int)>(i1);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    void writeAllUsersPackageRestrictionsLPr()
    {
        com.android.server.pm.Settings r0;
        com.android.server.pm.UserManagerService $r1;
        boolean $z0;
        java.lang.Object $r2;
        android.content.pm.UserInfo $r3;
        int $i0;
        java.util.List r4;
        java.util.Iterator r5;

        r0 := @this: com.android.server.pm.Settings;

        $r1 = staticinvoke <com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService getInstance()>();

        r4 = staticinvoke <com.android.server.pm.Settings: java.util.List getAllUsers(com.android.server.pm.UserManagerService)>($r1);

        if r4 != null goto label1;

        return;

     label1:
        r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (android.content.pm.UserInfo) $r2;

        $i0 = $r3.<android.content.pm.UserInfo: int id>;

        virtualinvoke r0.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>($i0);

        goto label2;

     label3:
        return;
    }

    void writeBlockUninstallPackagesLPr(org.xmlpull.v1.XmlSerializer, int) throws java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlSerializer r1;
        android.util.ArraySet r2;
        android.util.SparseArray $r3;
        java.lang.Object $r4, $r8;
        int $i0, i1, i2;
        java.lang.String $r9;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        i1 := @parameter1: int;

        $r3 = r0.<com.android.server.pm.Settings: android.util.SparseArray mBlockUninstallPackages>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r2 = (android.util.ArraySet) $r4;

        if r2 == null goto label3;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "block-uninstall-packages");

        i2 = 0;

     label1:
        $i0 = virtualinvoke r2.<android.util.ArraySet: int size()>();

        if i2 >= $i0 goto label2;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "block-uninstall");

        $r8 = virtualinvoke r2.<android.util.ArraySet: java.lang.Object valueAt(int)>(i2);

        $r9 = (java.lang.String) $r8;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "packageName", $r9);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "block-uninstall");

        i2 = i2 + 1;

        goto label1;

     label2:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "block-uninstall-packages");

     label3:
        return;
    }

    void writeCrossProfileIntentFiltersLPr(org.xmlpull.v1.XmlSerializer, int) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlSerializer r1;
        int i0;
        com.android.server.pm.CrossProfileIntentFilter r2;
        android.util.SparseArray $r4;
        java.lang.Object $r5, $r8;
        java.util.Set $r7;
        boolean $z0;
        com.android.server.pm.CrossProfileIntentResolver r11;
        java.util.Iterator r12;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        i0 := @parameter1: int;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "crossProfile-intent-filters");

        $r4 = r0.<com.android.server.pm.Settings: android.util.SparseArray mCrossProfileIntentResolvers>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r11 = (com.android.server.pm.CrossProfileIntentResolver) $r5;

        if r11 == null goto label2;

        $r7 = virtualinvoke r11.<com.android.server.pm.CrossProfileIntentResolver: java.util.Set filterSet()>();

        r12 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.server.pm.CrossProfileIntentFilter) $r8;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        virtualinvoke r2.<com.android.server.pm.CrossProfileIntentFilter: void writeToXml(org.xmlpull.v1.XmlSerializer)>(r1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

        goto label1;

     label2:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "crossProfile-intent-filters");

        return;
    }

    void writeDefaultAppsLPr(org.xmlpull.v1.XmlSerializer, int) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlSerializer r1;
        int i0;
        java.lang.String r2;
        android.util.SparseArray $r4;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        i0 := @parameter1: int;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "default-apps");

        $r4 = r0.<com.android.server.pm.Settings: android.util.SparseArray mDefaultBrowserApp>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (java.lang.String) $r5;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 != 0 goto label1;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "default-browser");

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "packageName", r2);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "default-browser");

     label1:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "default-apps");

        return;
    }

    void writeDisabledSysPackageLPr(org.xmlpull.v1.XmlSerializer, com.android.server.pm.PackageSetting) throws java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlSerializer r1;
        com.android.server.pm.PackageSetting r2;
        java.lang.String $r4, $r6, $r7, $r9, $r11, $r13, $r15, $r17, $r18, $r19, $r20, $r21, $r22, $r24, $r32, $r34, $r36, $r38, $r40, $r42, $r44;
        long $l0, $l1, $l2, $l3;
        boolean $z0;
        com.android.server.pm.SharedUserSetting $r23, $r28;
        int $i4, $i5;
        long[] $r26;
        java.lang.String[] $r27;
        com.android.server.pm.permission.PermissionsState $r30;
        java.util.List $r31;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r2 := @parameter1: com.android.server.pm.PackageSetting;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "updated-package");

        $r4 = r2.<com.android.server.pm.PackageSetting: java.lang.String name>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r4);

        $r6 = r2.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        if $r6 == null goto label1;

        $r44 = r2.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "realName", $r44);

     label1:
        $r7 = r2.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "codePath", $r7);

        $l0 = r2.<com.android.server.pm.PackageSetting: long timeStamp>;

        $r9 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l0);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "ft", $r9);

        $l1 = r2.<com.android.server.pm.PackageSetting: long firstInstallTime>;

        $r11 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "it", $r11);

        $l2 = r2.<com.android.server.pm.PackageSetting: long lastUpdateTime>;

        $r13 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l2);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "ut", $r13);

        $l3 = r2.<com.android.server.pm.PackageSetting: long versionCode>;

        $r15 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l3);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "version", $r15);

        $r18 = r2.<com.android.server.pm.PackageSetting: java.lang.String resourcePathString>;

        $r17 = r2.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        $z0 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z0 != 0 goto label2;

        $r42 = r2.<com.android.server.pm.PackageSetting: java.lang.String resourcePathString>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "resourcePath", $r42);

     label2:
        $r19 = r2.<com.android.server.pm.PackageSetting: java.lang.String legacyNativeLibraryPathString>;

        if $r19 == null goto label3;

        $r40 = r2.<com.android.server.pm.PackageSetting: java.lang.String legacyNativeLibraryPathString>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "nativeLibraryPath", $r40);

     label3:
        $r20 = r2.<com.android.server.pm.PackageSetting: java.lang.String primaryCpuAbiString>;

        if $r20 == null goto label4;

        $r38 = r2.<com.android.server.pm.PackageSetting: java.lang.String primaryCpuAbiString>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "primaryCpuAbi", $r38);

     label4:
        $r21 = r2.<com.android.server.pm.PackageSetting: java.lang.String secondaryCpuAbiString>;

        if $r21 == null goto label5;

        $r36 = r2.<com.android.server.pm.PackageSetting: java.lang.String secondaryCpuAbiString>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "secondaryCpuAbi", $r36);

     label5:
        $r22 = r2.<com.android.server.pm.PackageSetting: java.lang.String cpuAbiOverrideString>;

        if $r22 == null goto label6;

        $r34 = r2.<com.android.server.pm.PackageSetting: java.lang.String cpuAbiOverrideString>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "cpuAbiOverride", $r34);

     label6:
        $r23 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r23 != null goto label7;

        $i5 = r2.<com.android.server.pm.PackageSetting: int appId>;

        $r32 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i5);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "userId", $r32);

        goto label8;

     label7:
        $i4 = r2.<com.android.server.pm.PackageSetting: int appId>;

        $r24 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "sharedUserId", $r24);

     label8:
        $r27 = r2.<com.android.server.pm.PackageSetting: java.lang.String[] usesStaticLibraries>;

        $r26 = r2.<com.android.server.pm.PackageSetting: long[] usesStaticLibrariesVersions>;

        virtualinvoke r0.<com.android.server.pm.Settings: void writeUsesStaticLibLPw(org.xmlpull.v1.XmlSerializer,java.lang.String[],long[])>(r1, $r27, $r26);

        $r28 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r28 != null goto label9;

        $r30 = virtualinvoke r2.<com.android.server.pm.PackageSetting: com.android.server.pm.permission.PermissionsState getPermissionsState()>();

        $r31 = virtualinvoke $r30.<com.android.server.pm.permission.PermissionsState: java.util.List getInstallPermissionStates()>();

        virtualinvoke r0.<com.android.server.pm.Settings: void writePermissionsLPr(org.xmlpull.v1.XmlSerializer,java.util.List)>(r1, $r31);

     label9:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "updated-package");

        return;
    }

    void writeDomainVerificationsLPr(org.xmlpull.v1.XmlSerializer, android.content.pm.IntentFilterVerificationInfo) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlSerializer r1;
        android.content.pm.IntentFilterVerificationInfo r2;
        java.lang.String $r3;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r2 := @parameter1: android.content.pm.IntentFilterVerificationInfo;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<android.content.pm.IntentFilterVerificationInfo: java.lang.String getPackageName()>();

        if $r3 == null goto label1;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "domain-verification");

        virtualinvoke r2.<android.content.pm.IntentFilterVerificationInfo: void writeToXml(org.xmlpull.v1.XmlSerializer)>(r1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "domain-verification");

     label1:
        return;
    }

    void writeKernelMappingLPr()
    {
        com.android.server.pm.Settings r0;
        int i0, $i1, $i2, i3, i4;
        java.util.Iterator r1;
        android.util.ArraySet $r2;
        android.util.ArrayMap $r3, $r6;
        java.util.Collection $r4;
        boolean $z0;
        java.lang.Object $r5, $r10;
        java.io.File $r8, $r9, r13;
        java.lang.String $r11, $r12, r17;
        java.lang.String[] r14;
        com.android.server.pm.PackageSetting r16;

        r0 := @this: com.android.server.pm.Settings;

        r13 = r0.<com.android.server.pm.Settings: java.io.File mKernelMappingFilename>;

        if r13 != null goto label1;

        return;

     label1:
        r14 = virtualinvoke r13.<java.io.File: java.lang.String[] list()>();

        $r2 = new android.util.ArraySet;

        $i1 = lengthof r14;

        specialinvoke $r2.<android.util.ArraySet: void <init>(int)>($i1);

        i0 = lengthof r14;

        i3 = 0;

     label2:
        if i3 >= i0 goto label3;

        $r12 = r14[i3];

        virtualinvoke $r2.<android.util.ArraySet: boolean add(java.lang.Object)>($r12);

        i3 = i3 + 1;

        goto label2;

     label3:
        $r3 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r10 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r16 = (com.android.server.pm.PackageSetting) $r10;

        $r11 = r16.<com.android.server.pm.PackageSetting: java.lang.String name>;

        virtualinvoke $r2.<android.util.ArraySet: boolean remove(java.lang.Object)>($r11);

        virtualinvoke r0.<com.android.server.pm.Settings: void writeKernelMappingLPr(com.android.server.pm.PackageSetting)>(r16);

        goto label4;

     label5:
        i4 = 0;

     label6:
        $i2 = virtualinvoke $r2.<android.util.ArraySet: int size()>();

        if i4 >= $i2 goto label7;

        $r5 = virtualinvoke $r2.<android.util.ArraySet: java.lang.Object valueAt(int)>(i4);

        r17 = (java.lang.String) $r5;

        $r6 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mKernelMapping>;

        virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r17);

        $r8 = new java.io.File;

        $r9 = r0.<com.android.server.pm.Settings: java.io.File mKernelMappingFilename>;

        specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>($r9, r17);

        virtualinvoke $r8.<java.io.File: boolean delete()>();

        i4 = i4 + 1;

        goto label6;

     label7:
        return;
    }

    void writeKernelMappingLPr(com.android.server.pm.PackageSetting)
    {
        com.android.server.pm.Settings r0;
        com.android.server.pm.PackageSetting r1;
        java.io.File $r2;
        java.lang.String $r3, $r4;
        int $i0;
        int[] $r5;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: com.android.server.pm.PackageSetting;

        $r2 = r0.<com.android.server.pm.Settings: java.io.File mKernelMappingFilename>;

        if $r2 == null goto label2;

        if r1 == null goto label2;

        $r3 = r1.<com.android.server.pm.PackageSetting: java.lang.String name>;

        if $r3 != null goto label1;

        goto label2;

     label1:
        $r4 = r1.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $i0 = r1.<com.android.server.pm.PackageSetting: int appId>;

        $r5 = virtualinvoke r1.<com.android.server.pm.PackageSetting: int[] getNotInstalledUserIds()>();

        virtualinvoke r0.<com.android.server.pm.Settings: void writeKernelMappingLPr(java.lang.String,int,int[])>($r4, $i0, $r5);

        return;

     label2:
        return;
    }

    void writeKernelMappingLPr(java.lang.String, int, int[])
    {
        com.android.server.pm.Settings r0;
        java.lang.String r1;
        int[] r2, $r6, $r7, $r8, $r10, $r11, $r13, $r18;
        android.util.ArrayMap $r4, $r16;
        java.lang.Object $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9;
        boolean $z0, $z1, $z3, z4, z5;
        java.io.File $r9, $r12, $r14, $r20, $r21;
        com.android.server.pm.Settings$KernelPackageState $r15, r19;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: java.lang.String;

        i7 := @parameter1: int;

        r2 := @parameter2: int[];

        $r4 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mKernelMapping>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r19 = (com.android.server.pm.Settings$KernelPackageState) $r5;

        z4 = 0;

        if r19 != null goto label01;

        z5 = 1;

        goto label02;

     label01:
        z5 = 0;

     label02:
        if z5 != 0 goto label03;

        $r18 = r19.<com.android.server.pm.Settings$KernelPackageState: int[] excludedUserIds>;

        $z3 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>(r2, $r18);

        if $z3 != 0 goto label04;

     label03:
        z4 = 1;

     label04:
        $r20 = new java.io.File;

        $r21 = r0.<com.android.server.pm.Settings: java.io.File mKernelMappingFilename>;

        specialinvoke $r20.<java.io.File: void <init>(java.io.File,java.lang.String)>($r21, r1);

        if z5 == 0 goto label05;

        virtualinvoke $r20.<java.io.File: boolean mkdir()>();

        $r15 = new com.android.server.pm.Settings$KernelPackageState;

        specialinvoke $r15.<com.android.server.pm.Settings$KernelPackageState: void <init>(com.android.server.pm.Settings$1)>(null);

        r19 = $r15;

        $r16 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mKernelMapping>;

        virtualinvoke $r16.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r15);

     label05:
        $i0 = r19.<com.android.server.pm.Settings$KernelPackageState: int appId>;

        if $i0 == i7 goto label06;

        $r14 = new java.io.File;

        specialinvoke $r14.<java.io.File: void <init>(java.io.File,java.lang.String)>($r20, "appid");

        specialinvoke r0.<com.android.server.pm.Settings: void writeIntToFile(java.io.File,int)>($r14, i7);

     label06:
        if z4 == 0 goto label14;

        i8 = 0;

     label07:
        $i1 = lengthof r2;

        if i8 >= $i1 goto label10;

        $r11 = r19.<com.android.server.pm.Settings$KernelPackageState: int[] excludedUserIds>;

        if $r11 == null goto label08;

        $r13 = r19.<com.android.server.pm.Settings$KernelPackageState: int[] excludedUserIds>;

        $i6 = r2[i8];

        $z1 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(int[],int)>($r13, $i6);

        if $z1 != 0 goto label09;

     label08:
        $r12 = new java.io.File;

        specialinvoke $r12.<java.io.File: void <init>(java.io.File,java.lang.String)>($r20, "excluded_userids");

        $i5 = r2[i8];

        specialinvoke r0.<com.android.server.pm.Settings: void writeIntToFile(java.io.File,int)>($r12, $i5);

     label09:
        i8 = i8 + 1;

        goto label07;

     label10:
        $r6 = r19.<com.android.server.pm.Settings$KernelPackageState: int[] excludedUserIds>;

        if $r6 == null goto label13;

        i9 = 0;

     label11:
        $r7 = r19.<com.android.server.pm.Settings$KernelPackageState: int[] excludedUserIds>;

        $i2 = lengthof $r7;

        if i9 >= $i2 goto label13;

        $r8 = r19.<com.android.server.pm.Settings$KernelPackageState: int[] excludedUserIds>;

        $i3 = $r8[i9];

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(int[],int)>(r2, $i3);

        if $z0 != 0 goto label12;

        $r9 = new java.io.File;

        specialinvoke $r9.<java.io.File: void <init>(java.io.File,java.lang.String)>($r20, "clear_userid");

        $r10 = r19.<com.android.server.pm.Settings$KernelPackageState: int[] excludedUserIds>;

        $i4 = $r10[i9];

        specialinvoke r0.<com.android.server.pm.Settings: void writeIntToFile(java.io.File,int)>($r9, $i4);

     label12:
        i9 = i9 + 1;

        goto label11;

     label13:
        r19.<com.android.server.pm.Settings$KernelPackageState: int[] excludedUserIds> = r2;

     label14:
        return;
    }

    void writeKeySetAliasesLPr(org.xmlpull.v1.XmlSerializer, com.android.server.pm.PackageKeySetData) throws java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlSerializer r1;
        java.util.Iterator r2;
        android.util.ArrayMap $r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5, $r7, $r10;
        java.lang.String $r8, $r12;
        java.lang.Long $r11;
        long $l0;
        com.android.server.pm.PackageKeySetData r15;
        java.util.Map$Entry r16;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r15 := @parameter1: com.android.server.pm.PackageKeySetData;

        $r3 = virtualinvoke r15.<com.android.server.pm.PackageKeySetData: android.util.ArrayMap getAliases()>();

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r16 = (java.util.Map$Entry) $r5;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "defined-keyset");

        $r7 = interfaceinvoke r16.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = (java.lang.String) $r7;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "alias", $r8);

        $r10 = interfaceinvoke r16.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r11 = (java.lang.Long) $r10;

        $l0 = virtualinvoke $r11.<java.lang.Long: long longValue()>();

        $r12 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "identifier", $r12);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "defined-keyset");

        goto label1;

     label2:
        return;
    }

    void writeLPr()
    {
        com.android.server.pm.Settings r0;
        long l0, $l4, $l5;
        java.io.BufferedOutputStream r1;
        com.android.internal.util.FastXmlSerializer r2;
        int i1, $i2, $i6, $i7, $i8, i13, $i14, i15;
        java.io.File $r3, $r19, $r20, $r69, $r70, $r71, $r72, $r74, $r77, $r84, $r103;
        boolean $z0, $z1, $z2, $z5, $z6, $z7, $z9, $z10, $z11, $z12;
        android.content.pm.VerifierDeviceIdentity $r5, $r58;
        java.lang.Boolean $r6, $r54, $r87;
        android.util.ArrayMap $r11, $r13, $r15, $r16, $r24, $r27, $r62, $r64, $r88, $r94;
        java.util.Collection $r12, $r14, $r95;
        com.android.server.pm.KeySetManagerService $r17;
        java.lang.String $r21, $r32, $r35, $r40, $r42, $r59, $r67, $r79, $r86, r89, r91;
        java.lang.Object $r25, $r29, $r31, $r34, $r38, $r49, $r51, $r63, $r65;
        android.content.pm.IntentFilterVerificationInfo $r26;
        java.util.Set $r28;
        java.util.ArrayList $r44, $r82;
        com.android.server.pm.PackageSignatures $r45;
        com.android.server.pm.permission.PermissionsState $r46;
        java.util.List $r47;
        com.android.server.pm.PackageSetting $r50, $r52;
        java.lang.Throwable $r73, $r80, $r81, r102;
        java.lang.StringBuilder $r75;
        java.io.FileOutputStream r83;
        java.nio.charset.Charset r85;
        com.android.server.pm.Settings$VersionInfo r90;
        com.android.server.pm.permission.PermissionSettings $r92, $r93;
        java.util.Iterator r96, r97, r98, r100;
        com.android.server.pm.SharedUserSetting r99;
        java.util.Map$Entry r101;

        r0 := @this: com.android.server.pm.Settings;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        staticinvoke <com.android.server.pm.Settings: void invalidatePackageCache()>();

        $r3 = r0.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label02;

        $r69 = r0.<com.android.server.pm.Settings: java.io.File mBackupSettingsFilename>;

        $z7 = virtualinvoke $r69.<java.io.File: boolean exists()>();

        if $z7 != 0 goto label01;

        $r72 = r0.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        $r71 = r0.<com.android.server.pm.Settings: java.io.File mBackupSettingsFilename>;

        $z9 = virtualinvoke $r72.<java.io.File: boolean renameTo(java.io.File)>($r71);

        if $z9 != 0 goto label02;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("PackageManager", "Unable to backup package manager settings,  current changes will be lost at reboot");

        return;

     label01:
        $r70 = r0.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        virtualinvoke $r70.<java.io.File: boolean delete()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "Preserving older settings backup");

     label02:
        $r82 = r0.<com.android.server.pm.Settings: java.util.ArrayList mPastSignatures>;

        virtualinvoke $r82.<java.util.ArrayList: void clear()>();

     label03:
        r83 = new java.io.FileOutputStream;

        $r84 = r0.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        specialinvoke r83.<java.io.FileOutputStream: void <init>(java.io.File)>($r84);

        r1 = new java.io.BufferedOutputStream;

        specialinvoke r1.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(r83);

        r2 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke r2.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        r85 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

     label04:
        $r86 = virtualinvoke r85.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r1, $r86);

     label05:
        $r87 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r87);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "packages");

     label06:
        i13 = 0;

     label07:
        $r88 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mVersion>;

        $i14 = virtualinvoke $r88.<android.util.ArrayMap: int size()>();

        if i13 >= $i14 goto label09;

        $r62 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mVersion>;

        $r63 = virtualinvoke $r62.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i13);

        r89 = (java.lang.String) $r63;

        $r64 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mVersion>;

        $r65 = virtualinvoke $r64.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i13);

        r90 = (com.android.server.pm.Settings$VersionInfo) $r65;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "version");

        staticinvoke <com.android.internal.util.XmlUtils: void writeStringAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.CharSequence)>(r2, "volumeUuid", r89);

        $i7 = r90.<com.android.server.pm.Settings$VersionInfo: int sdkVersion>;

        staticinvoke <com.android.internal.util.XmlUtils: void writeIntAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,int)>(r2, "sdkVersion", $i7);

        $i8 = r90.<com.android.server.pm.Settings$VersionInfo: int databaseVersion>;

        staticinvoke <com.android.internal.util.XmlUtils: void writeIntAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,int)>(r2, "databaseVersion", $i8);

        $r67 = r90.<com.android.server.pm.Settings$VersionInfo: java.lang.String fingerprint>;

        staticinvoke <com.android.internal.util.XmlUtils: void writeStringAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.CharSequence)>(r2, "fingerprint", $r67);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "version");

     label08:
        i13 = i13 + 1;

        goto label07;

     label09:
        $r5 = r0.<com.android.server.pm.Settings: android.content.pm.VerifierDeviceIdentity mVerifierDeviceIdentity>;

        if $r5 == null goto label10;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "verifier");

        $r58 = r0.<com.android.server.pm.Settings: android.content.pm.VerifierDeviceIdentity mVerifierDeviceIdentity>;

        $r59 = virtualinvoke $r58.<android.content.pm.VerifierDeviceIdentity: java.lang.String toString()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "device", $r59);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "verifier");

     label10:
        $r6 = r0.<com.android.server.pm.Settings: java.lang.Boolean mReadExternalStorageEnforced>;

        if $r6 == null goto label14;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "read-external-storage");

        $r54 = r0.<com.android.server.pm.Settings: java.lang.Boolean mReadExternalStorageEnforced>;

        $z6 = virtualinvoke $r54.<java.lang.Boolean: boolean booleanValue()>();

        if $z6 == 0 goto label12;

     label11:
        r91 = "1";

        goto label13;

     label12:
        r91 = "0";

     label13:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "enforcement", r91);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "read-external-storage");

     label14:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "permission-trees");

        $r92 = r0.<com.android.server.pm.Settings: com.android.server.pm.permission.PermissionSettings mPermissions>;

        virtualinvoke $r92.<com.android.server.pm.permission.PermissionSettings: void writePermissionTrees(org.xmlpull.v1.XmlSerializer)>(r2);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "permission-trees");

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "permissions");

        $r93 = r0.<com.android.server.pm.Settings: com.android.server.pm.permission.PermissionSettings mPermissions>;

        virtualinvoke $r93.<com.android.server.pm.permission.PermissionSettings: void writePermissions(org.xmlpull.v1.XmlSerializer)>(r2);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "permissions");

        $r94 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r95 = virtualinvoke $r94.<android.util.ArrayMap: java.util.Collection values()>();

        r96 = interfaceinvoke $r95.<java.util.Collection: java.util.Iterator iterator()>();

     label15:
        $z11 = interfaceinvoke r96.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label17;

        $r51 = interfaceinvoke r96.<java.util.Iterator: java.lang.Object next()>();

        $r52 = (com.android.server.pm.PackageSetting) $r51;

        virtualinvoke r0.<com.android.server.pm.Settings: void writePackageLPr(org.xmlpull.v1.XmlSerializer,com.android.server.pm.PackageSetting)>(r2, $r52);

     label16:
        goto label15;

     label17:
        $r11 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mDisabledSysPackages>;

        $r12 = virtualinvoke $r11.<android.util.ArrayMap: java.util.Collection values()>();

        r97 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();

     label18:
        $z1 = interfaceinvoke r97.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label20;

        $r49 = interfaceinvoke r97.<java.util.Iterator: java.lang.Object next()>();

        $r50 = (com.android.server.pm.PackageSetting) $r49;

        virtualinvoke r0.<com.android.server.pm.Settings: void writeDisabledSysPackageLPr(org.xmlpull.v1.XmlSerializer,com.android.server.pm.PackageSetting)>(r2, $r50);

     label19:
        goto label18;

     label20:
        $r13 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mSharedUsers>;

        $r14 = virtualinvoke $r13.<android.util.ArrayMap: java.util.Collection values()>();

        r98 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();

     label21:
        $z2 = interfaceinvoke r98.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label23;

        $r38 = interfaceinvoke r98.<java.util.Iterator: java.lang.Object next()>();

        r99 = (com.android.server.pm.SharedUserSetting) $r38;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "shared-user");

        $r40 = r99.<com.android.server.pm.SharedUserSetting: java.lang.String name>;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r40);

        $i6 = r99.<com.android.server.pm.SharedUserSetting: int userId>;

        $r42 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i6);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "userId", $r42);

        $r45 = r99.<com.android.server.pm.SharedUserSetting: com.android.server.pm.PackageSignatures signatures>;

        $r44 = r0.<com.android.server.pm.Settings: java.util.ArrayList mPastSignatures>;

        virtualinvoke $r45.<com.android.server.pm.PackageSignatures: void writeXml(org.xmlpull.v1.XmlSerializer,java.lang.String,java.util.ArrayList)>(r2, "sigs", $r44);

        $r46 = virtualinvoke r99.<com.android.server.pm.SharedUserSetting: com.android.server.pm.permission.PermissionsState getPermissionsState()>();

        $r47 = virtualinvoke $r46.<com.android.server.pm.permission.PermissionsState: java.util.List getInstallPermissionStates()>();

        virtualinvoke r0.<com.android.server.pm.Settings: void writePermissionsLPr(org.xmlpull.v1.XmlSerializer,java.util.List)>(r2, $r47);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "shared-user");

     label22:
        goto label21;

     label23:
        $r15 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mRenamedPackages>;

        $i2 = virtualinvoke $r15.<android.util.ArrayMap: int size()>();

        if $i2 <= 0 goto label26;

        $r27 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mRenamedPackages>;

        $r28 = virtualinvoke $r27.<android.util.ArrayMap: java.util.Set entrySet()>();

        r100 = interfaceinvoke $r28.<java.util.Set: java.util.Iterator iterator()>();

     label24:
        $z5 = interfaceinvoke r100.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label26;

        $r29 = interfaceinvoke r100.<java.util.Iterator: java.lang.Object next()>();

        r101 = (java.util.Map$Entry) $r29;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "renamed-package");

        $r31 = interfaceinvoke r101.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r32 = (java.lang.String) $r31;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "new", $r32);

        $r34 = interfaceinvoke r101.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r35 = (java.lang.String) $r34;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "old", $r35);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "renamed-package");

     label25:
        goto label24;

     label26:
        $r16 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mRestoredIntentFilterVerifications>;

        i1 = virtualinvoke $r16.<android.util.ArrayMap: int size()>();

     label27:
        if i1 <= 0 goto label34;

     label28:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "restored-ivi");

     label29:
        i15 = 0;

     label30:
        if i15 >= i1 goto label33;

     label31:
        $r24 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mRestoredIntentFilterVerifications>;

        $r25 = virtualinvoke $r24.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i15);

        $r26 = (android.content.pm.IntentFilterVerificationInfo) $r25;

        virtualinvoke r0.<com.android.server.pm.Settings: void writeDomainVerificationsLPr(org.xmlpull.v1.XmlSerializer,android.content.pm.IntentFilterVerificationInfo)>(r2, $r26);

     label32:
        i15 = i15 + 1;

        goto label30;

     label33:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "restored-ivi");

     label34:
        $r17 = r0.<com.android.server.pm.Settings: com.android.server.pm.KeySetManagerService mKeySetManagerService>;

        virtualinvoke $r17.<com.android.server.pm.KeySetManagerService: void writeKeySetManagerServiceLPr(org.xmlpull.v1.XmlSerializer)>(r2);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "packages");

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        virtualinvoke r1.<java.io.BufferedOutputStream: void flush()>();

        staticinvoke <android.os.FileUtils: boolean sync(java.io.FileOutputStream)>(r83);

        virtualinvoke r1.<java.io.BufferedOutputStream: void close()>();

        $r19 = r0.<com.android.server.pm.Settings: java.io.File mBackupSettingsFilename>;

        virtualinvoke $r19.<java.io.File: boolean delete()>();

        $r20 = r0.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        $r21 = virtualinvoke $r20.<java.io.File: java.lang.String toString()>();

        staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r21, 432, -1, -1);

        virtualinvoke r0.<com.android.server.pm.Settings: void writeKernelMappingLPr()>();

        virtualinvoke r0.<com.android.server.pm.Settings: void writePackageListLPr()>();

        virtualinvoke r0.<com.android.server.pm.Settings: void writeAllUsersPackageRestrictionsLPr()>();

        virtualinvoke r0.<com.android.server.pm.Settings: void writeAllRuntimePermissionsLPr()>();

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l5 = $l4 - l0;

        staticinvoke <com.android.internal.logging.EventLogTags: void writeCommitSysConfigFile(java.lang.String,long)>("package", $l5);

     label35:
        return;

     label36:
        $r81 := @caughtexception;

        r102 = $r81;

        goto label39;

     label37:
        $r80 := @caughtexception;

        r102 = $r80;

        goto label39;

     label38:
        $r73 := @caughtexception;

        r102 = $r73;

     label39:
        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Unable to write package manager settings, current changes will be lost at reboot", r102);

        $r103 = r0.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        $z12 = virtualinvoke $r103.<java.io.File: boolean exists()>();

        if $z12 == 0 goto label40;

        $r74 = r0.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        $z10 = virtualinvoke $r74.<java.io.File: boolean delete()>();

        if $z10 != 0 goto label40;

        $r75 = new java.lang.StringBuilder;

        specialinvoke $r75.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to clean up mangled file: ");

        $r77 = r0.<com.android.server.pm.Settings: java.io.File mSettingsFilename>;

        virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r77);

        $r79 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("PackageManager", $r79);

     label40:
        return;

        catch java.io.IOException from label03 to label04 with label38;
        catch java.io.IOException from label04 to label05 with label37;
        catch java.io.IOException from label05 to label06 with label36;
        catch java.io.IOException from label07 to label08 with label36;
        catch java.io.IOException from label09 to label10 with label36;
        catch java.io.IOException from label10 to label11 with label36;
        catch java.io.IOException from label13 to label14 with label36;
        catch java.io.IOException from label14 to label15 with label36;
        catch java.io.IOException from label15 to label16 with label36;
        catch java.io.IOException from label17 to label18 with label36;
        catch java.io.IOException from label18 to label19 with label36;
        catch java.io.IOException from label20 to label21 with label36;
        catch java.io.IOException from label21 to label22 with label36;
        catch java.io.IOException from label23 to label24 with label36;
        catch java.io.IOException from label24 to label25 with label36;
        catch java.io.IOException from label26 to label27 with label36;
        catch java.io.IOException from label28 to label29 with label36;
        catch java.io.IOException from label31 to label32 with label36;
        catch java.io.IOException from label33 to label34 with label36;
        catch java.io.IOException from label34 to label35 with label36;
    }

    void writePackageLPr(org.xmlpull.v1.XmlSerializer, com.android.server.pm.PackageSetting) throws java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlSerializer r1;
        com.android.server.pm.PackageSetting r2;
        com.android.server.pm.InstallSource r3;
        java.lang.String $r5, $r7, $r8, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r18, $r20, $r22, $r24, $r26, $r29, $r31, $r32, $r33, $r34, $r52, $r54, $r56, $r59, $r62, $r65, $r67, $r69, $r71, $r73, $r75, $r77;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        int $i0, $i1, $i6, $i7, $i8, $i9;
        long $l2, $l3, $l4, $l5;
        com.android.server.pm.SharedUserSetting $r28;
        long[] $r35;
        java.lang.String[] $r36;
        java.util.ArrayList $r37, $r48;
        com.android.server.pm.PackageSignatures $r38, $r39, $r49;
        com.android.server.pm.permission.PermissionsState $r40;
        java.util.List $r41;
        com.android.server.pm.PackageKeySetData $r42, $r43, $r44;
        android.content.pm.IntentFilterVerificationInfo $r45;
        java.util.Map $r46;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r2 := @parameter1: com.android.server.pm.PackageSetting;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "package");

        $r5 = r2.<com.android.server.pm.PackageSetting: java.lang.String name>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r5);

        $r7 = r2.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        if $r7 == null goto label01;

        $r77 = r2.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "realName", $r77);

     label01:
        $r8 = r2.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "codePath", $r8);

        $r11 = r2.<com.android.server.pm.PackageSetting: java.lang.String resourcePathString>;

        $r10 = r2.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z0 != 0 goto label02;

        $r75 = r2.<com.android.server.pm.PackageSetting: java.lang.String resourcePathString>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "resourcePath", $r75);

     label02:
        $r12 = r2.<com.android.server.pm.PackageSetting: java.lang.String legacyNativeLibraryPathString>;

        if $r12 == null goto label03;

        $r73 = r2.<com.android.server.pm.PackageSetting: java.lang.String legacyNativeLibraryPathString>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "nativeLibraryPath", $r73);

     label03:
        $r13 = r2.<com.android.server.pm.PackageSetting: java.lang.String primaryCpuAbiString>;

        if $r13 == null goto label04;

        $r71 = r2.<com.android.server.pm.PackageSetting: java.lang.String primaryCpuAbiString>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "primaryCpuAbi", $r71);

     label04:
        $r14 = r2.<com.android.server.pm.PackageSetting: java.lang.String secondaryCpuAbiString>;

        if $r14 == null goto label05;

        $r69 = r2.<com.android.server.pm.PackageSetting: java.lang.String secondaryCpuAbiString>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "secondaryCpuAbi", $r69);

     label05:
        $r15 = r2.<com.android.server.pm.PackageSetting: java.lang.String cpuAbiOverrideString>;

        if $r15 == null goto label06;

        $r67 = r2.<com.android.server.pm.PackageSetting: java.lang.String cpuAbiOverrideString>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "cpuAbiOverride", $r67);

     label06:
        $i0 = r2.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $r16 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "publicFlags", $r16);

        $i1 = r2.<com.android.server.pm.PackageSetting: int pkgPrivateFlags>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "privateFlags", $r18);

        $l2 = r2.<com.android.server.pm.PackageSetting: long timeStamp>;

        $r20 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l2);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "ft", $r20);

        $l3 = r2.<com.android.server.pm.PackageSetting: long firstInstallTime>;

        $r22 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l3);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "it", $r22);

        $l4 = r2.<com.android.server.pm.PackageSetting: long lastUpdateTime>;

        $r24 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l4);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "ut", $r24);

        $l5 = r2.<com.android.server.pm.PackageSetting: long versionCode>;

        $r26 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l5);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "version", $r26);

        $r28 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r28 != null goto label07;

        $i9 = r2.<com.android.server.pm.PackageSetting: int appId>;

        $r65 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i9);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "userId", $r65);

        goto label08;

     label07:
        $i6 = r2.<com.android.server.pm.PackageSetting: int appId>;

        $r29 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i6);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "sharedUserId", $r29);

     label08:
        $z1 = r2.<com.android.server.pm.PackageSetting: boolean uidError>;

        if $z1 == 0 goto label09;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "uidError", "true");

     label09:
        r3 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.InstallSource installSource>;

        $r31 = r3.<com.android.server.pm.InstallSource: java.lang.String installerPackageName>;

        if $r31 == null goto label10;

        $r62 = r3.<com.android.server.pm.InstallSource: java.lang.String installerPackageName>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "installer", $r62);

     label10:
        $z2 = r3.<com.android.server.pm.InstallSource: boolean isOrphaned>;

        if $z2 == 0 goto label11;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "isOrphaned", "true");

     label11:
        $r32 = r3.<com.android.server.pm.InstallSource: java.lang.String initiatingPackageName>;

        if $r32 == null goto label12;

        $r59 = r3.<com.android.server.pm.InstallSource: java.lang.String initiatingPackageName>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "installInitiator", $r59);

     label12:
        $z3 = r3.<com.android.server.pm.InstallSource: boolean isInitiatingPackageUninstalled>;

        if $z3 == 0 goto label13;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "installInitiatorUninstalled", "true");

     label13:
        $r33 = r3.<com.android.server.pm.InstallSource: java.lang.String originatingPackageName>;

        if $r33 == null goto label14;

        $r56 = r3.<com.android.server.pm.InstallSource: java.lang.String originatingPackageName>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "installOriginator", $r56);

     label14:
        $r34 = r2.<com.android.server.pm.PackageSetting: java.lang.String volumeUuid>;

        if $r34 == null goto label15;

        $r54 = r2.<com.android.server.pm.PackageSetting: java.lang.String volumeUuid>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "volumeUuid", $r54);

     label15:
        $i7 = r2.<com.android.server.pm.PackageSetting: int categoryHint>;

        if $i7 == -1 goto label16;

        $i8 = r2.<com.android.server.pm.PackageSetting: int categoryHint>;

        $r52 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i8);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "categoryHint", $r52);

     label16:
        $z4 = r2.<com.android.server.pm.PackageSetting: boolean updateAvailable>;

        if $z4 == 0 goto label17;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "updateAvailable", "true");

     label17:
        $z5 = r2.<com.android.server.pm.PackageSetting: boolean forceQueryableOverride>;

        if $z5 == 0 goto label18;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "forceQueryable", "true");

     label18:
        $r36 = r2.<com.android.server.pm.PackageSetting: java.lang.String[] usesStaticLibraries>;

        $r35 = r2.<com.android.server.pm.PackageSetting: long[] usesStaticLibrariesVersions>;

        virtualinvoke r0.<com.android.server.pm.Settings: void writeUsesStaticLibLPw(org.xmlpull.v1.XmlSerializer,java.lang.String[],long[])>(r1, $r36, $r35);

        $r38 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        $r37 = r0.<com.android.server.pm.Settings: java.util.ArrayList mPastSignatures>;

        virtualinvoke $r38.<com.android.server.pm.PackageSignatures: void writeXml(org.xmlpull.v1.XmlSerializer,java.lang.String,java.util.ArrayList)>(r1, "sigs", $r37);

        $r39 = r3.<com.android.server.pm.InstallSource: com.android.server.pm.PackageSignatures initiatingPackageSignatures>;

        if $r39 == null goto label19;

        $r49 = r3.<com.android.server.pm.InstallSource: com.android.server.pm.PackageSignatures initiatingPackageSignatures>;

        $r48 = r0.<com.android.server.pm.Settings: java.util.ArrayList mPastSignatures>;

        virtualinvoke $r49.<com.android.server.pm.PackageSignatures: void writeXml(org.xmlpull.v1.XmlSerializer,java.lang.String,java.util.ArrayList)>(r1, "install-initiator-sigs", $r48);

     label19:
        $r40 = virtualinvoke r2.<com.android.server.pm.PackageSetting: com.android.server.pm.permission.PermissionsState getPermissionsState()>();

        $r41 = virtualinvoke $r40.<com.android.server.pm.permission.PermissionsState: java.util.List getInstallPermissionStates()>();

        virtualinvoke r0.<com.android.server.pm.Settings: void writePermissionsLPr(org.xmlpull.v1.XmlSerializer,java.util.List)>(r1, $r41);

        $r42 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageKeySetData keySetData>;

        virtualinvoke r0.<com.android.server.pm.Settings: void writeSigningKeySetLPr(org.xmlpull.v1.XmlSerializer,com.android.server.pm.PackageKeySetData)>(r1, $r42);

        $r43 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageKeySetData keySetData>;

        virtualinvoke r0.<com.android.server.pm.Settings: void writeUpgradeKeySetsLPr(org.xmlpull.v1.XmlSerializer,com.android.server.pm.PackageKeySetData)>(r1, $r43);

        $r44 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageKeySetData keySetData>;

        virtualinvoke r0.<com.android.server.pm.Settings: void writeKeySetAliasesLPr(org.xmlpull.v1.XmlSerializer,com.android.server.pm.PackageKeySetData)>(r1, $r44);

        $r45 = r2.<com.android.server.pm.PackageSetting: android.content.pm.IntentFilterVerificationInfo verificationInfo>;

        virtualinvoke r0.<com.android.server.pm.Settings: void writeDomainVerificationsLPr(org.xmlpull.v1.XmlSerializer,android.content.pm.IntentFilterVerificationInfo)>(r1, $r45);

        $r46 = r2.<com.android.server.pm.PackageSetting: java.util.Map mimeGroups>;

        specialinvoke r0.<com.android.server.pm.Settings: void writeMimeGroupLPr(org.xmlpull.v1.XmlSerializer,java.util.Map)>(r1, $r46);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "package");

        return;
    }

    void writePackageListLPr()
    {
        com.android.server.pm.Settings r0;

        r0 := @this: com.android.server.pm.Settings;

        virtualinvoke r0.<com.android.server.pm.Settings: void writePackageListLPr(int)>(-1);

        return;
    }

    void writePackageListLPr(int)
    {
        com.android.server.pm.Settings r0;
        int i0;
        java.io.File $r2, $r6;
        java.lang.String $r3, $r7, $r9, r11;
        boolean $z0;
        java.lang.StringBuilder $r4;
        java.lang.Throwable $r10;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.pm.Settings: java.io.File mPackageListFilename>;

        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String getAbsolutePath()>();

        r11 = staticinvoke <android.os.SELinux: java.lang.String fileSelabelLookup(java.lang.String)>($r3);

        if r11 != null goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to get SELinux context for ");

        $r6 = r0.<com.android.server.pm.Settings: java.io.File mPackageListFilename>;

        $r7 = virtualinvoke $r6.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("PackageSettings", $r9);

     label1:
        $z0 = staticinvoke <android.os.SELinux: boolean setFSCreateContext(java.lang.String)>(r11);

        if $z0 != 0 goto label2;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("PackageSettings", "Failed to set packages.list SELinux context");

     label2:
        specialinvoke r0.<com.android.server.pm.Settings: void writePackageListLPrInternal(int)>(i0);

     label3:
        staticinvoke <android.os.SELinux: boolean setFSCreateContext(java.lang.String)>(null);

        return;

     label4:
        $r10 := @caughtexception;

        staticinvoke <android.os.SELinux: boolean setFSCreateContext(java.lang.String)>(null);

        throw $r10;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    void writePackageRestrictionsLPr(int)
    {
        com.android.server.pm.Settings r0;
        int i0, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i24, i25;
        long l1, $l3, $l4, $l5, $l19;
        java.io.FileOutputStream r1;
        java.io.BufferedOutputStream r2;
        com.android.internal.util.FastXmlSerializer r3;
        java.util.Iterator r4, r95, r97;
        java.io.File $r5, $r66, r73, r74, r77, r92, r100;
        java.lang.String $r6, $r9, $r12, $r15, $r17, $r43, $r45, $r47, $r49, $r51, $r52, $r57, $r68, $r76, r93, r96, r98;
        boolean $z1, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z16, $z17, $z18, z19, z20, $z21;
        java.lang.Object $r13, $r24, $r31, $r37, $r41;
        byte $b6;
        android.util.ArraySet $r18, $r19, $r22, $r29;
        android.util.ArrayMap $r35, $r36, $r40, $r83;
        java.lang.Throwable $r63, $r69, $r70, $r71, $r72, r99;
        java.lang.StringBuilder $r64, r101;
        java.nio.charset.Charset r75;
        java.lang.Boolean $r79;
        java.util.Collection $r84;
        com.android.server.pm.PackageSetting r87;
        android.content.pm.PackageUserState r89;
        android.content.pm.PackageUserState$SuspendParams r94;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        staticinvoke <com.android.server.pm.Settings: void invalidatePackageCache()>();

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r73 = specialinvoke r0.<com.android.server.pm.Settings: java.io.File getUserPackagesStateFile(int)>(i0);

        r74 = specialinvoke r0.<com.android.server.pm.Settings: java.io.File getUserPackagesStateBackupFile(int)>(i0);

        $r5 = new java.io.File;

        $r6 = virtualinvoke r73.<java.io.File: java.lang.String getParent()>();

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>($r6);

        virtualinvoke $r5.<java.io.File: boolean mkdirs()>();

        $z1 = virtualinvoke r73.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label02;

        $z14 = virtualinvoke r74.<java.io.File: boolean exists()>();

        if $z14 != 0 goto label01;

        $z16 = virtualinvoke r73.<java.io.File: boolean renameTo(java.io.File)>(r74);

        if $z16 != 0 goto label02;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("PackageManager", "Unable to backup user packages state file, current changes will be lost at reboot");

        return;

     label01:
        virtualinvoke r73.<java.io.File: boolean delete()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "Preserving older stopped packages backup");

     label02:
        r1 = new java.io.FileOutputStream;

        specialinvoke r1.<java.io.FileOutputStream: void <init>(java.io.File)>(r73);

        r2 = new java.io.BufferedOutputStream;

        specialinvoke r2.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(r1);

        r3 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke r3.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        r75 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

     label03:
        $r76 = virtualinvoke r75.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r2, $r76);

     label04:
        r77 = r73;

     label05:
        $r79 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r79);

     label06:
        r77 = r73;

     label07:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

     label08:
        r77 = r73;

     label09:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "package-restrictions");

     label10:
        r77 = r73;

     label11:
        $r83 = r0.<com.android.server.pm.Settings: android.util.ArrayMap mPackages>;

        $r84 = virtualinvoke $r83.<android.util.ArrayMap: java.util.Collection values()>();

        r4 = interfaceinvoke $r84.<java.util.Collection: java.util.Iterator iterator()>();

     label12:
        r77 = r73;

     label13:
        $z18 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z18 == 0 goto label63;

     label14:
        r77 = r73;

     label15:
        $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r87 = (com.android.server.pm.PackageSetting) $r13;

     label16:
        r77 = r73;

     label17:
        r89 = virtualinvoke r87.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>(i0);

     label18:
        r77 = r73;

     label19:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "pkg");

     label20:
        r77 = r73;

     label21:
        $r15 = r87.<com.android.server.pm.PackageSetting: java.lang.String name>;

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r15);

     label22:
        r92 = r73;

     label23:
        $l5 = r89.<android.content.pm.PackageUserState: long ceDataInode>;

        $b6 = $l5 cmp 0L;

        if $b6 == 0 goto label26;

     label24:
        $l19 = r89.<android.content.pm.PackageUserState: long ceDataInode>;

        staticinvoke <com.android.internal.util.XmlUtils: void writeLongAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,long)>(r3, "ceDataInode", $l19);

     label25:
        goto label26;

     label26:
        $z4 = r89.<android.content.pm.PackageUserState: boolean installed>;

        if $z4 != 0 goto label27;

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "inst", "false");

     label27:
        z19 = r89.<android.content.pm.PackageUserState: boolean stopped>;

     label28:
        if z19 == 0 goto label30;

     label29:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "stopped", "true");

     label30:
        $z5 = r89.<android.content.pm.PackageUserState: boolean notLaunched>;

        if $z5 == 0 goto label31;

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "nl", "true");

     label31:
        $z6 = r89.<android.content.pm.PackageUserState: boolean hidden>;

        if $z6 == 0 goto label32;

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "hidden", "true");

     label32:
        $i7 = r89.<android.content.pm.PackageUserState: int distractionFlags>;

        if $i7 == 0 goto label34;

        $i18 = r89.<android.content.pm.PackageUserState: int distractionFlags>;

        $r57 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i18);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "distraction_flags", $r57);

     label33:
        goto label34;

     label34:
        $z7 = r89.<android.content.pm.PackageUserState: boolean suspended>;

        if $z7 == 0 goto label35;

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "suspended", "true");

     label35:
        $z8 = r89.<android.content.pm.PackageUserState: boolean instantApp>;

        if $z8 == 0 goto label36;

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "instant-app", "true");

     label36:
        $z9 = r89.<android.content.pm.PackageUserState: boolean virtualPreload>;

        if $z9 == 0 goto label37;

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "virtual-preload", "true");

     label37:
        $i8 = r89.<android.content.pm.PackageUserState: int enabled>;

        if $i8 == 0 goto label38;

        $i17 = r89.<android.content.pm.PackageUserState: int enabled>;

        $r49 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i17);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "enabled", $r49);

        $r51 = r89.<android.content.pm.PackageUserState: java.lang.String lastDisableAppCaller>;

        if $r51 == null goto label38;

        $r52 = r89.<android.content.pm.PackageUserState: java.lang.String lastDisableAppCaller>;

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "enabledCaller", $r52);

     label38:
        $i24 = r89.<android.content.pm.PackageUserState: int domainVerificationStatus>;

        if $i24 == 0 goto label39;

        $i16 = r89.<android.content.pm.PackageUserState: int domainVerificationStatus>;

        staticinvoke <com.android.internal.util.XmlUtils: void writeIntAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,int)>(r3, "domainVerificationStatus", $i16);

     label39:
        $i9 = r89.<android.content.pm.PackageUserState: int appLinkGeneration>;

        if $i9 == 0 goto label40;

        $i15 = r89.<android.content.pm.PackageUserState: int appLinkGeneration>;

        staticinvoke <com.android.internal.util.XmlUtils: void writeIntAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,int)>(r3, "app-link-generation", $i15);

     label40:
        $i10 = r89.<android.content.pm.PackageUserState: int installReason>;

        if $i10 == 0 goto label41;

        $i14 = r89.<android.content.pm.PackageUserState: int installReason>;

        $r47 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i14);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "install-reason", $r47);

     label41:
        $i11 = r89.<android.content.pm.PackageUserState: int uninstallReason>;

        if $i11 == 0 goto label42;

        $i13 = r89.<android.content.pm.PackageUserState: int uninstallReason>;

        $r45 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i13);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "uninstall-reason", $r45);

     label42:
        $r17 = r89.<android.content.pm.PackageUserState: java.lang.String harmfulAppWarning>;

        if $r17 == null goto label43;

        $r43 = r89.<android.content.pm.PackageUserState: java.lang.String harmfulAppWarning>;

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "harmful-app-warning", $r43);

     label43:
        $z10 = r89.<android.content.pm.PackageUserState: boolean suspended>;

        if $z10 == 0 goto label50;

     label44:
        i25 = 0;

     label45:
        $r35 = r89.<android.content.pm.PackageUserState: android.util.ArrayMap suspendParams>;

        $i12 = virtualinvoke $r35.<android.util.ArrayMap: int size()>();

        if i25 >= $i12 goto label50;

        $r36 = r89.<android.content.pm.PackageUserState: android.util.ArrayMap suspendParams>;

        $r37 = virtualinvoke $r36.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i25);

        r93 = (java.lang.String) $r37;

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "suspend-params");

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "suspending-package", r93);

        $r40 = r89.<android.content.pm.PackageUserState: android.util.ArrayMap suspendParams>;

        $r41 = virtualinvoke $r40.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i25);

        r94 = (android.content.pm.PackageUserState$SuspendParams) $r41;

     label46:
        if r94 == null goto label48;

     label47:
        virtualinvoke r94.<android.content.pm.PackageUserState$SuspendParams: void saveToXml(org.xmlpull.v1.XmlSerializer)>(r3);

     label48:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "suspend-params");

     label49:
        i25 = i25 + 1;

        goto label45;

     label50:
        $r18 = r89.<android.content.pm.PackageUserState: android.util.ArraySet enabledComponents>;

        z20 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.util.Collection)>($r18);

     label51:
        if z20 != 0 goto label56;

     label52:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "enabled-components");

        $r29 = r89.<android.content.pm.PackageUserState: android.util.ArraySet enabledComponents>;

        r95 = virtualinvoke $r29.<android.util.ArraySet: java.util.Iterator iterator()>();

     label53:
        $z13 = interfaceinvoke r95.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label55;

        $r31 = interfaceinvoke r95.<java.util.Iterator: java.lang.Object next()>();

        r96 = (java.lang.String) $r31;

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r96);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

     label54:
        goto label53;

     label55:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "enabled-components");

     label56:
        $r19 = r89.<android.content.pm.PackageUserState: android.util.ArraySet disabledComponents>;

        $z11 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.util.Collection)>($r19);

        if $z11 != 0 goto label60;

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "disabled-components");

        $r22 = r89.<android.content.pm.PackageUserState: android.util.ArraySet disabledComponents>;

        r97 = virtualinvoke $r22.<android.util.ArraySet: java.util.Iterator iterator()>();

     label57:
        $z12 = interfaceinvoke r97.<java.util.Iterator: boolean hasNext()>();

        if $z12 == 0 goto label59;

        $r24 = interfaceinvoke r97.<java.util.Iterator: java.lang.Object next()>();

        r98 = (java.lang.String) $r24;

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r98);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

     label58:
        goto label57;

     label59:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "disabled-components");

     label60:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "pkg");

     label61:
        r73 = r92;

        goto label12;

     label62:
        $r72 := @caughtexception;

        r99 = $r72;

        r100 = r92;

        goto label69;

     label63:
        virtualinvoke r0.<com.android.server.pm.Settings: void writePreferredActivitiesLPr(org.xmlpull.v1.XmlSerializer,int,boolean)>(r3, i0, 1);

        virtualinvoke r0.<com.android.server.pm.Settings: void writePersistentPreferredActivitiesLPr(org.xmlpull.v1.XmlSerializer,int)>(r3, i0);

        virtualinvoke r0.<com.android.server.pm.Settings: void writeCrossProfileIntentFiltersLPr(org.xmlpull.v1.XmlSerializer,int)>(r3, i0);

        virtualinvoke r0.<com.android.server.pm.Settings: void writeDefaultAppsLPr(org.xmlpull.v1.XmlSerializer,int)>(r3, i0);

        virtualinvoke r0.<com.android.server.pm.Settings: void writeBlockUninstallPackagesLPr(org.xmlpull.v1.XmlSerializer,int)>(r3, i0);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "package-restrictions");

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        virtualinvoke r2.<java.io.BufferedOutputStream: void flush()>();

        staticinvoke <android.os.FileUtils: boolean sync(java.io.FileOutputStream)>(r1);

        virtualinvoke r2.<java.io.BufferedOutputStream: void close()>();

        virtualinvoke r74.<java.io.File: boolean delete()>();

        $r9 = virtualinvoke r73.<java.io.File: java.lang.String toString()>();

        staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r9, 432, -1, -1);

        r101 = new java.lang.StringBuilder;

        specialinvoke r101.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("package-user-");

        virtualinvoke r101.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke r101.<java.lang.StringBuilder: java.lang.String toString()>();

        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l4 = $l3 - l1;

        staticinvoke <com.android.internal.logging.EventLogTags: void writeCommitSysConfigFile(java.lang.String,long)>($r12, $l4);

     label64:
        return;

     label65:
        $r71 := @caughtexception;

        r100 = r73;

        r99 = $r71;

        goto label69;

     label66:
        $r63 := @caughtexception;

        r99 = $r63;

        r100 = r77;

        goto label69;

     label67:
        $r70 := @caughtexception;

        r99 = $r70;

        r100 = r73;

        goto label69;

     label68:
        $r69 := @caughtexception;

        r100 = r73;

        r99 = $r69;

     label69:
        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Unable to write package manager user packages state,  current changes will be lost at reboot", r99);

        $z21 = virtualinvoke r100.<java.io.File: boolean exists()>();

        if $z21 == 0 goto label70;

        $z17 = virtualinvoke r100.<java.io.File: boolean delete()>();

        if $z17 != 0 goto label70;

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to clean up mangled file: ");

        $r66 = r0.<com.android.server.pm.Settings: java.io.File mStoppedPackagesFilename>;

        virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r66);

        $r68 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", $r68);

     label70:
        return;

        catch java.io.IOException from label02 to label03 with label68;
        catch java.io.IOException from label03 to label04 with label67;
        catch java.io.IOException from label05 to label06 with label66;
        catch java.io.IOException from label07 to label08 with label66;
        catch java.io.IOException from label09 to label10 with label66;
        catch java.io.IOException from label11 to label12 with label66;
        catch java.io.IOException from label13 to label14 with label66;
        catch java.io.IOException from label15 to label16 with label66;
        catch java.io.IOException from label17 to label18 with label66;
        catch java.io.IOException from label19 to label20 with label66;
        catch java.io.IOException from label21 to label22 with label66;
        catch java.io.IOException from label23 to label24 with label62;
        catch java.io.IOException from label24 to label25 with label65;
        catch java.io.IOException from label26 to label27 with label65;
        catch java.io.IOException from label27 to label28 with label65;
        catch java.io.IOException from label29 to label30 with label65;
        catch java.io.IOException from label30 to label31 with label65;
        catch java.io.IOException from label31 to label32 with label65;
        catch java.io.IOException from label32 to label33 with label65;
        catch java.io.IOException from label34 to label35 with label65;
        catch java.io.IOException from label35 to label36 with label65;
        catch java.io.IOException from label36 to label37 with label65;
        catch java.io.IOException from label37 to label38 with label65;
        catch java.io.IOException from label38 to label39 with label65;
        catch java.io.IOException from label39 to label40 with label65;
        catch java.io.IOException from label40 to label41 with label65;
        catch java.io.IOException from label41 to label42 with label65;
        catch java.io.IOException from label42 to label43 with label65;
        catch java.io.IOException from label43 to label44 with label65;
        catch java.io.IOException from label45 to label46 with label65;
        catch java.io.IOException from label47 to label48 with label65;
        catch java.io.IOException from label48 to label49 with label65;
        catch java.io.IOException from label50 to label51 with label65;
        catch java.io.IOException from label52 to label53 with label65;
        catch java.io.IOException from label53 to label54 with label65;
        catch java.io.IOException from label55 to label56 with label65;
        catch java.io.IOException from label56 to label57 with label65;
        catch java.io.IOException from label57 to label58 with label65;
        catch java.io.IOException from label59 to label60 with label65;
        catch java.io.IOException from label60 to label61 with label65;
        catch java.io.IOException from label63 to label64 with label65;
    }

    void writePermissionLPr(org.xmlpull.v1.XmlSerializer, com.android.server.pm.permission.BasePermission) throws java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlSerializer r1;
        com.android.server.pm.permission.BasePermission r2;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r2 := @parameter1: com.android.server.pm.permission.BasePermission;

        virtualinvoke r2.<com.android.server.pm.permission.BasePermission: void writeLPr(org.xmlpull.v1.XmlSerializer)>(r1);

        return;
    }

    void writePermissionsLPr(org.xmlpull.v1.XmlSerializer, java.util.List) throws java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlSerializer r1;
        com.android.server.pm.permission.PermissionsState$PermissionState r2;
        boolean $z0, $z1, $z2;
        java.lang.Object $r5;
        java.lang.String $r7, $r9, $r11;
        int $i0;
        java.util.List r14;
        java.util.Iterator r15;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r14 := @parameter1: java.util.List;

        $z0 = interfaceinvoke r14.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "perms");

        r15 = interfaceinvoke r14.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r5 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.server.pm.permission.PermissionsState$PermissionState) $r5;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        $r7 = virtualinvoke r2.<com.android.server.pm.permission.PermissionsState$PermissionState: java.lang.String getName()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r7);

        $z2 = virtualinvoke r2.<com.android.server.pm.permission.PermissionsState$PermissionState: boolean isGranted()>();

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z2);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "granted", $r9);

        $i0 = virtualinvoke r2.<com.android.server.pm.permission.PermissionsState$PermissionState: int getFlags()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "flags", $r11);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

        goto label2;

     label3:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "perms");

        return;
    }

    void writePersistentPreferredActivitiesLPr(org.xmlpull.v1.XmlSerializer, int) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlSerializer r1;
        int i0;
        java.util.Iterator r2;
        android.util.SparseArray $r4;
        java.lang.Object $r5, $r8;
        java.util.Set $r7;
        boolean $z0;
        com.android.server.pm.PersistentPreferredIntentResolver r11;
        com.android.server.pm.PersistentPreferredActivity r12;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        i0 := @parameter1: int;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "persistent-preferred-activities");

        $r4 = r0.<com.android.server.pm.Settings: android.util.SparseArray mPersistentPreferredActivities>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r11 = (com.android.server.pm.PersistentPreferredIntentResolver) $r5;

        if r11 == null goto label2;

        $r7 = virtualinvoke r11.<com.android.server.pm.PersistentPreferredIntentResolver: java.util.Set filterSet()>();

        r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r12 = (com.android.server.pm.PersistentPreferredActivity) $r8;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        virtualinvoke r12.<com.android.server.pm.PersistentPreferredActivity: void writeToXml(org.xmlpull.v1.XmlSerializer)>(r1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

        goto label1;

     label2:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "persistent-preferred-activities");

        return;
    }

    void writePreferredActivitiesLPr(org.xmlpull.v1.XmlSerializer, int, boolean) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlSerializer r1;
        int i0;
        boolean z0, $z1;
        java.util.Iterator r2;
        android.util.SparseArray $r4;
        java.lang.Object $r5, $r8;
        java.util.Set $r7;
        com.android.server.pm.PreferredIntentResolver r11;
        com.android.server.pm.PreferredActivity r12;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "preferred-activities");

        $r4 = r0.<com.android.server.pm.Settings: android.util.SparseArray mPreferredActivities>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r11 = (com.android.server.pm.PreferredIntentResolver) $r5;

        if r11 == null goto label2;

        $r7 = virtualinvoke r11.<com.android.server.pm.PreferredIntentResolver: java.util.Set filterSet()>();

        r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r12 = (com.android.server.pm.PreferredActivity) $r8;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        virtualinvoke r12.<com.android.server.pm.PreferredActivity: void writeToXml(org.xmlpull.v1.XmlSerializer,boolean)>(r1, z0);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

        goto label1;

     label2:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "preferred-activities");

        return;
    }

    public void writeRuntimePermissionsForUserLPr(int, boolean)
    {
        com.android.server.pm.Settings r0;
        int i0;
        boolean z0;
        com.android.server.pm.Settings$RuntimePermissionPersistence $r1, $r2;

        r0 := @this: com.android.server.pm.Settings;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r2 = r0.<com.android.server.pm.Settings: com.android.server.pm.Settings$RuntimePermissionPersistence mRuntimePermissionsPersistence>;

        virtualinvoke $r2.<com.android.server.pm.Settings$RuntimePermissionPersistence: void writePermissionsForUserSyncLPr(int)>(i0);

        goto label2;

     label1:
        $r1 = r0.<com.android.server.pm.Settings: com.android.server.pm.Settings$RuntimePermissionPersistence mRuntimePermissionsPersistence>;

        virtualinvoke $r1.<com.android.server.pm.Settings$RuntimePermissionPersistence: void writePermissionsForUserAsyncLPr(int)>(i0);

     label2:
        return;
    }

    void writeSigningKeySetLPr(org.xmlpull.v1.XmlSerializer, com.android.server.pm.PackageKeySetData) throws java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlSerializer r1;
        com.android.server.pm.PackageKeySetData r2;
        long $l0;
        java.lang.String $r4;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r2 := @parameter1: com.android.server.pm.PackageKeySetData;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "proper-signing-keyset");

        $l0 = virtualinvoke r2.<com.android.server.pm.PackageKeySetData: long getProperSigningKeySet()>();

        $r4 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "identifier", $r4);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "proper-signing-keyset");

        return;
    }

    void writeUpgradeKeySetsLPr(org.xmlpull.v1.XmlSerializer, com.android.server.pm.PackageKeySetData) throws java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlSerializer r1;
        int i0, i2;
        long l1;
        boolean $z0;
        java.lang.String $r3;
        com.android.server.pm.PackageKeySetData r6;
        long[] r7;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r6 := @parameter1: com.android.server.pm.PackageKeySetData;

        $z0 = virtualinvoke r6.<com.android.server.pm.PackageKeySetData: boolean isUsingUpgradeKeySets()>();

        if $z0 == 0 goto label2;

        r7 = virtualinvoke r6.<com.android.server.pm.PackageKeySetData: long[] getUpgradeKeySets()>();

        i0 = lengthof r7;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        l1 = r7[i2];

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "upgrade-keyset");

        $r3 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "identifier", $r3);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "upgrade-keyset");

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    void writeUserRestrictionsLPw(com.android.server.pm.PackageSetting, com.android.server.pm.PackageSetting)
    {
        com.android.server.pm.Settings r0;
        com.android.server.pm.PackageSetting r1, r2, $r6;
        java.util.Iterator r3;
        android.content.pm.UserInfo r4;
        java.lang.String $r5;
        com.android.server.pm.UserManagerService $r7;
        boolean $z0, $z1;
        java.lang.Object $r8;
        int $i0, $i1, $i2;
        android.content.pm.PackageUserState $r9, r11;
        java.util.List r10;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: com.android.server.pm.PackageSetting;

        r2 := @parameter1: com.android.server.pm.PackageSetting;

        $r5 = r1.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r6 = virtualinvoke r0.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting getPackageLPr(java.lang.String)>($r5);

        if $r6 != null goto label1;

        return;

     label1:
        $r7 = staticinvoke <com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService getInstance()>();

        r10 = staticinvoke <com.android.server.pm.Settings: java.util.List getAllUsers(com.android.server.pm.UserManagerService)>($r7);

        if r10 != null goto label2;

        return;

     label2:
        r3 = interfaceinvoke r10.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.content.pm.UserInfo) $r8;

        if r2 != null goto label4;

        r11 = <com.android.server.pm.PackageSettingBase: android.content.pm.PackageUserState DEFAULT_USER_STATE>;

        goto label5;

     label4:
        $i0 = r4.<android.content.pm.UserInfo: int id>;

        r11 = virtualinvoke r2.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>($i0);

     label5:
        $i1 = r4.<android.content.pm.UserInfo: int id>;

        $r9 = virtualinvoke r1.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>($i1);

        $z1 = virtualinvoke r11.<android.content.pm.PackageUserState: boolean equals(java.lang.Object)>($r9);

        if $z1 != 0 goto label6;

        $i2 = r4.<android.content.pm.UserInfo: int id>;

        virtualinvoke r0.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>($i2);

     label6:
        goto label3;

     label7:
        return;
    }

    void writeUsesStaticLibLPw(org.xmlpull.v1.XmlSerializer, java.lang.String[], long[]) throws java.io.IOException
    {
        com.android.server.pm.Settings r0;
        org.xmlpull.v1.XmlSerializer r1;
        java.lang.String[] r2;
        long[] r3;
        int i0, $i2, $i3, i4;
        java.lang.String r4, $r7;
        long l1;
        boolean $z0, $z1;

        r0 := @this: com.android.server.pm.Settings;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: long[];

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r2);

        if $z0 != 0 goto label4;

        $z1 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(long[])>(r3);

        if $z1 != 0 goto label4;

        $i3 = lengthof r2;

        $i2 = lengthof r3;

        if $i3 == $i2 goto label1;

        goto label4;

     label1:
        i0 = lengthof r2;

        i4 = 0;

     label2:
        if i4 >= i0 goto label3;

        r4 = r2[i4];

        l1 = r3[i4];

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "uses-static-lib");

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r4);

        $r7 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "version", $r7);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "uses-static-lib");

        i4 = i4 + 1;

        goto label2;

     label3:
        return;

     label4:
        return;
    }
}
