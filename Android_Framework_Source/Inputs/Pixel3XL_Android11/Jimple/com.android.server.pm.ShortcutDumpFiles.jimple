public class com.android.server.pm.ShortcutDumpFiles extends java.lang.Object
{
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    private final com.android.server.pm.ShortcutService mService;

    public void <init>(com.android.server.pm.ShortcutService)
    {
        com.android.server.pm.ShortcutDumpFiles r0;
        com.android.server.pm.ShortcutService r1;

        r0 := @this: com.android.server.pm.ShortcutDumpFiles;

        r1 := @parameter0: com.android.server.pm.ShortcutService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.pm.ShortcutDumpFiles: com.android.server.pm.ShortcutService mService> = r1;

        return;
    }

    static boolean lambda$dumpAll$1(java.io.File)
    {
        java.io.File r0;
        boolean $z0;

        r0 := @parameter0: java.io.File;

        $z0 = virtualinvoke r0.<java.io.File: boolean isFile()>();

        return $z0;
    }

    static java.lang.String lambda$dumpAll$2(java.io.File)
    {
        java.io.File r0;
        java.lang.String $r1;

        r0 := @parameter0: java.io.File;

        $r1 = virtualinvoke r0.<java.io.File: java.lang.String getName()>();

        return $r1;
    }

    static void lambda$save$0(byte[], java.io.PrintWriter)
    {
        byte[] r0;
        java.io.PrintWriter r1;
        java.nio.charset.Charset $r2;
        java.nio.ByteBuffer $r3;
        java.nio.CharBuffer $r4;
        java.lang.String $r5;

        r0 := @parameter0: byte[];

        r1 := @parameter1: java.io.PrintWriter;

        $r2 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r0);

        $r4 = virtualinvoke $r2.<java.nio.charset.Charset: java.nio.CharBuffer decode(java.nio.ByteBuffer)>($r3);

        $r5 = virtualinvoke $r4.<java.nio.CharBuffer: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        return;
    }

    public void dumpAll(java.io.PrintWriter)
    {
        com.android.server.pm.ShortcutDumpFiles r0;
        java.io.File[] r1;
        int i0, i3;
        java.io.File r2, r14;
        com.android.server.pm.ShortcutService $r4;
        com.android.server.pm.'-$$Lambda$ShortcutDumpFiles$v6wMz6MRa9pgSnEDM_9bjvrLaKY' $r5;
        boolean $z0, $z1;
        com.android.server.pm.'-$$Lambda$ShortcutDumpFiles$stGgHzhh-NVWPgDSwmH2ybAWRE8' $r6;
        java.util.Comparator $r7;
        java.lang.String $r8, $r9, r17;
        long $l1;
        java.lang.Throwable $r10, $r11, $r12;
        java.io.PrintWriter r13;
        java.io.FileInputStream r21;
        java.io.InputStreamReader r22;
        java.io.BufferedReader r23;
        java.io.FileFilter r24;
        java.util.function.Function r25;

        r0 := @this: com.android.server.pm.ShortcutDumpFiles;

        r13 := @parameter0: java.io.PrintWriter;

     label01:
        $r4 = r0.<com.android.server.pm.ShortcutDumpFiles: com.android.server.pm.ShortcutService mService>;

        r14 = virtualinvoke $r4.<com.android.server.pm.ShortcutService: java.io.File getDumpPath()>();

        $r5 = <com.android.server.pm._$$Lambda$ShortcutDumpFiles$v6wMz6MRa9pgSnEDM_9bjvrLaKY: com.android.server.pm.'-$$Lambda$ShortcutDumpFiles$v6wMz6MRa9pgSnEDM_9bjvrLaKY' INSTANCE>;

        r24 = (java.io.FileFilter) $r5;

        r1 = virtualinvoke r14.<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>(r24);

        $z0 = virtualinvoke r14.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label20;

        $z1 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r1);

        if $z1 == 0 goto label03;

     label02:
        goto label20;

     label03:
        $r6 = <com.android.server.pm._$$Lambda$ShortcutDumpFiles$stGgHzhh_NVWPgDSwmH2ybAWRE8: com.android.server.pm.'-$$Lambda$ShortcutDumpFiles$stGgHzhh-NVWPgDSwmH2ybAWRE8' INSTANCE>;

        r25 = (java.util.function.Function) $r6;

        $r7 = staticinvoke <java.util.Comparator: java.util.Comparator comparing(java.util.function.Function)>(r25);

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(r1, $r7);

        i0 = lengthof r1;

     label04:
        i3 = 0;

     label05:
        if i3 >= i0 goto label19;

        r2 = r1[i3];

     label06:
        virtualinvoke r13.<java.io.PrintWriter: void print(java.lang.String)>("*** Dumping: ");

        $r8 = virtualinvoke r2.<java.io.File: java.lang.String getName()>();

        virtualinvoke r13.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        virtualinvoke r13.<java.io.PrintWriter: void print(java.lang.String)>("mtime: ");

        $l1 = virtualinvoke r2.<java.io.File: long lastModified()>();

        $r9 = staticinvoke <com.android.server.pm.ShortcutService: java.lang.String formatTime(long)>($l1);

        virtualinvoke r13.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        r23 = new java.io.BufferedReader;

        r22 = new java.io.InputStreamReader;

        r21 = new java.io.FileInputStream;

        specialinvoke r21.<java.io.FileInputStream: void <init>(java.io.File)>(r2);

        specialinvoke r22.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r21);

        specialinvoke r23.<java.io.BufferedReader: void <init>(java.io.Reader)>(r22);

     label07:
        r17 = virtualinvoke r23.<java.io.BufferedReader: java.lang.String readLine()>();

     label08:
        if r17 == null goto label11;

     label09:
        virtualinvoke r13.<java.io.PrintWriter: void println(java.lang.String)>(r17);

     label10:
        goto label07;

     label11:
        virtualinvoke r23.<java.io.BufferedReader: void close()>();

     label12:
        i3 = i3 + 1;

        goto label05;

     label13:
        $r11 := @caughtexception;

     label14:
        virtualinvoke r23.<java.io.BufferedReader: void close()>();

     label15:
        goto label18;

     label16:
        $r12 := @caughtexception;

     label17:
        virtualinvoke $r11.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r12);

     label18:
        throw $r11;

     label19:
        goto label23;

     label20:
        virtualinvoke r13.<java.io.PrintWriter: void print(java.lang.String)>("  No dump files found.");

     label21:
        return;

     label22:
        $r10 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ShortcutService", "Failed to print dump files", $r10);

     label23:
        return;

        catch java.lang.RuntimeException from label01 to label02 with label22;
        catch java.io.IOException from label01 to label02 with label22;
        catch java.lang.RuntimeException from label03 to label04 with label22;
        catch java.io.IOException from label03 to label04 with label22;
        catch java.lang.RuntimeException from label06 to label07 with label22;
        catch java.io.IOException from label06 to label07 with label22;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.RuntimeException from label11 to label12 with label22;
        catch java.io.IOException from label11 to label12 with label22;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.RuntimeException from label17 to label18 with label22;
        catch java.io.IOException from label17 to label18 with label22;
        catch java.lang.RuntimeException from label18 to label19 with label22;
        catch java.io.IOException from label18 to label19 with label22;
        catch java.lang.RuntimeException from label20 to label21 with label22;
        catch java.io.IOException from label20 to label21 with label22;
    }

    public boolean save(java.lang.String, java.util.function.Consumer)
    {
        com.android.server.pm.ShortcutDumpFiles r0;
        java.lang.String r1, $r8, $r14;
        java.io.File r2, r17;
        java.io.BufferedOutputStream r3;
        java.io.FileOutputStream r4;
        com.android.server.pm.ShortcutService $r5;
        boolean $z1;
        java.lang.Throwable $r9, $r10, $r15;
        java.lang.StringBuilder $r11, r18;
        java.util.function.Consumer r16;
        java.io.PrintWriter r19;

        r0 := @this: com.android.server.pm.ShortcutDumpFiles;

        r1 := @parameter0: java.lang.String;

        r16 := @parameter1: java.util.function.Consumer;

     label01:
        $r5 = r0.<com.android.server.pm.ShortcutDumpFiles: com.android.server.pm.ShortcutService mService>;

        r17 = virtualinvoke $r5.<com.android.server.pm.ShortcutService: java.io.File getDumpPath()>();

        virtualinvoke r17.<java.io.File: boolean mkdirs()>();

        $z1 = virtualinvoke r17.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label03;

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create directory: ");

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);

        $r8 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ShortcutService", $r8);

     label02:
        return 0;

     label03:
        r2 = new java.io.File;

        specialinvoke r2.<java.io.File: void <init>(java.io.File,java.lang.String)>(r17, r1);

        r19 = new java.io.PrintWriter;

        r3 = new java.io.BufferedOutputStream;

        r4 = new java.io.FileOutputStream;

        specialinvoke r4.<java.io.FileOutputStream: void <init>(java.io.File)>(r2);

        specialinvoke r3.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(r4);

        specialinvoke r19.<java.io.PrintWriter: void <init>(java.io.OutputStream)>(r3);

     label04:
        interfaceinvoke r16.<java.util.function.Consumer: void accept(java.lang.Object)>(r19);

     label05:
        virtualinvoke r19.<java.io.PrintWriter: void close()>();

     label06:
        return 1;

     label07:
        $r15 := @caughtexception;

     label08:
        virtualinvoke r19.<java.io.PrintWriter: void close()>();

     label09:
        goto label12;

     label10:
        $r9 := @caughtexception;

     label11:
        virtualinvoke $r15.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r9);

     label12:
        throw $r15;

     label13:
        $r10 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create dump file: ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ShortcutService", $r14, $r10);

        return 0;

        catch java.lang.RuntimeException from label01 to label02 with label13;
        catch java.io.IOException from label01 to label02 with label13;
        catch java.lang.RuntimeException from label03 to label04 with label13;
        catch java.io.IOException from label03 to label04 with label13;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.RuntimeException from label05 to label06 with label13;
        catch java.io.IOException from label05 to label06 with label13;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.RuntimeException from label11 to label12 with label13;
        catch java.io.IOException from label11 to label12 with label13;
        catch java.lang.RuntimeException from label12 to label13 with label13;
        catch java.io.IOException from label12 to label13 with label13;
    }

    public boolean save(java.lang.String, byte[])
    {
        com.android.server.pm.ShortcutDumpFiles r0;
        java.lang.String r1;
        byte[] r2;
        com.android.server.pm._$$Lambda$ShortcutDumpFiles$rwmVVp6PnQCcurF7D6VzrdNqEdk $r3;
        boolean $z0;

        r0 := @this: com.android.server.pm.ShortcutDumpFiles;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        $r3 = new com.android.server.pm._$$Lambda$ShortcutDumpFiles$rwmVVp6PnQCcurF7D6VzrdNqEdk;

        specialinvoke $r3.<com.android.server.pm._$$Lambda$ShortcutDumpFiles$rwmVVp6PnQCcurF7D6VzrdNqEdk: void <init>(byte[])>(r2);

        $z0 = virtualinvoke r0.<com.android.server.pm.ShortcutDumpFiles: boolean save(java.lang.String,java.util.function.Consumer)>(r1, $r3);

        return $z0;
    }

    public static void <clinit>()
    {
        <com.android.server.pm.ShortcutDumpFiles: java.lang.String TAG> = "ShortcutService";

        <com.android.server.pm.ShortcutDumpFiles: boolean DEBUG> = 0;

        return;
    }
}
