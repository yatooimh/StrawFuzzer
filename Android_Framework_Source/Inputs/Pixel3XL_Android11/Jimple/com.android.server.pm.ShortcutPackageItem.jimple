abstract class com.android.server.pm.ShortcutPackageItem extends java.lang.Object
{
    private static final java.lang.String KEY_NAME;
    private static final java.lang.String TAG;
    private final com.android.server.pm.ShortcutPackageInfo mPackageInfo;
    private final java.lang.String mPackageName;
    private final int mPackageUserId;
    protected com.android.server.pm.ShortcutUser mShortcutUser;

    protected void <init>(com.android.server.pm.ShortcutUser, int, java.lang.String, com.android.server.pm.ShortcutPackageInfo)
    {
        com.android.server.pm.ShortcutPackageItem r0;
        com.android.server.pm.ShortcutUser r1;
        int i0;
        java.lang.String r2, $r5;
        com.android.server.pm.ShortcutPackageInfo r3, $r7;
        java.lang.CharSequence $r4;

        r0 := @this: com.android.server.pm.ShortcutPackageItem;

        r1 := @parameter0: com.android.server.pm.ShortcutUser;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: com.android.server.pm.ShortcutPackageInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.pm.ShortcutPackageItem: com.android.server.pm.ShortcutUser mShortcutUser> = r1;

        r0.<com.android.server.pm.ShortcutPackageItem: int mPackageUserId> = i0;

        $r4 = staticinvoke <com.android.internal.util.Preconditions: java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence)>(r2);

        $r5 = (java.lang.String) $r4;

        r0.<com.android.server.pm.ShortcutPackageItem: java.lang.String mPackageName> = $r5;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r3);

        $r7 = (com.android.server.pm.ShortcutPackageInfo) r3;

        r0.<com.android.server.pm.ShortcutPackageItem: com.android.server.pm.ShortcutPackageInfo mPackageInfo> = $r7;

        return;
    }

    public void attemptToRestoreIfNeededAndSave()
    {
        com.android.server.pm.ShortcutPackageItem r0;
        com.android.server.pm.ShortcutService r1;
        com.android.server.pm.ShortcutPackageInfo $r2, $r5, $r7, $r8;
        boolean $z0, $z1, $z2, $z3;
        com.android.server.pm.ShortcutUser $r3;
        int $i0, $i1, $i3, $i4, i5;
        java.lang.String $r4, $r6, $r11, $r16;
        java.lang.StringBuilder $r9;
        android.content.pm.PackageInfo r18;

        r0 := @this: com.android.server.pm.ShortcutPackageItem;

        $r2 = r0.<com.android.server.pm.ShortcutPackageItem: com.android.server.pm.ShortcutPackageInfo mPackageInfo>;

        $z0 = virtualinvoke $r2.<com.android.server.pm.ShortcutPackageInfo: boolean isShadow()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.android.server.pm.ShortcutPackageItem: com.android.server.pm.ShortcutUser mShortcutUser>;

        r1 = $r3.<com.android.server.pm.ShortcutUser: com.android.server.pm.ShortcutService mService>;

        $r4 = r0.<com.android.server.pm.ShortcutPackageItem: java.lang.String mPackageName>;

        $i0 = r0.<com.android.server.pm.ShortcutPackageItem: int mPackageUserId>;

        $z1 = virtualinvoke r1.<com.android.server.pm.ShortcutService: boolean isPackageInstalled(java.lang.String,int)>($r4, $i0);

        if $z1 != 0 goto label2;

        return;

     label2:
        $r5 = r0.<com.android.server.pm.ShortcutPackageItem: com.android.server.pm.ShortcutPackageInfo mPackageInfo>;

        $z2 = virtualinvoke $r5.<com.android.server.pm.ShortcutPackageInfo: boolean hasSignatures()>();

        if $z2 != 0 goto label3;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted to restore package ");

        $r11 = r0.<com.android.server.pm.ShortcutPackageItem: java.lang.String mPackageName>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/u");

        $i4 = r0.<com.android.server.pm.ShortcutPackageItem: int mPackageUserId>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but signatures not found in the restore data.");

        $r16 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.server.pm.ShortcutService: void wtf(java.lang.String)>($r16);

        i5 = 102;

        goto label4;

     label3:
        $r6 = r0.<com.android.server.pm.ShortcutPackageItem: java.lang.String mPackageName>;

        $i1 = r0.<com.android.server.pm.ShortcutPackageItem: int mPackageUserId>;

        r18 = virtualinvoke r1.<com.android.server.pm.ShortcutService: android.content.pm.PackageInfo getPackageInfoWithSignatures(java.lang.String,int)>($r6, $i1);

        virtualinvoke r18.<android.content.pm.PackageInfo: long getLongVersionCode()>();

        $r7 = r0.<com.android.server.pm.ShortcutPackageItem: com.android.server.pm.ShortcutPackageInfo mPackageInfo>;

        $z3 = virtualinvoke r0.<com.android.server.pm.ShortcutPackageItem: boolean canRestoreAnyVersion()>();

        i5 = virtualinvoke $r7.<com.android.server.pm.ShortcutPackageInfo: int canRestoreTo(com.android.server.pm.ShortcutService,android.content.pm.PackageInfo,boolean)>(r1, r18, $z3);

     label4:
        virtualinvoke r0.<com.android.server.pm.ShortcutPackageItem: void onRestored(int)>(i5);

        $r8 = r0.<com.android.server.pm.ShortcutPackageItem: com.android.server.pm.ShortcutPackageInfo mPackageInfo>;

        virtualinvoke $r8.<com.android.server.pm.ShortcutPackageInfo: void setShadow(boolean)>(0);

        $i3 = r0.<com.android.server.pm.ShortcutPackageItem: int mPackageUserId>;

        virtualinvoke r1.<com.android.server.pm.ShortcutService: void scheduleSaveUser(int)>($i3);

        return;
    }

    protected abstract boolean canRestoreAnyVersion();

    public org.json.JSONObject dumpCheckin(boolean) throws org.json.JSONException
    {
        com.android.server.pm.ShortcutPackageItem r0;
        boolean z0;
        org.json.JSONObject $r2;
        java.lang.String $r3;

        r0 := @this: com.android.server.pm.ShortcutPackageItem;

        z0 := @parameter0: boolean;

        $r2 = new org.json.JSONObject;

        specialinvoke $r2.<org.json.JSONObject: void <init>()>();

        $r3 = r0.<com.android.server.pm.ShortcutPackageItem: java.lang.String mPackageName>;

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("name", $r3);

        return $r2;
    }

    public abstract int getOwnerUserId();

    public com.android.server.pm.ShortcutPackageInfo getPackageInfo()
    {
        com.android.server.pm.ShortcutPackageItem r0;
        com.android.server.pm.ShortcutPackageInfo $r1;

        r0 := @this: com.android.server.pm.ShortcutPackageItem;

        $r1 = r0.<com.android.server.pm.ShortcutPackageItem: com.android.server.pm.ShortcutPackageInfo mPackageInfo>;

        return $r1;
    }

    public java.lang.String getPackageName()
    {
        com.android.server.pm.ShortcutPackageItem r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.pm.ShortcutPackageItem;

        $r1 = r0.<com.android.server.pm.ShortcutPackageItem: java.lang.String mPackageName>;

        return $r1;
    }

    public int getPackageUserId()
    {
        com.android.server.pm.ShortcutPackageItem r0;
        int $i0;

        r0 := @this: com.android.server.pm.ShortcutPackageItem;

        $i0 = r0.<com.android.server.pm.ShortcutPackageItem: int mPackageUserId>;

        return $i0;
    }

    public com.android.server.pm.ShortcutUser getUser()
    {
        com.android.server.pm.ShortcutPackageItem r0;
        com.android.server.pm.ShortcutUser $r1;

        r0 := @this: com.android.server.pm.ShortcutPackageItem;

        $r1 = r0.<com.android.server.pm.ShortcutPackageItem: com.android.server.pm.ShortcutUser mShortcutUser>;

        return $r1;
    }

    protected abstract void onRestored(int);

    public void refreshPackageSignatureAndSave()
    {
        com.android.server.pm.ShortcutPackageItem r0;
        com.android.server.pm.ShortcutService r1;
        com.android.server.pm.ShortcutPackageInfo $r2, $r4;
        boolean $z0;
        com.android.server.pm.ShortcutUser $r3;
        int $i0;

        r0 := @this: com.android.server.pm.ShortcutPackageItem;

        $r2 = r0.<com.android.server.pm.ShortcutPackageItem: com.android.server.pm.ShortcutPackageInfo mPackageInfo>;

        $z0 = virtualinvoke $r2.<com.android.server.pm.ShortcutPackageInfo: boolean isShadow()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.android.server.pm.ShortcutPackageItem: com.android.server.pm.ShortcutUser mShortcutUser>;

        r1 = $r3.<com.android.server.pm.ShortcutUser: com.android.server.pm.ShortcutService mService>;

        $r4 = r0.<com.android.server.pm.ShortcutPackageItem: com.android.server.pm.ShortcutPackageInfo mPackageInfo>;

        virtualinvoke $r4.<com.android.server.pm.ShortcutPackageInfo: void refreshSignature(com.android.server.pm.ShortcutService,com.android.server.pm.ShortcutPackageItem)>(r1, r0);

        $i0 = virtualinvoke r0.<com.android.server.pm.ShortcutPackageItem: int getOwnerUserId()>();

        virtualinvoke r1.<com.android.server.pm.ShortcutService: void scheduleSaveUser(int)>($i0);

        return;
    }

    public void replaceUser(com.android.server.pm.ShortcutUser)
    {
        com.android.server.pm.ShortcutPackageItem r0;
        com.android.server.pm.ShortcutUser r1;

        r0 := @this: com.android.server.pm.ShortcutPackageItem;

        r1 := @parameter0: com.android.server.pm.ShortcutUser;

        r0.<com.android.server.pm.ShortcutPackageItem: com.android.server.pm.ShortcutUser mShortcutUser> = r1;

        return;
    }

    public void saveToFile(java.io.File, boolean)
    {
        com.android.server.pm.ShortcutPackageItem r0;
        boolean z0;
        java.io.BufferedOutputStream r2;
        android.util.AtomicFile $r3;
        java.nio.charset.Charset $r4;
        java.lang.String $r5, $r12;
        java.lang.Boolean $r6;
        java.lang.Throwable $r7;
        java.lang.StringBuilder $r8;
        java.io.File $r10, r13;
        java.io.FileOutputStream r14, r15;
        com.android.internal.util.FastXmlSerializer r16;

        r0 := @this: com.android.server.pm.ShortcutPackageItem;

        r13 := @parameter0: java.io.File;

        z0 := @parameter1: boolean;

        $r3 = new android.util.AtomicFile;

        specialinvoke $r3.<android.util.AtomicFile: void <init>(java.io.File)>(r13);

        r14 = null;

     label01:
        r15 = virtualinvoke $r3.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

     label02:
        r14 = r15;

     label03:
        r2 = new java.io.BufferedOutputStream;

     label04:
        r14 = r15;

     label05:
        specialinvoke r2.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(r15);

     label06:
        r14 = r15;

     label07:
        r16 = new com.android.internal.util.FastXmlSerializer;

     label08:
        r14 = r15;

     label09:
        specialinvoke r16.<com.android.internal.util.FastXmlSerializer: void <init>()>();

     label10:
        r14 = r15;

     label11:
        $r4 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r5 = virtualinvoke $r4.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r16.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r2, $r5);

     label12:
        r14 = r15;

     label13:
        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r16.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r6);

     label14:
        r14 = r15;

     label15:
        virtualinvoke r0.<com.android.server.pm.ShortcutPackageItem: void saveToXml(org.xmlpull.v1.XmlSerializer,boolean)>(r16, z0);

     label16:
        r14 = r15;

     label17:
        interfaceinvoke r16.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

     label18:
        r14 = r15;

     label19:
        virtualinvoke r2.<java.io.BufferedOutputStream: void flush()>();

     label20:
        r14 = r15;

     label21:
        virtualinvoke r15.<java.io.FileOutputStream: void flush()>();

     label22:
        r14 = r15;

     label23:
        virtualinvoke $r3.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r15);

     label24:
        goto label26;

     label25:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to write to file ");

        $r10 = virtualinvoke $r3.<android.util.AtomicFile: java.io.File getBaseFile()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ShortcutService", $r12, $r7);

        virtualinvoke $r3.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r14);

     label26:
        return;

        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label25;
        catch java.io.IOException from label01 to label02 with label25;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label25;
        catch java.io.IOException from label03 to label04 with label25;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label06 with label25;
        catch java.io.IOException from label05 to label06 with label25;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label08 with label25;
        catch java.io.IOException from label07 to label08 with label25;
        catch org.xmlpull.v1.XmlPullParserException from label09 to label10 with label25;
        catch java.io.IOException from label09 to label10 with label25;
        catch org.xmlpull.v1.XmlPullParserException from label11 to label12 with label25;
        catch java.io.IOException from label11 to label12 with label25;
        catch org.xmlpull.v1.XmlPullParserException from label13 to label14 with label25;
        catch java.io.IOException from label13 to label14 with label25;
        catch org.xmlpull.v1.XmlPullParserException from label15 to label16 with label25;
        catch java.io.IOException from label15 to label16 with label25;
        catch org.xmlpull.v1.XmlPullParserException from label17 to label18 with label25;
        catch java.io.IOException from label17 to label18 with label25;
        catch org.xmlpull.v1.XmlPullParserException from label19 to label20 with label25;
        catch java.io.IOException from label19 to label20 with label25;
        catch org.xmlpull.v1.XmlPullParserException from label21 to label22 with label25;
        catch java.io.IOException from label21 to label22 with label25;
        catch org.xmlpull.v1.XmlPullParserException from label23 to label24 with label25;
        catch java.io.IOException from label23 to label24 with label25;
    }

    public abstract void saveToXml(org.xmlpull.v1.XmlSerializer, boolean) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException;

    public void verifyStates()
    {
        com.android.server.pm.ShortcutPackageItem r0;

        r0 := @this: com.android.server.pm.ShortcutPackageItem;

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.pm.ShortcutPackageItem: java.lang.String TAG> = "ShortcutService";

        <com.android.server.pm.ShortcutPackageItem: java.lang.String KEY_NAME> = "name";

        return;
    }
}
