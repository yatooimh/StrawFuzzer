class com.android.server.pm.ShortcutService$MyShellCommand extends android.os.ShellCommand
{
    private int mUserId;
    final com.android.server.pm.ShortcutService this$0;

    private void <init>(com.android.server.pm.ShortcutService)
    {
        com.android.server.pm.ShortcutService$MyShellCommand r0;
        com.android.server.pm.ShortcutService r1;

        r0 := @this: com.android.server.pm.ShortcutService$MyShellCommand;

        r1 := @parameter0: com.android.server.pm.ShortcutService;

        r0.<com.android.server.pm.ShortcutService$MyShellCommand: com.android.server.pm.ShortcutService this$0> = r1;

        specialinvoke r0.<android.os.ShellCommand: void <init>()>();

        r0.<com.android.server.pm.ShortcutService$MyShellCommand: int mUserId> = 0;

        return;
    }

    void <init>(com.android.server.pm.ShortcutService, com.android.server.pm.ShortcutService$1)
    {
        com.android.server.pm.ShortcutService$MyShellCommand r0;
        com.android.server.pm.ShortcutService r1;
        com.android.server.pm.ShortcutService$1 r2;

        r0 := @this: com.android.server.pm.ShortcutService$MyShellCommand;

        r1 := @parameter0: com.android.server.pm.ShortcutService;

        r2 := @parameter1: com.android.server.pm.ShortcutService$1;

        specialinvoke r0.<com.android.server.pm.ShortcutService$MyShellCommand: void <init>(com.android.server.pm.ShortcutService)>(r1);

        return;
    }

    private void clearLauncher()
    {
        com.android.server.pm.ShortcutService$MyShellCommand r0;
        java.lang.Object r1;
        com.android.server.pm.ShortcutService $r3, $r4;
        int $i0;
        com.android.server.pm.ShortcutUser $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.pm.ShortcutService$MyShellCommand;

        $r3 = r0.<com.android.server.pm.ShortcutService$MyShellCommand: com.android.server.pm.ShortcutService this$0>;

        r1 = staticinvoke <com.android.server.pm.ShortcutService: java.lang.Object access$200(com.android.server.pm.ShortcutService)>($r3);

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.pm.ShortcutService$MyShellCommand: com.android.server.pm.ShortcutService this$0>;

        $i0 = r0.<com.android.server.pm.ShortcutService$MyShellCommand: int mUserId>;

        $r5 = virtualinvoke $r4.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutUser getUserShortcutsLocked(int)>($i0);

        virtualinvoke $r5.<com.android.server.pm.ShortcutUser: void forceClearLauncher()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void handleClearDefaultLauncher() throws com.android.server.pm.ShortcutService$CommandException
    {
        com.android.server.pm.ShortcutService$MyShellCommand r0;
        java.lang.Object r1;
        com.android.server.pm.ShortcutService $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.pm.ShortcutService$MyShellCommand;

        $r3 = r0.<com.android.server.pm.ShortcutService$MyShellCommand: com.android.server.pm.ShortcutService this$0>;

        r1 = staticinvoke <com.android.server.pm.ShortcutService: java.lang.Object access$200(com.android.server.pm.ShortcutService)>($r3);

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.server.pm.ShortcutService$MyShellCommand: void parseOptionsLocked(boolean)>(1);

        specialinvoke r0.<com.android.server.pm.ShortcutService$MyShellCommand: void clearLauncher()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void handleClearShortcuts() throws com.android.server.pm.ShortcutService$CommandException
    {
        com.android.server.pm.ShortcutService$MyShellCommand r0;
        java.lang.Object r1;
        java.lang.StringBuilder r2;
        com.android.server.pm.ShortcutService $r3, $r9;
        int $i0, $i2;
        java.lang.String $r8, r11;
        java.lang.Throwable $r10;

        r0 := @this: com.android.server.pm.ShortcutService$MyShellCommand;

        $r3 = r0.<com.android.server.pm.ShortcutService$MyShellCommand: com.android.server.pm.ShortcutService this$0>;

        r1 = staticinvoke <com.android.server.pm.ShortcutService: java.lang.Object access$200(com.android.server.pm.ShortcutService)>($r3);

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.server.pm.ShortcutService$MyShellCommand: void parseOptionsLocked(boolean)>(1);

        r11 = virtualinvoke r0.<com.android.server.pm.ShortcutService$MyShellCommand: java.lang.String getNextArgRequired()>();

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cmd: handleClearShortcuts: user");

        $i0 = r0.<com.android.server.pm.ShortcutService$MyShellCommand: int mUserId>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r8 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ShortcutService", $r8);

        $r9 = r0.<com.android.server.pm.ShortcutService$MyShellCommand: com.android.server.pm.ShortcutService this$0>;

        $i2 = r0.<com.android.server.pm.ShortcutService$MyShellCommand: int mUserId>;

        staticinvoke <com.android.server.pm.ShortcutService: void access$2100(com.android.server.pm.ShortcutService,java.lang.String,int,boolean)>($r9, r11, $i2, 1);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r10 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void handleGetDefaultLauncher() throws com.android.server.pm.ShortcutService$CommandException
    {
        com.android.server.pm.ShortcutService$MyShellCommand r0;
        java.lang.Object r1;
        com.android.server.pm.ShortcutService $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.pm.ShortcutService$MyShellCommand;

        $r3 = r0.<com.android.server.pm.ShortcutService$MyShellCommand: com.android.server.pm.ShortcutService this$0>;

        r1 = staticinvoke <com.android.server.pm.ShortcutService: java.lang.Object access$200(com.android.server.pm.ShortcutService)>($r3);

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.server.pm.ShortcutService$MyShellCommand: void parseOptionsLocked(boolean)>(1);

        specialinvoke r0.<com.android.server.pm.ShortcutService$MyShellCommand: void clearLauncher()>();

        specialinvoke r0.<com.android.server.pm.ShortcutService$MyShellCommand: void showLauncher()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void handleOverrideConfig() throws com.android.server.pm.ShortcutService$CommandException
    {
        com.android.server.pm.ShortcutService$MyShellCommand r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4, r8;
        com.android.server.pm.ShortcutService $r5, $r6;
        boolean $z0;
        java.lang.Throwable $r7;
        java.lang.Object r10;
        com.android.server.pm.ShortcutService$CommandException r11;

        r0 := @this: com.android.server.pm.ShortcutService$MyShellCommand;

        r8 = virtualinvoke r0.<com.android.server.pm.ShortcutService$MyShellCommand: java.lang.String getNextArgRequired()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cmd: handleOverrideConfig: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ShortcutService", $r4);

        $r5 = r0.<com.android.server.pm.ShortcutService$MyShellCommand: com.android.server.pm.ShortcutService this$0>;

        r10 = staticinvoke <com.android.server.pm.ShortcutService: java.lang.Object access$200(com.android.server.pm.ShortcutService)>($r5);

        entermonitor r10;

     label1:
        $r6 = r0.<com.android.server.pm.ShortcutService$MyShellCommand: com.android.server.pm.ShortcutService this$0>;

        $z0 = virtualinvoke $r6.<com.android.server.pm.ShortcutService: boolean updateConfigurationLocked(java.lang.String)>(r8);

        if $z0 == 0 goto label3;

        exitmonitor r10;

     label2:
        return;

     label3:
        r11 = new com.android.server.pm.ShortcutService$CommandException;

        specialinvoke r11.<com.android.server.pm.ShortcutService$CommandException: void <init>(java.lang.String)>("override-config failed.  See logcat for details.");

        throw r11;

     label4:
        $r7 := @caughtexception;

     label5:
        exitmonitor r10;

     label6:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private void handleResetAllThrottling()
    {
        com.android.server.pm.ShortcutService$MyShellCommand r0;
        com.android.server.pm.ShortcutService $r1;

        r0 := @this: com.android.server.pm.ShortcutService$MyShellCommand;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ShortcutService", "cmd: handleResetAllThrottling");

        $r1 = r0.<com.android.server.pm.ShortcutService$MyShellCommand: com.android.server.pm.ShortcutService this$0>;

        virtualinvoke $r1.<com.android.server.pm.ShortcutService: void resetAllThrottlingInner()>();

        return;
    }

    private void handleResetConfig()
    {
        com.android.server.pm.ShortcutService$MyShellCommand r0;
        java.lang.Object r1;
        com.android.server.pm.ShortcutService $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.pm.ShortcutService$MyShellCommand;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ShortcutService", "cmd: handleResetConfig");

        $r3 = r0.<com.android.server.pm.ShortcutService$MyShellCommand: com.android.server.pm.ShortcutService this$0>;

        r1 = staticinvoke <com.android.server.pm.ShortcutService: java.lang.Object access$200(com.android.server.pm.ShortcutService)>($r3);

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.pm.ShortcutService$MyShellCommand: com.android.server.pm.ShortcutService this$0>;

        staticinvoke <com.android.server.pm.ShortcutService: void access$2000(com.android.server.pm.ShortcutService)>($r4);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void handleResetThrottling() throws com.android.server.pm.ShortcutService$CommandException
    {
        com.android.server.pm.ShortcutService$MyShellCommand r0;
        java.lang.Object r1;
        com.android.server.pm.ShortcutService $r2, $r6;
        int $i0, $i2;
        java.lang.String $r5;
        java.lang.Throwable $r7;
        java.lang.StringBuilder r8;

        r0 := @this: com.android.server.pm.ShortcutService$MyShellCommand;

        $r2 = r0.<com.android.server.pm.ShortcutService$MyShellCommand: com.android.server.pm.ShortcutService this$0>;

        r1 = staticinvoke <com.android.server.pm.ShortcutService: java.lang.Object access$200(com.android.server.pm.ShortcutService)>($r2);

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.server.pm.ShortcutService$MyShellCommand: void parseOptionsLocked(boolean)>(1);

        r8 = new java.lang.StringBuilder;

        specialinvoke r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cmd: handleResetThrottling: user=");

        $i0 = r0.<com.android.server.pm.ShortcutService$MyShellCommand: int mUserId>;

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ShortcutService", $r5);

        $r6 = r0.<com.android.server.pm.ShortcutService$MyShellCommand: com.android.server.pm.ShortcutService this$0>;

        $i2 = r0.<com.android.server.pm.ShortcutService$MyShellCommand: int mUserId>;

        virtualinvoke $r6.<com.android.server.pm.ShortcutService: void resetThrottlingInner(int)>($i2);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r7 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void handleUnloadUser() throws com.android.server.pm.ShortcutService$CommandException
    {
        com.android.server.pm.ShortcutService$MyShellCommand r0;
        java.lang.Object r1;
        com.android.server.pm.ShortcutService $r2, $r6;
        int $i0, $i2;
        java.lang.String $r5;
        java.lang.Throwable $r7;
        java.lang.StringBuilder r8;

        r0 := @this: com.android.server.pm.ShortcutService$MyShellCommand;

        $r2 = r0.<com.android.server.pm.ShortcutService$MyShellCommand: com.android.server.pm.ShortcutService this$0>;

        r1 = staticinvoke <com.android.server.pm.ShortcutService: java.lang.Object access$200(com.android.server.pm.ShortcutService)>($r2);

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.server.pm.ShortcutService$MyShellCommand: void parseOptionsLocked(boolean)>(1);

        r8 = new java.lang.StringBuilder;

        specialinvoke r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cmd: handleUnloadUser: user=");

        $i0 = r0.<com.android.server.pm.ShortcutService$MyShellCommand: int mUserId>;

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ShortcutService", $r5);

        $r6 = r0.<com.android.server.pm.ShortcutService$MyShellCommand: com.android.server.pm.ShortcutService this$0>;

        $i2 = r0.<com.android.server.pm.ShortcutService$MyShellCommand: int mUserId>;

        virtualinvoke $r6.<com.android.server.pm.ShortcutService: void handleStopUser(int)>($i2);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r7 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void handleVerifyStates() throws com.android.server.pm.ShortcutService$CommandException
    {
        com.android.server.pm.ShortcutService$MyShellCommand r0;
        com.android.server.pm.ShortcutService $r3;
        java.lang.Throwable $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6, $r9, $r12;
        com.android.server.pm.ShortcutService$CommandException $r11;

        r0 := @this: com.android.server.pm.ShortcutService$MyShellCommand;

     label1:
        $r3 = r0.<com.android.server.pm.ShortcutService$MyShellCommand: com.android.server.pm.ShortcutService this$0>;

        staticinvoke <com.android.server.pm.ShortcutService: void access$2200(com.android.server.pm.ShortcutService)>($r3);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.Throwable: java.lang.String getMessage()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r9 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r4);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = new com.android.server.pm.ShortcutService$CommandException;

        $r12 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<com.android.server.pm.ShortcutService$CommandException: void <init>(java.lang.String)>($r12);

        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void parseOptionsLocked(boolean) throws com.android.server.pm.ShortcutService$CommandException
    {
        com.android.server.pm.ShortcutService$MyShellCommand r0;
        boolean z0, $z1, $z2;
        java.lang.String r1, $r6, $r7, $r14;
        int $i0, $i1, i3;
        java.lang.StringBuilder $r2, $r9;
        com.android.server.pm.ShortcutService$CommandException $r5, $r13;
        com.android.server.pm.ShortcutService $r8;
        byte b2;

        r0 := @this: com.android.server.pm.ShortcutService$MyShellCommand;

        z0 := @parameter0: boolean;

     label1:
        r1 = virtualinvoke r0.<com.android.server.pm.ShortcutService$MyShellCommand: java.lang.String getNextOption()>();

        if r1 == null goto label7;

        b2 = -1;

        $i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        if $i0 == 1333469547 goto label3;

     label2:
        goto label4;

     label3:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z1 == 0 goto label2;

        b2 = 0;

     label4:
        if b2 != 0 goto label6;

        if z0 == 0 goto label6;

        $r7 = virtualinvoke r0.<com.android.server.pm.ShortcutService$MyShellCommand: java.lang.String getNextArgRequired()>();

        i3 = staticinvoke <android.os.UserHandle: int parseUserArg(java.lang.String)>($r7);

        r0.<com.android.server.pm.ShortcutService$MyShellCommand: int mUserId> = i3;

        $r8 = r0.<com.android.server.pm.ShortcutService$MyShellCommand: com.android.server.pm.ShortcutService this$0>;

        $z2 = virtualinvoke $r8.<com.android.server.pm.ShortcutService: boolean isUserUnlockedL(int)>(i3);

        if $z2 == 0 goto label5;

        goto label1;

     label5:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User ");

        $i1 = r0.<com.android.server.pm.ShortcutService$MyShellCommand: int mUserId>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not running or locked");

        $r13 = new com.android.server.pm.ShortcutService$CommandException;

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<com.android.server.pm.ShortcutService$CommandException: void <init>(java.lang.String)>($r14);

        throw $r13;

     label6:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown option: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = new com.android.server.pm.ShortcutService$CommandException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<com.android.server.pm.ShortcutService$CommandException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label7:
        return;
    }

    private void showLauncher()
    {
        com.android.server.pm.ShortcutService$MyShellCommand r0;
        java.lang.Object r1;
        java.io.PrintWriter r2;
        com.android.server.pm.ShortcutService $r3, $r4, $r6;
        int $i0, $i1;
        com.android.server.pm.ShortcutUser $r7;
        android.content.ComponentName $r8;
        java.lang.String $r10;
        java.lang.Throwable $r11;
        java.lang.StringBuilder r12;

        r0 := @this: com.android.server.pm.ShortcutService$MyShellCommand;

        $r3 = r0.<com.android.server.pm.ShortcutService$MyShellCommand: com.android.server.pm.ShortcutService this$0>;

        r1 = staticinvoke <com.android.server.pm.ShortcutService: java.lang.Object access$200(com.android.server.pm.ShortcutService)>($r3);

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.pm.ShortcutService$MyShellCommand: com.android.server.pm.ShortcutService this$0>;

        $i0 = r0.<com.android.server.pm.ShortcutService$MyShellCommand: int mUserId>;

        virtualinvoke $r4.<com.android.server.pm.ShortcutService: boolean hasShortcutHostPermissionInner(java.lang.String,int)>("-", $i0);

        r2 = virtualinvoke r0.<com.android.server.pm.ShortcutService$MyShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Launcher: ");

        $r6 = r0.<com.android.server.pm.ShortcutService$MyShellCommand: com.android.server.pm.ShortcutService this$0>;

        $i1 = r0.<com.android.server.pm.ShortcutService$MyShellCommand: int mUserId>;

        $r7 = virtualinvoke $r6.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutUser getUserShortcutsLocked(int)>($i1);

        $r8 = virtualinvoke $r7.<com.android.server.pm.ShortcutUser: android.content.ComponentName getLastKnownLauncher()>();

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r10);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r11 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int onCommand(java.lang.String)
    {
        com.android.server.pm.ShortcutService$MyShellCommand r0;
        java.io.PrintWriter r1;
        int $i0, $i1, i3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        com.android.server.pm.ShortcutService$CommandException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r6, $r8, r9;
        byte b2;

        r0 := @this: com.android.server.pm.ShortcutService$MyShellCommand;

        r9 := @parameter0: java.lang.String;

        if r9 != null goto label01;

        $i1 = virtualinvoke r0.<com.android.server.pm.ShortcutService$MyShellCommand: int handleDefaultCommands(java.lang.String)>(r9);

        return $i1;

     label01:
        r1 = virtualinvoke r0.<com.android.server.pm.ShortcutService$MyShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        b2 = -1;

     label02:
        $i0 = virtualinvoke r9.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1117067818: goto label20;
            case -749565587: goto label18;
            case -139706031: goto label16;
            case -76794781: goto label14;
            case 188791973: goto label12;
            case 237193516: goto label10;
            case 1190495043: goto label08;
            case 1411888601: goto label06;
            case 1964247424: goto label04;
            default: goto label03;
        };

     label03:
        goto label22;

     label04:
        $z0 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("reset-config");

        if $z0 == 0 goto label03;

     label05:
        b2 = 3;

        goto label22;

     label06:
        $z1 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("unload-user");

        if $z1 == 0 goto label03;

     label07:
        b2 = 6;

        goto label22;

     label08:
        $z2 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("get-default-launcher");

        if $z2 == 0 goto label03;

     label09:
        b2 = 5;

        goto label22;

     label10:
        $z3 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("clear-default-launcher");

        if $z3 == 0 goto label03;

     label11:
        b2 = 4;

        goto label22;

     label12:
        $z4 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("reset-throttling");

        if $z4 == 0 goto label03;

     label13:
        b2 = 0;

        goto label22;

     label14:
        $z5 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("override-config");

        if $z5 == 0 goto label03;

     label15:
        b2 = 2;

        goto label22;

     label16:
        $z6 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("reset-all-throttling");

        if $z6 == 0 goto label03;

     label17:
        b2 = 1;

        goto label22;

     label18:
        $z7 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("clear-shortcuts");

        if $z7 == 0 goto label03;

     label19:
        b2 = 7;

        goto label22;

     label20:
        $z8 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("verify-states");

        if $z8 == 0 goto label03;

     label21:
        b2 = 8;

     label22:
        tableswitch(b2)
        {
            case 0: goto label41;
            case 1: goto label39;
            case 2: goto label37;
            case 3: goto label35;
            case 4: goto label33;
            case 5: goto label31;
            case 6: goto label29;
            case 7: goto label27;
            case 8: goto label25;
            default: goto label23;
        };

     label23:
        i3 = virtualinvoke r0.<com.android.server.pm.ShortcutService$MyShellCommand: int handleDefaultCommands(java.lang.String)>(r9);

     label24:
        goto label43;

     label25:
        specialinvoke r0.<com.android.server.pm.ShortcutService$MyShellCommand: void handleVerifyStates()>();

     label26:
        goto label42;

     label27:
        specialinvoke r0.<com.android.server.pm.ShortcutService$MyShellCommand: void handleClearShortcuts()>();

     label28:
        goto label42;

     label29:
        specialinvoke r0.<com.android.server.pm.ShortcutService$MyShellCommand: void handleUnloadUser()>();

     label30:
        goto label42;

     label31:
        specialinvoke r0.<com.android.server.pm.ShortcutService$MyShellCommand: void handleGetDefaultLauncher()>();

     label32:
        goto label42;

     label33:
        specialinvoke r0.<com.android.server.pm.ShortcutService$MyShellCommand: void handleClearDefaultLauncher()>();

     label34:
        goto label42;

     label35:
        specialinvoke r0.<com.android.server.pm.ShortcutService$MyShellCommand: void handleResetConfig()>();

     label36:
        goto label42;

     label37:
        specialinvoke r0.<com.android.server.pm.ShortcutService$MyShellCommand: void handleOverrideConfig()>();

     label38:
        goto label42;

     label39:
        specialinvoke r0.<com.android.server.pm.ShortcutService$MyShellCommand: void handleResetAllThrottling()>();

     label40:
        goto label42;

     label41:
        specialinvoke r0.<com.android.server.pm.ShortcutService$MyShellCommand: void handleResetThrottling()>();

     label42:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Success");

        return 0;

     label43:
        return i3;

     label44:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: ");

        $r6 = virtualinvoke $r3.<com.android.server.pm.ShortcutService$CommandException: java.lang.String getMessage()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        return 1;

        catch com.android.server.pm.ShortcutService$CommandException from label02 to label03 with label44;
        catch com.android.server.pm.ShortcutService$CommandException from label04 to label05 with label44;
        catch com.android.server.pm.ShortcutService$CommandException from label06 to label07 with label44;
        catch com.android.server.pm.ShortcutService$CommandException from label08 to label09 with label44;
        catch com.android.server.pm.ShortcutService$CommandException from label10 to label11 with label44;
        catch com.android.server.pm.ShortcutService$CommandException from label12 to label13 with label44;
        catch com.android.server.pm.ShortcutService$CommandException from label14 to label15 with label44;
        catch com.android.server.pm.ShortcutService$CommandException from label16 to label17 with label44;
        catch com.android.server.pm.ShortcutService$CommandException from label18 to label19 with label44;
        catch com.android.server.pm.ShortcutService$CommandException from label20 to label21 with label44;
        catch com.android.server.pm.ShortcutService$CommandException from label23 to label24 with label44;
        catch com.android.server.pm.ShortcutService$CommandException from label25 to label26 with label44;
        catch com.android.server.pm.ShortcutService$CommandException from label27 to label28 with label44;
        catch com.android.server.pm.ShortcutService$CommandException from label29 to label30 with label44;
        catch com.android.server.pm.ShortcutService$CommandException from label31 to label32 with label44;
        catch com.android.server.pm.ShortcutService$CommandException from label33 to label34 with label44;
        catch com.android.server.pm.ShortcutService$CommandException from label35 to label36 with label44;
        catch com.android.server.pm.ShortcutService$CommandException from label37 to label38 with label44;
        catch com.android.server.pm.ShortcutService$CommandException from label39 to label40 with label44;
        catch com.android.server.pm.ShortcutService$CommandException from label41 to label42 with label44;
    }

    public void onHelp()
    {
        com.android.server.pm.ShortcutService$MyShellCommand r0;
        java.io.PrintWriter r1;

        r0 := @this: com.android.server.pm.ShortcutService$MyShellCommand;

        r1 = virtualinvoke r0.<com.android.server.pm.ShortcutService$MyShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Usage: cmd shortcut COMMAND [options ...]");

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("cmd shortcut reset-throttling [--user USER_ID]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Reset throttling for all packages and users");

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("cmd shortcut reset-all-throttling");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Reset the throttling state for all users");

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("cmd shortcut override-config CONFIG");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Override the configuration for testing (will last until reboot)");

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("cmd shortcut reset-config");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Reset the configuration set with \"update-config\"");

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("cmd shortcut clear-default-launcher [--user USER_ID]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Clear the cached default launcher");

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("cmd shortcut get-default-launcher [--user USER_ID]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Show the default launcher");

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("cmd shortcut unload-user [--user USER_ID]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Unload a user from the memory");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    (This should not affect any observable behavior)");

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("cmd shortcut clear-shortcuts [--user USER_ID] PACKAGE");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Remove all shortcuts from a package, including pinned shortcuts");

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        return;
    }
}
