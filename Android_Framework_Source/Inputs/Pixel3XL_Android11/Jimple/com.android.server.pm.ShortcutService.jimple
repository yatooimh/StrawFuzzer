public class com.android.server.pm.ShortcutService extends android.content.pm.IShortcutService$Stub
{
    private static java.util.function.Predicate ACTIVITY_NOT_EXPORTED;
    private static final java.lang.String ATTR_VALUE;
    static final boolean DEBUG;
    static final boolean DEBUG_LOAD;
    static final boolean DEBUG_PROCSTATE;
    static final java.lang.String DEFAULT_ICON_PERSIST_FORMAT;
    static final int DEFAULT_ICON_PERSIST_QUALITY;
    static final int DEFAULT_MAX_ICON_DIMENSION_DP;
    static final int DEFAULT_MAX_ICON_DIMENSION_LOWRAM_DP;
    static final int DEFAULT_MAX_SHORTCUTS_PER_ACTIVITY;
    static final int DEFAULT_MAX_UPDATES_PER_INTERVAL;
    static final long DEFAULT_RESET_INTERVAL_SEC;
    static final int DEFAULT_SAVE_DELAY_MS;
    static final java.lang.String DIRECTORY_BITMAPS;
    static final java.lang.String DIRECTORY_DUMP;
    static final java.lang.String DIRECTORY_PER_USER;
    private static final java.lang.String DUMMY_MAIN_ACTIVITY;
    private static java.util.List EMPTY_RESOLVE_INFO;
    static final java.lang.String FILENAME_BASE_STATE;
    static final java.lang.String FILENAME_USER_PACKAGES;
    private static final java.lang.String KEY_ICON_SIZE;
    private static final java.lang.String KEY_LOW_RAM;
    private static final java.lang.String KEY_SHORTCUT;
    private static final java.lang.String LAUNCHER_INTENT_CATEGORY;
    static final int OPERATION_ADD;
    static final int OPERATION_SET;
    static final int OPERATION_UPDATE;
    private static final int PACKAGE_MATCH_FLAGS;
    private static java.util.function.Predicate PACKAGE_NOT_INSTALLED;
    private static final int PROCESS_STATE_FOREGROUND_THRESHOLD;
    static final java.lang.String TAG;
    private static final java.lang.String TAG_LAST_RESET_TIME;
    private static final java.lang.String TAG_ROOT;
    private final android.app.ActivityManagerInternal mActivityManagerInternal;
    private final java.util.concurrent.atomic.AtomicBoolean mBootCompleted;
    final android.content.Context mContext;
    private java.util.List mDirtyUserIds;
    private final android.os.Handler mHandler;
    private final android.content.pm.IPackageManager mIPackageManager;
    private android.graphics.Bitmap$CompressFormat mIconPersistFormat;
    private int mIconPersistQuality;
    private int mLastLockedUser;
    private java.lang.Exception mLastWtfStacktrace;
    private final java.util.ArrayList mListeners;
    private final java.lang.Object mLock;
    private int mMaxIconDimension;
    private int mMaxShortcuts;
    int mMaxUpdatesPerInterval;
    private final com.android.internal.logging.MetricsLogger mMetricsLogger;
    private final android.content.pm.PackageManagerInternal mPackageManagerInternal;
    final android.content.BroadcastReceiver mPackageMonitor;
    private long mRawLastResetTime;
    final android.content.BroadcastReceiver mReceiver;
    private long mResetInterval;
    private int mSaveDelayMillis;
    private final java.lang.Runnable mSaveDirtyInfoRunner;
    private final com.android.server.pm.ShortcutBitmapSaver mShortcutBitmapSaver;
    private final java.util.ArrayList mShortcutChangeCallbacks;
    private final com.android.server.pm.ShortcutDumpFiles mShortcutDumpFiles;
    private final android.util.SparseArray mShortcutNonPersistentUsers;
    private final com.android.server.pm.ShortcutRequestPinProcessor mShortcutRequestPinProcessor;
    private final com.android.internal.util.StatLogger mStatLogger;
    final android.util.SparseLongArray mUidLastForegroundElapsedTime;
    private final android.app.IUidObserver mUidObserver;
    final android.util.SparseIntArray mUidState;
    final android.util.SparseBooleanArray mUnlockedUsers;
    private final android.app.IUriGrantsManager mUriGrantsManager;
    private final com.android.server.uri.UriGrantsManagerInternal mUriGrantsManagerInternal;
    private final android.os.IBinder mUriPermissionOwner;
    private final android.app.usage.UsageStatsManagerInternal mUsageStatsManagerInternal;
    private final android.os.UserManagerInternal mUserManagerInternal;
    private final android.util.SparseArray mUsers;
    private int mWtfCount;

    static void <clinit>()
    {
        android.graphics.Bitmap$CompressFormat $r0;
        java.lang.String $r1;
        java.util.ArrayList $r2;
        com.android.server.pm.ShortcutService$1 $r3;
        com.android.server.pm.ShortcutService$2 $r4;

        <com.android.server.pm.ShortcutService: java.lang.String TAG_ROOT> = "root";

        <com.android.server.pm.ShortcutService: java.lang.String TAG_LAST_RESET_TIME> = "last_reset_time";

        <com.android.server.pm.ShortcutService: java.lang.String TAG> = "ShortcutService";

        <com.android.server.pm.ShortcutService: int PROCESS_STATE_FOREGROUND_THRESHOLD> = 5;

        <com.android.server.pm.ShortcutService: int PACKAGE_MATCH_FLAGS> = 794624;

        <com.android.server.pm.ShortcutService: int OPERATION_UPDATE> = 2;

        <com.android.server.pm.ShortcutService: int OPERATION_SET> = 0;

        <com.android.server.pm.ShortcutService: int OPERATION_ADD> = 1;

        <com.android.server.pm.ShortcutService: java.lang.String LAUNCHER_INTENT_CATEGORY> = "android.intent.category.LAUNCHER";

        <com.android.server.pm.ShortcutService: java.lang.String KEY_SHORTCUT> = "shortcut";

        <com.android.server.pm.ShortcutService: java.lang.String KEY_LOW_RAM> = "lowRam";

        <com.android.server.pm.ShortcutService: java.lang.String KEY_ICON_SIZE> = "iconSize";

        <com.android.server.pm.ShortcutService: java.lang.String FILENAME_USER_PACKAGES> = "shortcuts.xml";

        <com.android.server.pm.ShortcutService: java.lang.String FILENAME_BASE_STATE> = "shortcut_service.xml";

        <com.android.server.pm.ShortcutService: java.lang.String DUMMY_MAIN_ACTIVITY> = "android.__dummy__";

        <com.android.server.pm.ShortcutService: java.lang.String DIRECTORY_PER_USER> = "shortcut_service";

        <com.android.server.pm.ShortcutService: java.lang.String DIRECTORY_DUMP> = "shortcut_dump";

        <com.android.server.pm.ShortcutService: java.lang.String DIRECTORY_BITMAPS> = "bitmaps";

        <com.android.server.pm.ShortcutService: int DEFAULT_SAVE_DELAY_MS> = 3000;

        <com.android.server.pm.ShortcutService: long DEFAULT_RESET_INTERVAL_SEC> = 86400L;

        <com.android.server.pm.ShortcutService: int DEFAULT_MAX_UPDATES_PER_INTERVAL> = 10;

        <com.android.server.pm.ShortcutService: int DEFAULT_MAX_SHORTCUTS_PER_ACTIVITY> = 15;

        <com.android.server.pm.ShortcutService: int DEFAULT_MAX_ICON_DIMENSION_LOWRAM_DP> = 48;

        <com.android.server.pm.ShortcutService: int DEFAULT_MAX_ICON_DIMENSION_DP> = 96;

        <com.android.server.pm.ShortcutService: int DEFAULT_ICON_PERSIST_QUALITY> = 100;

        <com.android.server.pm.ShortcutService: boolean DEBUG_PROCSTATE> = 0;

        <com.android.server.pm.ShortcutService: boolean DEBUG_LOAD> = 0;

        <com.android.server.pm.ShortcutService: boolean DEBUG> = 0;

        <com.android.server.pm.ShortcutService: java.lang.String ATTR_VALUE> = "value";

        $r0 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG>;

        $r1 = virtualinvoke $r0.<android.graphics.Bitmap$CompressFormat: java.lang.String name()>();

        <com.android.server.pm.ShortcutService: java.lang.String DEFAULT_ICON_PERSIST_FORMAT> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(0);

        <com.android.server.pm.ShortcutService: java.util.List EMPTY_RESOLVE_INFO> = $r2;

        $r3 = new com.android.server.pm.ShortcutService$1;

        specialinvoke $r3.<com.android.server.pm.ShortcutService$1: void <init>()>();

        <com.android.server.pm.ShortcutService: java.util.function.Predicate ACTIVITY_NOT_EXPORTED> = $r3;

        $r4 = new com.android.server.pm.ShortcutService$2;

        specialinvoke $r4.<com.android.server.pm.ShortcutService$2: void <init>()>();

        <com.android.server.pm.ShortcutService: java.util.function.Predicate PACKAGE_NOT_INSTALLED> = $r4;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.server.pm.ShortcutService r0;
        android.content.Context r1;
        com.android.internal.os.BackgroundThread $r2;
        android.os.Looper $r3;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: android.content.Context;

        $r2 = staticinvoke <com.android.internal.os.BackgroundThread: com.android.internal.os.BackgroundThread get()>();

        $r3 = virtualinvoke $r2.<com.android.internal.os.BackgroundThread: android.os.Looper getLooper()>();

        specialinvoke r0.<com.android.server.pm.ShortcutService: void <init>(android.content.Context,android.os.Looper,boolean)>(r1, $r3, 0);

        return;
    }

    void <init>(android.content.Context, android.os.Looper, boolean)
    {
        com.android.server.pm.ShortcutService r0;
        android.os.Looper r1;
        boolean z0;
        java.lang.Object $r2, $r24, $r27, $r30, $r33, $r37, $r41;
        java.util.ArrayList $r3, $r4, $r9;
        android.util.SparseArray $r5, $r6;
        android.util.SparseIntArray $r7;
        android.util.SparseLongArray $r8;
        java.util.concurrent.atomic.AtomicBoolean $r10;
        android.util.SparseBooleanArray $r11;
        com.android.internal.util.StatLogger $r12;
        java.lang.String[] $r13;
        com.android.internal.logging.MetricsLogger $r14;
        com.android.server.pm.ShortcutService$3 $r15;
        com.android.server.pm._$$Lambda$jZzCUQd1whVIqs_s1XMLbFqTP_E $r16;
        com.android.server.pm.ShortcutService$4 $r17;
        com.android.server.pm.ShortcutService$5 $r18;
        android.content.Context $r20, $r48, $r54, $r60, r63;
        com.android.server.pm.ShortcutService$LocalService $r21;
        android.os.Handler $r22, $r45, $r51, $r57;
        android.content.pm.IPackageManager $r23;
        android.content.pm.PackageManagerInternal $r26, r64;
        android.os.UserManagerInternal $r29, r65;
        android.app.usage.UsageStatsManagerInternal $r32, r66;
        android.app.ActivityManagerInternal $r35, r67;
        android.app.IUriGrantsManager $r36;
        android.os.IBinder $r39;
        com.android.server.pm.ShortcutRequestPinProcessor $r40;
        com.android.server.pm.ShortcutBitmapSaver $r42;
        com.android.server.pm.ShortcutDumpFiles $r43;
        android.content.IntentFilter $r44, $r50, $r56;
        android.os.UserHandle $r46, $r52, $r58;
        android.content.BroadcastReceiver $r47, $r53, $r59;
        android.app.IUidObserver $r62;
        com.android.server.uri.UriGrantsManagerInternal r68, r69;

        r0 := @this: com.android.server.pm.ShortcutService;

        r63 := @parameter0: android.content.Context;

        r1 := @parameter1: android.os.Looper;

        z0 := @parameter2: boolean;

        specialinvoke r0.<android.content.pm.IShortcutService$Stub: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(1);

        r0.<com.android.server.pm.ShortcutService: java.util.ArrayList mListeners> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>(1);

        r0.<com.android.server.pm.ShortcutService: java.util.ArrayList mShortcutChangeCallbacks> = $r4;

        $r5 = new android.util.SparseArray;

        specialinvoke $r5.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.pm.ShortcutService: android.util.SparseArray mUsers> = $r5;

        $r6 = new android.util.SparseArray;

        specialinvoke $r6.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.pm.ShortcutService: android.util.SparseArray mShortcutNonPersistentUsers> = $r6;

        $r7 = new android.util.SparseIntArray;

        specialinvoke $r7.<android.util.SparseIntArray: void <init>()>();

        r0.<com.android.server.pm.ShortcutService: android.util.SparseIntArray mUidState> = $r7;

        $r8 = new android.util.SparseLongArray;

        specialinvoke $r8.<android.util.SparseLongArray: void <init>()>();

        r0.<com.android.server.pm.ShortcutService: android.util.SparseLongArray mUidLastForegroundElapsedTime> = $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.pm.ShortcutService: java.util.List mDirtyUserIds> = $r9;

        $r10 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r10.<java.util.concurrent.atomic.AtomicBoolean: void <init>()>();

        r0.<com.android.server.pm.ShortcutService: java.util.concurrent.atomic.AtomicBoolean mBootCompleted> = $r10;

        $r11 = new android.util.SparseBooleanArray;

        specialinvoke $r11.<android.util.SparseBooleanArray: void <init>()>();

        r0.<com.android.server.pm.ShortcutService: android.util.SparseBooleanArray mUnlockedUsers> = $r11;

        $r12 = new com.android.internal.util.StatLogger;

        $r13 = newarray (java.lang.String)[17];

        $r13[0] = "getHomeActivities()";

        $r13[1] = "Launcher permission check";

        $r13[2] = "getPackageInfo()";

        $r13[3] = "getPackageInfo(SIG)";

        $r13[4] = "getApplicationInfo";

        $r13[5] = "cleanupDanglingBitmaps";

        $r13[6] = "getActivity+metadata";

        $r13[7] = "getInstalledPackages";

        $r13[8] = "checkPackageChanges";

        $r13[9] = "getApplicationResources";

        $r13[10] = "resourceNameLookup";

        $r13[11] = "getLauncherActivity";

        $r13[12] = "checkLauncherActivity";

        $r13[13] = "isActivityEnabled";

        $r13[14] = "packageUpdateCheck";

        $r13[15] = "asyncPreloadUserDelay";

        $r13[16] = "getDefaultLauncher()";

        specialinvoke $r12.<com.android.internal.util.StatLogger: void <init>(java.lang.String[])>($r13);

        r0.<com.android.server.pm.ShortcutService: com.android.internal.util.StatLogger mStatLogger> = $r12;

        r0.<com.android.server.pm.ShortcutService: int mWtfCount> = 0;

        $r14 = new com.android.internal.logging.MetricsLogger;

        specialinvoke $r14.<com.android.internal.logging.MetricsLogger: void <init>()>();

        r0.<com.android.server.pm.ShortcutService: com.android.internal.logging.MetricsLogger mMetricsLogger> = $r14;

        $r15 = new com.android.server.pm.ShortcutService$3;

        specialinvoke $r15.<com.android.server.pm.ShortcutService$3: void <init>(com.android.server.pm.ShortcutService)>(r0);

        r0.<com.android.server.pm.ShortcutService: android.app.IUidObserver mUidObserver> = $r15;

        $r16 = new com.android.server.pm._$$Lambda$jZzCUQd1whVIqs_s1XMLbFqTP_E;

        specialinvoke $r16.<com.android.server.pm._$$Lambda$jZzCUQd1whVIqs_s1XMLbFqTP_E: void <init>(com.android.server.pm.ShortcutService)>(r0);

        r0.<com.android.server.pm.ShortcutService: java.lang.Runnable mSaveDirtyInfoRunner> = $r16;

        r0.<com.android.server.pm.ShortcutService: int mLastLockedUser> = -1;

        $r17 = new com.android.server.pm.ShortcutService$4;

        specialinvoke $r17.<com.android.server.pm.ShortcutService$4: void <init>(com.android.server.pm.ShortcutService)>(r0);

        r0.<com.android.server.pm.ShortcutService: android.content.BroadcastReceiver mReceiver> = $r17;

        $r18 = new com.android.server.pm.ShortcutService$5;

        specialinvoke $r18.<com.android.server.pm.ShortcutService$5: void <init>(com.android.server.pm.ShortcutService)>(r0);

        r0.<com.android.server.pm.ShortcutService: android.content.BroadcastReceiver mPackageMonitor> = $r18;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r63);

        $r20 = (android.content.Context) r63;

        r0.<com.android.server.pm.ShortcutService: android.content.Context mContext> = $r20;

        $r21 = new com.android.server.pm.ShortcutService$LocalService;

        specialinvoke $r21.<com.android.server.pm.ShortcutService$LocalService: void <init>(com.android.server.pm.ShortcutService,com.android.server.pm.ShortcutService$1)>(r0, null);

        staticinvoke <com.android.server.LocalServices: void addService(java.lang.Class,java.lang.Object)>(class "Landroid/content/pm/ShortcutServiceInternal;", $r21);

        $r22 = new android.os.Handler;

        specialinvoke $r22.<android.os.Handler: void <init>(android.os.Looper)>(r1);

        r0.<com.android.server.pm.ShortcutService: android.os.Handler mHandler> = $r22;

        $r23 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r0.<com.android.server.pm.ShortcutService: android.content.pm.IPackageManager mIPackageManager> = $r23;

        $r24 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/content/pm/PackageManagerInternal;");

        r64 = (android.content.pm.PackageManagerInternal) $r24;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r64);

        $r26 = (android.content.pm.PackageManagerInternal) r64;

        r0.<com.android.server.pm.ShortcutService: android.content.pm.PackageManagerInternal mPackageManagerInternal> = $r26;

        $r27 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/os/UserManagerInternal;");

        r65 = (android.os.UserManagerInternal) $r27;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r65);

        $r29 = (android.os.UserManagerInternal) r65;

        r0.<com.android.server.pm.ShortcutService: android.os.UserManagerInternal mUserManagerInternal> = $r29;

        $r30 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/app/usage/UsageStatsManagerInternal;");

        r66 = (android.app.usage.UsageStatsManagerInternal) $r30;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r66);

        $r32 = (android.app.usage.UsageStatsManagerInternal) r66;

        r0.<com.android.server.pm.ShortcutService: android.app.usage.UsageStatsManagerInternal mUsageStatsManagerInternal> = $r32;

        $r33 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/app/ActivityManagerInternal;");

        r67 = (android.app.ActivityManagerInternal) $r33;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r67);

        $r35 = (android.app.ActivityManagerInternal) r67;

        r0.<com.android.server.pm.ShortcutService: android.app.ActivityManagerInternal mActivityManagerInternal> = $r35;

        $r36 = staticinvoke <android.app.UriGrantsManager: android.app.IUriGrantsManager getService()>();

        r0.<com.android.server.pm.ShortcutService: android.app.IUriGrantsManager mUriGrantsManager> = $r36;

        $r37 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/uri/UriGrantsManagerInternal;");

        r68 = (com.android.server.uri.UriGrantsManagerInternal) $r37;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r68);

        r69 = (com.android.server.uri.UriGrantsManagerInternal) r68;

        r0.<com.android.server.pm.ShortcutService: com.android.server.uri.UriGrantsManagerInternal mUriGrantsManagerInternal> = r69;

        $r39 = interfaceinvoke r69.<com.android.server.uri.UriGrantsManagerInternal: android.os.IBinder newUriPermissionOwner(java.lang.String)>("ShortcutService");

        r0.<com.android.server.pm.ShortcutService: android.os.IBinder mUriPermissionOwner> = $r39;

        $r40 = new com.android.server.pm.ShortcutRequestPinProcessor;

        $r41 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        specialinvoke $r40.<com.android.server.pm.ShortcutRequestPinProcessor: void <init>(com.android.server.pm.ShortcutService,java.lang.Object)>(r0, $r41);

        r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutRequestPinProcessor mShortcutRequestPinProcessor> = $r40;

        $r42 = new com.android.server.pm.ShortcutBitmapSaver;

        specialinvoke $r42.<com.android.server.pm.ShortcutBitmapSaver: void <init>(com.android.server.pm.ShortcutService)>(r0);

        r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutBitmapSaver mShortcutBitmapSaver> = $r42;

        $r43 = new com.android.server.pm.ShortcutDumpFiles;

        specialinvoke $r43.<com.android.server.pm.ShortcutDumpFiles: void <init>(com.android.server.pm.ShortcutService)>(r0);

        r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutDumpFiles mShortcutDumpFiles> = $r43;

        if z0 == 0 goto label1;

        return;

     label1:
        $r44 = new android.content.IntentFilter;

        specialinvoke $r44.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r44.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_ADDED");

        virtualinvoke $r44.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_REMOVED");

        virtualinvoke $r44.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_CHANGED");

        virtualinvoke $r44.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_DATA_CLEARED");

        virtualinvoke $r44.<android.content.IntentFilter: void addDataScheme(java.lang.String)>("package");

        virtualinvoke $r44.<android.content.IntentFilter: void setPriority(int)>(1000);

        $r48 = r0.<com.android.server.pm.ShortcutService: android.content.Context mContext>;

        $r47 = r0.<com.android.server.pm.ShortcutService: android.content.BroadcastReceiver mPackageMonitor>;

        $r46 = <android.os.UserHandle: android.os.UserHandle ALL>;

        $r45 = r0.<com.android.server.pm.ShortcutService: android.os.Handler mHandler>;

        virtualinvoke $r48.<android.content.Context: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r47, $r46, $r44, null, $r45);

        $r50 = new android.content.IntentFilter;

        specialinvoke $r50.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r50.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.ACTION_PREFERRED_ACTIVITY_CHANGED");

        virtualinvoke $r50.<android.content.IntentFilter: void setPriority(int)>(1000);

        $r54 = r0.<com.android.server.pm.ShortcutService: android.content.Context mContext>;

        $r53 = r0.<com.android.server.pm.ShortcutService: android.content.BroadcastReceiver mPackageMonitor>;

        $r52 = <android.os.UserHandle: android.os.UserHandle ALL>;

        $r51 = r0.<com.android.server.pm.ShortcutService: android.os.Handler mHandler>;

        virtualinvoke $r54.<android.content.Context: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r53, $r52, $r50, null, $r51);

        $r56 = new android.content.IntentFilter;

        specialinvoke $r56.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r56.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.LOCALE_CHANGED");

        virtualinvoke $r56.<android.content.IntentFilter: void setPriority(int)>(1000);

        $r60 = r0.<com.android.server.pm.ShortcutService: android.content.Context mContext>;

        $r59 = r0.<com.android.server.pm.ShortcutService: android.content.BroadcastReceiver mReceiver>;

        $r58 = <android.os.UserHandle: android.os.UserHandle ALL>;

        $r57 = r0.<com.android.server.pm.ShortcutService: android.os.Handler mHandler>;

        virtualinvoke $r60.<android.content.Context: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r59, $r58, $r56, null, $r57);

        $r62 = r0.<com.android.server.pm.ShortcutService: android.app.IUidObserver mUidObserver>;

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRegisterUidObserver(android.app.IUidObserver,int)>($r62, 3);

        return;
    }

    static boolean access$000(android.content.pm.PackageInfo)
    {
        android.content.pm.PackageInfo r0;
        boolean $z0;

        r0 := @parameter0: android.content.pm.PackageInfo;

        $z0 = staticinvoke <com.android.server.pm.ShortcutService: boolean isInstalled(android.content.pm.PackageInfo)>(r0);

        return $z0;
    }

    static android.app.IUriGrantsManager access$1000(com.android.server.pm.ShortcutService)
    {
        com.android.server.pm.ShortcutService r0;
        android.app.IUriGrantsManager $r1;

        r0 := @parameter0: com.android.server.pm.ShortcutService;

        $r1 = r0.<com.android.server.pm.ShortcutService: android.app.IUriGrantsManager mUriGrantsManager>;

        return $r1;
    }

    static boolean access$1100(com.android.server.pm.ShortcutService, java.lang.String, int, android.content.pm.ShortcutInfo, android.appwidget.AppWidgetProviderInfo, android.os.Bundle, android.content.IntentSender)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String r1;
        int i0;
        android.content.pm.ShortcutInfo r2;
        android.appwidget.AppWidgetProviderInfo r3;
        android.os.Bundle r4;
        android.content.IntentSender r5;
        boolean $z0;

        r0 := @parameter0: com.android.server.pm.ShortcutService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 := @parameter3: android.content.pm.ShortcutInfo;

        r3 := @parameter4: android.appwidget.AppWidgetProviderInfo;

        r4 := @parameter5: android.os.Bundle;

        r5 := @parameter6: android.content.IntentSender;

        $z0 = specialinvoke r0.<com.android.server.pm.ShortcutService: boolean requestPinItem(java.lang.String,int,android.content.pm.ShortcutInfo,android.appwidget.AppWidgetProviderInfo,android.os.Bundle,android.content.IntentSender)>(r1, i0, r2, r3, r4, r5);

        return $z0;
    }

    static java.util.concurrent.atomic.AtomicBoolean access$1200(com.android.server.pm.ShortcutService)
    {
        com.android.server.pm.ShortcutService r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @parameter0: com.android.server.pm.ShortcutService;

        $r1 = r0.<com.android.server.pm.ShortcutService: java.util.concurrent.atomic.AtomicBoolean mBootCompleted>;

        return $r1;
    }

    static com.android.server.uri.UriGrantsManagerInternal access$1300(com.android.server.pm.ShortcutService)
    {
        com.android.server.pm.ShortcutService r0;
        com.android.server.uri.UriGrantsManagerInternal $r1;

        r0 := @parameter0: com.android.server.pm.ShortcutService;

        $r1 = r0.<com.android.server.pm.ShortcutService: com.android.server.uri.UriGrantsManagerInternal mUriGrantsManagerInternal>;

        return $r1;
    }

    static void access$1400(com.android.server.pm.ShortcutService, java.lang.String, int)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String r1;
        int i0;

        r0 := @parameter0: com.android.server.pm.ShortcutService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void handlePackageUpdateFinished(java.lang.String,int)>(r1, i0);

        return;
    }

    static void access$1500(com.android.server.pm.ShortcutService, java.lang.String, int)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String r1;
        int i0;

        r0 := @parameter0: com.android.server.pm.ShortcutService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void handlePackageAdded(java.lang.String,int)>(r1, i0);

        return;
    }

    static void access$1600(com.android.server.pm.ShortcutService, java.lang.String, int)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String r1;
        int i0;

        r0 := @parameter0: com.android.server.pm.ShortcutService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void handlePackageRemoved(java.lang.String,int)>(r1, i0);

        return;
    }

    static void access$1700(com.android.server.pm.ShortcutService, java.lang.String, int)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String r1;
        int i0;

        r0 := @parameter0: com.android.server.pm.ShortcutService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void handlePackageChanged(java.lang.String,int)>(r1, i0);

        return;
    }

    static void access$1800(com.android.server.pm.ShortcutService, java.lang.String, int)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String r1;
        int i0;

        r0 := @parameter0: com.android.server.pm.ShortcutService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void handlePackageDataCleared(java.lang.String,int)>(r1, i0);

        return;
    }

    static java.lang.Object access$200(com.android.server.pm.ShortcutService)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.pm.ShortcutService;

        $r1 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        return $r1;
    }

    static void access$2000(com.android.server.pm.ShortcutService)
    {
        com.android.server.pm.ShortcutService r0;

        r0 := @parameter0: com.android.server.pm.ShortcutService;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void loadConfigurationLocked()>();

        return;
    }

    static void access$2100(com.android.server.pm.ShortcutService, java.lang.String, int, boolean)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String r1;
        int i0;
        boolean z0;

        r0 := @parameter0: com.android.server.pm.ShortcutService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void cleanUpPackageForAllLoadedUsers(java.lang.String,int,boolean)>(r1, i0, z0);

        return;
    }

    static void access$2200(com.android.server.pm.ShortcutService)
    {
        com.android.server.pm.ShortcutService r0;

        r0 := @parameter0: com.android.server.pm.ShortcutService;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void verifyStatesForce()>();

        return;
    }

    static java.util.List access$300(com.android.server.pm.ShortcutService, java.util.List)
    {
        com.android.server.pm.ShortcutService r0;
        java.util.List r1, $r2;

        r0 := @parameter0: com.android.server.pm.ShortcutService;

        r1 := @parameter1: java.util.List;

        $r2 = specialinvoke r0.<com.android.server.pm.ShortcutService: java.util.List setReturnedByServer(java.util.List)>(r1);

        return $r2;
    }

    static java.util.List access$400(com.android.server.pm.ShortcutService, android.util.ArraySet, android.util.ArraySet, java.util.List, com.android.server.pm.ShortcutPackage)
    {
        com.android.server.pm.ShortcutService r0;
        android.util.ArraySet r1, r2;
        java.util.List r3, $r5;
        com.android.server.pm.ShortcutPackage r4;

        r0 := @parameter0: com.android.server.pm.ShortcutService;

        r1 := @parameter1: android.util.ArraySet;

        r2 := @parameter2: android.util.ArraySet;

        r3 := @parameter3: java.util.List;

        r4 := @parameter4: com.android.server.pm.ShortcutPackage;

        $r5 = specialinvoke r0.<com.android.server.pm.ShortcutService: java.util.List prepareChangedShortcuts(android.util.ArraySet,android.util.ArraySet,java.util.List,com.android.server.pm.ShortcutPackage)>(r1, r2, r3, r4);

        return $r5;
    }

    static java.util.ArrayList access$500(com.android.server.pm.ShortcutService)
    {
        com.android.server.pm.ShortcutService r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: com.android.server.pm.ShortcutService;

        $r1 = r0.<com.android.server.pm.ShortcutService: java.util.ArrayList mListeners>;

        return $r1;
    }

    static java.util.ArrayList access$600(com.android.server.pm.ShortcutService)
    {
        com.android.server.pm.ShortcutService r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: com.android.server.pm.ShortcutService;

        $r1 = r0.<com.android.server.pm.ShortcutService: java.util.ArrayList mShortcutChangeCallbacks>;

        return $r1;
    }

    static com.android.server.pm.ShortcutBitmapSaver access$700(com.android.server.pm.ShortcutService)
    {
        com.android.server.pm.ShortcutService r0;
        com.android.server.pm.ShortcutBitmapSaver $r1;

        r0 := @parameter0: com.android.server.pm.ShortcutService;

        $r1 = r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutBitmapSaver mShortcutBitmapSaver>;

        return $r1;
    }

    static android.content.pm.PackageManagerInternal access$800(com.android.server.pm.ShortcutService)
    {
        com.android.server.pm.ShortcutService r0;
        android.content.pm.PackageManagerInternal $r1;

        r0 := @parameter0: com.android.server.pm.ShortcutService;

        $r1 = r0.<com.android.server.pm.ShortcutService: android.content.pm.PackageManagerInternal mPackageManagerInternal>;

        return $r1;
    }

    static android.os.IBinder access$900(com.android.server.pm.ShortcutService)
    {
        com.android.server.pm.ShortcutService r0;
        android.os.IBinder $r1;

        r0 := @parameter0: com.android.server.pm.ShortcutService;

        $r1 = r0.<com.android.server.pm.ShortcutService: android.os.IBinder mUriPermissionOwner>;

        return $r1;
    }

    private void addShortcutIdsToSet(android.util.ArraySet, java.util.List)
    {
        com.android.server.pm.ShortcutService r0;
        android.util.ArraySet r1;
        java.util.List r2;
        int i0, i1;
        boolean $z0;
        java.lang.Object $r3;
        android.content.pm.ShortcutInfo $r4;
        java.lang.String $r5;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: android.util.ArraySet;

        r2 := @parameter1: java.util.List;

        $z0 = staticinvoke <com.android.internal.util.CollectionUtils: boolean isEmpty(java.util.Collection)>(r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        i0 = interfaceinvoke r2.<java.util.List: int size()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r3 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        $r4 = (android.content.pm.ShortcutInfo) $r3;

        $r5 = virtualinvoke $r4.<android.content.pm.ShortcutInfo: java.lang.String getId()>();

        virtualinvoke r1.<android.util.ArraySet: boolean add(java.lang.Object)>($r5);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    private void assignImplicitRanks(java.util.List)
    {
        com.android.server.pm.ShortcutService r0;
        java.util.List r1;
        int $i0, i1;
        java.lang.Object $r2;
        android.content.pm.ShortcutInfo $r3;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        $r3 = (android.content.pm.ShortcutInfo) $r2;

        virtualinvoke $r3.<android.content.pm.ShortcutInfo: void setImplicitRank(int)>(i1);

        i1 = i1 + -1;

        goto label1;

     label2:
        return;
    }

    private void cleanUpPackageForAllLoadedUsers(java.lang.String, int, boolean)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        boolean z0;
        java.lang.Object r1;
        com.android.server.pm._$$Lambda$ShortcutService$6eafFDj6T22u1nVQUQPfXcU6otY r2;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.pm.ShortcutService;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r1 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r2 = new com.android.server.pm._$$Lambda$ShortcutService$6eafFDj6T22u1nVQUQPfXcU6otY;

        specialinvoke r2.<com.android.server.pm._$$Lambda$ShortcutService$6eafFDj6T22u1nVQUQPfXcU6otY: void <init>(com.android.server.pm.ShortcutService,java.lang.String,int,boolean)>(r0, r4, i0, z0);

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void forEachLoadedUserLocked(java.util.function.Consumer)>(r2);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void cleanupDanglingBitmapDirectoriesLocked(int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0, i2, i3;
        long l1;
        com.android.server.pm.ShortcutUser r1;
        java.io.File[] r2;
        java.io.File r3, $r5;
        java.lang.String r4;
        boolean $z0, $z1;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 := @parameter0: int;

        l1 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long getStatStartTime()>();

        r1 = virtualinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutUser getUserShortcutsLocked(int)>(i0);

        $r5 = virtualinvoke r0.<com.android.server.pm.ShortcutService: java.io.File getUserBitmapFilePath(int)>(i0);

        r2 = virtualinvoke $r5.<java.io.File: java.io.File[] listFiles()>();

        if r2 != null goto label1;

        return;

     label1:
        i2 = lengthof r2;

        i3 = 0;

     label2:
        if i3 >= i2 goto label6;

        r3 = r2[i3];

        $z0 = virtualinvoke r3.<java.io.File: boolean isDirectory()>();

        if $z0 != 0 goto label3;

        goto label5;

     label3:
        r4 = virtualinvoke r3.<java.io.File: java.lang.String getName()>();

        $z1 = virtualinvoke r1.<com.android.server.pm.ShortcutUser: boolean hasPackage(java.lang.String)>(r4);

        if $z1 != 0 goto label4;

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void cleanupBitmapsForPackage(int,java.lang.String)>(i0, r4);

        goto label5;

     label4:
        specialinvoke r0.<com.android.server.pm.ShortcutService: void cleanupDanglingBitmapFilesLocked(int,com.android.server.pm.ShortcutUser,java.lang.String,java.io.File)>(i0, r1, r4, r3);

     label5:
        i3 = i3 + 1;

        goto label2;

     label6:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void logDurationStat(int,long)>(5, l1);

        return;
    }

    private void cleanupDanglingBitmapFilesLocked(int, com.android.server.pm.ShortcutUser, java.lang.String, java.io.File)
    {
        com.android.server.pm.ShortcutService r0;
        int i0, i1, i2;
        com.android.server.pm.ShortcutPackage $r1;
        boolean $z0, $z1;
        java.lang.String $r2, r4;
        com.android.server.pm.ShortcutUser r3;
        java.io.File r5, r8;
        android.util.ArraySet r6;
        java.io.File[] r7;

        r0 := @this: com.android.server.pm.ShortcutService;

        i1 := @parameter0: int;

        r3 := @parameter1: com.android.server.pm.ShortcutUser;

        r4 := @parameter2: java.lang.String;

        r5 := @parameter3: java.io.File;

        $r1 = virtualinvoke r3.<com.android.server.pm.ShortcutUser: com.android.server.pm.ShortcutPackage getPackageShortcuts(java.lang.String)>(r4);

        r6 = virtualinvoke $r1.<com.android.server.pm.ShortcutPackage: android.util.ArraySet getUsedBitmapFiles()>();

        r7 = virtualinvoke r5.<java.io.File: java.io.File[] listFiles()>();

        i0 = lengthof r7;

        i2 = 0;

     label1:
        if i2 >= i0 goto label4;

        r8 = r7[i2];

        $z0 = virtualinvoke r8.<java.io.File: boolean isFile()>();

        if $z0 != 0 goto label2;

        goto label3;

     label2:
        $r2 = virtualinvoke r8.<java.io.File: java.lang.String getName()>();

        $z1 = virtualinvoke r6.<android.util.ArraySet: boolean contains(java.lang.Object)>($r2);

        if $z1 != 0 goto label3;

        virtualinvoke r8.<java.io.File: boolean delete()>();

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return;
    }

    private void dumpCheckin(java.io.PrintWriter, boolean)
    {
        com.android.server.pm.ShortcutService r0;
        boolean z0, $z1;
        java.lang.Object r1, $r10;
        org.json.JSONArray r2;
        org.json.JSONObject r3, $r12;
        android.util.SparseArray $r4, $r9;
        int $i0, $i1, i3;
        java.lang.String $r8;
        com.android.server.pm.ShortcutUser $r11;
        java.lang.Throwable $r14, $r15;
        java.io.PrintWriter r16;

        r0 := @this: com.android.server.pm.ShortcutService;

        r16 := @parameter0: java.io.PrintWriter;

        z0 := @parameter1: boolean;

        r1 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        r2 = new org.json.JSONArray;

        specialinvoke r2.<org.json.JSONArray: void <init>()>();

     label02:
        i3 = 0;

     label03:
        $r4 = r0.<com.android.server.pm.ShortcutService: android.util.SparseArray mUsers>;

        $i0 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        if i3 >= $i0 goto label05;

        $r9 = r0.<com.android.server.pm.ShortcutService: android.util.SparseArray mUsers>;

        $r10 = virtualinvoke $r9.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        $r11 = (com.android.server.pm.ShortcutUser) $r10;

        $r12 = virtualinvoke $r11.<com.android.server.pm.ShortcutUser: org.json.JSONObject dumpCheckin(boolean)>(z0);

        virtualinvoke r2.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r12);

     label04:
        i3 = i3 + 1;

        goto label03;

     label05:
        r3 = new org.json.JSONObject;

        specialinvoke r3.<org.json.JSONObject: void <init>()>();

        virtualinvoke r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("shortcut", r2);

        $z1 = virtualinvoke r0.<com.android.server.pm.ShortcutService: boolean injectIsLowRamDevice()>();

        virtualinvoke r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>("lowRam", $z1);

        $i1 = r0.<com.android.server.pm.ShortcutService: int mMaxIconDimension>;

        virtualinvoke r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("iconSize", $i1);

        $r8 = virtualinvoke r3.<org.json.JSONObject: java.lang.String toString(int)>(1);

        virtualinvoke r16.<java.io.PrintWriter: void println(java.lang.String)>($r8);

     label06:
        goto label10;

     label07:
        $r14 := @caughtexception;

        goto label12;

     label08:
        $r15 := @caughtexception;

     label09:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ShortcutService", "Unable to write in json", $r15);

     label10:
        exitmonitor r1;

     label11:
        return;

     label12:
        exitmonitor r1;

     label13:
        throw $r14;

        catch org.json.JSONException from label01 to label02 with label08;
        catch java.lang.Throwable from label01 to label02 with label07;
        catch org.json.JSONException from label03 to label04 with label08;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch org.json.JSONException from label05 to label06 with label08;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label09 to label10 with label07;
        catch java.lang.Throwable from label10 to label11 with label07;
        catch java.lang.Throwable from label12 to label13 with label07;
    }

    private void dumpCurrentTime(java.io.PrintWriter)
    {
        com.android.server.pm.ShortcutService r0;
        java.io.PrintWriter r1;
        long $l0;
        java.lang.String $r2;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.io.PrintWriter;

        $l0 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long injectCurrentTimeMillis()>();

        $r2 = staticinvoke <com.android.server.pm.ShortcutService: java.lang.String formatTime(long)>($l0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r2);

        return;
    }

    private void dumpDumpFiles(java.io.PrintWriter)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.Object r1;
        com.android.server.pm.ShortcutDumpFiles $r2;
        java.lang.Throwable $r3;
        java.io.PrintWriter r4;

        r0 := @this: com.android.server.pm.ShortcutService;

        r4 := @parameter0: java.io.PrintWriter;

        r1 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("** SHORTCUT MANAGER FILES (dumpsys shortcut -n -f)");

        $r2 = r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutDumpFiles mShortcutDumpFiles>;

        virtualinvoke $r2.<com.android.server.pm.ShortcutDumpFiles: void dumpAll(java.io.PrintWriter)>(r4);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void dumpInner(java.io.PrintWriter)
    {
        com.android.server.pm.ShortcutService r0;
        java.io.PrintWriter r1;
        com.android.server.pm.ShortcutService$DumpFilter $r2;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.io.PrintWriter;

        $r2 = new com.android.server.pm.ShortcutService$DumpFilter;

        specialinvoke $r2.<com.android.server.pm.ShortcutService$DumpFilter: void <init>()>();

        specialinvoke r0.<com.android.server.pm.ShortcutService: void dumpInner(java.io.PrintWriter,com.android.server.pm.ShortcutService$DumpFilter)>(r1, $r2);

        return;
    }

    private void dumpInner(java.io.PrintWriter, com.android.server.pm.ShortcutService$DumpFilter)
    {
        com.android.server.pm.ShortcutService r0;
        com.android.server.pm.ShortcutService$DumpFilter r1;
        java.lang.Object r2, $r5, $r7;
        boolean $z0, $z1, $z2;
        android.util.SparseArray $r3, $r4, $r6, $r20;
        int $i0, $i1, $i2, $i5, $i6, $i7, $i9, $i10, $i11, i15, $i16, i17;
        java.lang.String $r8, $r9, $r10, $r11, $r17;
        long $l3, $l4, $l8, l12, l13, l14;
        android.graphics.Bitmap$CompressFormat $r12;
        com.android.internal.util.StatLogger $r13;
        java.lang.Exception $r14, $r16;
        com.android.server.pm.ShortcutBitmapSaver $r15;
        java.lang.Throwable $r18;
        java.io.PrintWriter r19;
        com.android.server.pm.ShortcutUser r21;
        com.android.server.pm.ShortcutNonPersistentUser r22;

        r0 := @this: com.android.server.pm.ShortcutService;

        r19 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: com.android.server.pm.ShortcutService$DumpFilter;

        r2 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        $z0 = virtualinvoke r1.<com.android.server.pm.ShortcutService$DumpFilter: boolean shouldDumpDetails()>();

        if $z0 == 0 goto label03;

        l12 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long injectCurrentTimeMillis()>();

        virtualinvoke r19.<java.io.PrintWriter: void print(java.lang.String)>("Now: [");

        virtualinvoke r19.<java.io.PrintWriter: void print(long)>(l12);

        virtualinvoke r19.<java.io.PrintWriter: void print(java.lang.String)>("] ");

        $r8 = staticinvoke <com.android.server.pm.ShortcutService: java.lang.String formatTime(long)>(l12);

        virtualinvoke r19.<java.io.PrintWriter: void print(java.lang.String)>($r8);

        virtualinvoke r19.<java.io.PrintWriter: void print(java.lang.String)>("  Raw last reset: [");

        $l3 = r0.<com.android.server.pm.ShortcutService: long mRawLastResetTime>;

        virtualinvoke r19.<java.io.PrintWriter: void print(long)>($l3);

        virtualinvoke r19.<java.io.PrintWriter: void print(java.lang.String)>("] ");

        $l4 = r0.<com.android.server.pm.ShortcutService: long mRawLastResetTime>;

        $r9 = staticinvoke <com.android.server.pm.ShortcutService: java.lang.String formatTime(long)>($l4);

        virtualinvoke r19.<java.io.PrintWriter: void print(java.lang.String)>($r9);

        l13 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long getLastResetTimeLocked()>();

        virtualinvoke r19.<java.io.PrintWriter: void print(java.lang.String)>("  Last reset: [");

        virtualinvoke r19.<java.io.PrintWriter: void print(long)>(l13);

        virtualinvoke r19.<java.io.PrintWriter: void print(java.lang.String)>("] ");

        $r10 = staticinvoke <com.android.server.pm.ShortcutService: java.lang.String formatTime(long)>(l13);

        virtualinvoke r19.<java.io.PrintWriter: void print(java.lang.String)>($r10);

        l14 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long getNextResetTimeLocked()>();

        virtualinvoke r19.<java.io.PrintWriter: void print(java.lang.String)>("  Next reset: [");

        virtualinvoke r19.<java.io.PrintWriter: void print(long)>(l14);

        virtualinvoke r19.<java.io.PrintWriter: void print(java.lang.String)>("] ");

        $r11 = staticinvoke <com.android.server.pm.ShortcutService: java.lang.String formatTime(long)>(l14);

        virtualinvoke r19.<java.io.PrintWriter: void print(java.lang.String)>($r11);

        virtualinvoke r19.<java.io.PrintWriter: void println()>();

        virtualinvoke r19.<java.io.PrintWriter: void println()>();

        virtualinvoke r19.<java.io.PrintWriter: void print(java.lang.String)>("  Config:");

        virtualinvoke r19.<java.io.PrintWriter: void print(java.lang.String)>("    Max icon dim: ");

        $i5 = r0.<com.android.server.pm.ShortcutService: int mMaxIconDimension>;

        virtualinvoke r19.<java.io.PrintWriter: void println(int)>($i5);

        virtualinvoke r19.<java.io.PrintWriter: void print(java.lang.String)>("    Icon format: ");

        $r12 = r0.<com.android.server.pm.ShortcutService: android.graphics.Bitmap$CompressFormat mIconPersistFormat>;

        virtualinvoke r19.<java.io.PrintWriter: void println(java.lang.Object)>($r12);

        virtualinvoke r19.<java.io.PrintWriter: void print(java.lang.String)>("    Icon quality: ");

        $i6 = r0.<com.android.server.pm.ShortcutService: int mIconPersistQuality>;

        virtualinvoke r19.<java.io.PrintWriter: void println(int)>($i6);

        virtualinvoke r19.<java.io.PrintWriter: void print(java.lang.String)>("    saveDelayMillis: ");

        $i7 = r0.<com.android.server.pm.ShortcutService: int mSaveDelayMillis>;

        virtualinvoke r19.<java.io.PrintWriter: void println(int)>($i7);

        virtualinvoke r19.<java.io.PrintWriter: void print(java.lang.String)>("    resetInterval: ");

        $l8 = r0.<com.android.server.pm.ShortcutService: long mResetInterval>;

        virtualinvoke r19.<java.io.PrintWriter: void println(long)>($l8);

        virtualinvoke r19.<java.io.PrintWriter: void print(java.lang.String)>("    maxUpdatesPerInterval: ");

        $i9 = r0.<com.android.server.pm.ShortcutService: int mMaxUpdatesPerInterval>;

        virtualinvoke r19.<java.io.PrintWriter: void println(int)>($i9);

        virtualinvoke r19.<java.io.PrintWriter: void print(java.lang.String)>("    maxShortcutsPerActivity: ");

        $i10 = r0.<com.android.server.pm.ShortcutService: int mMaxShortcuts>;

        virtualinvoke r19.<java.io.PrintWriter: void println(int)>($i10);

        virtualinvoke r19.<java.io.PrintWriter: void println()>();

        $r13 = r0.<com.android.server.pm.ShortcutService: com.android.internal.util.StatLogger mStatLogger>;

        virtualinvoke $r13.<com.android.internal.util.StatLogger: void dump(java.io.PrintWriter,java.lang.String)>(r19, "  ");

        virtualinvoke r19.<java.io.PrintWriter: void println()>();

        virtualinvoke r19.<java.io.PrintWriter: void print(java.lang.String)>("  #Failures: ");

        $i11 = r0.<com.android.server.pm.ShortcutService: int mWtfCount>;

        virtualinvoke r19.<java.io.PrintWriter: void println(int)>($i11);

        $r14 = r0.<com.android.server.pm.ShortcutService: java.lang.Exception mLastWtfStacktrace>;

        if $r14 == null goto label02;

        virtualinvoke r19.<java.io.PrintWriter: void print(java.lang.String)>("  Last failure stack trace: ");

        $r16 = r0.<com.android.server.pm.ShortcutService: java.lang.Exception mLastWtfStacktrace>;

        $r17 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r16);

        virtualinvoke r19.<java.io.PrintWriter: void println(java.lang.String)>($r17);

     label02:
        virtualinvoke r19.<java.io.PrintWriter: void println()>();

        $r15 = r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutBitmapSaver mShortcutBitmapSaver>;

        virtualinvoke $r15.<com.android.server.pm.ShortcutBitmapSaver: void dumpLocked(java.io.PrintWriter,java.lang.String)>(r19, "  ");

        virtualinvoke r19.<java.io.PrintWriter: void println()>();

     label03:
        i15 = 0;

     label04:
        $r20 = r0.<com.android.server.pm.ShortcutService: android.util.SparseArray mUsers>;

        $i16 = virtualinvoke $r20.<android.util.SparseArray: int size()>();

        if i15 >= $i16 goto label06;

        $r6 = r0.<com.android.server.pm.ShortcutService: android.util.SparseArray mUsers>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(i15);

        r21 = (com.android.server.pm.ShortcutUser) $r7;

        $i2 = virtualinvoke r21.<com.android.server.pm.ShortcutUser: int getUserId()>();

        $z2 = virtualinvoke r1.<com.android.server.pm.ShortcutService$DumpFilter: boolean isUserMatch(int)>($i2);

        if $z2 == 0 goto label05;

        virtualinvoke r21.<com.android.server.pm.ShortcutUser: void dump(java.io.PrintWriter,java.lang.String,com.android.server.pm.ShortcutService$DumpFilter)>(r19, "  ", r1);

        virtualinvoke r19.<java.io.PrintWriter: void println()>();

     label05:
        i15 = i15 + 1;

        goto label04;

     label06:
        i17 = 0;

     label07:
        $r3 = r0.<com.android.server.pm.ShortcutService: android.util.SparseArray mShortcutNonPersistentUsers>;

        $i0 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        if i17 >= $i0 goto label09;

        $r4 = r0.<com.android.server.pm.ShortcutService: android.util.SparseArray mShortcutNonPersistentUsers>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i17);

        r22 = (com.android.server.pm.ShortcutNonPersistentUser) $r5;

        $i1 = virtualinvoke r22.<com.android.server.pm.ShortcutNonPersistentUser: int getUserId()>();

        $z1 = virtualinvoke r1.<com.android.server.pm.ShortcutService$DumpFilter: boolean isUserMatch(int)>($i1);

        if $z1 == 0 goto label08;

        virtualinvoke r22.<com.android.server.pm.ShortcutNonPersistentUser: void dump(java.io.PrintWriter,java.lang.String,com.android.server.pm.ShortcutService$DumpFilter)>(r19, "  ", r1);

        virtualinvoke r19.<java.io.PrintWriter: void println()>();

     label08:
        i17 = i17 + 1;

        goto label07;

     label09:
        exitmonitor r2;

     label10:
        return;

     label11:
        $r18 := @caughtexception;

     label12:
        exitmonitor r2;

     label13:
        throw $r18;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    private void dumpUid(java.io.PrintWriter)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.Object r1;
        int i0, i1, $i2, i4;
        android.util.SparseIntArray $r2, $r3, $r4;
        boolean $z0;
        android.util.SparseLongArray $r5;
        long $l3;
        java.lang.Throwable $r6;
        java.io.PrintWriter r7;

        r0 := @this: com.android.server.pm.ShortcutService;

        r7 := @parameter0: java.io.PrintWriter;

        r1 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        virtualinvoke r7.<java.io.PrintWriter: void println(java.lang.String)>("** SHORTCUT MANAGER UID STATES (dumpsys shortcut -n -u)");

     label02:
        i4 = 0;

     label03:
        $r2 = r0.<com.android.server.pm.ShortcutService: android.util.SparseIntArray mUidState>;

        $i2 = virtualinvoke $r2.<android.util.SparseIntArray: int size()>();

        if i4 >= $i2 goto label06;

        $r3 = r0.<com.android.server.pm.ShortcutService: android.util.SparseIntArray mUidState>;

        i0 = virtualinvoke $r3.<android.util.SparseIntArray: int keyAt(int)>(i4);

        $r4 = r0.<com.android.server.pm.ShortcutService: android.util.SparseIntArray mUidState>;

        i1 = virtualinvoke $r4.<android.util.SparseIntArray: int valueAt(int)>(i4);

        virtualinvoke r7.<java.io.PrintWriter: void print(java.lang.String)>("    UID=");

        virtualinvoke r7.<java.io.PrintWriter: void print(int)>(i0);

        virtualinvoke r7.<java.io.PrintWriter: void print(java.lang.String)>(" state=");

        virtualinvoke r7.<java.io.PrintWriter: void print(int)>(i1);

        $z0 = specialinvoke r0.<com.android.server.pm.ShortcutService: boolean isProcessStateForeground(int)>(i1);

        if $z0 == 0 goto label04;

        virtualinvoke r7.<java.io.PrintWriter: void print(java.lang.String)>("  [FG]");

     label04:
        virtualinvoke r7.<java.io.PrintWriter: void print(java.lang.String)>("  last FG=");

        $r5 = r0.<com.android.server.pm.ShortcutService: android.util.SparseLongArray mUidLastForegroundElapsedTime>;

        $l3 = virtualinvoke $r5.<android.util.SparseLongArray: long get(int)>(i0);

        virtualinvoke r7.<java.io.PrintWriter: void print(long)>($l3);

        virtualinvoke r7.<java.io.PrintWriter: void println()>();

     label05:
        i4 = i4 + 1;

        goto label03;

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r6 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private void enforceCallingOrSelfPermission(java.lang.String, java.lang.String)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String r1, r2;
        boolean $z0;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.pm.ShortcutService: boolean isCallerSystem()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectEnforceCallingPermission(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    private void enforceResetThrottlingPermission()
    {
        com.android.server.pm.ShortcutService r0;
        boolean $z0;

        r0 := @this: com.android.server.pm.ShortcutService;

        $z0 = specialinvoke r0.<com.android.server.pm.ShortcutService: boolean isCallerSystem()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        specialinvoke r0.<com.android.server.pm.ShortcutService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.RESET_SHORTCUT_MANAGER_THROTTLING", null);

        return;
    }

    private void enforceShell()
    {
        com.android.server.pm.ShortcutService r0;
        boolean $z0;
        java.lang.SecurityException $r1;

        r0 := @this: com.android.server.pm.ShortcutService;

        $z0 = specialinvoke r0.<com.android.server.pm.ShortcutService: boolean isCallerShell()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.SecurityException;

        specialinvoke $r1.<java.lang.SecurityException: void <init>(java.lang.String)>("Caller must be shell");

        throw $r1;
    }

    private void enforceSystem()
    {
        com.android.server.pm.ShortcutService r0;
        boolean $z0;
        java.lang.SecurityException $r1;

        r0 := @this: com.android.server.pm.ShortcutService;

        $z0 = specialinvoke r0.<com.android.server.pm.ShortcutService: boolean isCallerSystem()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.SecurityException;

        specialinvoke $r1.<java.lang.SecurityException: void <init>(java.lang.String)>("Caller must be system");

        throw $r1;
    }

    private void enforceSystemOrShell()
    {
        com.android.server.pm.ShortcutService r0;
        boolean $z0, $z1;
        java.lang.SecurityException $r1;

        r0 := @this: com.android.server.pm.ShortcutService;

        $z0 = specialinvoke r0.<com.android.server.pm.ShortcutService: boolean isCallerSystem()>();

        if $z0 != 0 goto label2;

        $z1 = specialinvoke r0.<com.android.server.pm.ShortcutService: boolean isCallerShell()>();

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        $r1 = new java.lang.SecurityException;

        specialinvoke $r1.<java.lang.SecurityException: void <init>(java.lang.String)>("Caller must be system or shell");

        throw $r1;

     label2:
        return;
    }

    private void fillInDefaultActivity(java.util.List)
    {
        com.android.server.pm.ShortcutService r0;
        java.util.List r1;
        android.content.pm.ShortcutInfo r2;
        int $i0, $i1, i2;
        java.lang.Object $r3;
        android.content.ComponentName $r4, r11, r12;
        java.lang.String $r5, $r8, $r10;
        java.lang.StringBuilder $r6;
        boolean z0;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.util.List;

        r11 = null;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i2 = $i0 - 1;

     label1:
        if i2 < 0 goto label6;

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        r2 = (android.content.pm.ShortcutInfo) $r3;

        r12 = r11;

        $r4 = virtualinvoke r2.<android.content.pm.ShortcutInfo: android.content.ComponentName getActivity()>();

        if $r4 != null goto label5;

        r12 = r11;

        if r11 != null goto label4;

        $r5 = virtualinvoke r2.<android.content.pm.ShortcutInfo: java.lang.String getPackage()>();

        $i1 = virtualinvoke r2.<android.content.pm.ShortcutInfo: int getUserId()>();

        r12 = virtualinvoke r0.<com.android.server.pm.ShortcutService: android.content.ComponentName injectGetDefaultMainActivity(java.lang.String,int)>($r5, $i1);

        if r12 == null goto label2;

        z0 = 1;

        goto label3;

     label2:
        z0 = 0;

     label3:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Launcher activity not found for package ");

        $r8 = virtualinvoke r2.<android.content.pm.ShortcutInfo: java.lang.String getPackage()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean,java.lang.String)>(z0, $r10);

     label4:
        virtualinvoke r2.<android.content.pm.ShortcutInfo: void setActivity(android.content.ComponentName)>(r12);

     label5:
        i2 = i2 + -1;

        r11 = r12;

        goto label1;

     label6:
        return;
    }

    private void fixUpIncomingShortcutInfo(android.content.pm.ShortcutInfo, boolean)
    {
        com.android.server.pm.ShortcutService r0;
        android.content.pm.ShortcutInfo r1;
        boolean z0;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: android.content.pm.ShortcutInfo;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void fixUpIncomingShortcutInfo(android.content.pm.ShortcutInfo,boolean,boolean)>(r1, z0, 0);

        return;
    }

    private void fixUpIncomingShortcutInfo(android.content.pm.ShortcutInfo, boolean, boolean)
    {
        com.android.server.pm.ShortcutService r0;
        android.content.pm.ShortcutInfo r1;
        boolean z0, $z1, z2, z3, z4, z5;
        android.content.ComponentName $r3, $r6, $r8, $r12, $r18, $r21;
        int $i0, $i1, $i2;
        android.graphics.drawable.Icon $r4, $r27;
        java.lang.String $r7, $r9, $r15, $r17, $r24;
        java.lang.StringBuilder $r10, $r19;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: android.content.pm.ShortcutInfo;

        z2 := @parameter1: boolean;

        z0 := @parameter2: boolean;

        $z1 = virtualinvoke r1.<android.content.pm.ShortcutInfo: boolean isReturnedByServer()>();

        if $z1 == 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ShortcutService", "Re-publishing ShortcutInfo returned by server is not supported. Some information such as icon may lost from shortcut.");

     label1:
        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "Null shortcut detected");

        $r3 = virtualinvoke r1.<android.content.pm.ShortcutInfo: android.content.ComponentName getActivity()>();

        if $r3 == null goto label2;

        $r7 = virtualinvoke r1.<android.content.pm.ShortcutInfo: java.lang.String getPackage()>();

        $r8 = virtualinvoke r1.<android.content.pm.ShortcutInfo: android.content.ComponentName getActivity()>();

        $r9 = virtualinvoke $r8.<android.content.ComponentName: java.lang.String getPackageName()>();

        z3 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot publish shortcut: activity ");

        $r12 = virtualinvoke r1.<android.content.pm.ShortcutInfo: android.content.ComponentName getActivity()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not belong to package ");

        $r15 = virtualinvoke r1.<android.content.pm.ShortcutInfo: java.lang.String getPackage()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean,java.lang.String)>(z3, $r17);

        $r18 = virtualinvoke r1.<android.content.pm.ShortcutInfo: android.content.ComponentName getActivity()>();

        $i2 = virtualinvoke r1.<android.content.pm.ShortcutInfo: int getUserId()>();

        z4 = virtualinvoke r0.<com.android.server.pm.ShortcutService: boolean injectIsMainActivity(android.content.ComponentName,int)>($r18, $i2);

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot publish shortcut: activity ");

        $r21 = virtualinvoke r1.<android.content.pm.ShortcutInfo: android.content.ComponentName getActivity()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not main activity");

        $r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean,java.lang.String)>(z4, $r24);

     label2:
        if z2 != 0 goto label5;

        virtualinvoke r1.<android.content.pm.ShortcutInfo: void enforceMandatoryFields(boolean)>(z0);

        if z0 != 0 goto label5;

        $r6 = virtualinvoke r1.<android.content.pm.ShortcutInfo: android.content.ComponentName getActivity()>();

        if $r6 == null goto label3;

        z5 = 1;

        goto label4;

     label3:
        z5 = 0;

     label4:
        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean,java.lang.String)>(z5, "Cannot publish shortcut: target activity is not set");

     label5:
        $r27 = virtualinvoke r1.<android.content.pm.ShortcutInfo: android.graphics.drawable.Icon getIcon()>();

        if $r27 == null goto label6;

        $r4 = virtualinvoke r1.<android.content.pm.ShortcutInfo: android.graphics.drawable.Icon getIcon()>();

        staticinvoke <android.content.pm.ShortcutInfo: android.graphics.drawable.Icon validateIcon(android.graphics.drawable.Icon)>($r4);

     label6:
        $i0 = virtualinvoke r1.<android.content.pm.ShortcutInfo: int getFlags()>();

        $i1 = $i0 & 8192;

        virtualinvoke r1.<android.content.pm.ShortcutInfo: void replaceFlags(int)>($i1);

        return;
    }

    private void forUpdatedPackages(int, long, boolean, java.util.function.Consumer)
    {
        com.android.server.pm.ShortcutService r0;
        long l0, $l2;
        boolean z0;
        java.util.function.Consumer r1;
        java.util.List r2;
        android.content.pm.PackageInfo r3;
        int $i1, i4, i5;
        java.lang.Object $r4;
        android.content.pm.ApplicationInfo $r5;
        byte $b3;

        r0 := @this: com.android.server.pm.ShortcutService;

        i4 := @parameter0: int;

        l0 := @parameter1: long;

        z0 := @parameter2: boolean;

        r1 := @parameter3: java.util.function.Consumer;

        r2 = virtualinvoke r0.<com.android.server.pm.ShortcutService: java.util.List getInstalledPackages(int)>(i4);

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        i5 = $i1 - 1;

     label1:
        if i5 < 0 goto label4;

        $r4 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i5);

        r3 = (android.content.pm.PackageInfo) $r4;

        if z0 != 0 goto label2;

        $l2 = r3.<android.content.pm.PackageInfo: long lastUpdateTime>;

        $b3 = $l2 cmp l0;

        if $b3 < 0 goto label3;

     label2:
        $r5 = r3.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        interfaceinvoke r1.<java.util.function.Consumer: void accept(java.lang.Object)>($r5);

     label3:
        i5 = i5 + -1;

        goto label1;

     label4:
        return;
    }

    static java.lang.String formatTime(long)
    {
        long l0;
        java.lang.String $r0;

        l0 := @parameter0: long;

        $r0 = staticinvoke <android.text.format.TimeMigrationUtils: java.lang.String formatMillisWithFixedFormat(long)>(l0);

        return $r0;
    }

    private android.util.AtomicFile getBaseStateFile()
    {
        com.android.server.pm.ShortcutService r0;
        java.io.File $r2, $r3;
        android.util.AtomicFile $r4;

        r0 := @this: com.android.server.pm.ShortcutService;

        $r2 = new java.io.File;

        $r3 = virtualinvoke r0.<com.android.server.pm.ShortcutService: java.io.File injectSystemDataPath()>();

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, "shortcut_service.xml");

        virtualinvoke $r2.<java.io.File: boolean mkdirs()>();

        $r4 = new android.util.AtomicFile;

        specialinvoke $r4.<android.util.AtomicFile: void <init>(java.io.File)>($r2);

        return $r4;
    }

    private int getCallingUserId()
    {
        com.android.server.pm.ShortcutService r0;
        int $i0, $i1;

        r0 := @this: com.android.server.pm.ShortcutService;

        $i0 = virtualinvoke r0.<com.android.server.pm.ShortcutService: int injectBinderCallingUid()>();

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i0);

        return $i1;
    }

    private android.content.Intent getMainActivityIntent()
    {
        com.android.server.pm.ShortcutService r0;
        android.content.Intent $r2;

        r0 := @this: com.android.server.pm.ShortcutService;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.MAIN");

        virtualinvoke $r2.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>("android.intent.category.LAUNCHER");

        return $r2;
    }

    private android.content.pm.ParceledListSlice getShortcutsWithQueryLocked(java.lang.String, int, int, java.util.function.Predicate)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String r1;
        int i0, i1;
        java.util.function.Predicate r2;
        java.util.ArrayList $r4;
        com.android.server.pm.ShortcutPackage $r5;
        android.content.pm.ParceledListSlice $r6;
        java.util.List $r7;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.util.function.Predicate;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = virtualinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutPackage getPackageShortcutsForPublisherLocked(java.lang.String,int)>(r1, i0);

        virtualinvoke $r5.<com.android.server.pm.ShortcutPackage: void findAll(java.util.List,java.util.function.Predicate,int)>($r4, r2, i1);

        $r6 = new android.content.pm.ParceledListSlice;

        $r7 = specialinvoke r0.<com.android.server.pm.ShortcutService: java.util.List setReturnedByServer(java.util.List)>($r4);

        specialinvoke $r6.<android.content.pm.ParceledListSlice: void <init>(java.util.List)>($r7);

        return $r6;
    }

    private void handlePackageAdded(java.lang.String, int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        java.lang.Object r1;
        com.android.server.pm.ShortcutUser r2;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.pm.ShortcutService;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r2 = virtualinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutUser getUserShortcutsLocked(int)>(i0);

        virtualinvoke r2.<com.android.server.pm.ShortcutUser: void attemptToRestoreIfNeededAndSave(com.android.server.pm.ShortcutService,java.lang.String,int)>(r0, r4, i0);

        virtualinvoke r2.<com.android.server.pm.ShortcutUser: void rescanPackageIfNeeded(java.lang.String,boolean)>(r4, 1);

        exitmonitor r1;

     label2:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void verifyStates()>();

        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void handlePackageChanged(java.lang.String, int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        java.lang.Object r1;
        boolean $z0;
        com.android.server.pm.ShortcutUser $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.pm.ShortcutService;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<com.android.server.pm.ShortcutService: boolean isPackageInstalled(java.lang.String,int)>(r4, i0);

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void handlePackageRemoved(java.lang.String,int)>(r4, i0);

        return;

     label1:
        r1 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r1;

     label2:
        $r2 = virtualinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutUser getUserShortcutsLocked(int)>(i0);

        virtualinvoke $r2.<com.android.server.pm.ShortcutUser: void rescanPackageIfNeeded(java.lang.String,boolean)>(r4, 1);

        exitmonitor r1;

     label3:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void verifyStates()>();

        return;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r3;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private void handlePackageDataCleared(java.lang.String, int)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String r1;
        int i0;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void cleanUpPackageForAllLoadedUsers(java.lang.String,int,boolean)>(r1, i0, 1);

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void verifyStates()>();

        return;
    }

    private void handlePackageRemoved(java.lang.String, int)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String r1;
        int i0;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void cleanUpPackageForAllLoadedUsers(java.lang.String,int,boolean)>(r1, i0, 0);

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void verifyStates()>();

        return;
    }

    private void handlePackageUpdateFinished(java.lang.String, int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        java.lang.Object r1;
        com.android.server.pm.ShortcutUser r2;
        boolean $z0;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.pm.ShortcutService;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r2 = virtualinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutUser getUserShortcutsLocked(int)>(i0);

        virtualinvoke r2.<com.android.server.pm.ShortcutUser: void attemptToRestoreIfNeededAndSave(com.android.server.pm.ShortcutService,java.lang.String,int)>(r0, r4, i0);

        $z0 = virtualinvoke r0.<com.android.server.pm.ShortcutService: boolean isPackageInstalled(java.lang.String,int)>(r4, i0);

        if $z0 == 0 goto label2;

        virtualinvoke r2.<com.android.server.pm.ShortcutUser: void rescanPackageIfNeeded(java.lang.String,boolean)>(r4, 1);

     label2:
        exitmonitor r1;

     label3:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void verifyStates()>();

        return;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private void initialize()
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.server.pm.ShortcutService: void loadConfigurationLocked()>();

        specialinvoke r0.<com.android.server.pm.ShortcutService: void loadBaseStateLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private boolean isApplicationFlagSet(java.lang.String, int, int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0, i1, $i2, $i3;
        java.lang.String r1;
        android.content.pm.ApplicationInfo r2;
        boolean z0;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = virtualinvoke r0.<com.android.server.pm.ShortcutService: android.content.pm.ApplicationInfo injectApplicationInfoWithUninstalled(java.lang.String,int)>(r1, i0);

        if r2 == null goto label1;

        $i2 = r2.<android.content.pm.ApplicationInfo: int flags>;

        $i3 = $i2 & i1;

        if $i3 != i1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean isCallerShell()
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 = virtualinvoke r0.<com.android.server.pm.ShortcutService: int injectBinderCallingUid()>();

        if i0 == 2000 goto label2;

        if i0 != 0 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    private boolean isCallerSystem()
    {
        com.android.server.pm.ShortcutService r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.server.pm.ShortcutService;

        $i0 = virtualinvoke r0.<com.android.server.pm.ShortcutService: int injectBinderCallingUid()>();

        $z0 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>($i0, 1000);

        return $z0;
    }

    static boolean isClockValid(long)
    {
        long l0;
        byte $b1;
        boolean z0;

        l0 := @parameter0: long;

        $b1 = l0 cmp 1420070400L;

        if $b1 < 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private static boolean isEphemeralApp(android.content.pm.ApplicationInfo)
    {
        android.content.pm.ApplicationInfo r0;
        boolean $z0, z1;

        r0 := @parameter0: android.content.pm.ApplicationInfo;

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<android.content.pm.ApplicationInfo: boolean isInstantApp()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    private static boolean isInstalled(android.content.pm.ActivityInfo)
    {
        android.content.pm.ActivityInfo r0;
        android.content.pm.ApplicationInfo $r1;
        boolean $z0, z1;

        r0 := @parameter0: android.content.pm.ActivityInfo;

        if r0 == null goto label1;

        $r1 = r0.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $z0 = staticinvoke <com.android.server.pm.ShortcutService: boolean isInstalled(android.content.pm.ApplicationInfo)>($r1);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    private static boolean isInstalled(android.content.pm.ApplicationInfo)
    {
        android.content.pm.ApplicationInfo r0;
        boolean $z0, z1;
        int $i0, $i1;

        r0 := @parameter0: android.content.pm.ApplicationInfo;

        if r0 == null goto label1;

        $z0 = r0.<android.content.pm.ApplicationInfo: boolean enabled>;

        if $z0 == 0 goto label1;

        $i0 = r0.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = $i0 & 8388608;

        if $i1 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    private static boolean isInstalled(android.content.pm.PackageInfo)
    {
        android.content.pm.PackageInfo r0;
        android.content.pm.ApplicationInfo $r1;
        boolean $z0, z1;

        r0 := @parameter0: android.content.pm.PackageInfo;

        if r0 == null goto label1;

        $r1 = r0.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $z0 = staticinvoke <com.android.server.pm.ShortcutService: boolean isInstalled(android.content.pm.ApplicationInfo)>($r1);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    private static android.content.pm.ActivityInfo isInstalledOrNull(android.content.pm.ActivityInfo)
    {
        boolean $z0;
        android.content.pm.ActivityInfo r0;

        r0 := @parameter0: android.content.pm.ActivityInfo;

        $z0 = staticinvoke <com.android.server.pm.ShortcutService: boolean isInstalled(android.content.pm.ActivityInfo)>(r0);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        r0 = null;

     label2:
        return r0;
    }

    private static android.content.pm.ApplicationInfo isInstalledOrNull(android.content.pm.ApplicationInfo)
    {
        boolean $z0;
        android.content.pm.ApplicationInfo r0;

        r0 := @parameter0: android.content.pm.ApplicationInfo;

        $z0 = staticinvoke <com.android.server.pm.ShortcutService: boolean isInstalled(android.content.pm.ApplicationInfo)>(r0);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        r0 = null;

     label2:
        return r0;
    }

    private static android.content.pm.PackageInfo isInstalledOrNull(android.content.pm.PackageInfo)
    {
        boolean $z0;
        android.content.pm.PackageInfo r0;

        r0 := @parameter0: android.content.pm.PackageInfo;

        $z0 = staticinvoke <com.android.server.pm.ShortcutService: boolean isInstalled(android.content.pm.PackageInfo)>(r0);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        r0 = null;

     label2:
        return r0;
    }

    private boolean isProcessStateForeground(int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 := @parameter0: int;

        if i0 > 5 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean isUserLoadedLocked(int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        android.util.SparseArray $r1;
        java.lang.Object $r2;
        boolean z0;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.pm.ShortcutService: android.util.SparseArray mUsers>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        if $r2 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    static void lambda$cleanUpPackageLocked$8(java.lang.String, int, com.android.server.pm.ShortcutLauncher)
    {
        java.lang.String r0;
        int i0;
        com.android.server.pm.ShortcutLauncher r1;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: com.android.server.pm.ShortcutLauncher;

        virtualinvoke r1.<com.android.server.pm.ShortcutLauncher: boolean cleanUpPackage(java.lang.String,int)>(r0, i0);

        return;
    }

    static void lambda$cleanUpPackageLocked$9(com.android.server.pm.ShortcutPackage)
    {
        com.android.server.pm.ShortcutPackage r0;

        r0 := @parameter0: com.android.server.pm.ShortcutPackage;

        virtualinvoke r0.<com.android.server.pm.ShortcutPackage: void refreshPinnedFlags()>();

        return;
    }

    static void lambda$getBackupPayload$13(com.android.server.pm.ShortcutPackageItem)
    {
        com.android.server.pm.ShortcutPackageItem r0;

        r0 := @parameter0: com.android.server.pm.ShortcutPackageItem;

        virtualinvoke r0.<com.android.server.pm.ShortcutPackageItem: void refreshPackageSignatureAndSave()>();

        return;
    }

    static void lambda$getBackupPayload$14(com.android.server.pm.ShortcutPackage)
    {
        com.android.server.pm.ShortcutPackage r0;

        r0 := @parameter0: com.android.server.pm.ShortcutPackage;

        virtualinvoke r0.<com.android.server.pm.ShortcutPackage: boolean rescanPackageIfNeeded(boolean,boolean)>(0, 1);

        return;
    }

    static void lambda$getBackupPayload$15(com.android.server.pm.ShortcutLauncher)
    {
        com.android.server.pm.ShortcutLauncher r0;

        r0 := @parameter0: com.android.server.pm.ShortcutLauncher;

        virtualinvoke r0.<com.android.server.pm.ShortcutLauncher: void ensurePackageInfo()>();

        return;
    }

    static void lambda$getShareTargets$6(java.util.List, android.content.IntentFilter, com.android.server.pm.ShortcutPackage)
    {
        java.util.List r0, $r3;
        android.content.IntentFilter r1;
        com.android.server.pm.ShortcutPackage r2;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: android.content.IntentFilter;

        r2 := @parameter2: com.android.server.pm.ShortcutPackage;

        $r3 = virtualinvoke r2.<com.android.server.pm.ShortcutPackage: java.util.List getMatchingShareTargets(android.content.IntentFilter)>(r1);

        interfaceinvoke r0.<java.util.List: boolean addAll(java.util.Collection)>($r3);

        return;
    }

    static boolean lambda$getShortcuts$5(int, android.content.pm.ShortcutInfo)
    {
        int i0, $i1, $i2;
        android.content.pm.ShortcutInfo r0;
        boolean $z0, z1;

        i0 := @parameter0: int;

        r0 := @parameter1: android.content.pm.ShortcutInfo;

        $z0 = virtualinvoke r0.<android.content.pm.ShortcutInfo: boolean isVisibleToPublisher()>();

        if $z0 == 0 goto label1;

        $i1 = virtualinvoke r0.<android.content.pm.ShortcutInfo: int getFlags()>();

        $i2 = $i1 & i0;

        if $i2 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    static void lambda$handleLocaleChanged$10(com.android.server.pm.ShortcutUser)
    {
        com.android.server.pm.ShortcutUser r0;

        r0 := @parameter0: com.android.server.pm.ShortcutUser;

        virtualinvoke r0.<com.android.server.pm.ShortcutUser: void detectLocaleChange()>();

        return;
    }

    static boolean lambda$prepareChangedShortcuts$19(android.util.ArraySet, android.content.pm.ShortcutInfo)
    {
        android.util.ArraySet r0;
        android.content.pm.ShortcutInfo r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @parameter0: android.util.ArraySet;

        r1 := @parameter1: android.content.pm.ShortcutInfo;

        $r2 = virtualinvoke r1.<android.content.pm.ShortcutInfo: java.lang.String getId()>();

        $z0 = virtualinvoke r0.<android.util.ArraySet: boolean contains(java.lang.Object)>($r2);

        return $z0;
    }

    static boolean lambda$prepareChangedShortcuts$20(android.util.ArraySet, android.content.pm.ShortcutInfo)
    {
        android.util.ArraySet r0;
        android.content.pm.ShortcutInfo r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @parameter0: android.util.ArraySet;

        r1 := @parameter1: android.content.pm.ShortcutInfo;

        $r2 = virtualinvoke r1.<android.content.pm.ShortcutInfo: java.lang.String getId()>();

        $z0 = virtualinvoke r0.<android.util.ArraySet: boolean contains(java.lang.Object)>($r2);

        return $z0;
    }

    static boolean lambda$removeAllDynamicShortcuts$4(android.content.pm.ShortcutInfo)
    {
        android.content.pm.ShortcutInfo r0;
        boolean $z0, $z1, $z2, $z3, z4;

        r0 := @parameter0: android.content.pm.ShortcutInfo;

        $z0 = virtualinvoke r0.<android.content.pm.ShortcutInfo: boolean isVisibleToPublisher()>();

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r0.<android.content.pm.ShortcutInfo: boolean isDynamic()>();

        if $z1 == 0 goto label2;

        $z2 = virtualinvoke r0.<android.content.pm.ShortcutInfo: boolean isCached()>();

        if $z2 != 0 goto label1;

        $z3 = virtualinvoke r0.<android.content.pm.ShortcutInfo: boolean isPinned()>();

        if $z3 == 0 goto label2;

     label1:
        z4 = 1;

        goto label3;

     label2:
        z4 = 0;

     label3:
        return z4;
    }

    static boolean lambda$setDynamicShortcuts$3(android.content.pm.ShortcutInfo)
    {
        android.content.pm.ShortcutInfo r0;
        boolean $z0, $z1, $z2, $z3, z4;

        r0 := @parameter0: android.content.pm.ShortcutInfo;

        $z0 = virtualinvoke r0.<android.content.pm.ShortcutInfo: boolean isVisibleToPublisher()>();

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r0.<android.content.pm.ShortcutInfo: boolean isDynamic()>();

        if $z1 == 0 goto label2;

        $z2 = virtualinvoke r0.<android.content.pm.ShortcutInfo: boolean isCached()>();

        if $z2 != 0 goto label1;

        $z3 = virtualinvoke r0.<android.content.pm.ShortcutInfo: boolean isPinned()>();

        if $z3 == 0 goto label2;

     label1:
        z4 = 1;

        goto label3;

     label2:
        z4 = 0;

     label3:
        return z4;
    }

    static void lambda$verifyStatesInner$18(com.android.server.pm.ShortcutUser)
    {
        com.android.server.pm.ShortcutUser r0;
        com.android.server.pm.'-$$Lambda$sAnQjWlQDJoJcSwHDDCKcU2fneU' $r1;
        java.util.function.Consumer r2;

        r0 := @parameter0: com.android.server.pm.ShortcutUser;

        $r1 = <com.android.server.pm._$$Lambda$sAnQjWlQDJoJcSwHDDCKcU2fneU: com.android.server.pm.'-$$Lambda$sAnQjWlQDJoJcSwHDDCKcU2fneU' INSTANCE>;

        r2 = (java.util.function.Consumer) $r1;

        virtualinvoke r0.<com.android.server.pm.ShortcutUser: void forAllPackageItems(java.util.function.Consumer)>(r2);

        return;
    }

    public static void lambda$w7_ouiisHmMMzTkQ_HUAHbawlLY(com.android.server.pm.ShortcutService, java.io.PrintWriter)
    {
        com.android.server.pm.ShortcutService r0;
        java.io.PrintWriter r1;

        r0 := @parameter0: com.android.server.pm.ShortcutService;

        r1 := @parameter1: java.io.PrintWriter;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void dumpInner(java.io.PrintWriter)>(r1);

        return;
    }

    private void loadBaseStateLocked()
    {
        com.android.server.pm.ShortcutService r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.nio.charset.Charset $r2;
        java.lang.String $r3, $r6, $r7, $r10, $r18, r22;
        int $i1, i6, i7;
        boolean $z0, $z1;
        long $l2;
        java.lang.Throwable $r11, $r12, $r13, $r19;
        java.lang.StringBuilder $r14, r23, r24;
        java.io.File $r16;
        android.util.AtomicFile r20;
        java.io.FileInputStream r21;
        byte b8;

        r0 := @this: com.android.server.pm.ShortcutService;

        r0.<com.android.server.pm.ShortcutService: long mRawLastResetTime> = 0L;

        r20 = specialinvoke r0.<com.android.server.pm.ShortcutService: android.util.AtomicFile getBaseStateFile()>();

     label01:
        r21 = virtualinvoke r20.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

     label02:
        r1 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        $r2 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r3 = virtualinvoke $r2.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r21, $r3);

     label03:
        i6 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

     label04:
        if i6 == 1 goto label21;

        if i6 == 2 goto label05;

        goto label03;

     label05:
        i7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        r22 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

     label06:
        if i7 != 1 goto label11;

     label07:
        $r7 = "root";

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r22);

        if $z1 != 0 goto label03;

        r23 = new java.lang.StringBuilder;

        specialinvoke r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid root tag: ");

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $r10 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ShortcutService", $r10);

     label08:
        if r21 == null goto label10;

     label09:
        virtualinvoke r21.<java.io.FileInputStream: void close()>();

     label10:
        return;

     label11:
        b8 = -1;

     label12:
        $i1 = virtualinvoke r22.<java.lang.String: int hashCode()>();

        if $i1 == -68726522 goto label14;

     label13:
        goto label16;

     label14:
        $z0 = virtualinvoke r22.<java.lang.String: boolean equals(java.lang.Object)>("last_reset_time");

        if $z0 == 0 goto label13;

     label15:
        b8 = 0;

     label16:
        if b8 == 0 goto label19;

     label17:
        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid tag: ");

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $r6 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ShortcutService", $r6);

     label18:
        goto label20;

     label19:
        $l2 = staticinvoke <com.android.server.pm.ShortcutService: long parseLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "value");

        r0.<com.android.server.pm.ShortcutService: long mRawLastResetTime> = $l2;

     label20:
        goto label03;

     label21:
        if r21 == null goto label32;

     label22:
        virtualinvoke r21.<java.io.FileInputStream: void close()>();

     label23:
        goto label32;

     label24:
        $r11 := @caughtexception;

        if r21 == null goto label29;

     label25:
        virtualinvoke r21.<java.io.FileInputStream: void close()>();

     label26:
        goto label29;

     label27:
        $r19 := @caughtexception;

     label28:
        virtualinvoke $r11.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r19);

     label29:
        throw $r11;

     label30:
        $r13 := @caughtexception;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to read file ");

        $r16 = virtualinvoke r20.<android.util.AtomicFile: java.io.File getBaseFile()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ShortcutService", $r18, $r13);

        r0.<com.android.server.pm.ShortcutService: long mRawLastResetTime> = 0L;

        goto label32;

     label31:
        $r12 := @caughtexception;

     label32:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: long getLastResetTimeLocked()>();

        return;

        catch java.io.FileNotFoundException from label01 to label02 with label31;
        catch java.io.IOException from label01 to label02 with label30;
        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label30;
        catch java.lang.Throwable from label02 to label03 with label24;
        catch java.lang.Throwable from label03 to label04 with label24;
        catch java.lang.Throwable from label05 to label06 with label24;
        catch java.lang.Throwable from label07 to label08 with label24;
        catch java.io.FileNotFoundException from label09 to label10 with label31;
        catch java.io.IOException from label09 to label10 with label30;
        catch org.xmlpull.v1.XmlPullParserException from label09 to label10 with label30;
        catch java.lang.Throwable from label12 to label13 with label24;
        catch java.lang.Throwable from label14 to label15 with label24;
        catch java.lang.Throwable from label17 to label18 with label24;
        catch java.lang.Throwable from label19 to label20 with label24;
        catch java.io.FileNotFoundException from label22 to label23 with label31;
        catch java.io.IOException from label22 to label23 with label30;
        catch org.xmlpull.v1.XmlPullParserException from label22 to label23 with label30;
        catch java.lang.Throwable from label25 to label26 with label27;
        catch java.io.FileNotFoundException from label28 to label29 with label31;
        catch java.io.IOException from label28 to label29 with label30;
        catch org.xmlpull.v1.XmlPullParserException from label28 to label29 with label30;
        catch java.io.FileNotFoundException from label29 to label30 with label31;
        catch java.io.IOException from label29 to label30 with label30;
        catch org.xmlpull.v1.XmlPullParserException from label29 to label30 with label30;
    }

    private void loadConfigurationLocked()
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.pm.ShortcutService;

        $r1 = virtualinvoke r0.<com.android.server.pm.ShortcutService: java.lang.String injectShortcutManagerConstants()>();

        virtualinvoke r0.<com.android.server.pm.ShortcutService: boolean updateConfigurationLocked(java.lang.String)>($r1);

        return;
    }

    private com.android.server.pm.ShortcutUser loadUserInternal(int, java.io.InputStream, boolean) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException, com.android.server.pm.ShortcutService$InvalidFileFormatException
    {
        com.android.server.pm.ShortcutService r0;
        int i0, i1, i2;
        boolean z0, $z1;
        org.xmlpull.v1.XmlPullParser r1;
        java.io.BufferedInputStream $r2;
        java.nio.charset.Charset $r3;
        java.lang.String $r4, $r6, r10;
        java.io.InputStream r7;
        com.android.server.pm.ShortcutUser r9;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 := @parameter0: int;

        r7 := @parameter1: java.io.InputStream;

        z0 := @parameter2: boolean;

        $r2 = new java.io.BufferedInputStream;

        specialinvoke $r2.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r7);

        r9 = null;

        r1 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        $r3 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r4 = virtualinvoke $r3.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>($r2, $r4);

     label1:
        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 == 1 goto label4;

        if i1 == 2 goto label2;

        goto label1;

     label2:
        i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        r10 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        if i2 != 1 goto label3;

        $r6 = "user";

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z1 == 0 goto label3;

        r9 = staticinvoke <com.android.server.pm.ShortcutUser: com.android.server.pm.ShortcutUser loadFromXml(com.android.server.pm.ShortcutService,org.xmlpull.v1.XmlPullParser,int,boolean)>(r0, r1, i0, z0);

        goto label1;

     label3:
        staticinvoke <com.android.server.pm.ShortcutService: java.io.IOException throwForInvalidTag(int,java.lang.String)>(i2, r10);

        goto label1;

     label4:
        return r9;
    }

    private com.android.server.pm.ShortcutUser loadUserLocked(int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        java.lang.StringBuilder r1;
        android.util.AtomicFile $r2;
        java.io.File $r3, $r6;
        java.lang.Throwable $r4, $r9, $r10;
        java.lang.String $r8;
        java.io.FileInputStream r12;
        com.android.server.pm.ShortcutUser r13;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 := @parameter0: int;

        $r2 = new android.util.AtomicFile;

        $r3 = virtualinvoke r0.<com.android.server.pm.ShortcutService: java.io.File getUserFile(int)>(i0);

        specialinvoke $r2.<android.util.AtomicFile: void <init>(java.io.File)>($r3);

     label1:
        r12 = virtualinvoke $r2.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

     label2:
        r13 = specialinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutUser loadUserInternal(int,java.io.InputStream,boolean)>(i0, r12, 0);

     label3:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r12);

        return r13;

     label4:
        $r10 := @caughtexception;

        goto label8;

     label5:
        $r4 := @caughtexception;

     label6:
        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to read file ");

        $r6 = virtualinvoke $r2.<android.util.AtomicFile: java.io.File getBaseFile()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ShortcutService", $r8, $r4);

     label7:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r12);

        return null;

     label8:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r12);

        throw $r10;

     label9:
        $r9 := @caughtexception;

        return null;

        catch java.io.FileNotFoundException from label1 to label2 with label9;
        catch java.io.IOException from label2 to label3 with label5;
        catch org.xmlpull.v1.XmlPullParserException from label2 to label3 with label5;
        catch com.android.server.pm.ShortcutService$InvalidFileFormatException from label2 to label3 with label5;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label6 to label7 with label4;
    }

    private void notifyListeners(java.lang.String, int)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String r1;
        int i0;
        com.android.server.pm._$$Lambda$ShortcutService$DzwraUeMWDwA0XDfFxd3sGOsA0E $r2;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = new com.android.server.pm._$$Lambda$ShortcutService$DzwraUeMWDwA0XDfFxd3sGOsA0E;

        specialinvoke $r2.<com.android.server.pm._$$Lambda$ShortcutService$DzwraUeMWDwA0XDfFxd3sGOsA0E: void <init>(com.android.server.pm.ShortcutService,int,java.lang.String)>(r0, i0, r1);

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectPostToHandler(java.lang.Runnable)>($r2);

        return;
    }

    private void notifyShortcutChangeCallbacks(java.lang.String, int, java.util.List, java.util.List)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String r1;
        int i0;
        com.android.server.pm._$$Lambda$ShortcutService$C0yXUUdkpfa84Nq_Po6ovVJWCBk $r2;
        android.os.UserHandle $r3;
        java.util.List r4, r5, r6, r7;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r4 := @parameter2: java.util.List;

        r5 := @parameter3: java.util.List;

        r6 = specialinvoke r0.<com.android.server.pm.ShortcutService: java.util.List removeNonKeyFields(java.util.List)>(r4);

        r7 = specialinvoke r0.<com.android.server.pm.ShortcutService: java.util.List removeNonKeyFields(java.util.List)>(r5);

        $r2 = new com.android.server.pm._$$Lambda$ShortcutService$C0yXUUdkpfa84Nq_Po6ovVJWCBk;

        $r3 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>(i0);

        specialinvoke $r2.<com.android.server.pm._$$Lambda$ShortcutService$C0yXUUdkpfa84Nq_Po6ovVJWCBk: void <init>(com.android.server.pm.ShortcutService,int,java.util.List,java.lang.String,android.os.UserHandle,java.util.List)>(r0, i0, r6, r1, $r3, r7);

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectPostToHandler(java.lang.Runnable)>($r2);

        return;
    }

    static boolean parseBooleanAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String)
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1;
        long $l0;
        byte $b1;
        boolean z0;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        $l0 = staticinvoke <com.android.server.pm.ShortcutService: long parseLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, r1);

        $b1 = $l0 cmp 1L;

        if $b1 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    static boolean parseBooleanAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String, boolean)
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1;
        boolean z0, z1;
        long $l0, $l1;
        byte $b2;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $l0 = (long) z0;

        $l1 = staticinvoke <com.android.server.pm.ShortcutService: long parseLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r0, r1, $l0);

        $b2 = $l1 cmp 1L;

        if $b2 != 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    static android.content.ComponentName parseComponentNameAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String)
    {
        java.lang.String r0, r3;
        boolean $z0;
        android.content.ComponentName $r1;
        org.xmlpull.v1.XmlPullParser r2;

        r2 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r0 := @parameter1: java.lang.String;

        r3 = staticinvoke <com.android.server.pm.ShortcutService: java.lang.String parseStringAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r2, r0);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r1 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>(r3);

        return $r1;
    }

    private static com.android.server.pm.ShortcutService$DumpFilter parseDumpArgs(java.lang.String[])
    {
        java.lang.String r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r17, $r18, $r23, $r25;
        com.android.server.pm.ShortcutService$DumpFilter $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        int $i0, $i1, $i2, i3, i4, $i5, $i6;
        java.lang.IllegalArgumentException $r16, $r22, $r24, $r27;
        java.lang.StringBuilder $r19;
        java.lang.Throwable $r26;
        java.lang.String[] r28;

        r28 := @parameter0: java.lang.String[];

        $r2 = new com.android.server.pm.ShortcutService$DumpFilter;

        specialinvoke $r2.<com.android.server.pm.ShortcutService$DumpFilter: void <init>()>();

        if r28 != null goto label01;

        return $r2;

     label01:
        i3 = 0;

     label02:
        i4 = i3;

        $i5 = lengthof r28;

        if i3 >= $i5 goto label23;

        i4 = i3 + 1;

        r1 = r28[i3];

        $r4 = "-c";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label03;

        virtualinvoke $r2.<com.android.server.pm.ShortcutService$DumpFilter: void setDumpCheckIn(boolean)>(1);

        goto label22;

     label03:
        $r5 = "--checkin";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label04;

        virtualinvoke $r2.<com.android.server.pm.ShortcutService$DumpFilter: void setDumpCheckIn(boolean)>(1);

        virtualinvoke $r2.<com.android.server.pm.ShortcutService$DumpFilter: void setCheckInClear(boolean)>(1);

        goto label22;

     label04:
        $r6 = "-a";

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 != 0 goto label21;

        $r7 = "--all";

        $z3 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z3 == 0 goto label05;

        goto label21;

     label05:
        $r8 = "-u";

        $z4 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z4 != 0 goto label20;

        $r9 = "--uid";

        $z5 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z5 == 0 goto label06;

        goto label20;

     label06:
        $r10 = "-f";

        $z6 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z6 != 0 goto label19;

        $r11 = "--files";

        $z7 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z7 == 0 goto label07;

        goto label19;

     label07:
        $r12 = "-n";

        $z8 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z8 != 0 goto label18;

        $r13 = "--no-main";

        $z9 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z9 == 0 goto label08;

        goto label18;

     label08:
        $r14 = "--user";

        $z10 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z10 == 0 goto label13;

        $i1 = lengthof r28;

        if i4 >= $i1 goto label12;

     label09:
        $r25 = r28[i4];

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r25);

        virtualinvoke $r2.<com.android.server.pm.ShortcutService$DumpFilter: void addUser(int)>($i2);

     label10:
        i3 = i4 + 1;

        goto label02;

     label11:
        $r26 := @caughtexception;

        $r27 = new java.lang.IllegalArgumentException;

        specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>("Invalid user ID", $r26);

        throw $r27;

     label12:
        $r24 = new java.lang.IllegalArgumentException;

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Missing user ID for --user");

        throw $r24;

     label13:
        $r15 = "-p";

        $z11 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z11 != 0 goto label16;

        $r18 = "--package";

        $z12 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z12 == 0 goto label14;

        goto label16;

     label14:
        $z13 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("-");

        if $z13 != 0 goto label15;

        goto label23;

     label15:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown option ");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r22 = new java.lang.IllegalArgumentException;

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r23);

        throw $r22;

     label16:
        $i0 = lengthof r28;

        if i4 >= $i0 goto label17;

        $r17 = r28[i4];

        virtualinvoke $r2.<com.android.server.pm.ShortcutService$DumpFilter: void addPackageRegex(java.lang.String)>($r17);

        virtualinvoke $r2.<com.android.server.pm.ShortcutService$DumpFilter: void setDumpDetails(boolean)>(0);

        i3 = i4 + 1;

        goto label02;

     label17:
        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Missing package name for --package");

        throw $r16;

     label18:
        virtualinvoke $r2.<com.android.server.pm.ShortcutService$DumpFilter: void setDumpMain(boolean)>(0);

        goto label22;

     label19:
        virtualinvoke $r2.<com.android.server.pm.ShortcutService$DumpFilter: void setDumpFiles(boolean)>(1);

        goto label22;

     label20:
        virtualinvoke $r2.<com.android.server.pm.ShortcutService$DumpFilter: void setDumpUid(boolean)>(1);

        goto label22;

     label21:
        virtualinvoke $r2.<com.android.server.pm.ShortcutService$DumpFilter: void setDumpUid(boolean)>(1);

        virtualinvoke $r2.<com.android.server.pm.ShortcutService$DumpFilter: void setDumpFiles(boolean)>(1);

     label22:
        i3 = i4;

        goto label02;

     label23:
        $i6 = lengthof r28;

        if i4 >= $i6 goto label24;

        $r3 = r28[i4];

        virtualinvoke $r2.<com.android.server.pm.ShortcutService$DumpFilter: void addPackage(java.lang.String)>($r3);

        i4 = i4 + 1;

        goto label23;

     label24:
        return $r2;

        catch java.lang.NumberFormatException from label09 to label10 with label11;
    }

    static int parseIntAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String)
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1;
        long $l0;
        int $i1;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        $l0 = staticinvoke <com.android.server.pm.ShortcutService: long parseLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, r1);

        $i1 = (int) $l0;

        return $i1;
    }

    static int parseIntAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String, int)
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1;
        int i0, $i3;
        long $l1, $l2;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $l1 = (long) i0;

        $l2 = staticinvoke <com.android.server.pm.ShortcutService: long parseLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r0, r1, $l1);

        $i3 = (int) $l2;

        return $i3;
    }

    static android.content.Intent parseIntentAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String)
    {
        android.content.Intent $r0, r3, r4;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: java.lang.String;

        r3 = staticinvoke <com.android.server.pm.ShortcutService: android.content.Intent parseIntentAttributeNoDefault(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, r2);

        r4 = r3;

        if r3 != null goto label1;

        $r0 = new android.content.Intent;

        specialinvoke $r0.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.VIEW");

        r4 = $r0;

     label1:
        return r4;
    }

    static android.content.Intent parseIntentAttributeNoDefault(org.xmlpull.v1.XmlPullParser, java.lang.String)
    {
        java.lang.String r0, r3;
        boolean $z0;
        java.lang.Throwable $r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.content.Intent r4;

        r2 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter1: java.lang.String;

        r0 = staticinvoke <com.android.server.pm.ShortcutService: java.lang.String parseStringAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r2, r3);

        r4 = null;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 != 0 goto label4;

     label1:
        r4 = staticinvoke <android.content.Intent: android.content.Intent parseUri(java.lang.String,int)>(r0, 0);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ShortcutService", "Error parsing intent", $r1);

        r4 = null;

     label4:
        return r4;

        catch java.net.URISyntaxException from label1 to label2 with label3;
    }

    static long parseLongAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String)
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1;
        long $l0;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        $l0 = staticinvoke <com.android.server.pm.ShortcutService: long parseLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r0, r1, 0L);

        return $l0;
    }

    static long parseLongAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String, long)
    {
        long l0, l1;
        boolean $z0;
        java.lang.Throwable $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4, r6, r7;
        org.xmlpull.v1.XmlPullParser r5;

        r5 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r6 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        r7 = staticinvoke <com.android.server.pm.ShortcutService: java.lang.String parseStringAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r5, r6);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r7);

        if $z0 == 0 goto label1;

        return l0;

     label1:
        l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r7);

     label2:
        return l1;

     label3:
        $r0 := @caughtexception;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error parsing long ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ShortcutService", $r4);

        return l0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    static java.lang.String parseStringAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String)
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, $r2;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        $r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r1);

        return $r2;
    }

    private java.util.List prepareChangedShortcuts(android.util.ArraySet, android.util.ArraySet, java.util.List, com.android.server.pm.ShortcutPackage)
    {
        com.android.server.pm.ShortcutService r0;
        android.util.ArraySet r1, $r5, r9;
        java.util.List r2;
        com.android.server.pm.ShortcutPackage r3;
        boolean $z0, $z1, $z2, $z3, $z5;
        java.util.ArrayList $r6;
        com.android.server.pm._$$Lambda$ShortcutService$gl8M0S0hmAWkwgwNr3It0b3QVGQ $r7;
        com.android.server.pm._$$Lambda$ShortcutService$ySqzUCgvZgF7gAiB54qisNRwdg0 $r8;

        r0 := @this: com.android.server.pm.ShortcutService;

        r9 := @parameter0: android.util.ArraySet;

        r1 := @parameter1: android.util.ArraySet;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: com.android.server.pm.ShortcutPackage;

        if r3 != null goto label1;

        return null;

     label1:
        $z0 = staticinvoke <com.android.internal.util.CollectionUtils: boolean isEmpty(java.util.Collection)>(r9);

        if $z0 == 0 goto label2;

        $z5 = staticinvoke <com.android.internal.util.CollectionUtils: boolean isEmpty(java.util.Collection)>(r1);

        if $z5 == 0 goto label2;

        return null;

     label2:
        $r5 = new android.util.ArraySet;

        specialinvoke $r5.<android.util.ArraySet: void <init>()>();

        $z1 = staticinvoke <com.android.internal.util.CollectionUtils: boolean isEmpty(java.util.Collection)>(r9);

        if $z1 != 0 goto label3;

        virtualinvoke $r5.<android.util.ArraySet: void addAll(android.util.ArraySet)>(r9);

     label3:
        $z2 = staticinvoke <com.android.internal.util.CollectionUtils: boolean isEmpty(java.util.Collection)>(r1);

        if $z2 != 0 goto label4;

        virtualinvoke $r5.<android.util.ArraySet: void addAll(android.util.ArraySet)>(r1);

     label4:
        $z3 = staticinvoke <com.android.internal.util.CollectionUtils: boolean isEmpty(java.util.Collection)>(r2);

        if $z3 != 0 goto label5;

        $r8 = new com.android.server.pm._$$Lambda$ShortcutService$ySqzUCgvZgF7gAiB54qisNRwdg0;

        specialinvoke $r8.<com.android.server.pm._$$Lambda$ShortcutService$ySqzUCgvZgF7gAiB54qisNRwdg0: void <init>(android.util.ArraySet)>($r5);

        interfaceinvoke r2.<java.util.List: boolean removeIf(java.util.function.Predicate)>($r8);

     label5:
        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $r7 = new com.android.server.pm._$$Lambda$ShortcutService$gl8M0S0hmAWkwgwNr3It0b3QVGQ;

        specialinvoke $r7.<com.android.server.pm._$$Lambda$ShortcutService$gl8M0S0hmAWkwgwNr3It0b3QVGQ: void <init>(android.util.ArraySet)>($r5);

        virtualinvoke r3.<com.android.server.pm.ShortcutPackage: void findAll(java.util.List,java.util.function.Predicate,int)>($r6, $r7, 4);

        return $r6;
    }

    private java.util.List prepareChangedShortcuts(java.util.List, java.util.List, java.util.List, com.android.server.pm.ShortcutPackage)
    {
        com.android.server.pm.ShortcutService r0;
        java.util.List r1, r2, $r7, r8;
        com.android.server.pm.ShortcutPackage r3;
        android.util.ArraySet $r5, $r6;

        r0 := @this: com.android.server.pm.ShortcutService;

        r8 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: com.android.server.pm.ShortcutPackage;

        $r5 = new android.util.ArraySet;

        specialinvoke $r5.<android.util.ArraySet: void <init>()>();

        specialinvoke r0.<com.android.server.pm.ShortcutService: void addShortcutIdsToSet(android.util.ArraySet,java.util.List)>($r5, r8);

        $r6 = new android.util.ArraySet;

        specialinvoke $r6.<android.util.ArraySet: void <init>()>();

        specialinvoke r0.<com.android.server.pm.ShortcutService: void addShortcutIdsToSet(android.util.ArraySet,java.util.List)>($r6, r1);

        $r7 = specialinvoke r0.<com.android.server.pm.ShortcutService: java.util.List prepareChangedShortcuts(android.util.ArraySet,android.util.ArraySet,java.util.List,com.android.server.pm.ShortcutPackage)>($r5, $r6, r2, r3);

        return $r7;
    }

    private java.util.List removeNonKeyFields(java.util.List)
    {
        com.android.server.pm.ShortcutService r0;
        java.util.List r1;
        int i0, i1;
        android.content.pm.ShortcutInfo r3, $r6;
        boolean $z0, $z1;
        java.util.ArrayList $r4;
        java.lang.Object $r5;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.util.List;

        $z0 = staticinvoke <com.android.internal.util.CollectionUtils: boolean isEmpty(java.util.Collection)>(r1);

        if $z0 == 0 goto label1;

        return r1;

     label1:
        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>(i0);

        i1 = 0;

     label2:
        if i1 >= i0 goto label5;

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (android.content.pm.ShortcutInfo) $r5;

        $z1 = virtualinvoke r3.<android.content.pm.ShortcutInfo: boolean hasKeyFieldsOnly()>();

        if $z1 == 0 goto label3;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r3);

        goto label4;

     label3:
        $r6 = virtualinvoke r3.<android.content.pm.ShortcutInfo: android.content.pm.ShortcutInfo clone(int)>(4);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r6);

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        return $r4;
    }

    private boolean requestPinItem(java.lang.String, int, android.content.pm.ShortcutInfo, android.appwidget.AppWidgetProviderInfo, android.os.Bundle, android.content.IntentSender)
    {
        com.android.server.pm.ShortcutService r0;
        int i0, $i1, $i2, $i3;
        android.appwidget.AppWidgetProviderInfo r1;
        android.os.Bundle r2;
        android.content.IntentSender r3;
        java.lang.String r4, $r6, r9;
        com.android.server.pm.ShortcutPackage r5;
        boolean z0, $z1, $z2, $z3;
        java.util.List $r7;
        java.lang.Throwable $r8;
        android.content.pm.ShortcutInfo r10;
        java.lang.Object r11;
        com.android.server.pm.ShortcutRequestPinProcessor $r12;

        r0 := @this: com.android.server.pm.ShortcutService;

        r9 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r10 := @parameter2: android.content.pm.ShortcutInfo;

        r1 := @parameter3: android.appwidget.AppWidgetProviderInfo;

        r2 := @parameter4: android.os.Bundle;

        r3 := @parameter5: android.content.IntentSender;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void verifyCaller(java.lang.String,int)>(r9, i0);

        if r10 == null goto label01;

        $i1 = virtualinvoke r0.<com.android.server.pm.ShortcutService: int injectBinderCallingPid()>();

        $i2 = virtualinvoke r0.<com.android.server.pm.ShortcutService: int injectBinderCallingUid()>();

        $z2 = virtualinvoke r0.<com.android.server.pm.ShortcutService: boolean injectHasAccessShortcutsPermission(int,int)>($i1, $i2);

        if $z2 != 0 goto label02;

     label01:
        specialinvoke r0.<com.android.server.pm.ShortcutService: void verifyShortcutInfoPackage(java.lang.String,android.content.pm.ShortcutInfo)>(r9, r10);

     label02:
        r11 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r11;

     label03:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void throwIfUserLockedL(int)>(i0);

        $i3 = virtualinvoke r0.<com.android.server.pm.ShortcutService: int injectBinderCallingUid()>();

        $z3 = virtualinvoke r0.<com.android.server.pm.ShortcutService: boolean isUidForegroundLocked(int)>($i3);

        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean,java.lang.String)>($z3, "Calling application must have a foreground activity or a foreground service");

     label04:
        if r10 == null goto label07;

     label05:
        r4 = virtualinvoke r10.<android.content.pm.ShortcutInfo: java.lang.String getPackage()>();

        r5 = virtualinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutPackage getPackageShortcutsForPublisherLocked(java.lang.String,int)>(r4, i0);

        $r6 = virtualinvoke r10.<android.content.pm.ShortcutInfo: java.lang.String getId()>();

        $z1 = virtualinvoke r5.<com.android.server.pm.ShortcutPackage: boolean isShortcutExistsAndInvisibleToPublisher(java.lang.String)>($r6);

        if $z1 == 0 goto label07;

        virtualinvoke r5.<com.android.server.pm.ShortcutPackage: void updateInvisibleShortcutForPinRequestWith(android.content.pm.ShortcutInfo)>(r10);

     label06:
        $r7 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r10);

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void packageShortcutsChanged(java.lang.String,int,java.util.List,java.util.List)>(r4, i0, $r7, null);

     label07:
        $r12 = r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutRequestPinProcessor mShortcutRequestPinProcessor>;

        z0 = virtualinvoke $r12.<com.android.server.pm.ShortcutRequestPinProcessor: boolean requestPinItemLocked(android.content.pm.ShortcutInfo,android.appwidget.AppWidgetProviderInfo,android.os.Bundle,int,android.content.IntentSender)>(r10, r1, r2, i0, r3);

        exitmonitor r11;

     label08:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void verifyStates()>();

        return z0;

     label09:
        $r8 := @caughtexception;

     label10:
        exitmonitor r11;

     label11:
        throw $r8;

        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    private void rescanUpdatedPackagesLocked(int, long)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        long l1, l2;
        com.android.server.pm.ShortcutUser r1;
        java.lang.String $r2, $r3, $r5;
        boolean $z0, $z1;
        com.android.server.pm._$$Lambda$ShortcutService$ErhAH9ktbNmekJprGoLIQXZuBOc $r4;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 = virtualinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutUser getUserShortcutsLocked(int)>(i0);

        l2 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long injectCurrentTimeMillis()>();

        $r2 = virtualinvoke r0.<com.android.server.pm.ShortcutService: java.lang.String injectBuildFingerprint()>();

        $r3 = virtualinvoke r1.<com.android.server.pm.ShortcutUser: java.lang.String getLastAppScanOsFingerprint()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        $z1 = $z0 ^ 1;

        $r4 = new com.android.server.pm._$$Lambda$ShortcutService$ErhAH9ktbNmekJprGoLIQXZuBOc;

        specialinvoke $r4.<com.android.server.pm._$$Lambda$ShortcutService$ErhAH9ktbNmekJprGoLIQXZuBOc: void <init>(com.android.server.pm.ShortcutService,com.android.server.pm.ShortcutUser,int)>(r0, r1, i0);

        specialinvoke r0.<com.android.server.pm.ShortcutService: void forUpdatedPackages(int,long,boolean,java.util.function.Consumer)>(i0, l1, $z1, $r4);

        virtualinvoke r1.<com.android.server.pm.ShortcutUser: void setLastAppScanTime(long)>(l2);

        $r5 = virtualinvoke r0.<com.android.server.pm.ShortcutService: java.lang.String injectBuildFingerprint()>();

        virtualinvoke r1.<com.android.server.pm.ShortcutUser: void setLastAppScanOsFingerprint(java.lang.String)>($r5);

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void scheduleSaveUser(int)>(i0);

        return;
    }

    private void saveUserInternalLocked(int, java.io.OutputStream, boolean) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        java.io.OutputStream r1;
        boolean z0;
        java.io.BufferedOutputStream $r4;
        com.android.internal.util.FastXmlSerializer $r5;
        java.nio.charset.Charset $r6;
        java.lang.String $r7;
        java.lang.Boolean $r8;
        com.android.server.pm.ShortcutUser $r9;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.io.OutputStream;

        z0 := @parameter2: boolean;

        $r4 = new java.io.BufferedOutputStream;

        specialinvoke $r4.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(r1);

        $r5 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r5.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        $r6 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r7 = virtualinvoke $r6.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke $r5.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>($r4, $r7);

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke $r5.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r8);

        $r9 = virtualinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutUser getUserShortcutsLocked(int)>(i0);

        virtualinvoke $r9.<com.android.server.pm.ShortcutUser: void saveToXml(org.xmlpull.v1.XmlSerializer,boolean)>($r5, z0);

        interfaceinvoke $r5.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        virtualinvoke $r4.<java.io.BufferedOutputStream: void flush()>();

        virtualinvoke r1.<java.io.OutputStream: void flush()>();

        return;
    }

    private void saveUserLocked(int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        com.android.server.pm.ShortcutBitmapSaver $r3;
        java.io.File $r4, $r11, r14;
        android.util.AtomicFile $r5;
        com.android.server.pm.ShortcutUser $r6;
        com.android.internal.logging.MetricsLogger $r7;
        java.lang.Throwable $r8;
        java.lang.StringBuilder $r9;
        java.lang.String $r13;
        java.io.FileOutputStream r15, r16;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 := @parameter0: int;

        r14 = virtualinvoke r0.<com.android.server.pm.ShortcutService: java.io.File getUserFile(int)>(i0);

        $r3 = r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutBitmapSaver mShortcutBitmapSaver>;

        virtualinvoke $r3.<com.android.server.pm.ShortcutBitmapSaver: boolean waitForAllSavesLocked()>();

        $r4 = virtualinvoke r14.<java.io.File: java.io.File getParentFile()>();

        virtualinvoke $r4.<java.io.File: boolean mkdirs()>();

        $r5 = new android.util.AtomicFile;

        specialinvoke $r5.<android.util.AtomicFile: void <init>(java.io.File)>(r14);

        r15 = null;

     label01:
        r16 = virtualinvoke $r5.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

     label02:
        r15 = r16;

     label03:
        specialinvoke r0.<com.android.server.pm.ShortcutService: void saveUserInternalLocked(int,java.io.OutputStream,boolean)>(i0, r16, 0);

     label04:
        r15 = r16;

     label05:
        virtualinvoke $r5.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r16);

     label06:
        r15 = r16;

     label07:
        specialinvoke r0.<com.android.server.pm.ShortcutService: void cleanupDanglingBitmapDirectoriesLocked(int)>(i0);

     label08:
        goto label10;

     label09:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to write to file ");

        $r11 = virtualinvoke $r5.<android.util.AtomicFile: java.io.File getBaseFile()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ShortcutService", $r13, $r8);

        virtualinvoke $r5.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r15);

     label10:
        $r6 = virtualinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutUser getUserShortcutsLocked(int)>(i0);

        $r7 = r0.<com.android.server.pm.ShortcutService: com.android.internal.logging.MetricsLogger mMetricsLogger>;

        virtualinvoke $r6.<com.android.server.pm.ShortcutUser: void logSharingShortcutStats(com.android.internal.logging.MetricsLogger)>($r7);

        return;

        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label09;
        catch java.io.IOException from label01 to label02 with label09;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label09;
        catch java.io.IOException from label03 to label04 with label09;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label06 with label09;
        catch java.io.IOException from label05 to label06 with label09;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label08 with label09;
        catch java.io.IOException from label07 to label08 with label09;
    }

    private void scheduleSaveBaseState()
    {
        com.android.server.pm.ShortcutService r0;

        r0 := @this: com.android.server.pm.ShortcutService;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void scheduleSaveInner(int)>(-10000);

        return;
    }

    private void scheduleSaveInner(int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0, $i1;
        java.lang.Object r1;
        java.util.List $r3, $r9;
        java.lang.Integer $r4, $r10;
        boolean $z0;
        java.lang.Runnable $r5, $r7;
        android.os.Handler $r6, $r8;
        long $l2;
        java.lang.Throwable $r11;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.pm.ShortcutService: java.util.List mDirtyUserIds>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>($r4);

        if $z0 != 0 goto label2;

        $r9 = r0.<com.android.server.pm.ShortcutService: java.util.List mDirtyUserIds>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r10);

     label2:
        exitmonitor r1;

     label3:
        $r6 = r0.<com.android.server.pm.ShortcutService: android.os.Handler mHandler>;

        $r5 = r0.<com.android.server.pm.ShortcutService: java.lang.Runnable mSaveDirtyInfoRunner>;

        virtualinvoke $r6.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r5);

        $r8 = r0.<com.android.server.pm.ShortcutService: android.os.Handler mHandler>;

        $r7 = r0.<com.android.server.pm.ShortcutService: java.lang.Runnable mSaveDirtyInfoRunner>;

        $i1 = r0.<com.android.server.pm.ShortcutService: int mSaveDelayMillis>;

        $l2 = (long) $i1;

        virtualinvoke $r8.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r7, $l2);

        return;

     label4:
        $r11 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private java.util.List setReturnedByServer(java.util.List)
    {
        com.android.server.pm.ShortcutService r0;
        java.util.List r1;
        int $i0, i1;
        java.lang.Object $r2;
        android.content.pm.ShortcutInfo $r3;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        $r3 = (android.content.pm.ShortcutInfo) $r2;

        virtualinvoke $r3.<android.content.pm.ShortcutInfo: void setReturnedByServer()>();

        i1 = i1 + -1;

        goto label1;

     label2:
        return r1;
    }

    static boolean shouldBackupApp(android.content.pm.PackageInfo)
    {
        android.content.pm.PackageInfo r0;
        android.content.pm.ApplicationInfo $r1;
        int $i0, $i1;
        boolean z0;

        r0 := @parameter0: android.content.pm.PackageInfo;

        $r1 = r0.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r1.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = $i0 & 32768;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    static android.graphics.Bitmap shrinkBitmap(android.graphics.Bitmap, int)
    {
        android.graphics.Bitmap r0, r1;
        int i0, i1, $i2, $i3, i4, i5, i6, i7;
        android.graphics.Bitmap$Config $r2;
        android.graphics.Canvas $r3;
        android.graphics.RectF $r4;
        float $f0, $f1;

        r0 := @parameter0: android.graphics.Bitmap;

        i4 := @parameter1: int;

        i5 = virtualinvoke r0.<android.graphics.Bitmap: int getWidth()>();

        i0 = virtualinvoke r0.<android.graphics.Bitmap: int getHeight()>();

        if i5 > i4 goto label1;

        if i0 > i4 goto label1;

        return r0;

     label1:
        i1 = staticinvoke <java.lang.Math: int max(int,int)>(i5, i0);

        $i2 = i5 * i4;

        i6 = $i2 / i1;

        $i3 = i0 * i4;

        i7 = $i3 / i1;

        $r2 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r1 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i6, i7, $r2);

        $r3 = new android.graphics.Canvas;

        specialinvoke $r3.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r1);

        $r4 = new android.graphics.RectF;

        $f1 = (float) i6;

        $f0 = (float) i7;

        specialinvoke $r4.<android.graphics.RectF: void <init>(float,float,float,float)>(0.0F, 0.0F, $f1, $f0);

        virtualinvoke $r3.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.RectF,android.graphics.Paint)>(r0, null, $r4, null);

        return r1;
    }

    static java.io.IOException throwForInvalidTag(int, java.lang.String) throws java.io.IOException
    {
        int i0;
        java.lang.String r0, $r4;
        java.io.IOException $r1;
        java.lang.Object[] $r2;
        java.lang.Integer $r3;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        $r1 = new java.io.IOException;

        $r2 = newarray (java.lang.Object)[2];

        $r2[0] = r0;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2[1] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Invalid tag \'%s\' found at depth %d", $r2);

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>($r4);

        throw $r1;
    }

    private void unloadUserLocked(int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        android.util.SparseArray $r1;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void saveDirtyInfo()>();

        $r1 = r0.<com.android.server.pm.ShortcutService: android.util.SparseArray mUsers>;

        virtualinvoke $r1.<android.util.SparseArray: void delete(int)>(i0);

        return;
    }

    private void updateTimesLocked()
    {
        com.android.server.pm.ShortcutService r0;
        long l0, l1, l2, l3, $l6, $l8, $l9, $l10, $l11, $l13;
        byte $b4, $b5, $b7, $b14;
        boolean $z0;

        r0 := @this: com.android.server.pm.ShortcutService;

        l0 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long injectCurrentTimeMillis()>();

        l1 = r0.<com.android.server.pm.ShortcutService: long mRawLastResetTime>;

        l2 = r0.<com.android.server.pm.ShortcutService: long mRawLastResetTime>;

        $b4 = l2 cmp 0L;

        if $b4 != 0 goto label1;

        r0.<com.android.server.pm.ShortcutService: long mRawLastResetTime> = l0;

        goto label3;

     label1:
        $b5 = l0 cmp l2;

        if $b5 >= 0 goto label2;

        $z0 = staticinvoke <com.android.server.pm.ShortcutService: boolean isClockValid(long)>(l0);

        if $z0 == 0 goto label3;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ShortcutService", "Clock rewound");

        r0.<com.android.server.pm.ShortcutService: long mRawLastResetTime> = l0;

        goto label3;

     label2:
        l3 = r0.<com.android.server.pm.ShortcutService: long mResetInterval>;

        $l6 = l2 + l3;

        $b7 = $l6 cmp l0;

        if $b7 > 0 goto label3;

        $l8 = l0 / l3;

        $l10 = $l8 * l3;

        $l9 = l2 % l3;

        $l11 = $l10 + $l9;

        r0.<com.android.server.pm.ShortcutService: long mRawLastResetTime> = $l11;

     label3:
        $l13 = r0.<com.android.server.pm.ShortcutService: long mRawLastResetTime>;

        $b14 = l1 cmp $l13;

        if $b14 == 0 goto label4;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void scheduleSaveBaseState()>();

     label4:
        return;
    }

    private void verifyCaller(java.lang.String, int)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String r1;
        int i0, i1, $i2, $i3;
        boolean $z0, $z1, $z2;
        java.lang.SecurityException $r3, $r4;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence,java.lang.Object)>(r1, "packageName");

        $z0 = specialinvoke r0.<com.android.server.pm.ShortcutService: boolean isCallerSystem()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        i1 = virtualinvoke r0.<com.android.server.pm.ShortcutService: int injectBinderCallingUid()>();

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

        if $i2 != i0 goto label3;

        $i3 = virtualinvoke r0.<com.android.server.pm.ShortcutService: int injectGetPackageUid(java.lang.String,int)>(r1, i0);

        if $i3 != i1 goto label2;

        $z1 = virtualinvoke r0.<com.android.server.pm.ShortcutService: boolean isEphemeralApp(java.lang.String,int)>(r1, i0);

        $z2 = $z1 ^ 1;

        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean,java.lang.String)>($z2, "Ephemeral apps can\'t use ShortcutManager");

        return;

     label2:
        $r4 = new java.lang.SecurityException;

        specialinvoke $r4.<java.lang.SecurityException: void <init>(java.lang.String)>("Calling package name mismatch");

        throw $r4;

     label3:
        $r3 = new java.lang.SecurityException;

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>("Invalid user-ID");

        throw $r3;
    }

    private void verifyShortcutInfoPackage(java.lang.String, android.content.pm.ShortcutInfo)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String r1, $r3;
        android.content.pm.ShortcutInfo r2;
        boolean $z0;
        java.lang.Object[] $r4;
        java.lang.Integer $r5;
        java.lang.SecurityException $r6;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.ShortcutInfo;

        if r2 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r2.<android.content.pm.ShortcutInfo: java.lang.String getPackage()>();

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r1, $r3);

        if $z0 == 0 goto label2;

        return;

     label2:
        $r4 = newarray (java.lang.Object)[3];

        $r4[0] = "109824443";

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        $r4[1] = $r5;

        $r4[2] = "";

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(1397638484, $r4);

        $r6 = new java.lang.SecurityException;

        specialinvoke $r6.<java.lang.SecurityException: void <init>(java.lang.String)>("Shortcut package name mismatch");

        throw $r6;
    }

    private void verifyShortcutInfoPackages(java.lang.String, java.util.List)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String r1;
        java.util.List r2;
        int i0, i1;
        java.lang.Object $r3;
        android.content.pm.ShortcutInfo $r4;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        i0 = interfaceinvoke r2.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        $r4 = (android.content.pm.ShortcutInfo) $r3;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void verifyShortcutInfoPackage(java.lang.String,android.content.pm.ShortcutInfo)>(r1, $r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private final void verifyStatesForce()
    {
        com.android.server.pm.ShortcutService r0;

        r0 := @this: com.android.server.pm.ShortcutService;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void verifyStatesInner()>();

        return;
    }

    private void verifyStatesInner()
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.Object r1;
        com.android.server.pm.'-$$Lambda$ShortcutService$TWEnwEASaqKRSWXK3edPwGgb1bg' $r3;
        java.lang.Throwable $r4;
        java.util.function.Consumer r5;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = <com.android.server.pm._$$Lambda$ShortcutService$TWEnwEASaqKRSWXK3edPwGgb1bg: com.android.server.pm.'-$$Lambda$ShortcutService$TWEnwEASaqKRSWXK3edPwGgb1bg' INSTANCE>;

        r5 = (java.util.function.Consumer) $r3;

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void forEachLoadedUserLocked(java.util.function.Consumer)>(r5);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    static void warnForInvalidTag(int, java.lang.String) throws java.io.IOException
    {
        int i0;
        java.lang.String r0, $r3;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = r0;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[1] = $r2;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Invalid tag \'%s\' found at depth %d", $r1);

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ShortcutService", $r3);

        return;
    }

    static void writeAttr(org.xmlpull.v1.XmlSerializer, java.lang.String, long) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer r0;
        java.lang.String r1, $r2;
        long l0;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l0);

        staticinvoke <com.android.server.pm.ShortcutService: void writeAttr(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.CharSequence)>(r0, r1, $r2);

        return;
    }

    static void writeAttr(org.xmlpull.v1.XmlSerializer, java.lang.String, android.content.ComponentName) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer r0;
        java.lang.String r1, $r3;
        android.content.ComponentName r2;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.content.ComponentName;

        if r2 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r2.<android.content.ComponentName: java.lang.String flattenToString()>();

        staticinvoke <com.android.server.pm.ShortcutService: void writeAttr(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.CharSequence)>(r0, r1, $r3);

        return;
    }

    static void writeAttr(org.xmlpull.v1.XmlSerializer, java.lang.String, android.content.Intent) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer r0;
        java.lang.String r1, $r3;
        android.content.Intent r2;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.content.Intent;

        if r2 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r2.<android.content.Intent: java.lang.String toUri(int)>(0);

        staticinvoke <com.android.server.pm.ShortcutService: void writeAttr(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.CharSequence)>(r0, r1, $r3);

        return;
    }

    static void writeAttr(org.xmlpull.v1.XmlSerializer, java.lang.String, java.lang.CharSequence) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer r0;
        java.lang.String r1, $r3;
        java.lang.CharSequence r2;
        boolean $z0;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.CharSequence;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = interfaceinvoke r2.<java.lang.CharSequence: java.lang.String toString()>();

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, r1, $r3);

        return;
    }

    static void writeAttr(org.xmlpull.v1.XmlSerializer, java.lang.String, boolean) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer r0;
        java.lang.String r1;
        boolean z0;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label1;

        staticinvoke <com.android.server.pm.ShortcutService: void writeAttr(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.CharSequence)>(r0, r1, "1");

        goto label2;

     label1:
        staticinvoke <com.android.server.pm.ShortcutService: void writeAttr(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.CharSequence)>(r0, r1, "0");

     label2:
        return;
    }

    static void writeTagExtra(org.xmlpull.v1.XmlSerializer, java.lang.String, android.os.PersistableBundle) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.XmlSerializer r0;
        java.lang.String r1;
        android.os.PersistableBundle r2;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.PersistableBundle;

        if r2 != null goto label1;

        return;

     label1:
        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, r1);

        virtualinvoke r2.<android.os.PersistableBundle: void saveToXml(org.xmlpull.v1.XmlSerializer)>(r0);

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, r1);

        return;
    }

    static void writeTagValue(org.xmlpull.v1.XmlSerializer, java.lang.String, long) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer r0;
        java.lang.String r1, $r2;
        long l0;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        staticinvoke <com.android.server.pm.ShortcutService: void writeTagValue(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String)>(r0, r1, $r2);

        return;
    }

    static void writeTagValue(org.xmlpull.v1.XmlSerializer, java.lang.String, android.content.ComponentName) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer r0;
        java.lang.String r1, $r3;
        android.content.ComponentName r2;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.content.ComponentName;

        if r2 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r2.<android.content.ComponentName: java.lang.String flattenToString()>();

        staticinvoke <com.android.server.pm.ShortcutService: void writeTagValue(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String)>(r0, r1, $r3);

        return;
    }

    static void writeTagValue(org.xmlpull.v1.XmlSerializer, java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer r0;
        java.lang.String r1, r2;
        boolean $z0;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, r1);

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", r2);

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, r1);

        return;
    }

    public boolean addDynamicShortcuts(java.lang.String, android.content.pm.ParceledListSlice, int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0, i1, $i2, $i3, i4;
        java.util.List r1;
        boolean z0, $z1;
        java.lang.Object r2, $r5;
        com.android.server.pm.ShortcutPackage r3;
        android.content.pm.ShortcutInfo r4;
        java.lang.Throwable $r6;
        java.lang.String r7;
        android.content.pm.ParceledListSlice r8;
        java.util.ArrayList r9, r10;

        r0 := @this: com.android.server.pm.ShortcutService;

        r7 := @parameter0: java.lang.String;

        r8 := @parameter1: android.content.pm.ParceledListSlice;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void verifyCaller(java.lang.String,int)>(r7, i0);

        r1 = virtualinvoke r8.<android.content.pm.ParceledListSlice: java.util.List getList()>();

        specialinvoke r0.<com.android.server.pm.ShortcutService: void verifyShortcutInfoPackages(java.lang.String,java.util.List)>(r7, r1);

        i1 = interfaceinvoke r1.<java.util.List: int size()>();

        $i2 = virtualinvoke r0.<com.android.server.pm.ShortcutService: int injectBinderCallingPid()>();

        $i3 = virtualinvoke r0.<com.android.server.pm.ShortcutService: int injectBinderCallingUid()>();

        z0 = virtualinvoke r0.<com.android.server.pm.ShortcutService: boolean injectHasUnlimitedShortcutsApiCallsPermission(int,int)>($i2, $i3);

        r9 = null;

        r2 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void throwIfUserLockedL(int)>(i0);

        r3 = virtualinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutPackage getPackageShortcutsForPublisherLocked(java.lang.String,int)>(r7, i0);

        virtualinvoke r3.<com.android.server.pm.ShortcutPackage: void ensureImmutableShortcutsNotIncluded(java.util.List,boolean)>(r1, 1);

        virtualinvoke r3.<com.android.server.pm.ShortcutPackage: void ensureNoBitmapIconIfShortcutIsLongLived(java.util.List)>(r1);

        specialinvoke r0.<com.android.server.pm.ShortcutService: void fillInDefaultActivity(java.util.List)>(r1);

        virtualinvoke r3.<com.android.server.pm.ShortcutPackage: void enforceShortcutCountsBeforeOperation(java.util.List,int)>(r1, 1);

        virtualinvoke r3.<com.android.server.pm.ShortcutPackage: void clearAllImplicitRanks()>();

        specialinvoke r0.<com.android.server.pm.ShortcutService: void assignImplicitRanks(java.util.List)>(r1);

        $z1 = virtualinvoke r3.<com.android.server.pm.ShortcutPackage: boolean tryApiCall(boolean)>(z0);

        if $z1 != 0 goto label03;

        exitmonitor r2;

     label02:
        return 0;

     label03:
        i4 = 0;

     label04:
        if i4 >= i1 goto label10;

     label05:
        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i4);

        r4 = (android.content.pm.ShortcutInfo) $r5;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void fixUpIncomingShortcutInfo(android.content.pm.ShortcutInfo,boolean)>(r4, 0);

        virtualinvoke r4.<android.content.pm.ShortcutInfo: void setRankChanged()>();

        virtualinvoke r3.<com.android.server.pm.ShortcutPackage: boolean addOrReplaceDynamicShortcut(android.content.pm.ShortcutInfo)>(r4);

     label06:
        r10 = r9;

        if r9 != null goto label08;

     label07:
        r10 = new java.util.ArrayList;

        specialinvoke r10.<java.util.ArrayList: void <init>(int)>(1);

     label08:
        interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r4);

     label09:
        i4 = i4 + 1;

        r9 = r10;

        goto label04;

     label10:
        virtualinvoke r3.<com.android.server.pm.ShortcutPackage: void adjustRanks()>();

        exitmonitor r2;

     label11:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void packageShortcutsChanged(java.lang.String,int,java.util.List,java.util.List)>(r7, i0, r9, null);

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void verifyStates()>();

        return 1;

     label12:
        $r6 := @caughtexception;

     label13:
        exitmonitor r2;

     label14:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void applyRestore(byte[], int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        java.lang.Object r1;
        boolean $z0;
        com.android.server.pm.ShortcutDumpFiles $r2, r12, r16, r18, r20, r22;
        com.android.server.pm.ShortcutUser $r3, r15;
        java.lang.String $r7;
        java.lang.Throwable $r8, $r9;
        byte[] r10;
        java.lang.StringBuilder r11;
        com.android.server.pm._$$Lambda$ShortcutService$CCaMUaAfulGDmiK5ys_FWeciZ3Q r13;
        java.io.ByteArrayInputStream r14;
        com.android.server.pm._$$Lambda$ShortcutService$w7_ouiisHmMMzTkQ_HUAHbawlLY r17, r19, r21;
        com.android.server.pm._$$Lambda$ShortcutService$aF3t_w_3kZCMfEtqFMaeSlRZ1ow r23;

        r0 := @this: com.android.server.pm.ShortcutService;

        r10 := @parameter0: byte[];

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void enforceSystem()>();

        r1 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $z0 = virtualinvoke r0.<com.android.server.pm.ShortcutService: boolean isUserUnlockedL(int)>(i0);

        if $z0 != 0 goto label03;

        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t restore: user ");

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is locked or not running");

        $r7 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void wtf(java.lang.String)>($r7);

        exitmonitor r1;

     label02:
        return;

     label03:
        r12 = r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutDumpFiles mShortcutDumpFiles>;

        r13 = new com.android.server.pm._$$Lambda$ShortcutService$CCaMUaAfulGDmiK5ys_FWeciZ3Q;

        specialinvoke r13.<com.android.server.pm._$$Lambda$ShortcutService$CCaMUaAfulGDmiK5ys_FWeciZ3Q: void <init>(com.android.server.pm.ShortcutService)>(r0);

        virtualinvoke r12.<com.android.server.pm.ShortcutDumpFiles: boolean save(java.lang.String,java.util.function.Consumer)>("restore-0-start.txt", r13);

        $r2 = r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutDumpFiles mShortcutDumpFiles>;

        virtualinvoke $r2.<com.android.server.pm.ShortcutDumpFiles: boolean save(java.lang.String,byte[])>("restore-1-payload.xml", r10);

        r14 = new java.io.ByteArrayInputStream;

        specialinvoke r14.<java.io.ByteArrayInputStream: void <init>(byte[])>(r10);

     label04:
        r15 = specialinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutUser loadUserInternal(int,java.io.InputStream,boolean)>(i0, r14, 1);

     label05:
        r16 = r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutDumpFiles mShortcutDumpFiles>;

        r17 = new com.android.server.pm._$$Lambda$ShortcutService$w7_ouiisHmMMzTkQ_HUAHbawlLY;

        specialinvoke r17.<com.android.server.pm._$$Lambda$ShortcutService$w7_ouiisHmMMzTkQ_HUAHbawlLY: void <init>(com.android.server.pm.ShortcutService)>(r0);

        virtualinvoke r16.<com.android.server.pm.ShortcutDumpFiles: boolean save(java.lang.String,java.util.function.Consumer)>("restore-2.txt", r17);

        $r3 = virtualinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutUser getUserShortcutsLocked(int)>(i0);

        virtualinvoke $r3.<com.android.server.pm.ShortcutUser: void mergeRestoredFile(com.android.server.pm.ShortcutUser)>(r15);

        r18 = r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutDumpFiles mShortcutDumpFiles>;

        r19 = new com.android.server.pm._$$Lambda$ShortcutService$w7_ouiisHmMMzTkQ_HUAHbawlLY;

        specialinvoke r19.<com.android.server.pm._$$Lambda$ShortcutService$w7_ouiisHmMMzTkQ_HUAHbawlLY: void <init>(com.android.server.pm.ShortcutService)>(r0);

        virtualinvoke r18.<com.android.server.pm.ShortcutDumpFiles: boolean save(java.lang.String,java.util.function.Consumer)>("restore-3.txt", r19);

        specialinvoke r0.<com.android.server.pm.ShortcutService: void rescanUpdatedPackagesLocked(int,long)>(i0, 0L);

        r20 = r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutDumpFiles mShortcutDumpFiles>;

        r21 = new com.android.server.pm._$$Lambda$ShortcutService$w7_ouiisHmMMzTkQ_HUAHbawlLY;

        specialinvoke r21.<com.android.server.pm._$$Lambda$ShortcutService$w7_ouiisHmMMzTkQ_HUAHbawlLY: void <init>(com.android.server.pm.ShortcutService)>(r0);

        virtualinvoke r20.<com.android.server.pm.ShortcutDumpFiles: boolean save(java.lang.String,java.util.function.Consumer)>("restore-4.txt", r21);

        r22 = r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutDumpFiles mShortcutDumpFiles>;

        r23 = new com.android.server.pm._$$Lambda$ShortcutService$aF3t_w_3kZCMfEtqFMaeSlRZ1ow;

        specialinvoke r23.<com.android.server.pm._$$Lambda$ShortcutService$aF3t_w_3kZCMfEtqFMaeSlRZ1ow: void <init>(com.android.server.pm.ShortcutService)>(r0);

        virtualinvoke r22.<com.android.server.pm.ShortcutDumpFiles: boolean save(java.lang.String,java.util.function.Consumer)>("restore-5-finish.txt", r23);

        specialinvoke r0.<com.android.server.pm.ShortcutService: void saveUserLocked(int)>(i0);

        exitmonitor r1;

     label06:
        return;

     label07:
        $r8 := @caughtexception;

     label08:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ShortcutService", "Restoration failed.", $r8);

        exitmonitor r1;

     label09:
        return;

     label10:
        $r9 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label05 with label07;
        catch java.io.IOException from label04 to label05 with label07;
        catch com.android.server.pm.ShortcutService$InvalidFileFormatException from label04 to label05 with label07;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    boolean canSeeAnyPinnedShortcut(java.lang.String, int, int, int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0, i1, i2;
        java.lang.Object r1;
        boolean z0, $z1;
        com.android.server.pm.ShortcutNonPersistentUser $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.pm.ShortcutService;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $z1 = virtualinvoke r0.<com.android.server.pm.ShortcutService: boolean injectHasAccessShortcutsPermission(int,int)>(i1, i2);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        r1 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r1;

     label2:
        $r2 = virtualinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutNonPersistentUser getNonPersistentUserLocked(int)>(i0);

        z0 = virtualinvoke $r2.<com.android.server.pm.ShortcutNonPersistentUser: boolean hasHostPackage(java.lang.String)>(r4);

        exitmonitor r1;

     label3:
        return z0;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r3;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    void checkPackageChanges(int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0, $i2, $i4, $i5, i7;
        long l1, $l3;
        java.util.ArrayList r1;
        boolean $z0;
        java.lang.Object $r2, r6;
        java.lang.String $r3;
        java.lang.Throwable $r4, $r5;
        com.android.server.pm.ShortcutUser r7;
        com.android.server.pm._$$Lambda$ShortcutService$ExJevXZDYkRd53ZUFBxgzPqxBsM r8;
        com.android.server.pm.ShortcutUser$PackageWithUser r9;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<com.android.server.pm.ShortcutService: boolean injectIsSafeModeEnabled()>();

        if $z0 == 0 goto label01;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ShortcutService", "Safe mode, skipping checkPackageChanges()");

        return;

     label01:
        l1 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long getStatStartTime()>();

     label02:
        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        r6 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r6;

     label03:
        r7 = virtualinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutUser getUserShortcutsLocked(int)>(i0);

        r8 = new com.android.server.pm._$$Lambda$ShortcutService$ExJevXZDYkRd53ZUFBxgzPqxBsM;

        specialinvoke r8.<com.android.server.pm._$$Lambda$ShortcutService$ExJevXZDYkRd53ZUFBxgzPqxBsM: void <init>(com.android.server.pm.ShortcutService,java.util.ArrayList)>(r0, r1);

        virtualinvoke r7.<com.android.server.pm.ShortcutUser: void forAllPackageItems(java.util.function.Consumer)>(r8);

        $i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i2 <= 0 goto label07;

        $i4 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i7 = $i4 - 1;

     label04:
        if i7 < 0 goto label07;

     label05:
        $r2 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r9 = (com.android.server.pm.ShortcutUser$PackageWithUser) $r2;

        $r3 = r9.<com.android.server.pm.ShortcutUser$PackageWithUser: java.lang.String packageName>;

        $i5 = r9.<com.android.server.pm.ShortcutUser$PackageWithUser: int userId>;

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void cleanUpPackageLocked(java.lang.String,int,int,boolean)>($r3, i0, $i5, 0);

     label06:
        i7 = i7 + -1;

        goto label04;

     label07:
        $l3 = virtualinvoke r7.<com.android.server.pm.ShortcutUser: long getLastAppScanTime()>();

        specialinvoke r0.<com.android.server.pm.ShortcutService: void rescanUpdatedPackagesLocked(int,long)>(i0, $l3);

        exitmonitor r6;

     label08:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void logDurationStat(int,long)>(8, l1);

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void verifyStates()>();

        return;

     label09:
        $r4 := @caughtexception;

     label10:
        exitmonitor r6;

     label11:
        throw $r4;

     label12:
        $r5 := @caughtexception;

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void logDurationStat(int,long)>(8, l1);

        throw $r5;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label11 to label12 with label12;
    }

    void cleanUpPackageLocked(java.lang.String, int, int, boolean)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String r1;
        int i0, i1;
        boolean z0, z1, z3;
        com.android.server.pm.ShortcutUser r2;
        com.android.server.pm.ShortcutPackage $r4;
        com.android.server.pm.'-$$Lambda$ShortcutService$d1c3hmNwu_ycWMRQ1TT467sb-oU' $r6;
        com.android.server.pm._$$Lambda$ShortcutService$rj7stIjqch4FbxzDesJY6j0V65s r7;
        java.util.function.Consumer r8;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        z1 = specialinvoke r0.<com.android.server.pm.ShortcutService: boolean isUserLoadedLocked(int)>(i0);

        r2 = virtualinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutUser getUserShortcutsLocked(int)>(i0);

        z3 = 0;

        if i1 != i0 goto label1;

        z3 = 0;

        $r4 = virtualinvoke r2.<com.android.server.pm.ShortcutUser: com.android.server.pm.ShortcutPackage removePackage(java.lang.String)>(r1);

        if $r4 == null goto label1;

        z3 = 1;

     label1:
        virtualinvoke r2.<com.android.server.pm.ShortcutUser: com.android.server.pm.ShortcutLauncher removeLauncher(int,java.lang.String)>(i1, r1);

        r7 = new com.android.server.pm._$$Lambda$ShortcutService$rj7stIjqch4FbxzDesJY6j0V65s;

        specialinvoke r7.<com.android.server.pm._$$Lambda$ShortcutService$rj7stIjqch4FbxzDesJY6j0V65s: void <init>(java.lang.String,int)>(r1, i1);

        virtualinvoke r2.<com.android.server.pm.ShortcutUser: void forAllLaunchers(java.util.function.Consumer)>(r7);

        $r6 = <com.android.server.pm._$$Lambda$ShortcutService$d1c3hmNwu_ycWMRQ1TT467sb_oU: com.android.server.pm.'-$$Lambda$ShortcutService$d1c3hmNwu_ycWMRQ1TT467sb-oU' INSTANCE>;

        r8 = (java.util.function.Consumer) $r6;

        virtualinvoke r2.<com.android.server.pm.ShortcutUser: void forAllPackages(java.util.function.Consumer)>(r8);

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void scheduleSaveUser(int)>(i0);

        if z3 == 0 goto label2;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void notifyListeners(java.lang.String,int)>(r1, i0);

     label2:
        if z0 == 0 goto label3;

        if i1 != i0 goto label3;

        virtualinvoke r2.<com.android.server.pm.ShortcutUser: void rescanPackageIfNeeded(java.lang.String,boolean)>(r1, 1);

     label3:
        if z1 != 0 goto label4;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void unloadUserLocked(int)>(i0);

     label4:
        return;
    }

    public void cleanupBitmapsForPackage(int, java.lang.String)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        java.io.File $r2, $r3;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r4;
        java.lang.String $r7, r8;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        $r2 = new java.io.File;

        $r3 = virtualinvoke r0.<com.android.server.pm.ShortcutService: java.io.File getUserBitmapFilePath(int)>(i0);

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, r8);

        $z0 = virtualinvoke $r2.<java.io.File: boolean isDirectory()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $z1 = staticinvoke <android.os.FileUtils: boolean deleteContents(java.io.File)>($r2);

        if $z1 == 0 goto label2;

        $z2 = virtualinvoke $r2.<java.io.File: boolean delete()>();

        if $z2 != 0 goto label3;

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to remove directory ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ShortcutService", $r7);

     label3:
        return;
    }

    public android.content.Intent createShortcutResultIntent(java.lang.String, android.content.pm.ShortcutInfo, int) throws android.os.RemoteException
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        boolean $z0;
        com.android.server.pm.ShortcutRequestPinProcessor $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;
        android.content.pm.ShortcutInfo r5;
        java.lang.Object r6;
        android.content.Intent r7;

        r0 := @this: com.android.server.pm.ShortcutService;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: android.content.pm.ShortcutInfo;

        i0 := @parameter2: int;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r5);

        $z0 = virtualinvoke r5.<android.content.pm.ShortcutInfo: boolean isEnabled()>();

        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "Shortcut must be enabled");

        specialinvoke r0.<com.android.server.pm.ShortcutService: void verifyCaller(java.lang.String,int)>(r4, i0);

        specialinvoke r0.<com.android.server.pm.ShortcutService: void verifyShortcutInfoPackage(java.lang.String,android.content.pm.ShortcutInfo)>(r4, r5);

        r6 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r6;

     label1:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void throwIfUserLockedL(int)>(i0);

        $r2 = r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutRequestPinProcessor mShortcutRequestPinProcessor>;

        r7 = virtualinvoke $r2.<com.android.server.pm.ShortcutRequestPinProcessor: android.content.Intent createShortcutResultIntent(android.content.pm.ShortcutInfo,int)>(r5, i0);

        exitmonitor r6;

     label2:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void verifyStates()>();

        return r7;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r6;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void disableShortcuts(java.lang.String, java.util.List, java.lang.CharSequence, int, int)
    {
        com.android.server.pm.ShortcutService r0;
        java.util.List r1;
        int i0, i1, $i2, i3;
        java.lang.Object r2, $r6;
        com.android.server.pm.ShortcutPackage r3;
        java.lang.String r4, $r7, r11, r14;
        android.content.pm.ShortcutInfo r5, $r9;
        java.lang.CharSequence $r8, r12;
        boolean $z0;
        java.lang.Throwable $r10;
        java.util.ArrayList r13, r15, r16, r17;

        r0 := @this: com.android.server.pm.ShortcutService;

        r11 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.List;

        r12 := @parameter2: java.lang.CharSequence;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void verifyCaller(java.lang.String,int)>(r11, i1);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "shortcutIds must be provided");

        r13 = null;

        r2 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void throwIfUserLockedL(int)>(i1);

        r3 = virtualinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutPackage getPackageShortcutsForPublisherLocked(java.lang.String,int)>(r11, i1);

        virtualinvoke r3.<com.android.server.pm.ShortcutPackage: void ensureImmutableShortcutsNotIncludedWithIds(java.util.List,boolean)>(r1, 1);

     label02:
        if r12 != null goto label03;

        r14 = null;

        goto label04;

     label03:
        r14 = interfaceinvoke r12.<java.lang.CharSequence: java.lang.String toString()>();

     label04:
        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        i3 = $i2 - 1;

     label05:
        r15 = null;

     label06:
        if i3 < 0 goto label19;

     label07:
        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);

        $r7 = (java.lang.String) $r6;

        $r8 = staticinvoke <com.android.internal.util.Preconditions: java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence)>($r7);

        r4 = (java.lang.String) $r8;

        $z0 = virtualinvoke r3.<com.android.server.pm.ShortcutPackage: boolean isShortcutExistsAndVisibleToPublisher(java.lang.String)>(r4);

        if $z0 != 0 goto label09;

     label08:
        goto label18;

     label09:
        r5 = virtualinvoke r3.<com.android.server.pm.ShortcutPackage: android.content.pm.ShortcutInfo disableWithId(java.lang.String,java.lang.String,int,boolean,boolean,int)>(r4, r14, i0, 0, 1, 1);

     label10:
        if r5 != null goto label14;

        r16 = r13;

        if r13 != null goto label12;

     label11:
        r16 = new java.util.ArrayList;

        specialinvoke r16.<java.util.ArrayList: void <init>(int)>(1);

     label12:
        $r9 = virtualinvoke r3.<com.android.server.pm.ShortcutPackage: android.content.pm.ShortcutInfo findShortcutById(java.lang.String)>(r4);

        interfaceinvoke r16.<java.util.List: boolean add(java.lang.Object)>($r9);

     label13:
        r13 = r16;

        goto label18;

     label14:
        r17 = r15;

        if r15 != null goto label16;

     label15:
        r17 = new java.util.ArrayList;

        specialinvoke r17.<java.util.ArrayList: void <init>(int)>(1);

     label16:
        interfaceinvoke r17.<java.util.List: boolean add(java.lang.Object)>(r5);

     label17:
        r15 = r17;

     label18:
        i3 = i3 + -1;

        goto label06;

     label19:
        virtualinvoke r3.<com.android.server.pm.ShortcutPackage: void adjustRanks()>();

        exitmonitor r2;

     label20:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void packageShortcutsChanged(java.lang.String,int,java.util.List,java.util.List)>(r11, i1, r13, r15);

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void verifyStates()>();

        return;

     label21:
        $r10 := @caughtexception;

     label22:
        exitmonitor r2;

     label23:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label21;
        catch java.lang.Throwable from label03 to label04 with label21;
        catch java.lang.Throwable from label04 to label05 with label21;
        catch java.lang.Throwable from label07 to label08 with label21;
        catch java.lang.Throwable from label09 to label10 with label21;
        catch java.lang.Throwable from label11 to label12 with label21;
        catch java.lang.Throwable from label12 to label13 with label21;
        catch java.lang.Throwable from label15 to label16 with label21;
        catch java.lang.Throwable from label16 to label17 with label21;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label22 to label23 with label21;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.pm.ShortcutService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        android.content.Context $r4;
        boolean $z0;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r4 = r0.<com.android.server.pm.ShortcutService: android.content.Context mContext>;

        $z0 = staticinvoke <com.android.internal.util.DumpUtils: boolean checkDumpAndUsageStatsPermission(android.content.Context,java.lang.String,java.io.PrintWriter)>($r4, "ShortcutService", r2);

        if $z0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void dumpNoCheck(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3);

        return;
    }

    void dumpNoCheck(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.pm.ShortcutService r0;
        java.io.PrintWriter r1;
        java.lang.String[] r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.io.FileDescriptor r3;
        com.android.server.pm.ShortcutService$DumpFilter r4;

        r0 := @this: com.android.server.pm.ShortcutService;

        r3 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r2 := @parameter2: java.lang.String[];

        r4 = staticinvoke <com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutService$DumpFilter parseDumpArgs(java.lang.String[])>(r2);

        $z0 = virtualinvoke r4.<com.android.server.pm.ShortcutService$DumpFilter: boolean shouldDumpCheckIn()>();

        if $z0 == 0 goto label1;

        $z4 = virtualinvoke r4.<com.android.server.pm.ShortcutService$DumpFilter: boolean shouldCheckInClear()>();

        specialinvoke r0.<com.android.server.pm.ShortcutService: void dumpCheckin(java.io.PrintWriter,boolean)>(r1, $z4);

        goto label4;

     label1:
        $z1 = virtualinvoke r4.<com.android.server.pm.ShortcutService$DumpFilter: boolean shouldDumpMain()>();

        if $z1 == 0 goto label2;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void dumpInner(java.io.PrintWriter,com.android.server.pm.ShortcutService$DumpFilter)>(r1, r4);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label2:
        $z2 = virtualinvoke r4.<com.android.server.pm.ShortcutService$DumpFilter: boolean shouldDumpUid()>();

        if $z2 == 0 goto label3;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void dumpUid(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label3:
        $z3 = virtualinvoke r4.<com.android.server.pm.ShortcutService$DumpFilter: boolean shouldDumpFiles()>();

        if $z3 == 0 goto label4;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void dumpDumpFiles(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label4:
        return;
    }

    public void enableShortcuts(java.lang.String, java.util.List, int)
    {
        com.android.server.pm.ShortcutService r0;
        java.util.List r1;
        int i0, $i1, i2;
        java.lang.Object r2, $r6;
        com.android.server.pm.ShortcutPackage r3;
        java.lang.String r4, $r7, r11;
        java.lang.CharSequence $r8;
        boolean $z0;
        android.content.pm.ShortcutInfo $r9;
        java.lang.Throwable $r10;
        java.util.ArrayList r12, r13;

        r0 := @this: com.android.server.pm.ShortcutService;

        r11 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void verifyCaller(java.lang.String,int)>(r11, i0);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "shortcutIds must be provided");

        r12 = null;

        r2 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void throwIfUserLockedL(int)>(i0);

        r3 = virtualinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutPackage getPackageShortcutsForPublisherLocked(java.lang.String,int)>(r11, i0);

        virtualinvoke r3.<com.android.server.pm.ShortcutPackage: void ensureImmutableShortcutsNotIncludedWithIds(java.util.List,boolean)>(r1, 1);

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        i2 = $i1 - 1;

     label02:
        if i2 < 0 goto label10;

     label03:
        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        $r7 = (java.lang.String) $r6;

        $r8 = staticinvoke <com.android.internal.util.Preconditions: java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence)>($r7);

        r4 = (java.lang.String) $r8;

        $z0 = virtualinvoke r3.<com.android.server.pm.ShortcutPackage: boolean isShortcutExistsAndVisibleToPublisher(java.lang.String)>(r4);

        if $z0 != 0 goto label05;

     label04:
        r13 = r12;

        goto label09;

     label05:
        virtualinvoke r3.<com.android.server.pm.ShortcutPackage: void enableWithId(java.lang.String)>(r4);

     label06:
        r13 = r12;

        if r12 != null goto label08;

     label07:
        r13 = new java.util.ArrayList;

        specialinvoke r13.<java.util.ArrayList: void <init>(int)>(1);

     label08:
        $r9 = virtualinvoke r3.<com.android.server.pm.ShortcutPackage: android.content.pm.ShortcutInfo findShortcutById(java.lang.String)>(r4);

        interfaceinvoke r13.<java.util.List: boolean add(java.lang.Object)>($r9);

     label09:
        i2 = i2 + -1;

        r12 = r13;

        goto label02;

     label10:
        exitmonitor r2;

     label11:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void packageShortcutsChanged(java.lang.String,int,java.util.List,java.util.List)>(r11, i0, r12, null);

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void verifyStates()>();

        return;

     label12:
        $r10 := @caughtexception;

     label13:
        exitmonitor r2;

     label14:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    void enforceMaxActivityShortcuts(int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0, $i1;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.server.pm.ShortcutService: int mMaxShortcuts>;

        if i0 > $i1 goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Max number of dynamic shortcuts exceeded");

        throw $r1;
    }

    void fixUpShortcutResourceNamesAndValues(android.content.pm.ShortcutInfo)
    {
        com.android.server.pm.ShortcutService r0;
        android.content.res.Resources r1;
        long l0;
        java.lang.String $r2;
        int $i1;
        java.lang.Throwable $r3;
        android.content.pm.ShortcutInfo r4;

        r0 := @this: com.android.server.pm.ShortcutService;

        r4 := @parameter0: android.content.pm.ShortcutInfo;

        $r2 = virtualinvoke r4.<android.content.pm.ShortcutInfo: java.lang.String getPackage()>();

        $i1 = virtualinvoke r4.<android.content.pm.ShortcutInfo: int getUserId()>();

        r1 = virtualinvoke r0.<com.android.server.pm.ShortcutService: android.content.res.Resources injectGetResourcesForApplicationAsUser(java.lang.String,int)>($r2, $i1);

        if r1 == null goto label4;

        l0 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long getStatStartTime()>();

     label1:
        virtualinvoke r4.<android.content.pm.ShortcutInfo: void lookupAndFillInResourceNames(android.content.res.Resources)>(r1);

     label2:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void logDurationStat(int,long)>(10, l0);

        virtualinvoke r4.<android.content.pm.ShortcutInfo: void resolveResourceStrings(android.content.res.Resources)>(r1);

        goto label4;

     label3:
        $r3 := @caughtexception;

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void logDurationStat(int,long)>(10, l0);

        throw $r3;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void forEachLoadedUserLocked(java.util.function.Consumer)
    {
        com.android.server.pm.ShortcutService r0;
        java.util.function.Consumer r1;
        android.util.SparseArray $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;
        com.android.server.pm.ShortcutUser $r5;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.util.function.Consumer;

        $r2 = r0.<com.android.server.pm.ShortcutService: android.util.SparseArray mUsers>;

        $i0 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r3 = r0.<com.android.server.pm.ShortcutService: android.util.SparseArray mUsers>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r5 = (com.android.server.pm.ShortcutUser) $r4;

        interfaceinvoke r1.<java.util.function.Consumer: void accept(java.lang.Object)>($r5);

        i1 = i1 + -1;

        goto label1;

     label2:
        return;
    }

    final android.content.pm.ActivityInfo getActivityInfoWithMetadata(android.content.ComponentName, int)
    {
        com.android.server.pm.ShortcutService r0;
        android.content.ComponentName r1;
        int i0;
        android.content.pm.ActivityInfo $r2, $r3;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<com.android.server.pm.ShortcutService: android.content.pm.ActivityInfo injectGetActivityInfoWithMetadataWithUninstalled(android.content.ComponentName,int)>(r1, i0);

        $r3 = staticinvoke <com.android.server.pm.ShortcutService: android.content.pm.ActivityInfo isInstalledOrNull(android.content.pm.ActivityInfo)>($r2);

        return $r3;
    }

    final android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String, int)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String r1;
        int i0;
        android.content.pm.ApplicationInfo $r2, $r3;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<com.android.server.pm.ShortcutService: android.content.pm.ApplicationInfo injectApplicationInfoWithUninstalled(java.lang.String,int)>(r1, i0);

        $r3 = staticinvoke <com.android.server.pm.ShortcutService: android.content.pm.ApplicationInfo isInstalledOrNull(android.content.pm.ApplicationInfo)>($r2);

        return $r3;
    }

    public byte[] getBackupPayload(int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        java.lang.Object r1;
        boolean $z0;
        com.android.server.pm.'-$$Lambda$ShortcutService$mNwniqV8XK-aVyI-funosKuIRJ8' $r2;
        com.android.server.pm.'-$$Lambda$ShortcutService$_rlNR7xXJi6hWEa-KZ7AV3g9QPc' $r3;
        com.android.server.pm.'-$$Lambda$ShortcutService$mZdy1Q9fQc3nEqL6qWbR629JNBo' $r4;
        com.android.server.pm.ShortcutDumpFiles $r5;
        java.lang.String $r8, $r12;
        java.lang.Throwable $r13, $r14;
        com.android.server.pm.ShortcutUser r16;
        byte[] r19;
        java.lang.StringBuilder r22, r23;
        java.io.ByteArrayOutputStream r24;
        java.util.function.Consumer r25, r26, r27;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void enforceSystem()>();

        r1 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $z0 = virtualinvoke r0.<com.android.server.pm.ShortcutService: boolean isUserUnlockedL(int)>(i0);

        if $z0 != 0 goto label03;

        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t backup: user ");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is locked or not running");

        $r12 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void wtf(java.lang.String)>($r12);

        exitmonitor r1;

     label02:
        return null;

     label03:
        r16 = virtualinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutUser getUserShortcutsLocked(int)>(i0);

     label04:
        if r16 != null goto label07;

     label05:
        r23 = new java.lang.StringBuilder;

        specialinvoke r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t backup: user not found: id=");

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void wtf(java.lang.String)>($r8);

        exitmonitor r1;

     label06:
        return null;

     label07:
        $r2 = <com.android.server.pm._$$Lambda$ShortcutService$mNwniqV8XK_aVyI_funosKuIRJ8: com.android.server.pm.'-$$Lambda$ShortcutService$mNwniqV8XK-aVyI-funosKuIRJ8' INSTANCE>;

        r25 = (java.util.function.Consumer) $r2;

        virtualinvoke r16.<com.android.server.pm.ShortcutUser: void forAllPackageItems(java.util.function.Consumer)>(r25);

        $r3 = <com.android.server.pm._$$Lambda$ShortcutService$_rlNR7xXJi6hWEa_KZ7AV3g9QPc: com.android.server.pm.'-$$Lambda$ShortcutService$_rlNR7xXJi6hWEa-KZ7AV3g9QPc' INSTANCE>;

        r26 = (java.util.function.Consumer) $r3;

        virtualinvoke r16.<com.android.server.pm.ShortcutUser: void forAllPackages(java.util.function.Consumer)>(r26);

        $r4 = <com.android.server.pm._$$Lambda$ShortcutService$mZdy1Q9fQc3nEqL6qWbR629JNBo: com.android.server.pm.'-$$Lambda$ShortcutService$mZdy1Q9fQc3nEqL6qWbR629JNBo' INSTANCE>;

        r27 = (java.util.function.Consumer) $r4;

        virtualinvoke r16.<com.android.server.pm.ShortcutUser: void forAllLaunchers(java.util.function.Consumer)>(r27);

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void scheduleSaveUser(int)>(i0);

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void saveDirtyInfo()>();

        r24 = new java.io.ByteArrayOutputStream;

        specialinvoke r24.<java.io.ByteArrayOutputStream: void <init>(int)>(32768);

     label08:
        specialinvoke r0.<com.android.server.pm.ShortcutService: void saveUserInternalLocked(int,java.io.OutputStream,boolean)>(i0, r24, 1);

     label09:
        r19 = virtualinvoke r24.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r5 = r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutDumpFiles mShortcutDumpFiles>;

        virtualinvoke $r5.<com.android.server.pm.ShortcutDumpFiles: boolean save(java.lang.String,byte[])>("backup-1-payload.txt", r19);

        exitmonitor r1;

     label10:
        return r19;

     label11:
        $r13 := @caughtexception;

     label12:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ShortcutService", "Backup failed.", $r13);

        exitmonitor r1;

     label13:
        return null;

     label14:
        $r14 := @caughtexception;

     label15:
        exitmonitor r1;

     label16:
        throw $r14;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch org.xmlpull.v1.XmlPullParserException from label08 to label09 with label11;
        catch java.io.IOException from label08 to label09 with label11;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    android.content.ComponentName getDefaultLauncher(int)
    {
        com.android.server.pm.ShortcutService r0;
        long l0, l1, l2;
        java.lang.Object r1, $r5;
        com.android.server.pm.ShortcutUser r2;
        java.util.ArrayList r3;
        int i3, $i4, i6, i7, i8;
        android.content.pm.PackageManagerInternal $r4;
        android.content.pm.ActivityInfo $r6, $r8;
        android.content.pm.ApplicationInfo $r7;
        boolean $z0, $z1;
        java.lang.String $r12;
        java.lang.Throwable $r13, $r14;
        android.content.ComponentName r15, r16;
        java.lang.StringBuilder r17;
        android.content.pm.ResolveInfo r18;

        r0 := @this: com.android.server.pm.ShortcutService;

        i6 := @parameter0: int;

        l0 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long getStatStartTime()>();

        l1 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long injectClearCallingIdentity()>();

     label01:
        r1 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r1;

     label02:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void throwIfUserLockedL(int)>(i6);

        r2 = virtualinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutUser getUserShortcutsLocked(int)>(i6);

        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        l2 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long getStatStartTime()>();

        $r4 = r0.<com.android.server.pm.ShortcutService: android.content.pm.PackageManagerInternal mPackageManagerInternal>;

        r15 = virtualinvoke $r4.<android.content.pm.PackageManagerInternal: android.content.ComponentName getHomeActivitiesAsUser(java.util.List,int)>(r3, i6);

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void logDurationStat(int,long)>(0, l2);

     label03:
        if r15 == null goto label04;

        goto label11;

     label04:
        r16 = virtualinvoke r2.<com.android.server.pm.ShortcutUser: android.content.ComponentName getLastKnownLauncher()>();

     label05:
        r15 = r16;

        if r16 == null goto label11;

     label06:
        $z1 = virtualinvoke r0.<com.android.server.pm.ShortcutService: boolean injectIsActivityEnabledAndExported(android.content.ComponentName,int)>(r16, i6);

        if $z1 == 0 goto label08;

     label07:
        r15 = r16;

        goto label11;

     label08:
        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cached launcher ");

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16);

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" no longer exists");

        $r12 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ShortcutService", $r12);

     label09:
        r15 = null;

     label10:
        virtualinvoke r2.<com.android.server.pm.ShortcutUser: void clearLauncher()>();

     label11:
        if r15 != null goto label22;

     label12:
        i3 = interfaceinvoke r3.<java.util.List: int size()>();

     label13:
        i7 = -2147483648;

        i8 = 0;

     label14:
        if i8 >= i3 goto label21;

     label15:
        $r5 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i8);

        r18 = (android.content.pm.ResolveInfo) $r5;

        $r6 = r18.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r7 = $r6.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $z0 = virtualinvoke $r7.<android.content.pm.ApplicationInfo: boolean isSystemApp()>();

        if $z0 != 0 goto label17;

     label16:
        goto label20;

     label17:
        $i4 = r18.<android.content.pm.ResolveInfo: int priority>;

        if $i4 >= i7 goto label19;

     label18:
        goto label20;

     label19:
        $r8 = r18.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        r15 = virtualinvoke $r8.<android.content.pm.ActivityInfo: android.content.ComponentName getComponentName()>();

        i7 = r18.<android.content.pm.ResolveInfo: int priority>;

     label20:
        i8 = i8 + 1;

        goto label14;

     label21:
        goto label22;

     label22:
        exitmonitor r1;

     label23:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRestoreCallingIdentity(long)>(l1);

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void logDurationStat(int,long)>(16, l0);

        return r15;

     label24:
        $r13 := @caughtexception;

     label25:
        exitmonitor r1;

     label26:
        throw $r13;

     label27:
        $r14 := @caughtexception;

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRestoreCallingIdentity(long)>(l1);

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void logDurationStat(int,long)>(16, l0);

        throw $r14;

        catch java.lang.Throwable from label01 to label02 with label27;
        catch java.lang.Throwable from label02 to label03 with label24;
        catch java.lang.Throwable from label04 to label05 with label24;
        catch java.lang.Throwable from label06 to label07 with label24;
        catch java.lang.Throwable from label08 to label09 with label24;
        catch java.lang.Throwable from label10 to label11 with label24;
        catch java.lang.Throwable from label12 to label13 with label24;
        catch java.lang.Throwable from label15 to label16 with label24;
        catch java.lang.Throwable from label17 to label18 with label24;
        catch java.lang.Throwable from label19 to label20 with label24;
        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.Throwable from label25 to label26 with label24;
        catch java.lang.Throwable from label26 to label27 with label27;
    }

    android.content.ComponentName getDummyMainActivity(java.lang.String)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String r1;
        android.content.ComponentName $r2;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.lang.String;

        $r2 = new android.content.ComponentName;

        specialinvoke $r2.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>(r1, "android.__dummy__");

        return $r2;
    }

    public java.io.File getDumpPath()
    {
        com.android.server.pm.ShortcutService r0;
        java.io.File $r1, $r2;

        r0 := @this: com.android.server.pm.ShortcutService;

        $r1 = new java.io.File;

        $r2 = virtualinvoke r0.<com.android.server.pm.ShortcutService: java.io.File injectUserDataPath(int)>(0);

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "shortcut_dump");

        return $r1;
    }

    public int getIconMaxDimensions(java.lang.String, int)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        java.lang.String r3;
        int i0, i1;

        r0 := @this: com.android.server.pm.ShortcutService;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void verifyCaller(java.lang.String,int)>(r3, i0);

        r1 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        i1 = r0.<com.android.server.pm.ShortcutService: int mMaxIconDimension>;

        exitmonitor r1;

     label2:
        return i1;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    android.graphics.Bitmap$CompressFormat getIconPersistFormatForTest()
    {
        com.android.server.pm.ShortcutService r0;
        android.graphics.Bitmap$CompressFormat $r1;

        r0 := @this: com.android.server.pm.ShortcutService;

        $r1 = r0.<com.android.server.pm.ShortcutService: android.graphics.Bitmap$CompressFormat mIconPersistFormat>;

        return $r1;
    }

    int getIconPersistQualityForTest()
    {
        com.android.server.pm.ShortcutService r0;
        int $i0;

        r0 := @this: com.android.server.pm.ShortcutService;

        $i0 = r0.<com.android.server.pm.ShortcutService: int mIconPersistQuality>;

        return $i0;
    }

    final java.util.List getInstalledPackages(int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        long l1, l2;
        java.util.function.Predicate $r1;
        java.lang.Throwable $r2;
        android.os.RemoteException $r3;
        java.util.List r4;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 := @parameter0: int;

        l1 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long getStatStartTime()>();

        l2 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long injectClearCallingIdentity()>();

     label1:
        r4 = virtualinvoke r0.<com.android.server.pm.ShortcutService: java.util.List injectGetPackagesWithUninstalled(int)>(i0);

        $r1 = <com.android.server.pm.ShortcutService: java.util.function.Predicate PACKAGE_NOT_INSTALLED>;

        interfaceinvoke r4.<java.util.List: boolean removeIf(java.util.function.Predicate)>($r1);

     label2:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRestoreCallingIdentity(long)>(l2);

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void logDurationStat(int,long)>(7, l1);

        return r4;

     label3:
        $r2 := @caughtexception;

        goto label7;

     label4:
        $r3 := @caughtexception;

     label5:
        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("ShortcutService", "RemoteException", $r3);

     label6:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRestoreCallingIdentity(long)>(l2);

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void logDurationStat(int,long)>(7, l1);

        return null;

     label7:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRestoreCallingIdentity(long)>(l2);

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void logDurationStat(int,long)>(7, l1);

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    long getLastResetTimeLocked()
    {
        com.android.server.pm.ShortcutService r0;
        long $l0;

        r0 := @this: com.android.server.pm.ShortcutService;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void updateTimesLocked()>();

        $l0 = r0.<com.android.server.pm.ShortcutService: long mRawLastResetTime>;

        return $l0;
    }

    com.android.server.pm.ShortcutLauncher getLauncherShortcutForTest(java.lang.String, int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        java.lang.Object r1, $r4, $r7;
        com.android.server.pm.ShortcutUser r2;
        android.util.SparseArray $r3;
        android.util.ArrayMap $r5;
        com.android.server.pm.ShortcutUser$PackageWithUser $r6;
        java.lang.Throwable $r8;
        java.lang.String r9;
        com.android.server.pm.ShortcutLauncher r10;

        r0 := @this: com.android.server.pm.ShortcutService;

        r9 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.pm.ShortcutService: android.util.SparseArray mUsers>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.pm.ShortcutUser) $r4;

     label2:
        if r2 != null goto label5;

     label3:
        exitmonitor r1;

     label4:
        return null;

     label5:
        $r5 = virtualinvoke r2.<com.android.server.pm.ShortcutUser: android.util.ArrayMap getAllLaunchersForTest()>();

        $r6 = staticinvoke <com.android.server.pm.ShortcutUser$PackageWithUser: com.android.server.pm.ShortcutUser$PackageWithUser of(int,java.lang.String)>(i0, r9);

        $r7 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r6);

        r10 = (com.android.server.pm.ShortcutLauncher) $r7;

        exitmonitor r1;

     label6:
        return r10;

     label7:
        $r8 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    com.android.server.pm.ShortcutLauncher getLauncherShortcutsLocked(java.lang.String, int, int)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String r1;
        int i0, i1;
        com.android.server.pm.ShortcutUser $r2;
        com.android.server.pm.ShortcutLauncher $r3;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = virtualinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutUser getUserShortcutsLocked(int)>(i0);

        $r3 = virtualinvoke $r2.<com.android.server.pm.ShortcutUser: com.android.server.pm.ShortcutLauncher getLauncherShortcuts(java.lang.String,int)>(r1, i1);

        return $r3;
    }

    int getMaxActivityShortcuts()
    {
        com.android.server.pm.ShortcutService r0;
        int $i0;

        r0 := @this: com.android.server.pm.ShortcutService;

        $i0 = r0.<com.android.server.pm.ShortcutService: int mMaxShortcuts>;

        return $i0;
    }

    int getMaxIconDimensionForTest()
    {
        com.android.server.pm.ShortcutService r0;
        int $i0;

        r0 := @this: com.android.server.pm.ShortcutService;

        $i0 = r0.<com.android.server.pm.ShortcutService: int mMaxIconDimension>;

        return $i0;
    }

    public int getMaxShortcutCountPerActivity(java.lang.String, int) throws android.os.RemoteException
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String r1;
        int i0, $i1;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void verifyCaller(java.lang.String,int)>(r1, i0);

        $i1 = r0.<com.android.server.pm.ShortcutService: int mMaxShortcuts>;

        return $i1;
    }

    int getMaxShortcutsForTest()
    {
        com.android.server.pm.ShortcutService r0;
        int $i0;

        r0 := @this: com.android.server.pm.ShortcutService;

        $i0 = r0.<com.android.server.pm.ShortcutService: int mMaxShortcuts>;

        return $i0;
    }

    int getMaxUpdatesPerIntervalForTest()
    {
        com.android.server.pm.ShortcutService r0;
        int $i0;

        r0 := @this: com.android.server.pm.ShortcutService;

        $i0 = r0.<com.android.server.pm.ShortcutService: int mMaxUpdatesPerInterval>;

        return $i0;
    }

    long getNextResetTimeLocked()
    {
        com.android.server.pm.ShortcutService r0;
        long $l0, $l1, $l2;

        r0 := @this: com.android.server.pm.ShortcutService;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void updateTimesLocked()>();

        $l1 = r0.<com.android.server.pm.ShortcutService: long mRawLastResetTime>;

        $l0 = r0.<com.android.server.pm.ShortcutService: long mResetInterval>;

        $l2 = $l1 + $l0;

        return $l2;
    }

    com.android.server.pm.ShortcutNonPersistentUser getNonPersistentUserLocked(int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        com.android.server.pm.ShortcutNonPersistentUser r1, $r4, r6;
        android.util.SparseArray $r2, $r5;
        java.lang.Object $r3;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.pm.ShortcutService: android.util.SparseArray mShortcutNonPersistentUsers>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.pm.ShortcutNonPersistentUser) $r3;

        r6 = r1;

        if r1 != null goto label1;

        $r4 = new com.android.server.pm.ShortcutNonPersistentUser;

        specialinvoke $r4.<com.android.server.pm.ShortcutNonPersistentUser: void <init>(com.android.server.pm.ShortcutService,int)>(r0, i0);

        r6 = $r4;

        $r5 = r0.<com.android.server.pm.ShortcutService: android.util.SparseArray mShortcutNonPersistentUsers>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r4);

     label1:
        return r6;
    }

    final android.content.pm.PackageInfo getPackageInfo(java.lang.String, int)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String r1;
        int i0;
        android.content.pm.PackageInfo $r2;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<com.android.server.pm.ShortcutService: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,boolean)>(r1, i0, 0);

        return $r2;
    }

    final android.content.pm.PackageInfo getPackageInfo(java.lang.String, int, boolean)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String r1;
        int i0;
        boolean z0;
        android.content.pm.PackageInfo $r2, $r3;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r2 = virtualinvoke r0.<com.android.server.pm.ShortcutService: android.content.pm.PackageInfo injectPackageInfoWithUninstalled(java.lang.String,int,boolean)>(r1, i0, z0);

        $r3 = staticinvoke <com.android.server.pm.ShortcutService: android.content.pm.PackageInfo isInstalledOrNull(android.content.pm.PackageInfo)>($r2);

        return $r3;
    }

    final android.content.pm.PackageInfo getPackageInfoWithSignatures(java.lang.String, int)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String r1;
        int i0;
        android.content.pm.PackageInfo $r2;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<com.android.server.pm.ShortcutService: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,boolean)>(r1, i0, 1);

        return $r2;
    }

    android.content.pm.ShortcutInfo getPackageShortcutForTest(java.lang.String, java.lang.String, int)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String r1, r4;
        int i0;
        java.lang.Object r2;
        java.lang.Throwable $r3;
        com.android.server.pm.ShortcutPackage r5;
        android.content.pm.ShortcutInfo r6;

        r0 := @this: com.android.server.pm.ShortcutService;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        r5 = virtualinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutPackage getPackageShortcutForTest(java.lang.String,int)>(r4, i0);

     label2:
        if r5 != null goto label5;

     label3:
        exitmonitor r2;

     label4:
        return null;

     label5:
        r6 = virtualinvoke r5.<com.android.server.pm.ShortcutPackage: android.content.pm.ShortcutInfo findShortcutById(java.lang.String)>(r1);

        exitmonitor r2;

     label6:
        return r6;

     label7:
        $r3 := @caughtexception;

     label8:
        exitmonitor r2;

     label9:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    com.android.server.pm.ShortcutPackage getPackageShortcutForTest(java.lang.String, int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        java.lang.Object r1, $r4, $r6;
        com.android.server.pm.ShortcutUser r2;
        android.util.SparseArray $r3;
        android.util.ArrayMap $r5;
        java.lang.Throwable $r7;
        java.lang.String r8;
        com.android.server.pm.ShortcutPackage r9;

        r0 := @this: com.android.server.pm.ShortcutService;

        r8 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.pm.ShortcutService: android.util.SparseArray mUsers>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.pm.ShortcutUser) $r4;

     label2:
        if r2 != null goto label5;

     label3:
        exitmonitor r1;

     label4:
        return null;

     label5:
        $r5 = virtualinvoke r2.<com.android.server.pm.ShortcutUser: android.util.ArrayMap getAllPackagesForTest()>();

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r8);

        r9 = (com.android.server.pm.ShortcutPackage) $r6;

        exitmonitor r1;

     label6:
        return r9;

     label7:
        $r7 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    com.android.server.pm.ShortcutPackage getPackageShortcutsForPublisherLocked(java.lang.String, int)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String r1;
        int i0;
        com.android.server.pm.ShortcutPackage r2;
        com.android.server.pm.ShortcutUser $r3, $r4;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r3 = virtualinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutUser getUserShortcutsLocked(int)>(i0);

        r2 = virtualinvoke $r3.<com.android.server.pm.ShortcutUser: com.android.server.pm.ShortcutPackage getPackageShortcuts(java.lang.String)>(r1);

        $r4 = virtualinvoke r2.<com.android.server.pm.ShortcutPackage: com.android.server.pm.ShortcutUser getUser()>();

        virtualinvoke $r4.<com.android.server.pm.ShortcutUser: void onCalledByPublisher(java.lang.String)>(r1);

        return r2;
    }

    com.android.server.pm.ShortcutPackage getPackageShortcutsLocked(java.lang.String, int)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String r1;
        int i0;
        com.android.server.pm.ShortcutUser $r2;
        com.android.server.pm.ShortcutPackage $r3;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutUser getUserShortcutsLocked(int)>(i0);

        $r3 = virtualinvoke $r2.<com.android.server.pm.ShortcutUser: com.android.server.pm.ShortcutPackage getPackageShortcuts(java.lang.String)>(r1);

        return $r3;
    }

    int getParentOrSelfUserId(int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0, $i1;
        android.os.UserManagerInternal $r1;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.pm.ShortcutService: android.os.UserManagerInternal mUserManagerInternal>;

        $i1 = virtualinvoke $r1.<android.os.UserManagerInternal: int getProfileParentId(int)>(i0);

        return $i1;
    }

    public long getRateLimitResetTime(java.lang.String, int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        long l1;
        java.lang.Throwable $r2;
        java.lang.String r3;
        java.lang.Object r4;

        r0 := @this: com.android.server.pm.ShortcutService;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void verifyCaller(java.lang.String,int)>(r3, i0);

        r4 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r4;

     label1:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void throwIfUserLockedL(int)>(i0);

        l1 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long getNextResetTimeLocked()>();

        exitmonitor r4;

     label2:
        return l1;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r4;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int getRemainingCallCount(java.lang.String, int)
    {
        com.android.server.pm.ShortcutService r0;
        boolean z0;
        java.lang.Object r1;
        int i0, $i1, $i2, $i3, i4, i5;
        java.lang.Throwable $r2;
        java.lang.String r3;
        com.android.server.pm.ShortcutPackage r4;

        r0 := @this: com.android.server.pm.ShortcutService;

        r3 := @parameter0: java.lang.String;

        i4 := @parameter1: int;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void verifyCaller(java.lang.String,int)>(r3, i4);

        $i1 = virtualinvoke r0.<com.android.server.pm.ShortcutService: int injectBinderCallingPid()>();

        $i2 = virtualinvoke r0.<com.android.server.pm.ShortcutService: int injectBinderCallingUid()>();

        z0 = virtualinvoke r0.<com.android.server.pm.ShortcutService: boolean injectHasUnlimitedShortcutsApiCallsPermission(int,int)>($i1, $i2);

        r1 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void throwIfUserLockedL(int)>(i4);

        r4 = virtualinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutPackage getPackageShortcutsForPublisherLocked(java.lang.String,int)>(r3, i4);

        i5 = r0.<com.android.server.pm.ShortcutService: int mMaxUpdatesPerInterval>;

        i0 = virtualinvoke r4.<com.android.server.pm.ShortcutPackage: int getApiCallCount(boolean)>(z0);

        exitmonitor r1;

     label2:
        $i3 = i5 - i0;

        return $i3;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    long getResetIntervalForTest()
    {
        com.android.server.pm.ShortcutService r0;
        long $l0;

        r0 := @this: com.android.server.pm.ShortcutService;

        $l0 = r0.<com.android.server.pm.ShortcutService: long mResetInterval>;

        return $l0;
    }

    public android.content.pm.ParceledListSlice getShareTargets(java.lang.String, android.content.IntentFilter, int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        java.util.ArrayList r1;
        com.android.server.pm.ShortcutUser r2;
        com.android.server.pm._$$Lambda$ShortcutService$QuvzvQw2OLXyKBCHpvWJarlmahg r3;
        java.lang.Throwable $r6;
        java.lang.String r7;
        android.content.IntentFilter r8;
        java.lang.Object r9;
        android.content.pm.ParceledListSlice r10;

        r0 := @this: com.android.server.pm.ShortcutService;

        r7 := @parameter0: java.lang.String;

        r8 := @parameter1: android.content.IntentFilter;

        i0 := @parameter2: int;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence,java.lang.Object)>(r7, "packageName");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r8, "intentFilter");

        specialinvoke r0.<com.android.server.pm.ShortcutService: void verifyCaller(java.lang.String,int)>(r7, i0);

        specialinvoke r0.<com.android.server.pm.ShortcutService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.MANAGE_APP_PREDICTIONS", "getShareTargets");

        r9 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r9;

     label1:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void throwIfUserLockedL(int)>(i0);

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        r2 = virtualinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutUser getUserShortcutsLocked(int)>(i0);

        r3 = new com.android.server.pm._$$Lambda$ShortcutService$QuvzvQw2OLXyKBCHpvWJarlmahg;

        specialinvoke r3.<com.android.server.pm._$$Lambda$ShortcutService$QuvzvQw2OLXyKBCHpvWJarlmahg: void <init>(java.util.List,android.content.IntentFilter)>(r1, r8);

        virtualinvoke r2.<com.android.server.pm.ShortcutUser: void forAllPackages(java.util.function.Consumer)>(r3);

        r10 = new android.content.pm.ParceledListSlice;

        specialinvoke r10.<android.content.pm.ParceledListSlice: void <init>(java.util.List)>(r1);

        exitmonitor r9;

     label2:
        return r10;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r9;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    com.android.server.pm.ShortcutRequestPinProcessor getShortcutRequestPinProcessorForTest()
    {
        com.android.server.pm.ShortcutService r0;
        com.android.server.pm.ShortcutRequestPinProcessor $r1;

        r0 := @this: com.android.server.pm.ShortcutService;

        $r1 = r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutRequestPinProcessor mShortcutRequestPinProcessor>;

        return $r1;
    }

    public android.content.pm.ParceledListSlice getShortcuts(java.lang.String, int, int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0, $i2, $i3, $i4, $i5, $i8, i9, i10;
        java.lang.Object r1;
        com.android.server.pm._$$Lambda$ShortcutService$bUNM2X7HsDkEuXTgWxUN3PZ91eM r2;
        byte $b6, $b7, b11, b12, b13;
        java.lang.Throwable $r3;
        java.lang.String r4;
        boolean z0, z1, z2, z3;
        android.content.pm.ParceledListSlice r5;

        r0 := @this: com.android.server.pm.ShortcutService;

        r4 := @parameter0: java.lang.String;

        i9 := @parameter1: int;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void verifyCaller(java.lang.String,int)>(r4, i0);

        r1 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void throwIfUserLockedL(int)>(i0);

     label02:
        i10 = 0;

        $i2 = i9 & 2;

        if $i2 == 0 goto label03;

        z0 = 1;

        goto label04;

     label03:
        z0 = 0;

     label04:
        $i3 = i9 & 4;

        if $i3 == 0 goto label05;

        z1 = 1;

        goto label06;

     label05:
        z1 = 0;

     label06:
        $i4 = i9 & 1;

        if $i4 == 0 goto label07;

        z2 = 1;

        goto label08;

     label07:
        z2 = 0;

     label08:
        $i5 = i9 & 8;

        if $i5 == 0 goto label09;

        z3 = 1;

        goto label10;

     label09:
        z3 = 0;

     label10:
        if z0 == 0 goto label11;

        b11 = 1;

        goto label12;

     label11:
        b11 = 0;

     label12:
        if z1 == 0 goto label13;

        b12 = 2;

        goto label14;

     label13:
        b12 = 0;

     label14:
        if z2 == 0 goto label15;

        b13 = 32;

        goto label16;

     label15:
        b13 = 0;

     label16:
        if z3 == 0 goto label17;

        i10 = 1073758208;

     label17:
        r2 = new com.android.server.pm._$$Lambda$ShortcutService$bUNM2X7HsDkEuXTgWxUN3PZ91eM;

        $b6 = b11 | b12;

        $b7 = $b6 | b13;

        $i8 = $b7 | i10;

        specialinvoke r2.<com.android.server.pm._$$Lambda$ShortcutService$bUNM2X7HsDkEuXTgWxUN3PZ91eM: void <init>(int)>($i8);

        r5 = specialinvoke r0.<com.android.server.pm.ShortcutService: android.content.pm.ParceledListSlice getShortcutsWithQueryLocked(java.lang.String,int,int,java.util.function.Predicate)>(r4, i0, 9, r2);

        exitmonitor r1;

     label18:
        return r5;

     label19:
        $r3 := @caughtexception;

     label20:
        exitmonitor r1;

     label21:
        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
    }

    android.util.SparseArray getShortcutsForTest()
    {
        com.android.server.pm.ShortcutService r0;
        android.util.SparseArray $r1;

        r0 := @this: com.android.server.pm.ShortcutService;

        $r1 = r0.<com.android.server.pm.ShortcutService: android.util.SparseArray mUsers>;

        return $r1;
    }

    long getStatStartTime()
    {
        com.android.server.pm.ShortcutService r0;
        com.android.internal.util.StatLogger $r1;
        long $l0;

        r0 := @this: com.android.server.pm.ShortcutService;

        $r1 = r0.<com.android.server.pm.ShortcutService: com.android.internal.util.StatLogger mStatLogger>;

        $l0 = virtualinvoke $r1.<com.android.internal.util.StatLogger: long getTime()>();

        return $l0;
    }

    long getUidLastForegroundElapsedTimeLocked(int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        android.util.SparseLongArray $r1;
        long $l1;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.pm.ShortcutService: android.util.SparseLongArray mUidLastForegroundElapsedTime>;

        $l1 = virtualinvoke $r1.<android.util.SparseLongArray: long get(int)>(i0);

        return $l1;
    }

    java.io.File getUserBitmapFilePath(int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        java.io.File $r1, $r2;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 := @parameter0: int;

        $r1 = new java.io.File;

        $r2 = virtualinvoke r0.<com.android.server.pm.ShortcutService: java.io.File injectUserDataPath(int)>(i0);

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "bitmaps");

        return $r1;
    }

    final java.io.File getUserFile(int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        java.io.File $r1, $r2;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 := @parameter0: int;

        $r1 = new java.io.File;

        $r2 = virtualinvoke r0.<com.android.server.pm.ShortcutService: java.io.File injectUserDataPath(int)>(i0);

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "shortcuts.xml");

        return $r1;
    }

    com.android.server.pm.ShortcutUser getUserShortcutsLocked(int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0, $i1;
        boolean $z0;
        android.util.SparseArray $r1, $r3;
        com.android.server.pm.ShortcutUser $r2, r5, r6, r7;
        java.lang.Object $r4;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<com.android.server.pm.ShortcutService: boolean isUserUnlockedL(int)>(i0);

        if $z0 != 0 goto label1;

        $i1 = r0.<com.android.server.pm.ShortcutService: int mLastLockedUser>;

        if i0 == $i1 goto label2;

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void wtf(java.lang.String)>("User still locked");

        r0.<com.android.server.pm.ShortcutService: int mLastLockedUser> = i0;

        goto label2;

     label1:
        r0.<com.android.server.pm.ShortcutService: int mLastLockedUser> = -1;

     label2:
        $r3 = r0.<com.android.server.pm.ShortcutService: android.util.SparseArray mUsers>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (com.android.server.pm.ShortcutUser) $r4;

        r6 = r5;

        if r5 != null goto label4;

        r7 = specialinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutUser loadUserLocked(int)>(i0);

        r6 = r7;

        if r7 != null goto label3;

        $r2 = new com.android.server.pm.ShortcutUser;

        specialinvoke $r2.<com.android.server.pm.ShortcutUser: void <init>(com.android.server.pm.ShortcutService,int)>(r0, i0);

        r6 = $r2;

     label3:
        $r1 = r0.<com.android.server.pm.ShortcutService: android.util.SparseArray mUsers>;

        virtualinvoke $r1.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r6);

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void checkPackageChanges(int)>(i0);

     label4:
        return r6;
    }

    void handleLocaleChanged()
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.Object r1;
        long l0;
        com.android.server.pm.'-$$Lambda$ShortcutService$kvrKFKyPcVHSIohRGUeUaVjn61s' $r2;
        java.lang.Throwable $r3, $r4;
        java.util.function.Consumer r7;

        r0 := @this: com.android.server.pm.ShortcutService;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void scheduleSaveBaseState()>();

        r1 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        l0 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long injectClearCallingIdentity()>();

     label02:
        $r2 = <com.android.server.pm._$$Lambda$ShortcutService$kvrKFKyPcVHSIohRGUeUaVjn61s: com.android.server.pm.'-$$Lambda$ShortcutService$kvrKFKyPcVHSIohRGUeUaVjn61s' INSTANCE>;

        r7 = (java.util.function.Consumer) $r2;

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void forEachLoadedUserLocked(java.util.function.Consumer)>(r7);

     label03:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRestoreCallingIdentity(long)>(l0);

     label04:
        exitmonitor r1;

     label05:
        return;

     label06:
        $r4 := @caughtexception;

     label07:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRestoreCallingIdentity(long)>(l0);

     label08:
        throw $r4;

     label09:
        $r3 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    void handleOnUidStateChanged(int, int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0, i1;
        java.lang.Object r1;
        android.util.SparseIntArray $r3;
        boolean $z0;
        android.util.SparseLongArray $r4;
        long $l2;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.pm.ShortcutService: android.util.SparseIntArray mUidState>;

        virtualinvoke $r3.<android.util.SparseIntArray: void put(int,int)>(i0, i1);

        $z0 = specialinvoke r0.<com.android.server.pm.ShortcutService: boolean isProcessStateForeground(int)>(i1);

        if $z0 == 0 goto label2;

        $r4 = r0.<com.android.server.pm.ShortcutService: android.util.SparseLongArray mUidLastForegroundElapsedTime>;

        $l2 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long injectElapsedRealtime()>();

        virtualinvoke $r4.<android.util.SparseLongArray: void put(int,long)>(i0, $l2);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r5 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    void handleStopUser(int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        java.lang.Object r1;
        android.util.SparseBooleanArray $r3, r6;
        java.lang.Throwable $r4, $r5;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        specialinvoke r0.<com.android.server.pm.ShortcutService: void unloadUserLocked(int)>(i0);

        r6 = r0.<com.android.server.pm.ShortcutService: android.util.SparseBooleanArray mUnlockedUsers>;

        entermonitor r6;

     label02:
        $r3 = r0.<com.android.server.pm.ShortcutService: android.util.SparseBooleanArray mUnlockedUsers>;

        virtualinvoke $r3.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, 0);

        exitmonitor r6;

     label03:
        exitmonitor r1;

     label04:
        return;

     label05:
        $r5 := @caughtexception;

     label06:
        exitmonitor r6;

     label07:
        throw $r5;

     label08:
        $r4 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    void handleUnlockUser(int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        android.util.SparseBooleanArray r1, $r3;
        com.android.server.pm._$$Lambda$ShortcutService$QFWliMhWloedhnaZCwVKaqKPVb4 $r4;
        long $l1;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.pm.ShortcutService: android.util.SparseBooleanArray mUnlockedUsers>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.pm.ShortcutService: android.util.SparseBooleanArray mUnlockedUsers>;

        virtualinvoke $r3.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, 1);

        exitmonitor r1;

     label2:
        $r4 = new com.android.server.pm._$$Lambda$ShortcutService$QFWliMhWloedhnaZCwVKaqKPVb4;

        $l1 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long getStatStartTime()>();

        specialinvoke $r4.<com.android.server.pm._$$Lambda$ShortcutService$QFWliMhWloedhnaZCwVKaqKPVb4: void <init>(com.android.server.pm.ShortcutService,long,int)>(r0, $l1, i0);

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRunOnNewThread(java.lang.Runnable)>($r4);

        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean hasShareTargets(java.lang.String, java.lang.String, int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        boolean z0;
        com.android.server.pm.ShortcutPackage $r1;
        java.lang.Throwable $r2;
        java.lang.String r3, r4;
        java.lang.Object r5;

        r0 := @this: com.android.server.pm.ShortcutService;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void verifyCaller(java.lang.String,int)>(r3, i0);

        specialinvoke r0.<com.android.server.pm.ShortcutService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.MANAGE_APP_PREDICTIONS", "hasShareTargets");

        r5 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r5;

     label1:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void throwIfUserLockedL(int)>(i0);

        $r1 = virtualinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutPackage getPackageShortcutsLocked(java.lang.String,int)>(r4, i0);

        z0 = virtualinvoke $r1.<com.android.server.pm.ShortcutPackage: boolean hasShareTargets()>();

        exitmonitor r5;

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r5;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    boolean hasShortcutHostPermission(java.lang.String, int, int, int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0, i1, i2;
        long l3;
        boolean z0, $z1;
        java.lang.Throwable $r1;
        java.lang.String r2;

        r0 := @this: com.android.server.pm.ShortcutService;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $z1 = virtualinvoke r0.<com.android.server.pm.ShortcutService: boolean canSeeAnyPinnedShortcut(java.lang.String,int,int,int)>(r2, i0, i1, i2);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        l3 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long getStatStartTime()>();

     label2:
        z0 = virtualinvoke r0.<com.android.server.pm.ShortcutService: boolean hasShortcutHostPermissionInner(java.lang.String,int)>(r2, i0);

     label3:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void logDurationStat(int,long)>(4, l3);

        return z0;

     label4:
        $r1 := @caughtexception;

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void logDurationStat(int,long)>(4, l3);

        throw $r1;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    boolean hasShortcutHostPermissionInner(java.lang.String, int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        java.lang.Object r1;
        com.android.server.pm.ShortcutUser r2;
        boolean z0, $z1;
        java.lang.String $r3, $r4, r6;
        java.lang.Throwable $r5;
        android.content.ComponentName r7, r8;

        r0 := @this: com.android.server.pm.ShortcutService;

        r6 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void throwIfUserLockedL(int)>(i0);

        r2 = virtualinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutUser getUserShortcutsLocked(int)>(i0);

        r7 = virtualinvoke r2.<com.android.server.pm.ShortcutUser: android.content.ComponentName getCachedLauncher()>();

     label02:
        if r7 == null goto label05;

     label03:
        $r4 = virtualinvoke r7.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z1 == 0 goto label05;

        exitmonitor r1;

     label04:
        return 1;

     label05:
        r8 = virtualinvoke r0.<com.android.server.pm.ShortcutService: android.content.ComponentName getDefaultLauncher(int)>(i0);

        virtualinvoke r2.<com.android.server.pm.ShortcutUser: void setLauncher(android.content.ComponentName)>(r8);

     label06:
        if r8 == null goto label09;

     label07:
        $r3 = virtualinvoke r8.<android.content.ComponentName: java.lang.String getPackageName()>();

        z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        exitmonitor r1;

     label08:
        return z0;

     label09:
        exitmonitor r1;

     label10:
        return 0;

     label11:
        $r5 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    android.content.pm.ApplicationInfo injectApplicationInfoWithUninstalled(java.lang.String, int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        long l1, l2;
        android.content.pm.IPackageManager $r1;
        java.lang.Throwable $r2;
        android.os.RemoteException $r3;
        java.lang.String r4;
        android.content.pm.ApplicationInfo r5;

        r0 := @this: com.android.server.pm.ShortcutService;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        l1 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long getStatStartTime()>();

        l2 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long injectClearCallingIdentity()>();

     label1:
        $r1 = r0.<com.android.server.pm.ShortcutService: android.content.pm.IPackageManager mIPackageManager>;

        r5 = interfaceinvoke $r1.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r4, 794624, i0);

     label2:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRestoreCallingIdentity(long)>(l2);

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void logDurationStat(int,long)>(3, l1);

        return r5;

     label3:
        $r2 := @caughtexception;

        goto label7;

     label4:
        $r3 := @caughtexception;

     label5:
        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("ShortcutService", "RemoteException", $r3);

     label6:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRestoreCallingIdentity(long)>(l2);

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void logDurationStat(int,long)>(3, l1);

        return null;

     label7:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRestoreCallingIdentity(long)>(l2);

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void logDurationStat(int,long)>(3, l1);

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    int injectBinderCallingPid()
    {
        com.android.server.pm.ShortcutService r0;
        int $i0;

        r0 := @this: com.android.server.pm.ShortcutService;

        $i0 = staticinvoke <com.android.server.pm.ShortcutService: int getCallingPid()>();

        return $i0;
    }

    int injectBinderCallingUid()
    {
        com.android.server.pm.ShortcutService r0;
        int $i0;

        r0 := @this: com.android.server.pm.ShortcutService;

        $i0 = staticinvoke <com.android.server.pm.ShortcutService: int getCallingUid()>();

        return $i0;
    }

    java.lang.String injectBuildFingerprint()
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.pm.ShortcutService;

        $r1 = <android.os.Build: java.lang.String FINGERPRINT>;

        return $r1;
    }

    long injectClearCallingIdentity()
    {
        com.android.server.pm.ShortcutService r0;
        long $l0;

        r0 := @this: com.android.server.pm.ShortcutService;

        $l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        return $l0;
    }

    long injectCurrentTimeMillis()
    {
        com.android.server.pm.ShortcutService r0;
        long $l0;

        r0 := @this: com.android.server.pm.ShortcutService;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        return $l0;
    }

    int injectDipToPixel(int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0, $i1;
        android.content.Context $r1;
        float $f0, $f1;
        android.content.res.Resources $r2;
        android.util.DisplayMetrics $r3;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 := @parameter0: int;

        $f0 = (float) i0;

        $r1 = r0.<com.android.server.pm.ShortcutService: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f1 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(1, $f0, $r3);

        $i1 = (int) $f1;

        return $i1;
    }

    long injectElapsedRealtime()
    {
        com.android.server.pm.ShortcutService r0;
        long $l0;

        r0 := @this: com.android.server.pm.ShortcutService;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        return $l0;
    }

    void injectEnforceCallingPermission(java.lang.String, java.lang.String)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String r1, r2;
        android.content.Context $r3;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.pm.ShortcutService: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    android.content.pm.ActivityInfo injectGetActivityInfoWithMetadataWithUninstalled(android.content.ComponentName, int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        long l1, l2;
        android.content.pm.IPackageManager $r1;
        android.os.RemoteException $r2;
        java.lang.Throwable $r3;
        android.content.ComponentName r4;
        android.content.pm.ActivityInfo r5;

        r0 := @this: com.android.server.pm.ShortcutService;

        r4 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        l1 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long getStatStartTime()>();

        l2 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long injectClearCallingIdentity()>();

     label1:
        $r1 = r0.<com.android.server.pm.ShortcutService: android.content.pm.IPackageManager mIPackageManager>;

        r5 = interfaceinvoke $r1.<android.content.pm.IPackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int,int)>(r4, 794752, i0);

     label2:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRestoreCallingIdentity(long)>(l2);

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void logDurationStat(int,long)>(6, l1);

        return r5;

     label3:
        $r3 := @caughtexception;

        goto label7;

     label4:
        $r2 := @caughtexception;

     label5:
        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("ShortcutService", "RemoteException", $r2);

     label6:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRestoreCallingIdentity(long)>(l2);

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void logDurationStat(int,long)>(6, l1);

        return null;

     label7:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRestoreCallingIdentity(long)>(l2);

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void logDurationStat(int,long)>(6, l1);

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    android.content.ComponentName injectGetDefaultMainActivity(java.lang.String, int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0, $i2;
        long l1;
        android.content.Intent r1;
        java.lang.Object $r2;
        android.content.pm.ResolveInfo $r3;
        android.content.pm.ActivityInfo $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;
        java.util.List r7;
        android.content.ComponentName r8;

        r0 := @this: com.android.server.pm.ShortcutService;

        r6 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        l1 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long getStatStartTime()>();

     label1:
        r1 = specialinvoke r0.<com.android.server.pm.ShortcutService: android.content.Intent getMainActivityIntent()>();

     label2:
        r7 = virtualinvoke r0.<com.android.server.pm.ShortcutService: java.util.List queryActivities(android.content.Intent,java.lang.String,android.content.ComponentName,int)>(r1, r6, null, i0);

        $i2 = interfaceinvoke r7.<java.util.List: int size()>();

        if $i2 != 0 goto label5;

     label3:
        r8 = null;

     label4:
        goto label7;

     label5:
        $r2 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (android.content.pm.ResolveInfo) $r2;

        $r4 = $r3.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        r8 = virtualinvoke $r4.<android.content.pm.ActivityInfo: android.content.ComponentName getComponentName()>();

     label6:
        goto label4;

     label7:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void logDurationStat(int,long)>(11, l1);

        return r8;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void logDurationStat(int,long)>(11, l1);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label2 to label3 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public java.lang.String injectGetLocaleTagsForUser(int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        android.os.LocaleList $r1;
        java.lang.String $r2;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.os.LocaleList: android.os.LocaleList getDefault()>();

        $r2 = virtualinvoke $r1.<android.os.LocaleList: java.lang.String toLanguageTags()>();

        return $r2;
    }

    java.util.List injectGetMainActivities(java.lang.String, int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        long l1;
        android.content.Intent $r1;
        java.lang.Throwable $r2;
        java.lang.String r3;
        java.util.List r4;

        r0 := @this: com.android.server.pm.ShortcutService;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        l1 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long getStatStartTime()>();

     label1:
        $r1 = specialinvoke r0.<com.android.server.pm.ShortcutService: android.content.Intent getMainActivityIntent()>();

        r4 = virtualinvoke r0.<com.android.server.pm.ShortcutService: java.util.List queryActivities(android.content.Intent,java.lang.String,android.content.ComponentName,int)>($r1, r3, null, i0);

     label2:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void logDurationStat(int,long)>(12, l1);

        return r4;

     label3:
        $r2 := @caughtexception;

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void logDurationStat(int,long)>(12, l1);

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    int injectGetPackageUid(java.lang.String, int)
    {
        com.android.server.pm.ShortcutService r0;
        long l0;
        android.content.pm.IPackageManager $r1;
        android.os.RemoteException $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;
        int i2, i3;

        r0 := @this: com.android.server.pm.ShortcutService;

        r4 := @parameter0: java.lang.String;

        i2 := @parameter1: int;

        l0 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long injectClearCallingIdentity()>();

     label1:
        $r1 = r0.<com.android.server.pm.ShortcutService: android.content.pm.IPackageManager mIPackageManager>;

        i3 = interfaceinvoke $r1.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int,int)>(r4, 794624, i2);

     label2:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRestoreCallingIdentity(long)>(l0);

        return i3;

     label3:
        $r3 := @caughtexception;

        goto label7;

     label4:
        $r2 := @caughtexception;

     label5:
        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("ShortcutService", "RemoteException", $r2);

     label6:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRestoreCallingIdentity(long)>(l0);

        return -1;

     label7:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRestoreCallingIdentity(long)>(l0);

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    java.util.List injectGetPackagesWithUninstalled(int) throws android.os.RemoteException
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        android.content.pm.ParceledListSlice r1;
        android.content.pm.IPackageManager $r2;
        java.util.List $r3, $r4;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.pm.ShortcutService: android.content.pm.IPackageManager mIPackageManager>;

        r1 = interfaceinvoke $r2.<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice getInstalledPackages(int,int)>(794624, i0);

        if r1 != null goto label1;

        $r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r4;

     label1:
        $r3 = virtualinvoke r1.<android.content.pm.ParceledListSlice: java.util.List getList()>();

        return $r3;
    }

    android.content.ComponentName injectGetPinConfirmationActivity(java.lang.String, int, int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0, i1;
        android.content.Intent $r2, $r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.content.pm.ResolveInfo $r6;
        android.content.pm.ActivityInfo $r7;
        android.content.ComponentName $r8;
        java.lang.String r9, r10;
        java.util.Iterator r11;

        r0 := @this: com.android.server.pm.ShortcutService;

        r9 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r9);

        if i1 != 1 goto label1;

        r10 = "android.content.pm.action.CONFIRM_PIN_SHORTCUT";

        goto label2;

     label1:
        r10 = "android.content.pm.action.CONFIRM_PIN_APPWIDGET";

     label2:
        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>(r10);

        $r3 = virtualinvoke $r2.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r9);

        $r4 = virtualinvoke r0.<com.android.server.pm.ShortcutService: java.util.List queryActivities(android.content.Intent,int,boolean)>($r3, i0, 0);

        r11 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (android.content.pm.ResolveInfo) $r5;

        $r7 = $r6.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r8 = virtualinvoke $r7.<android.content.pm.ActivityInfo: android.content.ComponentName getComponentName()>();

        return $r8;

     label3:
        return null;
    }

    android.content.res.Resources injectGetResourcesForApplicationAsUser(java.lang.String, int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        long l1, l2;
        android.content.Context $r1;
        android.content.pm.PackageManager $r2;
        android.content.pm.PackageManager$NameNotFoundException $r3;
        java.lang.String $r7, r9;
        java.lang.Throwable $r8;
        android.content.res.Resources r10;
        java.lang.StringBuilder r13;

        r0 := @this: com.android.server.pm.ShortcutService;

        r9 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        l1 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long getStatStartTime()>();

        l2 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long injectClearCallingIdentity()>();

     label1:
        $r1 = r0.<com.android.server.pm.ShortcutService: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r10 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.res.Resources getResourcesForApplicationAsUser(java.lang.String,int)>(r9, i0);

     label2:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRestoreCallingIdentity(long)>(l2);

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void logDurationStat(int,long)>(9, l1);

        return r10;

     label3:
        $r8 := @caughtexception;

        goto label7;

     label4:
        $r3 := @caughtexception;

     label5:
        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resources for package ");

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found");

        $r7 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ShortcutService", $r7);

     label6:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRestoreCallingIdentity(long)>(l2);

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void logDurationStat(int,long)>(9, l1);

        return null;

     label7:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRestoreCallingIdentity(long)>(l2);

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void logDurationStat(int,long)>(9, l1);

        throw $r8;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    boolean injectHasAccessShortcutsPermission(int, int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0, i1, $i2;
        android.content.Context $r1;
        boolean z0;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.pm.ShortcutService: android.content.Context mContext>;

        $i2 = virtualinvoke $r1.<android.content.Context: int checkPermission(java.lang.String,int,int)>("android.permission.ACCESS_SHORTCUTS", i0, i1);

        if $i2 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    boolean injectHasUnlimitedShortcutsApiCallsPermission(int, int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0, i1, $i2;
        android.content.Context $r1;
        boolean z0;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.pm.ShortcutService: android.content.Context mContext>;

        $i2 = virtualinvoke $r1.<android.content.Context: int checkPermission(java.lang.String,int,int)>("android.permission.UNLIMITED_SHORTCUTS_API_CALLS", i0, i1);

        if $i2 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    boolean injectIsActivityEnabledAndExported(android.content.ComponentName, int)
    {
        com.android.server.pm.ShortcutService r0;
        long l0;
        android.content.Intent r1;
        java.lang.String $r2;
        java.util.List $r3;
        java.lang.Throwable $r4;
        android.content.ComponentName r5;
        int i1, i2;
        boolean z0;

        r0 := @this: com.android.server.pm.ShortcutService;

        r5 := @parameter0: android.content.ComponentName;

        i1 := @parameter1: int;

        l0 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long getStatStartTime()>();

     label1:
        r1 = new android.content.Intent;

        specialinvoke r1.<android.content.Intent: void <init>()>();

        $r2 = virtualinvoke r5.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r3 = virtualinvoke r0.<com.android.server.pm.ShortcutService: java.util.List queryActivities(android.content.Intent,java.lang.String,android.content.ComponentName,int)>(r1, $r2, r5, i1);

        i2 = interfaceinvoke $r3.<java.util.List: int size()>();

     label2:
        if i2 <= 0 goto label3;

        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void logDurationStat(int,long)>(13, l0);

        return z0;

     label5:
        $r4 := @caughtexception;

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void logDurationStat(int,long)>(13, l0);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    boolean injectIsLowRamDevice()
    {
        com.android.server.pm.ShortcutService r0;
        boolean $z0;

        r0 := @this: com.android.server.pm.ShortcutService;

        $z0 = staticinvoke <android.app.ActivityManager: boolean isLowRamDeviceStatic()>();

        return $z0;
    }

    boolean injectIsMainActivity(android.content.ComponentName, int)
    {
        com.android.server.pm.ShortcutService r0;
        long l0;
        boolean z0, z1;
        java.lang.String $r1, $r2, $r4;
        android.content.Intent $r3;
        java.util.List $r5;
        java.lang.Throwable $r6;
        android.content.ComponentName r7;
        int i1, i2;

        r0 := @this: com.android.server.pm.ShortcutService;

        r7 := @parameter0: android.content.ComponentName;

        i1 := @parameter1: int;

        l0 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long getStatStartTime()>();

        z1 = 0;

        if r7 != null goto label3;

     label1:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void wtf(java.lang.String)>("null activity detected");

     label2:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void logDurationStat(int,long)>(12, l0);

        return 0;

     label3:
        $r1 = "android.__dummy__";

        $r2 = virtualinvoke r7.<android.content.ComponentName: java.lang.String getClassName()>();

        z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

     label4:
        if z0 == 0 goto label5;

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void logDurationStat(int,long)>(12, l0);

        return 1;

     label5:
        $r3 = specialinvoke r0.<com.android.server.pm.ShortcutService: android.content.Intent getMainActivityIntent()>();

        $r4 = virtualinvoke r7.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r5 = virtualinvoke r0.<com.android.server.pm.ShortcutService: java.util.List queryActivities(android.content.Intent,java.lang.String,android.content.ComponentName,int)>($r3, $r4, r7, i1);

        i2 = interfaceinvoke $r5.<java.util.List: int size()>();

     label6:
        if i2 <= 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void logDurationStat(int,long)>(12, l0);

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void logDurationStat(int,long)>(12, l0);

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    boolean injectIsSafeModeEnabled()
    {
        com.android.server.pm.ShortcutService r0;
        long l0;
        boolean z0;
        android.os.IBinder $r1;
        android.view.IWindowManager $r2;
        android.os.RemoteException $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.pm.ShortcutService;

        l0 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long injectClearCallingIdentity()>();

     label1:
        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("window");

        $r2 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager asInterface(android.os.IBinder)>($r1);

        z0 = interfaceinvoke $r2.<android.view.IWindowManager: boolean isSafeModeEnabled()>();

     label2:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRestoreCallingIdentity(long)>(l0);

        return z0;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRestoreCallingIdentity(long)>(l0);

        throw $r4;

     label4:
        $r3 := @caughtexception;

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRestoreCallingIdentity(long)>(l0);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
    }

    android.content.pm.PackageInfo injectPackageInfoWithUninstalled(java.lang.String, int, boolean)
    {
        com.android.server.pm.ShortcutService r0;
        int i0, $i3, i6;
        boolean z0;
        long l1, l2;
        android.content.pm.IPackageManager r1;
        android.os.RemoteException $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;
        byte b5;
        android.content.pm.PackageInfo r5;

        r0 := @this: com.android.server.pm.ShortcutService;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        l1 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long getStatStartTime()>();

        l2 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long injectClearCallingIdentity()>();

        b5 = 2;

     label01:
        r1 = r0.<com.android.server.pm.ShortcutService: android.content.pm.IPackageManager mIPackageManager>;

     label02:
        if z0 == 0 goto label03;

        i6 = 134217728;

        goto label04;

     label03:
        i6 = 0;

     label04:
        $i3 = 794624 | i6;

        r5 = interfaceinvoke r1.<android.content.pm.IPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>(r4, $i3, i0);

     label05:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRestoreCallingIdentity(long)>(l2);

        if z0 == 0 goto label06;

        goto label07;

     label06:
        b5 = 1;

     label07:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void logDurationStat(int,long)>(b5, l1);

        return r5;

     label08:
        $r3 := @caughtexception;

        goto label14;

     label09:
        $r2 := @caughtexception;

     label10:
        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("ShortcutService", "RemoteException", $r2);

     label11:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRestoreCallingIdentity(long)>(l2);

        if z0 == 0 goto label12;

        goto label13;

     label12:
        b5 = 1;

     label13:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void logDurationStat(int,long)>(b5, l1);

        return null;

     label14:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRestoreCallingIdentity(long)>(l2);

        if z0 == 0 goto label15;

        goto label16;

     label15:
        b5 = 1;

     label16:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void logDurationStat(int,long)>(b5, l1);

        throw $r3;

        catch android.os.RemoteException from label01 to label02 with label09;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch android.os.RemoteException from label04 to label05 with label09;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label10 to label11 with label08;
    }

    void injectPostToHandler(java.lang.Runnable)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.Runnable r1;
        android.os.Handler $r2;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<com.android.server.pm.ShortcutService: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>(r1);

        return;
    }

    void injectRegisterUidObserver(android.app.IUidObserver, int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        android.app.IActivityManager $r1;
        android.os.RemoteException $r2;
        android.app.IUidObserver r3;

        r0 := @this: com.android.server.pm.ShortcutService;

        r3 := @parameter0: android.app.IUidObserver;

        i0 := @parameter1: int;

     label1:
        $r1 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        interfaceinvoke $r1.<android.app.IActivityManager: void registerUidObserver(android.app.IUidObserver,int,int,java.lang.String)>(r3, i0, -1, null);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void injectRestoreCallingIdentity(long)
    {
        com.android.server.pm.ShortcutService r0;
        long l0;

        r0 := @this: com.android.server.pm.ShortcutService;

        l0 := @parameter0: long;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;
    }

    void injectRunOnNewThread(java.lang.Runnable)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.Runnable r1;
        java.lang.Thread $r2;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.lang.Runnable;

        $r2 = new java.lang.Thread;

        specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable)>(r1);

        virtualinvoke $r2.<java.lang.Thread: void start()>();

        return;
    }

    void injectSendIntentSender(android.content.IntentSender, android.content.Intent)
    {
        com.android.server.pm.ShortcutService r0;
        android.content.Intent r1;
        android.content.Context $r2;
        android.content.IntentSender$SendIntentException $r3;
        android.content.IntentSender r4;

        r0 := @this: com.android.server.pm.ShortcutService;

        r4 := @parameter0: android.content.IntentSender;

        r1 := @parameter1: android.content.Intent;

        if r4 != null goto label1;

        return;

     label1:
        $r2 = r0.<com.android.server.pm.ShortcutService: android.content.Context mContext>;

        virtualinvoke r4.<android.content.IntentSender: void sendIntent(android.content.Context,int,android.content.Intent,android.content.IntentSender$OnFinished,android.os.Handler)>($r2, 0, r1, null, null);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ShortcutService", "sendIntent failed().", $r3);

     label4:
        return;

        catch android.content.IntentSender$SendIntentException from label1 to label2 with label3;
    }

    java.lang.String injectShortcutManagerConstants()
    {
        com.android.server.pm.ShortcutService r0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        java.lang.String $r3;

        r0 := @this: com.android.server.pm.ShortcutService;

        $r1 = r0.<com.android.server.pm.ShortcutService: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r3 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r2, "shortcut_manager_constants");

        return $r3;
    }

    boolean injectShouldPerformVerification()
    {
        com.android.server.pm.ShortcutService r0;

        r0 := @this: com.android.server.pm.ShortcutService;

        return 0;
    }

    java.io.File injectSystemDataPath()
    {
        com.android.server.pm.ShortcutService r0;
        java.io.File $r1;

        r0 := @this: com.android.server.pm.ShortcutService;

        $r1 = staticinvoke <android.os.Environment: java.io.File getDataSystemDirectory()>();

        return $r1;
    }

    long injectUptimeMillis()
    {
        com.android.server.pm.ShortcutService r0;
        long $l0;

        r0 := @this: com.android.server.pm.ShortcutService;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        return $l0;
    }

    java.io.File injectUserDataPath(int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        java.io.File $r1, $r2;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 := @parameter0: int;

        $r1 = new java.io.File;

        $r2 = staticinvoke <android.os.Environment: java.io.File getDataSystemCeDirectory(int)>(i0);

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "shortcut_service");

        return $r1;
    }

    void injectValidateIconResPackage(android.content.pm.ShortcutInfo, android.graphics.drawable.Icon)
    {
        com.android.server.pm.ShortcutService r0;
        android.content.pm.ShortcutInfo r1;
        android.graphics.drawable.Icon r2;
        java.lang.String $r3, $r4;
        boolean $z0;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: android.content.pm.ShortcutInfo;

        r2 := @parameter1: android.graphics.drawable.Icon;

        $r3 = virtualinvoke r1.<android.content.pm.ShortcutInfo: java.lang.String getPackage()>();

        $r4 = virtualinvoke r2.<android.graphics.drawable.Icon: java.lang.String getResPackage()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Icon resource must reside in shortcut owner package");

        throw $r5;
    }

    android.content.res.XmlResourceParser injectXmlMetaData(android.content.pm.ActivityInfo, java.lang.String)
    {
        com.android.server.pm.ShortcutService r0;
        android.content.pm.ActivityInfo r1;
        java.lang.String r2;
        android.content.Context $r3;
        android.content.pm.PackageManager $r4;
        android.content.res.XmlResourceParser $r5;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: android.content.pm.ActivityInfo;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.pm.ShortcutService: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r5 = virtualinvoke r1.<android.content.pm.ActivityInfo: android.content.res.XmlResourceParser loadXmlMetaData(android.content.pm.PackageManager,java.lang.String)>($r4, r2);

        return $r5;
    }

    boolean isDummyMainActivity(android.content.ComponentName)
    {
        com.android.server.pm.ShortcutService r0;
        android.content.ComponentName r1;
        java.lang.String $r2, $r3;
        boolean $z0, z1;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: android.content.ComponentName;

        if r1 == null goto label1;

        $r2 = "android.__dummy__";

        $r3 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getClassName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    boolean isEphemeralApp(java.lang.String, int)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String r1;
        int i0;
        android.content.pm.ApplicationInfo $r2;
        boolean $z0;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<com.android.server.pm.ShortcutService: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r1, i0);

        $z0 = staticinvoke <com.android.server.pm.ShortcutService: boolean isEphemeralApp(android.content.pm.ApplicationInfo)>($r2);

        return $z0;
    }

    boolean isPackageInstalled(java.lang.String, int)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String r1;
        int i0;
        android.content.pm.ApplicationInfo $r2;
        boolean z0;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<com.android.server.pm.ShortcutService: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r1, i0);

        if $r2 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isRequestPinItemSupported(int, int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0, i1;
        long l2;
        boolean z0;
        com.android.server.pm.ShortcutRequestPinProcessor $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long injectClearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutRequestPinProcessor mShortcutRequestPinProcessor>;

        z0 = virtualinvoke $r2.<com.android.server.pm.ShortcutRequestPinProcessor: boolean isRequestPinItemSupported(int,int)>(i0, i1);

     label2:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRestoreCallingIdentity(long)>(l2);

        return z0;

     label3:
        $r3 := @caughtexception;

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRestoreCallingIdentity(long)>(l2);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean isSharingShortcut(int, java.lang.String, java.lang.String, java.lang.String, int, android.content.IntentFilter)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String r1, $r7, r9, r10;
        android.content.IntentFilter r2;
        com.android.server.pm.ShortcutPackage $r3;
        java.lang.Object $r4, r11;
        android.content.pm.ShortcutManager$ShareShortcutInfo $r5;
        android.content.pm.ShortcutInfo $r6;
        boolean $z0;
        java.lang.Throwable $r8;
        int i0, i1, i2, i3;
        java.util.List r12;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 := @parameter0: int;

        r9 := @parameter1: java.lang.String;

        r10 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        r2 := @parameter5: android.content.IntentFilter;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void verifyCaller(java.lang.String,int)>(r9, i0);

        specialinvoke r0.<com.android.server.pm.ShortcutService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.MANAGE_APP_PREDICTIONS", "isSharingShortcut");

        r11 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r11;

     label01:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void throwIfUserLockedL(int)>(i1);

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void throwIfUserLockedL(int)>(i0);

     label02:
        $r3 = virtualinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutPackage getPackageShortcutsLocked(java.lang.String,int)>(r10, i1);

        r12 = virtualinvoke $r3.<com.android.server.pm.ShortcutPackage: java.util.List getMatchingShareTargets(android.content.IntentFilter)>(r2);

        i2 = interfaceinvoke r12.<java.util.List: int size()>();

     label03:
        i3 = 0;

     label04:
        if i3 >= i2 goto label08;

     label05:
        $r4 = interfaceinvoke r12.<java.util.List: java.lang.Object get(int)>(i3);

        $r5 = (android.content.pm.ShortcutManager$ShareShortcutInfo) $r4;

        $r6 = virtualinvoke $r5.<android.content.pm.ShortcutManager$ShareShortcutInfo: android.content.pm.ShortcutInfo getShortcutInfo()>();

        $r7 = virtualinvoke $r6.<android.content.pm.ShortcutInfo: java.lang.String getId()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label07;

        exitmonitor r11;

     label06:
        return 1;

     label07:
        i3 = i3 + 1;

        goto label04;

     label08:
        exitmonitor r11;

     label09:
        return 0;

     label10:
        $r8 := @caughtexception;

     label11:
        exitmonitor r11;

     label12:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    boolean isUidForegroundLocked(int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0, $i1, $i2;
        android.util.SparseIntArray $r1;
        boolean $z0, $z1;
        android.app.ActivityManagerInternal $r2;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 := @parameter0: int;

        if i0 != 1000 goto label1;

        return 1;

     label1:
        $r1 = r0.<com.android.server.pm.ShortcutService: android.util.SparseIntArray mUidState>;

        $i1 = virtualinvoke $r1.<android.util.SparseIntArray: int get(int,int)>(i0, 20);

        $z0 = specialinvoke r0.<com.android.server.pm.ShortcutService: boolean isProcessStateForeground(int)>($i1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $r2 = r0.<com.android.server.pm.ShortcutService: android.app.ActivityManagerInternal mActivityManagerInternal>;

        $i2 = virtualinvoke $r2.<android.app.ActivityManagerInternal: int getUidProcessState(int)>(i0);

        $z1 = specialinvoke r0.<com.android.server.pm.ShortcutService: boolean isProcessStateForeground(int)>($i2);

        return $z1;
    }

    protected boolean isUserUnlockedL(int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        android.util.SparseBooleanArray r1, $r3;
        boolean $z0, $z1;
        android.os.UserManagerInternal $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.pm.ShortcutService: android.util.SparseBooleanArray mUnlockedUsers>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.pm.ShortcutService: android.util.SparseBooleanArray mUnlockedUsers>;

        $z0 = virtualinvoke $r3.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        if $z0 == 0 goto label3;

        exitmonitor r1;

     label2:
        return 1;

     label3:
        exitmonitor r1;

     label4:
        $r4 = r0.<com.android.server.pm.ShortcutService: android.os.UserManagerInternal mUserManagerInternal>;

        $z1 = virtualinvoke $r4.<android.os.UserManagerInternal: boolean isUserUnlockingOrUnlocked(int)>(i0);

        return $z1;

     label5:
        $r5 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void lambda$applyRestore$16$ShortcutService(java.io.PrintWriter)
    {
        com.android.server.pm.ShortcutService r0;
        java.io.PrintWriter r1;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Start time: ");

        specialinvoke r0.<com.android.server.pm.ShortcutService: void dumpCurrentTime(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        return;
    }

    public void lambda$applyRestore$17$ShortcutService(java.io.PrintWriter)
    {
        com.android.server.pm.ShortcutService r0;
        java.io.PrintWriter r1;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Finish time: ");

        specialinvoke r0.<com.android.server.pm.ShortcutService: void dumpCurrentTime(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        return;
    }

    public void lambda$checkPackageChanges$11$ShortcutService(java.util.ArrayList, com.android.server.pm.ShortcutPackageItem)
    {
        com.android.server.pm.ShortcutService r0;
        java.util.ArrayList r1;
        com.android.server.pm.ShortcutPackageItem r2;
        com.android.server.pm.ShortcutPackageInfo $r3;
        boolean $z0, $z1;
        java.lang.String $r4;
        int $i0;
        com.android.server.pm.ShortcutUser$PackageWithUser $r5;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: com.android.server.pm.ShortcutPackageItem;

        $r3 = virtualinvoke r2.<com.android.server.pm.ShortcutPackageItem: com.android.server.pm.ShortcutPackageInfo getPackageInfo()>();

        $z0 = virtualinvoke $r3.<com.android.server.pm.ShortcutPackageInfo: boolean isShadow()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r4 = virtualinvoke r2.<com.android.server.pm.ShortcutPackageItem: java.lang.String getPackageName()>();

        $i0 = virtualinvoke r2.<com.android.server.pm.ShortcutPackageItem: int getPackageUserId()>();

        $z1 = virtualinvoke r0.<com.android.server.pm.ShortcutService: boolean isPackageInstalled(java.lang.String,int)>($r4, $i0);

        if $z1 != 0 goto label2;

        $r5 = staticinvoke <com.android.server.pm.ShortcutUser$PackageWithUser: com.android.server.pm.ShortcutUser$PackageWithUser of(com.android.server.pm.ShortcutPackageItem)>(r2);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

     label2:
        return;
    }

    public void lambda$cleanUpPackageForAllLoadedUsers$7$ShortcutService(java.lang.String, int, boolean, com.android.server.pm.ShortcutUser)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String r1;
        int i0, $i1;
        boolean z0;
        com.android.server.pm.ShortcutUser r2;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r2 := @parameter3: com.android.server.pm.ShortcutUser;

        $i1 = virtualinvoke r2.<com.android.server.pm.ShortcutUser: int getUserId()>();

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void cleanUpPackageLocked(java.lang.String,int,int,boolean)>(r1, $i1, i0, z0);

        return;
    }

    public void lambda$handleUnlockUser$0$ShortcutService(long, int)
    {
        com.android.server.pm.ShortcutService r0;
        long l0;
        int i1;
        java.lang.Object r1;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.pm.ShortcutService;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r1 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void logDurationStat(int,long)>(15, l0);

        virtualinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutUser getUserShortcutsLocked(int)>(i1);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void lambda$notifyListeners$1$ShortcutService(int, java.lang.String)
    {
        com.android.server.pm.ShortcutService r0;
        int i0, $i1, i2;
        java.lang.Object r1, $r4;
        java.util.ArrayList r2, $r3;
        boolean $z0;
        android.content.pm.ShortcutServiceInternal$ShortcutChangeListener $r5;
        java.lang.Exception $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

     label01:
        r1 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r1;

     label02:
        $z0 = virtualinvoke r0.<com.android.server.pm.ShortcutService: boolean isUserUnlockedL(int)>(i0);

        if $z0 != 0 goto label04;

        exitmonitor r1;

     label03:
        return;

     label04:
        r2 = new java.util.ArrayList;

        $r3 = r0.<com.android.server.pm.ShortcutService: java.util.ArrayList mListeners>;

        specialinvoke r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        exitmonitor r1;

     label05:
        $i1 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i2 = $i1 - 1;

     label06:
        if i2 < 0 goto label09;

     label07:
        $r4 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r5 = (android.content.pm.ShortcutServiceInternal$ShortcutChangeListener) $r4;

        interfaceinvoke $r5.<android.content.pm.ShortcutServiceInternal$ShortcutChangeListener: void onShortcutChanged(java.lang.String,int)>(r8, i0);

     label08:
        i2 = i2 + -1;

        goto label06;

     label09:
        goto label14;

     label10:
        $r7 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r7;

     label13:
        $r6 := @caughtexception;

     label14:
        return;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Exception from label05 to label06 with label13;
        catch java.lang.Exception from label07 to label08 with label13;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Exception from label12 to label13 with label13;
    }

    public void lambda$notifyShortcutChangeCallbacks$2$ShortcutService(int, java.util.List, java.lang.String, android.os.UserHandle, java.util.List)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String r1;
        android.os.UserHandle r2;
        java.util.List r3, r13;
        java.lang.Object r4, $r7, $r9;
        java.util.ArrayList r5, $r6;
        boolean $z0, $z1, $z2;
        int $i0, i1, i2;
        android.content.pm.LauncherApps$ShortcutChangeCallback $r8, $r10;
        java.lang.Throwable $r11;
        java.lang.Exception $r12;

        r0 := @this: com.android.server.pm.ShortcutService;

        i1 := @parameter0: int;

        r13 := @parameter1: java.util.List;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: android.os.UserHandle;

        r3 := @parameter4: java.util.List;

     label01:
        r4 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r4;

     label02:
        $z0 = virtualinvoke r0.<com.android.server.pm.ShortcutService: boolean isUserUnlockedL(int)>(i1);

        if $z0 != 0 goto label04;

        exitmonitor r4;

     label03:
        return;

     label04:
        r5 = new java.util.ArrayList;

        $r6 = r0.<com.android.server.pm.ShortcutService: java.util.ArrayList mShortcutChangeCallbacks>;

        specialinvoke r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r6);

        exitmonitor r4;

     label05:
        $i0 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        i2 = $i0 - 1;

     label06:
        if i2 < 0 goto label10;

     label07:
        $z1 = staticinvoke <com.android.internal.util.CollectionUtils: boolean isEmpty(java.util.Collection)>(r13);

        if $z1 != 0 goto label08;

        $r9 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r10 = (android.content.pm.LauncherApps$ShortcutChangeCallback) $r9;

        interfaceinvoke $r10.<android.content.pm.LauncherApps$ShortcutChangeCallback: void onShortcutsAddedOrUpdated(java.lang.String,java.util.List,android.os.UserHandle)>(r1, r13, r2);

     label08:
        $z2 = staticinvoke <com.android.internal.util.CollectionUtils: boolean isEmpty(java.util.Collection)>(r3);

        if $z2 != 0 goto label09;

        $r7 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r8 = (android.content.pm.LauncherApps$ShortcutChangeCallback) $r7;

        interfaceinvoke $r8.<android.content.pm.LauncherApps$ShortcutChangeCallback: void onShortcutsRemoved(java.lang.String,java.util.List,android.os.UserHandle)>(r1, r3, r2);

     label09:
        i2 = i2 + -1;

        goto label06;

     label10:
        goto label15;

     label11:
        $r11 := @caughtexception;

     label12:
        exitmonitor r4;

     label13:
        throw $r11;

     label14:
        $r12 := @caughtexception;

     label15:
        return;

        catch java.lang.Exception from label01 to label02 with label14;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Exception from label05 to label06 with label14;
        catch java.lang.Exception from label07 to label08 with label14;
        catch java.lang.Exception from label08 to label09 with label14;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Exception from label13 to label14 with label14;
    }

    public void lambda$rescanUpdatedPackagesLocked$12$ShortcutService(com.android.server.pm.ShortcutUser, int, android.content.pm.ApplicationInfo)
    {
        com.android.server.pm.ShortcutService r0;
        com.android.server.pm.ShortcutUser r1;
        int i0;
        android.content.pm.ApplicationInfo r2;
        java.lang.String $r3, $r4;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: com.android.server.pm.ShortcutUser;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.pm.ApplicationInfo;

        $r3 = r2.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke r1.<com.android.server.pm.ShortcutUser: void attemptToRestoreIfNeededAndSave(com.android.server.pm.ShortcutService,java.lang.String,int)>(r0, $r3, i0);

        $r4 = r2.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke r1.<com.android.server.pm.ShortcutUser: void rescanPackageIfNeeded(java.lang.String,boolean)>($r4, 1);

        return;
    }

    void logDurationStat(int, long)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        long l1;
        com.android.internal.util.StatLogger $r1;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r1 = r0.<com.android.server.pm.ShortcutService: com.android.internal.util.StatLogger mStatLogger>;

        virtualinvoke $r1.<com.android.internal.util.StatLogger: long logDurationStat(int,long)>(i0, l1);

        return;
    }

    public void onApplicationActive(java.lang.String, int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        java.lang.Object r1;
        boolean $z0;
        com.android.server.pm.ShortcutPackage $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.pm.ShortcutService;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void enforceResetThrottlingPermission()>();

        r1 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z0 = virtualinvoke r0.<com.android.server.pm.ShortcutService: boolean isUserUnlockedL(int)>(i0);

        if $z0 != 0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r2 = virtualinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutPackage getPackageShortcutsLocked(java.lang.String,int)>(r4, i0);

        virtualinvoke $r2.<com.android.server.pm.ShortcutPackage: void resetRateLimitingForCommandLineNoSaving()>();

        specialinvoke r0.<com.android.server.pm.ShortcutService: void saveUserLocked(int)>(i0);

        exitmonitor r1;

     label4:
        return;

     label5:
        $r3 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    void onBootPhase(int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 := @parameter0: int;

        if i0 == 480 goto label2;

        if i0 == 1000 goto label1;

        goto label3;

     label1:
        $r1 = r0.<com.android.server.pm.ShortcutService: java.util.concurrent.atomic.AtomicBoolean mBootCompleted>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        goto label3;

     label2:
        specialinvoke r0.<com.android.server.pm.ShortcutService: void initialize()>();

     label3:
        return;
    }

    public void onShellCommand(java.io.FileDescriptor, java.io.FileDescriptor, java.io.FileDescriptor, java.lang.String[], android.os.ShellCallback, android.os.ResultReceiver)
    {
        com.android.server.pm.ShortcutService r0;
        java.io.FileDescriptor r1, r2, r9;
        java.lang.String[] r3;
        android.os.ShellCallback r4;
        android.os.ResultReceiver r5;
        long l0;
        com.android.server.pm.ShortcutService$MyShellCommand r6;
        int i1;
        java.lang.Throwable $r7, $r8, r10;

        r0 := @this: com.android.server.pm.ShortcutService;

        r9 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.FileDescriptor;

        r2 := @parameter2: java.io.FileDescriptor;

        r3 := @parameter3: java.lang.String[];

        r4 := @parameter4: android.os.ShellCallback;

        r5 := @parameter5: android.os.ResultReceiver;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void enforceShell()>();

        l0 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long injectClearCallingIdentity()>();

     label1:
        r6 = new com.android.server.pm.ShortcutService$MyShellCommand;

        specialinvoke r6.<com.android.server.pm.ShortcutService$MyShellCommand: void <init>(com.android.server.pm.ShortcutService,com.android.server.pm.ShortcutService$1)>(r0, null);

        i1 = virtualinvoke r6.<com.android.server.pm.ShortcutService$MyShellCommand: int exec(android.os.Binder,java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>(r0, r9, r1, r2, r3, r4, r5);

     label2:
        virtualinvoke r5.<android.os.ResultReceiver: void send(int,android.os.Bundle)>(i1, null);

     label3:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRestoreCallingIdentity(long)>(l0);

        return;

     label4:
        $r7 := @caughtexception;

        r10 = $r7;

        goto label6;

     label5:
        $r8 := @caughtexception;

        r10 = $r8;

     label6:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRestoreCallingIdentity(long)>(l0);

        throw r10;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    com.android.server.pm.ShortcutService$FileOutputStreamWithPath openIconFileForWrite(int, android.content.pm.ShortcutInfo) throws java.io.IOException
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String r2, $r6, $r14, $r20, r24;
        java.io.File $r4, $r5, $r13;
        boolean $z0, $z1, $z3;
        long $l0;
        java.lang.StringBuilder $r7, $r16, $r23;
        com.android.server.pm.ShortcutService$FileOutputStreamWithPath $r15;
        java.io.IOException $r19;
        int i1, i2;
        android.content.pm.ShortcutInfo r21;

        r0 := @this: com.android.server.pm.ShortcutService;

        i1 := @parameter0: int;

        r21 := @parameter1: android.content.pm.ShortcutInfo;

        $r4 = new java.io.File;

        $r5 = virtualinvoke r0.<com.android.server.pm.ShortcutService: java.io.File getUserBitmapFilePath(int)>(i1);

        $r6 = virtualinvoke r21.<android.content.pm.ShortcutInfo: java.lang.String getPackage()>();

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, $r6);

        $z0 = virtualinvoke $r4.<java.io.File: boolean isDirectory()>();

        if $z0 != 0 goto label2;

        virtualinvoke $r4.<java.io.File: boolean mkdirs()>();

        $z3 = virtualinvoke $r4.<java.io.File: boolean isDirectory()>();

        if $z3 == 0 goto label1;

        staticinvoke <android.os.SELinux: boolean restorecon(java.io.File)>($r4);

        goto label2;

     label1:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create directory ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r19 = new java.io.IOException;

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.io.IOException: void <init>(java.lang.String)>($r20);

        throw $r19;

     label2:
        $l0 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long injectCurrentTimeMillis()>();

        r2 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

        i2 = 0;

     label3:
        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        if i2 != 0 goto label4;

        r24 = r2;

        goto label5;

     label4:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        r24 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label5:
        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".png");

        $r13 = new java.io.File;

        $r14 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, $r14);

        $z1 = virtualinvoke $r13.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label6;

        $r15 = new com.android.server.pm.ShortcutService$FileOutputStreamWithPath;

        specialinvoke $r15.<com.android.server.pm.ShortcutService$FileOutputStreamWithPath: void <init>(java.io.File)>($r13);

        return $r15;

     label6:
        i2 = i2 + 1;

        goto label3;
    }

    void packageShortcutsChanged(java.lang.String, int, java.util.List, java.util.List)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String r1;
        int i0;
        java.util.List r2, r3;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: java.util.List;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void notifyListeners(java.lang.String,int)>(r1, i0);

        specialinvoke r0.<com.android.server.pm.ShortcutService: void notifyShortcutChangeCallbacks(java.lang.String,int,java.util.List,java.util.List)>(r1, i0, r2, r3);

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void scheduleSaveUser(int)>(i0);

        return;
    }

    public void pushDynamicShortcut(java.lang.String, android.content.pm.ShortcutInfo, int)
    {
        com.android.server.pm.ShortcutService r0;
        android.content.pm.ShortcutInfo r1, $r10;
        int i0;
        java.lang.Object r3, $r9;
        com.android.server.pm.ShortcutPackage r4;
        java.util.ArrayList $r5;
        java.lang.String $r6, r12;
        android.content.pm.ShortcutInfo[] $r7;
        java.util.List $r8, r13;
        boolean $z0, $z1, $z3;
        java.lang.Throwable $r11;

        r0 := @this: com.android.server.pm.ShortcutService;

        r12 := @parameter0: java.lang.String;

        r1 := @parameter1: android.content.pm.ShortcutInfo;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void verifyCaller(java.lang.String,int)>(r12, i0);

        specialinvoke r0.<com.android.server.pm.ShortcutService: void verifyShortcutInfoPackage(java.lang.String,android.content.pm.ShortcutInfo)>(r12, r1);

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r13 = null;

        r3 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r3;

     label01:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void throwIfUserLockedL(int)>(i0);

        r4 = virtualinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutPackage getPackageShortcutsForPublisherLocked(java.lang.String,int)>(r12, i0);

        $r6 = virtualinvoke r1.<android.content.pm.ShortcutInfo: java.lang.String getId()>();

        virtualinvoke r4.<com.android.server.pm.ShortcutPackage: void ensureNotImmutable(java.lang.String,boolean)>($r6, 1);

        $r7 = newarray (android.content.pm.ShortcutInfo)[1];

        $r7[0] = r1;

        $r8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r7);

        specialinvoke r0.<com.android.server.pm.ShortcutService: void fillInDefaultActivity(java.util.List)>($r8);

        $z0 = virtualinvoke r1.<android.content.pm.ShortcutInfo: boolean hasRank()>();

        if $z0 != 0 goto label02;

        virtualinvoke r1.<android.content.pm.ShortcutInfo: void setRank(int)>(0);

     label02:
        virtualinvoke r4.<com.android.server.pm.ShortcutPackage: void clearAllImplicitRanks()>();

        virtualinvoke r1.<android.content.pm.ShortcutInfo: void setImplicitRank(int)>(0);

        specialinvoke r0.<com.android.server.pm.ShortcutService: void fixUpIncomingShortcutInfo(android.content.pm.ShortcutInfo,boolean)>(r1, 0);

        virtualinvoke r1.<android.content.pm.ShortcutInfo: void setRankChanged()>();

     label03:
        $z1 = virtualinvoke r4.<com.android.server.pm.ShortcutPackage: boolean pushDynamicShortcut(android.content.pm.ShortcutInfo,java.util.List)>(r1, $r5);

        if $z1 == 0 goto label06;

        $z3 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>();

        if $z3 == 0 goto label05;

        exitmonitor r3;

     label04:
        return;

     label05:
        $r9 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0);

        $r10 = (android.content.pm.ShortcutInfo) $r9;

        r13 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r10);

        interfaceinvoke $r5.<java.util.List: void clear()>();

     label06:
        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r1);

        virtualinvoke r4.<com.android.server.pm.ShortcutPackage: void adjustRanks()>();

        exitmonitor r3;

     label07:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void packageShortcutsChanged(java.lang.String,int,java.util.List,java.util.List)>(r12, i0, $r5, r13);

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void verifyStates()>();

        return;

     label08:
        $r11 := @caughtexception;

     label09:
        exitmonitor r3;

     label10:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    java.util.List queryActivities(android.content.Intent, int, boolean)
    {
        com.android.server.pm.ShortcutService r0;
        int i0, $i2;
        boolean z0, $z1;
        long l1;
        android.content.Context $r1;
        android.content.pm.PackageManager $r2;
        java.util.List $r3, $r8, r11;
        java.lang.Object $r4;
        android.content.pm.ResolveInfo $r5;
        android.content.pm.ActivityInfo $r6;
        java.util.function.Predicate $r7;
        java.lang.Throwable $r9;
        android.content.Intent r10;

        r0 := @this: com.android.server.pm.ShortcutService;

        r10 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        l1 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long injectClearCallingIdentity()>();

     label1:
        $r1 = r0.<com.android.server.pm.ShortcutService: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r11 = virtualinvoke $r2.<android.content.pm.PackageManager: java.util.List queryIntentActivitiesAsUser(android.content.Intent,int,int)>(r10, 794624, i0);

     label2:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRestoreCallingIdentity(long)>(l1);

        if r11 == null goto label6;

        $i2 = interfaceinvoke r11.<java.util.List: int size()>();

        if $i2 != 0 goto label3;

        goto label6;

     label3:
        $r4 = interfaceinvoke r11.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (android.content.pm.ResolveInfo) $r4;

        $r6 = $r5.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $z1 = staticinvoke <com.android.server.pm.ShortcutService: boolean isInstalled(android.content.pm.ActivityInfo)>($r6);

        if $z1 != 0 goto label4;

        $r8 = <com.android.server.pm.ShortcutService: java.util.List EMPTY_RESOLVE_INFO>;

        return $r8;

     label4:
        if z0 == 0 goto label5;

        $r7 = <com.android.server.pm.ShortcutService: java.util.function.Predicate ACTIVITY_NOT_EXPORTED>;

        interfaceinvoke r11.<java.util.List: boolean removeIf(java.util.function.Predicate)>($r7);

     label5:
        return r11;

     label6:
        $r3 = <com.android.server.pm.ShortcutService: java.util.List EMPTY_RESOLVE_INFO>;

        return $r3;

     label7:
        $r9 := @caughtexception;

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRestoreCallingIdentity(long)>(l1);

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label7;
    }

    java.util.List queryActivities(android.content.Intent, java.lang.String, android.content.ComponentName, int)
    {
        com.android.server.pm.ShortcutService r0;
        android.content.Intent r1;
        java.lang.String r2, $r5;
        android.content.ComponentName r3;
        int i0;
        java.util.List $r7;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.ComponentName;

        i0 := @parameter3: int;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r5 = (java.lang.String) r2;

        virtualinvoke r1.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r5);

        if r3 == null goto label1;

        virtualinvoke r1.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r3);

     label1:
        $r7 = virtualinvoke r0.<com.android.server.pm.ShortcutService: java.util.List queryActivities(android.content.Intent,int,boolean)>(r1, i0, 1);

        return $r7;
    }

    public void removeAllDynamicShortcuts(java.lang.String, int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        java.lang.Object r1;
        com.android.server.pm.ShortcutPackage r2;
        java.util.List r3, r9;
        com.android.server.pm.'-$$Lambda$ShortcutService$V6GjHj4-udIeQtDZFS3k29Mi84s' $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        java.util.ArrayList r11;
        java.util.function.Predicate r12;

        r0 := @this: com.android.server.pm.ShortcutService;

        r7 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void verifyCaller(java.lang.String,int)>(r7, i0);

        r11 = new java.util.ArrayList;

        specialinvoke r11.<java.util.ArrayList: void <init>()>();

        r1 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void throwIfUserLockedL(int)>(i0);

        r2 = virtualinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutPackage getPackageShortcutsForPublisherLocked(java.lang.String,int)>(r7, i0);

        $r5 = <com.android.server.pm._$$Lambda$ShortcutService$V6GjHj4_udIeQtDZFS3k29Mi84s: com.android.server.pm.'-$$Lambda$ShortcutService$V6GjHj4-udIeQtDZFS3k29Mi84s' INSTANCE>;

        r12 = (java.util.function.Predicate) $r5;

        virtualinvoke r2.<com.android.server.pm.ShortcutPackage: void findAll(java.util.List,java.util.function.Predicate,int)>(r11, r12, 4);

        r3 = virtualinvoke r2.<com.android.server.pm.ShortcutPackage: java.util.List deleteAllDynamicShortcuts(boolean)>(1);

        r9 = specialinvoke r0.<com.android.server.pm.ShortcutService: java.util.List prepareChangedShortcuts(java.util.List,java.util.List,java.util.List,com.android.server.pm.ShortcutPackage)>(r11, null, r3, r2);

        exitmonitor r1;

     label2:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void packageShortcutsChanged(java.lang.String,int,java.util.List,java.util.List)>(r7, i0, r9, r3);

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void verifyStates()>();

        return;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void removeDynamicShortcuts(java.lang.String, java.util.List, int)
    {
        com.android.server.pm.ShortcutService r0;
        java.util.List r1;
        int i0, $i1, i2;
        java.lang.Object r2, $r7;
        com.android.server.pm.ShortcutPackage r3;
        java.lang.String r4, $r8, r12;
        android.content.pm.ShortcutInfo r5, $r10;
        java.lang.CharSequence $r9;
        boolean $z0;
        java.lang.Throwable $r11;
        java.util.ArrayList r13, r14, r15, r16;

        r0 := @this: com.android.server.pm.ShortcutService;

        r12 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void verifyCaller(java.lang.String,int)>(r12, i0);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "shortcutIds must be provided");

        r13 = null;

        r14 = null;

        r2 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void throwIfUserLockedL(int)>(i0);

        r3 = virtualinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutPackage getPackageShortcutsForPublisherLocked(java.lang.String,int)>(r12, i0);

        virtualinvoke r3.<com.android.server.pm.ShortcutPackage: void ensureImmutableShortcutsNotIncludedWithIds(java.util.List,boolean)>(r1, 1);

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        i2 = $i1 - 1;

     label02:
        if i2 < 0 goto label15;

     label03:
        $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        $r8 = (java.lang.String) $r7;

        $r9 = staticinvoke <com.android.internal.util.Preconditions: java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence)>($r8);

        r4 = (java.lang.String) $r9;

        $z0 = virtualinvoke r3.<com.android.server.pm.ShortcutPackage: boolean isShortcutExistsAndVisibleToPublisher(java.lang.String)>(r4);

        if $z0 != 0 goto label05;

     label04:
        goto label14;

     label05:
        r5 = virtualinvoke r3.<com.android.server.pm.ShortcutPackage: android.content.pm.ShortcutInfo deleteDynamicWithId(java.lang.String,boolean)>(r4, 1);

     label06:
        if r5 != null goto label10;

        r15 = r13;

        if r13 != null goto label08;

     label07:
        r15 = new java.util.ArrayList;

        specialinvoke r15.<java.util.ArrayList: void <init>(int)>(1);

     label08:
        $r10 = virtualinvoke r3.<com.android.server.pm.ShortcutPackage: android.content.pm.ShortcutInfo findShortcutById(java.lang.String)>(r4);

        interfaceinvoke r15.<java.util.List: boolean add(java.lang.Object)>($r10);

     label09:
        r13 = r15;

        goto label14;

     label10:
        r16 = r14;

        if r14 != null goto label12;

     label11:
        r16 = new java.util.ArrayList;

        specialinvoke r16.<java.util.ArrayList: void <init>(int)>(1);

     label12:
        interfaceinvoke r16.<java.util.List: boolean add(java.lang.Object)>(r5);

     label13:
        r14 = r16;

     label14:
        i2 = i2 + -1;

        goto label02;

     label15:
        virtualinvoke r3.<com.android.server.pm.ShortcutPackage: void adjustRanks()>();

        exitmonitor r2;

     label16:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void packageShortcutsChanged(java.lang.String,int,java.util.List,java.util.List)>(r12, i0, r13, r14);

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void verifyStates()>();

        return;

     label17:
        $r11 := @caughtexception;

     label18:
        exitmonitor r2;

     label19:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    void removeIconLocked(android.content.pm.ShortcutInfo)
    {
        com.android.server.pm.ShortcutService r0;
        android.content.pm.ShortcutInfo r1;
        com.android.server.pm.ShortcutBitmapSaver $r2;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: android.content.pm.ShortcutInfo;

        $r2 = r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutBitmapSaver mShortcutBitmapSaver>;

        virtualinvoke $r2.<com.android.server.pm.ShortcutBitmapSaver: void removeIcon(android.content.pm.ShortcutInfo)>(r1);

        return;
    }

    public void removeLongLivedShortcuts(java.lang.String, java.util.List, int)
    {
        com.android.server.pm.ShortcutService r0;
        java.util.List r1;
        int i0, $i1, i2;
        java.lang.Object r2, $r7;
        com.android.server.pm.ShortcutPackage r3;
        java.lang.String r4, $r8, r12;
        android.content.pm.ShortcutInfo r5, $r10;
        java.lang.CharSequence $r9;
        boolean $z0;
        java.lang.Throwable $r11;
        java.util.ArrayList r13, r14, r15, r16;

        r0 := @this: com.android.server.pm.ShortcutService;

        r12 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void verifyCaller(java.lang.String,int)>(r12, i0);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "shortcutIds must be provided");

        r13 = null;

        r14 = null;

        r2 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void throwIfUserLockedL(int)>(i0);

        r3 = virtualinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutPackage getPackageShortcutsForPublisherLocked(java.lang.String,int)>(r12, i0);

        virtualinvoke r3.<com.android.server.pm.ShortcutPackage: void ensureImmutableShortcutsNotIncludedWithIds(java.util.List,boolean)>(r1, 1);

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        i2 = $i1 - 1;

     label02:
        if i2 < 0 goto label15;

     label03:
        $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        $r8 = (java.lang.String) $r7;

        $r9 = staticinvoke <com.android.internal.util.Preconditions: java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence)>($r8);

        r4 = (java.lang.String) $r9;

        $z0 = virtualinvoke r3.<com.android.server.pm.ShortcutPackage: boolean isShortcutExistsAndVisibleToPublisher(java.lang.String)>(r4);

        if $z0 != 0 goto label05;

     label04:
        goto label14;

     label05:
        r5 = virtualinvoke r3.<com.android.server.pm.ShortcutPackage: android.content.pm.ShortcutInfo deleteLongLivedWithId(java.lang.String,boolean)>(r4, 1);

     label06:
        if r5 == null goto label10;

        r15 = r14;

        if r14 != null goto label08;

     label07:
        r15 = new java.util.ArrayList;

        specialinvoke r15.<java.util.ArrayList: void <init>(int)>(1);

     label08:
        interfaceinvoke r15.<java.util.List: boolean add(java.lang.Object)>(r5);

     label09:
        r14 = r15;

        goto label14;

     label10:
        r16 = r13;

        if r13 != null goto label12;

     label11:
        r16 = new java.util.ArrayList;

        specialinvoke r16.<java.util.ArrayList: void <init>(int)>(1);

     label12:
        $r10 = virtualinvoke r3.<com.android.server.pm.ShortcutPackage: android.content.pm.ShortcutInfo findShortcutById(java.lang.String)>(r4);

        interfaceinvoke r16.<java.util.List: boolean add(java.lang.Object)>($r10);

     label13:
        r13 = r16;

     label14:
        i2 = i2 + -1;

        goto label02;

     label15:
        virtualinvoke r3.<com.android.server.pm.ShortcutPackage: void adjustRanks()>();

        exitmonitor r2;

     label16:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void packageShortcutsChanged(java.lang.String,int,java.util.List,java.util.List)>(r12, i0, r13, r14);

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void verifyStates()>();

        return;

     label17:
        $r11 := @caughtexception;

     label18:
        exitmonitor r2;

     label19:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    public void reportShortcutUsed(java.lang.String, java.lang.String, int)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String r1, $r8, r11;
        int i0;
        java.lang.Object r2;
        long l1;
        com.android.server.pm.ShortcutPackage $r4;
        android.content.pm.ShortcutInfo $r5;
        android.app.usage.UsageStatsManagerInternal $r6;
        java.lang.Object[] $r7;
        java.lang.Throwable $r9, $r10;

        r0 := @this: com.android.server.pm.ShortcutService;

        r11 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void verifyCaller(java.lang.String,int)>(r11, i0);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        r2 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void throwIfUserLockedL(int)>(i0);

        $r4 = virtualinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutPackage getPackageShortcutsForPublisherLocked(java.lang.String,int)>(r11, i0);

        $r5 = virtualinvoke $r4.<com.android.server.pm.ShortcutPackage: android.content.pm.ShortcutInfo findShortcutById(java.lang.String)>(r1);

        if $r5 != null goto label03;

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = r11;

        $r7[1] = r1;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("reportShortcutUsed: package %s doesn\'t have shortcut %s", $r7);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ShortcutService", $r8);

        exitmonitor r2;

     label02:
        return;

     label03:
        exitmonitor r2;

     label04:
        l1 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long injectClearCallingIdentity()>();

     label05:
        $r6 = r0.<com.android.server.pm.ShortcutService: android.app.usage.UsageStatsManagerInternal mUsageStatsManagerInternal>;

        virtualinvoke $r6.<android.app.usage.UsageStatsManagerInternal: void reportShortcutUsage(java.lang.String,java.lang.String,int)>(r11, r1, i0);

     label06:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRestoreCallingIdentity(long)>(l1);

        return;

     label07:
        $r10 := @caughtexception;

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRestoreCallingIdentity(long)>(l1);

        throw $r10;

     label08:
        $r9 := @caughtexception;

     label09:
        exitmonitor r2;

     label10:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public boolean requestPinShortcut(java.lang.String, android.content.pm.ShortcutInfo, android.content.IntentSender, int)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String r1;
        android.content.pm.ShortcutInfo r2;
        android.content.IntentSender r3;
        int i0;
        boolean $z0, $z1;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.ShortcutInfo;

        r3 := @parameter2: android.content.IntentSender;

        i0 := @parameter3: int;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $z0 = virtualinvoke r2.<android.content.pm.ShortcutInfo: boolean isEnabled()>();

        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "Shortcut must be enabled");

        $z1 = specialinvoke r0.<com.android.server.pm.ShortcutService: boolean requestPinItem(java.lang.String,int,android.content.pm.ShortcutInfo,android.appwidget.AppWidgetProviderInfo,android.os.Bundle,android.content.IntentSender)>(r1, i0, r2, null, null, r3);

        return $z1;
    }

    void resetAllThrottlingInner()
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.Object r1;
        long $l0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $l0 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long injectCurrentTimeMillis()>();

        r0.<com.android.server.pm.ShortcutService: long mRawLastResetTime> = $l0;

        exitmonitor r1;

     label2:
        specialinvoke r0.<com.android.server.pm.ShortcutService: void scheduleSaveBaseState()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ShortcutService", "ShortcutManager: throttling counter reset for all users");

        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void resetThrottling()
    {
        com.android.server.pm.ShortcutService r0;
        int $i0;

        r0 := @this: com.android.server.pm.ShortcutService;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void enforceSystemOrShell()>();

        $i0 = specialinvoke r0.<com.android.server.pm.ShortcutService: int getCallingUserId()>();

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void resetThrottlingInner(int)>($i0);

        return;
    }

    void resetThrottlingInner(int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        boolean $z0;
        com.android.server.pm.ShortcutUser $r1;
        java.lang.StringBuilder $r2, r12;
        java.lang.String $r5, $r9;
        java.lang.Throwable $r10;
        java.lang.Object r11;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 := @parameter0: int;

        r11 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r11;

     label1:
        $z0 = virtualinvoke r0.<com.android.server.pm.ShortcutService: boolean isUserUnlockedL(int)>(i0);

        if $z0 != 0 goto label3;

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User ");

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is locked or not running");

        $r9 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ShortcutService", $r9);

        exitmonitor r11;

     label2:
        return;

     label3:
        $r1 = virtualinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutUser getUserShortcutsLocked(int)>(i0);

        virtualinvoke $r1.<com.android.server.pm.ShortcutUser: void resetThrottling()>();

        exitmonitor r11;

     label4:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void scheduleSaveUser(int)>(i0);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ShortcutManager: throttling counter reset for user ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ShortcutService", $r5);

        return;

     label5:
        $r10 := @caughtexception;

     label6:
        exitmonitor r11;

     label7:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    void saveBaseStateLocked()
    {
        com.android.server.pm.ShortcutService r0;
        android.util.AtomicFile r1;
        java.nio.charset.Charset $r2;
        java.lang.String $r3, $r12;
        java.lang.Boolean $r4;
        long $l0;
        java.lang.Throwable $r7;
        java.lang.StringBuilder $r8;
        java.io.File $r10;
        java.io.FileOutputStream r13, r14;
        com.android.internal.util.FastXmlSerializer r15;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 = specialinvoke r0.<com.android.server.pm.ShortcutService: android.util.AtomicFile getBaseStateFile()>();

        r13 = null;

     label01:
        r14 = virtualinvoke r1.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

     label02:
        r13 = r14;

     label03:
        r15 = new com.android.internal.util.FastXmlSerializer;

     label04:
        r13 = r14;

     label05:
        specialinvoke r15.<com.android.internal.util.FastXmlSerializer: void <init>()>();

     label06:
        r13 = r14;

     label07:
        $r2 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r3 = virtualinvoke $r2.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r15.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r14, $r3);

     label08:
        r13 = r14;

     label09:
        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r15.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r4);

     label10:
        r13 = r14;

     label11:
        interfaceinvoke r15.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "root");

     label12:
        r13 = r14;

     label13:
        $l0 = r0.<com.android.server.pm.ShortcutService: long mRawLastResetTime>;

        staticinvoke <com.android.server.pm.ShortcutService: void writeTagValue(org.xmlpull.v1.XmlSerializer,java.lang.String,long)>(r15, "last_reset_time", $l0);

     label14:
        r13 = r14;

     label15:
        interfaceinvoke r15.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "root");

     label16:
        r13 = r14;

     label17:
        interfaceinvoke r15.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

     label18:
        r13 = r14;

     label19:
        virtualinvoke r1.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r14);

     label20:
        goto label22;

     label21:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to write to file ");

        $r10 = virtualinvoke r1.<android.util.AtomicFile: java.io.File getBaseFile()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ShortcutService", $r12, $r7);

        virtualinvoke r1.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r13);

     label22:
        return;

        catch java.io.IOException from label01 to label02 with label21;
        catch java.io.IOException from label03 to label04 with label21;
        catch java.io.IOException from label05 to label06 with label21;
        catch java.io.IOException from label07 to label08 with label21;
        catch java.io.IOException from label09 to label10 with label21;
        catch java.io.IOException from label11 to label12 with label21;
        catch java.io.IOException from label13 to label14 with label21;
        catch java.io.IOException from label15 to label16 with label21;
        catch java.io.IOException from label17 to label18 with label21;
        catch java.io.IOException from label19 to label20 with label21;
    }

    void saveDirtyInfo()
    {
        com.android.server.pm.ShortcutService r0;
        int i0, $i1, i2;
        java.util.List $r2, $r3, $r4;
        java.lang.Object $r5, r9;
        java.lang.Integer $r6;
        java.lang.Exception $r7;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.pm.ShortcutService;

     label01:
        r9 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r9;

     label02:
        $r2 = r0.<com.android.server.pm.ShortcutService: java.util.List mDirtyUserIds>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        i2 = $i1 - 1;

     label03:
        if i2 < 0 goto label10;

     label04:
        $r4 = r0.<com.android.server.pm.ShortcutService: java.util.List mDirtyUserIds>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i2);

        $r6 = (java.lang.Integer) $r5;

        i0 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

     label05:
        if i0 != -10000 goto label08;

     label06:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void saveBaseStateLocked()>();

     label07:
        goto label09;

     label08:
        specialinvoke r0.<com.android.server.pm.ShortcutService: void saveUserLocked(int)>(i0);

     label09:
        i2 = i2 + -1;

        goto label03;

     label10:
        $r3 = r0.<com.android.server.pm.ShortcutService: java.util.List mDirtyUserIds>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        exitmonitor r9;

     label11:
        goto label16;

     label12:
        $r8 := @caughtexception;

     label13:
        exitmonitor r9;

     label14:
        throw $r8;

     label15:
        $r7 := @caughtexception;

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void wtf(java.lang.String,java.lang.Throwable)>("Exception in saveDirtyInfo", $r7);

     label16:
        return;

        catch java.lang.Exception from label01 to label02 with label15;
        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
        catch java.lang.Exception from label14 to label15 with label15;
    }

    void saveIconAndFixUpShortcutLocked(android.content.pm.ShortcutInfo)
    {
        com.android.server.pm.ShortcutService r0;
        long l0;
        int i1, $i2, $i3, i4;
        boolean $z0, $z1, $z2;
        android.graphics.Bitmap$CompressFormat $r2;
        com.android.server.pm.ShortcutBitmapSaver $r3;
        java.lang.String $r4, $r7;
        float $f0, $f1, $f2, $f3, $f4;
        java.lang.IllegalArgumentException $r6;
        java.lang.Throwable $r8, $r9;
        android.content.pm.ShortcutInfo r10;
        android.graphics.drawable.Icon r11;

        r0 := @this: com.android.server.pm.ShortcutService;

        r10 := @parameter0: android.content.pm.ShortcutInfo;

        $z0 = virtualinvoke r10.<android.content.pm.ShortcutInfo: boolean hasIconFile()>();

        if $z0 != 0 goto label27;

        $z1 = virtualinvoke r10.<android.content.pm.ShortcutInfo: boolean hasIconResource()>();

        if $z1 != 0 goto label27;

        $z2 = virtualinvoke r10.<android.content.pm.ShortcutInfo: boolean hasIconUri()>();

        if $z2 == 0 goto label01;

        goto label27;

     label01:
        l0 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long injectClearCallingIdentity()>();

     label02:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void removeIconLocked(android.content.pm.ShortcutInfo)>(r10);

        r11 = virtualinvoke r10.<android.content.pm.ShortcutInfo: android.graphics.drawable.Icon getIcon()>();

     label03:
        if r11 != null goto label04;

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRestoreCallingIdentity(long)>(l0);

        return;

     label04:
        i4 = r0.<com.android.server.pm.ShortcutService: int mMaxIconDimension>;

     label05:
        i1 = virtualinvoke r11.<android.graphics.drawable.Icon: int getType()>();

     label06:
        if i1 == 1 goto label19;

        if i1 == 2 goto label16;

        if i1 == 4 goto label13;

        if i1 == 5 goto label11;

        if i1 != 6 goto label10;

     label07:
        $r7 = virtualinvoke r11.<android.graphics.drawable.Icon: java.lang.String getUriString()>();

        virtualinvoke r10.<android.content.pm.ShortcutInfo: void setIconUri(java.lang.String)>($r7);

        virtualinvoke r10.<android.content.pm.ShortcutInfo: void addFlags(int)>(33280);

     label08:
        virtualinvoke r10.<android.content.pm.ShortcutInfo: void clearIcon()>();

     label09:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRestoreCallingIdentity(long)>(l0);

        return;

     label10:
        $r6 = staticinvoke <android.content.pm.ShortcutInfo: java.lang.IllegalArgumentException getInvalidIconException()>();

        throw $r6;

     label11:
        virtualinvoke r11.<android.graphics.drawable.Icon: android.graphics.Bitmap getBitmap()>();

        $f0 = (float) i4;

        $f1 = staticinvoke <android.graphics.drawable.AdaptiveIconDrawable: float getExtraInsetFraction()>();

        $f2 = $f1 * 2.0F;

        $f3 = $f2 + 1.0F;

        $f4 = $f0 * $f3;

        i4 = (int) $f4;

     label12:
        goto label20;

     label13:
        $r4 = virtualinvoke r11.<android.graphics.drawable.Icon: java.lang.String getUriString()>();

        virtualinvoke r10.<android.content.pm.ShortcutInfo: void setIconUri(java.lang.String)>($r4);

        virtualinvoke r10.<android.content.pm.ShortcutInfo: void addFlags(int)>(32768);

     label14:
        virtualinvoke r10.<android.content.pm.ShortcutInfo: void clearIcon()>();

     label15:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRestoreCallingIdentity(long)>(l0);

        return;

     label16:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectValidateIconResPackage(android.content.pm.ShortcutInfo,android.graphics.drawable.Icon)>(r10, r11);

        $i3 = virtualinvoke r11.<android.graphics.drawable.Icon: int getResId()>();

        virtualinvoke r10.<android.content.pm.ShortcutInfo: void setIconResourceId(int)>($i3);

        virtualinvoke r10.<android.content.pm.ShortcutInfo: void addFlags(int)>(4);

     label17:
        virtualinvoke r10.<android.content.pm.ShortcutInfo: void clearIcon()>();

     label18:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRestoreCallingIdentity(long)>(l0);

        return;

     label19:
        virtualinvoke r11.<android.graphics.drawable.Icon: android.graphics.Bitmap getBitmap()>();

     label20:
        $r3 = r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutBitmapSaver mShortcutBitmapSaver>;

        $r2 = r0.<com.android.server.pm.ShortcutService: android.graphics.Bitmap$CompressFormat mIconPersistFormat>;

        $i2 = r0.<com.android.server.pm.ShortcutService: int mIconPersistQuality>;

        virtualinvoke $r3.<com.android.server.pm.ShortcutBitmapSaver: void saveBitmapLocked(android.content.pm.ShortcutInfo,int,android.graphics.Bitmap$CompressFormat,int)>(r10, i4, $r2, $i2);

     label21:
        virtualinvoke r10.<android.content.pm.ShortcutInfo: void clearIcon()>();

     label22:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRestoreCallingIdentity(long)>(l0);

        return;

     label23:
        $r8 := @caughtexception;

     label24:
        virtualinvoke r10.<android.content.pm.ShortcutInfo: void clearIcon()>();

     label25:
        throw $r8;

     label26:
        $r9 := @caughtexception;

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void injectRestoreCallingIdentity(long)>(l0);

        throw $r9;

     label27:
        return;

        catch java.lang.Throwable from label02 to label03 with label26;
        catch java.lang.Throwable from label04 to label05 with label26;
        catch java.lang.Throwable from label05 to label06 with label23;
        catch java.lang.Throwable from label07 to label08 with label23;
        catch java.lang.Throwable from label08 to label09 with label26;
        catch java.lang.Throwable from label10 to label11 with label23;
        catch java.lang.Throwable from label11 to label12 with label23;
        catch java.lang.Throwable from label13 to label14 with label23;
        catch java.lang.Throwable from label14 to label15 with label26;
        catch java.lang.Throwable from label16 to label17 with label23;
        catch java.lang.Throwable from label17 to label18 with label26;
        catch java.lang.Throwable from label19 to label20 with label23;
        catch java.lang.Throwable from label20 to label21 with label23;
        catch java.lang.Throwable from label21 to label22 with label26;
        catch java.lang.Throwable from label24 to label25 with label26;
        catch java.lang.Throwable from label25 to label26 with label26;
    }

    void scheduleSaveUser(int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void scheduleSaveInner(int)>(i0);

        return;
    }

    public boolean setDynamicShortcuts(java.lang.String, android.content.pm.ParceledListSlice, int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0, i1, $i2, $i3, i4, i5;
        java.util.List r1, r3, r14;
        boolean z0, $z1;
        com.android.server.pm.'-$$Lambda$ShortcutService$DlyVHLCHgNWOlnYHhNVJsbaPjzA' $r4;
        java.lang.Object $r5, $r7, r12;
        android.content.pm.ShortcutInfo $r6, $r8;
        java.lang.Throwable $r9;
        java.lang.String r10;
        android.content.pm.ParceledListSlice r11;
        com.android.server.pm.ShortcutPackage r13;
        java.util.ArrayList r16;
        java.util.function.Predicate r17;

        r0 := @this: com.android.server.pm.ShortcutService;

        r10 := @parameter0: java.lang.String;

        r11 := @parameter1: android.content.pm.ParceledListSlice;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void verifyCaller(java.lang.String,int)>(r10, i0);

        r1 = virtualinvoke r11.<android.content.pm.ParceledListSlice: java.util.List getList()>();

        specialinvoke r0.<com.android.server.pm.ShortcutService: void verifyShortcutInfoPackages(java.lang.String,java.util.List)>(r10, r1);

        i1 = interfaceinvoke r1.<java.util.List: int size()>();

        $i2 = virtualinvoke r0.<com.android.server.pm.ShortcutService: int injectBinderCallingPid()>();

        $i3 = virtualinvoke r0.<com.android.server.pm.ShortcutService: int injectBinderCallingUid()>();

        z0 = virtualinvoke r0.<com.android.server.pm.ShortcutService: boolean injectHasUnlimitedShortcutsApiCallsPermission(int,int)>($i2, $i3);

        r12 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r12;

     label01:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void throwIfUserLockedL(int)>(i0);

        r13 = virtualinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutPackage getPackageShortcutsForPublisherLocked(java.lang.String,int)>(r10, i0);

        virtualinvoke r13.<com.android.server.pm.ShortcutPackage: void ensureImmutableShortcutsNotIncluded(java.util.List,boolean)>(r1, 1);

        virtualinvoke r13.<com.android.server.pm.ShortcutPackage: void ensureNoBitmapIconIfShortcutIsLongLived(java.util.List)>(r1);

        specialinvoke r0.<com.android.server.pm.ShortcutService: void fillInDefaultActivity(java.util.List)>(r1);

        virtualinvoke r13.<com.android.server.pm.ShortcutPackage: void enforceShortcutCountsBeforeOperation(java.util.List,int)>(r1, 0);

        $z1 = virtualinvoke r13.<com.android.server.pm.ShortcutPackage: boolean tryApiCall(boolean)>(z0);

        if $z1 != 0 goto label03;

        exitmonitor r12;

     label02:
        return 0;

     label03:
        virtualinvoke r13.<com.android.server.pm.ShortcutPackage: void clearAllImplicitRanks()>();

        specialinvoke r0.<com.android.server.pm.ShortcutService: void assignImplicitRanks(java.util.List)>(r1);

     label04:
        i4 = 0;

     label05:
        if i4 >= i1 goto label08;

     label06:
        $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i4);

        $r8 = (android.content.pm.ShortcutInfo) $r7;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void fixUpIncomingShortcutInfo(android.content.pm.ShortcutInfo,boolean)>($r8, 0);

     label07:
        i4 = i4 + 1;

        goto label05;

     label08:
        r16 = new java.util.ArrayList;

        specialinvoke r16.<java.util.ArrayList: void <init>()>();

        $r4 = <com.android.server.pm._$$Lambda$ShortcutService$DlyVHLCHgNWOlnYHhNVJsbaPjzA: com.android.server.pm.'-$$Lambda$ShortcutService$DlyVHLCHgNWOlnYHhNVJsbaPjzA' INSTANCE>;

        r17 = (java.util.function.Predicate) $r4;

        virtualinvoke r13.<com.android.server.pm.ShortcutPackage: void findAll(java.util.List,java.util.function.Predicate,int)>(r16, r17, 4);

        r3 = virtualinvoke r13.<com.android.server.pm.ShortcutPackage: java.util.List deleteAllDynamicShortcuts(boolean)>(1);

     label09:
        i5 = 0;

     label10:
        if i5 >= i1 goto label13;

     label11:
        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i5);

        $r6 = (android.content.pm.ShortcutInfo) $r5;

        virtualinvoke r13.<com.android.server.pm.ShortcutPackage: boolean addOrReplaceDynamicShortcut(android.content.pm.ShortcutInfo)>($r6);

     label12:
        i5 = i5 + 1;

        goto label10;

     label13:
        virtualinvoke r13.<com.android.server.pm.ShortcutPackage: void adjustRanks()>();

        r14 = specialinvoke r0.<com.android.server.pm.ShortcutService: java.util.List prepareChangedShortcuts(java.util.List,java.util.List,java.util.List,com.android.server.pm.ShortcutPackage)>(r16, r1, r3, r13);

        exitmonitor r12;

     label14:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void packageShortcutsChanged(java.lang.String,int,java.util.List,java.util.List)>(r10, i0, r14, r3);

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void verifyStates()>();

        return 1;

     label15:
        $r9 := @caughtexception;

     label16:
        exitmonitor r12;

     label17:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public void setShortcutHostPackage(java.lang.String, java.lang.String, int)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String r1, r5;
        int i0;
        java.lang.Object r2;
        com.android.server.pm.ShortcutNonPersistentUser $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.pm.ShortcutService;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        $r3 = virtualinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutNonPersistentUser getNonPersistentUserLocked(int)>(i0);

        virtualinvoke $r3.<com.android.server.pm.ShortcutNonPersistentUser: void setShortcutHostPackage(java.lang.String,java.lang.String)>(r5, r1);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    boolean shouldBackupApp(java.lang.String, int)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String r1;
        int i0;
        boolean $z0;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.server.pm.ShortcutService: boolean isApplicationFlagSet(java.lang.String,int,int)>(r1, i0, 32768);

        return $z0;
    }

    void throwIfUserLockedL(int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.IllegalStateException $r6;
        java.lang.String $r7;

        r0 := @this: com.android.server.pm.ShortcutService;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<com.android.server.pm.ShortcutService: boolean isUserUnlockedL(int)>(i0);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is locked or not running");

        $r6 = new java.lang.IllegalStateException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    boolean updateConfigurationLocked(java.lang.String)
    {
        com.android.server.pm.ShortcutService r0;
        android.util.KeyValueListParser $r2;
        long $l0, $l3, $l4, $l5, $l6, $l9, $l12, $l15, $l17;
        int $i1, $i2, $i7, $i8, $i10, $i11, $i13, $i14, $i16, i19;
        boolean $z0, z1;
        java.lang.String $r3, $r4, r7;
        android.graphics.Bitmap$CompressFormat $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.pm.ShortcutService;

        r7 := @parameter0: java.lang.String;

        z1 = 1;

        $r2 = new android.util.KeyValueListParser;

        specialinvoke $r2.<android.util.KeyValueListParser: void <init>(char)>(44);

     label1:
        virtualinvoke $r2.<android.util.KeyValueListParser: void setString(java.lang.String)>(r7);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ShortcutService", "Bad shortcut manager settings", $r6);

        z1 = 0;

     label4:
        $l0 = virtualinvoke $r2.<android.util.KeyValueListParser: long getLong(java.lang.String,long)>("save_delay_ms", 3000L);

        $i1 = (int) $l0;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i1);

        r0.<com.android.server.pm.ShortcutService: int mSaveDelayMillis> = $i2;

        $l3 = virtualinvoke $r2.<android.util.KeyValueListParser: long getLong(java.lang.String,long)>("reset_interval_sec", 86400L);

        $l4 = $l3 * 1000L;

        $l5 = staticinvoke <java.lang.Math: long max(long,long)>(1L, $l4);

        r0.<com.android.server.pm.ShortcutService: long mResetInterval> = $l5;

        $l6 = virtualinvoke $r2.<android.util.KeyValueListParser: long getLong(java.lang.String,long)>("max_updates_per_interval", 10L);

        $i7 = (int) $l6;

        $i8 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i7);

        r0.<com.android.server.pm.ShortcutService: int mMaxUpdatesPerInterval> = $i8;

        $l9 = virtualinvoke $r2.<android.util.KeyValueListParser: long getLong(java.lang.String,long)>("max_shortcuts", 15L);

        $i10 = (int) $l9;

        $i11 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i10);

        r0.<com.android.server.pm.ShortcutService: int mMaxShortcuts> = $i11;

        $z0 = virtualinvoke r0.<com.android.server.pm.ShortcutService: boolean injectIsLowRamDevice()>();

        if $z0 == 0 goto label5;

        $l17 = virtualinvoke $r2.<android.util.KeyValueListParser: long getLong(java.lang.String,long)>("max_icon_dimension_dp_lowram", 48L);

        i19 = (int) $l17;

        goto label6;

     label5:
        $l12 = virtualinvoke $r2.<android.util.KeyValueListParser: long getLong(java.lang.String,long)>("max_icon_dimension_dp", 96L);

        i19 = (int) $l12;

     label6:
        $i13 = staticinvoke <java.lang.Math: int max(int,int)>(1, i19);

        $i14 = virtualinvoke r0.<com.android.server.pm.ShortcutService: int injectDipToPixel(int)>($i13);

        r0.<com.android.server.pm.ShortcutService: int mMaxIconDimension> = $i14;

        $r3 = <com.android.server.pm.ShortcutService: java.lang.String DEFAULT_ICON_PERSIST_FORMAT>;

        $r4 = virtualinvoke $r2.<android.util.KeyValueListParser: java.lang.String getString(java.lang.String,java.lang.String)>("icon_format", $r3);

        $r5 = staticinvoke <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat valueOf(java.lang.String)>($r4);

        r0.<com.android.server.pm.ShortcutService: android.graphics.Bitmap$CompressFormat mIconPersistFormat> = $r5;

        $l15 = virtualinvoke $r2.<android.util.KeyValueListParser: long getLong(java.lang.String,long)>("icon_quality", 100L);

        $i16 = (int) $l15;

        r0.<com.android.server.pm.ShortcutService: int mIconPersistQuality> = $i16;

        return z1;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public boolean updateShortcuts(java.lang.String, android.content.pm.ParceledListSlice, int)
    {
        com.android.server.pm.ShortcutService r0;
        int i0, i1, $i2, $i3, $i5, i8;
        java.util.List r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z9, z10;
        java.lang.Object r2, $r5;
        com.android.server.pm.ShortcutPackage r3;
        android.content.pm.ShortcutInfo r4, r12;
        java.lang.String $r6, r9;
        android.graphics.drawable.Icon $r7;
        long $l4;
        java.lang.Throwable $r8;
        android.content.pm.ParceledListSlice r10;
        java.util.ArrayList r11, r13;

        r0 := @this: com.android.server.pm.ShortcutService;

        r9 := @parameter0: java.lang.String;

        r10 := @parameter1: android.content.pm.ParceledListSlice;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void verifyCaller(java.lang.String,int)>(r9, i0);

        r1 = virtualinvoke r10.<android.content.pm.ParceledListSlice: java.util.List getList()>();

        specialinvoke r0.<com.android.server.pm.ShortcutService: void verifyShortcutInfoPackages(java.lang.String,java.util.List)>(r9, r1);

        i1 = interfaceinvoke r1.<java.util.List: int size()>();

        $i2 = virtualinvoke r0.<com.android.server.pm.ShortcutService: int injectBinderCallingPid()>();

        $i3 = virtualinvoke r0.<com.android.server.pm.ShortcutService: int injectBinderCallingUid()>();

        z0 = virtualinvoke r0.<com.android.server.pm.ShortcutService: boolean injectHasUnlimitedShortcutsApiCallsPermission(int,int)>($i2, $i3);

        r11 = null;

        r2 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void throwIfUserLockedL(int)>(i0);

        r3 = virtualinvoke r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutPackage getPackageShortcutsForPublisherLocked(java.lang.String,int)>(r9, i0);

        virtualinvoke r3.<com.android.server.pm.ShortcutPackage: void ensureImmutableShortcutsNotIncluded(java.util.List,boolean)>(r1, 1);

        virtualinvoke r3.<com.android.server.pm.ShortcutPackage: void ensureNoBitmapIconIfShortcutIsLongLived(java.util.List)>(r1);

        virtualinvoke r3.<com.android.server.pm.ShortcutPackage: void enforceShortcutCountsBeforeOperation(java.util.List,int)>(r1, 2);

        $z1 = virtualinvoke r3.<com.android.server.pm.ShortcutPackage: boolean tryApiCall(boolean)>(z0);

        if $z1 != 0 goto label03;

        exitmonitor r2;

     label02:
        return 0;

     label03:
        virtualinvoke r3.<com.android.server.pm.ShortcutPackage: void clearAllImplicitRanks()>();

        specialinvoke r0.<com.android.server.pm.ShortcutService: void assignImplicitRanks(java.util.List)>(r1);

     label04:
        i8 = 0;

     label05:
        if i8 >= i1 goto label29;

     label06:
        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i8);

        r12 = (android.content.pm.ShortcutInfo) $r5;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void fixUpIncomingShortcutInfo(android.content.pm.ShortcutInfo,boolean)>(r12, 1);

        $r6 = virtualinvoke r12.<android.content.pm.ShortcutInfo: java.lang.String getId()>();

        r4 = virtualinvoke r3.<com.android.server.pm.ShortcutPackage: android.content.pm.ShortcutInfo findShortcutById(java.lang.String)>($r6);

     label07:
        if r4 == null goto label28;

     label08:
        $z2 = virtualinvoke r4.<android.content.pm.ShortcutInfo: boolean isVisibleToPublisher()>();

        if $z2 != 0 goto label10;

     label09:
        goto label28;

     label10:
        $z3 = virtualinvoke r4.<android.content.pm.ShortcutInfo: boolean isEnabled()>();

        $z4 = virtualinvoke r12.<android.content.pm.ShortcutInfo: boolean isEnabled()>();

        if $z3 == $z4 goto label11;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ShortcutService", "ShortcutInfo.enabled cannot be changed with updateShortcuts()");

     label11:
        $z5 = virtualinvoke r4.<android.content.pm.ShortcutInfo: boolean isLongLived()>();

        $z6 = virtualinvoke r12.<android.content.pm.ShortcutInfo: boolean isLongLived()>();

        if $z5 == $z6 goto label12;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ShortcutService", "ShortcutInfo.longLived cannot be changed with updateShortcuts()");

     label12:
        $z7 = virtualinvoke r12.<android.content.pm.ShortcutInfo: boolean hasRank()>();

        if $z7 == 0 goto label13;

        virtualinvoke r4.<android.content.pm.ShortcutInfo: void setRankChanged()>();

        $i5 = virtualinvoke r12.<android.content.pm.ShortcutInfo: int getImplicitRank()>();

        virtualinvoke r4.<android.content.pm.ShortcutInfo: void setImplicitRank(int)>($i5);

     label13:
        $r7 = virtualinvoke r12.<android.content.pm.ShortcutInfo: android.graphics.drawable.Icon getIcon()>();

        if $r7 == null goto label15;

     label14:
        z10 = 1;

        goto label16;

     label15:
        z10 = 0;

     label16:
        if z10 == 0 goto label18;

     label17:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void removeIconLocked(android.content.pm.ShortcutInfo)>(r4);

     label18:
        virtualinvoke r4.<android.content.pm.ShortcutInfo: void copyNonNullFieldsFrom(android.content.pm.ShortcutInfo)>(r12);

        $l4 = virtualinvoke r0.<com.android.server.pm.ShortcutService: long injectCurrentTimeMillis()>();

        virtualinvoke r4.<android.content.pm.ShortcutInfo: void setTimestamp(long)>($l4);

     label19:
        if z10 == 0 goto label21;

     label20:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void saveIconAndFixUpShortcutLocked(android.content.pm.ShortcutInfo)>(r4);

     label21:
        if z10 != 0 goto label23;

     label22:
        $z9 = virtualinvoke r12.<android.content.pm.ShortcutInfo: boolean hasStringResources()>();

        if $z9 == 0 goto label24;

     label23:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void fixUpShortcutResourceNamesAndValues(android.content.pm.ShortcutInfo)>(r4);

     label24:
        r13 = r11;

        if r11 != null goto label26;

     label25:
        r13 = new java.util.ArrayList;

        specialinvoke r13.<java.util.ArrayList: void <init>(int)>(1);

     label26:
        interfaceinvoke r13.<java.util.List: boolean add(java.lang.Object)>(r4);

     label27:
        r11 = r13;

        goto label28;

     label28:
        i8 = i8 + 1;

        goto label05;

     label29:
        virtualinvoke r3.<com.android.server.pm.ShortcutPackage: void adjustRanks()>();

        exitmonitor r2;

     label30:
        virtualinvoke r0.<com.android.server.pm.ShortcutService: void packageShortcutsChanged(java.lang.String,int,java.util.List,java.util.List)>(r9, i0, r11, null);

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void verifyStates()>();

        return 1;

     label31:
        $r8 := @caughtexception;

     label32:
        exitmonitor r2;

     label33:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label31;
        catch java.lang.Throwable from label03 to label04 with label31;
        catch java.lang.Throwable from label06 to label07 with label31;
        catch java.lang.Throwable from label08 to label09 with label31;
        catch java.lang.Throwable from label10 to label11 with label31;
        catch java.lang.Throwable from label11 to label12 with label31;
        catch java.lang.Throwable from label12 to label13 with label31;
        catch java.lang.Throwable from label13 to label14 with label31;
        catch java.lang.Throwable from label17 to label18 with label31;
        catch java.lang.Throwable from label18 to label19 with label31;
        catch java.lang.Throwable from label20 to label21 with label31;
        catch java.lang.Throwable from label22 to label23 with label31;
        catch java.lang.Throwable from label23 to label24 with label31;
        catch java.lang.Throwable from label25 to label26 with label31;
        catch java.lang.Throwable from label26 to label27 with label31;
        catch java.lang.Throwable from label29 to label30 with label31;
        catch java.lang.Throwable from label32 to label33 with label31;
    }

    public void validateShortcutForPinRequest(android.content.pm.ShortcutInfo)
    {
        com.android.server.pm.ShortcutService r0;
        android.content.pm.ShortcutInfo r1;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: android.content.pm.ShortcutInfo;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void fixUpIncomingShortcutInfo(android.content.pm.ShortcutInfo,boolean,boolean)>(r1, 0, 1);

        return;
    }

    final void verifyStates()
    {
        com.android.server.pm.ShortcutService r0;
        boolean $z0;

        r0 := @this: com.android.server.pm.ShortcutService;

        $z0 = virtualinvoke r0.<com.android.server.pm.ShortcutService: boolean injectShouldPerformVerification()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.server.pm.ShortcutService: void verifyStatesInner()>();

     label1:
        return;
    }

    void waitForBitmapSavesForTest()
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.Object r1;
        com.android.server.pm.ShortcutBitmapSaver $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.pm.ShortcutService: com.android.server.pm.ShortcutBitmapSaver mShortcutBitmapSaver>;

        virtualinvoke $r3.<com.android.server.pm.ShortcutBitmapSaver: boolean waitForAllSavesLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    final void wtf(java.lang.String)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.String r1;

        r0 := @this: com.android.server.pm.ShortcutService;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.android.server.pm.ShortcutService: void wtf(java.lang.String,java.lang.Throwable)>(r1, null);

        return;
    }

    void wtf(java.lang.String, java.lang.Throwable)
    {
        com.android.server.pm.ShortcutService r0;
        java.lang.Exception r1;
        int $i0, $i1;
        java.lang.RuntimeException $r2;
        java.lang.Throwable $r3, r5, r6;
        java.lang.String r4;
        java.lang.Object r7;

        r0 := @this: com.android.server.pm.ShortcutService;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Throwable;

        r6 = r5;

        if r5 != null goto label1;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stacktrace");

        r6 = $r2;

     label1:
        r7 = r0.<com.android.server.pm.ShortcutService: java.lang.Object mLock>;

        entermonitor r7;

     label2:
        $i0 = r0.<com.android.server.pm.ShortcutService: int mWtfCount>;

        $i1 = $i0 + 1;

        r0.<com.android.server.pm.ShortcutService: int mWtfCount> = $i1;

        r1 = new java.lang.Exception;

        specialinvoke r1.<java.lang.Exception: void <init>(java.lang.String)>("Last failure was logged here:");

        r0.<com.android.server.pm.ShortcutService: java.lang.Exception mLastWtfStacktrace> = r1;

        exitmonitor r7;

     label3:
        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("ShortcutService", r4, r6);

        return;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r7;

     label6:
        throw $r3;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
}
