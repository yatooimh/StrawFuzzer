final class com.android.server.pm.StagingManager$PreRebootVerificationHandler extends android.os.Handler
{
    private static final int MSG_PRE_REBOOT_VERIFICATION_APEX;
    private static final int MSG_PRE_REBOOT_VERIFICATION_APK;
    private static final int MSG_PRE_REBOOT_VERIFICATION_END;
    private static final int MSG_PRE_REBOOT_VERIFICATION_START;
    private boolean mIsReady;
    private android.util.IntArray mPendingSessionIds;
    private final android.util.SparseBooleanArray mVerificationRunning;
    final com.android.server.pm.StagingManager this$0;

    void <init>(com.android.server.pm.StagingManager, android.os.Looper)
    {
        com.android.server.pm.StagingManager$PreRebootVerificationHandler r0;
        com.android.server.pm.StagingManager r1;
        android.os.Looper r2;
        android.util.SparseBooleanArray $r3;

        r0 := @this: com.android.server.pm.StagingManager$PreRebootVerificationHandler;

        r1 := @parameter0: com.android.server.pm.StagingManager;

        r2 := @parameter1: android.os.Looper;

        r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: com.android.server.pm.StagingManager this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r2);

        $r3 = new android.util.SparseBooleanArray;

        specialinvoke $r3.<android.util.SparseBooleanArray: void <init>()>();

        r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: android.util.SparseBooleanArray mVerificationRunning> = $r3;

        return;
    }

    static void access$000(com.android.server.pm.StagingManager$PreRebootVerificationHandler, int)
    {
        com.android.server.pm.StagingManager$PreRebootVerificationHandler r0;
        int i0;

        r0 := @parameter0: com.android.server.pm.StagingManager$PreRebootVerificationHandler;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: void startPreRebootVerification(int)>(i0);

        return;
    }

    static void access$1600(com.android.server.pm.StagingManager$PreRebootVerificationHandler, int)
    {
        com.android.server.pm.StagingManager$PreRebootVerificationHandler r0;
        int i0;

        r0 := @parameter0: com.android.server.pm.StagingManager$PreRebootVerificationHandler;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: void onPreRebootVerificationComplete(int)>(i0);

        return;
    }

    static void access$1700(com.android.server.pm.StagingManager$PreRebootVerificationHandler, int)
    {
        com.android.server.pm.StagingManager$PreRebootVerificationHandler r0;
        int i0;

        r0 := @parameter0: com.android.server.pm.StagingManager$PreRebootVerificationHandler;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: void notifyPreRebootVerification_Apk_Complete(int)>(i0);

        return;
    }

    static boolean access$200(com.android.server.pm.StagingManager$PreRebootVerificationHandler, int)
    {
        com.android.server.pm.StagingManager$PreRebootVerificationHandler r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.server.pm.StagingManager$PreRebootVerificationHandler;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: boolean isVerificationRunning(int)>(i0);

        return $z0;
    }

    static void access$400(com.android.server.pm.StagingManager$PreRebootVerificationHandler)
    {
        com.android.server.pm.StagingManager$PreRebootVerificationHandler r0;

        r0 := @parameter0: com.android.server.pm.StagingManager$PreRebootVerificationHandler;

        specialinvoke r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: void readyToStart()>();

        return;
    }

    private void handlePreRebootVerification_Apex(com.android.server.pm.PackageInstallerSession)
    {
        com.android.server.pm.StagingManager$PreRebootVerificationHandler r0;
        com.android.server.pm.PackageInstallerSession r1;
        int i0, $i1, $i2, $i3, i4;
        com.android.server.pm.StagingManager $r2, $r3, $r6;
        boolean $z0;
        java.lang.Object $r4, $r7;
        android.content.pm.PackageManagerInternal $r5;
        android.content.pm.PackageInfo $r8;
        com.android.server.pm.PackageManagerException $r9;
        java.lang.String $r10;
        java.util.List r11;

        r0 := @this: com.android.server.pm.StagingManager$PreRebootVerificationHandler;

        r1 := @parameter0: com.android.server.pm.PackageInstallerSession;

        $r2 = r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: com.android.server.pm.StagingManager this$0>;

        $z0 = staticinvoke <com.android.server.pm.StagingManager: boolean access$1000(com.android.server.pm.StagingManager,com.android.server.pm.PackageInstallerSession)>($r2, r1);

        if $z0 == 0 goto label9;

     label1:
        $r3 = r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: com.android.server.pm.StagingManager this$0>;

        r11 = staticinvoke <com.android.server.pm.StagingManager: java.util.List access$1100(com.android.server.pm.StagingManager,com.android.server.pm.PackageInstallerSession)>($r3, r1);

     label2:
        i4 = 0;

     label3:
        i0 = interfaceinvoke r11.<java.util.List: int size()>();

     label4:
        if i4 >= i0 goto label7;

     label5:
        $r6 = r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: com.android.server.pm.StagingManager this$0>;

        $r7 = interfaceinvoke r11.<java.util.List: java.lang.Object get(int)>(i4);

        $r8 = (android.content.pm.PackageInfo) $r7;

        staticinvoke <com.android.server.pm.StagingManager: void access$1200(com.android.server.pm.StagingManager,android.content.pm.PackageInfo)>($r6, $r8);

     label6:
        i4 = i4 + 1;

        goto label4;

     label7:
        $r4 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/content/pm/PackageManagerInternal;");

        $r5 = (android.content.pm.PackageManagerInternal) $r4;

        virtualinvoke $r5.<android.content.pm.PackageManagerInternal: void pruneCachedApksInApex(java.util.List)>(r11);

        goto label9;

     label8:
        $r9 := @caughtexception;

        $i2 = $r9.<com.android.server.pm.PackageManagerException: int error>;

        $r10 = virtualinvoke $r9.<com.android.server.pm.PackageManagerException: java.lang.String getMessage()>();

        virtualinvoke r1.<com.android.server.pm.PackageInstallerSession: void setStagedSessionFailed(int,java.lang.String)>($i2, $r10);

        $i3 = r1.<com.android.server.pm.PackageInstallerSession: int sessionId>;

        specialinvoke r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: void onPreRebootVerificationComplete(int)>($i3);

        return;

     label9:
        $i1 = r1.<com.android.server.pm.PackageInstallerSession: int sessionId>;

        specialinvoke r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: void notifyPreRebootVerification_Apex_Complete(int)>($i1);

        return;

        catch com.android.server.pm.PackageManagerException from label1 to label2 with label8;
        catch com.android.server.pm.PackageManagerException from label3 to label4 with label8;
        catch com.android.server.pm.PackageManagerException from label5 to label6 with label8;
    }

    private void handlePreRebootVerification_Apk(com.android.server.pm.PackageInstallerSession)
    {
        com.android.server.pm.StagingManager$PreRebootVerificationHandler r0;
        com.android.server.pm.PackageInstallerSession r1;
        com.android.server.pm.StagingManager $r2, $r7;
        boolean $z0;
        int $i0, $i2, $i3, $i4;
        java.lang.String $r6, $r9;
        com.android.server.pm.PackageManagerException $r8;
        java.lang.StringBuilder r10;

        r0 := @this: com.android.server.pm.StagingManager$PreRebootVerificationHandler;

        r1 := @parameter0: com.android.server.pm.PackageInstallerSession;

        $r2 = r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: com.android.server.pm.StagingManager this$0>;

        $z0 = staticinvoke <com.android.server.pm.StagingManager: boolean access$1300(com.android.server.pm.StagingManager,com.android.server.pm.PackageInstallerSession)>($r2, r1);

        if $z0 != 0 goto label1;

        $i2 = r1.<com.android.server.pm.PackageInstallerSession: int sessionId>;

        specialinvoke r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: void notifyPreRebootVerification_Apk_Complete(int)>($i2);

        return;

     label1:
        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Running a pre-reboot verification for APKs in session ");

        $i0 = r1.<com.android.server.pm.PackageInstallerSession: int sessionId>;

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" by performing a dry-run install");

        $r6 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("StagingManager", $r6);

        $r7 = r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: com.android.server.pm.StagingManager this$0>;

        staticinvoke <com.android.server.pm.StagingManager: void access$1400(com.android.server.pm.StagingManager,com.android.server.pm.PackageInstallerSession)>($r7, r1);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $i3 = $r8.<com.android.server.pm.PackageManagerException: int error>;

        $r9 = virtualinvoke $r8.<com.android.server.pm.PackageManagerException: java.lang.String getMessage()>();

        virtualinvoke r1.<com.android.server.pm.PackageInstallerSession: void setStagedSessionFailed(int,java.lang.String)>($i3, $r9);

        $i4 = r1.<com.android.server.pm.PackageInstallerSession: int sessionId>;

        specialinvoke r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: void onPreRebootVerificationComplete(int)>($i4);

     label4:
        return;

        catch com.android.server.pm.PackageManagerException from label1 to label2 with label3;
    }

    private void handlePreRebootVerification_End(com.android.server.pm.PackageInstallerSession)
    {
        com.android.server.pm.StagingManager$PreRebootVerificationHandler r0;
        com.android.server.pm.PackageInstallerSession r1;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i3, $i4, $i6;
        java.lang.StringBuilder $r2;
        java.lang.String $r6, $r11;
        com.android.server.pm.StagingManager $r7, $r8;
        com.android.server.pm.ApexManager $r9;
        com.android.server.pm.PackageManagerException $r10;
        java.lang.Exception $r12;
        android.os.storage.IStorageManager r13;

        r0 := @this: com.android.server.pm.StagingManager$PreRebootVerificationHandler;

        r1 := @parameter0: com.android.server.pm.PackageInstallerSession;

     label1:
        r13 = staticinvoke <com.android.internal.content.PackageHelper: android.os.storage.IStorageManager getStorageManager()>();

        $z0 = interfaceinvoke r13.<android.os.storage.IStorageManager: boolean supportsCheckpoint()>();

        if $z0 == 0 goto label2;

        interfaceinvoke r13.<android.os.storage.IStorageManager: void startCheckpoint(int)>(2);

     label2:
        $i0 = r1.<com.android.server.pm.PackageInstallerSession: int sessionId>;

        specialinvoke r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: void onPreRebootVerificationComplete(int)>($i0);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Marking session ");

        $i1 = r1.<com.android.server.pm.PackageInstallerSession: int sessionId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as ready");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("StagingManager", $r6);

        virtualinvoke r1.<com.android.server.pm.PackageInstallerSession: void setStagedSessionReady()>();

        $z1 = virtualinvoke r1.<com.android.server.pm.PackageInstallerSession: boolean isStagedSessionReady()>();

        if $z1 == 0 goto label6;

        $r7 = r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: com.android.server.pm.StagingManager this$0>;

        $z2 = staticinvoke <com.android.server.pm.StagingManager: boolean access$1000(com.android.server.pm.StagingManager,com.android.server.pm.PackageInstallerSession)>($r7, r1);

        if $z2 == 0 goto label6;

     label3:
        $r8 = r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: com.android.server.pm.StagingManager this$0>;

        $r9 = staticinvoke <com.android.server.pm.StagingManager: com.android.server.pm.ApexManager access$1500(com.android.server.pm.StagingManager)>($r8);

        $i3 = r1.<com.android.server.pm.PackageInstallerSession: int sessionId>;

        virtualinvoke $r9.<com.android.server.pm.ApexManager: void markStagedSessionReady(int)>($i3);

     label4:
        goto label6;

     label5:
        $r10 := @caughtexception;

        $i4 = $r10.<com.android.server.pm.PackageManagerException: int error>;

        $r11 = virtualinvoke $r10.<com.android.server.pm.PackageManagerException: java.lang.String getMessage()>();

        virtualinvoke r1.<com.android.server.pm.PackageInstallerSession: void setStagedSessionFailed(int,java.lang.String)>($i4, $r11);

        return;

     label6:
        return;

     label7:
        $r12 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("StagingManager", "Failed to get hold of StorageManager", $r12);

        virtualinvoke r1.<com.android.server.pm.PackageInstallerSession: void setStagedSessionFailed(int,java.lang.String)>(3, "Failed to get hold of StorageManager");

        $i6 = r1.<com.android.server.pm.PackageInstallerSession: int sessionId>;

        specialinvoke r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: void onPreRebootVerificationComplete(int)>($i6);

        return;

        catch java.lang.Exception from label1 to label2 with label7;
        catch com.android.server.pm.PackageManagerException from label3 to label4 with label5;
    }

    private void handlePreRebootVerification_Start(com.android.server.pm.PackageInstallerSession)
    {
        com.android.server.pm.StagingManager$PreRebootVerificationHandler r0;
        com.android.server.pm.PackageInstallerSession r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i7;
        android.content.pm.PackageInstaller$SessionParams $r2;
        android.os.IBinder $r3;
        com.android.server.pm.StagingManager $r4, $r5;
        android.util.SparseIntArray $r6;
        java.lang.Throwable $r7;
        android.os.RemoteException $r8;
        java.lang.StringBuilder $r9;
        java.lang.String $r12;
        android.content.rollback.IRollbackManager r13;
        android.util.SparseArray r14;

        r0 := @this: com.android.server.pm.StagingManager$PreRebootVerificationHandler;

        r1 := @parameter0: com.android.server.pm.PackageInstallerSession;

        $r2 = r1.<com.android.server.pm.PackageInstallerSession: android.content.pm.PackageInstaller$SessionParams params>;

        $i1 = $r2.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i2 = $i1 & 262144;

        if $i2 == 0 goto label11;

        $r3 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("rollback");

        r13 = staticinvoke <android.content.rollback.IRollbackManager$Stub: android.content.rollback.IRollbackManager asInterface(android.os.IBinder)>($r3);

     label01:
        $i3 = r1.<com.android.server.pm.PackageInstallerSession: int sessionId>;

        i0 = interfaceinvoke r13.<android.content.rollback.IRollbackManager: int notifyStagedSession(int)>($i3);

     label02:
        if i0 == -1 goto label09;

     label03:
        $r4 = r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: com.android.server.pm.StagingManager this$0>;

        r14 = staticinvoke <com.android.server.pm.StagingManager: android.util.SparseArray access$800(com.android.server.pm.StagingManager)>($r4);

        entermonitor r14;

     label04:
        $r5 = r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: com.android.server.pm.StagingManager this$0>;

        $r6 = staticinvoke <com.android.server.pm.StagingManager: android.util.SparseIntArray access$900(com.android.server.pm.StagingManager)>($r5);

        $i4 = r1.<com.android.server.pm.PackageInstallerSession: int sessionId>;

        virtualinvoke $r6.<android.util.SparseIntArray: void put(int,int)>($i4, i0);

        exitmonitor r14;

     label05:
        goto label09;

     label06:
        $r7 := @caughtexception;

     label07:
        exitmonitor r14;

     label08:
        throw $r7;

     label09:
        goto label11;

     label10:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to notifyStagedSession for session: ");

        $i5 = r1.<com.android.server.pm.PackageInstallerSession: int sessionId>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("StagingManager", $r12, $r8);

     label11:
        $i7 = r1.<com.android.server.pm.PackageInstallerSession: int sessionId>;

        specialinvoke r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: void notifyPreRebootVerification_Start_Complete(int)>($i7);

        return;

        catch android.os.RemoteException from label01 to label02 with label10;
        catch android.os.RemoteException from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch android.os.RemoteException from label08 to label09 with label10;
    }

    private boolean isVerificationRunning(int)
    {
        com.android.server.pm.StagingManager$PreRebootVerificationHandler r0;
        int i0;
        android.util.SparseBooleanArray r1, $r3;
        boolean z0;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.pm.StagingManager$PreRebootVerificationHandler;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: android.util.SparseBooleanArray mVerificationRunning>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: android.util.SparseBooleanArray mVerificationRunning>;

        z0 = virtualinvoke $r3.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void notifyPreRebootVerification_Apex_Complete(int)
    {
        com.android.server.pm.StagingManager$PreRebootVerificationHandler r0;
        int i0;
        android.os.Message $r1;

        r0 := @this: com.android.server.pm.StagingManager$PreRebootVerificationHandler;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: android.os.Message obtainMessage(int,int,int)>(3, i0, 0);

        virtualinvoke $r1.<android.os.Message: void sendToTarget()>();

        return;
    }

    private void notifyPreRebootVerification_Apk_Complete(int)
    {
        com.android.server.pm.StagingManager$PreRebootVerificationHandler r0;
        int i0;
        android.os.Message $r1;

        r0 := @this: com.android.server.pm.StagingManager$PreRebootVerificationHandler;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: android.os.Message obtainMessage(int,int,int)>(4, i0, 0);

        virtualinvoke $r1.<android.os.Message: void sendToTarget()>();

        return;
    }

    private void notifyPreRebootVerification_Start_Complete(int)
    {
        com.android.server.pm.StagingManager$PreRebootVerificationHandler r0;
        int i0;
        android.os.Message $r1;

        r0 := @this: com.android.server.pm.StagingManager$PreRebootVerificationHandler;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: android.os.Message obtainMessage(int,int,int)>(2, i0, 0);

        virtualinvoke $r1.<android.os.Message: void sendToTarget()>();

        return;
    }

    private void onPreRebootVerificationComplete(int)
    {
        com.android.server.pm.StagingManager$PreRebootVerificationHandler r0;
        int i0;
        java.lang.String $r3;
        android.util.SparseBooleanArray $r4, r7;
        com.android.server.pm.StagingManager $r5;
        boolean $z0;
        java.lang.Throwable $r6;
        java.lang.StringBuilder r8;
        com.android.server.pm.PackageInstallerSession r9;

        r0 := @this: com.android.server.pm.StagingManager$PreRebootVerificationHandler;

        i0 := @parameter0: int;

        r7 = r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: android.util.SparseBooleanArray mVerificationRunning>;

        entermonitor r7;

     label1:
        r8 = new java.lang.StringBuilder;

        specialinvoke r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stopping preRebootVerification for session ");

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("StagingManager", $r3);

        $r4 = r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: android.util.SparseBooleanArray mVerificationRunning>;

        virtualinvoke $r4.<android.util.SparseBooleanArray: void delete(int)>(i0);

        exitmonitor r7;

     label2:
        $r5 = r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: com.android.server.pm.StagingManager this$0>;

        r9 = staticinvoke <com.android.server.pm.StagingManager: com.android.server.pm.PackageInstallerSession access$700(com.android.server.pm.StagingManager,int)>($r5, i0);

        if r9 == null goto label3;

        $z0 = virtualinvoke r9.<com.android.server.pm.PackageInstallerSession: boolean isDestroyed()>();

        if $z0 == 0 goto label3;

        virtualinvoke r9.<com.android.server.pm.PackageInstallerSession: void abandon()>();

     label3:
        return;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor r7;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private void readyToStart()
    {
        com.android.server.pm.StagingManager$PreRebootVerificationHandler r0;
        android.util.IntArray $r2, $r3, $r4;
        int $i0, $i1, i2;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.pm.StagingManager$PreRebootVerificationHandler;

        entermonitor r0;

     label1:
        r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: boolean mIsReady> = 1;

        $r2 = r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: android.util.IntArray mPendingSessionIds>;

        if $r2 == null goto label6;

     label2:
        i2 = 0;

     label3:
        $r3 = r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: android.util.IntArray mPendingSessionIds>;

        $i0 = virtualinvoke $r3.<android.util.IntArray: int size()>();

        if i2 >= $i0 goto label5;

        $r4 = r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: android.util.IntArray mPendingSessionIds>;

        $i1 = virtualinvoke $r4.<android.util.IntArray: int get(int)>(i2);

        specialinvoke r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: void startPreRebootVerification(int)>($i1);

     label4:
        i2 = i2 + 1;

        goto label3;

     label5:
        r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: android.util.IntArray mPendingSessionIds> = null;

     label6:
        exitmonitor r0;

        return;

     label7:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    private void startPreRebootVerification(int)
    {
        com.android.server.pm.StagingManager$PreRebootVerificationHandler r0;
        int i0;
        android.util.SparseBooleanArray r1, $r6;
        boolean $z0, $z1;
        com.android.server.pm.StagingManager $r2;
        java.lang.String $r5;
        android.os.Message $r7;
        android.util.IntArray $r8, $r9, r13;
        java.lang.Throwable $r10, $r11, $r12, r16;
        com.android.server.pm.PackageInstallerSession r14;
        java.lang.StringBuilder r15;

        r0 := @this: com.android.server.pm.StagingManager$PreRebootVerificationHandler;

        i0 := @parameter0: int;

        entermonitor r0;

     label01:
        $z0 = r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: boolean mIsReady>;

        if $z0 != 0 goto label04;

        $r8 = r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: android.util.IntArray mPendingSessionIds>;

        if $r8 != null goto label02;

        r13 = new android.util.IntArray;

        specialinvoke r13.<android.util.IntArray: void <init>()>();

        r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: android.util.IntArray mPendingSessionIds> = r13;

     label02:
        $r9 = r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: android.util.IntArray mPendingSessionIds>;

        virtualinvoke $r9.<android.util.IntArray: void add(int)>(i0);

     label03:
        exitmonitor r0;

        return;

     label04:
        $r2 = r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: com.android.server.pm.StagingManager this$0>;

        r14 = staticinvoke <com.android.server.pm.StagingManager: com.android.server.pm.PackageInstallerSession access$700(com.android.server.pm.StagingManager,int)>($r2, i0);

        r1 = r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: android.util.SparseBooleanArray mVerificationRunning>;

        entermonitor r1;

     label05:
        if r14 == null goto label12;

     label06:
        $z1 = virtualinvoke r14.<com.android.server.pm.PackageInstallerSession: boolean isDestroyed()>();

        if $z1 == 0 goto label08;

     label07:
        goto label12;

     label08:
        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Starting preRebootVerification for session ");

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("StagingManager", $r5);

        $r6 = r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: android.util.SparseBooleanArray mVerificationRunning>;

        virtualinvoke $r6.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, 1);

        exitmonitor r1;

     label09:
        $r7 = virtualinvoke r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: android.os.Message obtainMessage(int,int,int)>(1, i0, 0);

        virtualinvoke $r7.<android.os.Message: void sendToTarget()>();

     label10:
        exitmonitor r0;

        return;

     label11:
        $r11 := @caughtexception;

        r16 = $r11;

        goto label15;

     label12:
        exitmonitor r1;

     label13:
        exitmonitor r0;

        return;

     label14:
        $r10 := @caughtexception;

        r16 = $r10;

     label15:
        exitmonitor r1;

     label16:
        throw r16;

     label17:
        $r12 := @caughtexception;

        exitmonitor r0;

        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label02 to label03 with label17;
        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label11;
        catch java.lang.Throwable from label16 to label17 with label17;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.server.pm.StagingManager$PreRebootVerificationHandler r0;
        com.android.server.pm.PackageInstallerSession r1;
        com.android.server.pm.StagingManager $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;
        android.os.Message r7;
        int i1, i2;

        r0 := @this: com.android.server.pm.StagingManager$PreRebootVerificationHandler;

        r7 := @parameter0: android.os.Message;

        i1 = r7.<android.os.Message: int arg1>;

        $r2 = r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: com.android.server.pm.StagingManager this$0>;

        r1 = staticinvoke <com.android.server.pm.StagingManager: com.android.server.pm.PackageInstallerSession access$700(com.android.server.pm.StagingManager,int)>($r2, i1);

        if r1 != null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Session disappeared in the middle of pre-reboot verification: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("StagingManager", $r6);

        return;

     label1:
        $z0 = virtualinvoke r1.<com.android.server.pm.PackageInstallerSession: boolean isDestroyed()>();

        if $z0 == 0 goto label2;

        specialinvoke r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: void onPreRebootVerificationComplete(int)>(i1);

        return;

     label2:
        i2 = r7.<android.os.Message: int what>;

        if i2 == 1 goto label6;

        if i2 == 2 goto label5;

        if i2 == 3 goto label4;

        if i2 == 4 goto label3;

        goto label7;

     label3:
        specialinvoke r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: void handlePreRebootVerification_End(com.android.server.pm.PackageInstallerSession)>(r1);

        goto label7;

     label4:
        specialinvoke r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: void handlePreRebootVerification_Apk(com.android.server.pm.PackageInstallerSession)>(r1);

        goto label7;

     label5:
        specialinvoke r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: void handlePreRebootVerification_Apex(com.android.server.pm.PackageInstallerSession)>(r1);

        goto label7;

     label6:
        specialinvoke r0.<com.android.server.pm.StagingManager$PreRebootVerificationHandler: void handlePreRebootVerification_Start(com.android.server.pm.PackageInstallerSession)>(r1);

     label7:
        return;
    }

    public static void <clinit>()
    {
        <com.android.server.pm.StagingManager$PreRebootVerificationHandler: int MSG_PRE_REBOOT_VERIFICATION_START> = 1;

        <com.android.server.pm.StagingManager$PreRebootVerificationHandler: int MSG_PRE_REBOOT_VERIFICATION_END> = 4;

        <com.android.server.pm.StagingManager$PreRebootVerificationHandler: int MSG_PRE_REBOOT_VERIFICATION_APK> = 3;

        <com.android.server.pm.StagingManager$PreRebootVerificationHandler: int MSG_PRE_REBOOT_VERIFICATION_APEX> = 2;

        return;
    }
}
