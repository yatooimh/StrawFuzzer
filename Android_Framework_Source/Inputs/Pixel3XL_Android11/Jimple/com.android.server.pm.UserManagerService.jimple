public class com.android.server.pm.UserManagerService extends android.os.IUserManager$Stub
{
    private static final int ALLOWED_FLAGS_FOR_CREATE_USERS_PERMISSION;
    private static final java.lang.String ATTR_CREATION_TIME;
    private static final java.lang.String ATTR_FLAGS;
    private static final java.lang.String ATTR_GUEST_TO_REMOVE;
    private static final java.lang.String ATTR_ICON_PATH;
    private static final java.lang.String ATTR_ID;
    private static final java.lang.String ATTR_KEY;
    private static final java.lang.String ATTR_LAST_LOGGED_IN_FINGERPRINT;
    private static final java.lang.String ATTR_LAST_LOGGED_IN_TIME;
    private static final java.lang.String ATTR_MULTIPLE;
    private static final java.lang.String ATTR_NEXT_SERIAL_NO;
    private static final java.lang.String ATTR_PARTIAL;
    private static final java.lang.String ATTR_PRE_CREATED;
    private static final java.lang.String ATTR_PROFILE_BADGE;
    private static final java.lang.String ATTR_PROFILE_GROUP_ID;
    private static final java.lang.String ATTR_RESTRICTED_PROFILE_PARENT_ID;
    private static final java.lang.String ATTR_SEED_ACCOUNT_NAME;
    private static final java.lang.String ATTR_SEED_ACCOUNT_TYPE;
    private static final java.lang.String ATTR_SERIAL_NO;
    private static final java.lang.String ATTR_TYPE;
    private static final java.lang.String ATTR_TYPE_BOOLEAN;
    private static final java.lang.String ATTR_TYPE_BUNDLE;
    private static final java.lang.String ATTR_TYPE_BUNDLE_ARRAY;
    private static final java.lang.String ATTR_TYPE_INTEGER;
    private static final java.lang.String ATTR_TYPE_STRING;
    private static final java.lang.String ATTR_TYPE_STRING_ARRAY;
    private static final java.lang.String ATTR_USER_VERSION;
    private static final java.lang.String ATTR_VALUE_TYPE;
    static final boolean DBG;
    private static final boolean DBG_WITH_STACKTRACE;
    private static final long EPOCH_PLUS_30_YEARS;
    private static final java.lang.String LOG_TAG;
    static final int MAX_RECENTLY_REMOVED_IDS_SIZE;
    static final int MAX_USER_ID;
    static final int MIN_USER_ID;
    private static final boolean RELEASE_DELETED_USER_ID;
    private static final java.lang.String RESTRICTIONS_FILE_PREFIX;
    private static final java.lang.String TAG_ACCOUNT;
    private static final java.lang.String TAG_DEVICE_OWNER_USER_ID;
    private static final java.lang.String TAG_DEVICE_POLICY_GLOBAL_RESTRICTIONS;
    private static final java.lang.String TAG_DEVICE_POLICY_LOCAL_RESTRICTIONS;
    private static final java.lang.String TAG_DEVICE_POLICY_RESTRICTIONS;
    private static final java.lang.String TAG_ENTRY;
    private static final java.lang.String TAG_GLOBAL_RESTRICTION_OWNER_ID;
    private static final java.lang.String TAG_GUEST_RESTRICTIONS;
    private static final java.lang.String TAG_LAST_REQUEST_QUIET_MODE_ENABLED_CALL;
    private static final java.lang.String TAG_NAME;
    private static final java.lang.String TAG_RESTRICTIONS;
    private static final java.lang.String TAG_SEED_ACCOUNT_OPTIONS;
    private static final java.lang.String TAG_USER;
    private static final java.lang.String TAG_USERS;
    private static final java.lang.String TAG_VALUE;
    private static final java.lang.String TRON_DEMO_CREATED;
    private static final java.lang.String TRON_GUEST_CREATED;
    private static final java.lang.String TRON_USER_CREATED;
    private static final java.lang.String USER_INFO_DIR;
    private static final java.lang.String USER_LIST_FILENAME;
    private static final java.lang.String USER_PHOTO_FILENAME;
    private static final java.lang.String USER_PHOTO_FILENAME_TMP;
    private static final int USER_VERSION;
    static final int WRITE_USER_DELAY;
    static final int WRITE_USER_MSG;
    private static final java.lang.String XML_SUFFIX;
    private static final android.os.IBinder mUserRestriconToken;
    private static com.android.server.pm.UserManagerService sInstance;
    private final java.lang.String ACTION_DISABLE_QUIET_MODE_AFTER_UNLOCK;
    private com.android.internal.app.IAppOpsService mAppOpsService;
    private final java.lang.Object mAppRestrictionsLock;
    private final com.android.server.pm.RestrictionsSet mAppliedUserRestrictions;
    private final com.android.server.pm.RestrictionsSet mBaseUserRestrictions;
    private final com.android.server.pm.RestrictionsSet mCachedEffectiveUserRestrictions;
    private final android.content.Context mContext;
    private android.content.pm.CrossProfileAppsInternal mCrossProfileAppsInternal;
    private int mDeviceOwnerUserId;
    private final com.android.server.pm.RestrictionsSet mDevicePolicyGlobalUserRestrictions;
    private final android.util.SparseArray mDevicePolicyLocalUserRestrictions;
    private android.app.admin.DevicePolicyManagerInternal mDevicePolicyManagerInternal;
    private final android.content.BroadcastReceiver mDisableQuietModeCallback;
    private boolean mForceEphemeralUsers;
    private final android.os.Bundle mGuestRestrictions;
    private final android.os.Handler mHandler;
    private boolean mIsDeviceManaged;
    private final android.util.SparseBooleanArray mIsUserManaged;
    private final com.android.server.pm.UserManagerService$LocalService mLocalService;
    private final com.android.internal.widget.LockPatternUtils mLockPatternUtils;
    private int mNextSerialNumber;
    private final java.lang.Object mPackagesLock;
    private final com.android.server.pm.PackageManagerService mPm;
    private android.content.pm.PackageManagerInternal mPmInternal;
    private final java.util.LinkedList mRecentlyRemovedIds;
    private final android.util.SparseBooleanArray mRemovingUserIds;
    private final java.lang.Object mRestrictionsLock;
    private final com.android.server.pm.UserSystemPackageInstaller mSystemPackageInstaller;
    private final com.android.server.pm.UserDataPreparer mUserDataPreparer;
    private int[] mUserIds;
    private final java.io.File mUserListFile;
    private final java.util.ArrayList mUserRestrictionsListeners;
    private final com.android.server.pm.UserManagerService$WatchedUserStates mUserStates;
    private final android.util.ArrayMap mUserTypes;
    private int mUserVersion;
    private final android.util.SparseArray mUsers;
    private final java.io.File mUsersDir;
    private final java.lang.Object mUsersLock;

    static void <clinit>()
    {
        java.lang.StringBuilder $r1;
        java.lang.String $r3, $r6;
        android.os.Binder $r7;

        <com.android.server.pm.UserManagerService: java.lang.String XML_SUFFIX> = ".xml";

        <com.android.server.pm.UserManagerService: int WRITE_USER_MSG> = 1;

        <com.android.server.pm.UserManagerService: int WRITE_USER_DELAY> = 2000;

        <com.android.server.pm.UserManagerService: int USER_VERSION> = 9;

        <com.android.server.pm.UserManagerService: java.lang.String USER_PHOTO_FILENAME_TMP> = "photo.png.tmp";

        <com.android.server.pm.UserManagerService: java.lang.String USER_PHOTO_FILENAME> = "photo.png";

        <com.android.server.pm.UserManagerService: java.lang.String USER_LIST_FILENAME> = "userlist.xml";

        <com.android.server.pm.UserManagerService: java.lang.String TRON_USER_CREATED> = "users_user_created";

        <com.android.server.pm.UserManagerService: java.lang.String TRON_GUEST_CREATED> = "users_guest_created";

        <com.android.server.pm.UserManagerService: java.lang.String TRON_DEMO_CREATED> = "users_demo_created";

        <com.android.server.pm.UserManagerService: java.lang.String TAG_VALUE> = "value";

        <com.android.server.pm.UserManagerService: java.lang.String TAG_USERS> = "users";

        <com.android.server.pm.UserManagerService: java.lang.String TAG_USER> = "user";

        <com.android.server.pm.UserManagerService: java.lang.String TAG_SEED_ACCOUNT_OPTIONS> = "seedAccountOptions";

        <com.android.server.pm.UserManagerService: java.lang.String TAG_RESTRICTIONS> = "restrictions";

        <com.android.server.pm.UserManagerService: java.lang.String TAG_NAME> = "name";

        <com.android.server.pm.UserManagerService: java.lang.String TAG_LAST_REQUEST_QUIET_MODE_ENABLED_CALL> = "lastRequestQuietModeEnabledCall";

        <com.android.server.pm.UserManagerService: java.lang.String TAG_GUEST_RESTRICTIONS> = "guestRestrictions";

        <com.android.server.pm.UserManagerService: java.lang.String TAG_GLOBAL_RESTRICTION_OWNER_ID> = "globalRestrictionOwnerUserId";

        <com.android.server.pm.UserManagerService: java.lang.String TAG_ENTRY> = "entry";

        <com.android.server.pm.UserManagerService: java.lang.String TAG_DEVICE_POLICY_RESTRICTIONS> = "device_policy_restrictions";

        <com.android.server.pm.UserManagerService: java.lang.String TAG_DEVICE_POLICY_LOCAL_RESTRICTIONS> = "device_policy_local_restrictions";

        <com.android.server.pm.UserManagerService: java.lang.String TAG_DEVICE_POLICY_GLOBAL_RESTRICTIONS> = "device_policy_global_restrictions";

        <com.android.server.pm.UserManagerService: java.lang.String TAG_DEVICE_OWNER_USER_ID> = "deviceOwnerUserId";

        <com.android.server.pm.UserManagerService: java.lang.String TAG_ACCOUNT> = "account";

        <com.android.server.pm.UserManagerService: java.lang.String RESTRICTIONS_FILE_PREFIX> = "res_";

        <com.android.server.pm.UserManagerService: boolean RELEASE_DELETED_USER_ID> = 0;

        <com.android.server.pm.UserManagerService: int MIN_USER_ID> = 10;

        <com.android.server.pm.UserManagerService: int MAX_USER_ID> = 21474;

        <com.android.server.pm.UserManagerService: int MAX_RECENTLY_REMOVED_IDS_SIZE> = 100;

        <com.android.server.pm.UserManagerService: java.lang.String LOG_TAG> = "UserManagerService";

        <com.android.server.pm.UserManagerService: long EPOCH_PLUS_30_YEARS> = 946080000000L;

        <com.android.server.pm.UserManagerService: boolean DBG_WITH_STACKTRACE> = 0;

        <com.android.server.pm.UserManagerService: boolean DBG> = 0;

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_VALUE_TYPE> = "type";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_USER_VERSION> = "version";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_TYPE_STRING_ARRAY> = "sa";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_TYPE_STRING> = "s";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_TYPE_INTEGER> = "i";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_TYPE_BUNDLE_ARRAY> = "BA";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_TYPE_BUNDLE> = "B";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_TYPE_BOOLEAN> = "b";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_TYPE> = "type";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_SERIAL_NO> = "serialNumber";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_SEED_ACCOUNT_TYPE> = "seedAccountType";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_SEED_ACCOUNT_NAME> = "seedAccountName";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_RESTRICTED_PROFILE_PARENT_ID> = "restrictedProfileParentId";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_PROFILE_GROUP_ID> = "profileGroupId";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_PROFILE_BADGE> = "profileBadge";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_PRE_CREATED> = "preCreated";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_PARTIAL> = "partial";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_NEXT_SERIAL_NO> = "nextSerialNumber";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_MULTIPLE> = "m";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_LAST_LOGGED_IN_TIME> = "lastLoggedIn";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_LAST_LOGGED_IN_FINGERPRINT> = "lastLoggedInFingerprint";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_KEY> = "key";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_ID> = "id";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_ICON_PATH> = "icon";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_GUEST_TO_REMOVE> = "guestToRemove";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_FLAGS> = "flags";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_CREATION_TIME> = "created";

        <com.android.server.pm.UserManagerService: int ALLOWED_FLAGS_FOR_CREATE_USERS_PERMISSION> = 812;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("system");

        $r3 = <java.io.File: java.lang.String separator>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("users");

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.android.server.pm.UserManagerService: java.lang.String USER_INFO_DIR> = $r6;

        $r7 = new android.os.Binder;

        specialinvoke $r7.<android.os.Binder: void <init>()>();

        <com.android.server.pm.UserManagerService: android.os.IBinder mUserRestriconToken> = $r7;

        return;
    }

    void <init>(android.content.Context)
    {
        com.android.server.pm.UserManagerService r0;
        android.content.Context r1;
        java.lang.Object $r2;
        java.io.File $r3;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: android.content.Context;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        $r3 = virtualinvoke r1.<android.content.Context: java.io.File getCacheDir()>();

        specialinvoke r0.<com.android.server.pm.UserManagerService: void <init>(android.content.Context,com.android.server.pm.PackageManagerService,com.android.server.pm.UserDataPreparer,java.lang.Object,java.io.File)>(r1, null, null, $r2, $r3);

        return;
    }

    void <init>(android.content.Context, com.android.server.pm.PackageManagerService, com.android.server.pm.UserDataPreparer, java.lang.Object)
    {
        com.android.server.pm.UserManagerService r0;
        android.content.Context r1;
        com.android.server.pm.PackageManagerService r2;
        com.android.server.pm.UserDataPreparer r3;
        java.lang.Object r4;
        java.io.File $r5;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.pm.PackageManagerService;

        r3 := @parameter2: com.android.server.pm.UserDataPreparer;

        r4 := @parameter3: java.lang.Object;

        $r5 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        specialinvoke r0.<com.android.server.pm.UserManagerService: void <init>(android.content.Context,com.android.server.pm.PackageManagerService,com.android.server.pm.UserDataPreparer,java.lang.Object,java.io.File)>(r1, r2, r3, r4, $r5);

        return;
    }

    private void <init>(android.content.Context, com.android.server.pm.PackageManagerService, com.android.server.pm.UserDataPreparer, java.lang.Object, java.io.File)
    {
        com.android.server.pm.UserManagerService r0;
        com.android.server.pm.UserDataPreparer r1;
        java.lang.Object r2, $r4, $r5, $r6, r37;
        java.io.File r3, $r23, $r25, $r27, r38, r39, r40;
        android.util.SparseArray $r7, $r12;
        com.android.server.pm.RestrictionsSet $r8, $r9, $r10, $r11;
        android.os.Bundle $r13;
        android.util.SparseBooleanArray $r14, $r16;
        java.util.LinkedList $r15;
        java.util.ArrayList $r17;
        com.android.server.pm.UserManagerService$1 $r18;
        com.android.server.pm.UserManagerService$WatchedUserStates $r19, $r33;
        com.android.server.pm.UserManagerService$MainHandler $r20;
        android.util.ArrayMap $r21, $r29;
        java.lang.String $r22, $r24, $r26;
        com.android.server.pm.UserSystemPackageInstaller $r28;
        com.android.server.pm.UserManagerService$LocalService $r30;
        com.android.internal.widget.LockPatternUtils $r31;
        android.content.Context $r32, r35;
        java.lang.Throwable $r34;
        com.android.server.pm.PackageManagerService r36;

        r0 := @this: com.android.server.pm.UserManagerService;

        r35 := @parameter0: android.content.Context;

        r36 := @parameter1: com.android.server.pm.PackageManagerService;

        r1 := @parameter2: com.android.server.pm.UserDataPreparer;

        r2 := @parameter3: java.lang.Object;

        r3 := @parameter4: java.io.File;

        specialinvoke r0.<android.os.IUserManager$Stub: void <init>()>();

        $r4 = staticinvoke <com.android.server.LockGuard: java.lang.Object installNewLock(int)>(2);

        r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock> = $r4;

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        r0.<com.android.server.pm.UserManagerService: java.lang.Object mRestrictionsLock> = $r5;

        $r6 = new java.lang.Object;

        specialinvoke $r6.<java.lang.Object: void <init>()>();

        r0.<com.android.server.pm.UserManagerService: java.lang.Object mAppRestrictionsLock> = $r6;

        $r7 = new android.util.SparseArray;

        specialinvoke $r7.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers> = $r7;

        $r8 = new com.android.server.pm.RestrictionsSet;

        specialinvoke $r8.<com.android.server.pm.RestrictionsSet: void <init>()>();

        r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet mBaseUserRestrictions> = $r8;

        $r9 = new com.android.server.pm.RestrictionsSet;

        specialinvoke $r9.<com.android.server.pm.RestrictionsSet: void <init>()>();

        r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet mCachedEffectiveUserRestrictions> = $r9;

        $r10 = new com.android.server.pm.RestrictionsSet;

        specialinvoke $r10.<com.android.server.pm.RestrictionsSet: void <init>()>();

        r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet mAppliedUserRestrictions> = $r10;

        $r11 = new com.android.server.pm.RestrictionsSet;

        specialinvoke $r11.<com.android.server.pm.RestrictionsSet: void <init>()>();

        r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet mDevicePolicyGlobalUserRestrictions> = $r11;

        r0.<com.android.server.pm.UserManagerService: int mDeviceOwnerUserId> = -10000;

        $r12 = new android.util.SparseArray;

        specialinvoke $r12.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mDevicePolicyLocalUserRestrictions> = $r12;

        $r13 = new android.os.Bundle;

        specialinvoke $r13.<android.os.Bundle: void <init>()>();

        r0.<com.android.server.pm.UserManagerService: android.os.Bundle mGuestRestrictions> = $r13;

        $r14 = new android.util.SparseBooleanArray;

        specialinvoke $r14.<android.util.SparseBooleanArray: void <init>()>();

        r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds> = $r14;

        $r15 = new java.util.LinkedList;

        specialinvoke $r15.<java.util.LinkedList: void <init>()>();

        r0.<com.android.server.pm.UserManagerService: java.util.LinkedList mRecentlyRemovedIds> = $r15;

        r0.<com.android.server.pm.UserManagerService: int mUserVersion> = 0;

        $r16 = new android.util.SparseBooleanArray;

        specialinvoke $r16.<android.util.SparseBooleanArray: void <init>()>();

        r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mIsUserManaged> = $r16;

        $r17 = new java.util.ArrayList;

        specialinvoke $r17.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.pm.UserManagerService: java.util.ArrayList mUserRestrictionsListeners> = $r17;

        r0.<com.android.server.pm.UserManagerService: java.lang.String ACTION_DISABLE_QUIET_MODE_AFTER_UNLOCK> = "com.android.server.pm.DISABLE_QUIET_MODE_AFTER_UNLOCK";

        $r18 = new com.android.server.pm.UserManagerService$1;

        specialinvoke $r18.<com.android.server.pm.UserManagerService$1: void <init>(com.android.server.pm.UserManagerService)>(r0);

        r0.<com.android.server.pm.UserManagerService: android.content.BroadcastReceiver mDisableQuietModeCallback> = $r18;

        $r19 = new com.android.server.pm.UserManagerService$WatchedUserStates;

        specialinvoke $r19.<com.android.server.pm.UserManagerService$WatchedUserStates: void <init>(com.android.server.pm.UserManagerService)>(r0);

        r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$WatchedUserStates mUserStates> = $r19;

        r0.<com.android.server.pm.UserManagerService: android.content.Context mContext> = r35;

        r0.<com.android.server.pm.UserManagerService: com.android.server.pm.PackageManagerService mPm> = r36;

        r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock> = r2;

        $r20 = new com.android.server.pm.UserManagerService$MainHandler;

        specialinvoke $r20.<com.android.server.pm.UserManagerService$MainHandler: void <init>(com.android.server.pm.UserManagerService)>(r0);

        r0.<com.android.server.pm.UserManagerService: android.os.Handler mHandler> = $r20;

        r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserDataPreparer mUserDataPreparer> = r1;

        $r21 = staticinvoke <com.android.server.pm.UserTypeFactory: android.util.ArrayMap getUserTypes()>();

        r0.<com.android.server.pm.UserManagerService: android.util.ArrayMap mUserTypes> = $r21;

        r37 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r37;

     label1:
        r38 = new java.io.File;

        $r22 = <com.android.server.pm.UserManagerService: java.lang.String USER_INFO_DIR>;

        specialinvoke r38.<java.io.File: void <init>(java.io.File,java.lang.String)>(r3, $r22);

        r0.<com.android.server.pm.UserManagerService: java.io.File mUsersDir> = r38;

        virtualinvoke r38.<java.io.File: boolean mkdirs()>();

        r39 = new java.io.File;

        $r23 = r0.<com.android.server.pm.UserManagerService: java.io.File mUsersDir>;

        $r24 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(0);

        specialinvoke r39.<java.io.File: void <init>(java.io.File,java.lang.String)>($r23, $r24);

        virtualinvoke r39.<java.io.File: boolean mkdirs()>();

        $r25 = r0.<com.android.server.pm.UserManagerService: java.io.File mUsersDir>;

        $r26 = virtualinvoke $r25.<java.io.File: java.lang.String toString()>();

        staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r26, 509, -1, -1);

        r40 = new java.io.File;

        $r27 = r0.<com.android.server.pm.UserManagerService: java.io.File mUsersDir>;

        specialinvoke r40.<java.io.File: void <init>(java.io.File,java.lang.String)>($r27, "userlist.xml");

        r0.<com.android.server.pm.UserManagerService: java.io.File mUserListFile> = r40;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void initDefaultGuestRestrictions()>();

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readUserListLP()>();

        <com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService sInstance> = r0;

        exitmonitor r37;

     label2:
        $r28 = new com.android.server.pm.UserSystemPackageInstaller;

        $r29 = r0.<com.android.server.pm.UserManagerService: android.util.ArrayMap mUserTypes>;

        specialinvoke $r28.<com.android.server.pm.UserSystemPackageInstaller: void <init>(com.android.server.pm.UserManagerService,android.util.ArrayMap)>(r0, $r29);

        r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserSystemPackageInstaller mSystemPackageInstaller> = $r28;

        $r30 = new com.android.server.pm.UserManagerService$LocalService;

        specialinvoke $r30.<com.android.server.pm.UserManagerService$LocalService: void <init>(com.android.server.pm.UserManagerService,com.android.server.pm.UserManagerService$1)>(r0, null);

        r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$LocalService mLocalService> = $r30;

        staticinvoke <com.android.server.LocalServices: void addService(java.lang.Class,java.lang.Object)>(class "Landroid/os/UserManagerInternal;", $r30);

        $r31 = new com.android.internal.widget.LockPatternUtils;

        $r32 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        specialinvoke $r31.<com.android.internal.widget.LockPatternUtils: void <init>(android.content.Context)>($r32);

        r0.<com.android.server.pm.UserManagerService: com.android.internal.widget.LockPatternUtils mLockPatternUtils> = $r31;

        $r33 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$WatchedUserStates mUserStates>;

        virtualinvoke $r33.<com.android.server.pm.UserManagerService$WatchedUserStates: void put(int,int)>(0, 0);

        return;

     label3:
        $r34 := @caughtexception;

     label4:
        exitmonitor r37;

     label5:
        throw $r34;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    static void access$000(com.android.server.pm.UserManagerService, int, boolean, android.content.IntentSender, java.lang.String)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        boolean z0;
        android.content.IntentSender r1;
        java.lang.String r2;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r1 := @parameter3: android.content.IntentSender;

        r2 := @parameter4: java.lang.String;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void setQuietModeEnabled(int,boolean,android.content.IntentSender,java.lang.String)>(i0, z0, r1, r2);

        return;
    }

    static android.os.Handler access$100(com.android.server.pm.UserManagerService)
    {
        com.android.server.pm.UserManagerService r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        $r1 = r0.<com.android.server.pm.UserManagerService: android.os.Handler mHandler>;

        return $r1;
    }

    static java.lang.Object access$1000(com.android.server.pm.UserManagerService)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        $r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mRestrictionsLock>;

        return $r1;
    }

    static void access$1100(com.android.server.pm.UserManagerService, int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void removeUserState(int)>(i0);

        return;
    }

    static java.lang.Object access$1300(com.android.server.pm.UserManagerService)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        $r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        return $r1;
    }

    static com.android.server.pm.UserManagerService$UserData access$1400(com.android.server.pm.UserManagerService, int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        com.android.server.pm.UserManagerService$UserData $r1;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$UserData getUserDataNoChecks(int)>(i0);

        return $r1;
    }

    static void access$1500(com.android.server.pm.UserManagerService, com.android.server.pm.UserManagerService$UserData)
    {
        com.android.server.pm.UserManagerService r0;
        com.android.server.pm.UserManagerService$UserData r1;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        r1 := @parameter1: com.android.server.pm.UserManagerService$UserData;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLP(com.android.server.pm.UserManagerService$UserData)>(r1);

        return;
    }

    static void access$1600(com.android.server.pm.UserManagerService, int, android.os.Bundle, com.android.server.pm.RestrictionsSet, boolean)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        android.os.Bundle r1;
        com.android.server.pm.RestrictionsSet r2;
        boolean z0;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        i0 := @parameter1: int;

        r1 := @parameter2: android.os.Bundle;

        r2 := @parameter3: com.android.server.pm.RestrictionsSet;

        z0 := @parameter4: boolean;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void setDevicePolicyUserRestrictionsInner(int,android.os.Bundle,com.android.server.pm.RestrictionsSet,boolean)>(i0, r1, r2, z0);

        return;
    }

    static com.android.server.pm.RestrictionsSet access$1700(com.android.server.pm.UserManagerService)
    {
        com.android.server.pm.UserManagerService r0;
        com.android.server.pm.RestrictionsSet $r1;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        $r1 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet mBaseUserRestrictions>;

        return $r1;
    }

    static void access$1800(com.android.server.pm.UserManagerService, int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void invalidateEffectiveUserRestrictionsLR(int)>(i0);

        return;
    }

    static boolean access$1900(com.android.server.pm.UserManagerService)
    {
        com.android.server.pm.UserManagerService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        $z0 = r0.<com.android.server.pm.UserManagerService: boolean mIsDeviceManaged>;

        return $z0;
    }

    static boolean access$1902(com.android.server.pm.UserManagerService, boolean)
    {
        com.android.server.pm.UserManagerService r0;
        boolean z0;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        z0 := @parameter1: boolean;

        r0.<com.android.server.pm.UserManagerService: boolean mIsDeviceManaged> = z0;

        return z0;
    }

    static android.content.Context access$200(com.android.server.pm.UserManagerService)
    {
        com.android.server.pm.UserManagerService r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        $r1 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        return $r1;
    }

    static android.util.SparseBooleanArray access$2000(com.android.server.pm.UserManagerService)
    {
        com.android.server.pm.UserManagerService r0;
        android.util.SparseBooleanArray $r1;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        $r1 = r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mIsUserManaged>;

        return $r1;
    }

    static void access$2100(com.android.server.pm.UserManagerService, android.content.pm.UserInfo, android.graphics.Bitmap)
    {
        com.android.server.pm.UserManagerService r0;
        android.content.pm.UserInfo r1;
        android.graphics.Bitmap r2;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        r1 := @parameter1: android.content.pm.UserInfo;

        r2 := @parameter2: android.graphics.Bitmap;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeBitmapLP(android.content.pm.UserInfo,android.graphics.Bitmap)>(r1, r2);

        return;
    }

    static void access$2200(com.android.server.pm.UserManagerService, int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void sendUserInfoChangedBroadcast(int)>(i0);

        return;
    }

    static boolean access$2302(com.android.server.pm.UserManagerService, boolean)
    {
        com.android.server.pm.UserManagerService r0;
        boolean z0;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        z0 := @parameter1: boolean;

        r0.<com.android.server.pm.UserManagerService: boolean mForceEphemeralUsers> = z0;

        return z0;
    }

    static void access$2400(com.android.server.pm.UserManagerService)
    {
        com.android.server.pm.UserManagerService r0;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void removeNonSystemUsers()>();

        return;
    }

    static android.content.pm.UserInfo access$2500(com.android.server.pm.UserManagerService, int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        android.content.pm.UserInfo $r1;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLU(int)>(i0);

        return $r1;
    }

    static android.content.pm.UserInfo access$2600(com.android.server.pm.UserManagerService, java.lang.String, java.lang.String, int, int, boolean, java.lang.String[]) throws android.os.UserManager$CheckedUserOperationException
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1, r2;
        int i0, i1;
        boolean z0;
        java.lang.String[] r3;
        android.content.pm.UserInfo $r4;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        z0 := @parameter5: boolean;

        r3 := @parameter6: java.lang.String[];

        $r4 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo createUserInternalUnchecked(java.lang.String,java.lang.String,int,int,boolean,java.lang.String[])>(r1, r2, i0, i1, z0, r3);

        return $r4;
    }

    static boolean access$2700(com.android.server.pm.UserManagerService, int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.server.pm.UserManagerService: boolean removeUserUnchecked(int)>(i0);

        return $z0;
    }

    static com.android.server.pm.UserManagerService$WatchedUserStates access$2800(com.android.server.pm.UserManagerService)
    {
        com.android.server.pm.UserManagerService r0;
        com.android.server.pm.UserManagerService$WatchedUserStates $r1;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        $r1 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$WatchedUserStates mUserStates>;

        return $r1;
    }

    static java.util.List access$2900(com.android.server.pm.UserManagerService, boolean, boolean, boolean)
    {
        com.android.server.pm.UserManagerService r0;
        boolean z0, z1, z2;
        java.util.List $r1;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        $r1 = specialinvoke r0.<com.android.server.pm.UserManagerService: java.util.List getUsersInternal(boolean,boolean,boolean)>(z0, z1, z2);

        return $r1;
    }

    static com.android.server.pm.PackageManagerService access$300(com.android.server.pm.UserManagerService)
    {
        com.android.server.pm.UserManagerService r0;
        com.android.server.pm.PackageManagerService $r1;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        $r1 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.PackageManagerService mPm>;

        return $r1;
    }

    static android.content.pm.UserInfo access$3000(com.android.server.pm.UserManagerService, int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        android.content.pm.UserInfo $r1;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoNoChecks(int)>(i0);

        return $r1;
    }

    static android.content.pm.UserInfo access$3100(com.android.server.pm.UserManagerService, int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        android.content.pm.UserInfo $r1;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getProfileParentLU(int)>(i0);

        return $r1;
    }

    static android.os.Bundle access$3200(com.android.server.pm.UserManagerService, int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        android.os.Bundle $r1;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.os.Bundle getEffectiveUserRestrictions(int)>(i0);

        return $r1;
    }

    static android.util.SparseArray access$3300(com.android.server.pm.UserManagerService)
    {
        com.android.server.pm.UserManagerService r0;
        android.util.SparseArray $r1;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        $r1 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        return $r1;
    }

    static java.lang.Object access$400(com.android.server.pm.UserManagerService)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        $r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        return $r1;
    }

    static com.android.server.pm.UserManagerService$UserData access$500(com.android.server.pm.UserManagerService, int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        com.android.server.pm.UserManagerService$UserData $r1;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$UserData getUserDataLU(int)>(i0);

        return $r1;
    }

    static android.os.IBinder access$700()
    {
        android.os.IBinder $r0;

        $r0 = <com.android.server.pm.UserManagerService: android.os.IBinder mUserRestriconToken>;

        return $r0;
    }

    static com.android.internal.app.IAppOpsService access$800(com.android.server.pm.UserManagerService)
    {
        com.android.server.pm.UserManagerService r0;
        com.android.internal.app.IAppOpsService $r1;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        $r1 = r0.<com.android.server.pm.UserManagerService: com.android.internal.app.IAppOpsService mAppOpsService>;

        return $r1;
    }

    static java.util.ArrayList access$900(com.android.server.pm.UserManagerService)
    {
        com.android.server.pm.UserManagerService r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        $r1 = r0.<com.android.server.pm.UserManagerService: java.util.ArrayList mUserRestrictionsListeners>;

        return $r1;
    }

    private void broadcastProfileAvailabilityChanges(android.os.UserHandle, android.os.UserHandle, boolean)
    {
        com.android.server.pm.UserManagerService r0;
        android.os.UserHandle r1, r2;
        boolean z0;
        android.content.Intent $r4;
        int $i0;
        android.app.admin.DevicePolicyManagerInternal $r9;
        android.content.Context $r11;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: android.os.UserHandle;

        r2 := @parameter1: android.os.UserHandle;

        z0 := @parameter2: boolean;

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>()>();

        if z0 == 0 goto label1;

        virtualinvoke $r4.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("android.intent.action.MANAGED_PROFILE_UNAVAILABLE");

        goto label2;

     label1:
        virtualinvoke $r4.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("android.intent.action.MANAGED_PROFILE_AVAILABLE");

     label2:
        virtualinvoke $r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("android.intent.extra.QUIET_MODE", z0);

        virtualinvoke $r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.USER", r1);

        $i0 = virtualinvoke r1.<android.os.UserHandle: int getIdentifier()>();

        virtualinvoke $r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", $i0);

        $r9 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.app.admin.DevicePolicyManagerInternal getDevicePolicyManagerInternal()>();

        virtualinvoke $r9.<android.app.admin.DevicePolicyManagerInternal: void broadcastIntentToCrossProfileManifestReceiversAsUser(android.content.Intent,android.os.UserHandle,boolean)>($r4, r2, 1);

        virtualinvoke $r4.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        $r11 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        virtualinvoke $r11.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r4, r2);

        return;
    }

    private boolean canAddMoreUsersOfType(com.android.server.pm.UserTypeDetails)
    {
        com.android.server.pm.UserManagerService r0;
        com.android.server.pm.UserTypeDetails r1;
        int i0, $i1;
        java.lang.String $r2;
        boolean z0;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: com.android.server.pm.UserTypeDetails;

        i0 = virtualinvoke r1.<com.android.server.pm.UserTypeDetails: int getMaxAllowed()>();

        z0 = 1;

        if i0 != -1 goto label1;

        return 1;

     label1:
        $r2 = virtualinvoke r1.<com.android.server.pm.UserTypeDetails: java.lang.String getName()>();

        $i1 = specialinvoke r0.<com.android.server.pm.UserManagerService: int getNumberOfUsersOfType(java.lang.String)>($r2);

        if $i1 >= i0 goto label2;

        goto label3;

     label2:
        z0 = 0;

     label3:
        return z0;
    }

    private static final void checkManageOrCreateUsersPermission(int)
    {
        int i0, $i1;
        boolean $z0, $z1;
        java.lang.StringBuilder $r0, $r5;
        java.lang.SecurityException $r3, $r8;
        java.lang.String $r4, $r9;

        i0 := @parameter0: int;

        $i1 = i0 & -813;

        if $i1 != 0 goto label2;

        $z1 = staticinvoke <com.android.server.pm.UserManagerService: boolean hasManageOrCreateUsersPermission()>();

        if $z1 == 0 goto label1;

        goto label3;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("You either need MANAGE_USERS or CREATE_USERS permission to create an user with flags: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = new java.lang.SecurityException;

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.SecurityException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label2:
        $z0 = staticinvoke <com.android.server.pm.UserManagerService: boolean hasManageUsersPermission()>();

        if $z0 == 0 goto label4;

     label3:
        return;

     label4:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("You need MANAGE_USERS permission to create an user  with flags: ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = new java.lang.SecurityException;

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>($r4);

        throw $r3;
    }

    private static final void checkManageOrCreateUsersPermission(java.lang.String)
    {
        java.lang.String r0, $r6;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.SecurityException $r5;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <com.android.server.pm.UserManagerService: boolean hasManageOrCreateUsersPermission()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("You either need MANAGE_USERS or CREATE_USERS permission to: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = new java.lang.SecurityException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.SecurityException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    private void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int, java.lang.String)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, i1, $i2;
        java.lang.String r1, $r7;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r3;
        java.lang.SecurityException $r6;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        if i1 == i0 goto label3;

        $z0 = specialinvoke r0.<com.android.server.pm.UserManagerService: boolean isSameProfileGroupNoChecks(int,int)>(i1, i0);

        if $z0 != 0 goto label3;

        $z1 = staticinvoke <com.android.server.pm.UserManagerService: boolean hasManageUsersPermission()>();

        if $z1 == 0 goto label1;

        goto label3;

     label1:
        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $z2 = staticinvoke <com.android.server.pm.UserManagerService: boolean hasPermissionGranted(java.lang.String,int)>("android.permission.INTERACT_ACROSS_USERS", $i2);

        if $z2 == 0 goto label2;

        return;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("You need INTERACT_ACROSS_USERS or MANAGE_USERS permission to: check ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = new java.lang.SecurityException;

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.SecurityException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label3:
        return;
    }

    private static final void checkManageUserAndAcrossUsersFullPermission(java.lang.String)
    {
        java.lang.String r0, $r6;
        int i0;
        boolean $z0, $z1;
        java.lang.StringBuilder $r2;
        java.lang.SecurityException $r5;

        r0 := @parameter0: java.lang.String;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i0 == 1000 goto label3;

        if i0 != 0 goto label1;

        goto label3;

     label1:
        $z0 = staticinvoke <com.android.server.pm.UserManagerService: boolean hasPermissionGranted(java.lang.String,int)>("android.permission.MANAGE_USERS", i0);

        if $z0 == 0 goto label2;

        $z1 = staticinvoke <com.android.server.pm.UserManagerService: boolean hasPermissionGranted(java.lang.String,int)>("android.permission.INTERACT_ACROSS_USERS_FULL", i0);

        if $z1 == 0 goto label2;

        return;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("You need MANAGE_USERS and INTERACT_ACROSS_USERS_FULL permission to: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = new java.lang.SecurityException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.SecurityException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label3:
        return;
    }

    private static final void checkManageUsersPermission(java.lang.String)
    {
        java.lang.String r0, $r6;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.SecurityException $r5;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <com.android.server.pm.UserManagerService: boolean hasManageUsersPermission()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("You need MANAGE_USERS permission to: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = new java.lang.SecurityException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.SecurityException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    private static void checkSystemOrRoot(java.lang.String)
    {
        java.lang.String r0, $r6;
        int i0;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.SecurityException $r5;

        r0 := @parameter0: java.lang.String;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $z0 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>(i0, 1000);

        if $z0 != 0 goto label2;

        if i0 != 0 goto label1;

        goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Only system may: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = new java.lang.SecurityException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.SecurityException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label2:
        return;
    }

    static boolean checkUserTypeConsistency(int)
    {
        int i0, $i1, $i2, $i3;
        boolean $z0, $z1, $z2, z3;

        i0 := @parameter0: int;

        $i1 = i0 & 4620;

        $z0 = staticinvoke <com.android.server.pm.UserManagerService: boolean isAtMostOneFlag(int)>($i1);

        if $z0 == 0 goto label1;

        $i2 = i0 & 5120;

        $z1 = staticinvoke <com.android.server.pm.UserManagerService: boolean isAtMostOneFlag(int)>($i2);

        if $z1 == 0 goto label1;

        $i3 = i0 & 6144;

        $z2 = staticinvoke <com.android.server.pm.UserManagerService: boolean isAtMostOneFlag(int)>($i3);

        if $z2 == 0 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        return z3;
    }

    private static boolean cleanAppRestrictionsForPackageLAr(java.lang.String, int)
    {
        int i0;
        java.io.File $r0, $r1;
        java.lang.String $r2, r3;
        boolean $z0;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r0 = new java.io.File;

        $r1 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>(i0);

        $r2 = staticinvoke <com.android.server.pm.UserManagerService: java.lang.String packageToRestrictionsFileName(java.lang.String)>(r3);

        specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, $r2);

        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<java.io.File: boolean delete()>();

        return 1;

     label1:
        return 0;
    }

    private android.os.Bundle computeEffectiveUserRestrictionsLR(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        android.os.Bundle r1, $r4, $r6, r7, r8;
        com.android.server.pm.RestrictionsSet r2, $r3, $r5;
        boolean $z0, $z1;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet mBaseUserRestrictions>;

        $r4 = virtualinvoke $r3.<com.android.server.pm.RestrictionsSet: android.os.Bundle getRestrictions(int)>(i0);

        r7 = staticinvoke <com.android.server.pm.UserRestrictionsUtils: android.os.Bundle nonNull(android.os.Bundle)>($r4);

        $r5 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet mDevicePolicyGlobalUserRestrictions>;

        r1 = virtualinvoke $r5.<com.android.server.pm.RestrictionsSet: android.os.Bundle mergeAll()>();

        r2 = specialinvoke r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet getDevicePolicyLocalRestrictionsForTargetUserLR(int)>(i0);

        $z0 = staticinvoke <com.android.server.pm.UserRestrictionsUtils: boolean isEmpty(android.os.Bundle)>(r1);

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r2.<com.android.server.pm.RestrictionsSet: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        return r7;

     label1:
        r8 = staticinvoke <com.android.server.pm.UserRestrictionsUtils: android.os.Bundle clone(android.os.Bundle)>(r7);

        staticinvoke <com.android.server.pm.UserRestrictionsUtils: void merge(android.os.Bundle,android.os.Bundle)>(r8, r1);

        $r6 = virtualinvoke r2.<com.android.server.pm.RestrictionsSet: android.os.Bundle mergeAll()>();

        staticinvoke <com.android.server.pm.UserRestrictionsUtils: void merge(android.os.Bundle,android.os.Bundle)>(r8, $r6);

        return r8;
    }

    private android.content.pm.UserInfo convertPreCreatedUserIfPossible(java.lang.String, int, java.lang.String)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, i1, $i2, $i3, $i6, $i7, $i8, $i9;
        com.android.server.pm.UserManagerService$UserData r1;
        boolean $z0, $z1;
        java.lang.StringBuilder $r3, $r14;
        java.lang.String $r9, $r11, $r20, $r23, $r26, r29, r30;
        long $l5;
        com.android.server.pm.PackageManagerService $r12, $r13;
        java.lang.Throwable $r27, $r28;
        java.lang.Object r31, r34;
        android.content.pm.UserInfo r32;

        r0 := @this: com.android.server.pm.UserManagerService;

        r29 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r30 := @parameter2: java.lang.String;

        r31 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r31;

     label01:
        r1 = specialinvoke r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$UserData getPreCreatedUserLU(java.lang.String)>(r29);

        exitmonitor r31;

     label02:
        if r1 != null goto label03;

        return null;

     label03:
        r32 = r1.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $i2 = r32.<android.content.pm.UserInfo: int flags>;

        i1 = $i2 | i0;

        $z0 = staticinvoke <com.android.server.pm.UserManagerService: boolean checkUserTypeConsistency(int)>(i1);

        if $z0 != 0 goto label04;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot reuse pre-created user ");

        $i8 = r32.<android.content.pm.UserInfo: int id>;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of type ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because flags are inconsistent. Flags (");

        $r20 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("); preCreatedUserFlags ( ");

        $i9 = r32.<android.content.pm.UserInfo: int flags>;

        $r23 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i9);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").");

        $r26 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("UserManagerService", $r26);

        return null;

     label04:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reusing pre-created user ");

        $i3 = r32.<android.content.pm.UserInfo: int id>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of type ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and bestowing on it flags ");

        $r9 = staticinvoke <android.content.pm.UserInfo: java.lang.String flagsToString(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("UserManagerService", $r11);

        r32.<android.content.pm.UserInfo: java.lang.String name> = r30;

        r32.<android.content.pm.UserInfo: int flags> = i1;

        r32.<android.content.pm.UserInfo: boolean preCreated> = 0;

        $l5 = specialinvoke r0.<com.android.server.pm.UserManagerService: long getCreationTime()>();

        r32.<android.content.pm.UserInfo: long creationTime> = $l5;

        r34 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r34;

     label05:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLP(com.android.server.pm.UserManagerService$UserData)>(r1);

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserListLP()>();

        exitmonitor r34;

     label06:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void updateUserIds()>();

        $r12 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.PackageManagerService mPm>;

        $i6 = r32.<android.content.pm.UserInfo: int id>;

        $z1 = virtualinvoke $r12.<com.android.server.pm.PackageManagerService: boolean readPermissionStateForUser(int)>($i6);

        if $z1 != 0 goto label07;

        $r13 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.PackageManagerService mPm>;

        $i7 = r32.<android.content.pm.UserInfo: int id>;

        virtualinvoke $r13.<com.android.server.pm.PackageManagerService: void onNewUserCreated(int)>($i7);

     label07:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void dispatchUserAdded(android.content.pm.UserInfo)>(r32);

        return r32;

     label08:
        $r27 := @caughtexception;

     label09:
        exitmonitor r34;

     label10:
        throw $r27;

     label11:
        $r28 := @caughtexception;

     label12:
        exitmonitor r31;

     label13:
        throw $r28;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    private android.content.pm.UserInfo createUserInternal(java.lang.String, java.lang.String, int, int, java.lang.String[]) throws android.os.UserManager$CheckedUserOperationException
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1, r2, r5;
        int i0, i1, $i2;
        java.lang.String[] r3;
        boolean $z0;
        android.content.pm.UserInfo $r4;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: java.lang.String[];

        $z0 = staticinvoke <android.os.UserManager: boolean isUserTypeManagedProfile(java.lang.String)>(r2);

        if $z0 == 0 goto label1;

        r5 = "no_add_managed_profile";

        goto label2;

     label1:
        r5 = "no_add_user";

     label2:
        $i2 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        specialinvoke r0.<com.android.server.pm.UserManagerService: void enforceUserRestriction(java.lang.String,int,java.lang.String)>(r5, $i2, "Cannot add user");

        $r4 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo createUserInternalUnchecked(java.lang.String,java.lang.String,int,int,boolean,java.lang.String[])>(r1, r2, i0, i1, 0, r3);

        return $r4;
    }

    private android.content.pm.UserInfo createUserInternalUnchecked(java.lang.String, java.lang.String, int, int, boolean, java.lang.String[]) throws android.os.UserManager$CheckedUserOperationException
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1, $r9, r11;
        int i0, i1, i2;
        java.lang.String[] r2;
        long l3;
        com.android.server.utils.TimingsTraceAndSlog $r5;
        java.lang.StringBuilder $r6;
        java.lang.Throwable $r10;
        boolean z0, z1, z2;
        android.content.pm.UserInfo r12;

        r0 := @this: com.android.server.pm.UserManagerService;

        r11 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        z0 := @parameter4: boolean;

        r2 := @parameter5: java.lang.String[];

        i2 = virtualinvoke r0.<com.android.server.pm.UserManagerService: int getNextAvailableId()>();

        $r5 = new com.android.server.utils.TimingsTraceAndSlog;

        specialinvoke $r5.<com.android.server.utils.TimingsTraceAndSlog: void <init>()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("createUser-");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>($r9);

        l3 = specialinvoke r0.<com.android.server.pm.UserManagerService: long logUserCreateJourneyBegin(int,java.lang.String,int)>(i2, r1, i0);

     label1:
        r12 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo createUserInternalUncheckedNoTracing(java.lang.String,java.lang.String,int,int,boolean,java.lang.String[],com.android.server.utils.TimingsTraceAndSlog)>(r11, r1, i0, i1, z0, r2, $r5);

     label2:
        if r12 == null goto label3;

        z1 = 1;

        goto label4;

     label3:
        z1 = 0;

     label4:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void logUserCreateJourneyFinish(long,int,boolean)>(l3, i2, z1);

        virtualinvoke $r5.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

        return r12;

     label5:
        $r10 := @caughtexception;

        goto label6;

     label6:
        z2 = 0;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void logUserCreateJourneyFinish(long,int,boolean)>(l3, i2, z2);

        virtualinvoke $r5.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    private android.content.pm.UserInfo createUserInternalUncheckedNoTracing(java.lang.String, java.lang.String, int, int, boolean, java.lang.String[], com.android.server.utils.TimingsTraceAndSlog) throws android.os.UserManager$CheckedUserOperationException
    {
        com.android.server.pm.UserManagerService r0;
        int i0, i2, $i3, $i4, $i5, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i19, i20, i21, i22, i23, i24, $i25, $i26;
        boolean z0, z1, z2, z3, $z4, $z5, $z7, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, z18, z19, $z20;
        com.android.server.utils.TimingsTraceAndSlog r1;
        com.android.server.pm.UserTypeDetails r2;
        java.lang.String r3, $r8, $r12, $r15, $r17, $r31, $r36, $r40, $r43, $r46, $r49, $r52, $r57, $r61, $r76, r83, r84;
        long l1, $l6;
        java.lang.Object r4, $r7, r89, $r91, r93, r94, r104, $r108, r114, r118, r127;
        android.content.pm.UserInfo r5, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, r90;
        android.util.ArrayMap $r6;
        com.android.server.pm.RestrictionsSet $r9;
        com.android.server.pm.PackageManagerService $r13, r113;
        android.os.Bundle $r18, r115, r116;
        java.lang.StringBuilder $r44, $r50, $r58, r96, r99, r100, r101, r119, r120, r123;
        java.lang.Throwable $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r77, $r78, $r79, $r80, $r81, $r82, r98, r103, r126, r128;
        android.os.RemoteException $r73;
        java.lang.String[] r85;
        com.android.server.storage.DeviceStorageMonitorInternal $r92;
        com.android.server.pm.UserManagerService$UserData r95, r105;
        java.io.File $r102;
        android.util.SparseArray $r106;
        android.content.Context $r107;
        android.os.storage.StorageManager $r109;
        com.android.server.pm.UserDataPreparer $r110;
        com.android.server.pm.UserSystemPackageInstaller $r111;
        java.util.Set r112;
        android.app.IActivityManager r121;

        r0 := @this: com.android.server.pm.UserManagerService;

        r83 := @parameter0: java.lang.String;

        r84 := @parameter1: java.lang.String;

        i19 := @parameter2: int;

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        r85 := @parameter5: java.lang.String[];

        r1 := @parameter6: com.android.server.utils.TimingsTraceAndSlog;

        $r6 = r0.<com.android.server.pm.UserManagerService: android.util.ArrayMap mUserTypes>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r84);

        r2 = (com.android.server.pm.UserTypeDetails) $r7;

        if r2 != null goto label001;

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create user of invalid user type: ");

        virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r84);

        $r61 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", $r61);

        return null;

     label001:
        r3 = virtualinvoke r84.<java.lang.String: java.lang.String intern()>();

        $i3 = virtualinvoke r2.<com.android.server.pm.UserTypeDetails: int getDefaultUserInfoFlags()>();

        i20 = i19 | $i3;

        $z4 = staticinvoke <com.android.server.pm.UserManagerService: boolean checkUserTypeConsistency(int)>(i20);

        if $z4 != 0 goto label002;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot add user. Flags (");

        $r52 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i20);

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") and userTypeDetails (");

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") are inconsistent.");

        $r57 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", $r57);

        return null;

     label002:
        $i4 = i20 & 2048;

        if $i4 == 0 goto label003;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot add user. Flags (");

        $r46 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i20);

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") indicated SYSTEM user, which cannot be created.");

        $r49 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", $r49);

        return null;

     label003:
        r89 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r89;

        i21 = i20;

     label004:
        $z5 = r0.<com.android.server.pm.UserManagerService: boolean mForceEphemeralUsers>;

        if $z5 == 0 goto label006;

     label005:
        i21 = i20 | 256;

     label006:
        exitmonitor r89;

     label007:
        if z0 != 0 goto label008;

        if i0 >= 0 goto label008;

        $z16 = staticinvoke <com.android.server.pm.UserManagerService: boolean isUserTypeEligibleForPreCreation(com.android.server.pm.UserTypeDetails)>(r2);

        if $z16 == 0 goto label008;

        r90 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo convertPreCreatedUserIfPossible(java.lang.String,int,java.lang.String)>(r3, i21, r83);

        if r90 == null goto label008;

        return r90;

     label008:
        $r91 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/storage/DeviceStorageMonitorInternal;");

        $r92 = (com.android.server.storage.DeviceStorageMonitorInternal) $r91;

        $z17 = interfaceinvoke $r92.<com.android.server.storage.DeviceStorageMonitorInternal: boolean isMemoryLow()>();

        if $z17 == 0 goto label009;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void throwCheckedUserOperationException(java.lang.String,int)>("Cannot add user. Not enough space on disk.", 5);

     label009:
        z1 = virtualinvoke r2.<com.android.server.pm.UserTypeDetails: boolean isProfile()>();

        z2 = staticinvoke <android.os.UserManager: boolean isUserTypeGuest(java.lang.String)>(r3);

        z3 = staticinvoke <android.os.UserManager: boolean isUserTypeRestricted(java.lang.String)>(r3);

        z18 = staticinvoke <android.os.UserManager: boolean isUserTypeDemo(java.lang.String)>(r3);

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label010:
        r93 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r93;

     label011:
        if i0 == -10000 goto label021;

     label012:
        r94 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r94;

     label013:
        r95 = specialinvoke r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$UserData getUserDataLU(int)>(i0);

        exitmonitor r94;

     label014:
        if r95 != null goto label016;

     label015:
        r96 = new java.lang.StringBuilder;

        specialinvoke r96.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find user data for parent user ");

        virtualinvoke r96.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r43 = virtualinvoke r96.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.pm.UserManagerService: void throwCheckedUserOperationException(java.lang.String,int)>($r43, 1);

     label016:
        goto label022;

     label017:
        $r66 := @caughtexception;

     label018:
        exitmonitor r94;

     label019:
        throw $r66;

     label020:
        $r71 := @caughtexception;

        r98 = $r71;

        goto label097;

     label021:
        r95 = null;

     label022:
        if z0 != 0 goto label024;

     label023:
        $z15 = specialinvoke r0.<com.android.server.pm.UserManagerService: boolean canAddMoreUsersOfType(com.android.server.pm.UserTypeDetails)>(r2);

        if $z15 != 0 goto label024;

        r99 = new java.lang.StringBuilder;

        specialinvoke r99.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot add more users of type ");

        virtualinvoke r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Maximum number of that type already exists.");

        $r40 = virtualinvoke r99.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.pm.UserManagerService: void throwCheckedUserOperationException(java.lang.String,int)>($r40, 6);

     label024:
        if z1 == 0 goto label026;

     label025:
        $z14 = virtualinvoke r0.<com.android.server.pm.UserManagerService: boolean canAddMoreProfilesToUser(java.lang.String,int,boolean)>(r3, i0, 0);

        if $z14 != 0 goto label026;

        r100 = new java.lang.StringBuilder;

        specialinvoke r100.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot add more profiles of type ");

        virtualinvoke r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for user ");

        virtualinvoke r100.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r36 = virtualinvoke r100.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.pm.UserManagerService: void throwCheckedUserOperationException(java.lang.String,int)>($r36, 6);

     label026:
        if z2 != 0 goto label028;

        if z1 != 0 goto label028;

        if z18 != 0 goto label028;

     label027:
        $z13 = specialinvoke r0.<com.android.server.pm.UserManagerService: boolean isUserLimitReached()>();

        if $z13 == 0 goto label028;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void throwCheckedUserOperationException(java.lang.String,int)>("Cannot add user. Maximum user limit is reached.", 6);

     label028:
        if z3 == 0 goto label032;

     label029:
        $z12 = staticinvoke <android.os.UserManager: boolean isSplitSystemUser()>();

        if $z12 != 0 goto label032;

     label030:
        if i0 == 0 goto label032;

     label031:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void throwCheckedUserOperationException(java.lang.String,int)>("Cannot add restricted profile - parent user must be owner", 1);

     label032:
        if z3 == 0 goto label037;

     label033:
        $z10 = staticinvoke <android.os.UserManager: boolean isSplitSystemUser()>();

        if $z10 == 0 goto label037;

     label034:
        if r95 != null goto label036;

     label035:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void throwCheckedUserOperationException(java.lang.String,int)>("Cannot add restricted profile - parent user must be specified", 1);

     label036:
        $r28 = r95.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $z11 = virtualinvoke $r28.<android.content.pm.UserInfo: boolean canHaveProfile()>();

        if $z11 != 0 goto label037;

        r101 = new java.lang.StringBuilder;

        specialinvoke r101.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot add restricted profile - profiles cannot be created for the specified parent user id ");

        virtualinvoke r101.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r31 = virtualinvoke r101.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.pm.UserManagerService: void throwCheckedUserOperationException(java.lang.String,int)>($r31, 1);

     label037:
        i2 = virtualinvoke r0.<com.android.server.pm.UserManagerService: int getNextAvailableId()>();

        $r102 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>(i2);

        virtualinvoke $r102.<java.io.File: boolean mkdirs()>();

        r4 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r4;

     label038:
        i22 = i21;

        if r95 == null goto label042;

     label039:
        $r27 = r95.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        z19 = virtualinvoke $r27.<android.content.pm.UserInfo: boolean isEphemeral()>();

     label040:
        i22 = i21;

        if z19 == 0 goto label042;

        i22 = i21 | 256;

        goto label042;

     label041:
        $r77 := @caughtexception;

        r103 = $r77;

        goto label092;

     label042:
        i23 = i22;

        if z0 == 0 goto label043;

        i23 = i22 & -257;

     label043:
        r5 = new android.content.pm.UserInfo;

     label044:
        r104 = r93;

     label045:
        specialinvoke r5.<android.content.pm.UserInfo: void <init>(int,java.lang.String,java.lang.String,int,java.lang.String)>(i2, r83, null, i23, r3);

        i24 = r0.<com.android.server.pm.UserManagerService: int mNextSerialNumber>;

        $i5 = i24 + 1;

        r0.<com.android.server.pm.UserManagerService: int mNextSerialNumber> = $i5;

        r5.<android.content.pm.UserInfo: int serialNumber> = i24;

        $l6 = specialinvoke r0.<com.android.server.pm.UserManagerService: long getCreationTime()>();

        r5.<android.content.pm.UserInfo: long creationTime> = $l6;

        r5.<android.content.pm.UserInfo: boolean partial> = 1;

        r5.<android.content.pm.UserInfo: boolean preCreated> = z0;

        $r8 = <android.os.Build: java.lang.String FINGERPRINT>;

        r5.<android.content.pm.UserInfo: java.lang.String lastLoggedInFingerprint> = $r8;

        $z7 = virtualinvoke r2.<com.android.server.pm.UserTypeDetails: boolean hasBadge()>();

        if $z7 == 0 goto label048;

     label046:
        if i0 == -10000 goto label048;

     label047:
        $i14 = virtualinvoke r0.<com.android.server.pm.UserManagerService: int getFreeProfileBadgeLU(int,java.lang.String)>(i0, r3);

        r5.<android.content.pm.UserInfo: int profileBadge> = $i14;

     label048:
        r105 = new com.android.server.pm.UserManagerService$UserData;

        specialinvoke r105.<com.android.server.pm.UserManagerService$UserData: void <init>()>();

        r105.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info> = r5;

        $r106 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        virtualinvoke $r106.<android.util.SparseArray: void put(int,java.lang.Object)>(i2, r105);

        exitmonitor r4;

     label049:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLP(com.android.server.pm.UserManagerService$UserData)>(r105);

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserListLP()>();

     label050:
        if r95 == null goto label057;

        if z1 == 0 goto label054;

     label051:
        $r23 = r95.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $i11 = $r23.<android.content.pm.UserInfo: int profileGroupId>;

        if $i11 != -10000 goto label052;

        $r26 = r95.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $r25 = r95.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $i13 = $r25.<android.content.pm.UserInfo: int id>;

        $r26.<android.content.pm.UserInfo: int profileGroupId> = $i13;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLP(com.android.server.pm.UserManagerService$UserData)>(r95);

     label052:
        $r24 = r95.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $i12 = $r24.<android.content.pm.UserInfo: int profileGroupId>;

        r5.<android.content.pm.UserInfo: int profileGroupId> = $i12;

     label053:
        goto label057;

     label054:
        if z3 == 0 goto label057;

     label055:
        $r19 = r95.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $i8 = $r19.<android.content.pm.UserInfo: int restrictedProfileParentId>;

        if $i8 != -10000 goto label056;

        $r22 = r95.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $r21 = r95.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $i10 = $r21.<android.content.pm.UserInfo: int id>;

        $r22.<android.content.pm.UserInfo: int restrictedProfileParentId> = $i10;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLP(com.android.server.pm.UserManagerService$UserData)>(r95);

     label056:
        $r20 = r95.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $i9 = $r20.<android.content.pm.UserInfo: int restrictedProfileParentId>;

        r5.<android.content.pm.UserInfo: int restrictedProfileParentId> = $i9;

     label057:
        exitmonitor r104;

     label058:
        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("createUserKey");

        $r107 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r108 = virtualinvoke $r107.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/os/storage/StorageManager;");

        $r109 = (android.os.storage.StorageManager) $r108;

        $i25 = r5.<android.content.pm.UserInfo: int serialNumber>;

        $z20 = virtualinvoke r5.<android.content.pm.UserInfo: boolean isEphemeral()>();

        virtualinvoke $r109.<android.os.storage.StorageManager: void createUserKey(int,int,boolean)>(i2, $i25, $z20);

        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("prepareUserData");

        $r110 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserDataPreparer mUserDataPreparer>;

        $i26 = r5.<android.content.pm.UserInfo: int serialNumber>;

        virtualinvoke $r110.<com.android.server.pm.UserDataPreparer: void prepareUserData(int,int,int)>(i2, $i26, 3);

        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

        $r111 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserSystemPackageInstaller mSystemPackageInstaller>;

        r112 = virtualinvoke $r111.<com.android.server.pm.UserSystemPackageInstaller: java.util.Set getInstallablePackagesForUserType(java.lang.String)>(r3);

        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("PM.createNewUser");

        r113 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.PackageManagerService mPm>;

     label059:
        virtualinvoke r113.<com.android.server.pm.PackageManagerService: void createNewUser(int,java.util.Set,java.lang.String[])>(i2, r112, r85);

        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

        r5.<android.content.pm.UserInfo: boolean partial> = 0;

        r114 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r114;

     label060:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLP(com.android.server.pm.UserManagerService$UserData)>(r105);

        exitmonitor r114;

     label061:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void updateUserIds()>();

        r115 = new android.os.Bundle;

        specialinvoke r115.<android.os.Bundle: void <init>()>();

     label062:
        if z2 == 0 goto label069;

     label063:
        r116 = r0.<com.android.server.pm.UserManagerService: android.os.Bundle mGuestRestrictions>;

        entermonitor r116;

     label064:
        $r18 = r0.<com.android.server.pm.UserManagerService: android.os.Bundle mGuestRestrictions>;

        virtualinvoke r115.<android.os.Bundle: void putAll(android.os.Bundle)>($r18);

        exitmonitor r116;

     label065:
        goto label070;

     label066:
        $r68 := @caughtexception;

     label067:
        exitmonitor r116;

     label068:
        throw $r68;

     label069:
        virtualinvoke r2.<com.android.server.pm.UserTypeDetails: void addDefaultRestrictionsTo(android.os.Bundle)>(r115);

     label070:
        r118 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mRestrictionsLock>;

        entermonitor r118;

     label071:
        $r9 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet mBaseUserRestrictions>;

        virtualinvoke $r9.<com.android.server.pm.RestrictionsSet: boolean updateRestrictions(int,android.os.Bundle)>(i2, r115);

        exitmonitor r118;

     label072:
        r119 = new java.lang.StringBuilder;

        specialinvoke r119.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PM.onNewUserCreated-");

        virtualinvoke r119.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r12 = virtualinvoke r119.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>($r12);

        $r13 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.PackageManagerService mPm>;

        virtualinvoke $r13.<com.android.server.pm.PackageManagerService: void onNewUserCreated(int)>(i2);

        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

     label073:
        if z0 == 0 goto label080;

     label074:
        r120 = new java.lang.StringBuilder;

        specialinvoke r120.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("starting pre-created user ");

        $r15 = virtualinvoke r5.<android.content.pm.UserInfo: java.lang.String toFullString()>();

        virtualinvoke r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke r120.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("UserManagerService", $r17);

        r121 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

     label075:
        interfaceinvoke r121.<android.app.IActivityManager: boolean startUserInBackground(int)>(i2);

     label076:
        goto label079;

     label077:
        $r73 := @caughtexception;

     label078:
        r123 = new java.lang.StringBuilder;

        specialinvoke r123.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not start pre-created user ");

        virtualinvoke r123.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r76 = virtualinvoke r123.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("UserManagerService", $r76, $r73);

     label079:
        goto label081;

     label080:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void dispatchUserAdded(android.content.pm.UserInfo)>(r5);

     label081:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return r5;

     label082:
        $r63 := @caughtexception;

     label083:
        exitmonitor r118;

     label084:
        throw $r63;

     label085:
        $r80 := @caughtexception;

     label086:
        exitmonitor r114;

     label087:
        throw $r80;

     label088:
        $r79 := @caughtexception;

        r126 = $r79;

        goto label103;

     label089:
        $r65 := @caughtexception;

        r98 = $r65;

        r93 = r104;

        goto label097;

     label090:
        $r67 := @caughtexception;

        r103 = $r67;

        goto label092;

     label091:
        $r70 := @caughtexception;

        r103 = $r70;

     label092:
        r127 = r93;

     label093:
        exitmonitor r4;

     label094:
        throw r103;

     label095:
        $r64 := @caughtexception;

        r103 = $r64;

        goto label092;

     label096:
        $r69 := @caughtexception;

        r98 = $r69;

     label097:
        r127 = r93;

     label098:
        exitmonitor r93;

     label099:
        throw r98;

     label100:
        $r78 := @caughtexception;

        r126 = $r78;

        goto label103;

     label101:
        $r72 := @caughtexception;

        r98 = $r72;

        r93 = r127;

        goto label097;

     label102:
        $r81 := @caughtexception;

        r126 = $r81;

     label103:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r126;

     label104:
        $r82 := @caughtexception;

        r128 = $r82;

     label105:
        exitmonitor r89;

     label106:
        throw r128;

     label107:
        $r62 := @caughtexception;

        r128 = $r62;

        goto label105;

        catch java.lang.Throwable from label004 to label005 with label104;
        catch java.lang.Throwable from label006 to label007 with label104;
        catch java.lang.Throwable from label010 to label011 with label102;
        catch java.lang.Throwable from label012 to label013 with label020;
        catch java.lang.Throwable from label013 to label014 with label017;
        catch java.lang.Throwable from label015 to label016 with label020;
        catch java.lang.Throwable from label018 to label019 with label017;
        catch java.lang.Throwable from label019 to label020 with label020;
        catch java.lang.Throwable from label023 to label024 with label020;
        catch java.lang.Throwable from label025 to label026 with label020;
        catch java.lang.Throwable from label027 to label028 with label020;
        catch java.lang.Throwable from label029 to label030 with label020;
        catch java.lang.Throwable from label031 to label032 with label020;
        catch java.lang.Throwable from label033 to label034 with label020;
        catch java.lang.Throwable from label035 to label036 with label020;
        catch java.lang.Throwable from label036 to label037 with label020;
        catch java.lang.Throwable from label037 to label038 with label096;
        catch java.lang.Throwable from label039 to label040 with label041;
        catch java.lang.Throwable from label043 to label044 with label091;
        catch java.lang.Throwable from label045 to label046 with label090;
        catch java.lang.Throwable from label047 to label048 with label090;
        catch java.lang.Throwable from label048 to label049 with label090;
        catch java.lang.Throwable from label049 to label050 with label089;
        catch java.lang.Throwable from label051 to label052 with label089;
        catch java.lang.Throwable from label052 to label053 with label089;
        catch java.lang.Throwable from label055 to label056 with label089;
        catch java.lang.Throwable from label056 to label057 with label089;
        catch java.lang.Throwable from label057 to label058 with label089;
        catch java.lang.Throwable from label058 to label059 with label088;
        catch java.lang.Throwable from label059 to label060 with label100;
        catch java.lang.Throwable from label060 to label061 with label085;
        catch java.lang.Throwable from label061 to label062 with label100;
        catch java.lang.Throwable from label063 to label064 with label100;
        catch java.lang.Throwable from label064 to label065 with label066;
        catch java.lang.Throwable from label067 to label068 with label066;
        catch java.lang.Throwable from label068 to label069 with label100;
        catch java.lang.Throwable from label069 to label070 with label100;
        catch java.lang.Throwable from label070 to label071 with label100;
        catch java.lang.Throwable from label071 to label072 with label082;
        catch java.lang.Throwable from label072 to label073 with label100;
        catch java.lang.Throwable from label074 to label075 with label100;
        catch android.os.RemoteException from label075 to label076 with label077;
        catch java.lang.Throwable from label075 to label076 with label100;
        catch java.lang.Throwable from label078 to label079 with label100;
        catch java.lang.Throwable from label080 to label081 with label100;
        catch java.lang.Throwable from label083 to label084 with label082;
        catch java.lang.Throwable from label084 to label085 with label100;
        catch java.lang.Throwable from label086 to label087 with label085;
        catch java.lang.Throwable from label087 to label088 with label100;
        catch java.lang.Throwable from label093 to label094 with label095;
        catch java.lang.Throwable from label094 to label095 with label101;
        catch java.lang.Throwable from label098 to label099 with label101;
        catch java.lang.Throwable from label099 to label100 with label100;
        catch java.lang.Throwable from label105 to label106 with label107;
    }

    private static void debug(java.lang.String)
    {
        java.lang.String r0, $r5;
        java.lang.StringBuilder $r2;

        r0 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("UserManagerService", $r5);

        return;
    }

    private void dispatchUserAdded(android.content.pm.UserInfo)
    {
        com.android.server.pm.UserManagerService r0;
        android.content.pm.UserInfo r1;
        android.content.Context r2, $r8, $r9, $r12;
        android.content.Intent $r3;
        int $i0, $i1;
        android.os.UserHandle $r5, $r7;
        boolean $z0, $z1, $z3;
        android.content.ContentResolver $r10, $r13;
        java.lang.String $r11, r15;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: android.content.pm.UserInfo;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_ADDED");

        $i0 = r1.<android.content.pm.UserInfo: int id>;

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", $i0);

        $i1 = r1.<android.content.pm.UserInfo: int id>;

        $r5 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>($i1);

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.USER", $r5);

        $r8 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r7 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r8.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>($r3, $r7, "android.permission.MANAGE_USERS");

        r2 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $z0 = virtualinvoke r1.<android.content.pm.UserInfo: boolean isGuest()>();

        if $z0 == 0 goto label1;

        r15 = "users_guest_created";

        goto label3;

     label1:
        $z1 = virtualinvoke r1.<android.content.pm.UserInfo: boolean isDemo()>();

        if $z1 == 0 goto label2;

        r15 = "users_demo_created";

        goto label3;

     label2:
        r15 = "users_user_created";

     label3:
        staticinvoke <com.android.internal.logging.MetricsLogger: void count(android.content.Context,java.lang.String,int)>(r2, r15, 1);

        $z3 = virtualinvoke r1.<android.content.pm.UserInfo: boolean isProfile()>();

        if $z3 != 0 goto label4;

        $r9 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r10 = virtualinvoke $r9.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r11 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r10, "user_switcher_enabled");

        if $r11 != null goto label4;

        $r12 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r13 = virtualinvoke $r12.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$Global: boolean putInt(android.content.ContentResolver,java.lang.String,int)>($r13, "user_switcher_enabled", 1);

     label4:
        return;
    }

    private static void dumpTimeAgo(java.io.PrintWriter, java.lang.StringBuilder, long, long)
    {
        java.io.PrintWriter r0;
        java.lang.StringBuilder r1;
        long l0, l1, $l3;
        byte $b2;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.StringBuilder;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        $b2 = l1 cmp 0L;

        if $b2 != 0 goto label1;

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("<unknown>");

        goto label2;

     label1:
        virtualinvoke r1.<java.lang.StringBuilder: void setLength(int)>(0);

        $l3 = l0 - l1;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>($l3, r1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ago");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.Object)>(r1);

     label2:
        return;
    }

    private void enforceUserRestriction(java.lang.String, int, java.lang.String) throws android.os.UserManager$CheckedUserOperationException
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        boolean $z0;
        java.lang.StringBuilder $r3, $r8;
        android.os.UserManager$CheckedUserOperationException $r7;
        java.lang.String r11, r12, r13, r14;

        r0 := @this: com.android.server.pm.UserManagerService;

        r11 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r12 := @parameter2: java.lang.String;

        $z0 = virtualinvoke r0.<com.android.server.pm.UserManagerService: boolean hasUserRestriction(java.lang.String,int)>(r11, i0);

        if $z0 == 0 goto label3;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        if r12 == null goto label1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        r13 = "";

     label2:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is enabled.");

        r14 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserManagerService", r14);

        $r7 = new android.os.UserManager$CheckedUserOperationException;

        specialinvoke $r7.<android.os.UserManager$CheckedUserOperationException: void <init>(java.lang.String,int)>(r14, 1);

        throw $r7;

     label3:
        return;
    }

    private void ensureCanModifyQuietMode(java.lang.String, int, int, boolean, boolean)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1;
        int i0, i1, $i2;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        android.content.pm.ShortcutServiceInternal r2;
        java.lang.SecurityException $r3, $r4, $r5, $r7;
        java.lang.Object $r6;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void verifyCallingPackage(java.lang.String,int)>(r1, i0);

        $z2 = staticinvoke <com.android.server.pm.UserManagerService: boolean hasManageUsersPermission()>();

        if $z2 == 0 goto label1;

        return;

     label1:
        if z0 != 0 goto label6;

        if z1 != 0 goto label5;

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $z3 = specialinvoke r0.<com.android.server.pm.UserManagerService: boolean isSameProfileGroupNoChecks(int,int)>($i2, i1);

        if $z3 == 0 goto label4;

        $z4 = staticinvoke <com.android.server.pm.UserManagerService: boolean hasPermissionGranted(java.lang.String,int)>("android.permission.MODIFY_QUIET_MODE", i0);

        if $z4 == 0 goto label2;

        return;

     label2:
        $r6 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/content/pm/ShortcutServiceInternal;");

        r2 = (android.content.pm.ShortcutServiceInternal) $r6;

        if r2 == null goto label3;

        $z5 = virtualinvoke r2.<android.content.pm.ShortcutServiceInternal: boolean isForegroundDefaultLauncher(java.lang.String,int)>(r1, i0);

        if $z5 == 0 goto label3;

        return;

     label3:
        $r7 = new java.lang.SecurityException;

        specialinvoke $r7.<java.lang.SecurityException: void <init>(java.lang.String)>("Can\'t modify quiet mode, caller is neither foreground default launcher nor has MANAGE_USERS/MODIFY_QUIET_MODE permission");

        throw $r7;

     label4:
        $r5 = new java.lang.SecurityException;

        specialinvoke $r5.<java.lang.SecurityException: void <init>(java.lang.String)>("MANAGE_USERS permission is required to modify quiet mode for a different profile group.");

        throw $r5;

     label5:
        $r4 = new java.lang.SecurityException;

        specialinvoke $r4.<java.lang.SecurityException: void <init>(java.lang.String)>("MANAGE_USERS permission is required to disable quiet mode without credentials.");

        throw $r4;

     label6:
        $r3 = new java.lang.SecurityException;

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>("MANAGE_USERS permission is required to start intent after disabling quiet mode.");

        throw $r3;
    }

    private void fallbackToSingleUserLP()
    {
        com.android.server.pm.UserManagerService r0;
        int i0, $i1, $i2, i4;
        java.lang.String r2, r13;
        boolean $z0, $z1, $z3;
        android.content.pm.UserInfo $r3;
        android.util.ArrayMap $r4;
        java.lang.Object $r5, r17;
        com.android.server.pm.UserTypeDetails $r6;
        android.os.Bundle $r7;
        android.content.Context $r8;
        android.content.res.Resources $r9;
        com.android.server.pm.RestrictionsSet $r10;
        android.content.res.Resources$NotFoundException $r11;
        java.lang.Throwable $r12;
        com.android.server.pm.UserManagerService$UserData r14;
        java.lang.String[] r15;

        r0 := @this: com.android.server.pm.UserManagerService;

        $z0 = staticinvoke <android.os.UserManager: boolean isHeadlessSystemUserMode()>();

        if $z0 == 0 goto label01;

        r13 = "android.os.usertype.system.HEADLESS";

        goto label02;

     label01:
        r13 = "android.os.usertype.full.SYSTEM";

     label02:
        $r3 = new android.content.pm.UserInfo;

        $r4 = r0.<com.android.server.pm.UserManagerService: android.util.ArrayMap mUserTypes>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r13);

        $r6 = (com.android.server.pm.UserTypeDetails) $r5;

        $i1 = virtualinvoke $r6.<com.android.server.pm.UserTypeDetails: int getDefaultUserInfoFlags()>();

        $i2 = 2067 | $i1;

        specialinvoke $r3.<android.content.pm.UserInfo: void <init>(int,java.lang.String,java.lang.String,int,java.lang.String)>(0, null, null, $i2, r13);

        r14 = virtualinvoke r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$UserData putUserInfo(android.content.pm.UserInfo)>($r3);

        r0.<com.android.server.pm.UserManagerService: int mNextSerialNumber> = 10;

        r0.<com.android.server.pm.UserManagerService: int mUserVersion> = 9;

        $r7 = new android.os.Bundle;

        specialinvoke $r7.<android.os.Bundle: void <init>()>();

     label03:
        $r8 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: android.content.res.Resources getResources()>();

        r15 = virtualinvoke $r9.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(17236005);

        i0 = lengthof r15;

     label04:
        i4 = 0;

     label05:
        if i4 >= i0 goto label08;

        r2 = r15[i4];

     label06:
        $z3 = staticinvoke <com.android.server.pm.UserRestrictionsUtils: boolean isValidRestriction(java.lang.String)>(r2);

        if $z3 == 0 goto label07;

        virtualinvoke $r7.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>(r2, 1);

     label07:
        i4 = i4 + 1;

        goto label05;

     label08:
        goto label10;

     label09:
        $r11 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("UserManagerService", "Couldn\'t find resource: config_defaultFirstUserRestrictions", $r11);

     label10:
        $z1 = virtualinvoke $r7.<android.os.Bundle: boolean isEmpty()>();

        if $z1 != 0 goto label16;

        r17 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mRestrictionsLock>;

        entermonitor r17;

     label11:
        $r10 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet mBaseUserRestrictions>;

        virtualinvoke $r10.<com.android.server.pm.RestrictionsSet: boolean updateRestrictions(int,android.os.Bundle)>(0, $r7);

        exitmonitor r17;

     label12:
        goto label16;

     label13:
        $r12 := @caughtexception;

     label14:
        exitmonitor r17;

     label15:
        throw $r12;

     label16:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void updateUserIds()>();

        specialinvoke r0.<com.android.server.pm.UserManagerService: void initDefaultGuestRestrictions()>();

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLP(com.android.server.pm.UserManagerService$UserData)>(r14);

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserListLP()>();

        return;

        catch android.content.res.Resources$NotFoundException from label03 to label04 with label09;
        catch android.content.res.Resources$NotFoundException from label06 to label07 with label09;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    private int getAliveUsersExcludingGuestsCountLU()
    {
        com.android.server.pm.UserManagerService r0;
        int i0, $i1, i2, i3, i4;
        android.content.pm.UserInfo r1;
        android.util.SparseArray $r2, $r3;
        java.lang.Object $r4;
        com.android.server.pm.UserManagerService$UserData $r5;
        android.util.SparseBooleanArray $r6;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.server.pm.UserManagerService;

        i2 = 0;

        $r2 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        i0 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        $r3 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        $r5 = (com.android.server.pm.UserManagerService$UserData) $r4;

        r1 = $r5.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        i4 = i2;

        $r6 = r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        $i1 = r1.<android.content.pm.UserInfo: int id>;

        $z0 = virtualinvoke $r6.<android.util.SparseBooleanArray: boolean get(int)>($i1);

        if $z0 != 0 goto label2;

        i4 = i2;

        $z1 = virtualinvoke r1.<android.content.pm.UserInfo: boolean isGuest()>();

        if $z1 != 0 goto label2;

        i4 = i2;

        $z2 = r1.<android.content.pm.UserInfo: boolean preCreated>;

        if $z2 != 0 goto label2;

        i4 = i2 + 1;

     label2:
        i3 = i3 + 1;

        i2 = i4;

        goto label1;

     label3:
        return i2;
    }

    private long getCreationTime()
    {
        com.android.server.pm.UserManagerService r0;
        byte $b0;
        long l1;

        r0 := @this: com.android.server.pm.UserManagerService;

        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $b0 = l1 cmp 946080000000L;

        if $b0 <= 0 goto label1;

        goto label2;

     label1:
        l1 = 0L;

     label2:
        return l1;
    }

    private android.content.pm.CrossProfileAppsInternal getCrossProfileAppsInternal()
    {
        com.android.server.pm.UserManagerService r0;
        android.content.pm.CrossProfileAppsInternal $r1, $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: com.android.server.pm.UserManagerService;

        $r1 = r0.<com.android.server.pm.UserManagerService: android.content.pm.CrossProfileAppsInternal mCrossProfileAppsInternal>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/content/pm/CrossProfileAppsInternal;");

        $r4 = (android.content.pm.CrossProfileAppsInternal) $r3;

        r0.<com.android.server.pm.UserManagerService: android.content.pm.CrossProfileAppsInternal mCrossProfileAppsInternal> = $r4;

     label1:
        $r2 = r0.<com.android.server.pm.UserManagerService: android.content.pm.CrossProfileAppsInternal mCrossProfileAppsInternal>;

        return $r2;
    }

    private com.android.server.pm.RestrictionsSet getDevicePolicyLocalRestrictionsForTargetUserLR(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        com.android.server.pm.RestrictionsSet r1, $r4, r6;
        android.util.SparseArray $r2, $r5;
        java.lang.Object $r3;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mDevicePolicyLocalUserRestrictions>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.pm.RestrictionsSet) $r3;

        r6 = r1;

        if r1 != null goto label1;

        $r4 = new com.android.server.pm.RestrictionsSet;

        specialinvoke $r4.<com.android.server.pm.RestrictionsSet: void <init>()>();

        r6 = $r4;

        $r5 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mDevicePolicyLocalUserRestrictions>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r4);

     label1:
        return r6;
    }

    private android.app.admin.DevicePolicyManagerInternal getDevicePolicyManagerInternal()
    {
        com.android.server.pm.UserManagerService r0;
        android.app.admin.DevicePolicyManagerInternal $r1, $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: com.android.server.pm.UserManagerService;

        $r1 = r0.<com.android.server.pm.UserManagerService: android.app.admin.DevicePolicyManagerInternal mDevicePolicyManagerInternal>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/app/admin/DevicePolicyManagerInternal;");

        $r4 = (android.app.admin.DevicePolicyManagerInternal) $r3;

        r0.<com.android.server.pm.UserManagerService: android.app.admin.DevicePolicyManagerInternal mDevicePolicyManagerInternal> = $r4;

     label1:
        $r2 = r0.<com.android.server.pm.UserManagerService: android.app.admin.DevicePolicyManagerInternal mDevicePolicyManagerInternal>;

        return $r2;
    }

    private android.os.Bundle getEffectiveUserRestrictions(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        java.lang.Object r1;
        android.os.Bundle r2, r6;
        com.android.server.pm.RestrictionsSet $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mRestrictionsLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet mCachedEffectiveUserRestrictions>;

        r2 = virtualinvoke $r3.<com.android.server.pm.RestrictionsSet: android.os.Bundle getRestrictions(int)>(i0);

     label2:
        r6 = r2;

        if r2 != null goto label4;

     label3:
        r6 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.os.Bundle computeEffectiveUserRestrictionsLR(int)>(i0);

        $r4 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet mCachedEffectiveUserRestrictions>;

        virtualinvoke $r4.<com.android.server.pm.RestrictionsSet: boolean updateRestrictions(int,android.os.Bundle)>(i0, r6);

     label4:
        exitmonitor r1;

     label5:
        return r6;

     label6:
        $r5 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public static com.android.server.pm.UserManagerService getInstance()
    {
        java.lang.Throwable $r0;
        com.android.server.pm.UserManagerService r1;

        entermonitor class "Lcom/android/server/pm/UserManagerService;";

     label1:
        r1 = <com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService sInstance>;

        exitmonitor class "Lcom/android/server/pm/UserManagerService;";

     label2:
        return r1;

     label3:
        $r0 := @caughtexception;

     label4:
        exitmonitor class "Lcom/android/server/pm/UserManagerService;";

     label5:
        throw $r0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private static int getMaxUsersOfTypePerParent(com.android.server.pm.UserTypeDetails)
    {
        com.android.server.pm.UserTypeDetails r0;
        int i0, $i1;
        boolean $z0, $z1;

        r0 := @parameter0: com.android.server.pm.UserTypeDetails;

        i0 = virtualinvoke r0.<com.android.server.pm.UserTypeDetails: int getMaxAllowedPerParent()>();

        $z0 = <android.os.Build: boolean IS_DEBUGGABLE>;

        if $z0 != 0 goto label1;

        return i0;

     label1:
        $z1 = virtualinvoke r0.<com.android.server.pm.UserTypeDetails: boolean isManagedProfile()>();

        if $z1 == 0 goto label2;

        $i1 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("persist.sys.max_profiles", i0);

        return $i1;

     label2:
        return i0;
    }

    private int getNumberOfUsersOfType(java.lang.String)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.Object r1, $r5;
        int i0, $i1, i2, i3, i4;
        android.content.pm.UserInfo r2;
        android.util.SparseArray $r3, $r4;
        com.android.server.pm.UserManagerService$UserData $r6;
        java.lang.String $r7, r10;
        boolean $z0, $z1, $z2, $z3;
        android.util.SparseBooleanArray $r8;
        java.lang.Throwable $r9;

        r0 := @this: com.android.server.pm.UserManagerService;

        r10 := @parameter0: java.lang.String;

        i2 = 0;

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        i0 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

     label02:
        i3 = 0;

     label03:
        if i3 >= i0 goto label15;

     label04:
        $r4 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        $r6 = (com.android.server.pm.UserManagerService$UserData) $r5;

        r2 = $r6.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

     label05:
        i4 = i2;

     label06:
        $r7 = r2.<android.content.pm.UserInfo: java.lang.String userType>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z0 == 0 goto label14;

     label07:
        i4 = i2;

     label08:
        $z1 = r2.<android.content.pm.UserInfo: boolean guestToRemove>;

        if $z1 != 0 goto label14;

     label09:
        i4 = i2;

     label10:
        $r8 = r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        $i1 = r2.<android.content.pm.UserInfo: int id>;

        $z2 = virtualinvoke $r8.<android.util.SparseBooleanArray: boolean get(int)>($i1);

        if $z2 != 0 goto label14;

     label11:
        i4 = i2;

     label12:
        $z3 = r2.<android.content.pm.UserInfo: boolean preCreated>;

        if $z3 != 0 goto label14;

     label13:
        i4 = i2 + 1;

     label14:
        i3 = i3 + 1;

        i2 = i4;

        goto label03;

     label15:
        exitmonitor r1;

     label16:
        return i2;

     label17:
        $r9 := @caughtexception;

     label18:
        exitmonitor r1;

     label19:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    private java.lang.String getOwnerName()
    {
        com.android.server.pm.UserManagerService r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        java.lang.String $r3;

        r0 := @this: com.android.server.pm.UserManagerService;

        $r1 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String getString(int)>(17040733);

        return $r3;
    }

    private android.content.pm.PackageManagerInternal getPackageManagerInternal()
    {
        com.android.server.pm.UserManagerService r0;
        android.content.pm.PackageManagerInternal $r1, $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: com.android.server.pm.UserManagerService;

        $r1 = r0.<com.android.server.pm.UserManagerService: android.content.pm.PackageManagerInternal mPmInternal>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/content/pm/PackageManagerInternal;");

        $r4 = (android.content.pm.PackageManagerInternal) $r3;

        r0.<com.android.server.pm.UserManagerService: android.content.pm.PackageManagerInternal mPmInternal> = $r4;

     label1:
        $r2 = r0.<com.android.server.pm.UserManagerService: android.content.pm.PackageManagerInternal mPmInternal>;

        return $r2;
    }

    private com.android.server.pm.UserManagerService$UserData getPreCreatedUserLU(java.lang.String)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1, $r9, $r16, $r18;
        int i0, i2;
        com.android.server.pm.UserManagerService$UserData r2;
        android.util.SparseArray $r4, $r5;
        java.lang.Object $r6;
        android.content.pm.UserInfo $r7, $r8, $r10, $r15;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r11;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        i0 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        i2 = 0;

     label1:
        if i2 >= i0 goto label4;

        $r5 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        r2 = (com.android.server.pm.UserManagerService$UserData) $r6;

        $r7 = r2.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $z0 = $r7.<android.content.pm.UserInfo: boolean preCreated>;

        if $z0 == 0 goto label3;

        $r8 = r2.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $r9 = $r8.<android.content.pm.UserInfo: java.lang.String userType>;

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label3;

        $r10 = r2.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $z2 = virtualinvoke $r10.<android.content.pm.UserInfo: boolean isInitialized()>();

        if $z2 != 0 goto label2;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("found pre-created user of type ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", but it\'s not initialized yet: ");

        $r15 = r2.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $r16 = virtualinvoke $r15.<android.content.pm.UserInfo: java.lang.String toFullString()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserManagerService", $r18);

        goto label3;

     label2:
        return r2;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return null;
    }

    private android.util.IntArray getProfileIdsLU(int, java.lang.String, boolean)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1, $r12;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        android.content.pm.UserInfo r2, r4;
        int i0, $i1, $i2, $i3, i4, i5;
        android.util.IntArray $r5;
        android.util.SparseArray $r6, $r7, $r8;
        java.lang.Object $r9;
        com.android.server.pm.UserManagerService$UserData $r10;
        android.util.SparseBooleanArray $r11;

        r0 := @this: com.android.server.pm.UserManagerService;

        i4 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r2 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLU(int)>(i4);

        $r5 = new android.util.IntArray;

        $r6 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i1 = virtualinvoke $r6.<android.util.SparseArray: int size()>();

        specialinvoke $r5.<android.util.IntArray: void <init>(int)>($i1);

        if r2 != null goto label1;

        return $r5;

     label1:
        $r7 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        i0 = virtualinvoke $r7.<android.util.SparseArray: int size()>();

        i5 = 0;

     label2:
        if i5 >= i0 goto label9;

        $r8 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r9 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object valueAt(int)>(i5);

        $r10 = (com.android.server.pm.UserManagerService$UserData) $r9;

        r4 = $r10.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $z1 = staticinvoke <com.android.server.pm.UserManagerService: boolean isProfileOf(android.content.pm.UserInfo,android.content.pm.UserInfo)>(r2, r4);

        if $z1 != 0 goto label3;

        goto label8;

     label3:
        if z0 == 0 goto label4;

        $z5 = virtualinvoke r4.<android.content.pm.UserInfo: boolean isEnabled()>();

        if $z5 != 0 goto label4;

        goto label8;

     label4:
        $r11 = r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        $i2 = r4.<android.content.pm.UserInfo: int id>;

        $z2 = virtualinvoke $r11.<android.util.SparseBooleanArray: boolean get(int)>($i2);

        if $z2 == 0 goto label5;

        goto label8;

     label5:
        $z3 = r4.<android.content.pm.UserInfo: boolean partial>;

        if $z3 == 0 goto label6;

        goto label8;

     label6:
        if r1 == null goto label7;

        $r12 = r4.<android.content.pm.UserInfo: java.lang.String userType>;

        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z4 != 0 goto label7;

        goto label8;

     label7:
        $i3 = r4.<android.content.pm.UserInfo: int id>;

        virtualinvoke $r5.<android.util.IntArray: void add(int)>($i3);

     label8:
        i5 = i5 + 1;

        goto label2;

     label9:
        return $r5;
    }

    private android.content.pm.UserInfo getProfileParentLU(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, i1;
        android.content.pm.UserInfo r1, $r2;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        r1 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLU(int)>(i0);

        if r1 != null goto label1;

        return null;

     label1:
        i1 = r1.<android.content.pm.UserInfo: int profileGroupId>;

        if i1 == i0 goto label3;

        if i1 != -10000 goto label2;

        goto label3;

     label2:
        $r2 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLU(int)>(i1);

        return $r2;

     label3:
        return null;
    }

    private java.util.List getProfilesLU(int, java.lang.String, boolean, boolean)
    {
        com.android.server.pm.UserManagerService r0;
        boolean z0, z1;
        android.util.IntArray r1;
        int i0, $i1, $i2, i3, i4;
        java.util.ArrayList $r3;
        android.util.SparseArray $r4;
        java.lang.Object $r5;
        com.android.server.pm.UserManagerService$UserData $r6;
        android.content.pm.UserInfo $r7, r9, r10;
        java.lang.String r8;

        r0 := @this: com.android.server.pm.UserManagerService;

        i3 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r1 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.util.IntArray getProfileIdsLU(int,java.lang.String,boolean)>(i3, r8, z0);

        $r3 = new java.util.ArrayList;

        $i1 = virtualinvoke r1.<android.util.IntArray: int size()>();

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>($i1);

        i4 = 0;

     label1:
        $i2 = virtualinvoke r1.<android.util.IntArray: int size()>();

        if i4 >= $i2 goto label4;

        i0 = virtualinvoke r1.<android.util.IntArray: int get(int)>(i4);

        $r4 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r6 = (com.android.server.pm.UserManagerService$UserData) $r5;

        r9 = $r6.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        if z1 != 0 goto label2;

        $r7 = new android.content.pm.UserInfo;

        specialinvoke $r7.<android.content.pm.UserInfo: void <init>(android.content.pm.UserInfo)>(r9);

        r10 = $r7;

        $r7.<android.content.pm.UserInfo: java.lang.String name> = null;

        $r7.<android.content.pm.UserInfo: java.lang.String iconPath> = null;

        goto label3;

     label2:
        r10 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo userWithName(android.content.pm.UserInfo)>(r9);

     label3:
        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r10);

        i4 = i4 + 1;

        goto label1;

     label4:
        return $r3;
    }

    private int getUidForPackage(java.lang.String)
    {
        com.android.server.pm.UserManagerService r0;
        long l0;
        int i1;
        android.content.Context $r1;
        android.content.pm.PackageManager $r2;
        android.content.pm.ApplicationInfo $r3;
        android.content.pm.PackageManager$NameNotFoundException $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;

        r0 := @this: com.android.server.pm.UserManagerService;

        r6 := @parameter0: java.lang.String;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r6, 4194304);

        i1 = $r3.<android.content.pm.ApplicationInfo: int uid>;

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return i1;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r5;

     label4:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return -1;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private java.util.List getUpdatedTargetUserIdsFromLocalRestrictions(int, com.android.server.pm.RestrictionsSet)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, i1, $i2, $i3, $i4, i5, i6;
        com.android.server.pm.RestrictionsSet r1, r3;
        java.util.ArrayList $r4;
        android.util.SparseArray $r5, $r6, $r7;
        java.lang.Object $r8;
        boolean $z0, $z1;
        java.lang.Integer $r9, $r10;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.pm.RestrictionsSet;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        i5 = 0;

     label1:
        $i2 = virtualinvoke r1.<com.android.server.pm.RestrictionsSet: int size()>();

        if i5 >= $i2 goto label2;

        $i4 = virtualinvoke r1.<com.android.server.pm.RestrictionsSet: int keyAt(int)>(i5);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r10);

        i5 = i5 + 1;

        goto label1;

     label2:
        i6 = 0;

     label3:
        $r5 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mDevicePolicyLocalUserRestrictions>;

        $i3 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

        if i6 >= $i3 goto label5;

        $r6 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mDevicePolicyLocalUserRestrictions>;

        i1 = virtualinvoke $r6.<android.util.SparseArray: int keyAt(int)>(i6);

        $r7 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mDevicePolicyLocalUserRestrictions>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i6);

        r3 = (com.android.server.pm.RestrictionsSet) $r8;

        $z0 = virtualinvoke r1.<com.android.server.pm.RestrictionsSet: boolean containsKey(int)>(i1);

        if $z0 != 0 goto label4;

        $z1 = virtualinvoke r3.<com.android.server.pm.RestrictionsSet: boolean containsKey(int)>(i0);

        if $z1 == 0 goto label4;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r9);

     label4:
        i6 = i6 + 1;

        goto label3;

     label5:
        return $r4;
    }

    private com.android.server.pm.UserManagerService$UserData getUserDataLU(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        com.android.server.pm.UserManagerService$UserData r1;
        android.util.SparseArray $r2;
        java.lang.Object $r3;
        android.content.pm.UserInfo $r4;
        boolean $z0, $z1;
        android.util.SparseBooleanArray $r5;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.pm.UserManagerService$UserData) $r3;

        if r1 == null goto label1;

        $r4 = r1.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $z0 = $r4.<android.content.pm.UserInfo: boolean partial>;

        if $z0 == 0 goto label1;

        $r5 = r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        $z1 = virtualinvoke $r5.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        if $z1 != 0 goto label1;

        return null;

     label1:
        return r1;
    }

    private com.android.server.pm.UserManagerService$UserData getUserDataNoChecks(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        java.lang.Object r1, $r3;
        android.util.SparseArray $r2;
        java.lang.Throwable $r4;
        com.android.server.pm.UserManagerService$UserData r5;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (com.android.server.pm.UserManagerService$UserData) $r3;

        exitmonitor r1;

     label2:
        return r5;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private android.content.pm.UserInfo getUserInfoLU(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        com.android.server.pm.UserManagerService$UserData r1;
        android.util.SparseArray $r2;
        java.lang.Object $r3;
        android.content.pm.UserInfo $r4, r10;
        boolean $z0, $z1;
        android.util.SparseBooleanArray $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r9;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.pm.UserManagerService$UserData) $r3;

        r10 = null;

        if r1 == null goto label1;

        $r4 = r1.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $z0 = $r4.<android.content.pm.UserInfo: boolean partial>;

        if $z0 == 0 goto label1;

        $r5 = r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        $z1 = virtualinvoke $r5.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        if $z1 != 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getUserInfo: unknown user #");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserManagerService", $r9);

        return null;

     label1:
        if r1 == null goto label2;

        r10 = r1.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

     label2:
        return r10;
    }

    private android.content.pm.UserInfo getUserInfoNoChecks(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        java.lang.Object r1, $r3;
        android.util.SparseArray $r2;
        java.lang.Throwable $r4;
        com.android.server.pm.UserManagerService$UserData r5;
        android.content.pm.UserInfo r6;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (com.android.server.pm.UserManagerService$UserData) $r3;

     label02:
        if r5 == null goto label05;

     label03:
        r6 = r5.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

     label04:
        goto label06;

     label05:
        r6 = null;

     label06:
        exitmonitor r1;

     label07:
        return r6;

     label08:
        $r4 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private com.android.server.pm.UserTypeDetails getUserTypeDetails(android.content.pm.UserInfo)
    {
        com.android.server.pm.UserManagerService r0;
        android.util.ArrayMap $r1;
        java.lang.Object $r2;
        android.content.pm.UserInfo r3;
        com.android.server.pm.UserTypeDetails r4;
        java.lang.String r5;

        r0 := @this: com.android.server.pm.UserManagerService;

        r3 := @parameter0: android.content.pm.UserInfo;

        r4 = null;

        if r3 == null goto label1;

        r5 = r3.<android.content.pm.UserInfo: java.lang.String userType>;

        goto label2;

     label1:
        r5 = null;

     label2:
        if r5 == null goto label3;

        $r1 = r0.<com.android.server.pm.UserManagerService: android.util.ArrayMap mUserTypes>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r5);

        r4 = (com.android.server.pm.UserTypeDetails) $r2;

     label3:
        return r4;
    }

    private com.android.server.pm.UserTypeDetails getUserTypeDetailsNoChecks(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        android.util.ArrayMap $r1;
        java.lang.Object $r2;
        java.lang.String r3;
        com.android.server.pm.UserTypeDetails r4;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        r3 = specialinvoke r0.<com.android.server.pm.UserManagerService: java.lang.String getUserTypeNoChecks(int)>(i0);

        if r3 == null goto label1;

        $r1 = r0.<com.android.server.pm.UserManagerService: android.util.ArrayMap mUserTypes>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (com.android.server.pm.UserTypeDetails) $r2;

        goto label2;

     label1:
        r4 = null;

     label2:
        return r4;
    }

    private java.lang.String getUserTypeNoChecks(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        android.content.pm.UserInfo r3;
        java.lang.String r4;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r1;

     label01:
        r3 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLU(int)>(i0);

     label02:
        if r3 == null goto label05;

     label03:
        r4 = r3.<android.content.pm.UserInfo: java.lang.String userType>;

     label04:
        goto label06;

     label05:
        r4 = null;

     label06:
        exitmonitor r1;

     label07:
        return r4;

     label08:
        $r2 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private java.util.List getUsersInternal(boolean, boolean, boolean)
    {
        com.android.server.pm.UserManagerService r0;
        boolean z0, z1, z2, $z4, $z5, $z6;
        java.lang.Object r1, $r6;
        java.util.ArrayList r2;
        int i0, $i1, $i2, i3;
        android.util.SparseArray $r3, $r4, $r5;
        com.android.server.pm.UserManagerService$UserData $r7;
        android.content.pm.UserInfo $r8, r11;
        android.util.SparseBooleanArray $r9;
        java.lang.Throwable $r10;

        r0 := @this: com.android.server.pm.UserManagerService;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r1;

     label01:
        r2 = new java.util.ArrayList;

        $r3 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i1 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        specialinvoke r2.<java.util.ArrayList: void <init>(int)>($i1);

        $r4 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        i0 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

     label02:
        i3 = 0;

     label03:
        if i3 >= i0 goto label14;

     label04:
        $r5 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        $r7 = (com.android.server.pm.UserManagerService$UserData) $r6;

        r11 = $r7.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

     label05:
        if z0 == 0 goto label07;

     label06:
        $z6 = r11.<android.content.pm.UserInfo: boolean partial>;

        if $z6 != 0 goto label13;

     label07:
        if z1 == 0 goto label09;

     label08:
        $r9 = r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        $i2 = r11.<android.content.pm.UserInfo: int id>;

        $z5 = virtualinvoke $r9.<android.util.SparseBooleanArray: boolean get(int)>($i2);

        if $z5 != 0 goto label13;

     label09:
        if z2 == 0 goto label12;

     label10:
        $z4 = r11.<android.content.pm.UserInfo: boolean preCreated>;

        if $z4 == 0 goto label12;

     label11:
        goto label13;

     label12:
        $r8 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo userWithName(android.content.pm.UserInfo)>(r11);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

     label13:
        i3 = i3 + 1;

        goto label03;

     label14:
        exitmonitor r1;

     label15:
        return r2;

     label16:
        $r10 := @caughtexception;

     label17:
        exitmonitor r1;

     label18:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label04 to label05 with label16;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    private static final boolean hasManageOrCreateUsersPermission()
    {
        boolean $z0;

        $z0 = staticinvoke <com.android.server.pm.UserManagerService: boolean hasManageUsersOrPermission(java.lang.String)>("android.permission.CREATE_USERS");

        return $z0;
    }

    private static final boolean hasManageUsersOrPermission(java.lang.String)
    {
        java.lang.String r0;
        int i0;
        boolean $z0, $z1, $z2, z3;

        r0 := @parameter0: java.lang.String;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $z0 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>(i0, 1000);

        if $z0 != 0 goto label2;

        if i0 == 0 goto label2;

        $z1 = staticinvoke <com.android.server.pm.UserManagerService: boolean hasPermissionGranted(java.lang.String,int)>("android.permission.MANAGE_USERS", i0);

        if $z1 != 0 goto label2;

        $z2 = staticinvoke <com.android.server.pm.UserManagerService: boolean hasPermissionGranted(java.lang.String,int)>(r0, i0);

        if $z2 == 0 goto label1;

        goto label2;

     label1:
        z3 = 0;

        goto label3;

     label2:
        z3 = 1;

     label3:
        return z3;
    }

    private static final boolean hasManageUsersPermission()
    {
        int i0;
        boolean $z0, $z1, z2;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $z0 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>(i0, 1000);

        if $z0 != 0 goto label2;

        if i0 == 0 goto label2;

        $z1 = staticinvoke <com.android.server.pm.UserManagerService: boolean hasPermissionGranted(java.lang.String,int)>("android.permission.MANAGE_USERS", i0);

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    private static boolean hasPermissionGranted(java.lang.String, int)
    {
        java.lang.String r0;
        int i0, $i1;
        boolean z0;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 = 1;

        $i1 = staticinvoke <android.app.ActivityManager: int checkComponentPermission(java.lang.String,int,int,boolean)>(r0, i0, -1, 1);

        if $i1 != 0 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void initDefaultGuestRestrictions()
    {
        com.android.server.pm.UserManagerService r0;
        android.os.Bundle r1, $r2, $r5;
        boolean $z0;
        android.util.ArrayMap $r3;
        java.lang.Object $r4;
        java.lang.Throwable $r6;
        com.android.server.pm.UserTypeDetails r7;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 = r0.<com.android.server.pm.UserManagerService: android.os.Bundle mGuestRestrictions>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.pm.UserManagerService: android.os.Bundle mGuestRestrictions>;

        $z0 = virtualinvoke $r2.<android.os.Bundle: boolean isEmpty()>();

        if $z0 == 0 goto label06;

        $r3 = r0.<com.android.server.pm.UserManagerService: android.util.ArrayMap mUserTypes>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>("android.os.usertype.full.GUEST");

        r7 = (com.android.server.pm.UserTypeDetails) $r4;

     label02:
        if r7 != null goto label05;

     label03:
        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("UserManagerService", "Can\'t set default guest restrictions: type doesn\'t exist.");

        exitmonitor r1;

     label04:
        return;

     label05:
        $r5 = r0.<com.android.server.pm.UserManagerService: android.os.Bundle mGuestRestrictions>;

        virtualinvoke r7.<com.android.server.pm.UserTypeDetails: void addDefaultRestrictionsTo(android.os.Bundle)>($r5);

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r6 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private void invalidateEffectiveUserRestrictionsLR(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        com.android.server.pm.RestrictionsSet $r1;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet mCachedEffectiveUserRestrictions>;

        virtualinvoke $r1.<com.android.server.pm.RestrictionsSet: boolean remove(int)>(i0);

        return;
    }

    private static boolean isAtMostOneFlag(int)
    {
        int i0, $i1, $i2;
        boolean z0;

        i0 := @parameter0: int;

        $i1 = i0 - 1;

        $i2 = $i1 & i0;

        if $i2 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private static boolean isProfileOf(android.content.pm.UserInfo, android.content.pm.UserInfo)
    {
        android.content.pm.UserInfo r0, r1;
        int $i0, $i1, $i2, $i3, $i4;
        boolean z0;

        r0 := @parameter0: android.content.pm.UserInfo;

        r1 := @parameter1: android.content.pm.UserInfo;

        $i1 = r0.<android.content.pm.UserInfo: int id>;

        $i0 = r1.<android.content.pm.UserInfo: int id>;

        if $i1 == $i0 goto label2;

        $i2 = r0.<android.content.pm.UserInfo: int profileGroupId>;

        if $i2 == -10000 goto label1;

        $i4 = r0.<android.content.pm.UserInfo: int profileGroupId>;

        $i3 = r1.<android.content.pm.UserInfo: int profileGroupId>;

        if $i4 != $i3 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    private boolean isSameProfileGroupNoChecks(int, int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.lang.Object r1;
        android.content.pm.UserInfo r2, r4;
        java.lang.Throwable $r3;
        boolean z0;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r1;

     label01:
        r2 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLU(int)>(i0);

     label02:
        z0 = 0;

        if r2 == null goto label15;

     label03:
        $i2 = r2.<android.content.pm.UserInfo: int profileGroupId>;

        if $i2 != -10000 goto label05;

     label04:
        goto label15;

     label05:
        r4 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLU(int)>(i1);

     label06:
        if r4 == null goto label13;

     label07:
        $i3 = r4.<android.content.pm.UserInfo: int profileGroupId>;

        if $i3 != -10000 goto label09;

     label08:
        goto label13;

     label09:
        $i5 = r2.<android.content.pm.UserInfo: int profileGroupId>;

        $i4 = r4.<android.content.pm.UserInfo: int profileGroupId>;

        if $i5 != $i4 goto label11;

     label10:
        z0 = 1;

     label11:
        exitmonitor r1;

     label12:
        return z0;

     label13:
        exitmonitor r1;

     label14:
        return 0;

     label15:
        exitmonitor r1;

     label16:
        return 0;

     label17:
        $r3 := @caughtexception;

     label18:
        exitmonitor r1;

     label19:
        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    private boolean isUserLimitReached()
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.Object r1;
        int i0, $i1;
        java.lang.Throwable $r3;
        boolean z0;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r1;

     label1:
        i0 = specialinvoke r0.<com.android.server.pm.UserManagerService: int getAliveUsersExcludingGuestsCountLU()>();

        exitmonitor r1;

     label2:
        $i1 = staticinvoke <android.os.UserManager: int getMaxSupportedUsers()>();

        if i0 < $i1 goto label3;

        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        return z0;

     label5:
        $r3 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    private static boolean isUserTypeEligibleForPreCreation(com.android.server.pm.UserTypeDetails)
    {
        com.android.server.pm.UserTypeDetails r0;
        boolean $z0, $z1, z2;
        java.lang.String $r1;

        r0 := @parameter0: com.android.server.pm.UserTypeDetails;

        z2 = 0;

        if r0 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r0.<com.android.server.pm.UserTypeDetails: boolean isProfile()>();

        if $z0 != 0 goto label2;

        $r1 = virtualinvoke r0.<com.android.server.pm.UserTypeDetails: java.lang.String getName()>();

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("android.os.usertype.full.RESTRICTED");

        if $z1 != 0 goto label2;

        z2 = 1;

        goto label2;

     label2:
        return z2;
    }

    static void lambda$addUserRestrictionsListener$0(android.os.IUserRestrictionsListener, int, android.os.Bundle, android.os.Bundle)
    {
        int i0;
        android.os.Bundle r0, r8;
        android.os.RemoteException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r6;
        android.os.IUserRestrictionsListener r7;

        r7 := @parameter0: android.os.IUserRestrictionsListener;

        i0 := @parameter1: int;

        r8 := @parameter2: android.os.Bundle;

        r0 := @parameter3: android.os.Bundle;

     label1:
        interfaceinvoke r7.<android.os.IUserRestrictionsListener: void onUserRestrictionsChanged(int,android.os.Bundle,android.os.Bundle)>(i0, r8, r0);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to invoke listener: ");

        $r4 = virtualinvoke $r1.<android.os.RemoteException: java.lang.String getMessage()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("IUserRestrictionsListener", $r6);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void logQuietModeEnabled(int, boolean, java.lang.String)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        boolean z0;
        java.lang.Object r1;
        com.android.server.pm.UserManagerService$UserData r2;
        long l1, $l2, $l4, $l5, l6;
        byte $b3;
        android.content.pm.UserInfo $r3;
        android.app.admin.DevicePolicyEventLogger $r4, $r6, $r7, $r8;
        java.lang.String[] $r5;
        java.lang.Throwable $r9;
        java.lang.String r10;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r10 := @parameter2: java.lang.String;

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r1;

     label1:
        r2 = specialinvoke r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$UserData getUserDataLU(int)>(i0);

        exitmonitor r1;

     label2:
        if r2 != null goto label3;

        return;

     label3:
        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = virtualinvoke r2.<com.android.server.pm.UserManagerService$UserData: long getLastRequestQuietModeEnabledMillis()>();

        $b3 = $l2 cmp 0L;

        if $b3 == 0 goto label4;

        $l5 = virtualinvoke r2.<com.android.server.pm.UserManagerService$UserData: long getLastRequestQuietModeEnabledMillis()>();

        l6 = l1 - $l5;

        goto label5;

     label4:
        $r3 = r2.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $l4 = $r3.<android.content.pm.UserInfo: long creationTime>;

        l6 = l1 - $l4;

     label5:
        $r4 = staticinvoke <android.app.admin.DevicePolicyEventLogger: android.app.admin.DevicePolicyEventLogger createEvent(int)>(55);

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = r10;

        $r6 = virtualinvoke $r4.<android.app.admin.DevicePolicyEventLogger: android.app.admin.DevicePolicyEventLogger setStrings(java.lang.String[])>($r5);

        $r7 = virtualinvoke $r6.<android.app.admin.DevicePolicyEventLogger: android.app.admin.DevicePolicyEventLogger setBoolean(boolean)>(z0);

        $r8 = virtualinvoke $r7.<android.app.admin.DevicePolicyEventLogger: android.app.admin.DevicePolicyEventLogger setTimePeriod(long)>(l6);

        virtualinvoke $r8.<android.app.admin.DevicePolicyEventLogger: void write()>();

        virtualinvoke r2.<com.android.server.pm.UserManagerService$UserData: void setLastRequestQuietModeEnabledMillis(long)>(l1);

        return;

     label6:
        $r9 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private long logUserCreateJourneyBegin(int, java.lang.String, int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, i1, $i3;
        java.lang.String r1;
        long l2;
        java.util.concurrent.ThreadLocalRandom $r2;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        $r2 = staticinvoke <java.util.concurrent.ThreadLocalRandom: java.util.concurrent.ThreadLocalRandom current()>();

        l2 = virtualinvoke $r2.<java.util.concurrent.ThreadLocalRandom: long nextLong(long,long)>(1L, 9223372036854775807L);

        $i3 = staticinvoke <android.os.UserManager: int getUserTypeForStatsd(java.lang.String)>(r1);

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,long,int,int,int,int,int)>(264, l2, 4, -1, i0, $i3, i1);

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,long,int,int,int)>(265, l2, i0, 3, 1);

        return l2;
    }

    private void logUserCreateJourneyFinish(long, int, boolean)
    {
        com.android.server.pm.UserManagerService r0;
        long l0;
        int i1;
        boolean z0;
        byte b2;

        r0 := @this: com.android.server.pm.UserManagerService;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label1;

        b2 = 2;

        goto label2;

     label1:
        b2 = 0;

     label2:
        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,long,int,int,int)>(265, l0, i1, 3, b2);

        return;
    }

    private static java.lang.String packageToRestrictionsFileName(java.lang.String)
    {
        java.lang.String r0, $r6;
        java.lang.StringBuilder $r2;

        r0 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("res_");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".xml");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    private void propagateUserRestrictionsLR(int, android.os.Bundle, android.os.Bundle)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        boolean $z0;
        android.os.Bundle $r1, $r2, r5, r6;
        com.android.server.pm.UserManagerService$3 $r3;
        android.os.Handler $r4;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        r5 := @parameter1: android.os.Bundle;

        r6 := @parameter2: android.os.Bundle;

        $z0 = staticinvoke <com.android.server.pm.UserRestrictionsUtils: boolean areEqual(android.os.Bundle,android.os.Bundle)>(r5, r6);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = new android.os.Bundle;

        specialinvoke $r1.<android.os.Bundle: void <init>(android.os.Bundle)>(r5);

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>(android.os.Bundle)>(r6);

        $r4 = r0.<com.android.server.pm.UserManagerService: android.os.Handler mHandler>;

        $r3 = new com.android.server.pm.UserManagerService$3;

        specialinvoke $r3.<com.android.server.pm.UserManagerService$3: void <init>(com.android.server.pm.UserManagerService,int,android.os.Bundle,android.os.Bundle)>(r0, i0, $r1, $r2);

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    static android.os.Bundle readApplicationRestrictionsLAr(android.util.AtomicFile)
    {
        org.xmlpull.v1.XmlPullParser r1;
        android.os.Bundle $r2;
        java.util.ArrayList $r3;
        java.io.File $r4, $r8, $r14;
        boolean $z0;
        java.nio.charset.Charset $r5;
        java.lang.String $r6, $r10, $r16;
        int $i0, $i1;
        java.lang.Throwable $r11, $r12;
        android.util.AtomicFile r17;
        java.io.FileInputStream r19, r20, r21;
        java.lang.StringBuilder r22, r25;

        r17 := @parameter0: android.util.AtomicFile;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = virtualinvoke r17.<android.util.AtomicFile: java.io.File getBaseFile()>();

        $z0 = virtualinvoke $r4.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label01;

        return $r2;

     label01:
        r19 = null;

        r20 = null;

     label02:
        r21 = virtualinvoke r17.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

     label03:
        r20 = r21;

        r19 = r21;

     label04:
        r1 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

     label05:
        r20 = r21;

        r19 = r21;

     label06:
        $r5 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r6 = virtualinvoke $r5.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r21, $r6);

     label07:
        r20 = r21;

        r19 = r21;

     label08:
        staticinvoke <com.android.internal.util.XmlUtils: void nextElement(org.xmlpull.v1.XmlPullParser)>(r1);

     label09:
        r20 = r21;

        r19 = r21;

     label10:
        $i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i0 == 2 goto label22;

     label11:
        r20 = r21;

        r19 = r21;

     label12:
        r22 = new java.lang.StringBuilder;

     label13:
        r20 = r21;

        r19 = r21;

     label14:
        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

     label15:
        r20 = r21;

        r19 = r21;

     label16:
        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to read restrictions file ");

     label17:
        r20 = r21;

        r19 = r21;

     label18:
        $r8 = virtualinvoke r17.<android.util.AtomicFile: java.io.File getBaseFile()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

     label19:
        r20 = r21;

        r19 = r21;

     label20:
        $r10 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", $r10);

     label21:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r21);

        return $r2;

     label22:
        r20 = r21;

        r19 = r21;

     label23:
        $i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i1 == 1 goto label27;

     label24:
        r20 = r21;

        r19 = r21;

     label25:
        staticinvoke <com.android.server.pm.UserManagerService: void readEntry(android.os.Bundle,java.util.ArrayList,org.xmlpull.v1.XmlPullParser)>($r2, $r3, r1);

     label26:
        goto label22;

     label27:
        r19 = r21;

     label28:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r19);

        goto label41;

     label29:
        $r11 := @caughtexception;

        goto label42;

     label30:
        $r12 := @caughtexception;

        r20 = r19;

     label31:
        r25 = new java.lang.StringBuilder;

     label32:
        r20 = r19;

     label33:
        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

     label34:
        r20 = r19;

     label35:
        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error parsing ");

     label36:
        r20 = r19;

     label37:
        $r14 = virtualinvoke r17.<android.util.AtomicFile: java.io.File getBaseFile()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

     label38:
        r20 = r19;

     label39:
        $r16 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("UserManagerService", $r16, $r12);

     label40:
        goto label28;

     label41:
        return $r2;

     label42:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r20);

        throw $r11;

        catch java.io.IOException from label02 to label03 with label30;
        catch org.xmlpull.v1.XmlPullParserException from label02 to label03 with label30;
        catch java.lang.Throwable from label02 to label03 with label29;
        catch java.io.IOException from label04 to label05 with label30;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label05 with label30;
        catch java.lang.Throwable from label04 to label05 with label29;
        catch java.io.IOException from label06 to label07 with label30;
        catch org.xmlpull.v1.XmlPullParserException from label06 to label07 with label30;
        catch java.lang.Throwable from label06 to label07 with label29;
        catch java.io.IOException from label08 to label09 with label30;
        catch org.xmlpull.v1.XmlPullParserException from label08 to label09 with label30;
        catch java.lang.Throwable from label08 to label09 with label29;
        catch java.io.IOException from label10 to label11 with label30;
        catch org.xmlpull.v1.XmlPullParserException from label10 to label11 with label30;
        catch java.lang.Throwable from label10 to label11 with label29;
        catch java.io.IOException from label12 to label13 with label30;
        catch org.xmlpull.v1.XmlPullParserException from label12 to label13 with label30;
        catch java.lang.Throwable from label12 to label13 with label29;
        catch java.io.IOException from label14 to label15 with label30;
        catch org.xmlpull.v1.XmlPullParserException from label14 to label15 with label30;
        catch java.lang.Throwable from label14 to label15 with label29;
        catch java.io.IOException from label16 to label17 with label30;
        catch org.xmlpull.v1.XmlPullParserException from label16 to label17 with label30;
        catch java.lang.Throwable from label16 to label17 with label29;
        catch java.io.IOException from label18 to label19 with label30;
        catch org.xmlpull.v1.XmlPullParserException from label18 to label19 with label30;
        catch java.lang.Throwable from label18 to label19 with label29;
        catch java.io.IOException from label20 to label21 with label30;
        catch org.xmlpull.v1.XmlPullParserException from label20 to label21 with label30;
        catch java.lang.Throwable from label20 to label21 with label29;
        catch java.io.IOException from label23 to label24 with label30;
        catch org.xmlpull.v1.XmlPullParserException from label23 to label24 with label30;
        catch java.lang.Throwable from label23 to label24 with label29;
        catch java.io.IOException from label25 to label26 with label30;
        catch org.xmlpull.v1.XmlPullParserException from label25 to label26 with label30;
        catch java.lang.Throwable from label25 to label26 with label29;
        catch java.lang.Throwable from label31 to label32 with label29;
        catch java.lang.Throwable from label33 to label34 with label29;
        catch java.lang.Throwable from label35 to label36 with label29;
        catch java.lang.Throwable from label37 to label38 with label29;
        catch java.lang.Throwable from label39 to label40 with label29;
    }

    private static android.os.Bundle readApplicationRestrictionsLAr(java.lang.String, int)
    {
        java.lang.String r0, $r4;
        int i0;
        android.util.AtomicFile $r1;
        java.io.File $r2, $r3;
        android.os.Bundle $r5;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = new android.util.AtomicFile;

        $r2 = new java.io.File;

        $r3 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>(i0);

        $r4 = staticinvoke <com.android.server.pm.UserManagerService: java.lang.String packageToRestrictionsFileName(java.lang.String)>(r0);

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r4);

        specialinvoke $r1.<android.util.AtomicFile: void <init>(java.io.File)>($r2);

        $r5 = staticinvoke <com.android.server.pm.UserManagerService: android.os.Bundle readApplicationRestrictionsLAr(android.util.AtomicFile)>($r1);

        return $r5;
    }

    private static android.os.Bundle readBundleEntry(org.xmlpull.v1.XmlPullParser, java.util.ArrayList) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.util.ArrayList r1;
        int i0;
        android.os.Bundle $r3;
        boolean $z0;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.util.ArrayList;

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $z0 = staticinvoke <com.android.internal.util.XmlUtils: boolean nextElementWithin(org.xmlpull.v1.XmlPullParser,int)>(r0, i0);

        if $z0 == 0 goto label2;

        staticinvoke <com.android.server.pm.UserManagerService: void readEntry(android.os.Bundle,java.util.ArrayList,org.xmlpull.v1.XmlPullParser)>($r3, r1, r0);

        goto label1;

     label2:
        return $r3;
    }

    private static void readEntry(android.os.Bundle, java.util.ArrayList, org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.os.Bundle r0, $r13, $r14;
        java.lang.String r1, r2, $r3, $r4, $r5, $r6, $r7, $r8, $r16, $r17, $r18, r21, r24;
        int i0, $i1, $i2, $i3, $i4, i5, i6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z8;
        java.util.ArrayList $r9, r19;
        android.os.Bundle[] $r10;
        java.lang.Object[] $r11;
        android.os.Parcelable[] $r12;
        org.xmlpull.v1.XmlPullParser r20;
        java.lang.String[] r22;

        r0 := @parameter0: android.os.Bundle;

        r19 := @parameter1: java.util.ArrayList;

        r20 := @parameter2: org.xmlpull.v1.XmlPullParser;

        $i1 = interfaceinvoke r20.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i1 != 2 goto label10;

        $r3 = interfaceinvoke r20.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("entry");

        if $z0 == 0 goto label10;

        r1 = interfaceinvoke r20.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "key");

        r21 = interfaceinvoke r20.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "type");

        r2 = interfaceinvoke r20.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "m");

        if r2 == null goto label03;

        virtualinvoke r19.<java.util.ArrayList: void clear()>();

        i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

     label01:
        if i5 <= 0 goto label02;

        i0 = interfaceinvoke r20.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i0 == 1 goto label02;

        if i0 != 2 goto label01;

        $r16 = interfaceinvoke r20.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z8 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>("value");

        if $z8 == 0 goto label01;

        $r17 = interfaceinvoke r20.<org.xmlpull.v1.XmlPullParser: java.lang.String nextText()>();

        $r18 = virtualinvoke $r17.<java.lang.String: java.lang.String trim()>();

        virtualinvoke r19.<java.util.ArrayList: boolean add(java.lang.Object)>($r18);

        i5 = i5 + -1;

        goto label01;

     label02:
        $i4 = virtualinvoke r19.<java.util.ArrayList: int size()>();

        r22 = newarray (java.lang.String)[$i4];

        virtualinvoke r19.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r22);

        virtualinvoke r0.<android.os.Bundle: void putStringArray(java.lang.String,java.lang.String[])>(r1, r22);

        goto label10;

     label03:
        $r4 = "B";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r21);

        if $z1 == 0 goto label04;

        $r14 = staticinvoke <com.android.server.pm.UserManagerService: android.os.Bundle readBundleEntry(org.xmlpull.v1.XmlPullParser,java.util.ArrayList)>(r20, r19);

        virtualinvoke r0.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>(r1, $r14);

        goto label10;

     label04:
        $r5 = "BA";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r21);

        if $z2 == 0 goto label07;

        i6 = interfaceinvoke r20.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

     label05:
        $z6 = staticinvoke <com.android.internal.util.XmlUtils: boolean nextElementWithin(org.xmlpull.v1.XmlPullParser,int)>(r20, i6);

        if $z6 == 0 goto label06;

        $r13 = staticinvoke <com.android.server.pm.UserManagerService: android.os.Bundle readBundleEntry(org.xmlpull.v1.XmlPullParser,java.util.ArrayList)>(r20, r19);

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

        goto label05;

     label06:
        $i3 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        $r10 = newarray (android.os.Bundle)[$i3];

        $r11 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r10);

        $r12 = (android.os.Parcelable[]) $r11;

        virtualinvoke r0.<android.os.Bundle: void putParcelableArray(java.lang.String,android.os.Parcelable[])>(r1, $r12);

        goto label10;

     label07:
        $r6 = interfaceinvoke r20.<org.xmlpull.v1.XmlPullParser: java.lang.String nextText()>();

        r24 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

        $r7 = "b";

        $z3 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r21);

        if $z3 == 0 goto label08;

        $z5 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r24);

        virtualinvoke r0.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>(r1, $z5);

        goto label10;

     label08:
        $r8 = "i";

        $z4 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r21);

        if $z4 == 0 goto label09;

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r24);

        virtualinvoke r0.<android.os.Bundle: void putInt(java.lang.String,int)>(r1, $i2);

        goto label10;

     label09:
        virtualinvoke r0.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>(r1, r24);

     label10:
        return;
    }

    private int readIntAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String, int)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1, r4;
        int i0, i1;
        java.lang.Throwable $r2;
        org.xmlpull.v1.XmlPullParser r3;

        r0 := @this: com.android.server.pm.UserManagerService;

        r3 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r4 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r1);

        if r4 != null goto label1;

        return i0;

     label1:
        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r4);

     label2:
        return i1;

     label3:
        $r2 := @caughtexception;

        return i0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private long readLongAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String, long)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1, r4;
        long l0, l1;
        java.lang.Throwable $r2;
        org.xmlpull.v1.XmlPullParser r3;

        r0 := @this: com.android.server.pm.UserManagerService;

        r3 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        r4 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r1);

        if r4 != null goto label1;

        return l0;

     label1:
        l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r4);

     label2:
        return l1;

     label3:
        $r2 := @caughtexception;

        return l0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private com.android.server.pm.UserManagerService$UserData readUserLP(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        android.util.AtomicFile r1;
        java.io.File r2, r3;
        java.lang.StringBuilder r4;
        java.lang.String $r5, $r6;
        java.lang.Throwable $r7, $r8, $r9;
        java.io.FileInputStream r10, r11, r12, r13;
        com.android.server.pm.UserManagerService$UserData r14;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        r10 = null;

        r11 = null;

        r12 = null;

     label01:
        r1 = new android.util.AtomicFile;

     label02:
        r10 = null;

        r11 = null;

        r12 = null;

     label03:
        r2 = new java.io.File;

     label04:
        r10 = null;

        r11 = null;

        r12 = null;

     label05:
        r3 = r0.<com.android.server.pm.UserManagerService: java.io.File mUsersDir>;

     label06:
        r10 = null;

        r11 = null;

        r12 = null;

     label07:
        r4 = new java.lang.StringBuilder;

     label08:
        r10 = null;

        r11 = null;

        r12 = null;

     label09:
        specialinvoke r4.<java.lang.StringBuilder: void <init>()>();

     label10:
        r10 = null;

        r11 = null;

        r12 = null;

     label11:
        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

     label12:
        r10 = null;

        r11 = null;

        r12 = null;

     label13:
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".xml");

     label14:
        r10 = null;

        r11 = null;

        r12 = null;

     label15:
        $r6 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<java.io.File: void <init>(java.io.File,java.lang.String)>(r3, $r6);

     label16:
        r10 = null;

        r11 = null;

        r12 = null;

     label17:
        specialinvoke r1.<android.util.AtomicFile: void <init>(java.io.File)>(r2);

     label18:
        r10 = null;

        r11 = null;

        r12 = null;

     label19:
        r13 = virtualinvoke r1.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

     label20:
        r10 = r13;

        r11 = r13;

        r12 = r13;

     label21:
        r14 = virtualinvoke r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$UserData readUserLP(int,java.io.InputStream)>(i0, r13);

     label22:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r13);

        return r14;

     label23:
        $r7 := @caughtexception;

        goto label30;

     label24:
        $r8 := @caughtexception;

        r10 = r11;

     label25:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", "Error reading user list");

     label26:
        r12 = r11;

        goto label29;

     label27:
        $r9 := @caughtexception;

        r10 = r12;

     label28:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", "Error reading user list");

     label29:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r12);

        return null;

     label30:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r10);

        throw $r7;

        catch java.io.IOException from label01 to label02 with label27;
        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label24;
        catch java.lang.Throwable from label01 to label02 with label23;
        catch java.io.IOException from label03 to label04 with label27;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label24;
        catch java.lang.Throwable from label03 to label04 with label23;
        catch java.io.IOException from label05 to label06 with label27;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label06 with label24;
        catch java.lang.Throwable from label05 to label06 with label23;
        catch java.io.IOException from label07 to label08 with label27;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label08 with label24;
        catch java.lang.Throwable from label07 to label08 with label23;
        catch java.io.IOException from label09 to label10 with label27;
        catch org.xmlpull.v1.XmlPullParserException from label09 to label10 with label24;
        catch java.lang.Throwable from label09 to label10 with label23;
        catch java.io.IOException from label11 to label12 with label27;
        catch org.xmlpull.v1.XmlPullParserException from label11 to label12 with label24;
        catch java.lang.Throwable from label11 to label12 with label23;
        catch java.io.IOException from label13 to label14 with label27;
        catch org.xmlpull.v1.XmlPullParserException from label13 to label14 with label24;
        catch java.lang.Throwable from label13 to label14 with label23;
        catch java.io.IOException from label15 to label16 with label27;
        catch org.xmlpull.v1.XmlPullParserException from label15 to label16 with label24;
        catch java.lang.Throwable from label15 to label16 with label23;
        catch java.io.IOException from label17 to label18 with label27;
        catch org.xmlpull.v1.XmlPullParserException from label17 to label18 with label24;
        catch java.lang.Throwable from label17 to label18 with label23;
        catch java.io.IOException from label19 to label20 with label27;
        catch org.xmlpull.v1.XmlPullParserException from label19 to label20 with label24;
        catch java.lang.Throwable from label19 to label20 with label23;
        catch java.io.IOException from label21 to label22 with label27;
        catch org.xmlpull.v1.XmlPullParserException from label21 to label22 with label24;
        catch java.lang.Throwable from label21 to label22 with label23;
        catch java.lang.Throwable from label25 to label26 with label23;
        catch java.lang.Throwable from label28 to label29 with label23;
    }

    private void readUserListLP()
    {
        com.android.server.pm.UserManagerService r0;
        org.xmlpull.v1.XmlPullParser r1;
        com.android.server.pm.UserManagerService$UserData r2;
        java.io.File $r3, $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        android.util.AtomicFile $r4;
        java.nio.charset.Charset $r6;
        java.lang.String $r7, $r8, $r9, $r11, r24, r25, r27, r33;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i11, i12, i13;
        android.os.Bundle $r10, r26, r30, r31;
        android.content.pm.UserInfo $r12, $r14, $r15;
        android.util.SparseArray $r13;
        java.lang.Throwable $r16, $r17, $r18, $r19;
        java.io.FileInputStream r20, r21, r23;
        java.lang.Object r28;

        r0 := @this: com.android.server.pm.UserManagerService;

        $r3 = r0.<com.android.server.pm.UserManagerService: java.io.File mUserListFile>;

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label01;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void fallbackToSingleUserLP()>();

        return;

     label01:
        r20 = null;

        r21 = null;

        $r4 = new android.util.AtomicFile;

        $r5 = r0.<com.android.server.pm.UserManagerService: java.io.File mUserListFile>;

        specialinvoke $r4.<android.util.AtomicFile: void <init>(java.io.File)>($r5);

     label02:
        r23 = virtualinvoke $r4.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

     label03:
        r21 = r23;

        r20 = r23;

     label04:
        r1 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

     label05:
        r21 = r23;

        r20 = r23;

     label06:
        $r6 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r7 = virtualinvoke $r6.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r23, $r7);

     label07:
        r21 = r23;

        r20 = r23;

     label08:
        i11 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

     label09:
        if i11 == 2 goto label10;

        if i11 == 1 goto label10;

        goto label07;

     label10:
        if i11 == 2 goto label15;

        r21 = r23;

        r20 = r23;

     label11:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", "Unable to read user list");

     label12:
        r21 = r23;

        r20 = r23;

     label13:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void fallbackToSingleUserLP()>();

     label14:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r23);

        return;

     label15:
        r21 = r23;

        r20 = r23;

     label16:
        r0.<com.android.server.pm.UserManagerService: int mNextSerialNumber> = -1;

     label17:
        r21 = r23;

        r20 = r23;

     label18:
        $r8 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("users");

        if $z1 == 0 goto label27;

     label19:
        r21 = r23;

        r20 = r23;

     label20:
        r24 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "nextSerialNumber");

     label21:
        if r24 == null goto label23;

        r21 = r23;

        r20 = r23;

     label22:
        $i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r24);

        r0.<com.android.server.pm.UserManagerService: int mNextSerialNumber> = $i9;

     label23:
        r21 = r23;

        r20 = r23;

     label24:
        r25 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "version");

     label25:
        if r25 == null goto label27;

        r21 = r23;

        r20 = r23;

     label26:
        $i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r25);

        r0.<com.android.server.pm.UserManagerService: int mUserVersion> = $i8;

     label27:
        r26 = null;

     label28:
        r21 = r23;

        r20 = r23;

     label29:
        i12 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

     label30:
        if i12 == 1 goto label81;

        if i12 != 2 goto label28;

        r21 = r23;

        r20 = r23;

     label31:
        r27 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

     label32:
        r21 = r23;

        r20 = r23;

     label33:
        $z2 = virtualinvoke r27.<java.lang.String: boolean equals(java.lang.Object)>("user");

        if $z2 == 0 goto label49;

     label34:
        r21 = r23;

        r20 = r23;

     label35:
        $r11 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "id");

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

        r2 = specialinvoke r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$UserData readUserLP(int)>($i1);

     label36:
        if r2 == null goto label48;

        r21 = r23;

        r20 = r23;

     label37:
        r28 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

     label38:
        r21 = r23;

        r20 = r23;

     label39:
        entermonitor r28;

     label40:
        $r13 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r12 = r2.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $i2 = $r12.<android.content.pm.UserInfo: int id>;

        virtualinvoke $r13.<android.util.SparseArray: void put(int,java.lang.Object)>($i2, r2);

        $i3 = r0.<com.android.server.pm.UserManagerService: int mNextSerialNumber>;

        if $i3 < 0 goto label41;

        $i7 = r0.<com.android.server.pm.UserManagerService: int mNextSerialNumber>;

        $r15 = r2.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $i6 = $r15.<android.content.pm.UserInfo: int id>;

        if $i7 > $i6 goto label42;

     label41:
        $r14 = r2.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $i4 = $r14.<android.content.pm.UserInfo: int id>;

        $i5 = $i4 + 1;

        r0.<com.android.server.pm.UserManagerService: int mNextSerialNumber> = $i5;

     label42:
        exitmonitor r28;

     label43:
        goto label48;

     label44:
        $r18 := @caughtexception;

     label45:
        exitmonitor r28;

     label46:
        r21 = r23;

        r20 = r23;

     label47:
        throw $r18;

     label48:
        r30 = r26;

        goto label80;

     label49:
        r21 = r23;

        r20 = r23;

     label50:
        $z3 = virtualinvoke r27.<java.lang.String: boolean equals(java.lang.Object)>("guestRestrictions");

        if $z3 == 0 goto label65;

     label51:
        r21 = r23;

        r20 = r23;

     label52:
        i13 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

     label53:
        r30 = r26;

        if i13 == 1 goto label80;

        r30 = r26;

        if i13 == 3 goto label80;

        if i13 != 2 goto label51;

        r30 = r26;

        r21 = r23;

        r20 = r23;

     label54:
        $r9 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z7 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("restrictions");

        if $z7 == 0 goto label80;

     label55:
        r21 = r23;

        r20 = r23;

     label56:
        r31 = r0.<com.android.server.pm.UserManagerService: android.os.Bundle mGuestRestrictions>;

     label57:
        r21 = r23;

        r20 = r23;

     label58:
        entermonitor r31;

     label59:
        $r10 = r0.<com.android.server.pm.UserManagerService: android.os.Bundle mGuestRestrictions>;

        staticinvoke <com.android.server.pm.UserRestrictionsUtils: void readRestrictions(org.xmlpull.v1.XmlPullParser,android.os.Bundle)>(r1, $r10);

        exitmonitor r31;

     label60:
        r30 = r26;

        goto label80;

     label61:
        $r17 := @caughtexception;

     label62:
        exitmonitor r31;

     label63:
        r21 = r23;

        r20 = r23;

     label64:
        throw $r17;

     label65:
        r21 = r23;

        r20 = r23;

     label66:
        $z4 = virtualinvoke r27.<java.lang.String: boolean equals(java.lang.Object)>("deviceOwnerUserId");

        if $z4 != 0 goto label75;

     label67:
        r21 = r23;

        r20 = r23;

     label68:
        $z5 = virtualinvoke r27.<java.lang.String: boolean equals(java.lang.Object)>("globalRestrictionOwnerUserId");

        if $z5 == 0 goto label70;

     label69:
        goto label75;

     label70:
        r21 = r23;

        r20 = r23;

     label71:
        $z6 = virtualinvoke r27.<java.lang.String: boolean equals(java.lang.Object)>("device_policy_restrictions");

        if $z6 == 0 goto label79;

     label72:
        r21 = r23;

        r20 = r23;

     label73:
        r30 = staticinvoke <com.android.server.pm.UserRestrictionsUtils: android.os.Bundle readRestrictions(org.xmlpull.v1.XmlPullParser)>(r1);

     label74:
        goto label80;

     label75:
        r21 = r23;

        r20 = r23;

     label76:
        r33 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "id");

     label77:
        if r33 == null goto label79;

        r21 = r23;

        r20 = r23;

     label78:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r33);

        r0.<com.android.server.pm.UserManagerService: int mDeviceOwnerUserId> = $i0;

     label79:
        r30 = r26;

     label80:
        r26 = r30;

        goto label28;

     label81:
        r21 = r23;

        r20 = r23;

     label82:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void updateUserIds()>();

     label83:
        r21 = r23;

        r20 = r23;

     label84:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void upgradeIfNecessaryLP(android.os.Bundle)>(r26);

     label85:
        r20 = r23;

        goto label89;

     label86:
        $r19 := @caughtexception;

        goto label90;

     label87:
        $r16 := @caughtexception;

        r21 = r20;

     label88:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void fallbackToSingleUserLP()>();

     label89:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r20);

        return;

     label90:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r21);

        throw $r19;

        catch java.io.IOException from label02 to label03 with label87;
        catch org.xmlpull.v1.XmlPullParserException from label02 to label03 with label87;
        catch java.lang.Throwable from label02 to label03 with label86;
        catch java.io.IOException from label04 to label05 with label87;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label05 with label87;
        catch java.lang.Throwable from label04 to label05 with label86;
        catch java.io.IOException from label06 to label07 with label87;
        catch org.xmlpull.v1.XmlPullParserException from label06 to label07 with label87;
        catch java.lang.Throwable from label06 to label07 with label86;
        catch java.io.IOException from label08 to label09 with label87;
        catch org.xmlpull.v1.XmlPullParserException from label08 to label09 with label87;
        catch java.lang.Throwable from label08 to label09 with label86;
        catch java.io.IOException from label11 to label12 with label87;
        catch org.xmlpull.v1.XmlPullParserException from label11 to label12 with label87;
        catch java.lang.Throwable from label11 to label12 with label86;
        catch java.io.IOException from label13 to label14 with label87;
        catch org.xmlpull.v1.XmlPullParserException from label13 to label14 with label87;
        catch java.lang.Throwable from label13 to label14 with label86;
        catch java.io.IOException from label16 to label17 with label87;
        catch org.xmlpull.v1.XmlPullParserException from label16 to label17 with label87;
        catch java.lang.Throwable from label16 to label17 with label86;
        catch java.io.IOException from label18 to label19 with label87;
        catch org.xmlpull.v1.XmlPullParserException from label18 to label19 with label87;
        catch java.lang.Throwable from label18 to label19 with label86;
        catch java.io.IOException from label20 to label21 with label87;
        catch org.xmlpull.v1.XmlPullParserException from label20 to label21 with label87;
        catch java.lang.Throwable from label20 to label21 with label86;
        catch java.io.IOException from label22 to label23 with label87;
        catch org.xmlpull.v1.XmlPullParserException from label22 to label23 with label87;
        catch java.lang.Throwable from label22 to label23 with label86;
        catch java.io.IOException from label24 to label25 with label87;
        catch org.xmlpull.v1.XmlPullParserException from label24 to label25 with label87;
        catch java.lang.Throwable from label24 to label25 with label86;
        catch java.io.IOException from label26 to label27 with label87;
        catch org.xmlpull.v1.XmlPullParserException from label26 to label27 with label87;
        catch java.lang.Throwable from label26 to label27 with label86;
        catch java.io.IOException from label29 to label30 with label87;
        catch org.xmlpull.v1.XmlPullParserException from label29 to label30 with label87;
        catch java.lang.Throwable from label29 to label30 with label86;
        catch java.io.IOException from label31 to label32 with label87;
        catch org.xmlpull.v1.XmlPullParserException from label31 to label32 with label87;
        catch java.lang.Throwable from label31 to label32 with label86;
        catch java.io.IOException from label33 to label34 with label87;
        catch org.xmlpull.v1.XmlPullParserException from label33 to label34 with label87;
        catch java.lang.Throwable from label33 to label34 with label86;
        catch java.io.IOException from label35 to label36 with label87;
        catch org.xmlpull.v1.XmlPullParserException from label35 to label36 with label87;
        catch java.lang.Throwable from label35 to label36 with label86;
        catch java.io.IOException from label37 to label38 with label87;
        catch org.xmlpull.v1.XmlPullParserException from label37 to label38 with label87;
        catch java.lang.Throwable from label37 to label38 with label86;
        catch java.io.IOException from label39 to label40 with label87;
        catch org.xmlpull.v1.XmlPullParserException from label39 to label40 with label87;
        catch java.lang.Throwable from label39 to label40 with label86;
        catch java.lang.Throwable from label40 to label41 with label44;
        catch java.lang.Throwable from label41 to label42 with label44;
        catch java.lang.Throwable from label42 to label43 with label44;
        catch java.lang.Throwable from label45 to label46 with label44;
        catch java.io.IOException from label47 to label48 with label87;
        catch org.xmlpull.v1.XmlPullParserException from label47 to label48 with label87;
        catch java.lang.Throwable from label47 to label48 with label86;
        catch java.io.IOException from label50 to label51 with label87;
        catch org.xmlpull.v1.XmlPullParserException from label50 to label51 with label87;
        catch java.lang.Throwable from label50 to label51 with label86;
        catch java.io.IOException from label52 to label53 with label87;
        catch org.xmlpull.v1.XmlPullParserException from label52 to label53 with label87;
        catch java.lang.Throwable from label52 to label53 with label86;
        catch java.io.IOException from label54 to label55 with label87;
        catch org.xmlpull.v1.XmlPullParserException from label54 to label55 with label87;
        catch java.lang.Throwable from label54 to label55 with label86;
        catch java.io.IOException from label56 to label57 with label87;
        catch org.xmlpull.v1.XmlPullParserException from label56 to label57 with label87;
        catch java.lang.Throwable from label56 to label57 with label86;
        catch java.io.IOException from label58 to label59 with label87;
        catch org.xmlpull.v1.XmlPullParserException from label58 to label59 with label87;
        catch java.lang.Throwable from label58 to label59 with label86;
        catch java.lang.Throwable from label59 to label60 with label61;
        catch java.lang.Throwable from label62 to label63 with label61;
        catch java.io.IOException from label64 to label65 with label87;
        catch org.xmlpull.v1.XmlPullParserException from label64 to label65 with label87;
        catch java.lang.Throwable from label64 to label65 with label86;
        catch java.io.IOException from label66 to label67 with label87;
        catch org.xmlpull.v1.XmlPullParserException from label66 to label67 with label87;
        catch java.lang.Throwable from label66 to label67 with label86;
        catch java.io.IOException from label68 to label69 with label87;
        catch org.xmlpull.v1.XmlPullParserException from label68 to label69 with label87;
        catch java.lang.Throwable from label68 to label69 with label86;
        catch java.io.IOException from label71 to label72 with label87;
        catch org.xmlpull.v1.XmlPullParserException from label71 to label72 with label87;
        catch java.lang.Throwable from label71 to label72 with label86;
        catch java.io.IOException from label73 to label74 with label87;
        catch org.xmlpull.v1.XmlPullParserException from label73 to label74 with label87;
        catch java.lang.Throwable from label73 to label74 with label86;
        catch java.io.IOException from label76 to label77 with label87;
        catch org.xmlpull.v1.XmlPullParserException from label76 to label77 with label87;
        catch java.lang.Throwable from label76 to label77 with label86;
        catch java.io.IOException from label78 to label79 with label87;
        catch org.xmlpull.v1.XmlPullParserException from label78 to label79 with label87;
        catch java.lang.Throwable from label78 to label79 with label86;
        catch java.io.IOException from label82 to label83 with label87;
        catch org.xmlpull.v1.XmlPullParserException from label82 to label83 with label87;
        catch java.lang.Throwable from label82 to label83 with label86;
        catch java.io.IOException from label84 to label85 with label87;
        catch org.xmlpull.v1.XmlPullParserException from label84 to label85 with label87;
        catch java.lang.Throwable from label84 to label85 with label86;
        catch java.lang.Throwable from label88 to label89 with label86;
    }

    private void removeNonSystemUsers()
    {
        com.android.server.pm.UserManagerService r0;
        int i0, $i1, $i2, i3;
        android.content.pm.UserInfo r1, $r5;
        java.util.ArrayList $r2;
        android.util.SparseArray $r3, $r6;
        boolean $z0;
        java.lang.Object $r4, $r7, r11;
        com.android.server.pm.UserManagerService$UserData $r8;
        java.lang.Throwable $r9;
        java.util.Iterator r12;

        r0 := @this: com.android.server.pm.UserManagerService;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r11 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r11;

     label01:
        $r3 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        i0 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

     label02:
        i3 = 0;

     label03:
        if i3 >= i0 goto label06;

     label04:
        $r6 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        $r8 = (com.android.server.pm.UserManagerService$UserData) $r7;

        r1 = $r8.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $i2 = r1.<android.content.pm.UserInfo: int id>;

        if $i2 == 0 goto label05;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label05:
        i3 = i3 + 1;

        goto label03;

     label06:
        exitmonitor r11;

     label07:
        r12 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label08:
        $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label09;

        $r4 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (android.content.pm.UserInfo) $r4;

        $i1 = $r5.<android.content.pm.UserInfo: int id>;

        virtualinvoke r0.<com.android.server.pm.UserManagerService: boolean removeUser(int)>($i1);

        goto label08;

     label09:
        return;

     label10:
        $r9 := @caughtexception;

     label11:
        exitmonitor r11;

     label12:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    private void removeUserState(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, $i1, i4, $i5;
        android.content.Context $r1;
        java.lang.Object $r2, r37, r39, r41;
        android.os.storage.StorageManager $r3;
        com.android.server.pm.PackageManagerService $r4;
        com.android.server.pm.UserDataPreparer $r5;
        android.util.SparseArray $r6, $r12, $r20, $r40;
        android.util.SparseBooleanArray $r7;
        com.android.server.pm.UserManagerService$WatchedUserStates $r8, r38;
        com.android.server.pm.RestrictionsSet $r9, $r10, $r11, $r13, $r21;
        boolean $z3, $z4, $z5, z6;
        java.lang.StringBuilder $r14, $r23;
        android.util.AtomicFile $r17;
        java.io.File $r18, r42;
        java.lang.String $r19, $r27;
        java.lang.Throwable $r22, $r28, $r29, $r30, $r31;
        java.lang.Exception $r32;
        android.service.gatekeeper.IGateKeeperService r35;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

     label01:
        $r1 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/os/storage/StorageManager;");

        $r3 = (android.os.storage.StorageManager) $r2;

        virtualinvoke $r3.<android.os.storage.StorageManager: void destroyUserKey(int)>(i0);

     label02:
        goto label04;

     label03:
        $r22 := @caughtexception;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Destroying key for user ");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed, continuing anyway");

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("UserManagerService", $r27, $r22);

     label04:
        r35 = staticinvoke <android.security.GateKeeper: android.service.gatekeeper.IGateKeeperService getService()>();

     label05:
        if r35 == null goto label07;

     label06:
        interfaceinvoke r35.<android.service.gatekeeper.IGateKeeperService: void clearSecureUserId(int)>(i0);

     label07:
        goto label09;

     label08:
        $r32 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserManagerService", "unable to clear GK secure user id");

     label09:
        $r4 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.PackageManagerService mPm>;

        virtualinvoke $r4.<com.android.server.pm.PackageManagerService: void cleanUpUser(com.android.server.pm.UserManagerService,int)>(r0, i0);

        $r5 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserDataPreparer mUserDataPreparer>;

        virtualinvoke $r5.<com.android.server.pm.UserDataPreparer: void destroyUserData(int,int)>(i0, 3);

        r37 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r37;

     label10:
        $r6 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        virtualinvoke $r6.<android.util.SparseArray: void remove(int)>(i0);

        $r7 = r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mIsUserManaged>;

        virtualinvoke $r7.<android.util.SparseBooleanArray: void delete(int)>(i0);

        exitmonitor r37;

     label11:
        r38 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$WatchedUserStates mUserStates>;

        entermonitor r38;

     label12:
        $r8 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$WatchedUserStates mUserStates>;

        virtualinvoke $r8.<com.android.server.pm.UserManagerService$WatchedUserStates: void delete(int)>(i0);

        exitmonitor r38;

     label13:
        r39 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mRestrictionsLock>;

        entermonitor r39;

     label14:
        $r9 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet mBaseUserRestrictions>;

        virtualinvoke $r9.<com.android.server.pm.RestrictionsSet: boolean remove(int)>(i0);

        $r10 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet mAppliedUserRestrictions>;

        virtualinvoke $r10.<com.android.server.pm.RestrictionsSet: boolean remove(int)>(i0);

        $r11 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet mCachedEffectiveUserRestrictions>;

        virtualinvoke $r11.<com.android.server.pm.RestrictionsSet: boolean remove(int)>(i0);

        $r12 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mDevicePolicyLocalUserRestrictions>;

        virtualinvoke $r12.<android.util.SparseArray: void delete(int)>(i0);

     label15:
        z6 = 0;

        i4 = 0;

     label16:
        $r40 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mDevicePolicyLocalUserRestrictions>;

        $i5 = virtualinvoke $r40.<android.util.SparseArray: int size()>();

        if i4 >= $i5 goto label18;

        $r20 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mDevicePolicyLocalUserRestrictions>;

        $i1 = virtualinvoke $r20.<android.util.SparseArray: int keyAt(int)>(i4);

        $r21 = specialinvoke r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet getDevicePolicyLocalRestrictionsForTargetUserLR(int)>($i1);

        $z5 = virtualinvoke $r21.<com.android.server.pm.RestrictionsSet: boolean remove(int)>(i0);

        z6 = z6 | $z5;

     label17:
        i4 = i4 + 1;

        goto label16;

     label18:
        $r13 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet mDevicePolicyGlobalUserRestrictions>;

        $z3 = virtualinvoke $r13.<com.android.server.pm.RestrictionsSet: boolean remove(int)>(i0);

        $z4 = z6 | $z3;

        if $z4 == 0 goto label19;

        virtualinvoke r0.<com.android.server.pm.UserManagerService: void applyUserRestrictionsForAllUsersLR()>();

     label19:
        exitmonitor r39;

     label20:
        r41 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r41;

     label21:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserListLP()>();

        exitmonitor r41;

     label22:
        r42 = r0.<com.android.server.pm.UserManagerService: java.io.File mUsersDir>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".xml");

        $r17 = new android.util.AtomicFile;

        $r18 = new java.io.File;

        $r19 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.io.File: void <init>(java.io.File,java.lang.String)>(r42, $r19);

        specialinvoke $r17.<android.util.AtomicFile: void <init>(java.io.File)>($r18);

        virtualinvoke $r17.<android.util.AtomicFile: void delete()>();

        specialinvoke r0.<com.android.server.pm.UserManagerService: void updateUserIds()>();

        return;

     label23:
        $r28 := @caughtexception;

     label24:
        exitmonitor r41;

     label25:
        throw $r28;

     label26:
        $r31 := @caughtexception;

     label27:
        exitmonitor r39;

     label28:
        throw $r31;

     label29:
        $r29 := @caughtexception;

     label30:
        exitmonitor r38;

     label31:
        throw $r29;

     label32:
        $r30 := @caughtexception;

     label33:
        exitmonitor r37;

     label34:
        throw $r30;

        catch java.lang.IllegalStateException from label01 to label02 with label03;
        catch java.lang.Exception from label04 to label05 with label08;
        catch java.lang.Exception from label06 to label07 with label08;
        catch java.lang.Throwable from label10 to label11 with label32;
        catch java.lang.Throwable from label12 to label13 with label29;
        catch java.lang.Throwable from label14 to label15 with label26;
        catch java.lang.Throwable from label16 to label17 with label26;
        catch java.lang.Throwable from label18 to label19 with label26;
        catch java.lang.Throwable from label19 to label20 with label26;
        catch java.lang.Throwable from label21 to label22 with label23;
        catch java.lang.Throwable from label24 to label25 with label23;
        catch java.lang.Throwable from label27 to label28 with label26;
        catch java.lang.Throwable from label30 to label31 with label29;
        catch java.lang.Throwable from label33 to label34 with label32;
    }

    private boolean removeUserUnchecked(int)
    {
        com.android.server.pm.UserManagerService r0;
        long l0;
        int i1, $i2, $i3, $i4, $i5, $i6, i13, i14;
        android.util.SparseArray $r1;
        java.lang.Object $r2, r21, r22;
        android.util.SparseBooleanArray $r3;
        boolean $z0, $z1, z2;
        android.content.pm.UserInfo $r4, $r6, $r7, $r8, $r9, r24;
        com.android.internal.app.IAppOpsService $r5;
        java.lang.Object[] $r10, $r13;
        java.lang.Integer $r11, $r14;
        java.lang.String $r12, $r15;
        java.lang.Throwable $r16, $r19, $r20;
        android.os.RemoteException $r17, $r18;
        com.android.server.pm.UserManagerService$UserData r23;
        android.app.IActivityManager r26;
        com.android.server.pm.UserManagerService$5 r27;

        r0 := @this: com.android.server.pm.UserManagerService;

        i13 := @parameter0: int;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        i1 = staticinvoke <android.app.ActivityManager: int getCurrentUser()>();

     label02:
        z2 = 0;

        if i1 != i13 goto label05;

     label03:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserManagerService", "Current user cannot be removed.");

     label04:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 0;

     label05:
        r21 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r21;

     label06:
        r22 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r22;

     label07:
        $r1 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i13);

        r23 = (com.android.server.pm.UserManagerService$UserData) $r2;

     label08:
        if i13 != 0 goto label12;

     label09:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", "System user cannot be removed.");

        exitmonitor r22;

     label10:
        exitmonitor r21;

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 0;

     label12:
        if r23 != null goto label16;

     label13:
        $r13 = newarray (java.lang.Object)[1];

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i13);

        $r13[0] = $r14;

        $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot remove user %d, invalid user id provided.", $r13);

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", $r15);

        exitmonitor r22;

     label14:
        exitmonitor r21;

     label15:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 0;

     label16:
        $r3 = r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        $z0 = virtualinvoke $r3.<android.util.SparseBooleanArray: boolean get(int)>(i13);

        if $z0 == 0 goto label19;

        $r10 = newarray (java.lang.Object)[1];

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i13);

        $r10[0] = $r11;

        $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("User %d is already scheduled for removal.", $r10);

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", $r12);

        exitmonitor r22;

     label17:
        exitmonitor r21;

     label18:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 0;

     label19:
        virtualinvoke r0.<com.android.server.pm.UserManagerService: void addRemovingUserIdLocked(int)>(i13);

        exitmonitor r22;

     label20:
        $r4 = r23.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $r4.<android.content.pm.UserInfo: boolean partial> = 1;

        r24 = r23.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $i2 = r24.<android.content.pm.UserInfo: int flags>;

        $i3 = $i2 | 64;

        r24.<android.content.pm.UserInfo: int flags> = $i3;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLP(com.android.server.pm.UserManagerService$UserData)>(r23);

        exitmonitor r21;

     label21:
        $r5 = r0.<com.android.server.pm.UserManagerService: com.android.internal.app.IAppOpsService mAppOpsService>;

        interfaceinvoke $r5.<com.android.internal.app.IAppOpsService: void removeUser(int)>(i13);

     label22:
        goto label25;

     label23:
        $r18 := @caughtexception;

     label24:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("UserManagerService", "Unable to notify AppOpsService of removing user.", $r18);

     label25:
        $r6 = r23.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $i4 = $r6.<android.content.pm.UserInfo: int profileGroupId>;

        if $i4 == -10000 goto label26;

        $r7 = r23.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $z1 = virtualinvoke $r7.<android.content.pm.UserInfo: boolean isManagedProfile()>();

        if $z1 == 0 goto label26;

        $r8 = r23.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $i6 = $r8.<android.content.pm.UserInfo: int profileGroupId>;

        $r9 = r23.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $i5 = $r9.<android.content.pm.UserInfo: int id>;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void sendProfileRemovedBroadcast(int,int)>($i6, $i5);

     label26:
        r26 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        r27 = new com.android.server.pm.UserManagerService$5;

        specialinvoke r27.<com.android.server.pm.UserManagerService$5: void <init>(com.android.server.pm.UserManagerService)>(r0);

        i14 = interfaceinvoke r26.<android.app.IActivityManager: int stopUser(int,boolean,android.app.IStopUserCallback)>(i13, 1, r27);

     label27:
        if i14 != 0 goto label28;

        z2 = 1;

     label28:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z2;

     label29:
        $r17 := @caughtexception;

     label30:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("UserManagerService", "Failed to stop user during removal.", $r17);

     label31:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 0;

     label32:
        $r19 := @caughtexception;

     label33:
        exitmonitor r22;

     label34:
        throw $r19;

     label35:
        $r16 := @caughtexception;

     label36:
        exitmonitor r21;

     label37:
        throw $r16;

     label38:
        $r20 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r20;

        catch java.lang.Throwable from label01 to label02 with label38;
        catch java.lang.Throwable from label03 to label04 with label38;
        catch java.lang.Throwable from label05 to label06 with label38;
        catch java.lang.Throwable from label06 to label07 with label35;
        catch java.lang.Throwable from label07 to label08 with label32;
        catch java.lang.Throwable from label09 to label10 with label32;
        catch java.lang.Throwable from label10 to label11 with label35;
        catch java.lang.Throwable from label13 to label14 with label32;
        catch java.lang.Throwable from label14 to label15 with label35;
        catch java.lang.Throwable from label16 to label17 with label32;
        catch java.lang.Throwable from label17 to label18 with label35;
        catch java.lang.Throwable from label19 to label20 with label32;
        catch java.lang.Throwable from label20 to label21 with label35;
        catch android.os.RemoteException from label21 to label22 with label23;
        catch java.lang.Throwable from label21 to label22 with label38;
        catch java.lang.Throwable from label24 to label25 with label38;
        catch java.lang.Throwable from label25 to label26 with label38;
        catch android.os.RemoteException from label26 to label27 with label29;
        catch java.lang.Throwable from label26 to label27 with label38;
        catch java.lang.Throwable from label30 to label31 with label38;
        catch java.lang.Throwable from label33 to label34 with label32;
        catch java.lang.Throwable from label34 to label35 with label35;
        catch java.lang.Throwable from label36 to label37 with label35;
        catch java.lang.Throwable from label37 to label38 with label38;
    }

    private int runList(java.io.PrintWriter, com.android.server.pm.UserManagerService$Shell) throws android.os.RemoteException
    {
        com.android.server.pm.UserManagerService r0;
        java.io.PrintWriter r1;
        android.app.IActivityManager r2;
        java.util.List r3;
        int i0, i1, $i2, $i3, $i4, i6, i7, i8;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, z8, z9;
        java.lang.String r4, r5, $r20, r22, r25, r26, r27, r28;
        java.lang.Object $r6;
        java.lang.Object[] $r7, $r9, $r13;
        java.lang.Integer $r10, $r11, $r14;
        android.content.pm.UserInfo $r16, r24;
        java.lang.StringBuilder $r17;
        com.android.server.pm.UserManagerService$Shell r21;
        byte b5;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.io.PrintWriter;

        r21 := @parameter1: com.android.server.pm.UserManagerService$Shell;

        z7 = 0;

        z8 = 0;

     label01:
        r22 = virtualinvoke r21.<com.android.server.pm.UserManagerService$Shell: java.lang.String getNextOption()>();

        b5 = 0;

        if r22 == null goto label10;

        i6 = virtualinvoke r22.<java.lang.String: int hashCode()>();

        if i6 == 1513 goto label04;

        if i6 == 42995713 goto label03;

     label02:
        goto label05;

     label03:
        $z6 = virtualinvoke r22.<java.lang.String: boolean equals(java.lang.Object)>("--all");

        if $z6 == 0 goto label02;

        b5 = 1;

        goto label06;

     label04:
        $z5 = virtualinvoke r22.<java.lang.String: boolean equals(java.lang.Object)>("-v");

        if $z5 == 0 goto label02;

        goto label06;

     label05:
        b5 = -1;

     label06:
        if b5 == 0 goto label08;

        if b5 == 1 goto label07;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid option: ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r20);

        return -1;

     label07:
        z7 = 1;

        goto label09;

     label08:
        z8 = 1;

     label09:
        goto label01;

     label10:
        r2 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        $z2 = z7 ^ 1;

        $z1 = z7 ^ 1;

        r3 = virtualinvoke r0.<com.android.server.pm.UserManagerService: java.util.List getUsers(boolean,boolean,boolean)>($z2, 0, $z1);

        if r3 != null goto label11;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Error: couldn\'t get users");

        return 1;

     label11:
        i0 = interfaceinvoke r3.<java.util.List: int size()>();

        i7 = -10000;

        if z8 == 0 goto label12;

        $r13 = newarray (java.lang.Object)[1];

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r13[0] = $r14;

        virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("%d users:\n\n", $r13);

        $r16 = interfaceinvoke r2.<android.app.IActivityManager: android.content.pm.UserInfo getCurrentUser()>();

        i7 = $r16.<android.content.pm.UserInfo: int id>;

        goto label13;

     label12:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Users:");

     label13:
        i8 = 0;

     label14:
        if i8 >= i0 goto label27;

        $r6 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i8);

        r24 = (android.content.pm.UserInfo) $r6;

        $i2 = r24.<android.content.pm.UserInfo: int id>;

        z0 = interfaceinvoke r2.<android.app.IActivityManager: boolean isUserRunning(int,int)>($i2, 0);

        $i3 = r24.<android.content.pm.UserInfo: int id>;

        if $i3 != i7 goto label15;

        z9 = 1;

        goto label16;

     label15:
        z9 = 0;

     label16:
        r25 = "";

        if z8 == 0 goto label24;

        i1 = r24.<android.content.pm.UserInfo: int id>;

        r4 = r24.<android.content.pm.UserInfo: java.lang.String name>;

        $i4 = r24.<android.content.pm.UserInfo: int flags>;

        r5 = staticinvoke <android.content.pm.UserInfo: java.lang.String flagsToString(int)>($i4);

        if z0 == 0 goto label17;

        r26 = " (running)";

        goto label18;

     label17:
        r26 = "";

     label18:
        $z3 = r24.<android.content.pm.UserInfo: boolean partial>;

        if $z3 == 0 goto label19;

        r27 = " (partial)";

        goto label20;

     label19:
        r27 = "";

     label20:
        $z4 = r24.<android.content.pm.UserInfo: boolean preCreated>;

        if $z4 == 0 goto label21;

        r28 = " (pre-created)";

        goto label22;

     label21:
        r28 = "";

     label22:
        if z9 == 0 goto label23;

        r25 = " (current)";

     label23:
        $r9 = newarray (java.lang.Object)[8];

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8);

        $r9[0] = $r10;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r9[1] = $r11;

        $r9[2] = r4;

        $r9[3] = r5;

        $r9[4] = r26;

        $r9[5] = r27;

        $r9[6] = r28;

        $r9[7] = r25;

        virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("%d: id=%d, name=%s, flags=%s%s%s%s%s\n", $r9);

        goto label26;

     label24:
        if z0 == 0 goto label25;

        r25 = " running";

     label25:
        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = r24;

        $r7[1] = r25;

        virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("\t%s%s\n", $r7);

     label26:
        i8 = i8 + 1;

        goto label14;

     label27:
        return 0;
    }

    private int runReportPackageWhitelistProblems(java.io.PrintWriter, com.android.server.pm.UserManagerService$Shell)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1, $r8, $r10, $r13, $r17;
        int i0, i2;
        java.lang.StringBuilder $r2, $r14;
        com.android.internal.util.IndentingPrintWriter $r11;
        com.android.server.pm.UserSystemPackageInstaller $r12;
        boolean $z0, $z1, $z2, $z3, z4, z5;
        java.lang.Throwable $r18, $r19;
        java.io.PrintWriter r20;
        com.android.server.pm.UserManagerService$Shell r21;
        byte b3;

        r0 := @this: com.android.server.pm.UserManagerService;

        r20 := @parameter0: java.io.PrintWriter;

        r21 := @parameter1: com.android.server.pm.UserManagerService$Shell;

        z4 = 0;

        z5 = 0;

        i2 = -1000;

     label01:
        r1 = virtualinvoke r21.<com.android.server.pm.UserManagerService$Shell: java.lang.String getNextOption()>();

        b3 = 0;

        if r1 == null goto label13;

        i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        if i0 == -1362766982 goto label06;

        if i0 == 1513 goto label05;

        if i0 == 1333227331 goto label04;

        if i0 == 1737088994 goto label03;

     label02:
        goto label07;

     label03:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--verbose");

        if $z3 == 0 goto label02;

        b3 = 1;

        goto label08;

     label04:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--mode");

        if $z2 == 0 goto label02;

        b3 = 3;

        goto label08;

     label05:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("-v");

        if $z1 == 0 goto label02;

        goto label08;

     label06:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--critical-only");

        if $z0 == 0 goto label02;

        b3 = 2;

        goto label08;

     label07:
        b3 = -1;

     label08:
        if b3 == 0 goto label11;

        if b3 == 1 goto label11;

        if b3 == 2 goto label10;

        if b3 == 3 goto label09;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid option: ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r20.<java.io.PrintWriter: void println(java.lang.String)>($r17);

        return -1;

     label09:
        $r13 = virtualinvoke r21.<com.android.server.pm.UserManagerService$Shell: java.lang.String getNextArgRequired()>();

        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r13);

        goto label12;

     label10:
        z5 = 1;

        goto label12;

     label11:
        z4 = 1;

     label12:
        goto label01;

     label13:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("runReportPackageWhitelistProblems(): verbose=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", criticalOnly=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mode=");

        $r8 = staticinvoke <com.android.server.pm.UserSystemPackageInstaller: java.lang.String modeToString(int)>(i2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("UserManagerService", $r10);

        $r11 = new com.android.internal.util.IndentingPrintWriter;

        specialinvoke $r11.<com.android.internal.util.IndentingPrintWriter: void <init>(java.io.Writer,java.lang.String)>(r20, "  ");

     label14:
        $r12 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserSystemPackageInstaller mSystemPackageInstaller>;

        virtualinvoke $r12.<com.android.server.pm.UserSystemPackageInstaller: void dumpPackageWhitelistProblems(com.android.internal.util.IndentingPrintWriter,int,boolean,boolean)>($r11, i2, z4, z5);

     label15:
        virtualinvoke $r11.<com.android.internal.util.IndentingPrintWriter: void close()>();

        return 0;

     label16:
        $r18 := @caughtexception;

     label17:
        virtualinvoke $r11.<com.android.internal.util.IndentingPrintWriter: void close()>();

     label18:
        goto label20;

     label19:
        $r19 := @caughtexception;

        virtualinvoke $r18.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r19);

     label20:
        throw $r18;

        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label19;
    }

    private int scanNextAvailableIdLocked()
    {
        com.android.server.pm.UserManagerService r0;
        android.util.SparseArray $r1;
        int $i0, i1;
        android.util.SparseBooleanArray $r2;
        boolean $z0;

        r0 := @this: com.android.server.pm.UserManagerService;

        i1 = 10;

     label1:
        if i1 >= 21474 goto label3;

        $r1 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i0 = virtualinvoke $r1.<android.util.SparseArray: int indexOfKey(int)>(i1);

        if $i0 >= 0 goto label2;

        $r2 = r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        $z0 = virtualinvoke $r2.<android.util.SparseBooleanArray: boolean get(int)>(i1);

        if $z0 != 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return -1;
    }

    private void scheduleWriteUser(com.android.server.pm.UserManagerService$UserData)
    {
        com.android.server.pm.UserManagerService r0;
        android.os.Handler $r1, $r2, $r3;
        boolean $z0;
        com.android.server.pm.UserManagerService$UserData r4;
        android.os.Message r5;

        r0 := @this: com.android.server.pm.UserManagerService;

        r4 := @parameter0: com.android.server.pm.UserManagerService$UserData;

        $r1 = r0.<com.android.server.pm.UserManagerService: android.os.Handler mHandler>;

        $z0 = virtualinvoke $r1.<android.os.Handler: boolean hasMessages(int,java.lang.Object)>(1, r4);

        if $z0 != 0 goto label1;

        $r2 = r0.<com.android.server.pm.UserManagerService: android.os.Handler mHandler>;

        r5 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1, r4);

        $r3 = r0.<com.android.server.pm.UserManagerService: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r5, 2000L);

     label1:
        return;
    }

    private void sendProfileRemovedBroadcast(int, int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, i1;
        android.content.Intent $r3;
        android.os.UserHandle $r4, $r7;
        android.app.admin.DevicePolicyManagerInternal $r8;
        android.content.Context $r10;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.MANAGED_PROFILE_REMOVED");

        $r4 = new android.os.UserHandle;

        specialinvoke $r4.<android.os.UserHandle: void <init>(int)>(i1);

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.USER", $r4);

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", i1);

        $r7 = new android.os.UserHandle;

        specialinvoke $r7.<android.os.UserHandle: void <init>(int)>(i0);

        $r8 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.app.admin.DevicePolicyManagerInternal getDevicePolicyManagerInternal()>();

        virtualinvoke $r8.<android.app.admin.DevicePolicyManagerInternal: void broadcastIntentToCrossProfileManifestReceiversAsUser(android.content.Intent,android.os.UserHandle,boolean)>($r3, $r7, 0);

        virtualinvoke $r3.<android.content.Intent: android.content.Intent addFlags(int)>(1342177280);

        $r10 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        virtualinvoke $r10.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>($r3, $r7, null);

        return;
    }

    private void sendUserInfoChangedBroadcast(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        android.content.Intent $r2;
        android.os.UserHandle $r5;
        android.content.Context $r6;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_INFO_CHANGED");

        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", i0);

        virtualinvoke $r2.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        $r6 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r5 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r6.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r2, $r5);

        return;
    }

    private void setDevicePolicyUserRestrictionsInner(int, android.os.Bundle, com.android.server.pm.RestrictionsSet, boolean)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, $i1, $i2, $i3, $i4;
        boolean z0, z1, z2, $z3, $z4, $z5;
        com.android.server.pm.RestrictionsSet $r1, r13;
        java.lang.Object $r2, $r4, r14, r16, r18;
        java.lang.Integer $r3, $r5, $r7;
        com.android.server.pm.UserManagerService$UserData $r6, $r8;
        java.lang.Throwable $r9, $r10, $r11;
        android.os.Bundle r12;
        java.util.List r15;
        java.util.Iterator r17, r20;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        r12 := @parameter1: android.os.Bundle;

        r13 := @parameter2: com.android.server.pm.RestrictionsSet;

        z0 := @parameter3: boolean;

        r14 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mRestrictionsLock>;

        entermonitor r14;

     label01:
        $r1 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet mDevicePolicyGlobalUserRestrictions>;

        z1 = virtualinvoke $r1.<com.android.server.pm.RestrictionsSet: boolean updateRestrictions(int,android.os.Bundle)>(i0, r12);

        r15 = specialinvoke r0.<com.android.server.pm.UserManagerService: java.util.List getUpdatedTargetUserIdsFromLocalRestrictions(int,com.android.server.pm.RestrictionsSet)>(i0, r13);

        z2 = specialinvoke r0.<com.android.server.pm.UserManagerService: boolean updateLocalRestrictionsForTargetUsersLR(int,com.android.server.pm.RestrictionsSet,java.util.List)>(i0, r13, r15);

     label02:
        if z0 == 0 goto label05;

     label03:
        r0.<com.android.server.pm.UserManagerService: int mDeviceOwnerUserId> = i0;

     label04:
        goto label06;

     label05:
        $i1 = r0.<com.android.server.pm.UserManagerService: int mDeviceOwnerUserId>;

        if $i1 != i0 goto label06;

        r0.<com.android.server.pm.UserManagerService: int mDeviceOwnerUserId> = -10000;

     label06:
        exitmonitor r14;

     label07:
        r16 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r16;

        if z1 != 0 goto label08;

        if z2 == 0 goto label16;

     label08:
        $i2 = interfaceinvoke r15.<java.util.List: int size()>();

        if $i2 != 1 goto label10;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z5 = interfaceinvoke r15.<java.util.List: boolean contains(java.lang.Object)>($r7);

        if $z5 == 0 goto label10;

        $r8 = specialinvoke r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$UserData getUserDataNoChecks(int)>(i0);

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLP(com.android.server.pm.UserManagerService$UserData)>($r8);

     label09:
        goto label16;

     label10:
        if z1 == 0 goto label12;

     label11:
        $r6 = specialinvoke r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$UserData getUserDataNoChecks(int)>(i0);

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLP(com.android.server.pm.UserManagerService$UserData)>($r6);

     label12:
        if z2 == 0 goto label16;

     label13:
        r17 = interfaceinvoke r15.<java.util.List: java.util.Iterator iterator()>();

     label14:
        $z4 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label16;

        $r4 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.Integer) $r4;

        $i4 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeAllTargetUsersLP(int)>($i4);

     label15:
        goto label14;

     label16:
        exitmonitor r16;

     label17:
        r18 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mRestrictionsLock>;

        entermonitor r18;

        if z1 == 0 goto label21;

     label18:
        virtualinvoke r0.<com.android.server.pm.UserManagerService: void applyUserRestrictionsForAllUsersLR()>();

     label19:
        goto label25;

     label20:
        $r9 := @caughtexception;

        goto label27;

     label21:
        if z2 == 0 goto label25;

     label22:
        r20 = interfaceinvoke r15.<java.util.List: java.util.Iterator iterator()>();

     label23:
        $z3 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label25;

        $r2 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.Integer) $r2;

        $i3 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        virtualinvoke r0.<com.android.server.pm.UserManagerService: void applyUserRestrictionsLR(int)>($i3);

     label24:
        goto label23;

     label25:
        exitmonitor r18;

     label26:
        return;

     label27:
        exitmonitor r18;

     label28:
        throw $r9;

     label29:
        $r10 := @caughtexception;

     label30:
        exitmonitor r16;

     label31:
        throw $r10;

     label32:
        $r11 := @caughtexception;

     label33:
        exitmonitor r14;

     label34:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label32;
        catch java.lang.Throwable from label03 to label04 with label32;
        catch java.lang.Throwable from label05 to label06 with label32;
        catch java.lang.Throwable from label06 to label07 with label32;
        catch java.lang.Throwable from label08 to label09 with label29;
        catch java.lang.Throwable from label11 to label12 with label29;
        catch java.lang.Throwable from label13 to label14 with label29;
        catch java.lang.Throwable from label14 to label15 with label29;
        catch java.lang.Throwable from label16 to label17 with label29;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label22 to label23 with label20;
        catch java.lang.Throwable from label23 to label24 with label20;
        catch java.lang.Throwable from label25 to label26 with label20;
        catch java.lang.Throwable from label27 to label28 with label20;
        catch java.lang.Throwable from label30 to label31 with label29;
        catch java.lang.Throwable from label33 to label34 with label32;
    }

    private void setQuietModeEnabled(int, boolean, android.content.IntentSender, java.lang.String)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, $i1, $i2, $i3;
        boolean z0, $z1, $z2;
        android.content.pm.UserInfo r1, r2;
        com.android.server.pm.UserManagerService$UserData r3;
        java.lang.String $r4, $r11, r16;
        android.app.IActivityManager $r5, $r8;
        android.os.UserHandle $r6, $r7;
        java.lang.Object $r9, r17, r19;
        android.app.ActivityManagerInternal $r10;
        android.os.RemoteException $r12;
        java.lang.Throwable $r13, $r14;
        android.content.IntentSender r15;
        java.lang.StringBuilder r18, r25;
        com.android.server.pm.UserManagerService$DisableQuietModeUserUnlockedCallback r21, r22;
        java.lang.IllegalArgumentException r24;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r15 := @parameter2: android.content.IntentSender;

        r16 := @parameter3: java.lang.String;

        r17 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r17;

     label01:
        r1 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLU(int)>(i0);

        r2 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getProfileParentLU(int)>(i0);

     label02:
        if r1 == null goto label24;

     label03:
        $z1 = virtualinvoke r1.<android.content.pm.UserInfo: boolean isManagedProfile()>();

        if $z1 == 0 goto label24;

        $z2 = virtualinvoke r1.<android.content.pm.UserInfo: boolean isQuietModeEnabled()>();

        if $z2 != z0 goto label05;

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Quiet mode is already ");

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r11 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("UserManagerService", $r11);

        exitmonitor r17;

     label04:
        return;

     label05:
        $i1 = r1.<android.content.pm.UserInfo: int flags>;

        $i2 = $i1 ^ 128;

        r1.<android.content.pm.UserInfo: int flags> = $i2;

        $i3 = r1.<android.content.pm.UserInfo: int id>;

        r3 = specialinvoke r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$UserData getUserDataLU(int)>($i3);

        exitmonitor r17;

     label06:
        r19 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r19;

     label07:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLP(com.android.server.pm.UserManagerService$UserData)>(r3);

        exitmonitor r19;

     label08:
        if z0 == 0 goto label12;

     label09:
        $r8 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        interfaceinvoke $r8.<android.app.IActivityManager: int stopUser(int,boolean,android.app.IStopUserCallback)>(i0, 1, null);

        $r9 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/app/ActivityManagerInternal;");

        $r10 = (android.app.ActivityManagerInternal) $r9;

        virtualinvoke $r10.<android.app.ActivityManagerInternal: void killForegroundAppsForUser(int)>(i0);

     label10:
        goto label17;

     label11:
        $r12 := @caughtexception;

        goto label19;

     label12:
        if r15 == null goto label15;

     label13:
        r21 = new com.android.server.pm.UserManagerService$DisableQuietModeUserUnlockedCallback;

        specialinvoke r21.<com.android.server.pm.UserManagerService$DisableQuietModeUserUnlockedCallback: void <init>(com.android.server.pm.UserManagerService,android.content.IntentSender)>(r0, r15);

     label14:
        r22 = r21;

        goto label16;

     label15:
        r22 = null;

     label16:
        $r5 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        interfaceinvoke $r5.<android.app.IActivityManager: boolean startUserInBackgroundWithListener(int,android.os.IProgressListener)>(i0, r22);

     label17:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void logQuietModeEnabled(int,boolean,java.lang.String)>(i0, z0, r16);

     label18:
        goto label20;

     label19:
        virtualinvoke $r12.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

     label20:
        $r6 = virtualinvoke r1.<android.content.pm.UserInfo: android.os.UserHandle getUserHandle()>();

        $r7 = virtualinvoke r2.<android.content.pm.UserInfo: android.os.UserHandle getUserHandle()>();

        specialinvoke r0.<com.android.server.pm.UserManagerService: void broadcastProfileAvailabilityChanges(android.os.UserHandle,android.os.UserHandle,boolean)>($r6, $r7, z0);

        return;

     label21:
        $r14 := @caughtexception;

     label22:
        exitmonitor r19;

     label23:
        throw $r14;

     label24:
        r24 = new java.lang.IllegalArgumentException;

        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User ");

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a profile");

        $r4 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw r24;

     label25:
        $r13 := @caughtexception;

     label26:
        exitmonitor r17;

     label27:
        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label25;
        catch java.lang.Throwable from label03 to label04 with label25;
        catch java.lang.Throwable from label05 to label06 with label25;
        catch java.lang.Throwable from label07 to label08 with label21;
        catch android.os.RemoteException from label09 to label10 with label11;
        catch android.os.RemoteException from label13 to label14 with label11;
        catch android.os.RemoteException from label16 to label17 with label11;
        catch android.os.RemoteException from label17 to label18 with label11;
        catch java.lang.Throwable from label22 to label23 with label21;
        catch java.lang.Throwable from label24 to label25 with label25;
        catch java.lang.Throwable from label26 to label27 with label25;
    }

    private void showConfirmCredentialToDisableQuietMode(int, android.content.IntentSender)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        android.content.IntentSender r1, $r15;
        android.content.Intent r2, $r7;
        android.content.Context $r4, $r9, $r13, $r18;
        java.lang.Object $r5;
        android.app.KeyguardManager $r6;
        java.lang.String $r10;
        android.app.PendingIntent $r14;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.IntentSender;

        $r4 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("keyguard");

        $r6 = (android.app.KeyguardManager) $r5;

        r2 = virtualinvoke $r6.<android.app.KeyguardManager: android.content.Intent createConfirmDeviceCredentialIntent(java.lang.CharSequence,java.lang.CharSequence,int)>(null, null, i0);

        if r2 != null goto label1;

        return;

     label1:
        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>(java.lang.String)>("com.android.server.pm.DISABLE_QUIET_MODE_AFTER_UNLOCK");

        if r1 == null goto label2;

        virtualinvoke $r7.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.INTENT", r1);

     label2:
        virtualinvoke $r7.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.USER_ID", i0);

        $r9 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r10 = virtualinvoke $r9.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke $r7.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r10);

        virtualinvoke $r7.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        $r13 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r14 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r13, 0, $r7, 1409286144);

        $r15 = virtualinvoke $r14.<android.app.PendingIntent: android.content.IntentSender getIntentSender()>();

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.INTENT", $r15);

        virtualinvoke r2.<android.content.Intent: android.content.Intent setFlags(int)>(276824064);

        $r18 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        virtualinvoke $r18.<android.content.Context: void startActivity(android.content.Intent)>(r2);

        return;
    }

    private void throwCheckedUserOperationException(java.lang.String, int) throws android.os.UserManager$CheckedUserOperationException
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1;
        int i0;
        android.os.UserManager$CheckedUserOperationException $r2;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", r1);

        $r2 = new android.os.UserManager$CheckedUserOperationException;

        specialinvoke $r2.<android.os.UserManager$CheckedUserOperationException: void <init>(java.lang.String,int)>(r1, i0);

        throw $r2;
    }

    private boolean updateLocalRestrictionsForTargetUsersLR(int, com.android.server.pm.RestrictionsSet, java.util.List)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, i1;
        com.android.server.pm.RestrictionsSet r1, $r6;
        java.util.Iterator r2;
        android.os.Bundle r3, $r7, r9;
        boolean $z0, $z1, z2;
        java.lang.Object $r4;
        java.lang.Integer $r5;
        java.util.List r8;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.pm.RestrictionsSet;

        r8 := @parameter2: java.util.List;

        z2 = 0;

        r2 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.Integer) $r4;

        i1 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        r3 = virtualinvoke r1.<com.android.server.pm.RestrictionsSet: android.os.Bundle getRestrictions(int)>(i1);

        r9 = r3;

        if r3 != null goto label2;

        $r7 = new android.os.Bundle;

        specialinvoke $r7.<android.os.Bundle: void <init>()>();

        r9 = $r7;

     label2:
        $r6 = specialinvoke r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet getDevicePolicyLocalRestrictionsForTargetUserLR(int)>(i1);

        $z1 = virtualinvoke $r6.<com.android.server.pm.RestrictionsSet: boolean updateRestrictions(int,android.os.Bundle)>(i0, r9);

        if $z1 == 0 goto label3;

        z2 = 1;

     label3:
        goto label1;

     label4:
        return z2;
    }

    private void updateUserIds()
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.Object r1, $r5, $r9;
        int i0, $i1, i2, i3, i4, i5, i6, i7;
        int[] r2;
        android.util.SparseArray $r3, $r4, $r7, $r8;
        com.android.server.pm.UserManagerService$UserData $r6, $r10;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Throwable $r11;
        android.content.pm.UserInfo r12, r13;

        r0 := @this: com.android.server.pm.UserManagerService;

        i2 = 0;

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        i0 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

     label02:
        i3 = 0;

     label03:
        if i3 >= i0 goto label11;

     label04:
        $r8 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r9 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        $r10 = (com.android.server.pm.UserManagerService$UserData) $r9;

        r12 = $r10.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

     label05:
        i4 = i2;

     label06:
        $z2 = r12.<android.content.pm.UserInfo: boolean partial>;

        if $z2 != 0 goto label10;

     label07:
        i4 = i2;

     label08:
        $z3 = r12.<android.content.pm.UserInfo: boolean preCreated>;

        if $z3 != 0 goto label10;

     label09:
        i4 = i2 + 1;

     label10:
        i3 = i3 + 1;

        i2 = i4;

        goto label03;

     label11:
        r2 = newarray (int)[i2];

     label12:
        i5 = 0;

        i6 = 0;

     label13:
        if i6 >= i0 goto label21;

     label14:
        $r4 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i6);

        $r6 = (com.android.server.pm.UserManagerService$UserData) $r5;

        r13 = $r6.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

     label15:
        i7 = i5;

     label16:
        $z0 = r13.<android.content.pm.UserInfo: boolean partial>;

        if $z0 != 0 goto label20;

     label17:
        i7 = i5;

     label18:
        $z1 = r13.<android.content.pm.UserInfo: boolean preCreated>;

        if $z1 != 0 goto label20;

        $r7 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i1 = virtualinvoke $r7.<android.util.SparseArray: int keyAt(int)>(i6);

        r2[i5] = $i1;

     label19:
        i7 = i5 + 1;

     label20:
        i6 = i6 + 1;

        i5 = i7;

        goto label13;

     label21:
        r0.<com.android.server.pm.UserManagerService: int[] mUserIds> = r2;

        exitmonitor r1;

     label22:
        return;

     label23:
        $r11 := @caughtexception;

     label24:
        exitmonitor r1;

     label25:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label23;
        catch java.lang.Throwable from label04 to label05 with label23;
        catch java.lang.Throwable from label06 to label07 with label23;
        catch java.lang.Throwable from label08 to label09 with label23;
        catch java.lang.Throwable from label11 to label12 with label23;
        catch java.lang.Throwable from label14 to label15 with label23;
        catch java.lang.Throwable from label16 to label17 with label23;
        catch java.lang.Throwable from label18 to label19 with label23;
        catch java.lang.Throwable from label21 to label22 with label23;
        catch java.lang.Throwable from label24 to label25 with label23;
    }

    private void updateUserRestrictionsInternalLR(android.os.Bundle, int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        android.os.Bundle r1, r2, $r4, $r5, $r11, r14, r15;
        com.android.server.pm.RestrictionsSet $r3, $r6, $r9, $r10, $r12, $r16;
        com.android.server.pm.UserManagerService$2 $r7;
        android.os.Handler $r8;
        boolean $z4, z5, z6;
        com.android.server.pm.UserManagerService$UserData $r13;
        com.android.internal.app.IAppOpsService $r17;

        r0 := @this: com.android.server.pm.UserManagerService;

        r14 := @parameter0: android.os.Bundle;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet mAppliedUserRestrictions>;

        $r4 = virtualinvoke $r3.<com.android.server.pm.RestrictionsSet: android.os.Bundle getRestrictions(int)>(i0);

        r1 = staticinvoke <com.android.server.pm.UserRestrictionsUtils: android.os.Bundle nonNull(android.os.Bundle)>($r4);

        if r14 == null goto label5;

        $r9 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet mBaseUserRestrictions>;

        r2 = virtualinvoke $r9.<com.android.server.pm.RestrictionsSet: android.os.Bundle getRestrictions(int)>(i0);

        if r2 == r14 goto label1;

        z5 = 1;

        goto label2;

     label1:
        z5 = 0;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean)>(z5);

        $r10 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet mCachedEffectiveUserRestrictions>;

        $r11 = virtualinvoke $r10.<com.android.server.pm.RestrictionsSet: android.os.Bundle getRestrictions(int)>(i0);

        if $r11 == r14 goto label3;

        z6 = 1;

        goto label4;

     label3:
        z6 = 0;

     label4:
        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean)>(z6);

        $r12 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet mBaseUserRestrictions>;

        $z4 = virtualinvoke $r12.<com.android.server.pm.RestrictionsSet: boolean updateRestrictions(int,android.os.Bundle)>(i0, r14);

        if $z4 == 0 goto label5;

        $r13 = specialinvoke r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$UserData getUserDataNoChecks(int)>(i0);

        specialinvoke r0.<com.android.server.pm.UserManagerService: void scheduleWriteUser(com.android.server.pm.UserManagerService$UserData)>($r13);

     label5:
        r15 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.os.Bundle computeEffectiveUserRestrictionsLR(int)>(i0);

        $r16 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet mCachedEffectiveUserRestrictions>;

        virtualinvoke $r16.<com.android.server.pm.RestrictionsSet: boolean updateRestrictions(int,android.os.Bundle)>(i0, r15);

        $r17 = r0.<com.android.server.pm.UserManagerService: com.android.internal.app.IAppOpsService mAppOpsService>;

        if $r17 == null goto label6;

        $r8 = r0.<com.android.server.pm.UserManagerService: android.os.Handler mHandler>;

        $r7 = new com.android.server.pm.UserManagerService$2;

        specialinvoke $r7.<com.android.server.pm.UserManagerService$2: void <init>(com.android.server.pm.UserManagerService,android.os.Bundle,int)>(r0, r15, i0);

        virtualinvoke $r8.<android.os.Handler: boolean post(java.lang.Runnable)>($r7);

     label6:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void propagateUserRestrictionsLR(int,android.os.Bundle,android.os.Bundle)>(i0, r15, r1);

        $r6 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet mAppliedUserRestrictions>;

        $r5 = new android.os.Bundle;

        specialinvoke $r5.<android.os.Bundle: void <init>(android.os.Bundle)>(r15);

        virtualinvoke $r6.<com.android.server.pm.RestrictionsSet: boolean updateRestrictions(int,android.os.Bundle)>(i0, $r5);

        return;
    }

    private void upgradeIfNecessaryLP(android.os.Bundle)
    {
        com.android.server.pm.UserManagerService r0;
        android.os.Bundle r1;
        int $i0;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: android.os.Bundle;

        $i0 = r0.<com.android.server.pm.UserManagerService: int mUserVersion>;

        virtualinvoke r0.<com.android.server.pm.UserManagerService: void upgradeIfNecessaryLP(android.os.Bundle,int)>(r1, $i0);

        return;
    }

    private android.content.pm.UserInfo userWithName(android.content.pm.UserInfo)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String $r1, $r3;
        int $i0;
        android.content.pm.UserInfo $r2, r4;

        r0 := @this: com.android.server.pm.UserManagerService;

        r4 := @parameter0: android.content.pm.UserInfo;

        if r4 == null goto label1;

        $r1 = r4.<android.content.pm.UserInfo: java.lang.String name>;

        if $r1 != null goto label1;

        $i0 = r4.<android.content.pm.UserInfo: int id>;

        if $i0 != 0 goto label1;

        $r2 = new android.content.pm.UserInfo;

        specialinvoke $r2.<android.content.pm.UserInfo: void <init>(android.content.pm.UserInfo)>(r4);

        $r3 = specialinvoke r0.<com.android.server.pm.UserManagerService: java.lang.String getOwnerName()>();

        $r2.<android.content.pm.UserInfo: java.lang.String name> = $r3;

        return $r2;

     label1:
        return r4;
    }

    private void verifyCallingPackage(java.lang.String, int)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1, $r10;
        int i0, $i1, $i2;
        com.android.server.pm.PackageManagerService $r3;
        java.lang.StringBuilder $r4;
        java.lang.SecurityException $r9;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.PackageManagerService mPm>;

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $i2 = virtualinvoke $r3.<com.android.server.pm.PackageManagerService: int getPackageUid(java.lang.String,int,int)>(r1, 0, $i1);

        if $i2 != i0 goto label1;

        return;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Specified package ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not match the calling uid ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = new java.lang.SecurityException;

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.SecurityException: void <init>(java.lang.String)>($r10);

        throw $r9;
    }

    private void writeAllTargetUsersLP(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, i1, $i2, i3;
        android.util.SparseArray $r1, $r2, $r3;
        java.lang.Object $r4;
        com.android.server.pm.RestrictionsSet $r5;
        boolean $z0;
        com.android.server.pm.UserManagerService$UserData $r6;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        i3 = 0;

     label1:
        $r1 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mDevicePolicyLocalUserRestrictions>;

        $i2 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        if i3 >= $i2 goto label3;

        $r2 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mDevicePolicyLocalUserRestrictions>;

        i1 = virtualinvoke $r2.<android.util.SparseArray: int keyAt(int)>(i3);

        $r3 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mDevicePolicyLocalUserRestrictions>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        $r5 = (com.android.server.pm.RestrictionsSet) $r4;

        $z0 = virtualinvoke $r5.<com.android.server.pm.RestrictionsSet: boolean containsKey(int)>(i0);

        if $z0 == 0 goto label2;

        $r6 = specialinvoke r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$UserData getUserDataNoChecks(int)>(i1);

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLP(com.android.server.pm.UserManagerService$UserData)>($r6);

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return;
    }

    static void writeApplicationRestrictionsLAr(android.os.Bundle, android.util.AtomicFile)
    {
        android.util.AtomicFile r0;
        java.io.FileOutputStream r1, r11;
        java.io.BufferedOutputStream r2;
        com.android.internal.util.FastXmlSerializer r3;
        java.nio.charset.Charset $r4;
        java.lang.String $r5;
        java.lang.Boolean $r6;
        java.lang.Exception $r9;
        android.os.Bundle r10;

        r10 := @parameter0: android.os.Bundle;

        r0 := @parameter1: android.util.AtomicFile;

        r11 = null;

     label01:
        r1 = virtualinvoke r0.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

     label02:
        r11 = r1;

     label03:
        r2 = new java.io.BufferedOutputStream;

     label04:
        r11 = r1;

     label05:
        specialinvoke r2.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(r1);

     label06:
        r11 = r1;

     label07:
        r3 = new com.android.internal.util.FastXmlSerializer;

     label08:
        r11 = r1;

     label09:
        specialinvoke r3.<com.android.internal.util.FastXmlSerializer: void <init>()>();

     label10:
        r11 = r1;

     label11:
        $r4 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r5 = virtualinvoke $r4.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r2, $r5);

     label12:
        r11 = r1;

     label13:
        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r6);

     label14:
        r11 = r1;

     label15:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

     label16:
        r11 = r1;

     label17:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "restrictions");

     label18:
        r11 = r1;

     label19:
        staticinvoke <com.android.server.pm.UserManagerService: void writeBundle(android.os.Bundle,org.xmlpull.v1.XmlSerializer)>(r10, r3);

     label20:
        r11 = r1;

     label21:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "restrictions");

     label22:
        r11 = r1;

     label23:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

     label24:
        r11 = r1;

     label25:
        virtualinvoke r0.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r1);

     label26:
        goto label28;

     label27:
        $r9 := @caughtexception;

        virtualinvoke r0.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r11);

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("UserManagerService", "Error writing application restrictions list", $r9);

     label28:
        return;

        catch java.lang.Exception from label01 to label02 with label27;
        catch java.lang.Exception from label03 to label04 with label27;
        catch java.lang.Exception from label05 to label06 with label27;
        catch java.lang.Exception from label07 to label08 with label27;
        catch java.lang.Exception from label09 to label10 with label27;
        catch java.lang.Exception from label11 to label12 with label27;
        catch java.lang.Exception from label13 to label14 with label27;
        catch java.lang.Exception from label15 to label16 with label27;
        catch java.lang.Exception from label17 to label18 with label27;
        catch java.lang.Exception from label19 to label20 with label27;
        catch java.lang.Exception from label21 to label22 with label27;
        catch java.lang.Exception from label23 to label24 with label27;
        catch java.lang.Exception from label25 to label26 with label27;
    }

    private static void writeApplicationRestrictionsLAr(java.lang.String, android.os.Bundle, int)
    {
        java.lang.String r0, $r5;
        android.os.Bundle r1;
        int i0;
        android.util.AtomicFile $r2;
        java.io.File $r3, $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.Bundle;

        i0 := @parameter2: int;

        $r2 = new android.util.AtomicFile;

        $r3 = new java.io.File;

        $r4 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>(i0);

        $r5 = staticinvoke <com.android.server.pm.UserManagerService: java.lang.String packageToRestrictionsFileName(java.lang.String)>(r0);

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, $r5);

        specialinvoke $r2.<android.util.AtomicFile: void <init>(java.io.File)>($r3);

        staticinvoke <com.android.server.pm.UserManagerService: void writeApplicationRestrictionsLAr(android.os.Bundle,android.util.AtomicFile)>(r1, $r2);

        return;
    }

    private void writeBitmapLP(android.content.pm.UserInfo, android.graphics.Bitmap)
    {
        com.android.server.pm.UserManagerService r0;
        android.graphics.Bitmap r1;
        java.io.File r2, r3, $r5, r12;
        java.io.FileOutputStream r4;
        int $i0;
        java.lang.String $r6, $r7, $r8;
        boolean $z0, $z1, $z3, $z4;
        java.lang.Throwable $r9, $r10;
        android.content.pm.UserInfo r11;
        android.graphics.Bitmap$CompressFormat r13;

        r0 := @this: com.android.server.pm.UserManagerService;

        r11 := @parameter0: android.content.pm.UserInfo;

        r1 := @parameter1: android.graphics.Bitmap;

     label01:
        r12 = new java.io.File;

        $r5 = r0.<com.android.server.pm.UserManagerService: java.io.File mUsersDir>;

        $i0 = r11.<android.content.pm.UserInfo: int id>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        specialinvoke r12.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, $r6);

        r2 = new java.io.File;

        specialinvoke r2.<java.io.File: void <init>(java.io.File,java.lang.String)>(r12, "photo.png");

        r3 = new java.io.File;

        specialinvoke r3.<java.io.File: void <init>(java.io.File,java.lang.String)>(r12, "photo.png.tmp");

        $z0 = virtualinvoke r12.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label03;

        virtualinvoke r12.<java.io.File: boolean mkdir()>();

     label02:
        $r8 = virtualinvoke r12.<java.io.File: java.lang.String getPath()>();

        staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r8, 505, -1, -1);

     label03:
        r13 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG>;

        r4 = new java.io.FileOutputStream;

        specialinvoke r4.<java.io.FileOutputStream: void <init>(java.io.File)>(r3);

        $z1 = virtualinvoke r1.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>(r13, 100, r4);

        if $z1 == 0 goto label04;

        $z3 = virtualinvoke r3.<java.io.File: boolean renameTo(java.io.File)>(r2);

        if $z3 == 0 goto label04;

        $z4 = staticinvoke <android.os.SELinux: boolean restorecon(java.io.File)>(r2);

        if $z4 == 0 goto label04;

        $r7 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>();

        r11.<android.content.pm.UserInfo: java.lang.String iconPath> = $r7;

     label04:
        virtualinvoke r4.<java.io.FileOutputStream: void close()>();

     label05:
        goto label07;

     label06:
        $r10 := @caughtexception;

     label07:
        virtualinvoke r3.<java.io.File: boolean delete()>();

     label08:
        goto label10;

     label09:
        $r9 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("UserManagerService", "Error setting photo for user ", $r9);

     label10:
        return;

        catch java.io.FileNotFoundException from label01 to label02 with label09;
        catch java.io.FileNotFoundException from label02 to label03 with label09;
        catch java.io.FileNotFoundException from label03 to label04 with label09;
        catch java.io.IOException from label04 to label05 with label06;
        catch java.io.FileNotFoundException from label04 to label05 with label09;
        catch java.io.FileNotFoundException from label07 to label08 with label09;
    }

    private static void writeBundle(android.os.Bundle, org.xmlpull.v1.XmlSerializer) throws java.io.IOException
    {
        android.os.Bundle r0, $r20, $r23;
        org.xmlpull.v1.XmlSerializer r1;
        java.util.Iterator r2;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        int i0, $i1, i3, i4, i5;
        java.util.Set $r3;
        java.lang.Object $r4, r31;
        java.lang.String $r11, $r25, $r28, r30, r32, r36;
        java.lang.IllegalArgumentException $r17;
        android.os.Parcelable[] r33;
        android.os.Parcelable r34;
        java.lang.String[] r35;

        r0 := @parameter0: android.os.Bundle;

        r1 := @parameter1: org.xmlpull.v1.XmlSerializer;

        $r3 = virtualinvoke r0.<android.os.Bundle: java.util.Set keySet()>();

        r2 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label16;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r30 = (java.lang.String) $r4;

        r31 = virtualinvoke r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r30);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "entry");

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "key", r30);

        $z2 = r31 instanceof java.lang.Boolean;

        if $z2 == 0 goto label02;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "b");

        $r28 = virtualinvoke r31.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r28);

        goto label15;

     label02:
        $z3 = r31 instanceof java.lang.Integer;

        if $z3 == 0 goto label03;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "i");

        $r25 = virtualinvoke r31.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r25);

        goto label15;

     label03:
        r32 = "";

        if r31 == null goto label13;

        $z4 = r31 instanceof java.lang.String;

        if $z4 == 0 goto label04;

        goto label13;

     label04:
        $z5 = r31 instanceof android.os.Bundle;

        if $z5 == 0 goto label05;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "B");

        $r23 = (android.os.Bundle) r31;

        staticinvoke <com.android.server.pm.UserManagerService: void writeBundle(android.os.Bundle,org.xmlpull.v1.XmlSerializer)>($r23, r1);

        goto label15;

     label05:
        z0 = r31 instanceof android.os.Parcelable[];

        i3 = 0;

        if z0 == 0 goto label09;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "BA");

        r33 = (android.os.Parcelable[]) r31;

        i4 = lengthof r33;

     label06:
        if i3 >= i4 goto label08;

        r34 = r33[i3];

        $z6 = r34 instanceof android.os.Bundle;

        if $z6 == 0 goto label07;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "entry");

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "B");

        $r20 = (android.os.Bundle) r34;

        staticinvoke <com.android.server.pm.UserManagerService: void writeBundle(android.os.Bundle,org.xmlpull.v1.XmlSerializer)>($r20, r1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "entry");

        i3 = i3 + 1;

        goto label06;

     label07:
        $r17 = new java.lang.IllegalArgumentException;

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("bundle-array can only hold Bundles");

        throw $r17;

     label08:
        goto label15;

     label09:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "sa");

        r35 = (java.lang.String[]) r31;

        $i1 = lengthof r35;

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "m", $r11);

        i0 = lengthof r35;

        i5 = 0;

     label10:
        if i5 >= i0 goto label15;

        r36 = r35[i5];

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "value");

        if r36 == null goto label11;

        goto label12;

     label11:
        r36 = "";

     label12:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>(r36);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "value");

        i5 = i5 + 1;

        goto label10;

     label13:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "s");

        if r31 == null goto label14;

        r32 = (java.lang.String) r31;

     label14:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>(r32);

     label15:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "entry");

        goto label01;

     label16:
        return;
    }

    private void writeUserLP(com.android.server.pm.UserManagerService$UserData)
    {
        com.android.server.pm.UserManagerService r0;
        com.android.server.pm.UserManagerService$UserData r1;
        java.lang.StringBuilder $r2, $r10;
        android.content.pm.UserInfo $r3, $r12;
        int $i0, $i1;
        android.util.AtomicFile $r6;
        java.io.File $r7, r16;
        java.lang.String $r8, $r14;
        java.lang.Exception $r9;
        java.io.FileOutputStream r15, r19;
        java.io.BufferedOutputStream r20;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: com.android.server.pm.UserManagerService$UserData;

        r15 = null;

        r16 = r0.<com.android.server.pm.UserManagerService: java.io.File mUsersDir>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r1.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $i0 = $r3.<android.content.pm.UserInfo: int id>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".xml");

        $r6 = new android.util.AtomicFile;

        $r7 = new java.io.File;

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>(r16, $r8);

        specialinvoke $r6.<android.util.AtomicFile: void <init>(java.io.File)>($r7);

     label01:
        r19 = virtualinvoke $r6.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

     label02:
        r15 = r19;

     label03:
        r20 = new java.io.BufferedOutputStream;

     label04:
        r15 = r19;

     label05:
        specialinvoke r20.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(r19);

     label06:
        r15 = r19;

     label07:
        virtualinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLP(com.android.server.pm.UserManagerService$UserData,java.io.OutputStream)>(r1, r20);

     label08:
        r15 = r19;

     label09:
        virtualinvoke $r6.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r19);

     label10:
        goto label12;

     label11:
        $r9 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error writing user info ");

        $r12 = r1.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $i1 = $r12.<android.content.pm.UserInfo: int id>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("UserManagerService", $r14, $r9);

        virtualinvoke $r6.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r15);

     label12:
        return;

        catch java.lang.Exception from label01 to label02 with label11;
        catch java.lang.Exception from label03 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label11;
        catch java.lang.Exception from label07 to label08 with label11;
        catch java.lang.Exception from label09 to label10 with label11;
    }

    private void writeUserListLP()
    {
        com.android.server.pm.UserManagerService r0;
        int[] r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i9, i10;
        android.util.AtomicFile $r3;
        java.io.File $r4;
        java.nio.charset.Charset $r5;
        java.lang.String $r6, $r9, $r11, $r17, $r23;
        java.lang.Boolean $r7;
        android.os.Bundle $r14, r37;
        android.util.SparseArray $r20, $r26;
        java.lang.Object $r27, r38;
        com.android.server.pm.UserManagerService$UserData $r28;
        android.content.pm.UserInfo $r29;
        java.lang.Throwable $r30, $r32;
        java.lang.Exception $r31;
        java.io.FileOutputStream r33, r34;
        java.io.BufferedOutputStream r35;
        com.android.internal.util.FastXmlSerializer r36;

        r0 := @this: com.android.server.pm.UserManagerService;

        r33 = null;

        $r3 = new android.util.AtomicFile;

        $r4 = r0.<com.android.server.pm.UserManagerService: java.io.File mUserListFile>;

        specialinvoke $r3.<android.util.AtomicFile: void <init>(java.io.File)>($r4);

     label01:
        r34 = virtualinvoke $r3.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

     label02:
        r33 = r34;

     label03:
        r35 = new java.io.BufferedOutputStream;

     label04:
        r33 = r34;

     label05:
        specialinvoke r35.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(r34);

     label06:
        r33 = r34;

     label07:
        r36 = new com.android.internal.util.FastXmlSerializer;

     label08:
        r33 = r34;

     label09:
        specialinvoke r36.<com.android.internal.util.FastXmlSerializer: void <init>()>();

     label10:
        r33 = r34;

     label11:
        $r5 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r6 = virtualinvoke $r5.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r36.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r35, $r6);

     label12:
        r33 = r34;

     label13:
        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r36.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r7);

     label14:
        r33 = r34;

     label15:
        interfaceinvoke r36.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

     label16:
        r33 = r34;

     label17:
        interfaceinvoke r36.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "users");

     label18:
        r33 = r34;

     label19:
        $i2 = r0.<com.android.server.pm.UserManagerService: int mNextSerialNumber>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        interfaceinvoke r36.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "nextSerialNumber", $r9);

     label20:
        r33 = r34;

     label21:
        $i3 = r0.<com.android.server.pm.UserManagerService: int mUserVersion>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        interfaceinvoke r36.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "version", $r11);

     label22:
        r33 = r34;

     label23:
        interfaceinvoke r36.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "guestRestrictions");

     label24:
        r33 = r34;

     label25:
        r37 = r0.<com.android.server.pm.UserManagerService: android.os.Bundle mGuestRestrictions>;

     label26:
        r33 = r34;

     label27:
        entermonitor r37;

     label28:
        $r14 = r0.<com.android.server.pm.UserManagerService: android.os.Bundle mGuestRestrictions>;

        staticinvoke <com.android.server.pm.UserRestrictionsUtils: void writeRestrictions(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(r36, $r14, "restrictions");

        exitmonitor r37;

     label29:
        r33 = r34;

     label30:
        interfaceinvoke r36.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "guestRestrictions");

     label31:
        r33 = r34;

     label32:
        interfaceinvoke r36.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "deviceOwnerUserId");

     label33:
        r33 = r34;

     label34:
        $i4 = r0.<com.android.server.pm.UserManagerService: int mDeviceOwnerUserId>;

        $r17 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4);

        interfaceinvoke r36.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "id", $r17);

     label35:
        r33 = r34;

     label36:
        interfaceinvoke r36.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "deviceOwnerUserId");

     label37:
        r33 = r34;

     label38:
        r38 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

     label39:
        r33 = r34;

     label40:
        entermonitor r38;

     label41:
        $r20 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i5 = virtualinvoke $r20.<android.util.SparseArray: int size()>();

        r2 = newarray (int)[$i5];

     label42:
        i9 = 0;

     label43:
        $i6 = lengthof r2;

        if i9 >= $i6 goto label45;

        $r26 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r27 = virtualinvoke $r26.<android.util.SparseArray: java.lang.Object valueAt(int)>(i9);

        $r28 = (com.android.server.pm.UserManagerService$UserData) $r27;

        $r29 = $r28.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $i7 = $r29.<android.content.pm.UserInfo: int id>;

        r2[i9] = $i7;

     label44:
        i9 = i9 + 1;

        goto label43;

     label45:
        exitmonitor r38;

     label46:
        r33 = r34;

     label47:
        i0 = lengthof r2;

     label48:
        i10 = 0;

     label49:
        if i10 >= i0 goto label56;

        i1 = r2[i10];

        r33 = r34;

     label50:
        interfaceinvoke r36.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "user");

     label51:
        r33 = r34;

     label52:
        $r23 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i1);

        interfaceinvoke r36.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "id", $r23);

     label53:
        r33 = r34;

     label54:
        interfaceinvoke r36.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "user");

     label55:
        i10 = i10 + 1;

        goto label49;

     label56:
        r33 = r34;

     label57:
        interfaceinvoke r36.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "users");

     label58:
        r33 = r34;

     label59:
        interfaceinvoke r36.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

     label60:
        r33 = r34;

     label61:
        virtualinvoke $r3.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r34);

     label62:
        goto label72;

     label63:
        $r32 := @caughtexception;

     label64:
        exitmonitor r38;

     label65:
        r33 = r34;

     label66:
        throw $r32;

     label67:
        $r30 := @caughtexception;

     label68:
        exitmonitor r37;

     label69:
        r33 = r34;

     label70:
        throw $r30;

     label71:
        $r31 := @caughtexception;

        virtualinvoke $r3.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r33);

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", "Error writing user list");

     label72:
        return;

        catch java.lang.Exception from label01 to label02 with label71;
        catch java.lang.Exception from label03 to label04 with label71;
        catch java.lang.Exception from label05 to label06 with label71;
        catch java.lang.Exception from label07 to label08 with label71;
        catch java.lang.Exception from label09 to label10 with label71;
        catch java.lang.Exception from label11 to label12 with label71;
        catch java.lang.Exception from label13 to label14 with label71;
        catch java.lang.Exception from label15 to label16 with label71;
        catch java.lang.Exception from label17 to label18 with label71;
        catch java.lang.Exception from label19 to label20 with label71;
        catch java.lang.Exception from label21 to label22 with label71;
        catch java.lang.Exception from label23 to label24 with label71;
        catch java.lang.Exception from label25 to label26 with label71;
        catch java.lang.Exception from label27 to label28 with label71;
        catch java.lang.Throwable from label28 to label29 with label67;
        catch java.lang.Exception from label30 to label31 with label71;
        catch java.lang.Exception from label32 to label33 with label71;
        catch java.lang.Exception from label34 to label35 with label71;
        catch java.lang.Exception from label36 to label37 with label71;
        catch java.lang.Exception from label38 to label39 with label71;
        catch java.lang.Exception from label40 to label41 with label71;
        catch java.lang.Throwable from label41 to label42 with label63;
        catch java.lang.Throwable from label43 to label44 with label63;
        catch java.lang.Throwable from label45 to label46 with label63;
        catch java.lang.Exception from label47 to label48 with label71;
        catch java.lang.Exception from label50 to label51 with label71;
        catch java.lang.Exception from label52 to label53 with label71;
        catch java.lang.Exception from label54 to label55 with label71;
        catch java.lang.Exception from label57 to label58 with label71;
        catch java.lang.Exception from label59 to label60 with label71;
        catch java.lang.Exception from label61 to label62 with label71;
        catch java.lang.Throwable from label64 to label65 with label63;
        catch java.lang.Exception from label66 to label67 with label71;
        catch java.lang.Throwable from label68 to label69 with label67;
        catch java.lang.Exception from label70 to label71 with label71;
    }

    void addRemovingUserIdLocked(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, $i1;
        android.util.SparseBooleanArray $r1;
        java.util.LinkedList $r2, $r4, $r5;
        java.lang.Integer $r3;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        virtualinvoke $r1.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, 1);

        $r2 = r0.<com.android.server.pm.UserManagerService: java.util.LinkedList mRecentlyRemovedIds>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r3);

        $r4 = r0.<com.android.server.pm.UserManagerService: java.util.LinkedList mRecentlyRemovedIds>;

        $i1 = virtualinvoke $r4.<java.util.LinkedList: int size()>();

        if $i1 <= 100 goto label1;

        $r5 = r0.<com.android.server.pm.UserManagerService: java.util.LinkedList mRecentlyRemovedIds>;

        virtualinvoke $r5.<java.util.LinkedList: java.lang.Object removeFirst()>();

     label1:
        return;
    }

    public void addUserRestrictionsListener(android.os.IUserRestrictionsListener)
    {
        com.android.server.pm.UserManagerService r0;
        android.os.IUserRestrictionsListener r1;
        int $i0;
        java.lang.SecurityException $r2;
        com.android.server.pm._$$Lambda$UserManagerService$s1AxethOTPU7NQ5LXxyP4etLk7E $r3;
        com.android.server.pm.UserManagerService$LocalService $r4;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: android.os.IUserRestrictionsListener;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i0 != 1000 goto label1;

        $r4 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$LocalService mLocalService>;

        $r3 = new com.android.server.pm._$$Lambda$UserManagerService$s1AxethOTPU7NQ5LXxyP4etLk7E;

        specialinvoke $r3.<com.android.server.pm._$$Lambda$UserManagerService$s1AxethOTPU7NQ5LXxyP4etLk7E: void <init>(android.os.IUserRestrictionsListener)>(r1);

        virtualinvoke $r4.<com.android.server.pm.UserManagerService$LocalService: void addUserRestrictionsListener(android.os.UserManagerInternal$UserRestrictionsListener)>($r3);

        return;

     label1:
        $r2 = new java.lang.SecurityException;

        specialinvoke $r2.<java.lang.SecurityException: void <init>(java.lang.String)>("Non-system caller");

        throw $r2;
    }

    void applyUserRestrictionsForAllUsersLR()
    {
        com.android.server.pm.UserManagerService r0;
        com.android.server.pm.RestrictionsSet $r2;
        com.android.server.pm.UserManagerService$4 $r3;
        android.os.Handler $r4;

        r0 := @this: com.android.server.pm.UserManagerService;

        $r2 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet mCachedEffectiveUserRestrictions>;

        virtualinvoke $r2.<com.android.server.pm.RestrictionsSet: void removeAllRestrictions()>();

        $r3 = new com.android.server.pm.UserManagerService$4;

        specialinvoke $r3.<com.android.server.pm.UserManagerService$4: void <init>(com.android.server.pm.UserManagerService)>(r0);

        $r4 = r0.<com.android.server.pm.UserManagerService: android.os.Handler mHandler>;

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    void applyUserRestrictionsLR(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void updateUserRestrictionsInternalLR(android.os.Bundle,int)>(null, i0);

        return;
    }

    public boolean canAddMoreManagedProfiles(int, boolean)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        boolean z0, $z1;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $z1 = virtualinvoke r0.<com.android.server.pm.UserManagerService: boolean canAddMoreProfilesToUser(java.lang.String,int,boolean)>("android.os.usertype.profile.MANAGED", i0, z0);

        return $z1;
    }

    public boolean canAddMoreProfilesToUser(java.lang.String, int, boolean)
    {
        com.android.server.pm.UserManagerService r0;
        com.android.server.pm.UserTypeDetails r1;
        boolean z1, $z2, $z3, z4, z5;
        java.lang.Object r2, $r5;
        android.content.pm.UserInfo r3;
        int i0, i1, $i2, $i3, i4, $i6, i7;
        android.util.ArrayMap $r4;
        int[] $r6;
        android.content.Context $r7;
        android.content.pm.PackageManager $r8;
        java.lang.Throwable $r9;
        java.lang.String r10;
        byte b5;

        r0 := @this: com.android.server.pm.UserManagerService;

        r10 := @parameter0: java.lang.String;

        i4 := @parameter1: int;

        z4 := @parameter2: boolean;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("check if more profiles can be added.");

        $r4 = r0.<com.android.server.pm.UserManagerService: android.util.ArrayMap mUserTypes>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r10);

        r1 = (com.android.server.pm.UserTypeDetails) $r5;

        if r1 != null goto label01;

        return 0;

     label01:
        z1 = virtualinvoke r1.<com.android.server.pm.UserTypeDetails: boolean isManagedProfile()>();

        if z1 == 0 goto label02;

        $r7 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $z3 = virtualinvoke $r8.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>("android.software.managed_users");

        if $z3 != 0 goto label02;

        return 0;

     label02:
        r2 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r2;

     label03:
        r3 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLU(int)>(i4);

     label04:
        if r3 == null goto label24;

     label05:
        $z2 = virtualinvoke r3.<android.content.pm.UserInfo: boolean canHaveProfile()>();

        if $z2 != 0 goto label07;

     label06:
        goto label24;

     label07:
        i0 = staticinvoke <com.android.server.pm.UserManagerService: int getMaxUsersOfTypePerParent(com.android.server.pm.UserTypeDetails)>(r1);

     label08:
        if i0 == -1 goto label22;

     label09:
        $r6 = virtualinvoke r0.<com.android.server.pm.UserManagerService: int[] getProfileIds(int,java.lang.String,boolean)>(i4, r10, 0);

        i1 = lengthof $r6;

     label10:
        if i1 <= 0 goto label11;

        if z4 == 0 goto label11;

        b5 = 1;

        goto label12;

     label11:
        b5 = 0;

     label12:
        $i6 = i1 - b5;

        if $i6 < i0 goto label15;

     label13:
        exitmonitor r2;

     label14:
        return 0;

     label15:
        if z1 == 0 goto label22;

     label16:
        $i2 = specialinvoke r0.<com.android.server.pm.UserManagerService: int getAliveUsersExcludingGuestsCountLU()>();

        i7 = $i2 - b5;

     label17:
        if i7 == 1 goto label19;

        z5 = 0;

     label18:
        $i3 = staticinvoke <android.os.UserManager: int getMaxSupportedUsers()>();

        if i7 >= $i3 goto label20;

     label19:
        z5 = 1;

     label20:
        exitmonitor r2;

     label21:
        return z5;

     label22:
        exitmonitor r2;

     label23:
        return 1;

     label24:
        exitmonitor r2;

     label25:
        return 0;

     label26:
        $r9 := @caughtexception;

     label27:
        exitmonitor r2;

     label28:
        throw $r9;

        catch java.lang.Throwable from label03 to label04 with label26;
        catch java.lang.Throwable from label05 to label06 with label26;
        catch java.lang.Throwable from label07 to label08 with label26;
        catch java.lang.Throwable from label09 to label10 with label26;
        catch java.lang.Throwable from label13 to label14 with label26;
        catch java.lang.Throwable from label16 to label17 with label26;
        catch java.lang.Throwable from label18 to label19 with label26;
        catch java.lang.Throwable from label20 to label21 with label26;
        catch java.lang.Throwable from label22 to label23 with label26;
        catch java.lang.Throwable from label24 to label25 with label26;
        catch java.lang.Throwable from label27 to label28 with label26;
    }

    public boolean canHaveRestrictedProfile(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        java.lang.Object r1;
        boolean $z1, $z2, $z3, $z4, z5;
        android.util.SparseBooleanArray $r2;
        java.lang.Throwable $r3;
        android.content.pm.UserInfo r4;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("canHaveRestrictedProfile");

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r1;

     label01:
        r4 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLU(int)>(i0);

     label02:
        if r4 == null goto label14;

     label03:
        $z1 = virtualinvoke r4.<android.content.pm.UserInfo: boolean canHaveProfile()>();

        if $z1 != 0 goto label05;

     label04:
        goto label14;

     label05:
        $z2 = virtualinvoke r4.<android.content.pm.UserInfo: boolean isAdmin()>();

        if $z2 != 0 goto label07;

        exitmonitor r1;

     label06:
        return 0;

     label07:
        z5 = 0;

     label08:
        $z3 = r0.<com.android.server.pm.UserManagerService: boolean mIsDeviceManaged>;

        if $z3 != 0 goto label12;

     label09:
        z5 = 0;

     label10:
        $r2 = r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mIsUserManaged>;

        $z4 = virtualinvoke $r2.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        if $z4 != 0 goto label12;

     label11:
        z5 = 1;

     label12:
        exitmonitor r1;

     label13:
        return z5;

     label14:
        exitmonitor r1;

     label15:
        return 0;

     label16:
        $r3 := @caughtexception;

     label17:
        exitmonitor r1;

     label18:
        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    void cleanupPartialUsers()
    {
        com.android.server.pm.UserManagerService r0;
        java.util.ArrayList $r1;
        android.util.SparseArray $r2, $r12;
        java.lang.Object $r3, $r13, r17;
        java.lang.StringBuilder $r4;
        int $i0, $i2, $i3, i4, i5, i6, i7;
        java.lang.String $r8, $r11;
        com.android.server.pm.UserManagerService$UserData $r14;
        boolean $z0, $z2, $z3, $z4;
        java.lang.Throwable $r15;
        android.content.pm.UserInfo r18, r19;

        r0 := @this: com.android.server.pm.UserManagerService;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r17 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r17;

     label01:
        $r2 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        i4 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

     label02:
        i5 = 0;

     label03:
        if i5 >= i4 goto label08;

     label04:
        $r12 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r13 = virtualinvoke $r12.<android.util.SparseArray: java.lang.Object valueAt(int)>(i5);

        $r14 = (com.android.server.pm.UserManagerService$UserData) $r13;

        r18 = $r14.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $z0 = r18.<android.content.pm.UserInfo: boolean partial>;

        if $z0 != 0 goto label05;

        $z2 = r18.<android.content.pm.UserInfo: boolean guestToRemove>;

        if $z2 != 0 goto label05;

        $z3 = virtualinvoke r18.<android.content.pm.UserInfo: boolean isEphemeral()>();

        if $z3 == 0 goto label07;

        $z4 = r18.<android.content.pm.UserInfo: boolean preCreated>;

        if $z4 != 0 goto label07;

     label05:
        if i5 == 0 goto label07;

     label06:
        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r18);

        $i3 = r18.<android.content.pm.UserInfo: int id>;

        virtualinvoke r0.<com.android.server.pm.UserManagerService: void addRemovingUserIdLocked(int)>($i3);

        r18.<android.content.pm.UserInfo: boolean partial> = 1;

     label07:
        i5 = i5 + 1;

        goto label03;

     label08:
        exitmonitor r17;

     label09:
        i6 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i7 = 0;

     label10:
        if i7 >= i6 goto label11;

        $r3 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r19 = (android.content.pm.UserInfo) $r3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing partially created user ");

        $i0 = r19.<android.content.pm.UserInfo: int id>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (name=");

        $r8 = r19.<android.content.pm.UserInfo: java.lang.String name>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r11 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserManagerService", $r11);

        $i2 = r19.<android.content.pm.UserInfo: int id>;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void removeUserState(int)>($i2);

        i7 = i7 + 1;

        goto label10;

     label11:
        return;

     label12:
        $r15 := @caughtexception;

     label13:
        exitmonitor r17;

     label14:
        throw $r15;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    void cleanupPreCreatedUsers()
    {
        com.android.server.pm.UserManagerService r0;
        android.util.SparseArray $r1, $r7;
        java.lang.Object $r2, $r8, r11;
        java.lang.StringBuilder $r3;
        int $i0, $i2, $i3, $i4, $i5, i6, i7, i8, i9;
        java.lang.String $r6;
        com.android.server.pm.UserManagerService$UserData $r9;
        boolean $z0;
        java.lang.Throwable $r10;
        java.util.ArrayList r12;
        android.content.pm.UserInfo r13, r14;

        r0 := @this: com.android.server.pm.UserManagerService;

        r11 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r11;

     label01:
        $r1 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        i6 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        r12 = new java.util.ArrayList;

        specialinvoke r12.<java.util.ArrayList: void <init>(int)>(i6);

     label02:
        i7 = 0;

     label03:
        if i7 >= i6 goto label06;

     label04:
        $r7 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i7);

        $r9 = (com.android.server.pm.UserManagerService$UserData) $r8;

        r13 = $r9.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $z0 = r13.<android.content.pm.UserInfo: boolean preCreated>;

        if $z0 == 0 goto label05;

        virtualinvoke r12.<java.util.ArrayList: boolean add(java.lang.Object)>(r13);

        $i3 = r13.<android.content.pm.UserInfo: int id>;

        virtualinvoke r0.<com.android.server.pm.UserManagerService: void addRemovingUserIdLocked(int)>($i3);

        $i4 = r13.<android.content.pm.UserInfo: int flags>;

        $i5 = $i4 | 64;

        r13.<android.content.pm.UserInfo: int flags> = $i5;

        r13.<android.content.pm.UserInfo: boolean partial> = 1;

     label05:
        i7 = i7 + 1;

        goto label03;

     label06:
        exitmonitor r11;

     label07:
        i8 = virtualinvoke r12.<java.util.ArrayList: int size()>();

        i9 = 0;

     label08:
        if i9 >= i8 goto label09;

        $r2 = virtualinvoke r12.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        r14 = (android.content.pm.UserInfo) $r2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing pre-created user ");

        $i0 = r14.<android.content.pm.UserInfo: int id>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("UserManagerService", $r6);

        $i2 = r14.<android.content.pm.UserInfo: int id>;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void removeUserState(int)>($i2);

        i9 = i9 + 1;

        goto label08;

     label09:
        return;

     label10:
        $r10 := @caughtexception;

     label11:
        exitmonitor r11;

     label12:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void clearSeedAccountData() throws android.os.RemoteException
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.Object r1, r4;
        int $i0;
        java.lang.Throwable $r2, $r3;
        com.android.server.pm.UserManagerService$UserData r5;

        r0 := @this: com.android.server.pm.UserManagerService;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("Cannot clear seed account information");

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r1;

     label01:
        r4 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r4;

     label02:
        $i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        r5 = specialinvoke r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$UserData getUserDataLU(int)>($i0);

     label03:
        if r5 != null goto label07;

     label04:
        exitmonitor r4;

     label05:
        exitmonitor r1;

     label06:
        return;

     label07:
        virtualinvoke r5.<com.android.server.pm.UserManagerService$UserData: void clearSeedAccountData()>();

        exitmonitor r4;

     label08:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLP(com.android.server.pm.UserManagerService$UserData)>(r5);

        exitmonitor r1;

     label09:
        return;

     label10:
        $r2 := @caughtexception;

     label11:
        exitmonitor r4;

     label12:
        throw $r2;

     label13:
        $r3 := @caughtexception;

     label14:
        exitmonitor r1;

     label15:
        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label12 to label13 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public android.content.pm.UserInfo createProfileForUserEvenWhenDisallowedWithThrow(java.lang.String, java.lang.String, int, int, java.lang.String[]) throws android.os.ServiceSpecificException
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1, r5;
        int i0, i1;
        java.lang.String[] r2;
        android.os.UserManager$CheckedUserOperationException $r3;
        android.os.ServiceSpecificException $r4;
        android.content.pm.UserInfo r6;

        r0 := @this: com.android.server.pm.UserManagerService;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: java.lang.String[];

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageOrCreateUsersPermission(int)>(i0);

     label1:
        r6 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo createUserInternalUnchecked(java.lang.String,java.lang.String,int,int,boolean,java.lang.String[])>(r5, r1, i0, i1, 0, r2);

     label2:
        return r6;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.UserManager$CheckedUserOperationException: android.os.ServiceSpecificException toServiceSpecificException()>();

        throw $r4;

        catch android.os.UserManager$CheckedUserOperationException from label1 to label2 with label3;
    }

    public android.content.pm.UserInfo createProfileForUserWithThrow(java.lang.String, java.lang.String, int, int, java.lang.String[]) throws android.os.ServiceSpecificException
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1, r5;
        int i0, i1;
        java.lang.String[] r2;
        android.os.UserManager$CheckedUserOperationException $r3;
        android.os.ServiceSpecificException $r4;
        android.content.pm.UserInfo r6;

        r0 := @this: com.android.server.pm.UserManagerService;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: java.lang.String[];

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageOrCreateUsersPermission(int)>(i0);

     label1:
        r6 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo createUserInternal(java.lang.String,java.lang.String,int,int,java.lang.String[])>(r5, r1, i0, i1, r2);

     label2:
        return r6;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.UserManager$CheckedUserOperationException: android.os.ServiceSpecificException toServiceSpecificException()>();

        throw $r4;

        catch android.os.UserManager$CheckedUserOperationException from label1 to label2 with label3;
    }

    public android.content.pm.UserInfo createRestrictedProfileWithThrow(java.lang.String, int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, $i2, $i3, $i4;
        long l1;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;
        android.content.pm.UserInfo r5;

        r0 := @this: com.android.server.pm.UserManagerService;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageOrCreateUsersPermission(java.lang.String)>("setupRestrictedProfile");

        r5 = virtualinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo createProfileForUserWithThrow(java.lang.String,java.lang.String,int,int,java.lang.String[])>(r4, "android.os.usertype.full.RESTRICTED", 0, i0, null);

        if r5 != null goto label1;

        return null;

     label1:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $i2 = r5.<android.content.pm.UserInfo: int id>;

        virtualinvoke r0.<com.android.server.pm.UserManagerService: void setUserRestriction(java.lang.String,boolean,int)>("no_modify_accounts", 1, $i2);

        $r1 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i3 = r5.<android.content.pm.UserInfo: int id>;

        staticinvoke <android.provider.Settings$Secure: boolean putIntForUser(android.content.ContentResolver,java.lang.String,int,int)>($r2, "location_mode", 0, $i3);

        $i4 = r5.<android.content.pm.UserInfo: int id>;

        virtualinvoke r0.<com.android.server.pm.UserManagerService: void setUserRestriction(java.lang.String,boolean,int)>("no_share_location", 1, $i4);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return r5;

     label4:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r3;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public android.content.pm.UserInfo createUserWithThrow(java.lang.String, java.lang.String, int) throws android.os.ServiceSpecificException
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1, r4;
        int i0;
        android.os.UserManager$CheckedUserOperationException $r2;
        android.os.ServiceSpecificException $r3;
        android.content.pm.UserInfo r5;

        r0 := @this: com.android.server.pm.UserManagerService;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageOrCreateUsersPermission(int)>(i0);

     label1:
        r5 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo createUserInternal(java.lang.String,java.lang.String,int,int,java.lang.String[])>(r4, r1, i0, -10000, null);

     label2:
        return r5;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.UserManager$CheckedUserOperationException: android.os.ServiceSpecificException toServiceSpecificException()>();

        throw $r3;

        catch android.os.UserManager$CheckedUserOperationException from label1 to label2 with label3;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.pm.UserManagerService r0, r124, r133;
        long l0, l1, $l12, $l13, l21, l22;
        android.app.ActivityManagerInternal r1;
        com.android.server.pm.UserManagerService$UserData r3;
        int i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i14, $i15, $i16, $i17, $i18, i19, $i20, i23, $i24;
        java.lang.Object r4, $r6, $r64, $r70, $r77, r125, r126, r127, r128, r146, r147, r169, r170, r179, r199;
        android.content.Context $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10, z11, z12;
        java.lang.StringBuilder $r7, $r20, $r24, $r29, $r33, $r38, $r42, $r46, $r50, $r54, $r61, r171, r172, r173, r177, r180, r181, r183;
        java.lang.String $r10, $r14, $r19, $r23, $r28, $r32, $r37, $r41, $r45, $r49, $r53, $r59, $r65, $r68, $r75, $r79, $r80, $r81, $r82, $r91, $r92, $r94, $r96, $r97, $r100, $r102, $r104, $r106;
        android.os.Bundle $r11, $r85, $r87, $r90, r178;
        android.util.SparseBooleanArray $r15, $r78, $r83;
        com.android.server.pm.UserManagerService$WatchedUserStates $r17, r160, r162, r182;
        android.content.res.Resources $r35;
        android.util.ArrayMap $r56, $r63, $r69, $r193;
        com.android.server.pm.UserSystemPackageInstaller $r60;
        com.android.server.pm.UserTypeDetails $r71;
        java.util.LinkedList $r73;
        android.util.SparseArray $r76, $r131;
        com.android.server.pm.RestrictionsSet $r84, $r86, $r88, $r89;
        android.os.PersistableBundle $r98;
        java.lang.Throwable $r107, $r108, $r109, $r110, $r111, $r112, $r113, $r114, $r115, $r116, $r117, $r118, $r119, $r120, r144, r176, r200;
        java.io.FileDescriptor r121;
        java.io.PrintWriter r122;
        java.lang.String[] r123;
        android.content.pm.UserInfo r135;

        r0 := @this: com.android.server.pm.UserManagerService;

        r121 := @parameter0: java.io.FileDescriptor;

        r122 := @parameter1: java.io.PrintWriter;

        r123 := @parameter2: java.lang.String[];

        r124 = r0;

        $r5 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $z0 = staticinvoke <com.android.internal.util.DumpUtils: boolean checkDumpPermission(android.content.Context,java.lang.String,java.io.PrintWriter)>($r5, "UserManagerService", r122);

        if $z0 != 0 goto label001;

        return;

     label001:
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r6 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/app/ActivityManagerInternal;");

        r1 = (android.app.ActivityManagerInternal) $r6;

        virtualinvoke r122.<java.io.PrintWriter: void print(java.lang.String)>("Current user: ");

        if r1 == null goto label002;

        $i18 = virtualinvoke r1.<android.app.ActivityManagerInternal: int getCurrentUserId()>();

        virtualinvoke r122.<java.io.PrintWriter: void println(int)>($i18);

        goto label003;

     label002:
        virtualinvoke r122.<java.io.PrintWriter: void println(java.lang.String)>("N/A");

     label003:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        r125 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r125;

     label004:
        r126 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r126;

     label005:
        r127 = r125;

        r128 = r126;

     label006:
        virtualinvoke r122.<java.io.PrintWriter: void println(java.lang.String)>("Users:");

     label007:
        i19 = 0;

     label008:
        r127 = r125;

        r128 = r126;

     label009:
        $r131 = r124.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i20 = virtualinvoke $r131.<android.util.SparseArray: int size()>();

        if i19 >= $i20 goto label146;

     label010:
        r127 = r125;

        r128 = r126;

     label011:
        $r76 = r124.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r77 = virtualinvoke $r76.<android.util.SparseArray: java.lang.Object valueAt(int)>(i19);

        r3 = (com.android.server.pm.UserManagerService$UserData) $r77;

     label012:
        if r3 != null goto label013;

        r133 = r124;

        goto label133;

     label013:
        r127 = r125;

        r128 = r126;

     label014:
        r135 = r3.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

     label015:
        r127 = r125;

        r128 = r126;

     label016:
        i2 = r135.<android.content.pm.UserInfo: int id>;

     label017:
        r127 = r125;

        r128 = r126;

     label018:
        virtualinvoke r122.<java.io.PrintWriter: void print(java.lang.String)>("  ");

     label019:
        r127 = r125;

        r128 = r126;

     label020:
        virtualinvoke r122.<java.io.PrintWriter: void print(java.lang.Object)>(r135);

     label021:
        r127 = r125;

        r128 = r126;

     label022:
        virtualinvoke r122.<java.io.PrintWriter: void print(java.lang.String)>(" serialNo=");

     label023:
        r127 = r125;

        r128 = r126;

     label024:
        $i9 = r135.<android.content.pm.UserInfo: int serialNumber>;

        virtualinvoke r122.<java.io.PrintWriter: void print(int)>($i9);

     label025:
        r127 = r125;

        r128 = r126;

     label026:
        virtualinvoke r122.<java.io.PrintWriter: void print(java.lang.String)>(" isPrimary=");

     label027:
        r127 = r125;

        r128 = r126;

     label028:
        $z8 = virtualinvoke r135.<android.content.pm.UserInfo: boolean isPrimary()>();

        virtualinvoke r122.<java.io.PrintWriter: void print(boolean)>($z8);

     label029:
        r127 = r125;

        r128 = r126;

     label030:
        $r78 = r124.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        z10 = virtualinvoke $r78.<android.util.SparseBooleanArray: boolean get(int)>(i2);

     label031:
        if z10 == 0 goto label035;

     label032:
        virtualinvoke r122.<java.io.PrintWriter: void print(java.lang.String)>(" <removing> ");

     label033:
        goto label035;

     label034:
        $r112 := @caughtexception;

        r144 = $r112;

        r146 = r125;

        r147 = r126;

        goto label198;

     label035:
        r127 = r125;

        r128 = r126;

     label036:
        z11 = r135.<android.content.pm.UserInfo: boolean partial>;

     label037:
        if z11 == 0 goto label039;

     label038:
        virtualinvoke r122.<java.io.PrintWriter: void print(java.lang.String)>(" <partial>");

     label039:
        r127 = r125;

        r128 = r126;

     label040:
        z12 = r135.<android.content.pm.UserInfo: boolean preCreated>;

     label041:
        if z12 == 0 goto label043;

     label042:
        virtualinvoke r122.<java.io.PrintWriter: void print(java.lang.String)>(" <pre-created>");

     label043:
        r127 = r125;

        r128 = r126;

     label044:
        virtualinvoke r122.<java.io.PrintWriter: void println()>();

     label045:
        r127 = r125;

        r128 = r126;

     label046:
        virtualinvoke r122.<java.io.PrintWriter: void print(java.lang.String)>("    Type: ");

     label047:
        r127 = r125;

        r128 = r126;

     label048:
        $r79 = r135.<android.content.pm.UserInfo: java.lang.String userType>;

        virtualinvoke r122.<java.io.PrintWriter: void println(java.lang.String)>($r79);

     label049:
        r127 = r125;

        r128 = r126;

     label050:
        virtualinvoke r122.<java.io.PrintWriter: void print(java.lang.String)>("    Flags: ");

     label051:
        r127 = r125;

        r128 = r126;

     label052:
        $i10 = r135.<android.content.pm.UserInfo: int flags>;

        virtualinvoke r122.<java.io.PrintWriter: void print(int)>($i10);

     label053:
        r127 = r125;

        r128 = r126;

     label054:
        virtualinvoke r122.<java.io.PrintWriter: void print(java.lang.String)>(" (");

     label055:
        r127 = r125;

        r128 = r126;

     label056:
        $i11 = r135.<android.content.pm.UserInfo: int flags>;

        $r80 = staticinvoke <android.content.pm.UserInfo: java.lang.String flagsToString(int)>($i11);

        virtualinvoke r122.<java.io.PrintWriter: void print(java.lang.String)>($r80);

     label057:
        r127 = r125;

        r128 = r126;

     label058:
        virtualinvoke r122.<java.io.PrintWriter: void println(java.lang.String)>(")");

     label059:
        r127 = r125;

        r128 = r126;

     label060:
        virtualinvoke r122.<java.io.PrintWriter: void print(java.lang.String)>("    State: ");

     label061:
        r127 = r125;

        r128 = r126;

     label062:
        r160 = r124.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$WatchedUserStates mUserStates>;

     label063:
        r127 = r125;

        r128 = r126;

     label064:
        entermonitor r160;

     label065:
        r162 = r124.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$WatchedUserStates mUserStates>;

     label066:
        i3 = virtualinvoke r162.<com.android.server.pm.UserManagerService$WatchedUserStates: int get(int,int)>(i2, -1);

        exitmonitor r160;

     label067:
        r127 = r125;

        r128 = r126;

     label068:
        $r81 = staticinvoke <com.android.server.am.UserState: java.lang.String stateToString(int)>(i3);

        virtualinvoke r122.<java.io.PrintWriter: void println(java.lang.String)>($r81);

     label069:
        r127 = r125;

        r128 = r126;

     label070:
        virtualinvoke r122.<java.io.PrintWriter: void print(java.lang.String)>("    Created: ");

     label071:
        r127 = r125;

        r128 = r126;

     label072:
        l21 = r135.<android.content.pm.UserInfo: long creationTime>;

     label073:
        staticinvoke <com.android.server.pm.UserManagerService: void dumpTimeAgo(java.io.PrintWriter,java.lang.StringBuilder,long,long)>(r122, $r7, l0, l21);

        virtualinvoke r122.<java.io.PrintWriter: void print(java.lang.String)>("    Last logged in: ");

        l22 = r135.<android.content.pm.UserInfo: long lastLoggedInTime>;

     label074:
        staticinvoke <com.android.server.pm.UserManagerService: void dumpTimeAgo(java.io.PrintWriter,java.lang.StringBuilder,long,long)>(r122, $r7, l0, l22);

        virtualinvoke r122.<java.io.PrintWriter: void print(java.lang.String)>("    Last logged in fingerprint: ");

        $r82 = r135.<android.content.pm.UserInfo: java.lang.String lastLoggedInFingerprint>;

        virtualinvoke r122.<java.io.PrintWriter: void println(java.lang.String)>($r82);

        virtualinvoke r122.<java.io.PrintWriter: void print(java.lang.String)>("    Start time: ");

        $l12 = r3.<com.android.server.pm.UserManagerService$UserData: long startRealtime>;

        staticinvoke <com.android.server.pm.UserManagerService: void dumpTimeAgo(java.io.PrintWriter,java.lang.StringBuilder,long,long)>(r122, $r7, l1, $l12);

        virtualinvoke r122.<java.io.PrintWriter: void print(java.lang.String)>("    Unlock time: ");

        $l13 = r3.<com.android.server.pm.UserManagerService$UserData: long unlockRealtime>;

        staticinvoke <com.android.server.pm.UserManagerService: void dumpTimeAgo(java.io.PrintWriter,java.lang.StringBuilder,long,long)>(r122, $r7, l1, $l13);

        virtualinvoke r122.<java.io.PrintWriter: void print(java.lang.String)>("    Has profile owner: ");

     label075:
        r169 = r125;

        r170 = r126;

     label076:
        $r83 = r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mIsUserManaged>;

        $z9 = virtualinvoke $r83.<android.util.SparseBooleanArray: boolean get(int)>(i2);

        virtualinvoke r122.<java.io.PrintWriter: void println(boolean)>($z9);

     label077:
        r169 = r125;

        r170 = r126;

     label078:
        virtualinvoke r122.<java.io.PrintWriter: void println(java.lang.String)>("    Restrictions:");

     label079:
        r169 = r125;

        r170 = r126;

     label080:
        r4 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mRestrictionsLock>;

     label081:
        r169 = r125;

        r170 = r126;

     label082:
        entermonitor r4;

     label083:
        $r84 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet mBaseUserRestrictions>;

        $i14 = r135.<android.content.pm.UserInfo: int id>;

        $r85 = virtualinvoke $r84.<com.android.server.pm.RestrictionsSet: android.os.Bundle getRestrictions(int)>($i14);

        staticinvoke <com.android.server.pm.UserRestrictionsUtils: void dumpRestrictions(java.io.PrintWriter,java.lang.String,android.os.Bundle)>(r122, "      ", $r85);

        virtualinvoke r122.<java.io.PrintWriter: void println(java.lang.String)>("    Device policy global restrictions:");

        $r86 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet mDevicePolicyGlobalUserRestrictions>;

        $i15 = r135.<android.content.pm.UserInfo: int id>;

        $r87 = virtualinvoke $r86.<com.android.server.pm.RestrictionsSet: android.os.Bundle getRestrictions(int)>($i15);

        staticinvoke <com.android.server.pm.UserRestrictionsUtils: void dumpRestrictions(java.io.PrintWriter,java.lang.String,android.os.Bundle)>(r122, "      ", $r87);

        virtualinvoke r122.<java.io.PrintWriter: void println(java.lang.String)>("    Device policy local restrictions:");

        $i16 = r135.<android.content.pm.UserInfo: int id>;

        $r88 = specialinvoke r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet getDevicePolicyLocalRestrictionsForTargetUserLR(int)>($i16);

        virtualinvoke $r88.<com.android.server.pm.RestrictionsSet: void dumpRestrictions(java.io.PrintWriter,java.lang.String)>(r122, "      ");

        virtualinvoke r122.<java.io.PrintWriter: void println(java.lang.String)>("    Effective restrictions:");

        $r89 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet mCachedEffectiveUserRestrictions>;

        $i17 = r135.<android.content.pm.UserInfo: int id>;

        $r90 = virtualinvoke $r89.<com.android.server.pm.RestrictionsSet: android.os.Bundle getRestrictions(int)>($i17);

        staticinvoke <com.android.server.pm.UserRestrictionsUtils: void dumpRestrictions(java.io.PrintWriter,java.lang.String,android.os.Bundle)>(r122, "      ", $r90);

        exitmonitor r4;

     label084:
        r169 = r125;

        r170 = r126;

     label085:
        $r91 = r3.<com.android.server.pm.UserManagerService$UserData: java.lang.String account>;

        if $r91 == null goto label098;

     label086:
        r169 = r125;

        r170 = r126;

     label087:
        r171 = new java.lang.StringBuilder;

     label088:
        r169 = r125;

        r170 = r126;

     label089:
        specialinvoke r171.<java.lang.StringBuilder: void <init>()>();

     label090:
        r169 = r125;

        r170 = r126;

     label091:
        virtualinvoke r171.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    Account name: ");

     label092:
        r169 = r125;

        r170 = r126;

     label093:
        $r104 = r3.<com.android.server.pm.UserManagerService$UserData: java.lang.String account>;

        virtualinvoke r171.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r104);

     label094:
        r169 = r125;

        r170 = r126;

     label095:
        $r106 = virtualinvoke r171.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r122.<java.io.PrintWriter: void print(java.lang.String)>($r106);

     label096:
        r169 = r125;

        r170 = r126;

     label097:
        virtualinvoke r122.<java.io.PrintWriter: void println()>();

     label098:
        r133 = r0;

        r169 = r125;

        r170 = r126;

     label099:
        $r92 = r3.<com.android.server.pm.UserManagerService$UserData: java.lang.String seedAccountName>;

        if $r92 == null goto label133;

     label100:
        r169 = r125;

        r170 = r126;

     label101:
        r172 = new java.lang.StringBuilder;

     label102:
        r169 = r125;

        r170 = r126;

     label103:
        specialinvoke r172.<java.lang.StringBuilder: void <init>()>();

     label104:
        r169 = r125;

        r170 = r126;

     label105:
        virtualinvoke r172.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    Seed account name: ");

     label106:
        r169 = r125;

        r170 = r126;

     label107:
        $r94 = r3.<com.android.server.pm.UserManagerService$UserData: java.lang.String seedAccountName>;

        virtualinvoke r172.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r94);

     label108:
        r169 = r125;

        r170 = r126;

     label109:
        $r96 = virtualinvoke r172.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r122.<java.io.PrintWriter: void print(java.lang.String)>($r96);

     label110:
        r169 = r125;

        r170 = r126;

     label111:
        virtualinvoke r122.<java.io.PrintWriter: void println()>();

     label112:
        r169 = r125;

        r170 = r126;

     label113:
        $r97 = r3.<com.android.server.pm.UserManagerService$UserData: java.lang.String seedAccountType>;

        if $r97 == null goto label126;

     label114:
        r169 = r125;

        r170 = r126;

     label115:
        r173 = new java.lang.StringBuilder;

     label116:
        r169 = r125;

        r170 = r126;

     label117:
        specialinvoke r173.<java.lang.StringBuilder: void <init>()>();

     label118:
        r169 = r125;

        r170 = r126;

     label119:
        virtualinvoke r173.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         account type: ");

     label120:
        r169 = r125;

        r170 = r126;

     label121:
        $r100 = r3.<com.android.server.pm.UserManagerService$UserData: java.lang.String seedAccountType>;

        virtualinvoke r173.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r100);

     label122:
        r169 = r125;

        r170 = r126;

     label123:
        $r102 = virtualinvoke r173.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r122.<java.io.PrintWriter: void print(java.lang.String)>($r102);

     label124:
        r169 = r125;

        r170 = r126;

     label125:
        virtualinvoke r122.<java.io.PrintWriter: void println()>();

     label126:
        r133 = r0;

        r169 = r125;

        r170 = r126;

     label127:
        $r98 = r3.<com.android.server.pm.UserManagerService$UserData: android.os.PersistableBundle seedAccountOptions>;

        if $r98 == null goto label133;

     label128:
        r169 = r125;

        r170 = r126;

     label129:
        virtualinvoke r122.<java.io.PrintWriter: void print(java.lang.String)>("         account options exist");

     label130:
        r169 = r125;

        r170 = r126;

     label131:
        virtualinvoke r122.<java.io.PrintWriter: void println()>();

     label132:
        r133 = r0;

     label133:
        i19 = i19 + 1;

        r124 = r133;

        goto label008;

     label134:
        $r113 := @caughtexception;

     label135:
        exitmonitor r4;

     label136:
        r169 = r125;

        r170 = r126;

     label137:
        throw $r113;

     label138:
        $r118 := @caughtexception;

        r144 = $r118;

        r146 = r125;

        r147 = r126;

        goto label198;

     label139:
        $r108 := @caughtexception;

        r144 = $r108;

        r147 = r126;

        r146 = r125;

        goto label198;

     label140:
        $r117 := @caughtexception;

        r176 = $r117;

        goto label142;

     label141:
        $r114 := @caughtexception;

        r176 = $r114;

     label142:
        r170 = r126;

        r169 = r125;

     label143:
        exitmonitor r160;

     label144:
        throw r176;

     label145:
        $r120 := @caughtexception;

        r176 = $r120;

        goto label142;

     label146:
        r169 = r125;

        r170 = r126;

     label147:
        exitmonitor r126;

     label148:
        r146 = r125;

     label149:
        virtualinvoke r122.<java.io.PrintWriter: void println()>();

     label150:
        r146 = r125;

     label151:
        r177 = new java.lang.StringBuilder;

     label152:
        r146 = r125;

     label153:
        specialinvoke r177.<java.lang.StringBuilder: void <init>()>();

     label154:
        r146 = r125;

     label155:
        virtualinvoke r177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Device owner id:");

     label156:
        r146 = r125;

     label157:
        $i4 = r124.<com.android.server.pm.UserManagerService: int mDeviceOwnerUserId>;

        virtualinvoke r177.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

     label158:
        r146 = r125;

     label159:
        $r10 = virtualinvoke r177.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r122.<java.io.PrintWriter: void println(java.lang.String)>($r10);

     label160:
        r146 = r125;

     label161:
        virtualinvoke r122.<java.io.PrintWriter: void println()>();

     label162:
        r146 = r125;

     label163:
        virtualinvoke r122.<java.io.PrintWriter: void println(java.lang.String)>("  Guest restrictions:");

     label164:
        r146 = r125;

     label165:
        r178 = r124.<com.android.server.pm.UserManagerService: android.os.Bundle mGuestRestrictions>;

     label166:
        r146 = r125;

     label167:
        entermonitor r178;

     label168:
        $r11 = r124.<com.android.server.pm.UserManagerService: android.os.Bundle mGuestRestrictions>;

        staticinvoke <com.android.server.pm.UserRestrictionsUtils: void dumpRestrictions(java.io.PrintWriter,java.lang.String,android.os.Bundle)>(r122, "    ", $r11);

        exitmonitor r178;

     label169:
        r146 = r125;

     label170:
        r179 = r124.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

     label171:
        r146 = r125;

     label172:
        entermonitor r179;

     label173:
        virtualinvoke r122.<java.io.PrintWriter: void println()>();

        r180 = new java.lang.StringBuilder;

        specialinvoke r180.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r180.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Device managed: ");

        $z1 = r124.<com.android.server.pm.UserManagerService: boolean mIsDeviceManaged>;

        virtualinvoke r180.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r14 = virtualinvoke r180.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r122.<java.io.PrintWriter: void println(java.lang.String)>($r14);

        $r15 = r124.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        $i5 = virtualinvoke $r15.<android.util.SparseBooleanArray: int size()>();

        if $i5 <= 0 goto label174;

        virtualinvoke r122.<java.io.PrintWriter: void println()>();

        r181 = new java.lang.StringBuilder;

        specialinvoke r181.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r181.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Recently removed userIds: ");

        $r73 = r124.<com.android.server.pm.UserManagerService: java.util.LinkedList mRecentlyRemovedIds>;

        virtualinvoke r181.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r73);

        $r75 = virtualinvoke r181.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r122.<java.io.PrintWriter: void println(java.lang.String)>($r75);

     label174:
        exitmonitor r179;

     label175:
        r146 = r125;

     label176:
        r182 = r124.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$WatchedUserStates mUserStates>;

     label177:
        r146 = r125;

     label178:
        entermonitor r182;

     label179:
        r183 = new java.lang.StringBuilder;

        specialinvoke r183.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r183.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Started users state: ");

        $r17 = r124.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$WatchedUserStates mUserStates>;

        virtualinvoke r183.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke r183.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r122.<java.io.PrintWriter: void println(java.lang.String)>($r19);

        exitmonitor r182;

     label180:
        r146 = r125;

     label181:
        exitmonitor r125;

     label182:
        virtualinvoke r122.<java.io.PrintWriter: void println()>();

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Max users: ");

        $i6 = staticinvoke <android.os.UserManager: int getMaxSupportedUsers()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r122.<java.io.PrintWriter: void print(java.lang.String)>($r23);

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (limit reached: ");

        $z2 = specialinvoke r0.<com.android.server.pm.UserManagerService: boolean isUserLimitReached()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r122.<java.io.PrintWriter: void println(java.lang.String)>($r28);

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Supports switchable users: ");

        $z3 = staticinvoke <android.os.UserManager: boolean supportsMultipleUsers()>();

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r122.<java.io.PrintWriter: void println(java.lang.String)>($r32);

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  All guests ephemeral: ");

        $r35 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $z4 = virtualinvoke $r35.<android.content.res.Resources: boolean getBoolean(int)>(17891468);

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r37 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r122.<java.io.PrintWriter: void println(java.lang.String)>($r37);

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Force ephemeral users: ");

        $z5 = r124.<com.android.server.pm.UserManagerService: boolean mForceEphemeralUsers>;

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        $r41 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r122.<java.io.PrintWriter: void println(java.lang.String)>($r41);

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Is split-system user: ");

        $z6 = staticinvoke <android.os.UserManager: boolean isSplitSystemUser()>();

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        $r45 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r122.<java.io.PrintWriter: void println(java.lang.String)>($r45);

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Is headless-system mode: ");

        $z7 = staticinvoke <android.os.UserManager: boolean isHeadlessSystemUserMode()>();

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z7);

        $r49 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r122.<java.io.PrintWriter: void println(java.lang.String)>($r49);

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  User version: ");

        $i7 = r124.<com.android.server.pm.UserManagerService: int mUserVersion>;

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r53 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r122.<java.io.PrintWriter: void println(java.lang.String)>($r53);

        virtualinvoke r122.<java.io.PrintWriter: void println()>();

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  User types (");

        $r56 = r124.<com.android.server.pm.UserManagerService: android.util.ArrayMap mUserTypes>;

        $i8 = virtualinvoke $r56.<android.util.ArrayMap: int size()>();

        virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" types):");

        $r59 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r122.<java.io.PrintWriter: void println(java.lang.String)>($r59);

        i23 = 0;

     label183:
        $r193 = r124.<com.android.server.pm.UserManagerService: android.util.ArrayMap mUserTypes>;

        $i24 = virtualinvoke $r193.<android.util.ArrayMap: int size()>();

        if i23 >= $i24 goto label184;

        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r63 = r124.<com.android.server.pm.UserManagerService: android.util.ArrayMap mUserTypes>;

        $r64 = virtualinvoke $r63.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i23);

        $r65 = (java.lang.String) $r64;

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r68 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r122.<java.io.PrintWriter: void println(java.lang.String)>($r68);

        $r69 = r124.<com.android.server.pm.UserManagerService: android.util.ArrayMap mUserTypes>;

        $r70 = virtualinvoke $r69.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i23);

        $r71 = (com.android.server.pm.UserTypeDetails) $r70;

        virtualinvoke $r71.<com.android.server.pm.UserTypeDetails: void dump(java.io.PrintWriter)>(r122);

        i23 = i23 + 1;

        goto label183;

     label184:
        virtualinvoke r122.<java.io.PrintWriter: void println()>();

        $r60 = r124.<com.android.server.pm.UserManagerService: com.android.server.pm.UserSystemPackageInstaller mSystemPackageInstaller>;

        virtualinvoke $r60.<com.android.server.pm.UserSystemPackageInstaller: void dump(java.io.PrintWriter)>(r122);

        return;

     label185:
        $r109 := @caughtexception;

     label186:
        exitmonitor r182;

     label187:
        r146 = r125;

     label188:
        throw $r109;

     label189:
        $r107 := @caughtexception;

     label190:
        exitmonitor r179;

     label191:
        r146 = r125;

     label192:
        throw $r107;

     label193:
        $r115 := @caughtexception;

     label194:
        exitmonitor r178;

     label195:
        r146 = r125;

     label196:
        throw $r115;

     label197:
        $r111 := @caughtexception;

        r144 = $r111;

        r146 = r127;

        r147 = r128;

     label198:
        r169 = r146;

        r170 = r147;

     label199:
        exitmonitor r147;

     label200:
        throw r144;

     label201:
        $r116 := @caughtexception;

        r144 = $r116;

        r146 = r169;

        r147 = r170;

        goto label198;

     label202:
        $r119 := @caughtexception;

        r199 = r125;

        r200 = $r119;

     label203:
        r146 = r199;

     label204:
        exitmonitor r199;

     label205:
        throw r200;

     label206:
        $r110 := @caughtexception;

        r200 = $r110;

        r199 = r146;

        goto label203;

        catch java.lang.Throwable from label004 to label005 with label202;
        catch java.lang.Throwable from label006 to label007 with label197;
        catch java.lang.Throwable from label009 to label010 with label197;
        catch java.lang.Throwable from label011 to label012 with label197;
        catch java.lang.Throwable from label014 to label015 with label197;
        catch java.lang.Throwable from label016 to label017 with label197;
        catch java.lang.Throwable from label018 to label019 with label197;
        catch java.lang.Throwable from label020 to label021 with label197;
        catch java.lang.Throwable from label022 to label023 with label197;
        catch java.lang.Throwable from label024 to label025 with label197;
        catch java.lang.Throwable from label026 to label027 with label197;
        catch java.lang.Throwable from label028 to label029 with label197;
        catch java.lang.Throwable from label030 to label031 with label197;
        catch java.lang.Throwable from label032 to label033 with label034;
        catch java.lang.Throwable from label036 to label037 with label197;
        catch java.lang.Throwable from label038 to label039 with label034;
        catch java.lang.Throwable from label040 to label041 with label197;
        catch java.lang.Throwable from label042 to label043 with label034;
        catch java.lang.Throwable from label044 to label045 with label197;
        catch java.lang.Throwable from label046 to label047 with label197;
        catch java.lang.Throwable from label048 to label049 with label197;
        catch java.lang.Throwable from label050 to label051 with label197;
        catch java.lang.Throwable from label052 to label053 with label197;
        catch java.lang.Throwable from label054 to label055 with label197;
        catch java.lang.Throwable from label056 to label057 with label197;
        catch java.lang.Throwable from label058 to label059 with label197;
        catch java.lang.Throwable from label060 to label061 with label197;
        catch java.lang.Throwable from label062 to label063 with label197;
        catch java.lang.Throwable from label064 to label065 with label197;
        catch java.lang.Throwable from label065 to label066 with label141;
        catch java.lang.Throwable from label066 to label067 with label140;
        catch java.lang.Throwable from label068 to label069 with label197;
        catch java.lang.Throwable from label070 to label071 with label197;
        catch java.lang.Throwable from label072 to label073 with label197;
        catch java.lang.Throwable from label073 to label074 with label139;
        catch java.lang.Throwable from label074 to label075 with label138;
        catch java.lang.Throwable from label076 to label077 with label201;
        catch java.lang.Throwable from label078 to label079 with label201;
        catch java.lang.Throwable from label080 to label081 with label201;
        catch java.lang.Throwable from label082 to label083 with label201;
        catch java.lang.Throwable from label083 to label084 with label134;
        catch java.lang.Throwable from label085 to label086 with label201;
        catch java.lang.Throwable from label087 to label088 with label201;
        catch java.lang.Throwable from label089 to label090 with label201;
        catch java.lang.Throwable from label091 to label092 with label201;
        catch java.lang.Throwable from label093 to label094 with label201;
        catch java.lang.Throwable from label095 to label096 with label201;
        catch java.lang.Throwable from label097 to label098 with label201;
        catch java.lang.Throwable from label099 to label100 with label201;
        catch java.lang.Throwable from label101 to label102 with label201;
        catch java.lang.Throwable from label103 to label104 with label201;
        catch java.lang.Throwable from label105 to label106 with label201;
        catch java.lang.Throwable from label107 to label108 with label201;
        catch java.lang.Throwable from label109 to label110 with label201;
        catch java.lang.Throwable from label111 to label112 with label201;
        catch java.lang.Throwable from label113 to label114 with label201;
        catch java.lang.Throwable from label115 to label116 with label201;
        catch java.lang.Throwable from label117 to label118 with label201;
        catch java.lang.Throwable from label119 to label120 with label201;
        catch java.lang.Throwable from label121 to label122 with label201;
        catch java.lang.Throwable from label123 to label124 with label201;
        catch java.lang.Throwable from label125 to label126 with label201;
        catch java.lang.Throwable from label127 to label128 with label201;
        catch java.lang.Throwable from label129 to label130 with label201;
        catch java.lang.Throwable from label131 to label132 with label201;
        catch java.lang.Throwable from label135 to label136 with label134;
        catch java.lang.Throwable from label137 to label138 with label201;
        catch java.lang.Throwable from label143 to label144 with label145;
        catch java.lang.Throwable from label144 to label145 with label201;
        catch java.lang.Throwable from label147 to label148 with label201;
        catch java.lang.Throwable from label149 to label150 with label206;
        catch java.lang.Throwable from label151 to label152 with label206;
        catch java.lang.Throwable from label153 to label154 with label206;
        catch java.lang.Throwable from label155 to label156 with label206;
        catch java.lang.Throwable from label157 to label158 with label206;
        catch java.lang.Throwable from label159 to label160 with label206;
        catch java.lang.Throwable from label161 to label162 with label206;
        catch java.lang.Throwable from label163 to label164 with label206;
        catch java.lang.Throwable from label165 to label166 with label206;
        catch java.lang.Throwable from label167 to label168 with label206;
        catch java.lang.Throwable from label168 to label169 with label193;
        catch java.lang.Throwable from label170 to label171 with label206;
        catch java.lang.Throwable from label172 to label173 with label206;
        catch java.lang.Throwable from label173 to label174 with label189;
        catch java.lang.Throwable from label174 to label175 with label189;
        catch java.lang.Throwable from label176 to label177 with label206;
        catch java.lang.Throwable from label178 to label179 with label206;
        catch java.lang.Throwable from label179 to label180 with label185;
        catch java.lang.Throwable from label181 to label182 with label206;
        catch java.lang.Throwable from label186 to label187 with label185;
        catch java.lang.Throwable from label188 to label189 with label206;
        catch java.lang.Throwable from label190 to label191 with label189;
        catch java.lang.Throwable from label192 to label193 with label206;
        catch java.lang.Throwable from label194 to label195 with label193;
        catch java.lang.Throwable from label196 to label197 with label206;
        catch java.lang.Throwable from label199 to label200 with label201;
        catch java.lang.Throwable from label200 to label201 with label206;
        catch java.lang.Throwable from label204 to label205 with label206;
    }

    public void evictCredentialEncryptionKey(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        long l1;
        java.lang.Throwable $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.app.IActivityManager r4;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("evict CE key");

        r4 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        interfaceinvoke r4.<android.app.IActivityManager: int restartUserInBackground(int)>(i0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label3:
        $r1 := @caughtexception;

        goto label6;

     label4:
        $r2 := @caughtexception;

     label5:
        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r3;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r1;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    public boolean exists(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        com.android.server.pm.UserManagerService$LocalService $r1;
        boolean $z0;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$LocalService mLocalService>;

        $z0 = virtualinvoke $r1.<com.android.server.pm.UserManagerService$LocalService: boolean exists(int)>(i0);

        return $z0;
    }

    public android.content.pm.UserInfo findCurrentGuestUser()
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.Object r1, $r4;
        int i0, $i1, i2;
        android.util.SparseArray $r2, $r3;
        com.android.server.pm.UserManagerService$UserData $r5;
        boolean $z0, $z1, $z2, $z3;
        android.util.SparseBooleanArray $r6;
        java.lang.Throwable $r7;
        android.content.pm.UserInfo r8;

        r0 := @this: com.android.server.pm.UserManagerService;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("findCurrentGuestUser");

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        i0 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

     label02:
        i2 = 0;

     label03:
        if i2 >= i0 goto label07;

     label04:
        $r3 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        $r5 = (com.android.server.pm.UserManagerService$UserData) $r4;

        r8 = $r5.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $z0 = virtualinvoke r8.<android.content.pm.UserInfo: boolean isGuest()>();

        if $z0 == 0 goto label06;

        $z1 = r8.<android.content.pm.UserInfo: boolean guestToRemove>;

        if $z1 != 0 goto label06;

        $z2 = r8.<android.content.pm.UserInfo: boolean preCreated>;

        if $z2 != 0 goto label06;

        $r6 = r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        $i1 = r8.<android.content.pm.UserInfo: int id>;

        $z3 = virtualinvoke $r6.<android.util.SparseBooleanArray: boolean get(int)>($i1);

        if $z3 != 0 goto label06;

        exitmonitor r1;

     label05:
        return r8;

     label06:
        i2 = i2 + 1;

        goto label03;

     label07:
        exitmonitor r1;

     label08:
        return null;

     label09:
        $r7 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    void finishRemoveUser(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        long l1;
        android.content.Intent r1;
        android.content.Context r2;
        android.os.UserHandle r3, $r5;
        java.lang.Throwable $r7;
        com.android.server.pm.UserManagerService$6 r8;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r1 = new android.content.Intent;

        specialinvoke r1.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_REMOVED");

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", i0);

        $r5 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>(i0);

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.USER", $r5);

        r2 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        r3 = <android.os.UserHandle: android.os.UserHandle ALL>;

        r8 = new com.android.server.pm.UserManagerService$6;

        specialinvoke r8.<com.android.server.pm.UserManagerService$6: void <init>(com.android.server.pm.UserManagerService,int)>(r0, i0);

        virtualinvoke r2.<android.content.Context: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>(r1, r3, "android.permission.MANAGE_USERS", r8, null, -1, null, null);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.os.Bundle getApplicationRestrictions(java.lang.String)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1;
        int $i0;
        android.os.Bundle $r2;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        $i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r2 = virtualinvoke r0.<com.android.server.pm.UserManagerService: android.os.Bundle getApplicationRestrictionsForUser(java.lang.String,int)>(r1, $i0);

        return $r2;
    }

    public android.os.Bundle getApplicationRestrictionsForUser(java.lang.String, int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r1;
        java.lang.String $r4, r6;
        boolean $z0;
        java.lang.Throwable $r5;
        java.lang.Object r8;
        android.os.Bundle r9;

        r0 := @this: com.android.server.pm.UserManagerService;

        r6 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        if $i1 != i0 goto label1;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i3 = specialinvoke r0.<com.android.server.pm.UserManagerService: int getUidForPackage(java.lang.String)>(r6);

        $z0 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>($i2, $i3);

        if $z0 != 0 goto label2;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("get application restrictions for other user/app ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.UserManagerService: void checkSystemOrRoot(java.lang.String)>($r4);

     label2:
        r8 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mAppRestrictionsLock>;

        entermonitor r8;

     label3:
        r9 = staticinvoke <com.android.server.pm.UserManagerService: android.os.Bundle readApplicationRestrictionsLAr(java.lang.String,int)>(r6, i0);

        exitmonitor r8;

     label4:
        return r9;

     label5:
        $r5 := @caughtexception;

     label6:
        exitmonitor r8;

     label7:
        throw $r5;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public int getCredentialOwnerProfile(int)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.Object r1;
        com.android.internal.widget.LockPatternUtils $r2;
        boolean $z0;
        java.lang.Throwable $r3;
        int i0, i1;
        android.content.pm.UserInfo r4;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("get the credential owner");

        $r2 = r0.<com.android.server.pm.UserManagerService: com.android.internal.widget.LockPatternUtils mLockPatternUtils>;

        $z0 = virtualinvoke $r2.<com.android.internal.widget.LockPatternUtils: boolean isSeparateProfileChallengeEnabled(int)>(i0);

        if $z0 != 0 goto label10;

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r1;

     label01:
        r4 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getProfileParentLU(int)>(i0);

     label02:
        if r4 == null goto label05;

     label03:
        i1 = r4.<android.content.pm.UserInfo: int id>;

        exitmonitor r1;

     label04:
        return i1;

     label05:
        exitmonitor r1;

     label06:
        goto label10;

     label07:
        $r3 := @caughtexception;

     label08:
        exitmonitor r1;

     label09:
        throw $r3;

     label10:
        return i0;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    public android.os.Bundle getDefaultGuestRestrictions()
    {
        com.android.server.pm.UserManagerService r0;
        android.os.Bundle r1, $r2, r4;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.pm.UserManagerService;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("getDefaultGuestRestrictions");

        r1 = r0.<com.android.server.pm.UserManagerService: android.os.Bundle mGuestRestrictions>;

        entermonitor r1;

     label1:
        r4 = new android.os.Bundle;

        $r2 = r0.<com.android.server.pm.UserManagerService: android.os.Bundle mGuestRestrictions>;

        specialinvoke r4.<android.os.Bundle: void <init>(android.os.Bundle)>($r2);

        exitmonitor r1;

     label2:
        return r4;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    int getFreeProfileBadgeLU(int, java.lang.String)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1, $r10;
        int i0, $i1, $i2, $i3, i4, i5, i6, i7, i8;
        android.content.pm.UserInfo r3;
        android.util.ArraySet $r4;
        android.util.SparseArray $r5, $r7;
        java.lang.Integer $r6, $r12;
        boolean $z0, $z1, $z2;
        java.lang.Object $r8;
        com.android.server.pm.UserManagerService$UserData $r9;
        android.util.SparseBooleanArray $r11;

        r0 := @this: com.android.server.pm.UserManagerService;

        i4 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r4 = new android.util.ArraySet;

        specialinvoke $r4.<android.util.ArraySet: void <init>()>();

        $r5 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        i0 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

        i5 = 0;

     label1:
        if i5 >= i0 goto label3;

        $r7 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i5);

        $r9 = (com.android.server.pm.UserManagerService$UserData) $r8;

        r3 = $r9.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $r10 = r3.<android.content.pm.UserInfo: java.lang.String userType>;

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        $i1 = r3.<android.content.pm.UserInfo: int profileGroupId>;

        if $i1 != i4 goto label2;

        $r11 = r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        $i2 = r3.<android.content.pm.UserInfo: int id>;

        $z2 = virtualinvoke $r11.<android.util.SparseBooleanArray: boolean get(int)>($i2);

        if $z2 != 0 goto label2;

        $i3 = r3.<android.content.pm.UserInfo: int profileBadge>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r12);

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        i6 = virtualinvoke r0.<com.android.server.pm.UserManagerService: int getMaxUsersOfTypePerParent(java.lang.String)>(r1);

        i7 = i6;

        if i6 != -1 goto label4;

        i7 = 2147483647;

     label4:
        i8 = 0;

     label5:
        if i8 >= i7 goto label7;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8);

        $z0 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>($r6);

        if $z0 != 0 goto label6;

        return i8;

     label6:
        i8 = i8 + 1;

        goto label5;

     label7:
        return 0;
    }

    android.os.UserManagerInternal getInternalForInjectorOnly()
    {
        com.android.server.pm.UserManagerService r0;
        com.android.server.pm.UserManagerService$LocalService $r1;

        r0 := @this: com.android.server.pm.UserManagerService;

        $r1 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$LocalService mLocalService>;

        return $r1;
    }

    int getMaxUsersOfTypePerParent(java.lang.String)
    {
        com.android.server.pm.UserManagerService r0;
        android.util.ArrayMap $r1;
        java.lang.Object $r2;
        int $i0;
        java.lang.String r3;
        com.android.server.pm.UserTypeDetails r4;

        r0 := @this: com.android.server.pm.UserManagerService;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<com.android.server.pm.UserManagerService: android.util.ArrayMap mUserTypes>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (com.android.server.pm.UserTypeDetails) $r2;

        if r4 != null goto label1;

        return 0;

     label1:
        $i0 = staticinvoke <com.android.server.pm.UserManagerService: int getMaxUsersOfTypePerParent(com.android.server.pm.UserTypeDetails)>(r4);

        return $i0;
    }

    int getNextAvailableId()
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.Object r1, $r7;
        java.util.Iterator r2;
        android.util.SparseBooleanArray $r3, $r5, $r8;
        int $i0, $i2, i3;
        java.lang.IllegalStateException $r4;
        java.util.LinkedList $r6;
        boolean $z0;
        java.lang.Throwable $r9;
        java.lang.Integer r10;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r1;

     label01:
        i3 = specialinvoke r0.<com.android.server.pm.UserManagerService: int scanNextAvailableIdLocked()>();

     label02:
        if i3 < 0 goto label05;

     label03:
        exitmonitor r1;

     label04:
        return i3;

     label05:
        $r3 = r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        $i0 = virtualinvoke $r3.<android.util.SparseBooleanArray: int size()>();

        if $i0 <= 0 goto label09;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("UserManagerService", "All available IDs are used. Recycling LRU ids.");

        $r5 = r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        virtualinvoke $r5.<android.util.SparseBooleanArray: void clear()>();

        $r6 = r0.<com.android.server.pm.UserManagerService: java.util.LinkedList mRecentlyRemovedIds>;

        r2 = virtualinvoke $r6.<java.util.LinkedList: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.Integer) $r7;

        $r8 = r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        $i2 = virtualinvoke r10.<java.lang.Integer: int intValue()>();

        virtualinvoke $r8.<android.util.SparseBooleanArray: void put(int,boolean)>($i2, 1);

     label07:
        goto label06;

     label08:
        i3 = specialinvoke r0.<com.android.server.pm.UserManagerService: int scanNextAvailableIdLocked()>();

     label09:
        exitmonitor r1;

     label10:
        if i3 < 0 goto label11;

        return i3;

     label11:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No user id available!");

        throw $r4;

     label12:
        $r9 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public android.content.pm.UserInfo getPrimaryUser()
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.Object r1, $r4;
        int i0, $i1, i2;
        android.util.SparseArray $r2, $r3;
        com.android.server.pm.UserManagerService$UserData $r5;
        boolean $z0, $z1;
        android.util.SparseBooleanArray $r6;
        java.lang.Throwable $r7;
        android.content.pm.UserInfo r8;

        r0 := @this: com.android.server.pm.UserManagerService;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("query users");

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        i0 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

     label02:
        i2 = 0;

     label03:
        if i2 >= i0 goto label07;

     label04:
        $r3 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        $r5 = (com.android.server.pm.UserManagerService$UserData) $r4;

        r8 = $r5.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $z0 = virtualinvoke r8.<android.content.pm.UserInfo: boolean isPrimary()>();

        if $z0 == 0 goto label06;

        $r6 = r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        $i1 = r8.<android.content.pm.UserInfo: int id>;

        $z1 = virtualinvoke $r6.<android.util.SparseBooleanArray: boolean get(int)>($i1);

        if $z1 != 0 goto label06;

        exitmonitor r1;

     label05:
        return r8;

     label06:
        i2 = i2 + 1;

        goto label03;

     label07:
        exitmonitor r1;

     label08:
        return null;

     label09:
        $r7 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public int[] getProfileIds(int, java.lang.String, boolean)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, $i2;
        boolean z0;
        long l1;
        android.util.IntArray $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r5, r8;
        java.lang.Throwable $r6, $r7;
        java.lang.Object r10;
        int[] r11;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $i2 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        if i0 == $i2 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getting profiles related to user ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageOrCreateUsersPermission(java.lang.String)>($r5);

     label1:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        r10 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r10;

     label3:
        $r1 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.util.IntArray getProfileIdsLU(int,java.lang.String,boolean)>(i0, r8, z0);

        r11 = virtualinvoke $r1.<android.util.IntArray: int[] toArray()>();

        exitmonitor r10;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return r11;

     label5:
        $r7 := @caughtexception;

     label6:
        exitmonitor r10;

     label7:
        throw $r7;

     label8:
        $r6 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r6;

        catch java.lang.Throwable from label2 to label3 with label8;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch java.lang.Throwable from label7 to label8 with label8;
    }

    public int[] getProfileIds(int, boolean)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        boolean z0;
        int[] $r1;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<com.android.server.pm.UserManagerService: int[] getProfileIds(int,java.lang.String,boolean)>(i0, null, z0);

        return $r1;
    }

    public android.content.pm.UserInfo getProfileParent(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        android.content.pm.UserInfo r3;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("get the profile parent");

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r1;

     label1:
        r3 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getProfileParentLU(int)>(i0);

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int getProfileParentId(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, $i1;
        com.android.server.pm.UserManagerService$LocalService $r1;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("get the profile parent");

        $r1 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$LocalService mLocalService>;

        $i1 = virtualinvoke $r1.<com.android.server.pm.UserManagerService$LocalService: int getProfileParentId(int)>(i0);

        return $i1;
    }

    public java.util.List getProfiles(int, boolean)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, $i2;
        boolean z0, z1;
        long l1;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;
        java.lang.Throwable $r5, $r6;
        java.lang.Object r8;
        java.util.List r9;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        z1 = 1;

        $i2 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        if i0 == $i2 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getting profiles related to user ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageOrCreateUsersPermission(java.lang.String)>($r4);

        goto label2;

     label1:
        z1 = staticinvoke <com.android.server.pm.UserManagerService: boolean hasManageUsersPermission()>();

     label2:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label3:
        r8 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r8;

     label4:
        r9 = specialinvoke r0.<com.android.server.pm.UserManagerService: java.util.List getProfilesLU(int,java.lang.String,boolean,boolean)>(i0, null, z0, z1);

        exitmonitor r8;

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return r9;

     label6:
        $r6 := @caughtexception;

     label7:
        exitmonitor r8;

     label8:
        throw $r6;

     label9:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r5;

        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
        catch java.lang.Throwable from label8 to label9 with label9;
    }

    public java.lang.String getSeedAccountName() throws android.os.RemoteException
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.Object r1;
        int $i0;
        com.android.server.pm.UserManagerService$UserData $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.pm.UserManagerService;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("Cannot get seed account information");

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r1;

     label1:
        $i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r2 = specialinvoke r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$UserData getUserDataLU(int)>($i0);

        r4 = $r2.<com.android.server.pm.UserManagerService$UserData: java.lang.String seedAccountName>;

        exitmonitor r1;

     label2:
        return r4;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.os.PersistableBundle getSeedAccountOptions() throws android.os.RemoteException
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.Object r1;
        int $i0;
        com.android.server.pm.UserManagerService$UserData $r2;
        java.lang.Throwable $r3;
        android.os.PersistableBundle r4;

        r0 := @this: com.android.server.pm.UserManagerService;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("Cannot get seed account information");

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r1;

     label1:
        $i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r2 = specialinvoke r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$UserData getUserDataLU(int)>($i0);

        r4 = $r2.<com.android.server.pm.UserManagerService$UserData: android.os.PersistableBundle seedAccountOptions>;

        exitmonitor r1;

     label2:
        return r4;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.lang.String getSeedAccountType() throws android.os.RemoteException
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.Object r1;
        int $i0;
        com.android.server.pm.UserManagerService$UserData $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.pm.UserManagerService;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("Cannot get seed account information");

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r1;

     label1:
        $i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r2 = specialinvoke r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$UserData getUserDataLU(int)>($i0);

        r4 = $r2.<com.android.server.pm.UserManagerService$UserData: java.lang.String seedAccountType>;

        exitmonitor r1;

     label2:
        return r4;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.lang.String getUserAccount(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        java.lang.Object r1, $r3;
        android.util.SparseArray $r2;
        com.android.server.pm.UserManagerService$UserData $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUserAndAcrossUsersFullPermission(java.lang.String)>("get user account");

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r4 = (com.android.server.pm.UserManagerService$UserData) $r3;

        r6 = $r4.<com.android.server.pm.UserManagerService$UserData: java.lang.String account>;

        exitmonitor r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int getUserBadgeColorResId(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, $i2, $i3;
        com.android.server.pm.UserTypeDetails r1;
        boolean $z0;
        android.content.pm.UserInfo r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r7;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int,java.lang.String)>(i0, "getUserBadgeColorResId");

        r4 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoNoChecks(int)>(i0);

        r1 = specialinvoke r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserTypeDetails getUserTypeDetails(android.content.pm.UserInfo)>(r4);

        if r4 == null goto label2;

        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<com.android.server.pm.UserTypeDetails: boolean hasBadge()>();

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $i2 = r4.<android.content.pm.UserInfo: int profileBadge>;

        $i3 = virtualinvoke r1.<com.android.server.pm.UserTypeDetails: int getBadgeColor(int)>($i2);

        return $i3;

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested badge dark color for non-badged user ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", $r7);

        return 0;
    }

    public int getUserBadgeDarkColorResId(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, $i2, $i3;
        com.android.server.pm.UserTypeDetails r1;
        boolean $z0;
        android.content.pm.UserInfo r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r7;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int,java.lang.String)>(i0, "getUserBadgeDarkColorResId");

        r4 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoNoChecks(int)>(i0);

        r1 = specialinvoke r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserTypeDetails getUserTypeDetails(android.content.pm.UserInfo)>(r4);

        if r4 == null goto label2;

        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<com.android.server.pm.UserTypeDetails: boolean hasBadge()>();

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $i2 = r4.<android.content.pm.UserInfo: int profileBadge>;

        $i3 = virtualinvoke r1.<com.android.server.pm.UserTypeDetails: int getDarkThemeBadgeColor(int)>($i2);

        return $i3;

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested badge color for non-badged user ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", $r7);

        return 0;
    }

    public int getUserBadgeLabelResId(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, $i2, $i3;
        com.android.server.pm.UserTypeDetails r1;
        boolean $z0;
        android.content.pm.UserInfo r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r7;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int,java.lang.String)>(i0, "getUserBadgeLabelResId");

        r4 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoNoChecks(int)>(i0);

        r1 = specialinvoke r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserTypeDetails getUserTypeDetails(android.content.pm.UserInfo)>(r4);

        if r4 == null goto label2;

        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<com.android.server.pm.UserTypeDetails: boolean hasBadge()>();

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $i2 = r4.<android.content.pm.UserInfo: int profileBadge>;

        $i3 = virtualinvoke r1.<com.android.server.pm.UserTypeDetails: int getBadgeLabel(int)>($i2);

        return $i3;

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested badge label for non-badged user ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", $r7);

        return 0;
    }

    public int getUserBadgeNoBackgroundResId(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, $i2;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;
        boolean $z0;
        com.android.server.pm.UserTypeDetails r5;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int,java.lang.String)>(i0, "getUserBadgeNoBackgroundResId");

        r5 = specialinvoke r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserTypeDetails getUserTypeDetailsNoChecks(int)>(i0);

        if r5 == null goto label2;

        $z0 = virtualinvoke r5.<com.android.server.pm.UserTypeDetails: boolean hasBadge()>();

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $i2 = virtualinvoke r5.<com.android.server.pm.UserTypeDetails: int getBadgeNoBackground()>();

        return $i2;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested badge (no background) for non-badged user ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", $r4);

        return 0;
    }

    public int getUserBadgeResId(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, $i2;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;
        boolean $z0;
        com.android.server.pm.UserTypeDetails r5;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int,java.lang.String)>(i0, "getUserBadgeResId");

        r5 = specialinvoke r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserTypeDetails getUserTypeDetailsNoChecks(int)>(i0);

        if r5 == null goto label2;

        $z0 = virtualinvoke r5.<com.android.server.pm.UserTypeDetails: boolean hasBadge()>();

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $i2 = virtualinvoke r5.<com.android.server.pm.UserTypeDetails: int getBadgePlain()>();

        return $i2;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested badge for non-badged user ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", $r4);

        return 0;
    }

    public long getUserCreationTime(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, i1, $i3;
        java.lang.Object r1;
        android.content.pm.UserInfo r2, r5;
        java.lang.SecurityException $r3;
        long $l2;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r1;

        if i1 != i0 goto label03;

     label01:
        r5 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLU(int)>(i0);

     label02:
        goto label06;

     label03:
        r2 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getProfileParentLU(int)>(i0);

     label04:
        r5 = null;

        if r2 == null goto label06;

        r5 = null;

     label05:
        $i3 = r2.<android.content.pm.UserInfo: int id>;

        if $i3 != i1 goto label06;

        r5 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLU(int)>(i0);

     label06:
        exitmonitor r1;

     label07:
        if r5 == null goto label08;

        $l2 = r5.<android.content.pm.UserInfo: long creationTime>;

        return $l2;

     label08:
        $r3 = new java.lang.SecurityException;

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>("userId can only be the calling user or a managed profile associated with this user");

        throw $r3;

     label09:
        $r4 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public int getUserHandle(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, i1, i2, $i3, i4;
        java.lang.Object r1;
        android.content.pm.UserInfo r2;
        java.lang.Throwable $r3;
        int[] r4;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r1;

     label01:
        r4 = r0.<com.android.server.pm.UserManagerService: int[] mUserIds>;

        i1 = lengthof r4;

     label02:
        i4 = 0;

     label03:
        if i4 >= i1 goto label09;

        i2 = r4[i4];

     label04:
        r2 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLU(int)>(i2);

     label05:
        if r2 == null goto label08;

     label06:
        $i3 = r2.<android.content.pm.UserInfo: int serialNumber>;

        if $i3 != i0 goto label08;

        exitmonitor r1;

     label07:
        return i2;

     label08:
        i4 = i4 + 1;

        goto label03;

     label09:
        exitmonitor r1;

     label10:
        return -1;

     label11:
        $r3 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public android.os.ParcelFileDescriptor getUserIcon(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, i1, i2, i5;
        boolean $z0, $z1, z2;
        java.lang.SecurityException $r1;
        java.lang.String $r4, $r10, r11;
        android.content.pm.UserInfo $r5, r9;
        java.lang.Throwable $r6, $r7;
        java.lang.Object r8;
        java.io.File r12;
        android.os.ParcelFileDescriptor r13;
        java.lang.StringBuilder r15;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        $z0 = staticinvoke <com.android.server.pm.UserManagerService: boolean hasManageUsersOrPermission(java.lang.String)>("android.permission.GET_ACCOUNTS_PRIVILEGED");

        if $z0 == 0 goto label21;

        r8 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r8;

     label01:
        r9 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoNoChecks(int)>(i0);

     label02:
        if r9 == null goto label16;

     label03:
        $z1 = r9.<android.content.pm.UserInfo: boolean partial>;

        if $z1 == 0 goto label05;

     label04:
        goto label16;

     label05:
        i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r5 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoNoChecks(int)>(i1);

        i5 = $r5.<android.content.pm.UserInfo: int profileGroupId>;

        i2 = r9.<android.content.pm.UserInfo: int profileGroupId>;

     label06:
        if i5 == -10000 goto label07;

        if i5 != i2 goto label07;

        z2 = 1;

        goto label08;

     label07:
        z2 = 0;

     label08:
        if i1 == i0 goto label10;

        if z2 != 0 goto label10;

     label09:
        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("get the icon of a user who is not related");

     label10:
        $r10 = r9.<android.content.pm.UserInfo: java.lang.String iconPath>;

        if $r10 != null goto label12;

        exitmonitor r8;

     label11:
        return null;

     label12:
        r11 = r9.<android.content.pm.UserInfo: java.lang.String iconPath>;

        exitmonitor r8;

     label13:
        r12 = new java.io.File;

        specialinvoke r12.<java.io.File: void <init>(java.lang.String)>(r11);

        r13 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>(r12, 268435456);

     label14:
        return r13;

     label15:
        $r7 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("UserManagerService", "Couldn\'t find icon file", $r7);

        return null;

     label16:
        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getUserIcon: unknown user #");

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserManagerService", $r4);

        exitmonitor r8;

     label17:
        return null;

     label18:
        $r6 := @caughtexception;

     label19:
        exitmonitor r8;

     label20:
        throw $r6;

     label21:
        $r1 = new java.lang.SecurityException;

        specialinvoke $r1.<java.lang.SecurityException: void <init>(java.lang.String)>("You need MANAGE_USERS or GET_ACCOUNTS_PRIVILEGED permissions to: get user icon");

        throw $r1;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label05 to label06 with label18;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch java.lang.Throwable from label10 to label11 with label18;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.io.FileNotFoundException from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
    }

    public int getUserIconBadgeResId(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, $i2;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;
        boolean $z0;
        com.android.server.pm.UserTypeDetails r5;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int,java.lang.String)>(i0, "getUserIconBadgeResId");

        r5 = specialinvoke r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserTypeDetails getUserTypeDetailsNoChecks(int)>(i0);

        if r5 == null goto label2;

        $z0 = virtualinvoke r5.<com.android.server.pm.UserTypeDetails: boolean hasBadge()>();

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $i2 = virtualinvoke r5.<com.android.server.pm.UserTypeDetails: int getIconBadge()>();

        return $i2;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested icon badge for non-badged user ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", $r4);

        return 0;
    }

    public int[] getUserIds()
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        int[] r3;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r1;

     label1:
        r3 = r0.<com.android.server.pm.UserManagerService: int[] mUserIds>;

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.content.pm.UserInfo getUserInfo(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        java.lang.Object r1;
        android.content.pm.UserInfo $r2, r4;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageOrCreateUsersPermission(java.lang.String)>("query user");

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r1;

     label1:
        $r2 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLU(int)>(i0);

        r4 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo userWithName(android.content.pm.UserInfo)>($r2);

        exitmonitor r1;

     label2:
        return r4;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.lang.String getUserName()
    {
        com.android.server.pm.UserManagerService r0;
        int i0, $i1;
        java.lang.Object r1;
        boolean $z0;
        java.lang.SecurityException $r2;
        android.content.pm.UserInfo $r3, r5;
        java.lang.Throwable $r4;
        java.lang.String r6;

        r0 := @this: com.android.server.pm.UserManagerService;

        $z0 = staticinvoke <com.android.server.pm.UserManagerService: boolean hasManageUsersOrPermission(java.lang.String)>("android.permission.GET_ACCOUNTS_PRIVILEGED");

        if $z0 == 0 goto label9;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i0 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i1);

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r1;

     label1:
        $r3 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLU(int)>(i0);

        r5 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo userWithName(android.content.pm.UserInfo)>($r3);

     label2:
        if r5 != null goto label3;

        r6 = "";

        goto label4;

     label3:
        r6 = r5.<android.content.pm.UserInfo: java.lang.String name>;

     label4:
        exitmonitor r1;

     label5:
        return r6;

     label6:
        $r4 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r4;

     label9:
        $r2 = new java.lang.SecurityException;

        specialinvoke $r2.<java.lang.SecurityException: void <init>(java.lang.String)>("You need MANAGE_USERS or GET_ACCOUNTS_PRIVILEGED permissions to: get user name");

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public int getUserRestrictionSource(java.lang.String, int)
    {
        com.android.server.pm.UserManagerService r0;
        int $i0, $i1, i2, i3, i4;
        java.lang.Object $r1;
        android.os.UserManager$EnforcingUser $r2;
        java.lang.String r3;
        java.util.List r4;

        r0 := @this: com.android.server.pm.UserManagerService;

        r3 := @parameter0: java.lang.String;

        i2 := @parameter1: int;

        r4 = virtualinvoke r0.<com.android.server.pm.UserManagerService: java.util.List getUserRestrictionSources(java.lang.String,int)>(r3, i2);

        i3 = 0;

        $i0 = interfaceinvoke r4.<java.util.List: int size()>();

        i4 = $i0 - 1;

     label1:
        if i4 < 0 goto label2;

        $r1 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i4);

        $r2 = (android.os.UserManager$EnforcingUser) $r1;

        $i1 = virtualinvoke $r2.<android.os.UserManager$EnforcingUser: int getUserRestrictionSource()>();

        i3 = i3 | $i1;

        i4 = i4 + -1;

        goto label1;

     label2:
        return i3;
    }

    public java.util.List getUserRestrictionSources(java.lang.String, int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, $i1, $i2;
        java.lang.Object r2;
        boolean $z0, $z1;
        java.util.ArrayList $r3;
        com.android.server.pm.RestrictionsSet $r4, $r6;
        java.util.List $r5, $r7, $r9;
        android.os.UserManager$EnforcingUser $r8;
        java.lang.Throwable $r10;
        java.lang.String r11;

        r0 := @this: com.android.server.pm.UserManagerService;

        r11 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("getUserRestrictionSource");

        $z0 = virtualinvoke r0.<com.android.server.pm.UserManagerService: boolean hasUserRestriction(java.lang.String,int)>(r11, i0);

        if $z0 != 0 goto label1;

        $r9 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r9;

     label1:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $z1 = virtualinvoke r0.<com.android.server.pm.UserManagerService: boolean hasBaseUserRestriction(java.lang.String,int)>(r11, i0);

        if $z1 == 0 goto label2;

        $r8 = new android.os.UserManager$EnforcingUser;

        specialinvoke $r8.<android.os.UserManager$EnforcingUser: void <init>(int,int)>(-10000, 1);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r8);

     label2:
        r2 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mRestrictionsLock>;

        entermonitor r2;

     label3:
        $r4 = specialinvoke r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet getDevicePolicyLocalRestrictionsForTargetUserLR(int)>(i0);

        $i1 = r0.<com.android.server.pm.UserManagerService: int mDeviceOwnerUserId>;

        $r5 = virtualinvoke $r4.<com.android.server.pm.RestrictionsSet: java.util.List getEnforcingUsers(java.lang.String,int)>(r11, $i1);

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>($r5);

        $r6 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet mDevicePolicyGlobalUserRestrictions>;

        $i2 = r0.<com.android.server.pm.UserManagerService: int mDeviceOwnerUserId>;

        $r7 = virtualinvoke $r6.<com.android.server.pm.RestrictionsSet: java.util.List getEnforcingUsers(java.lang.String,int)>(r11, $i2);

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>($r7);

        exitmonitor r2;

     label4:
        return $r3;

     label5:
        $r10 := @caughtexception;

     label6:
        exitmonitor r2;

     label7:
        throw $r10;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public android.os.Bundle getUserRestrictions(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        android.os.Bundle $r1, $r2;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int,java.lang.String)>(i0, "getUserRestrictions");

        $r1 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.os.Bundle getEffectiveUserRestrictions(int)>(i0);

        $r2 = staticinvoke <com.android.server.pm.UserRestrictionsUtils: android.os.Bundle clone(android.os.Bundle)>($r1);

        return $r2;
    }

    public int getUserSerialNumber(int)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        int i0, i1;
        android.content.pm.UserInfo r3;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r1;

     label01:
        r3 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLU(int)>(i0);

     label02:
        if r3 == null goto label05;

     label03:
        i1 = r3.<android.content.pm.UserInfo: int serialNumber>;

     label04:
        goto label06;

     label05:
        i1 = -1;

     label06:
        exitmonitor r1;

     label07:
        return i1;

     label08:
        $r2 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public long getUserStartRealtime()
    {
        com.android.server.pm.UserManagerService r0;
        int i0, $i2;
        java.lang.Object r1;
        long l1;
        java.lang.Throwable $r2;
        com.android.server.pm.UserManagerService$UserData r3;

        r0 := @this: com.android.server.pm.UserManagerService;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i0 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i2);

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r1;

     label1:
        r3 = specialinvoke r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$UserData getUserDataLU(int)>(i0);

     label2:
        if r3 == null goto label5;

     label3:
        l1 = r3.<com.android.server.pm.UserManagerService$UserData: long startRealtime>;

        exitmonitor r1;

     label4:
        return l1;

     label5:
        exitmonitor r1;

     label6:
        return 0L;

     label7:
        $r2 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public long getUserUnlockRealtime()
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.Object r1;
        long l0;
        int $i1, $i2;
        java.lang.Throwable $r2;
        com.android.server.pm.UserManagerService$UserData r3;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r1;

     label1:
        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i1);

        r3 = specialinvoke r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$UserData getUserDataLU(int)>($i2);

     label2:
        if r3 == null goto label5;

     label3:
        l0 = r3.<com.android.server.pm.UserManagerService$UserData: long unlockRealtime>;

        exitmonitor r1;

     label4:
        return l0;

     label5:
        exitmonitor r1;

     label6:
        return 0L;

     label7:
        $r2 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public java.util.List getUsers(boolean)
    {
        com.android.server.pm.UserManagerService r0;
        boolean z0;
        java.util.List $r1;

        r0 := @this: com.android.server.pm.UserManagerService;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<com.android.server.pm.UserManagerService: java.util.List getUsers(boolean,boolean,boolean)>(1, z0, 1);

        return $r1;
    }

    public java.util.List getUsers(boolean, boolean, boolean)
    {
        com.android.server.pm.UserManagerService r0;
        boolean z0, z1, z2;
        java.util.List $r1;

        r0 := @this: com.android.server.pm.UserManagerService;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageOrCreateUsersPermission(java.lang.String)>("query users");

        $r1 = specialinvoke r0.<com.android.server.pm.UserManagerService: java.util.List getUsersInternal(boolean,boolean,boolean)>(z0, z1, z2);

        return $r1;
    }

    public boolean hasBadge(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        com.android.server.pm.UserTypeDetails r1;
        boolean $z0, z1;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int,java.lang.String)>(i0, "hasBadge");

        r1 = specialinvoke r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserTypeDetails getUserTypeDetailsNoChecks(int)>(i0);

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<com.android.server.pm.UserTypeDetails: boolean hasBadge()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public boolean hasBaseUserRestriction(java.lang.String, int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        java.lang.Object r1;
        android.os.Bundle r2;
        com.android.server.pm.RestrictionsSet $r3;
        boolean $z1, z2, z3;
        java.lang.Throwable $r4;
        java.lang.String r5;

        r0 := @this: com.android.server.pm.UserManagerService;

        r5 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageOrCreateUsersPermission(java.lang.String)>("hasBaseUserRestriction");

        z2 = staticinvoke <com.android.server.pm.UserRestrictionsUtils: boolean isValidRestriction(java.lang.String)>(r5);

        if z2 != 0 goto label01;

        return 0;

     label01:
        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mRestrictionsLock>;

        entermonitor r1;

     label02:
        $r3 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet mBaseUserRestrictions>;

        r2 = virtualinvoke $r3.<com.android.server.pm.RestrictionsSet: android.os.Bundle getRestrictions(int)>(i0);

     label03:
        z3 = 0;

        if r2 == null goto label06;

        z3 = 0;

     label04:
        $z1 = virtualinvoke r2.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(r5, 0);

        if $z1 == 0 goto label06;

     label05:
        z3 = 1;

     label06:
        exitmonitor r1;

     label07:
        return z3;

     label08:
        $r4 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r4;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    boolean hasManagedProfile(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, i1, $i2, i3;
        java.lang.Object r1, $r5;
        android.content.pm.UserInfo r2, r8;
        android.util.SparseArray $r3, $r4;
        com.android.server.pm.UserManagerService$UserData $r6;
        boolean $z0;
        java.lang.Throwable $r7;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r1;

     label01:
        r2 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLU(int)>(i0);

        $r3 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        i1 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

     label02:
        i3 = 0;

     label03:
        if i3 >= i1 goto label07;

     label04:
        $r4 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        $r6 = (com.android.server.pm.UserManagerService$UserData) $r5;

        r8 = $r6.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $i2 = r8.<android.content.pm.UserInfo: int id>;

        if i0 == $i2 goto label06;

        $z0 = staticinvoke <com.android.server.pm.UserManagerService: boolean isProfileOf(android.content.pm.UserInfo,android.content.pm.UserInfo)>(r2, r8);

        if $z0 == 0 goto label06;

        exitmonitor r1;

     label05:
        return 1;

     label06:
        i3 = i3 + 1;

        goto label03;

     label07:
        exitmonitor r1;

     label08:
        return 0;

     label09:
        $r7 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public boolean hasRestrictedProfiles()
    {
        com.android.server.pm.UserManagerService r0;
        int i0, i1, $i2, $i3, i4;
        java.lang.Object r1, $r4;
        android.util.SparseArray $r2, $r3;
        com.android.server.pm.UserManagerService$UserData $r5;
        java.lang.Throwable $r6;
        android.content.pm.UserInfo r7;

        r0 := @this: com.android.server.pm.UserManagerService;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("hasRestrictedProfiles");

        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        i1 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

     label02:
        i4 = 0;

     label03:
        if i4 >= i1 goto label07;

     label04:
        $r3 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        $r5 = (com.android.server.pm.UserManagerService$UserData) $r4;

        r7 = $r5.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $i2 = r7.<android.content.pm.UserInfo: int id>;

        if i0 == $i2 goto label06;

        $i3 = r7.<android.content.pm.UserInfo: int restrictedProfileParentId>;

        if $i3 != i0 goto label06;

        exitmonitor r1;

     label05:
        return 1;

     label06:
        i4 = i4 + 1;

        goto label03;

     label07:
        exitmonitor r1;

     label08:
        return 0;

     label09:
        $r6 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public boolean hasUserRestriction(java.lang.String, int)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1;
        int i0;
        com.android.server.pm.UserManagerService$LocalService $r2;
        boolean $z0;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int,java.lang.String)>(i0, "hasUserRestriction");

        $r2 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$LocalService mLocalService>;

        $z0 = virtualinvoke $r2.<com.android.server.pm.UserManagerService$LocalService: boolean hasUserRestriction(java.lang.String,int)>(r1, i0);

        return $z0;
    }

    public boolean hasUserRestrictionOnAnyUser(java.lang.String)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1;
        java.util.List r2;
        android.os.Bundle r3;
        boolean $z0, $z1;
        int $i0, $i1, i2;
        java.lang.Object $r4;
        android.content.pm.UserInfo $r5;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <com.android.server.pm.UserRestrictionsUtils: boolean isValidRestriction(java.lang.String)>(r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = virtualinvoke r0.<com.android.server.pm.UserManagerService: java.util.List getUsers(boolean)>(1);

        i2 = 0;

     label2:
        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if i2 >= $i0 goto label4;

        $r4 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i2);

        $r5 = (android.content.pm.UserInfo) $r4;

        $i1 = $r5.<android.content.pm.UserInfo: int id>;

        r3 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.os.Bundle getEffectiveUserRestrictions(int)>($i1);

        if r3 == null goto label3;

        $z1 = virtualinvoke r3.<android.os.Bundle: boolean getBoolean(java.lang.String)>(r1);

        if $z1 == 0 goto label3;

        return 1;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        return 0;
    }

    boolean installWhitelistedSystemPackages(boolean, boolean, android.util.ArraySet)
    {
        com.android.server.pm.UserManagerService r0;
        boolean z0, z1, $z2;
        android.util.ArraySet r1;
        com.android.server.pm.UserSystemPackageInstaller $r2;

        r0 := @this: com.android.server.pm.UserManagerService;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r1 := @parameter2: android.util.ArraySet;

        $r2 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserSystemPackageInstaller mSystemPackageInstaller>;

        $z2 = virtualinvoke $r2.<com.android.server.pm.UserSystemPackageInstaller: boolean installWhitelistedSystemPackages(boolean,boolean,android.util.ArraySet)>(z0, z1, r1);

        return $z2;
    }

    public boolean isDemoUser(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, $i1;
        boolean $z0, $z1, z2;
        java.lang.StringBuilder $r1;
        java.lang.SecurityException $r5;
        java.lang.String $r6;
        java.lang.Throwable $r7;
        java.lang.Object r9;
        android.content.pm.UserInfo r10;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        if $i1 == i0 goto label02;

        $z1 = staticinvoke <com.android.server.pm.UserManagerService: boolean hasManageUsersPermission()>();

        if $z1 == 0 goto label01;

        goto label02;

     label01:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("You need MANAGE_USERS permission to query if u=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is a demo user");

        $r5 = new java.lang.SecurityException;

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.SecurityException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label02:
        r9 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r9;

     label03:
        r10 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLU(int)>(i0);

     label04:
        if r10 == null goto label07;

     label05:
        $z0 = virtualinvoke r10.<android.content.pm.UserInfo: boolean isDemo()>();

        if $z0 == 0 goto label07;

     label06:
        z2 = 1;

        goto label08;

     label07:
        z2 = 0;

     label08:
        exitmonitor r9;

     label09:
        return z2;

     label10:
        $r7 := @caughtexception;

     label11:
        exitmonitor r9;

     label12:
        throw $r7;

        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public boolean isManagedProfile(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        java.lang.Object r1;
        boolean $z0, z1;
        java.lang.Throwable $r2;
        android.content.pm.UserInfo r3;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int,java.lang.String)>(i0, "isManagedProfile");

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r1;

     label01:
        r3 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLU(int)>(i0);

     label02:
        if r3 == null goto label05;

     label03:
        $z0 = virtualinvoke r3.<android.content.pm.UserInfo: boolean isManagedProfile()>();

        if $z0 == 0 goto label05;

     label04:
        z1 = 1;

        goto label06;

     label05:
        z1 = 0;

     label06:
        exitmonitor r1;

     label07:
        return z1;

     label08:
        $r2 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public boolean isPreCreated(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        java.lang.Object r1;
        boolean $z0, z1;
        java.lang.Throwable $r2;
        android.content.pm.UserInfo r3;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int,java.lang.String)>(i0, "isPreCreated");

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r1;

     label01:
        r3 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLU(int)>(i0);

     label02:
        if r3 == null goto label05;

     label03:
        $z0 = r3.<android.content.pm.UserInfo: boolean preCreated>;

        if $z0 == 0 goto label05;

     label04:
        z1 = 1;

        goto label06;

     label05:
        z1 = 0;

     label06:
        exitmonitor r1;

     label07:
        return z1;

     label08:
        $r2 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public boolean isProfile(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        java.lang.Object r1;
        boolean $z0, z1;
        java.lang.Throwable $r2;
        android.content.pm.UserInfo r3;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int,java.lang.String)>(i0, "isProfile");

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r1;

     label01:
        r3 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLU(int)>(i0);

     label02:
        if r3 == null goto label05;

     label03:
        $z0 = virtualinvoke r3.<android.content.pm.UserInfo: boolean isProfile()>();

        if $z0 == 0 goto label05;

     label04:
        z1 = 1;

        goto label06;

     label05:
        z1 = 0;

     label06:
        exitmonitor r1;

     label07:
        return z1;

     label08:
        $r2 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public boolean isQuietModeEnabled(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        java.lang.Object r1, r4;
        boolean z0, $z1;
        java.lang.Throwable $r2, $r3;
        android.content.pm.UserInfo r5;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r1;

     label01:
        r4 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r4;

     label02:
        r5 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLU(int)>(i0);

        exitmonitor r4;

     label03:
        if r5 == null goto label08;

     label04:
        $z1 = virtualinvoke r5.<android.content.pm.UserInfo: boolean isManagedProfile()>();

        if $z1 != 0 goto label06;

     label05:
        goto label08;

     label06:
        z0 = virtualinvoke r5.<android.content.pm.UserInfo: boolean isQuietModeEnabled()>();

        exitmonitor r1;

     label07:
        return z0;

     label08:
        exitmonitor r1;

     label09:
        return 0;

     label10:
        $r2 := @caughtexception;

     label11:
        exitmonitor r4;

     label12:
        throw $r2;

     label13:
        $r3 := @caughtexception;

     label14:
        exitmonitor r1;

     label15:
        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label12 to label13 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public boolean isRestricted()
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.Object r1;
        boolean z0;
        int $i0;
        android.content.pm.UserInfo $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r1;

     label1:
        $i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r3 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLU(int)>($i0);

        z0 = virtualinvoke $r3.<android.content.pm.UserInfo: boolean isRestricted()>();

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean isSameProfileGroup(int, int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, i1;
        boolean $z0;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 != i1 goto label1;

        return 1;

     label1:
        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("check if in the same profile group");

        $z0 = specialinvoke r0.<com.android.server.pm.UserManagerService: boolean isSameProfileGroupNoChecks(int,int)>(i0, i1);

        return $z0;
    }

    public boolean isSettingRestrictedForUser(java.lang.String, int, java.lang.String, int)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1, r2;
        int i0, i1, $i2;
        java.lang.SecurityException $r3;
        android.content.Context $r4;
        boolean $z0;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i2 != 1000 goto label1;

        $r4 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $z0 = staticinvoke <com.android.server.pm.UserRestrictionsUtils: boolean isSettingRestrictedForUser(android.content.Context,java.lang.String,int,java.lang.String,int)>($r4, r1, i0, r2, i1);

        return $z0;

     label1:
        $r3 = new java.lang.SecurityException;

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>("Non-system caller");

        throw $r3;
    }

    boolean isUserInitialized(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        com.android.server.pm.UserManagerService$LocalService $r1;
        boolean $z0;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$LocalService mLocalService>;

        $z0 = virtualinvoke $r1.<com.android.server.pm.UserManagerService$LocalService: boolean isUserInitialized(int)>(i0);

        return $z0;
    }

    public boolean isUserNameSet(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        java.lang.Object r1;
        boolean $z0, z1;
        java.lang.SecurityException $r2;
        java.lang.String $r3;
        java.lang.Throwable $r4;
        android.content.pm.UserInfo r5;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        $z0 = staticinvoke <com.android.server.pm.UserManagerService: boolean hasManageUsersOrPermission(java.lang.String)>("android.permission.GET_ACCOUNTS_PRIVILEGED");

        if $z0 == 0 goto label11;

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r1;

     label01:
        r5 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLU(int)>(i0);

     label02:
        if r5 == null goto label05;

     label03:
        $r3 = r5.<android.content.pm.UserInfo: java.lang.String name>;

        if $r3 == null goto label05;

     label04:
        z1 = 1;

        goto label06;

     label05:
        z1 = 0;

     label06:
        exitmonitor r1;

     label07:
        return z1;

     label08:
        $r4 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r4;

     label11:
        $r2 = new java.lang.SecurityException;

        specialinvoke $r2.<java.lang.SecurityException: void <init>(java.lang.String)>("You need MANAGE_USERS or GET_ACCOUNTS_PRIVILEGED permissions to: get whether user name is set");

        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public boolean isUserOfType(int, java.lang.String)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        java.lang.String r1, $r2;
        boolean $z0, z1;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("check user type");

        if r1 == null goto label1;

        $r2 = specialinvoke r0.<com.android.server.pm.UserManagerService: java.lang.String getUserTypeNoChecks(int)>(i0);

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public boolean isUserRunning(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        com.android.server.pm.UserManagerService$LocalService $r1;
        boolean $z0;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int,java.lang.String)>(i0, "isUserRunning");

        $r1 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$LocalService mLocalService>;

        $z0 = virtualinvoke $r1.<com.android.server.pm.UserManagerService$LocalService: boolean isUserRunning(int)>(i0);

        return $z0;
    }

    boolean isUserTypeSubtypeOfFull(java.lang.String)
    {
        com.android.server.pm.UserManagerService r0;
        android.util.ArrayMap $r1;
        java.lang.Object $r2;
        boolean $z0, z1;
        java.lang.String r3;
        com.android.server.pm.UserTypeDetails r4;

        r0 := @this: com.android.server.pm.UserManagerService;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<com.android.server.pm.UserManagerService: android.util.ArrayMap mUserTypes>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (com.android.server.pm.UserTypeDetails) $r2;

        if r4 == null goto label1;

        $z0 = virtualinvoke r4.<com.android.server.pm.UserTypeDetails: boolean isFull()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    boolean isUserTypeSubtypeOfProfile(java.lang.String)
    {
        com.android.server.pm.UserManagerService r0;
        android.util.ArrayMap $r1;
        java.lang.Object $r2;
        boolean $z0, z1;
        java.lang.String r3;
        com.android.server.pm.UserTypeDetails r4;

        r0 := @this: com.android.server.pm.UserManagerService;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<com.android.server.pm.UserManagerService: android.util.ArrayMap mUserTypes>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (com.android.server.pm.UserTypeDetails) $r2;

        if r4 == null goto label1;

        $z0 = virtualinvoke r4.<com.android.server.pm.UserTypeDetails: boolean isProfile()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    boolean isUserTypeSubtypeOfSystem(java.lang.String)
    {
        com.android.server.pm.UserManagerService r0;
        android.util.ArrayMap $r1;
        java.lang.Object $r2;
        boolean $z0, z1;
        java.lang.String r3;
        com.android.server.pm.UserTypeDetails r4;

        r0 := @this: com.android.server.pm.UserManagerService;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<com.android.server.pm.UserManagerService: android.util.ArrayMap mUserTypes>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (com.android.server.pm.UserTypeDetails) $r2;

        if r4 == null goto label1;

        $z0 = virtualinvoke r4.<com.android.server.pm.UserTypeDetails: boolean isSystem()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public boolean isUserUnlocked(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        com.android.server.pm.UserManagerService$LocalService $r1;
        boolean $z0;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int,java.lang.String)>(i0, "isUserUnlocked");

        $r1 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$LocalService mLocalService>;

        $z0 = virtualinvoke $r1.<com.android.server.pm.UserManagerService$LocalService: boolean isUserUnlocked(int)>(i0);

        return $z0;
    }

    public boolean isUserUnlockingOrUnlocked(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        com.android.server.pm.UserManagerService$LocalService $r1;
        boolean $z0;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int,java.lang.String)>(i0, "isUserUnlockingOrUnlocked");

        $r1 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$LocalService mLocalService>;

        $z0 = virtualinvoke $r1.<com.android.server.pm.UserManagerService$LocalService: boolean isUserUnlockingOrUnlocked(int)>(i0);

        return $z0;
    }

    public void makeInitialized(int)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.Object r1, $r4;
        com.android.server.pm.UserManagerService$UserData r2;
        android.util.SparseArray $r3;
        java.lang.String $r7;
        android.content.pm.UserInfo $r8, $r9, r11;
        boolean $z1, z2;
        int $i1, $i2, $i3, $i4, i5;
        java.lang.Throwable $r10;
        java.lang.StringBuilder r12;

        r0 := @this: com.android.server.pm.UserManagerService;

        i5 := @parameter0: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("makeInitialized");

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i5);

        r2 = (com.android.server.pm.UserManagerService$UserData) $r4;

     label02:
        if r2 == null goto label11;

     label03:
        $r8 = r2.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $z1 = $r8.<android.content.pm.UserInfo: boolean partial>;

        if $z1 == 0 goto label05;

     label04:
        goto label11;

     label05:
        z2 = 0;

     label06:
        $r9 = r2.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $i1 = $r9.<android.content.pm.UserInfo: int flags>;

        $i2 = $i1 & 16;

        if $i2 != 0 goto label08;

        r11 = r2.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $i3 = r11.<android.content.pm.UserInfo: int flags>;

        $i4 = $i3 | 16;

        r11.<android.content.pm.UserInfo: int flags> = $i4;

     label07:
        z2 = 1;

     label08:
        exitmonitor r1;

     label09:
        if z2 == 0 goto label10;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void scheduleWriteUser(com.android.server.pm.UserManagerService$UserData)>(r2);

     label10:
        return;

     label11:
        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("makeInitialized: unknown user #");

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r7 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserManagerService", $r7);

        exitmonitor r1;

     label12:
        return;

     label13:
        $r10 := @caughtexception;

     label14:
        exitmonitor r1;

     label15:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public boolean markGuestForDeletion(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, $i2, $i3, $i4;
        long l1;
        android.os.Bundle $r1;
        boolean $z0, $z1, $z2;
        android.util.SparseArray $r2;
        java.lang.Object $r3, r10, r11;
        android.util.SparseBooleanArray $r4;
        android.content.pm.UserInfo $r5, $r6, r13;
        java.lang.Throwable $r7, $r8, $r9;
        com.android.server.pm.UserManagerService$UserData r12;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("Only the system can remove users");

        $i2 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r1 = virtualinvoke r0.<com.android.server.pm.UserManagerService: android.os.Bundle getUserRestrictions(int)>($i2);

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("no_remove_user", 0);

        if $z0 == 0 goto label01;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserManagerService", "Cannot remove user. DISALLOW_REMOVE_USER is enabled.");

        return 0;

     label01:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        r10 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r10;

     label03:
        r11 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r11;

     label04:
        $r2 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r12 = (com.android.server.pm.UserManagerService$UserData) $r3;

     label05:
        if i0 == 0 goto label13;

        if r12 == null goto label13;

     label06:
        $r4 = r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        $z1 = virtualinvoke $r4.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        if $z1 == 0 goto label08;

     label07:
        goto label13;

     label08:
        exitmonitor r11;

     label09:
        $r5 = r12.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $z2 = virtualinvoke $r5.<android.content.pm.UserInfo: boolean isGuest()>();

        if $z2 != 0 goto label11;

        exitmonitor r10;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 0;

     label11:
        $r6 = r12.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $r6.<android.content.pm.UserInfo: boolean guestToRemove> = 1;

        r13 = r12.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $i3 = r13.<android.content.pm.UserInfo: int flags>;

        $i4 = $i3 | 64;

        r13.<android.content.pm.UserInfo: int flags> = $i4;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLP(com.android.server.pm.UserManagerService$UserData)>(r12);

        exitmonitor r10;

     label12:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 1;

     label13:
        exitmonitor r11;

     label14:
        exitmonitor r10;

     label15:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 0;

     label16:
        $r7 := @caughtexception;

     label17:
        exitmonitor r11;

     label18:
        throw $r7;

     label19:
        $r9 := @caughtexception;

     label20:
        exitmonitor r10;

     label21:
        throw $r9;

     label22:
        $r8 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r8;

        catch java.lang.Throwable from label02 to label03 with label22;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label04 to label05 with label16;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label09 to label10 with label19;
        catch java.lang.Throwable from label11 to label12 with label19;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label14 to label15 with label19;
        catch java.lang.Throwable from label17 to label18 with label16;
        catch java.lang.Throwable from label18 to label19 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
        catch java.lang.Throwable from label21 to label22 with label22;
    }

    public void onBeforeStartUser(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, i1;
        android.content.pm.UserInfo r1;
        boolean z0, $z1;
        com.android.server.utils.TimingsTraceAndSlog $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r6, $r7, $r8;
        com.android.server.pm.UserDataPreparer $r9;
        com.android.server.pm.PackageManagerService $r10;
        java.lang.Throwable $r11;
        java.lang.Object r14;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfo(int)>(i0);

        if r1 != null goto label1;

        return;

     label1:
        $r2 = new com.android.server.utils.TimingsTraceAndSlog;

        specialinvoke $r2.<com.android.server.utils.TimingsTraceAndSlog: void <init>()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onBeforeStartUser-");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>($r6);

        i1 = r1.<android.content.pm.UserInfo: int serialNumber>;

        $r8 = <android.os.Build: java.lang.String FINGERPRINT>;

        $r7 = r1.<android.content.pm.UserInfo: java.lang.String lastLoggedInFingerprint>;

        z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        virtualinvoke $r2.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("prepareUserData");

        $r9 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserDataPreparer mUserDataPreparer>;

        virtualinvoke $r9.<com.android.server.pm.UserDataPreparer: void prepareUserData(int,int,int)>(i0, i1, 1);

        virtualinvoke $r2.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

        virtualinvoke $r2.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("reconcileAppsData");

        $r10 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.PackageManagerService mPm>;

        $z1 = z0 ^ 1;

        virtualinvoke $r10.<com.android.server.pm.PackageManagerService: void reconcileAppsData(int,int,boolean)>(i0, 1, $z1);

        virtualinvoke $r2.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

        if i0 == 0 goto label7;

        virtualinvoke $r2.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("applyUserRestrictions");

        r14 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mRestrictionsLock>;

        entermonitor r14;

     label2:
        virtualinvoke r0.<com.android.server.pm.UserManagerService: void applyUserRestrictionsLR(int)>(i0);

        exitmonitor r14;

     label3:
        virtualinvoke $r2.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

        goto label7;

     label4:
        $r11 := @caughtexception;

     label5:
        exitmonitor r14;

     label6:
        throw $r11;

     label7:
        virtualinvoke $r2.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void onBeforeUnlockUser(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, i1;
        android.content.pm.UserInfo r1;
        boolean z0, $z1;
        java.lang.String $r2, $r3;
        com.android.server.pm.UserDataPreparer $r4;
        com.android.server.pm.PackageManagerService $r5;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfo(int)>(i0);

        if r1 != null goto label1;

        return;

     label1:
        i1 = r1.<android.content.pm.UserInfo: int serialNumber>;

        $r3 = <android.os.Build: java.lang.String FINGERPRINT>;

        $r2 = r1.<android.content.pm.UserInfo: java.lang.String lastLoggedInFingerprint>;

        z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        $r4 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserDataPreparer mUserDataPreparer>;

        virtualinvoke $r4.<com.android.server.pm.UserDataPreparer: void prepareUserData(int,int,int)>(i0, i1, 2);

        $r5 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.PackageManagerService mPm>;

        $z1 = z0 ^ 1;

        virtualinvoke $r5.<com.android.server.pm.PackageManagerService: void reconcileAppsData(int,int,boolean)>(i0, 2, $z1);

        return;
    }

    int onShellCommand(com.android.server.pm.UserManagerService$Shell, java.lang.String)
    {
        com.android.server.pm.UserManagerService r0;
        java.io.PrintWriter r1;
        boolean $z0, $z1;
        int $i0, $i1, $i2, i3, i5;
        android.os.RemoteException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r6, r8;
        com.android.server.pm.UserManagerService$Shell r7;
        byte b4;

        r0 := @this: com.android.server.pm.UserManagerService;

        r7 := @parameter0: com.android.server.pm.UserManagerService$Shell;

        r8 := @parameter1: java.lang.String;

        if r8 != null goto label01;

        $i2 = virtualinvoke r7.<com.android.server.pm.UserManagerService$Shell: int handleDefaultCommands(java.lang.String)>(r8);

        return $i2;

     label01:
        r1 = virtualinvoke r7.<com.android.server.pm.UserManagerService$Shell: java.io.PrintWriter getOutPrintWriter()>();

     label02:
        i3 = virtualinvoke r8.<java.lang.String: int hashCode()>();

     label03:
        if i3 == 3322014 goto label07;

        if i3 == 1085270974 goto label05;

     label04:
        goto label09;

     label05:
        $z1 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("report-system-user-package-whitelist-problems");

        if $z1 == 0 goto label04;

     label06:
        b4 = 1;

        goto label10;

     label07:
        $z0 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("list");

        if $z0 == 0 goto label04;

     label08:
        b4 = 0;

        goto label10;

     label09:
        b4 = -1;

     label10:
        if b4 == 0 goto label13;

        if b4 == 1 goto label12;

     label11:
        $i1 = virtualinvoke r7.<com.android.server.pm.UserManagerService$Shell: int handleDefaultCommands(java.lang.String)>(r8);

        return $i1;

     label12:
        $i0 = specialinvoke r0.<com.android.server.pm.UserManagerService: int runReportPackageWhitelistProblems(java.io.PrintWriter,com.android.server.pm.UserManagerService$Shell)>(r1, r7);

        return $i0;

     label13:
        i5 = specialinvoke r0.<com.android.server.pm.UserManagerService: int runList(java.io.PrintWriter,com.android.server.pm.UserManagerService$Shell)>(r1, r7);

     label14:
        return i5;

     label15:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remote exception: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r6);

        return -1;

        catch android.os.RemoteException from label02 to label03 with label15;
        catch android.os.RemoteException from label05 to label06 with label15;
        catch android.os.RemoteException from label07 to label08 with label15;
        catch android.os.RemoteException from label11 to label12 with label15;
        catch android.os.RemoteException from label12 to label13 with label15;
        catch android.os.RemoteException from label13 to label14 with label15;
    }

    public void onShellCommand(java.io.FileDescriptor, java.io.FileDescriptor, java.io.FileDescriptor, java.lang.String[], android.os.ShellCallback, android.os.ResultReceiver)
    {
        com.android.server.pm.UserManagerService r0;
        java.io.FileDescriptor r1, r2, r3;
        java.lang.String[] r4;
        android.os.ShellCallback r5;
        android.os.ResultReceiver r6;
        com.android.server.pm.UserManagerService$Shell $r7;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.FileDescriptor;

        r3 := @parameter2: java.io.FileDescriptor;

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: android.os.ShellCallback;

        r6 := @parameter5: android.os.ResultReceiver;

        $r7 = new com.android.server.pm.UserManagerService$Shell;

        specialinvoke $r7.<com.android.server.pm.UserManagerService$Shell: void <init>(com.android.server.pm.UserManagerService,com.android.server.pm.UserManagerService$1)>(r0, null);

        virtualinvoke $r7.<com.android.server.pm.UserManagerService$Shell: int exec(android.os.Binder,java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>(r0, r1, r2, r3, r4, r5, r6);

        return;
    }

    public void onUserLoggedIn(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        long l1;
        java.lang.StringBuilder $r1;
        java.lang.String $r4, $r6;
        android.content.pm.UserInfo $r5, $r7, $r8;
        boolean $z0;
        byte $b3;
        com.android.server.pm.UserManagerService$UserData r9;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        r9 = specialinvoke r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$UserData getUserDataNoChecks(int)>(i0);

        if r9 == null goto label3;

        $r5 = r9.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $z0 = $r5.<android.content.pm.UserInfo: boolean partial>;

        if $z0 == 0 goto label1;

        goto label3;

     label1:
        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $b3 = l1 cmp 946080000000L;

        if $b3 <= 0 goto label2;

        $r8 = r9.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $r8.<android.content.pm.UserInfo: long lastLoggedInTime> = l1;

     label2:
        $r7 = r9.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $r6 = <android.os.Build: java.lang.String FINGERPRINT>;

        $r7.<android.content.pm.UserInfo: java.lang.String lastLoggedInFingerprint> = $r6;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void scheduleWriteUser(com.android.server.pm.UserManagerService$UserData)>(r9);

        return;

     label3:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("userForeground: unknown user #");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserManagerService", $r4);

        return;
    }

    public android.content.pm.UserInfo preCreateUserWithThrow(java.lang.String) throws android.os.ServiceSpecificException
    {
        com.android.server.pm.UserManagerService r0;
        boolean z0;
        android.util.ArrayMap $r1;
        java.lang.Object $r2;
        java.lang.StringBuilder $r3, $r7;
        java.lang.String $r6, $r10, r13;
        android.os.UserManager$CheckedUserOperationException $r11;
        android.os.ServiceSpecificException $r12;
        com.android.server.pm.UserTypeDetails r14;
        int i1;
        android.content.pm.UserInfo r17;

        r0 := @this: com.android.server.pm.UserManagerService;

        r13 := @parameter0: java.lang.String;

        $r1 = r0.<com.android.server.pm.UserManagerService: android.util.ArrayMap mUserTypes>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r13);

        r14 = (com.android.server.pm.UserTypeDetails) $r2;

        if r14 == null goto label1;

        i1 = virtualinvoke r14.<com.android.server.pm.UserTypeDetails: int getDefaultUserInfoFlags()>();

        goto label2;

     label1:
        i1 = 0;

     label2:
        staticinvoke <com.android.server.pm.UserManagerService: void checkManageOrCreateUsersPermission(int)>(i1);

        z0 = staticinvoke <com.android.server.pm.UserManagerService: boolean isUserTypeEligibleForPreCreation(com.android.server.pm.UserTypeDetails)>(r14);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot pre-create user of type ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>(z0, $r6);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pre-creating user of type ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("UserManagerService", $r10);

     label3:
        r17 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo createUserInternalUnchecked(java.lang.String,java.lang.String,int,int,boolean,java.lang.String[])>(null, r13, i1, -10000, 1, null);

     label4:
        return r17;

     label5:
        $r11 := @caughtexception;

        $r12 = virtualinvoke $r11.<android.os.UserManager$CheckedUserOperationException: android.os.ServiceSpecificException toServiceSpecificException()>();

        throw $r12;

        catch android.os.UserManager$CheckedUserOperationException from label3 to label4 with label5;
    }

    com.android.server.pm.UserManagerService$UserData putUserInfo(android.content.pm.UserInfo)
    {
        com.android.server.pm.UserManagerService r0;
        android.util.SparseArray r2, $r4;
        com.android.server.pm.UserManagerService$UserData $r3;
        int $i0;
        java.lang.Throwable $r5;
        android.content.pm.UserInfo r6;

        r0 := @this: com.android.server.pm.UserManagerService;

        r6 := @parameter0: android.content.pm.UserInfo;

        $r3 = new com.android.server.pm.UserManagerService$UserData;

        specialinvoke $r3.<com.android.server.pm.UserManagerService$UserData: void <init>()>();

        $r3.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info> = r6;

        r2 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        entermonitor r2;

     label1:
        $r4 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i0 = r6.<android.content.pm.UserInfo: int id>;

        virtualinvoke $r4.<android.util.SparseArray: void put(int,java.lang.Object)>($i0, $r3);

        exitmonitor r2;

     label2:
        return $r3;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    com.android.server.pm.UserManagerService$UserData readUserLP(int, java.io.InputStream) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.pm.UserManagerService r0;
        int i0, i3, i4, $i6, $i7, $i8, $i9, $i10, i13, i15, i16, i17, i18, i19;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r3, r4, r5, r6, $r8, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r29, r36, r37, r44, r45, r46, r47, r48, r54, r55, r59, r60, r61, r62, r63;
        long l1, l2, l14, l20, l21, l22, l23;
        java.nio.charset.Charset $r7;
        com.android.server.pm.RestrictionsSet $r9, r41, r52, r56, r71, r74;
        android.util.SparseArray $r10, r73;
        boolean $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, z14, z15, z16, z17, z18, z20, z21;
        java.lang.StringBuilder $r26;
        java.lang.Throwable $r30, $r31, $r32, $r33, $r34, r72;
        java.io.InputStream r35;
        android.os.PersistableBundle r38, r49;
        android.os.Bundle r39, r40, r42, r50, r51, r53, r64, r65;
        android.content.pm.UserInfo $r66;
        com.android.server.pm.UserManagerService$UserData $r68;
        java.lang.Object r70;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        r35 := @parameter1: java.io.InputStream;

        i13 = 0;

        r36 = null;

        r37 = null;

        l14 = 0L;

        z14 = 0;

        z15 = 0;

        z16 = 0;

        z17 = 0;

        r38 = null;

        r39 = null;

        r40 = null;

        r41 = null;

        r42 = null;

        r1 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        $r7 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r8 = virtualinvoke $r7.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r35, $r8);

     label01:
        i15 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i15 == 2 goto label02;

        if i15 == 1 goto label02;

        goto label01;

     label02:
        if i15 == 2 goto label03;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to read user ");

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", $r29);

        return null;

     label03:
        if i15 != 2 goto label28;

        $r11 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("user");

        if $z2 == 0 goto label28;

        $i6 = specialinvoke r0.<com.android.server.pm.UserManagerService: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r1, "id", -1);

        if $i6 == i0 goto label04;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", "User id does not match the file name");

        return null;

     label04:
        i16 = specialinvoke r0.<com.android.server.pm.UserManagerService: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r1, "serialNumber", i0);

        i13 = specialinvoke r0.<com.android.server.pm.UserManagerService: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r1, "flags", 0);

        r44 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "type");

        if r44 == null goto label05;

        r45 = virtualinvoke r44.<java.lang.String: java.lang.String intern()>();

        goto label06;

     label05:
        r45 = null;

     label06:
        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "icon");

        l1 = specialinvoke r0.<com.android.server.pm.UserManagerService: long readLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r1, "created", 0L);

        l2 = specialinvoke r0.<com.android.server.pm.UserManagerService: long readLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r1, "lastLoggedIn", 0L);

        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "lastLoggedInFingerprint");

        i17 = specialinvoke r0.<com.android.server.pm.UserManagerService: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r1, "profileGroupId", -10000);

        i18 = specialinvoke r0.<com.android.server.pm.UserManagerService: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r1, "profileBadge", 0);

        i19 = specialinvoke r0.<com.android.server.pm.UserManagerService: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r1, "restrictedProfileParentId", -10000);

        $r12 = "true";

        $r13 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "partial");

        $z3 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z3 == 0 goto label07;

        z14 = 1;

     label07:
        $r14 = "true";

        $r15 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "preCreated");

        $z4 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z4 == 0 goto label08;

        z15 = 1;

     label08:
        r46 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "guestToRemove");

        $r16 = "true";

        $z5 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r46);

        if $z5 == 0 goto label09;

        z16 = 1;

     label09:
        r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "seedAccountName");

        r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "seedAccountType");

        if r4 != null goto label10;

        if r5 == null goto label11;

     label10:
        z17 = 1;

     label11:
        i3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label12:
        i4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i4 == 1 goto label27;

        if i4 != 3 goto label13;

        $i10 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i10 <= i3 goto label27;

     label13:
        if i4 == 3 goto label26;

        if i4 != 4 goto label14;

        goto label26;

     label14:
        r6 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r17 = "name";

        $z6 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z6 == 0 goto label16;

        $i9 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i9 != 4 goto label15;

        r47 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        r48 = r37;

        l20 = l14;

        z18 = z17;

        r49 = r38;

        r50 = r39;

        r51 = r40;

        r52 = r41;

        r53 = r42;

        goto label25;

     label15:
        r47 = r36;

        r48 = r37;

        l20 = l14;

        z18 = z17;

        r49 = r38;

        r50 = r39;

        r51 = r40;

        r52 = r41;

        r53 = r42;

        goto label25;

     label16:
        $r18 = "restrictions";

        $z7 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z7 == 0 goto label17;

        r50 = staticinvoke <com.android.server.pm.UserRestrictionsUtils: android.os.Bundle readRestrictions(org.xmlpull.v1.XmlPullParser)>(r1);

        r47 = r36;

        r48 = r37;

        l20 = l14;

        z18 = z17;

        r49 = r38;

        r51 = r40;

        r52 = r41;

        r53 = r42;

        goto label25;

     label17:
        $r19 = "device_policy_restrictions";

        $z8 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z8 == 0 goto label18;

        r51 = staticinvoke <com.android.server.pm.UserRestrictionsUtils: android.os.Bundle readRestrictions(org.xmlpull.v1.XmlPullParser)>(r1);

        r47 = r36;

        r48 = r37;

        l20 = l14;

        z18 = z17;

        r49 = r38;

        r50 = r39;

        r52 = r41;

        r53 = r42;

        goto label25;

     label18:
        $r20 = "device_policy_local_restrictions";

        $z9 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z9 == 0 goto label19;

        r52 = staticinvoke <com.android.server.pm.RestrictionsSet: com.android.server.pm.RestrictionsSet readRestrictions(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "device_policy_local_restrictions");

        r47 = r36;

        r48 = r37;

        l20 = l14;

        z18 = z17;

        r49 = r38;

        r50 = r39;

        r51 = r40;

        r53 = r42;

        goto label25;

     label19:
        $r21 = "device_policy_global_restrictions";

        $z10 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z10 == 0 goto label20;

        r53 = staticinvoke <com.android.server.pm.UserRestrictionsUtils: android.os.Bundle readRestrictions(org.xmlpull.v1.XmlPullParser)>(r1);

        r47 = r36;

        r48 = r37;

        l20 = l14;

        z18 = z17;

        r49 = r38;

        r50 = r39;

        r51 = r40;

        r52 = r41;

        goto label25;

     label20:
        $r22 = "account";

        $z11 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z11 == 0 goto label22;

        $i8 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i8 != 4 goto label21;

        r48 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        r47 = r36;

        l20 = l14;

        z18 = z17;

        r49 = r38;

        r50 = r39;

        r51 = r40;

        r52 = r41;

        r53 = r42;

        goto label25;

     label21:
        r47 = r36;

        r48 = r37;

        l20 = l14;

        z18 = z17;

        r49 = r38;

        r50 = r39;

        r51 = r40;

        r52 = r41;

        r53 = r42;

        goto label25;

     label22:
        $r23 = "seedAccountOptions";

        $z12 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z12 == 0 goto label23;

        r49 = staticinvoke <android.os.PersistableBundle: android.os.PersistableBundle restoreFromXml(org.xmlpull.v1.XmlPullParser)>(r1);

        z18 = 1;

        r47 = r36;

        r48 = r37;

        l20 = l14;

        r50 = r39;

        r51 = r40;

        r52 = r41;

        r53 = r42;

        goto label25;

     label23:
        r47 = r36;

        r48 = r37;

        l20 = l14;

        z18 = z17;

        r49 = r38;

        r50 = r39;

        r51 = r40;

        r52 = r41;

        r53 = r42;

        $r24 = "lastRequestQuietModeEnabledCall";

        $z13 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z13 == 0 goto label25;

        $i7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i7 != 4 goto label24;

        $r25 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        l20 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r25);

        r47 = r36;

        r48 = r37;

        z18 = z17;

        r49 = r38;

        r50 = r39;

        r51 = r40;

        r52 = r41;

        r53 = r42;

        goto label25;

     label24:
        r53 = r42;

        r52 = r41;

        r51 = r40;

        r50 = r39;

        r49 = r38;

        z18 = z17;

        l20 = l14;

        r48 = r37;

        r47 = r36;

     label25:
        r36 = r47;

        r37 = r48;

        l14 = l20;

        z17 = z18;

        r38 = r49;

        r39 = r50;

        r40 = r51;

        r41 = r52;

        r42 = r53;

        goto label12;

     label26:
        goto label12;

     label27:
        l21 = l14;

        z20 = z17;

        r54 = r4;

        r55 = r5;

        r56 = r41;

        r59 = r2;

        l22 = l2;

        r60 = r3;

        l23 = l1;

        z21 = z16;

        r61 = r36;

        r62 = r37;

        r63 = r45;

        r64 = r40;

        r65 = r42;

        goto label29;

     label28:
        r63 = null;

        i16 = i0;

        l21 = 0L;

        i18 = 0;

        z14 = 0;

        z15 = 0;

        z21 = 0;

        z20 = 0;

        r54 = null;

        r55 = null;

        r38 = null;

        r39 = null;

        r64 = null;

        r56 = null;

        r65 = null;

        r62 = null;

        r59 = null;

        i19 = -10000;

        r61 = null;

        i17 = -10000;

        l22 = 0L;

        r60 = null;

        l23 = 0L;

     label29:
        $r66 = new android.content.pm.UserInfo;

        specialinvoke $r66.<android.content.pm.UserInfo: void <init>(int,java.lang.String,java.lang.String,int,java.lang.String)>(i0, r61, r59, i13, r63);

        $r66.<android.content.pm.UserInfo: int serialNumber> = i16;

        $r66.<android.content.pm.UserInfo: long creationTime> = l23;

        $r66.<android.content.pm.UserInfo: long lastLoggedInTime> = l22;

        $r66.<android.content.pm.UserInfo: java.lang.String lastLoggedInFingerprint> = r60;

        $r66.<android.content.pm.UserInfo: boolean partial> = z14;

        $r66.<android.content.pm.UserInfo: boolean preCreated> = z15;

        $r66.<android.content.pm.UserInfo: boolean guestToRemove> = z21;

        $r66.<android.content.pm.UserInfo: int profileGroupId> = i17;

        $r66.<android.content.pm.UserInfo: int profileBadge> = i18;

        $r66.<android.content.pm.UserInfo: int restrictedProfileParentId> = i19;

        $r68 = new com.android.server.pm.UserManagerService$UserData;

        specialinvoke $r68.<com.android.server.pm.UserManagerService$UserData: void <init>()>();

        $r68.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info> = $r66;

        $r68.<com.android.server.pm.UserManagerService$UserData: java.lang.String account> = r62;

        $r68.<com.android.server.pm.UserManagerService$UserData: java.lang.String seedAccountName> = r54;

        $r68.<com.android.server.pm.UserManagerService$UserData: java.lang.String seedAccountType> = r55;

        $r68.<com.android.server.pm.UserManagerService$UserData: boolean persistSeedData> = z20;

        $r68.<com.android.server.pm.UserManagerService$UserData: android.os.PersistableBundle seedAccountOptions> = r38;

        virtualinvoke $r68.<com.android.server.pm.UserManagerService$UserData: void setLastRequestQuietModeEnabledMillis(long)>(l21);

        r70 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mRestrictionsLock>;

        entermonitor r70;

        if r39 == null goto label35;

     label30:
        r71 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet mBaseUserRestrictions>;

     label31:
        virtualinvoke r71.<com.android.server.pm.RestrictionsSet: boolean updateRestrictions(int,android.os.Bundle)>(i0, r39);

     label32:
        goto label35;

     label33:
        $r30 := @caughtexception;

        r72 = $r30;

        goto label50;

     label34:
        $r33 := @caughtexception;

        r72 = $r33;

        goto label50;

     label35:
        if r56 == null goto label42;

     label36:
        $r10 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mDevicePolicyLocalUserRestrictions>;

        virtualinvoke $r10.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r56);

     label37:
        if r64 == null goto label40;

     label38:
        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("UserManagerService", "Seeing both legacy and current local restrictions in xml");

     label39:
        goto label46;

     label40:
        goto label46;

     label41:
        $r34 := @caughtexception;

        r72 = $r34;

        goto label50;

     label42:
        if r64 == null goto label46;

     label43:
        r73 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mDevicePolicyLocalUserRestrictions>;

        r74 = new com.android.server.pm.RestrictionsSet;

        specialinvoke r74.<com.android.server.pm.RestrictionsSet: void <init>(int,android.os.Bundle)>(i0, r64);

        virtualinvoke r73.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r74);

     label44:
        goto label46;

     label45:
        $r32 := @caughtexception;

        r72 = $r32;

        goto label50;

     label46:
        if r65 == null goto label48;

     label47:
        $r9 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet mDevicePolicyGlobalUserRestrictions>;

        virtualinvoke $r9.<com.android.server.pm.RestrictionsSet: boolean updateRestrictions(int,android.os.Bundle)>(i0, r65);

     label48:
        exitmonitor r70;

     label49:
        return $r68;

     label50:
        exitmonitor r70;

     label51:
        throw r72;

     label52:
        $r31 := @caughtexception;

        r72 = $r31;

        goto label50;

        catch java.lang.Throwable from label30 to label31 with label34;
        catch java.lang.Throwable from label31 to label32 with label33;
        catch java.lang.Throwable from label36 to label37 with label41;
        catch java.lang.Throwable from label38 to label39 with label45;
        catch java.lang.Throwable from label43 to label44 with label45;
        catch java.lang.Throwable from label47 to label48 with label52;
        catch java.lang.Throwable from label48 to label49 with label52;
        catch java.lang.Throwable from label50 to label51 with label52;
    }

    void reconcileUsers(java.lang.String)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1;
        com.android.server.pm.UserDataPreparer $r2;
        java.util.List $r3;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserDataPreparer mUserDataPreparer>;

        $r3 = virtualinvoke r0.<com.android.server.pm.UserManagerService: java.util.List getUsers(boolean,boolean,boolean)>(1, 1, 0);

        virtualinvoke $r2.<com.android.server.pm.UserDataPreparer: void reconcileUsers(java.lang.String,java.util.List)>(r1, $r3);

        return;
    }

    public boolean removeUser(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, $i2;
        java.lang.StringBuilder $r1, $r6;
        java.lang.String $r4, $r10, r15;
        android.os.Bundle $r5;
        boolean $z0, $z1, $z2, z3;
        java.lang.Throwable $r11;
        java.lang.Object r13;
        android.content.pm.UserInfo r14;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removeUser u");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("UserManagerService", $r4);

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageOrCreateUsersPermission(java.lang.String)>("Only the system can remove users");

        r13 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r13;

     label01:
        r14 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLU(int)>(i0);

     label02:
        if r14 == null goto label05;

     label03:
        $z2 = virtualinvoke r14.<android.content.pm.UserInfo: boolean isManagedProfile()>();

        if $z2 == 0 goto label05;

     label04:
        z3 = 1;

        goto label06;

     label05:
        z3 = 0;

     label06:
        exitmonitor r13;

     label07:
        if z3 == 0 goto label08;

        r15 = "no_remove_managed_profile";

        goto label09;

     label08:
        r15 = "no_remove_user";

     label09:
        $i2 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r5 = virtualinvoke r0.<com.android.server.pm.UserManagerService: android.os.Bundle getUserRestrictions(int)>($i2);

        $z0 = virtualinvoke $r5.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(r15, 0);

        if $z0 == 0 goto label10;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot remove user. ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is enabled.");

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserManagerService", $r10);

        return 0;

     label10:
        $z1 = specialinvoke r0.<com.android.server.pm.UserManagerService: boolean removeUserUnchecked(int)>(i0);

        return $z1;

     label11:
        $r11 := @caughtexception;

     label12:
        exitmonitor r13;

     label13:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public boolean removeUserEvenWhenDisallowed(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        boolean $z0;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageOrCreateUsersPermission(java.lang.String)>("Only the system can remove users");

        $z0 = specialinvoke r0.<com.android.server.pm.UserManagerService: boolean removeUserUnchecked(int)>(i0);

        return $z0;
    }

    void removeUserInfo(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        android.util.SparseArray r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        virtualinvoke $r3.<android.util.SparseArray: void remove(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean requestQuietModeEnabled(java.lang.String, boolean, int, android.content.IntentSender, int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, $i2, $i3, $i4, i5, i6;
        android.content.IntentSender r1;
        long l1;
        com.android.internal.widget.LockPatternUtils $r3, $r4, $r9;
        boolean $z0, $z1, $z2, $z4, z5, z6, z7, z8, z9, z10;
        android.content.Context $r5;
        java.lang.Object $r6;
        com.android.server.pm.UserManagerService$LocalService $r7;
        android.app.KeyguardManager $r8;
        android.content.pm.PackageManagerInternal $r10;
        android.content.ComponentName $r11;
        java.lang.String $r12, $r18, r21;
        java.lang.SecurityException $r13;
        java.lang.StringBuilder $r14;
        java.lang.IllegalArgumentException $r17, $r19;
        java.lang.Throwable $r20;

        r0 := @this: com.android.server.pm.UserManagerService;

        r21 := @parameter0: java.lang.String;

        z5 := @parameter1: boolean;

        i0 := @parameter2: int;

        r1 := @parameter3: android.content.IntentSender;

        i5 := @parameter4: int;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r21);

        if z5 == 0 goto label02;

        if r1 != null goto label01;

        goto label02;

     label01:
        $r19 = new java.lang.IllegalArgumentException;

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("target should only be specified when we are disabling quiet mode.");

        throw $r19;

     label02:
        $i2 = i5 & 2;

        if $i2 == 0 goto label03;

        z6 = 1;

        goto label04;

     label03:
        z6 = 0;

     label04:
        $i3 = i5 & 1;

        if $i3 == 0 goto label05;

        z7 = 1;

        goto label06;

     label05:
        z7 = 0;

     label06:
        if z6 == 0 goto label08;

        if z7 != 0 goto label07;

        goto label08;

     label07:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid flags: ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r17 = new java.lang.IllegalArgumentException;

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r17;

     label08:
        i6 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if r1 == null goto label09;

        z8 = 1;

        goto label10;

     label09:
        z8 = 0;

     label10:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void ensureCanModifyQuietMode(java.lang.String,int,int,boolean,boolean)>(r21, i6, i0, z8, z6);

        if z7 == 0 goto label12;

        $r10 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.PackageManagerInternal getPackageManagerInternal()>();

        $r11 = virtualinvoke $r10.<android.content.pm.PackageManagerInternal: android.content.ComponentName getSystemUiServiceComponent()>();

        $r12 = virtualinvoke $r11.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z4 = virtualinvoke r21.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z4 != 0 goto label11;

        goto label12;

     label11:
        $r13 = new java.lang.SecurityException;

        specialinvoke $r13.<java.lang.SecurityException: void <init>(java.lang.String)>("SystemUI is not allowed to set QUIET_MODE_DISABLE_ONLY_IF_CREDENTIAL_NOT_REQUIRED");

        throw $r13;

     label12:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        if z5 == 0 goto label15;

     label13:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void setQuietModeEnabled(int,boolean,android.content.IntentSender,java.lang.String)>(i0, 1, r1, r21);

     label14:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 1;

     label15:
        $r3 = r0.<com.android.server.pm.UserManagerService: com.android.internal.widget.LockPatternUtils mLockPatternUtils>;

        $z0 = virtualinvoke $r3.<com.android.internal.widget.LockPatternUtils: boolean isManagedProfileWithUnifiedChallenge(int)>(i0);

        if $z0 == 0 goto label18;

        $r5 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/KeyguardManager;");

        $r8 = (android.app.KeyguardManager) $r6;

        $r7 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$LocalService mLocalService>;

        $i4 = virtualinvoke $r7.<com.android.server.pm.UserManagerService$LocalService: int getProfileParentId(int)>(i0);

        $z2 = virtualinvoke $r8.<android.app.KeyguardManager: boolean isDeviceLocked(int)>($i4);

        if $z2 == 0 goto label17;

     label16:
        if z7 == 0 goto label18;

     label17:
        $r9 = r0.<com.android.server.pm.UserManagerService: com.android.internal.widget.LockPatternUtils mLockPatternUtils>;

        virtualinvoke $r9.<com.android.internal.widget.LockPatternUtils: boolean tryUnlockWithCachedUnifiedChallenge(int)>(i0);

     label18:
        if z6 != 0 goto label21;

     label19:
        $r4 = r0.<com.android.server.pm.UserManagerService: com.android.internal.widget.LockPatternUtils mLockPatternUtils>;

        $z1 = virtualinvoke $r4.<com.android.internal.widget.LockPatternUtils: boolean isSecure(int)>(i0);

        if $z1 == 0 goto label21;

        z9 = staticinvoke <android.os.storage.StorageManager: boolean isUserKeyUnlocked(int)>(i0);

     label20:
        if z9 != 0 goto label21;

        z10 = 1;

        goto label22;

     label21:
        z10 = 0;

     label22:
        if z10 == 0 goto label25;

        if z7 == 0 goto label23;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 0;

     label23:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void showConfirmCredentialToDisableQuietMode(int,android.content.IntentSender)>(i0, r1);

     label24:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 0;

     label25:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void setQuietModeEnabled(int,boolean,android.content.IntentSender,java.lang.String)>(i0, 0, r1, r21);

     label26:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 1;

     label27:
        $r20 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r20;

        catch java.lang.Throwable from label13 to label14 with label27;
        catch java.lang.Throwable from label15 to label16 with label27;
        catch java.lang.Throwable from label17 to label18 with label27;
        catch java.lang.Throwable from label19 to label20 with label27;
        catch java.lang.Throwable from label23 to label24 with label27;
        catch java.lang.Throwable from label25 to label26 with label27;
    }

    public void setApplicationRestrictions(java.lang.String, android.os.Bundle, int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        java.lang.Object r1;
        android.content.Intent $r2;
        android.content.Context $r5;
        android.os.UserHandle $r6;
        boolean $z0, z1;
        java.lang.Throwable $r7;
        java.lang.String r8;
        android.os.Bundle r9;

        r0 := @this: com.android.server.pm.UserManagerService;

        r8 := @parameter0: java.lang.String;

        r9 := @parameter1: android.os.Bundle;

        i0 := @parameter2: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkSystemOrRoot(java.lang.String)>("set application restrictions");

        if r9 == null goto label01;

        virtualinvoke r9.<android.os.Bundle: void setDefusable(boolean)>(1);

     label01:
        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mAppRestrictionsLock>;

        entermonitor r1;

        if r9 == null goto label06;

     label02:
        $z0 = virtualinvoke r9.<android.os.Bundle: boolean isEmpty()>();

        if $z0 == 0 goto label04;

     label03:
        goto label06;

     label04:
        staticinvoke <com.android.server.pm.UserManagerService: void writeApplicationRestrictionsLAr(java.lang.String,android.os.Bundle,int)>(r8, r9, i0);

     label05:
        z1 = 1;

        goto label07;

     label06:
        z1 = staticinvoke <com.android.server.pm.UserManagerService: boolean cleanAppRestrictionsForPackageLAr(java.lang.String,int)>(r8, i0);

     label07:
        exitmonitor r1;

     label08:
        if z1 != 0 goto label09;

        return;

     label09:
        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.APPLICATION_RESTRICTIONS_CHANGED");

        virtualinvoke $r2.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r8);

        virtualinvoke $r2.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        $r5 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r6 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>(i0);

        virtualinvoke $r5.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r2, $r6);

        return;

     label10:
        $r7 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r7;

        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void setDefaultGuestRestrictions(android.os.Bundle)
    {
        com.android.server.pm.UserManagerService r0;
        android.os.Bundle $r1, $r2, r5, r6;
        java.lang.Throwable $r3, $r4;
        java.lang.Object r7;

        r0 := @this: com.android.server.pm.UserManagerService;

        r5 := @parameter0: android.os.Bundle;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("setDefaultGuestRestrictions");

        r6 = r0.<com.android.server.pm.UserManagerService: android.os.Bundle mGuestRestrictions>;

        entermonitor r6;

     label01:
        $r1 = r0.<com.android.server.pm.UserManagerService: android.os.Bundle mGuestRestrictions>;

        virtualinvoke $r1.<android.os.Bundle: void clear()>();

        $r2 = r0.<com.android.server.pm.UserManagerService: android.os.Bundle mGuestRestrictions>;

        virtualinvoke $r2.<android.os.Bundle: void putAll(android.os.Bundle)>(r5);

        exitmonitor r6;

     label02:
        r7 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r7;

     label03:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserListLP()>();

        exitmonitor r7;

     label04:
        return;

     label05:
        $r3 := @caughtexception;

     label06:
        exitmonitor r7;

     label07:
        throw $r3;

     label08:
        $r4 := @caughtexception;

     label09:
        exitmonitor r6;

     label10:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void setSeedAccountData(int, java.lang.String, java.lang.String, android.os.PersistableBundle, boolean)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        java.lang.String r1, $r8, r11;
        android.os.PersistableBundle r2;
        boolean z0;
        java.lang.Object r3, r4;
        com.android.server.pm.UserManagerService$UserData r5;
        java.lang.Throwable $r9, $r10;
        java.lang.StringBuilder r12;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        r11 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: android.os.PersistableBundle;

        z0 := @parameter4: boolean;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("Require MANAGE_USERS permission to set user seed data");

        r3 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r3;

     label01:
        r4 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r4;

     label02:
        r5 = specialinvoke r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$UserData getUserDataLU(int)>(i0);

     label03:
        if r5 != null goto label07;

     label04:
        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No such user for settings seed data u=");

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", $r8);

        exitmonitor r4;

     label05:
        exitmonitor r3;

     label06:
        return;

     label07:
        r5.<com.android.server.pm.UserManagerService$UserData: java.lang.String seedAccountName> = r11;

        r5.<com.android.server.pm.UserManagerService$UserData: java.lang.String seedAccountType> = r1;

        r5.<com.android.server.pm.UserManagerService$UserData: android.os.PersistableBundle seedAccountOptions> = r2;

        r5.<com.android.server.pm.UserManagerService$UserData: boolean persistSeedData> = z0;

        exitmonitor r4;

     label08:
        if z0 == 0 goto label10;

     label09:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLP(com.android.server.pm.UserManagerService$UserData)>(r5);

     label10:
        exitmonitor r3;

     label11:
        return;

     label12:
        $r9 := @caughtexception;

     label13:
        exitmonitor r4;

     label14:
        throw $r9;

     label15:
        $r10 := @caughtexception;

     label16:
        exitmonitor r3;

     label17:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label13 to label14 with label12;
        catch java.lang.Throwable from label14 to label15 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public void setUserAccount(int, java.lang.String)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        java.lang.Object r1, r2, $r5;
        com.android.server.pm.UserManagerService$UserData r3, r13;
        android.util.SparseArray $r4;
        java.lang.String $r6, $r9, r12;
        boolean $z0;
        java.lang.Throwable $r10, $r11;
        java.lang.StringBuilder r14;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        r12 := @parameter1: java.lang.String;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUserAndAcrossUsersFullPermission(java.lang.String)>("set user account");

        r13 = null;

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r1;

     label01:
        r2 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r2;

     label02:
        $r4 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (com.android.server.pm.UserManagerService$UserData) $r5;

     label03:
        if r3 != null goto label07;

     label04:
        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User not found for setting user account: u");

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", $r9);

        exitmonitor r2;

     label05:
        exitmonitor r1;

     label06:
        return;

     label07:
        $r6 = r3.<com.android.server.pm.UserManagerService$UserData: java.lang.String account>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r6, r12);

        if $z0 != 0 goto label09;

        r3.<com.android.server.pm.UserManagerService$UserData: java.lang.String account> = r12;

     label08:
        r13 = r3;

     label09:
        exitmonitor r2;

     label10:
        if r13 == null goto label12;

     label11:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLP(com.android.server.pm.UserManagerService$UserData)>(r13);

     label12:
        exitmonitor r1;

     label13:
        return;

     label14:
        $r10 := @caughtexception;

     label15:
        exitmonitor r2;

     label16:
        throw $r10;

     label17:
        $r11 := @caughtexception;

     label18:
        exitmonitor r1;

     label19:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label02 to label03 with label14;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label15 to label16 with label14;
        catch java.lang.Throwable from label16 to label17 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    public void setUserAdmin(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, $i1, $i2, $i3;
        java.lang.Object r1, r5;
        boolean $z0;
        com.android.server.pm.UserManagerService$UserData $r2;
        java.lang.Throwable $r3, $r4;
        android.content.pm.UserInfo r6;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUserAndAcrossUsersFullPermission(java.lang.String)>("set user admin");

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r1;

     label01:
        r5 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r5;

     label02:
        r6 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLU(int)>(i0);

        exitmonitor r5;

     label03:
        if r6 == null goto label08;

     label04:
        $z0 = virtualinvoke r6.<android.content.pm.UserInfo: boolean isAdmin()>();

        if $z0 == 0 goto label06;

     label05:
        goto label08;

     label06:
        $i1 = r6.<android.content.pm.UserInfo: int flags>;

        $i2 = $i1 ^ 2;

        r6.<android.content.pm.UserInfo: int flags> = $i2;

        $i3 = r6.<android.content.pm.UserInfo: int id>;

        $r2 = specialinvoke r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$UserData getUserDataLU(int)>($i3);

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLP(com.android.server.pm.UserManagerService$UserData)>($r2);

        exitmonitor r1;

     label07:
        return;

     label08:
        exitmonitor r1;

     label09:
        return;

     label10:
        $r4 := @caughtexception;

     label11:
        exitmonitor r5;

     label12:
        throw $r4;

     label13:
        $r3 := @caughtexception;

     label14:
        exitmonitor r1;

     label15:
        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label12 to label13 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public void setUserEnabled(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, $i1, $i2, $i3;
        java.lang.Object r1, r5;
        boolean $z0;
        com.android.server.pm.UserManagerService$UserData $r2;
        java.lang.Throwable $r3, $r4;
        android.content.pm.UserInfo r6;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("enable user");

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r1;

     label01:
        r5 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r5;

     label02:
        r6 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLU(int)>(i0);

        exitmonitor r5;

     label03:
        if r6 == null goto label05;

     label04:
        $z0 = virtualinvoke r6.<android.content.pm.UserInfo: boolean isEnabled()>();

        if $z0 != 0 goto label05;

        $i1 = r6.<android.content.pm.UserInfo: int flags>;

        $i2 = $i1 ^ 64;

        r6.<android.content.pm.UserInfo: int flags> = $i2;

        $i3 = r6.<android.content.pm.UserInfo: int id>;

        $r2 = specialinvoke r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$UserData getUserDataLU(int)>($i3);

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLP(com.android.server.pm.UserManagerService$UserData)>($r2);

     label05:
        exitmonitor r1;

     label06:
        return;

     label07:
        $r4 := @caughtexception;

     label08:
        exitmonitor r5;

     label09:
        throw $r4;

     label10:
        $r3 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label09 to label10 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void setUserIcon(int, android.graphics.Bitmap)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        com.android.server.pm.UserManagerService$LocalService $r1;
        android.os.UserManager$CheckedUserOperationException $r2;
        android.os.ServiceSpecificException $r3;
        android.graphics.Bitmap r4;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        r4 := @parameter1: android.graphics.Bitmap;

     label1:
        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("update users");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void enforceUserRestriction(java.lang.String,int,java.lang.String)>("no_set_user_icon", i0, "Cannot set user icon");

        $r1 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$LocalService mLocalService>;

        virtualinvoke $r1.<com.android.server.pm.UserManagerService$LocalService: void setUserIcon(int,android.graphics.Bitmap)>(i0, r4);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.UserManager$CheckedUserOperationException: android.os.ServiceSpecificException toServiceSpecificException()>();

        throw $r3;

        catch android.os.UserManager$CheckedUserOperationException from label1 to label2 with label3;
    }

    public void setUserName(int, java.lang.String)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        java.lang.Object r1;
        com.android.server.pm.UserManagerService$UserData r2;
        long l1;
        java.lang.String $r5, $r8, r12;
        android.content.pm.UserInfo $r6, $r7, $r9;
        boolean $z1, $z2, z3;
        java.lang.Throwable $r10, $r11;
        java.lang.StringBuilder r14;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        r12 := @parameter1: java.lang.String;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("rename users");

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r1;

     label01:
        r2 = specialinvoke r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$UserData getUserDataNoChecks(int)>(i0);

     label02:
        if r2 == null goto label14;

     label03:
        $r6 = r2.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $z1 = $r6.<android.content.pm.UserInfo: boolean partial>;

        if $z1 == 0 goto label05;

     label04:
        goto label14;

     label05:
        z3 = 0;

        if r12 == null goto label08;

        z3 = 0;

     label06:
        $r7 = r2.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $r8 = $r7.<android.content.pm.UserInfo: java.lang.String name>;

        $z2 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z2 != 0 goto label08;

        $r9 = r2.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $r9.<android.content.pm.UserInfo: java.lang.String name> = r12;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLP(com.android.server.pm.UserManagerService$UserData)>(r2);

     label07:
        z3 = 1;

     label08:
        exitmonitor r1;

     label09:
        if z3 == 0 goto label13;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label10:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void sendUserInfoChangedBroadcast(int)>(i0);

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label13;

     label12:
        $r11 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r11;

     label13:
        return;

     label14:
        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setUserName: unknown user #");

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserManagerService", $r5);

        exitmonitor r1;

     label15:
        return;

     label16:
        $r10 := @caughtexception;

     label17:
        exitmonitor r1;

     label18:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    public void setUserRestriction(java.lang.String, boolean, int)
    {
        com.android.server.pm.UserManagerService r0;
        boolean z0, $z1;
        int i0;
        java.lang.Object r1;
        android.os.Bundle r2, $r4;
        com.android.server.pm.RestrictionsSet $r3;
        java.lang.Throwable $r5;
        java.lang.String r6;

        r0 := @this: com.android.server.pm.UserManagerService;

        r6 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("setUserRestriction");

        $z1 = staticinvoke <com.android.server.pm.UserRestrictionsUtils: boolean isValidRestriction(java.lang.String)>(r6);

        if $z1 != 0 goto label1;

        return;

     label1:
        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mRestrictionsLock>;

        entermonitor r1;

     label2:
        $r3 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet mBaseUserRestrictions>;

        $r4 = virtualinvoke $r3.<com.android.server.pm.RestrictionsSet: android.os.Bundle getRestrictions(int)>(i0);

        r2 = staticinvoke <com.android.server.pm.UserRestrictionsUtils: android.os.Bundle clone(android.os.Bundle)>($r4);

        virtualinvoke r2.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>(r6, z0);

        specialinvoke r0.<com.android.server.pm.UserManagerService: void updateUserRestrictionsInternalLR(android.os.Bundle,int)>(r2, i0);

        exitmonitor r1;

     label3:
        return;

     label4:
        $r5 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public boolean someUserHasSeedAccount(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1, $r8, $r9, $r10, $r11, r13;
        java.lang.Object r2, $r6;
        int i0, i1;
        com.android.server.pm.UserManagerService$UserData r3;
        android.util.SparseArray $r4, $r5;
        android.content.pm.UserInfo $r7;
        boolean $z0, $z1, $z2;
        java.lang.Throwable $r12;

        r0 := @this: com.android.server.pm.UserManagerService;

        r13 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("Cannot check seed account information");

        r2 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r2;

     label01:
        $r4 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        i0 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label13;

     label04:
        $r5 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r3 = (com.android.server.pm.UserManagerService$UserData) $r6;

        $r7 = r3.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $z0 = virtualinvoke $r7.<android.content.pm.UserInfo: boolean isInitialized()>();

        if $z0 == 0 goto label06;

     label05:
        goto label12;

     label06:
        $r8 = r3.<com.android.server.pm.UserManagerService$UserData: java.lang.String seedAccountName>;

        if $r8 == null goto label12;

        $r9 = r3.<com.android.server.pm.UserManagerService$UserData: java.lang.String seedAccountName>;

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r13);

        if $z1 != 0 goto label08;

     label07:
        goto label12;

     label08:
        $r10 = r3.<com.android.server.pm.UserManagerService$UserData: java.lang.String seedAccountType>;

        if $r10 == null goto label12;

        $r11 = r3.<com.android.server.pm.UserManagerService$UserData: java.lang.String seedAccountType>;

        $z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 != 0 goto label10;

     label09:
        goto label12;

     label10:
        exitmonitor r2;

     label11:
        return 1;

     label12:
        i1 = i1 + 1;

        goto label03;

     label13:
        exitmonitor r2;

     label14:
        return 0;

     label15:
        $r12 := @caughtexception;

     label16:
        exitmonitor r2;

     label17:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    void systemReady()
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.Object r1;
        android.os.IBinder $r3;
        com.android.internal.app.IAppOpsService $r4;
        android.content.IntentFilter $r5;
        android.content.Context $r6;
        android.content.BroadcastReceiver $r7;
        android.os.Handler $r8;
        java.lang.Throwable $r10;

        r0 := @this: com.android.server.pm.UserManagerService;

        $r3 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("appops");

        $r4 = staticinvoke <com.android.internal.app.IAppOpsService$Stub: com.android.internal.app.IAppOpsService asInterface(android.os.IBinder)>($r3);

        r0.<com.android.server.pm.UserManagerService: com.android.internal.app.IAppOpsService mAppOpsService> = $r4;

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mRestrictionsLock>;

        entermonitor r1;

     label1:
        virtualinvoke r0.<com.android.server.pm.UserManagerService: void applyUserRestrictionsLR(int)>(0);

        exitmonitor r1;

     label2:
        $r6 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r7 = r0.<com.android.server.pm.UserManagerService: android.content.BroadcastReceiver mDisableQuietModeCallback>;

        $r5 = new android.content.IntentFilter;

        specialinvoke $r5.<android.content.IntentFilter: void <init>(java.lang.String)>("com.android.server.pm.DISABLE_QUIET_MODE_AFTER_UNLOCK");

        $r8 = r0.<com.android.server.pm.UserManagerService: android.os.Handler mHandler>;

        virtualinvoke $r6.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r7, $r5, null, $r8);

        return;

     label3:
        $r10 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void upgradeIfNecessaryLP(android.os.Bundle, int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, i34, i35, i36, i37, i38, i39, i40, i41, i42, i43, $i44, i45, i46, i47;
        boolean z0, $z1, $z3, $z6, $z7, $z9, $z12;
        android.content.pm.UserInfo r1, $r14, $r15, $r21, $r26, $r28, $r29, $r32, $r36, $r37, $r43, $r44, $r45, $r46, $r48, $r49, $r51, $r55, $r58, r74, r81, r85, r86, r89, $r94;
        android.util.ArraySet $r2;
        java.lang.Object $r3, $r13, $r31, $r35, $r42, r75, r78, r83, r91, $r96;
        java.lang.Integer $r4, $r27, $r33, $r38, $r47, $r50, $r59;
        java.lang.StringBuilder $r5, r99, r102;
        java.lang.String $r10, $r16, $r18, $r22, $r25, $r52, $r53, $r57, $r66, $r69, $r95;
        android.util.SparseArray $r11, $r12, $r30, $r34, $r40, $r41, $r79, $r87;
        com.android.server.pm.RestrictionsSet $r39, $r80;
        android.content.Context $r54;
        android.content.res.Resources $r56;
        java.lang.Throwable $r60, $r61, $r62, $r63, $r64;
        android.os.Bundle r70;
        com.android.server.pm.UserManagerService$UserData r72, r73, r76, r84, r88, r92, r106;
        android.util.ArrayMap $r93;
        com.android.server.pm.UserTypeDetails r97;
        java.lang.IllegalStateException r98, r101;
        java.util.Iterator r105;

        r0 := @this: com.android.server.pm.UserManagerService;

        r70 := @parameter0: android.os.Bundle;

        i34 := @parameter1: int;

        $r2 = new android.util.ArraySet;

        specialinvoke $r2.<android.util.ArraySet: void <init>()>();

        i0 = r0.<com.android.server.pm.UserManagerService: int mUserVersion>;

        i35 = i34;

        if i34 >= 1 goto label02;

        r72 = specialinvoke r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$UserData getUserDataNoChecks(int)>(0);

        $r53 = "Primary";

        $r51 = r72.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $r52 = $r51.<android.content.pm.UserInfo: java.lang.String name>;

        $z12 = virtualinvoke $r53.<java.lang.String: boolean equals(java.lang.Object)>($r52);

        if $z12 == 0 goto label01;

        $r55 = r72.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $r54 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r56 = virtualinvoke $r54.<android.content.Context: android.content.res.Resources getResources()>();

        $r57 = virtualinvoke $r56.<android.content.res.Resources: java.lang.String getString(int)>(17040733);

        $r55.<android.content.pm.UserInfo: java.lang.String name> = $r57;

        $r58 = r72.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $i33 = $r58.<android.content.pm.UserInfo: int id>;

        $r59 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i33);

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r59);

     label01:
        i35 = 1;

     label02:
        i36 = i35;

        if i35 >= 2 goto label04;

        r73 = specialinvoke r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$UserData getUserDataNoChecks(int)>(0);

        $r48 = r73.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $i28 = $r48.<android.content.pm.UserInfo: int flags>;

        $i29 = $i28 & 16;

        if $i29 != 0 goto label03;

        r74 = r73.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $i30 = r74.<android.content.pm.UserInfo: int flags>;

        $i31 = $i30 | 16;

        r74.<android.content.pm.UserInfo: int flags> = $i31;

        $r49 = r73.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $i32 = $r49.<android.content.pm.UserInfo: int id>;

        $r50 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i32);

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r50);

     label03:
        i36 = 2;

     label04:
        i37 = i36;

        if i36 >= 4 goto label05;

        i37 = 4;

     label05:
        i38 = i37;

        if i37 >= 5 goto label06;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void initDefaultGuestRestrictions()>();

        i38 = 5;

     label06:
        i39 = i38;

        if i38 >= 6 goto label16;

        z0 = staticinvoke <android.os.UserManager: boolean isSplitSystemUser()>();

        r75 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r75;

        i40 = 0;

     label07:
        $r40 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i25 = virtualinvoke $r40.<android.util.SparseArray: int size()>();

        if i40 >= $i25 goto label11;

        $r41 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r42 = virtualinvoke $r41.<android.util.SparseArray: java.lang.Object valueAt(int)>(i40);

        r76 = (com.android.server.pm.UserManagerService$UserData) $r42;

     label08:
        if z0 != 0 goto label10;

     label09:
        $r43 = r76.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $z9 = virtualinvoke $r43.<android.content.pm.UserInfo: boolean isRestricted()>();

        if $z9 == 0 goto label10;

        $r44 = r76.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $i26 = $r44.<android.content.pm.UserInfo: int restrictedProfileParentId>;

        if $i26 != -10000 goto label10;

        $r45 = r76.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $r45.<android.content.pm.UserInfo: int restrictedProfileParentId> = 0;

        $r46 = r76.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $i27 = $r46.<android.content.pm.UserInfo: int id>;

        $r47 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i27);

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r47);

     label10:
        i40 = i40 + 1;

        goto label07;

     label11:
        exitmonitor r75;

     label12:
        i39 = 6;

        goto label16;

     label13:
        $r62 := @caughtexception;

     label14:
        exitmonitor r75;

     label15:
        throw $r62;

     label16:
        i41 = i39;

        if i39 >= 7 goto label24;

        r78 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mRestrictionsLock>;

        entermonitor r78;

     label17:
        $z6 = staticinvoke <com.android.server.pm.UserRestrictionsUtils: boolean isEmpty(android.os.Bundle)>(r70);

        if $z6 != 0 goto label18;

        $i23 = r0.<com.android.server.pm.UserManagerService: int mDeviceOwnerUserId>;

        if $i23 == -10000 goto label18;

        $r39 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet mDevicePolicyGlobalUserRestrictions>;

        $i24 = r0.<com.android.server.pm.UserManagerService: int mDeviceOwnerUserId>;

        virtualinvoke $r39.<com.android.server.pm.RestrictionsSet: boolean updateRestrictions(int,android.os.Bundle)>($i24, r70);

     label18:
        $r79 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mDevicePolicyLocalUserRestrictions>;

        $r80 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet mDevicePolicyGlobalUserRestrictions>;

        staticinvoke <com.android.server.pm.UserRestrictionsUtils: void moveRestriction(java.lang.String,android.util.SparseArray,com.android.server.pm.RestrictionsSet)>("ensure_verify_apps", $r79, $r80);

        exitmonitor r78;

     label19:
        r81 = virtualinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo findCurrentGuestUser()>();

        if r81 == null goto label20;

        $i21 = r81.<android.content.pm.UserInfo: int id>;

        $z7 = virtualinvoke r0.<com.android.server.pm.UserManagerService: boolean hasUserRestriction(java.lang.String,int)>("no_config_wifi", $i21);

        if $z7 != 0 goto label20;

        $i22 = r81.<android.content.pm.UserInfo: int id>;

        virtualinvoke r0.<com.android.server.pm.UserManagerService: void setUserRestriction(java.lang.String,boolean,int)>("no_config_wifi", 1, $i22);

     label20:
        i41 = 7;

        goto label24;

     label21:
        $r63 := @caughtexception;

     label22:
        exitmonitor r78;

     label23:
        throw $r63;

     label24:
        i42 = i41;

        if i41 >= 8 goto label35;

        r83 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r83;

     label25:
        $r30 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r31 = virtualinvoke $r30.<android.util.SparseArray: java.lang.Object get(int)>(0);

        r84 = (com.android.server.pm.UserManagerService$UserData) $r31;

        r85 = r84.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $i11 = r85.<android.content.pm.UserInfo: int flags>;

        $i12 = $i11 | 2048;

        r85.<android.content.pm.UserInfo: int flags> = $i12;

        $z3 = staticinvoke <android.os.UserManager: boolean isHeadlessSystemUserMode()>();

        if $z3 != 0 goto label26;

        r86 = r84.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $i19 = r86.<android.content.pm.UserInfo: int flags>;

        $i20 = $i19 | 1024;

        r86.<android.content.pm.UserInfo: int flags> = $i20;

     label26:
        $r32 = r84.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $i13 = $r32.<android.content.pm.UserInfo: int id>;

        $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r33);

     label27:
        i43 = 1;

     label28:
        $r87 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i44 = virtualinvoke $r87.<android.util.SparseArray: int size()>();

        if i43 >= $i44 goto label30;

        $r34 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r35 = virtualinvoke $r34.<android.util.SparseArray: java.lang.Object valueAt(int)>(i43);

        r88 = (com.android.server.pm.UserManagerService$UserData) $r35;

        $r36 = r88.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $i14 = $r36.<android.content.pm.UserInfo: int flags>;

        $i15 = $i14 & 32;

        if $i15 != 0 goto label29;

        r89 = r88.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $i16 = r89.<android.content.pm.UserInfo: int flags>;

        $i17 = $i16 | 1024;

        r89.<android.content.pm.UserInfo: int flags> = $i17;

        $r37 = r88.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $i18 = $r37.<android.content.pm.UserInfo: int id>;

        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i18);

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r38);

     label29:
        i43 = i43 + 1;

        goto label28;

     label30:
        exitmonitor r83;

     label31:
        i42 = 8;

        goto label35;

     label32:
        $r61 := @caughtexception;

     label33:
        exitmonitor r83;

     label34:
        throw $r61;

     label35:
        i45 = i42;

        if i42 >= 9 goto label55;

        r91 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mUsersLock>;

        entermonitor r91;

        i46 = 0;

     label36:
        $r11 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i4 = virtualinvoke $r11.<android.util.SparseArray: int size()>();

        if i46 >= $i4 goto label50;

        $r12 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r13 = virtualinvoke $r12.<android.util.SparseArray: java.lang.Object valueAt(int)>(i46);

        r92 = (com.android.server.pm.UserManagerService$UserData) $r13;

        $r14 = r92.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        i47 = $r14.<android.content.pm.UserInfo: int flags>;

     label37:
        $i5 = i47 & 2048;

        if $i5 == 0 goto label42;

        $i10 = i47 & 1024;

        if $i10 == 0 goto label40;

     label38:
        $r29 = r92.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $r29.<android.content.pm.UserInfo: java.lang.String userType> = "android.os.usertype.full.SYSTEM";

     label39:
        goto label43;

     label40:
        $r28 = r92.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $r28.<android.content.pm.UserInfo: java.lang.String userType> = "android.os.usertype.system.HEADLESS";

     label41:
        goto label43;

     label42:
        $r15 = r92.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $r16 = staticinvoke <android.content.pm.UserInfo: java.lang.String getDefaultUserType(int)>(i47);

        $r15.<android.content.pm.UserInfo: java.lang.String userType> = $r16;

     label43:
        $r93 = r0.<com.android.server.pm.UserManagerService: android.util.ArrayMap mUserTypes>;

        $r94 = r92.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $r95 = $r94.<android.content.pm.UserInfo: java.lang.String userType>;

        $r96 = virtualinvoke $r93.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r95);

        r97 = (com.android.server.pm.UserTypeDetails) $r96;

     label44:
        if r97 == null goto label47;

     label45:
        r1 = r92.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $i6 = r1.<android.content.pm.UserInfo: int flags>;

        $i7 = virtualinvoke r97.<com.android.server.pm.UserTypeDetails: int getDefaultUserInfoFlags()>();

        $i8 = $i6 | $i7;

        r1.<android.content.pm.UserInfo: int flags> = $i8;

        $r26 = r92.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $i9 = $r26.<android.content.pm.UserInfo: int id>;

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r27);

     label46:
        i46 = i46 + 1;

        goto label36;

     label47:
        r98 = new java.lang.IllegalStateException;

        r99 = new java.lang.StringBuilder;

        specialinvoke r99.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot upgrade user with flags ");

        $r18 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i47);

        virtualinvoke r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        virtualinvoke r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because ");

        $r21 = r92.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        $r22 = $r21.<android.content.pm.UserInfo: java.lang.String userType>;

        virtualinvoke r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        virtualinvoke r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isn\'t defined on this device!");

        $r25 = virtualinvoke r99.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r98.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r25);

        throw r98;

     label48:
        $r64 := @caughtexception;

     label49:
        r101 = new java.lang.IllegalStateException;

        r102 = new java.lang.StringBuilder;

        specialinvoke r102.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot upgrade user with flags ");

        $r66 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i47);

        virtualinvoke r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r66);

        virtualinvoke r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because it doesn\'t correspond to a valid user type.");

        $r69 = virtualinvoke r102.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r101.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r69, $r64);

        throw r101;

     label50:
        exitmonitor r91;

     label51:
        i45 = 9;

        goto label55;

     label52:
        $r60 := @caughtexception;

     label53:
        exitmonitor r91;

     label54:
        throw $r60;

     label55:
        if i45 >= 9 goto label56;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User version ");

        $i2 = r0.<com.android.server.pm.UserManagerService: int mUserVersion>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" didn\'t upgrade as expected to ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(9);

        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserManagerService", $r10);

        goto label60;

     label56:
        r0.<com.android.server.pm.UserManagerService: int mUserVersion> = i45;

        if i0 >= i45 goto label60;

        r105 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label57:
        $z1 = interfaceinvoke r105.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label59;

        $r3 = interfaceinvoke r105.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.Integer) $r3;

        $i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        r106 = specialinvoke r0.<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$UserData getUserDataNoChecks(int)>($i1);

        if r106 == null goto label58;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLP(com.android.server.pm.UserManagerService$UserData)>(r106);

     label58:
        goto label57;

     label59:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserListLP()>();

     label60:
        return;

        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.Throwable from label17 to label18 with label21;
        catch java.lang.Throwable from label18 to label19 with label21;
        catch java.lang.Throwable from label22 to label23 with label21;
        catch java.lang.Throwable from label25 to label26 with label32;
        catch java.lang.Throwable from label26 to label27 with label32;
        catch java.lang.Throwable from label28 to label29 with label32;
        catch java.lang.Throwable from label30 to label31 with label32;
        catch java.lang.Throwable from label33 to label34 with label32;
        catch java.lang.Throwable from label36 to label37 with label52;
        catch java.lang.Throwable from label38 to label39 with label52;
        catch java.lang.Throwable from label40 to label41 with label52;
        catch java.lang.IllegalArgumentException from label42 to label43 with label48;
        catch java.lang.Throwable from label42 to label43 with label52;
        catch java.lang.Throwable from label43 to label44 with label52;
        catch java.lang.Throwable from label45 to label46 with label52;
        catch java.lang.Throwable from label47 to label48 with label52;
        catch java.lang.Throwable from label49 to label50 with label52;
        catch java.lang.Throwable from label50 to label51 with label52;
        catch java.lang.Throwable from label53 to label54 with label52;
    }

    void writeUserLP(com.android.server.pm.UserManagerService$UserData, java.io.OutputStream) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.pm.UserManagerService r0;
        android.content.pm.UserInfo r2;
        com.android.internal.util.FastXmlSerializer $r3;
        java.nio.charset.Charset $r4;
        java.lang.String $r5, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r21, $r22, $r29, $r32, $r40, $r44, $r47, $r48, $r49, $r51, $r53, $r55, $r60, $r62, $r67;
        java.lang.Boolean $r6;
        int $i0, $i1, $i2, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13;
        long $l3, $l4, $l11, $l14;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.android.server.pm.RestrictionsSet $r24, $r26, $r27;
        android.os.Bundle $r25, $r28;
        android.os.PersistableBundle $r35, $r37;
        java.lang.Throwable $r64;
        com.android.server.pm.UserManagerService$UserData r65;
        java.io.OutputStream r66;
        java.lang.Object r68;
        byte $b15;

        r0 := @this: com.android.server.pm.UserManagerService;

        r65 := @parameter0: com.android.server.pm.UserManagerService$UserData;

        r66 := @parameter1: java.io.OutputStream;

        $r3 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r3.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        $r4 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r5 = virtualinvoke $r4.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r66, $r5);

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r6);

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

        r2 = r65.<com.android.server.pm.UserManagerService$UserData: android.content.pm.UserInfo info>;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "user");

        $i0 = r2.<android.content.pm.UserInfo: int id>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "id", $r8);

        $i1 = r2.<android.content.pm.UserInfo: int serialNumber>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "serialNumber", $r10);

        $i2 = r2.<android.content.pm.UserInfo: int flags>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "flags", $r12);

        $r14 = r2.<android.content.pm.UserInfo: java.lang.String userType>;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", $r14);

        $l3 = r2.<android.content.pm.UserInfo: long creationTime>;

        $r16 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l3);

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "created", $r16);

        $l4 = r2.<android.content.pm.UserInfo: long lastLoggedInTime>;

        $r18 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l4);

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "lastLoggedIn", $r18);

        $r20 = r2.<android.content.pm.UserInfo: java.lang.String lastLoggedInFingerprint>;

        if $r20 == null goto label01;

        $r62 = r2.<android.content.pm.UserInfo: java.lang.String lastLoggedInFingerprint>;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "lastLoggedInFingerprint", $r62);

     label01:
        $r21 = r2.<android.content.pm.UserInfo: java.lang.String iconPath>;

        if $r21 == null goto label02;

        $r60 = r2.<android.content.pm.UserInfo: java.lang.String iconPath>;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "icon", $r60);

     label02:
        $z0 = r2.<android.content.pm.UserInfo: boolean partial>;

        if $z0 == 0 goto label03;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "partial", "true");

     label03:
        $z1 = r2.<android.content.pm.UserInfo: boolean preCreated>;

        if $z1 == 0 goto label04;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "preCreated", "true");

     label04:
        $z2 = r2.<android.content.pm.UserInfo: boolean guestToRemove>;

        if $z2 == 0 goto label05;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "guestToRemove", "true");

     label05:
        $i5 = r2.<android.content.pm.UserInfo: int profileGroupId>;

        if $i5 == -10000 goto label06;

        $i13 = r2.<android.content.pm.UserInfo: int profileGroupId>;

        $r55 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i13);

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "profileGroupId", $r55);

     label06:
        $i6 = r2.<android.content.pm.UserInfo: int profileBadge>;

        $r22 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i6);

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "profileBadge", $r22);

        $i7 = r2.<android.content.pm.UserInfo: int restrictedProfileParentId>;

        if $i7 == -10000 goto label07;

        $i12 = r2.<android.content.pm.UserInfo: int restrictedProfileParentId>;

        $r53 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i12);

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "restrictedProfileParentId", $r53);

     label07:
        $z3 = r65.<com.android.server.pm.UserManagerService$UserData: boolean persistSeedData>;

        if $z3 == 0 goto label09;

        $r47 = r65.<com.android.server.pm.UserManagerService$UserData: java.lang.String seedAccountName>;

        if $r47 == null goto label08;

        $r51 = r65.<com.android.server.pm.UserManagerService$UserData: java.lang.String seedAccountName>;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "seedAccountName", $r51);

     label08:
        $r48 = r65.<com.android.server.pm.UserManagerService$UserData: java.lang.String seedAccountType>;

        if $r48 == null goto label09;

        $r49 = r65.<com.android.server.pm.UserManagerService$UserData: java.lang.String seedAccountType>;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "seedAccountType", $r49);

     label09:
        $r67 = r2.<android.content.pm.UserInfo: java.lang.String name>;

        if $r67 == null goto label10;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "name");

        $r44 = r2.<android.content.pm.UserInfo: java.lang.String name>;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r44);

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "name");

     label10:
        r68 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mRestrictionsLock>;

        entermonitor r68;

     label11:
        $r24 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet mBaseUserRestrictions>;

        $i8 = r2.<android.content.pm.UserInfo: int id>;

        $r25 = virtualinvoke $r24.<com.android.server.pm.RestrictionsSet: android.os.Bundle getRestrictions(int)>($i8);

        staticinvoke <com.android.server.pm.UserRestrictionsUtils: void writeRestrictions(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>($r3, $r25, "restrictions");

        $i9 = r2.<android.content.pm.UserInfo: int id>;

        $r26 = specialinvoke r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet getDevicePolicyLocalRestrictionsForTargetUserLR(int)>($i9);

        virtualinvoke $r26.<com.android.server.pm.RestrictionsSet: void writeRestrictions(org.xmlpull.v1.XmlSerializer,java.lang.String)>($r3, "device_policy_local_restrictions");

        $r27 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.RestrictionsSet mDevicePolicyGlobalUserRestrictions>;

        $i10 = r2.<android.content.pm.UserInfo: int id>;

        $r28 = virtualinvoke $r27.<com.android.server.pm.RestrictionsSet: android.os.Bundle getRestrictions(int)>($i10);

        staticinvoke <com.android.server.pm.UserRestrictionsUtils: void writeRestrictions(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>($r3, $r28, "device_policy_global_restrictions");

        exitmonitor r68;

     label12:
        $r29 = r65.<com.android.server.pm.UserManagerService$UserData: java.lang.String account>;

        if $r29 == null goto label13;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "account");

        $r40 = r65.<com.android.server.pm.UserManagerService$UserData: java.lang.String account>;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r40);

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "account");

     label13:
        $z4 = r65.<com.android.server.pm.UserManagerService$UserData: boolean persistSeedData>;

        if $z4 == 0 goto label14;

        $r35 = r65.<com.android.server.pm.UserManagerService$UserData: android.os.PersistableBundle seedAccountOptions>;

        if $r35 == null goto label14;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "seedAccountOptions");

        $r37 = r65.<com.android.server.pm.UserManagerService$UserData: android.os.PersistableBundle seedAccountOptions>;

        virtualinvoke $r37.<android.os.PersistableBundle: void saveToXml(org.xmlpull.v1.XmlSerializer)>($r3);

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "seedAccountOptions");

     label14:
        $l14 = virtualinvoke r65.<com.android.server.pm.UserManagerService$UserData: long getLastRequestQuietModeEnabledMillis()>();

        $b15 = $l14 cmp 0L;

        if $b15 == 0 goto label15;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "lastRequestQuietModeEnabledCall");

        $l11 = virtualinvoke r65.<com.android.server.pm.UserManagerService$UserData: long getLastRequestQuietModeEnabledMillis()>();

        $r32 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l11);

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r32);

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "lastRequestQuietModeEnabledCall");

     label15:
        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "user");

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        return;

     label16:
        $r64 := @caughtexception;

     label17:
        exitmonitor r68;

     label18:
        throw $r64;

        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }
}
