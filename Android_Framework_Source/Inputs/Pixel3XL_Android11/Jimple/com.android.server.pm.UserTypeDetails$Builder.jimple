public final class com.android.server.pm.UserTypeDetails$Builder extends java.lang.Object
{
    private int[] mBadgeColors;
    private int[] mBadgeLabels;
    private int mBadgeNoBackground;
    private int mBadgePlain;
    private int mBaseType;
    private int[] mDarkThemeBadgeColors;
    private android.os.Bundle mDefaultRestrictions;
    private int mDefaultUserInfoPropertyFlags;
    private boolean mEnabled;
    private int mIconBadge;
    private int mLabel;
    private int mMaxAllowed;
    private int mMaxAllowedPerParent;
    private java.lang.String mName;

    public void <init>()
    {
        com.android.server.pm.UserTypeDetails$Builder r0;

        r0 := @this: com.android.server.pm.UserTypeDetails$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.pm.UserTypeDetails$Builder: int mMaxAllowed> = -1;

        r0.<com.android.server.pm.UserTypeDetails$Builder: int mMaxAllowedPerParent> = -1;

        r0.<com.android.server.pm.UserTypeDetails$Builder: int mDefaultUserInfoPropertyFlags> = 0;

        r0.<com.android.server.pm.UserTypeDetails$Builder: android.os.Bundle mDefaultRestrictions> = null;

        r0.<com.android.server.pm.UserTypeDetails$Builder: boolean mEnabled> = 1;

        r0.<com.android.server.pm.UserTypeDetails$Builder: int mLabel> = 0;

        r0.<com.android.server.pm.UserTypeDetails$Builder: int[] mBadgeLabels> = null;

        r0.<com.android.server.pm.UserTypeDetails$Builder: int[] mBadgeColors> = null;

        r0.<com.android.server.pm.UserTypeDetails$Builder: int[] mDarkThemeBadgeColors> = null;

        r0.<com.android.server.pm.UserTypeDetails$Builder: int mIconBadge> = 0;

        r0.<com.android.server.pm.UserTypeDetails$Builder: int mBadgePlain> = 0;

        r0.<com.android.server.pm.UserTypeDetails$Builder: int mBadgeNoBackground> = 0;

        return;
    }

    private boolean hasBadge()
    {
        com.android.server.pm.UserTypeDetails$Builder r0;
        int $i0;
        boolean z0;

        r0 := @this: com.android.server.pm.UserTypeDetails$Builder;

        $i0 = r0.<com.android.server.pm.UserTypeDetails$Builder: int mIconBadge>;

        if $i0 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean hasValidBaseType()
    {
        com.android.server.pm.UserTypeDetails$Builder r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.server.pm.UserTypeDetails$Builder;

        i0 = r0.<com.android.server.pm.UserTypeDetails$Builder: int mBaseType>;

        if i0 == 1024 goto label2;

        if i0 == 4096 goto label2;

        if i0 == 2048 goto label2;

        if i0 != 3072 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    private boolean hasValidPropertyFlags()
    {
        com.android.server.pm.UserTypeDetails$Builder r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.pm.UserTypeDetails$Builder;

        $i0 = r0.<com.android.server.pm.UserTypeDetails$Builder: int mDefaultUserInfoPropertyFlags>;

        $i1 = $i0 & 7315;

        if $i1 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public com.android.server.pm.UserTypeDetails createUserTypeDetails()
    {
        com.android.server.pm.UserTypeDetails$Builder r0;
        java.lang.String r1, $r6, $r10, $r13, $r16, $r18, r27, $r33, $r34, $r38, $r39;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11;
        int[] r2, r3, r30, r35, r40;
        java.lang.StringBuilder $r4, $r11, $r31, $r36;
        boolean $z1, z2, z3, z4, z5, z6, z7;
        com.android.server.pm.UserTypeDetails $r19;
        android.os.Bundle $r20;

        r0 := @this: com.android.server.pm.UserTypeDetails$Builder;

        r27 = r0.<com.android.server.pm.UserTypeDetails$Builder: java.lang.String mName>;

        if r27 == null goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>(z2, "Cannot create a UserTypeDetails with no name.");

        z3 = specialinvoke r0.<com.android.server.pm.UserTypeDetails$Builder: boolean hasValidBaseType()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UserTypeDetails ");

        $r6 = r0.<com.android.server.pm.UserTypeDetails$Builder: java.lang.String mName>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has invalid baseType: ");

        $i8 = r0.<com.android.server.pm.UserTypeDetails$Builder: int mBaseType>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>(z3, $r10);

        z4 = specialinvoke r0.<com.android.server.pm.UserTypeDetails$Builder: boolean hasValidPropertyFlags()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UserTypeDetails ");

        $r13 = r0.<com.android.server.pm.UserTypeDetails$Builder: java.lang.String mName>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has invalid flags: ");

        $i9 = r0.<com.android.server.pm.UserTypeDetails$Builder: int mDefaultUserInfoPropertyFlags>;

        $r16 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i9);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>(z4, $r18);

        $z1 = specialinvoke r0.<com.android.server.pm.UserTypeDetails$Builder: boolean hasBadge()>();

        if $z1 == 0 goto label7;

        r30 = r0.<com.android.server.pm.UserTypeDetails$Builder: int[] mBadgeLabels>;

        if r30 == null goto label3;

        $i11 = lengthof r30;

        if $i11 == 0 goto label3;

        z5 = 1;

        goto label4;

     label3:
        z5 = 0;

     label4:
        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UserTypeDetails ");

        $r33 = r0.<com.android.server.pm.UserTypeDetails$Builder: java.lang.String mName>;

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has badge but no badgeLabels.");

        $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>(z5, $r34);

        r35 = r0.<com.android.server.pm.UserTypeDetails$Builder: int[] mBadgeColors>;

        if r35 == null goto label5;

        $i10 = lengthof r35;

        if $i10 == 0 goto label5;

        z6 = 1;

        goto label6;

     label5:
        z6 = 0;

     label6:
        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UserTypeDetails ");

        $r38 = r0.<com.android.server.pm.UserTypeDetails$Builder: java.lang.String mName>;

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has badge but no badgeColors.");

        $r39 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>(z6, $r39);

     label7:
        r1 = r0.<com.android.server.pm.UserTypeDetails$Builder: java.lang.String mName>;

        z7 = r0.<com.android.server.pm.UserTypeDetails$Builder: boolean mEnabled>;

        i0 = r0.<com.android.server.pm.UserTypeDetails$Builder: int mMaxAllowed>;

        i1 = r0.<com.android.server.pm.UserTypeDetails$Builder: int mBaseType>;

        i2 = r0.<com.android.server.pm.UserTypeDetails$Builder: int mDefaultUserInfoPropertyFlags>;

        i3 = r0.<com.android.server.pm.UserTypeDetails$Builder: int mLabel>;

        i4 = r0.<com.android.server.pm.UserTypeDetails$Builder: int mMaxAllowedPerParent>;

        i5 = r0.<com.android.server.pm.UserTypeDetails$Builder: int mIconBadge>;

        i6 = r0.<com.android.server.pm.UserTypeDetails$Builder: int mBadgePlain>;

        i7 = r0.<com.android.server.pm.UserTypeDetails$Builder: int mBadgeNoBackground>;

        r2 = r0.<com.android.server.pm.UserTypeDetails$Builder: int[] mBadgeLabels>;

        r3 = r0.<com.android.server.pm.UserTypeDetails$Builder: int[] mBadgeColors>;

        r40 = r0.<com.android.server.pm.UserTypeDetails$Builder: int[] mDarkThemeBadgeColors>;

        if r40 != null goto label8;

        r40 = r3;

        goto label8;

     label8:
        $r19 = new com.android.server.pm.UserTypeDetails;

        $r20 = r0.<com.android.server.pm.UserTypeDetails$Builder: android.os.Bundle mDefaultRestrictions>;

        specialinvoke $r19.<com.android.server.pm.UserTypeDetails: void <init>(java.lang.String,boolean,int,int,int,int,int,int,int,int,int[],int[],int[],android.os.Bundle,com.android.server.pm.UserTypeDetails$1)>(r1, z7, i0, i1, i2, i3, i4, i5, i6, i7, r2, r3, r40, $r20, null);

        return $r19;
    }

    int getBaseType()
    {
        com.android.server.pm.UserTypeDetails$Builder r0;
        int $i0;

        r0 := @this: com.android.server.pm.UserTypeDetails$Builder;

        $i0 = r0.<com.android.server.pm.UserTypeDetails$Builder: int mBaseType>;

        return $i0;
    }

    public transient com.android.server.pm.UserTypeDetails$Builder setBadgeColors(int[])
    {
        com.android.server.pm.UserTypeDetails$Builder r0;
        int[] r1;

        r0 := @this: com.android.server.pm.UserTypeDetails$Builder;

        r1 := @parameter0: int[];

        r0.<com.android.server.pm.UserTypeDetails$Builder: int[] mBadgeColors> = r1;

        return r0;
    }

    public transient com.android.server.pm.UserTypeDetails$Builder setBadgeLabels(int[])
    {
        com.android.server.pm.UserTypeDetails$Builder r0;
        int[] r1;

        r0 := @this: com.android.server.pm.UserTypeDetails$Builder;

        r1 := @parameter0: int[];

        r0.<com.android.server.pm.UserTypeDetails$Builder: int[] mBadgeLabels> = r1;

        return r0;
    }

    public com.android.server.pm.UserTypeDetails$Builder setBadgeNoBackground(int)
    {
        com.android.server.pm.UserTypeDetails$Builder r0;
        int i0;

        r0 := @this: com.android.server.pm.UserTypeDetails$Builder;

        i0 := @parameter0: int;

        r0.<com.android.server.pm.UserTypeDetails$Builder: int mBadgeNoBackground> = i0;

        return r0;
    }

    public com.android.server.pm.UserTypeDetails$Builder setBadgePlain(int)
    {
        com.android.server.pm.UserTypeDetails$Builder r0;
        int i0;

        r0 := @this: com.android.server.pm.UserTypeDetails$Builder;

        i0 := @parameter0: int;

        r0.<com.android.server.pm.UserTypeDetails$Builder: int mBadgePlain> = i0;

        return r0;
    }

    public com.android.server.pm.UserTypeDetails$Builder setBaseType(int)
    {
        com.android.server.pm.UserTypeDetails$Builder r0;
        int i0;

        r0 := @this: com.android.server.pm.UserTypeDetails$Builder;

        i0 := @parameter0: int;

        r0.<com.android.server.pm.UserTypeDetails$Builder: int mBaseType> = i0;

        return r0;
    }

    public transient com.android.server.pm.UserTypeDetails$Builder setDarkThemeBadgeColors(int[])
    {
        com.android.server.pm.UserTypeDetails$Builder r0;
        int[] r1;

        r0 := @this: com.android.server.pm.UserTypeDetails$Builder;

        r1 := @parameter0: int[];

        r0.<com.android.server.pm.UserTypeDetails$Builder: int[] mDarkThemeBadgeColors> = r1;

        return r0;
    }

    public com.android.server.pm.UserTypeDetails$Builder setDefaultRestrictions(android.os.Bundle)
    {
        com.android.server.pm.UserTypeDetails$Builder r0;
        android.os.Bundle r1;

        r0 := @this: com.android.server.pm.UserTypeDetails$Builder;

        r1 := @parameter0: android.os.Bundle;

        r0.<com.android.server.pm.UserTypeDetails$Builder: android.os.Bundle mDefaultRestrictions> = r1;

        return r0;
    }

    public com.android.server.pm.UserTypeDetails$Builder setDefaultUserInfoPropertyFlags(int)
    {
        com.android.server.pm.UserTypeDetails$Builder r0;
        int i0;

        r0 := @this: com.android.server.pm.UserTypeDetails$Builder;

        i0 := @parameter0: int;

        r0.<com.android.server.pm.UserTypeDetails$Builder: int mDefaultUserInfoPropertyFlags> = i0;

        return r0;
    }

    public com.android.server.pm.UserTypeDetails$Builder setEnabled(boolean)
    {
        com.android.server.pm.UserTypeDetails$Builder r0;
        boolean z0;

        r0 := @this: com.android.server.pm.UserTypeDetails$Builder;

        z0 := @parameter0: boolean;

        r0.<com.android.server.pm.UserTypeDetails$Builder: boolean mEnabled> = z0;

        return r0;
    }

    public com.android.server.pm.UserTypeDetails$Builder setIconBadge(int)
    {
        com.android.server.pm.UserTypeDetails$Builder r0;
        int i0;

        r0 := @this: com.android.server.pm.UserTypeDetails$Builder;

        i0 := @parameter0: int;

        r0.<com.android.server.pm.UserTypeDetails$Builder: int mIconBadge> = i0;

        return r0;
    }

    public com.android.server.pm.UserTypeDetails$Builder setLabel(int)
    {
        com.android.server.pm.UserTypeDetails$Builder r0;
        int i0;

        r0 := @this: com.android.server.pm.UserTypeDetails$Builder;

        i0 := @parameter0: int;

        r0.<com.android.server.pm.UserTypeDetails$Builder: int mLabel> = i0;

        return r0;
    }

    public com.android.server.pm.UserTypeDetails$Builder setMaxAllowed(int)
    {
        com.android.server.pm.UserTypeDetails$Builder r0;
        int i0;

        r0 := @this: com.android.server.pm.UserTypeDetails$Builder;

        i0 := @parameter0: int;

        r0.<com.android.server.pm.UserTypeDetails$Builder: int mMaxAllowed> = i0;

        return r0;
    }

    public com.android.server.pm.UserTypeDetails$Builder setMaxAllowedPerParent(int)
    {
        com.android.server.pm.UserTypeDetails$Builder r0;
        int i0;

        r0 := @this: com.android.server.pm.UserTypeDetails$Builder;

        i0 := @parameter0: int;

        r0.<com.android.server.pm.UserTypeDetails$Builder: int mMaxAllowedPerParent> = i0;

        return r0;
    }

    public com.android.server.pm.UserTypeDetails$Builder setName(java.lang.String)
    {
        com.android.server.pm.UserTypeDetails$Builder r0;
        java.lang.String r1;

        r0 := @this: com.android.server.pm.UserTypeDetails$Builder;

        r1 := @parameter0: java.lang.String;

        r0.<com.android.server.pm.UserTypeDetails$Builder: java.lang.String mName> = r1;

        return r0;
    }
}
