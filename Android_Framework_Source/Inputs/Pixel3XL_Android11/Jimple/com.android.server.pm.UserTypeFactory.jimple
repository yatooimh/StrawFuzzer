public final class com.android.server.pm.UserTypeFactory extends java.lang.Object
{
    private static final java.lang.String LOG_TAG;

    private void <init>()
    {
        com.android.server.pm.UserTypeFactory r0;

        r0 := @this: com.android.server.pm.UserTypeFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void customizeBuilders(android.util.ArrayMap, android.content.res.XmlResourceParser)
    {
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, z8, $z9;
        java.lang.StringBuilder r0, r62, r63, r66, r68, r69, r79, r80;
        java.lang.String $r1, $r2, $r6, $r8, $r13, $r16, $r20, $r24, $r26, $r27, $r29, $r31, $r41, $r46, $r50, $r52, $r54, $r56, r60, r61, r74;
        android.os.Bundle $r33;
        java.lang.Object $r42;
        int $i4, $i5, $i6, i9, i10;
        java.lang.Throwable $r57;
        android.util.ArrayMap r58;
        android.content.res.XmlResourceParser r59;
        com.android.server.pm.UserTypeDetails$Builder r64;
        java.lang.IllegalArgumentException r65, r67, r78;
        com.android.server.pm._$$Lambda$CFSsMipQUq5_2T1_SDplRJCGzsQ r70;
        com.android.server.pm._$$Lambda$EvXtX9FEb_c87yAlCmxSfLtExqQ r71;
        com.android.server.pm._$$Lambda$aDS6mx4DkwptPe2nlJ1LiNnzsdA r72;
        com.android.server.pm._$$Lambda$RIrciDUAm_lS8CbvRCW_P_ee__4 r73;
        com.android.server.pm._$$Lambda$XAnWXMIiLhuW_IgC6QMv9mUZKLs r75;
        com.android.server.pm._$$Lambda$lPF7xFSzcWOL7sNKaTqRz6Ju9JA r76;
        com.android.server.pm._$$Lambda$5lF336CUiUJtc8iHqnPzYtrbxbc r77;

        r58 := @parameter0: android.util.ArrayMap;

        r59 := @parameter1: android.content.res.XmlResourceParser;

     label01:
        staticinvoke <com.android.internal.util.XmlUtils: void beginDocument(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r59, "user-types");

        staticinvoke <com.android.internal.util.XmlUtils: void nextElement(org.xmlpull.v1.XmlPullParser)>(r59);

     label02:
        i9 = interfaceinvoke r59.<android.content.res.XmlResourceParser: int getEventType()>();

     label03:
        z7 = 1;

        if i9 == 1 goto label45;

     label04:
        r60 = interfaceinvoke r59.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $r1 = "profile-type";

        z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r60);

     label05:
        if z0 == 0 goto label06;

        z8 = 1;

        goto label08;

     label06:
        $r2 = "full-type";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r60);

        if $z1 == 0 goto label42;

     label07:
        z8 = 0;

     label08:
        r61 = interfaceinvoke r59.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

     label09:
        if r61 != null goto label12;

     label10:
        r62 = new java.lang.StringBuilder;

        specialinvoke r62.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping user type with no name in ");

        $r54 = interfaceinvoke r59.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        $r56 = virtualinvoke r62.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserTypeFactory", $r56);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r59);

     label11:
        goto label43;

     label12:
        virtualinvoke r61.<java.lang.String: java.lang.String intern()>();

        $z2 = virtualinvoke r61.<java.lang.String: boolean startsWith(java.lang.String)>("android.");

        if $z2 == 0 goto label22;

        r63 = new java.lang.StringBuilder;

        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Customizing user type ");

        virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r61);

        $r41 = virtualinvoke r63.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("UserTypeFactory", $r41);

        $r42 = virtualinvoke r58.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r61);

        r64 = (com.android.server.pm.UserTypeDetails$Builder) $r42;

     label13:
        if r64 == null goto label21;

        if z8 == 0 goto label15;

     label14:
        $i6 = virtualinvoke r64.<com.android.server.pm.UserTypeDetails$Builder: int getBaseType()>();

        if $i6 == 4096 goto label17;

     label15:
        if z8 != 0 goto label18;

     label16:
        $i5 = virtualinvoke r64.<com.android.server.pm.UserTypeDetails$Builder: int getBaseType()>();

        if $i5 != 1024 goto label18;

     label17:
        goto label19;

     label18:
        z7 = 0;

     label19:
        if z7 == 0 goto label20;

        goto label25;

     label20:
        r65 = new java.lang.IllegalArgumentException;

        r66 = new java.lang.StringBuilder;

        specialinvoke r66.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wrong base type to customize user type (");

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r61);

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), which is type ");

        $i4 = virtualinvoke r64.<com.android.server.pm.UserTypeDetails$Builder: int getBaseType()>();

        $r50 = staticinvoke <android.content.pm.UserInfo: java.lang.String flagsToString(int)>($i4);

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r52 = virtualinvoke r66.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r65.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r52);

        throw r65;

     label21:
        r67 = new java.lang.IllegalArgumentException;

        r68 = new java.lang.StringBuilder;

        specialinvoke r68.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal custom user type name ");

        virtualinvoke r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r61);

        virtualinvoke r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Non-AOSP user types cannot start with \'android.\'");

        $r46 = virtualinvoke r68.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r67.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r46);

        throw r67;

     label22:
        if z8 == 0 goto label41;

     label23:
        r69 = new java.lang.StringBuilder;

        specialinvoke r69.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating custom user type ");

        virtualinvoke r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r61);

        $r16 = virtualinvoke r69.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("UserTypeFactory", $r16);

        r64 = new com.android.server.pm.UserTypeDetails$Builder;

        specialinvoke r64.<com.android.server.pm.UserTypeDetails$Builder: void <init>()>();

     label24:
        virtualinvoke r64.<com.android.server.pm.UserTypeDetails$Builder: com.android.server.pm.UserTypeDetails$Builder setName(java.lang.String)>(r61);

        virtualinvoke r64.<com.android.server.pm.UserTypeDetails$Builder: com.android.server.pm.UserTypeDetails$Builder setBaseType(int)>(4096);

        virtualinvoke r58.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r61, r64);

     label25:
        if z8 == 0 goto label27;

     label26:
        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r64);

        r70 = new com.android.server.pm._$$Lambda$CFSsMipQUq5_2T1_SDplRJCGzsQ;

        specialinvoke r70.<com.android.server.pm._$$Lambda$CFSsMipQUq5_2T1_SDplRJCGzsQ: void <init>(com.android.server.pm.UserTypeDetails$Builder)>(r64);

        staticinvoke <com.android.server.pm.UserTypeFactory: void setIntAttribute(android.content.res.XmlResourceParser,java.lang.String,java.util.function.Consumer)>(r59, "max-allowed-per-parent", r70);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r64);

        r71 = new com.android.server.pm._$$Lambda$EvXtX9FEb_c87yAlCmxSfLtExqQ;

        specialinvoke r71.<com.android.server.pm._$$Lambda$EvXtX9FEb_c87yAlCmxSfLtExqQ: void <init>(com.android.server.pm.UserTypeDetails$Builder)>(r64);

        staticinvoke <com.android.server.pm.UserTypeFactory: void setResAttribute(android.content.res.XmlResourceParser,java.lang.String,java.util.function.Consumer)>(r59, "icon-badge", r71);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r64);

        r72 = new com.android.server.pm._$$Lambda$aDS6mx4DkwptPe2nlJ1LiNnzsdA;

        specialinvoke r72.<com.android.server.pm._$$Lambda$aDS6mx4DkwptPe2nlJ1LiNnzsdA: void <init>(com.android.server.pm.UserTypeDetails$Builder)>(r64);

        staticinvoke <com.android.server.pm.UserTypeFactory: void setResAttribute(android.content.res.XmlResourceParser,java.lang.String,java.util.function.Consumer)>(r59, "badge-plain", r72);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r64);

        r73 = new com.android.server.pm._$$Lambda$RIrciDUAm_lS8CbvRCW_P_ee__4;

        specialinvoke r73.<com.android.server.pm._$$Lambda$RIrciDUAm_lS8CbvRCW_P_ee__4: void <init>(com.android.server.pm.UserTypeDetails$Builder)>(r64);

        staticinvoke <com.android.server.pm.UserTypeFactory: void setResAttribute(android.content.res.XmlResourceParser,java.lang.String,java.util.function.Consumer)>(r59, "badge-no-background", r73);

     label27:
        i10 = interfaceinvoke r59.<android.content.res.XmlResourceParser: int getDepth()>();

     label28:
        $z9 = staticinvoke <com.android.internal.util.XmlUtils: boolean nextElementWithin(org.xmlpull.v1.XmlPullParser,int)>(r59, i10);

        if $z9 == 0 goto label43;

        r74 = interfaceinvoke r59.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $r20 = "default-restrictions";

        $z3 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r74);

        if $z3 == 0 goto label30;

        $r33 = staticinvoke <com.android.server.pm.UserRestrictionsUtils: android.os.Bundle readRestrictions(org.xmlpull.v1.XmlPullParser)>(r59);

        virtualinvoke r64.<com.android.server.pm.UserTypeDetails$Builder: com.android.server.pm.UserTypeDetails$Builder setDefaultRestrictions(android.os.Bundle)>($r33);

     label29:
        goto label40;

     label30:
        if z8 == 0 goto label33;

     label31:
        $r31 = "badge-labels";

        $z6 = virtualinvoke $r31.<java.lang.String: boolean equals(java.lang.Object)>(r74);

        if $z6 == 0 goto label33;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r64);

        r75 = new com.android.server.pm._$$Lambda$XAnWXMIiLhuW_IgC6QMv9mUZKLs;

        specialinvoke r75.<com.android.server.pm._$$Lambda$XAnWXMIiLhuW_IgC6QMv9mUZKLs: void <init>(com.android.server.pm.UserTypeDetails$Builder)>(r64);

        staticinvoke <com.android.server.pm.UserTypeFactory: void setResAttributeArray(android.content.res.XmlResourceParser,java.util.function.Consumer)>(r59, r75);

     label32:
        goto label40;

     label33:
        if z8 == 0 goto label36;

     label34:
        $r29 = "badge-colors";

        $z5 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>(r74);

        if $z5 == 0 goto label36;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r64);

        r76 = new com.android.server.pm._$$Lambda$lPF7xFSzcWOL7sNKaTqRz6Ju9JA;

        specialinvoke r76.<com.android.server.pm._$$Lambda$lPF7xFSzcWOL7sNKaTqRz6Ju9JA: void <init>(com.android.server.pm.UserTypeDetails$Builder)>(r64);

        staticinvoke <com.android.server.pm.UserTypeFactory: void setResAttributeArray(android.content.res.XmlResourceParser,java.util.function.Consumer)>(r59, r76);

     label35:
        goto label40;

     label36:
        if z8 == 0 goto label39;

     label37:
        $r27 = "badge-colors-dark";

        $z4 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>(r74);

        if $z4 == 0 goto label39;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r64);

        r77 = new com.android.server.pm._$$Lambda$5lF336CUiUJtc8iHqnPzYtrbxbc;

        specialinvoke r77.<com.android.server.pm._$$Lambda$5lF336CUiUJtc8iHqnPzYtrbxbc: void <init>(com.android.server.pm.UserTypeDetails$Builder)>(r64);

        staticinvoke <com.android.server.pm.UserTypeFactory: void setResAttributeArray(android.content.res.XmlResourceParser,java.util.function.Consumer)>(r59, r77);

     label38:
        goto label40;

     label39:
        r0 = new java.lang.StringBuilder;

        specialinvoke r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized tag ");

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r74);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r24 = interfaceinvoke r59.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserTypeFactory", $r26);

     label40:
        goto label28;

     label41:
        r78 = new java.lang.IllegalArgumentException;

        r79 = new java.lang.StringBuilder;

        specialinvoke r79.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creation of non-profile user type (");

        virtualinvoke r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r61);

        virtualinvoke r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is not currently supported.");

        $r13 = virtualinvoke r79.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r78.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw r78;

     label42:
        r80 = new java.lang.StringBuilder;

        specialinvoke r80.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping unknown element ");

        virtualinvoke r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r60);

        virtualinvoke r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r6 = interfaceinvoke r59.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke r80.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserTypeFactory", $r8);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r59);

     label43:
        staticinvoke <com.android.internal.util.XmlUtils: void nextElement(org.xmlpull.v1.XmlPullParser)>(r59);

     label44:
        goto label02;

     label45:
        goto label47;

     label46:
        $r57 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("UserTypeFactory", "Cannot read user type configuration file.", $r57);

     label47:
        return;

        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label46;
        catch java.io.IOException from label01 to label02 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label02 to label03 with label46;
        catch java.io.IOException from label02 to label03 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label05 with label46;
        catch java.io.IOException from label04 to label05 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label06 to label07 with label46;
        catch java.io.IOException from label06 to label07 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label08 to label09 with label46;
        catch java.io.IOException from label08 to label09 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label10 to label11 with label46;
        catch java.io.IOException from label10 to label11 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label12 to label13 with label46;
        catch java.io.IOException from label12 to label13 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label14 to label15 with label46;
        catch java.io.IOException from label14 to label15 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label16 to label17 with label46;
        catch java.io.IOException from label16 to label17 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label20 to label21 with label46;
        catch java.io.IOException from label20 to label21 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label21 to label22 with label46;
        catch java.io.IOException from label21 to label22 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label23 to label24 with label46;
        catch java.io.IOException from label23 to label24 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label24 to label25 with label46;
        catch java.io.IOException from label24 to label25 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label26 to label27 with label46;
        catch java.io.IOException from label26 to label27 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label27 to label28 with label46;
        catch java.io.IOException from label27 to label28 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label28 to label29 with label46;
        catch java.io.IOException from label28 to label29 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label31 to label32 with label46;
        catch java.io.IOException from label31 to label32 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label34 to label35 with label46;
        catch java.io.IOException from label34 to label35 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label37 to label38 with label46;
        catch java.io.IOException from label37 to label38 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label39 to label40 with label46;
        catch java.io.IOException from label39 to label40 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label41 to label42 with label46;
        catch java.io.IOException from label41 to label42 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label42 to label43 with label46;
        catch java.io.IOException from label42 to label43 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label43 to label44 with label46;
        catch java.io.IOException from label43 to label44 with label46;
    }

    private static android.os.Bundle getDefaultGuestUserRestrictions()
    {
        android.os.Bundle r0;

        r0 = staticinvoke <com.android.server.pm.UserTypeFactory: android.os.Bundle getDefaultSecondaryUserRestrictions()>();

        virtualinvoke r0.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("no_config_wifi", 1);

        virtualinvoke r0.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("no_install_unknown_sources", 1);

        return r0;
    }

    private static android.os.Bundle getDefaultSecondaryUserRestrictions()
    {
        android.os.Bundle $r1;

        $r1 = new android.os.Bundle;

        specialinvoke $r1.<android.os.Bundle: void <init>()>();

        virtualinvoke $r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("no_outgoing_calls", 1);

        virtualinvoke $r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("no_sms", 1);

        return $r1;
    }

    private static com.android.server.pm.UserTypeDetails$Builder getDefaultTypeFullDemo()
    {
        com.android.server.pm.UserTypeDetails$Builder $r0, $r1, $r2, $r3, $r4, $r5;

        $r0 = new com.android.server.pm.UserTypeDetails$Builder;

        specialinvoke $r0.<com.android.server.pm.UserTypeDetails$Builder: void <init>()>();

        $r1 = virtualinvoke $r0.<com.android.server.pm.UserTypeDetails$Builder: com.android.server.pm.UserTypeDetails$Builder setName(java.lang.String)>("android.os.usertype.full.DEMO");

        $r2 = virtualinvoke $r1.<com.android.server.pm.UserTypeDetails$Builder: com.android.server.pm.UserTypeDetails$Builder setBaseType(int)>(1024);

        $r3 = virtualinvoke $r2.<com.android.server.pm.UserTypeDetails$Builder: com.android.server.pm.UserTypeDetails$Builder setDefaultUserInfoPropertyFlags(int)>(512);

        $r4 = virtualinvoke $r3.<com.android.server.pm.UserTypeDetails$Builder: com.android.server.pm.UserTypeDetails$Builder setMaxAllowed(int)>(-1);

        $r5 = virtualinvoke $r4.<com.android.server.pm.UserTypeDetails$Builder: com.android.server.pm.UserTypeDetails$Builder setDefaultRestrictions(android.os.Bundle)>(null);

        return $r5;
    }

    private static com.android.server.pm.UserTypeDetails$Builder getDefaultTypeFullGuest()
    {
        android.content.res.Resources $r0;
        boolean $z0;
        com.android.server.pm.UserTypeDetails$Builder $r1, $r2, $r3, $r4, $r5, $r7;
        short $s0, s1;
        android.os.Bundle $r6;

        $r0 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $z0 = virtualinvoke $r0.<android.content.res.Resources: boolean getBoolean(int)>(17891468);

        if $z0 == 0 goto label1;

        s1 = 256;

        goto label2;

     label1:
        s1 = 0;

     label2:
        $r1 = new com.android.server.pm.UserTypeDetails$Builder;

        specialinvoke $r1.<com.android.server.pm.UserTypeDetails$Builder: void <init>()>();

        $r2 = virtualinvoke $r1.<com.android.server.pm.UserTypeDetails$Builder: com.android.server.pm.UserTypeDetails$Builder setName(java.lang.String)>("android.os.usertype.full.GUEST");

        $r3 = virtualinvoke $r2.<com.android.server.pm.UserTypeDetails$Builder: com.android.server.pm.UserTypeDetails$Builder setBaseType(int)>(1024);

        $s0 = s1 | 4;

        $r4 = virtualinvoke $r3.<com.android.server.pm.UserTypeDetails$Builder: com.android.server.pm.UserTypeDetails$Builder setDefaultUserInfoPropertyFlags(int)>($s0);

        $r5 = virtualinvoke $r4.<com.android.server.pm.UserTypeDetails$Builder: com.android.server.pm.UserTypeDetails$Builder setMaxAllowed(int)>(1);

        $r6 = staticinvoke <com.android.server.pm.UserTypeFactory: android.os.Bundle getDefaultGuestUserRestrictions()>();

        $r7 = virtualinvoke $r5.<com.android.server.pm.UserTypeDetails$Builder: com.android.server.pm.UserTypeDetails$Builder setDefaultRestrictions(android.os.Bundle)>($r6);

        return $r7;
    }

    private static com.android.server.pm.UserTypeDetails$Builder getDefaultTypeFullRestricted()
    {
        com.android.server.pm.UserTypeDetails$Builder $r0, $r1, $r2, $r3, $r4, $r5;

        $r0 = new com.android.server.pm.UserTypeDetails$Builder;

        specialinvoke $r0.<com.android.server.pm.UserTypeDetails$Builder: void <init>()>();

        $r1 = virtualinvoke $r0.<com.android.server.pm.UserTypeDetails$Builder: com.android.server.pm.UserTypeDetails$Builder setName(java.lang.String)>("android.os.usertype.full.RESTRICTED");

        $r2 = virtualinvoke $r1.<com.android.server.pm.UserTypeDetails$Builder: com.android.server.pm.UserTypeDetails$Builder setBaseType(int)>(1024);

        $r3 = virtualinvoke $r2.<com.android.server.pm.UserTypeDetails$Builder: com.android.server.pm.UserTypeDetails$Builder setDefaultUserInfoPropertyFlags(int)>(8);

        $r4 = virtualinvoke $r3.<com.android.server.pm.UserTypeDetails$Builder: com.android.server.pm.UserTypeDetails$Builder setMaxAllowed(int)>(-1);

        $r5 = virtualinvoke $r4.<com.android.server.pm.UserTypeDetails$Builder: com.android.server.pm.UserTypeDetails$Builder setDefaultRestrictions(android.os.Bundle)>(null);

        return $r5;
    }

    private static com.android.server.pm.UserTypeDetails$Builder getDefaultTypeFullSecondary()
    {
        com.android.server.pm.UserTypeDetails$Builder $r0, $r1, $r2, $r3, $r5;
        android.os.Bundle $r4;

        $r0 = new com.android.server.pm.UserTypeDetails$Builder;

        specialinvoke $r0.<com.android.server.pm.UserTypeDetails$Builder: void <init>()>();

        $r1 = virtualinvoke $r0.<com.android.server.pm.UserTypeDetails$Builder: com.android.server.pm.UserTypeDetails$Builder setName(java.lang.String)>("android.os.usertype.full.SECONDARY");

        $r2 = virtualinvoke $r1.<com.android.server.pm.UserTypeDetails$Builder: com.android.server.pm.UserTypeDetails$Builder setBaseType(int)>(1024);

        $r3 = virtualinvoke $r2.<com.android.server.pm.UserTypeDetails$Builder: com.android.server.pm.UserTypeDetails$Builder setMaxAllowed(int)>(-1);

        $r4 = staticinvoke <com.android.server.pm.UserTypeFactory: android.os.Bundle getDefaultSecondaryUserRestrictions()>();

        $r5 = virtualinvoke $r3.<com.android.server.pm.UserTypeDetails$Builder: com.android.server.pm.UserTypeDetails$Builder setDefaultRestrictions(android.os.Bundle)>($r4);

        return $r5;
    }

    private static com.android.server.pm.UserTypeDetails$Builder getDefaultTypeFullSystem()
    {
        com.android.server.pm.UserTypeDetails$Builder $r0, $r1, $r2;

        $r0 = new com.android.server.pm.UserTypeDetails$Builder;

        specialinvoke $r0.<com.android.server.pm.UserTypeDetails$Builder: void <init>()>();

        $r1 = virtualinvoke $r0.<com.android.server.pm.UserTypeDetails$Builder: com.android.server.pm.UserTypeDetails$Builder setName(java.lang.String)>("android.os.usertype.full.SYSTEM");

        $r2 = virtualinvoke $r1.<com.android.server.pm.UserTypeDetails$Builder: com.android.server.pm.UserTypeDetails$Builder setBaseType(int)>(3072);

        return $r2;
    }

    private static com.android.server.pm.UserTypeDetails$Builder getDefaultTypeProfileManaged()
    {
        com.android.server.pm.UserTypeDetails$Builder $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r10, $r12, $r14, $r15;
        int[] $r9, $r11, $r13;

        $r0 = new com.android.server.pm.UserTypeDetails$Builder;

        specialinvoke $r0.<com.android.server.pm.UserTypeDetails$Builder: void <init>()>();

        $r1 = virtualinvoke $r0.<com.android.server.pm.UserTypeDetails$Builder: com.android.server.pm.UserTypeDetails$Builder setName(java.lang.String)>("android.os.usertype.profile.MANAGED");

        $r2 = virtualinvoke $r1.<com.android.server.pm.UserTypeDetails$Builder: com.android.server.pm.UserTypeDetails$Builder setBaseType(int)>(4096);

        $r3 = virtualinvoke $r2.<com.android.server.pm.UserTypeDetails$Builder: com.android.server.pm.UserTypeDetails$Builder setDefaultUserInfoPropertyFlags(int)>(32);

        $r4 = virtualinvoke $r3.<com.android.server.pm.UserTypeDetails$Builder: com.android.server.pm.UserTypeDetails$Builder setMaxAllowedPerParent(int)>(1);

        $r5 = virtualinvoke $r4.<com.android.server.pm.UserTypeDetails$Builder: com.android.server.pm.UserTypeDetails$Builder setLabel(int)>(0);

        $r6 = virtualinvoke $r5.<com.android.server.pm.UserTypeDetails$Builder: com.android.server.pm.UserTypeDetails$Builder setIconBadge(int)>(17302387);

        $r7 = virtualinvoke $r6.<com.android.server.pm.UserTypeDetails$Builder: com.android.server.pm.UserTypeDetails$Builder setBadgePlain(int)>(17302382);

        $r8 = virtualinvoke $r7.<com.android.server.pm.UserTypeDetails$Builder: com.android.server.pm.UserTypeDetails$Builder setBadgeNoBackground(int)>(17302384);

        $r9 = newarray (int)[3];

        $r9[0] = 17040496;

        $r9[1] = 17040497;

        $r9[2] = 17040498;

        $r10 = virtualinvoke $r8.<com.android.server.pm.UserTypeDetails$Builder: com.android.server.pm.UserTypeDetails$Builder setBadgeLabels(int[])>($r9);

        $r11 = newarray (int)[3];

        $r11[0] = 17170937;

        $r11[1] = 17170939;

        $r11[2] = 17170941;

        $r12 = virtualinvoke $r10.<com.android.server.pm.UserTypeDetails$Builder: com.android.server.pm.UserTypeDetails$Builder setBadgeColors(int[])>($r11);

        $r13 = newarray (int)[3];

        $r13[0] = 17170938;

        $r13[1] = 17170940;

        $r13[2] = 17170942;

        $r14 = virtualinvoke $r12.<com.android.server.pm.UserTypeDetails$Builder: com.android.server.pm.UserTypeDetails$Builder setDarkThemeBadgeColors(int[])>($r13);

        $r15 = virtualinvoke $r14.<com.android.server.pm.UserTypeDetails$Builder: com.android.server.pm.UserTypeDetails$Builder setDefaultRestrictions(android.os.Bundle)>(null);

        return $r15;
    }

    private static com.android.server.pm.UserTypeDetails$Builder getDefaultTypeSystemHeadless()
    {
        com.android.server.pm.UserTypeDetails$Builder $r0, $r1, $r2;

        $r0 = new com.android.server.pm.UserTypeDetails$Builder;

        specialinvoke $r0.<com.android.server.pm.UserTypeDetails$Builder: void <init>()>();

        $r1 = virtualinvoke $r0.<com.android.server.pm.UserTypeDetails$Builder: com.android.server.pm.UserTypeDetails$Builder setName(java.lang.String)>("android.os.usertype.system.HEADLESS");

        $r2 = virtualinvoke $r1.<com.android.server.pm.UserTypeDetails$Builder: com.android.server.pm.UserTypeDetails$Builder setBaseType(int)>(2048);

        return $r2;
    }

    public static android.util.ArrayMap getUserTypes()
    {
        android.util.ArrayMap $r0, $r16;
        com.android.server.pm.UserTypeDetails$Builder $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r20;
        android.content.res.Resources $r15;
        int $i0, i1, $i2;
        java.lang.Object $r17, $r19;
        java.lang.String $r18;
        com.android.server.pm.UserTypeDetails $r21;
        java.lang.Throwable $r23, $r24;
        android.content.res.XmlResourceParser r26;

        $r0 = new android.util.ArrayMap;

        specialinvoke $r0.<android.util.ArrayMap: void <init>()>();

        $r1 = staticinvoke <com.android.server.pm.UserTypeFactory: com.android.server.pm.UserTypeDetails$Builder getDefaultTypeProfileManaged()>();

        virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("android.os.usertype.profile.MANAGED", $r1);

        $r3 = staticinvoke <com.android.server.pm.UserTypeFactory: com.android.server.pm.UserTypeDetails$Builder getDefaultTypeFullSystem()>();

        virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("android.os.usertype.full.SYSTEM", $r3);

        $r5 = staticinvoke <com.android.server.pm.UserTypeFactory: com.android.server.pm.UserTypeDetails$Builder getDefaultTypeFullSecondary()>();

        virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("android.os.usertype.full.SECONDARY", $r5);

        $r7 = staticinvoke <com.android.server.pm.UserTypeFactory: com.android.server.pm.UserTypeDetails$Builder getDefaultTypeFullGuest()>();

        virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("android.os.usertype.full.GUEST", $r7);

        $r9 = staticinvoke <com.android.server.pm.UserTypeFactory: com.android.server.pm.UserTypeDetails$Builder getDefaultTypeFullDemo()>();

        virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("android.os.usertype.full.DEMO", $r9);

        $r11 = staticinvoke <com.android.server.pm.UserTypeFactory: com.android.server.pm.UserTypeDetails$Builder getDefaultTypeFullRestricted()>();

        virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("android.os.usertype.full.RESTRICTED", $r11);

        $r13 = staticinvoke <com.android.server.pm.UserTypeFactory: com.android.server.pm.UserTypeDetails$Builder getDefaultTypeSystemHeadless()>();

        virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("android.os.usertype.system.HEADLESS", $r13);

        $r15 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        r26 = virtualinvoke $r15.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>(18284550);

     label01:
        staticinvoke <com.android.server.pm.UserTypeFactory: void customizeBuilders(android.util.ArrayMap,android.content.res.XmlResourceParser)>($r0, r26);

     label02:
        if r26 == null goto label03;

        interfaceinvoke r26.<android.content.res.XmlResourceParser: void close()>();

     label03:
        $r16 = new android.util.ArrayMap;

        $i0 = virtualinvoke $r0.<android.util.ArrayMap: int size()>();

        specialinvoke $r16.<android.util.ArrayMap: void <init>(int)>($i0);

        i1 = 0;

     label04:
        $i2 = virtualinvoke $r0.<android.util.ArrayMap: int size()>();

        if i1 >= $i2 goto label05;

        $r17 = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i1);

        $r18 = (java.lang.String) $r17;

        $r19 = virtualinvoke $r0.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        $r20 = (com.android.server.pm.UserTypeDetails$Builder) $r19;

        $r21 = virtualinvoke $r20.<com.android.server.pm.UserTypeDetails$Builder: com.android.server.pm.UserTypeDetails createUserTypeDetails()>();

        virtualinvoke $r16.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, $r21);

        i1 = i1 + 1;

        goto label04;

     label05:
        return $r16;

     label06:
        $r23 := @caughtexception;

        if r26 == null goto label10;

     label07:
        interfaceinvoke r26.<android.content.res.XmlResourceParser: void close()>();

     label08:
        goto label10;

     label09:
        $r24 := @caughtexception;

        virtualinvoke $r23.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r24);

     label10:
        throw $r23;

        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.lang.Throwable from label07 to label08 with label09;
    }

    private static void setIntAttribute(android.content.res.XmlResourceParser, java.lang.String, java.util.function.Consumer)
    {
        android.content.res.XmlResourceParser r0;
        java.lang.String r1, r2, $r12, $r14;
        int $i0;
        java.lang.Integer $r4;
        java.lang.Throwable $r5;
        java.lang.StringBuilder $r6;
        java.util.function.Consumer r15;

        r0 := @parameter0: android.content.res.XmlResourceParser;

        r1 := @parameter1: java.lang.String;

        r15 := @parameter2: java.util.function.Consumer;

        r2 = interfaceinvoke r0.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r1);

        if r2 != null goto label1;

        return;

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke r15.<java.util.function.Consumer: void accept(java.lang.Object)>($r4);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot parse value of \'");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' for ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r12 = interfaceinvoke r0.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("UserTypeFactory", $r14, $r5);

        throw $r5;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private static void setResAttribute(android.content.res.XmlResourceParser, java.lang.String, java.util.function.Consumer)
    {
        android.content.res.XmlResourceParser r0;
        java.lang.String r1, $r3;
        java.util.function.Consumer r2;
        int $i0;
        java.lang.Integer $r4;

        r0 := @parameter0: android.content.res.XmlResourceParser;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.function.Consumer;

        $r3 = interfaceinvoke r0.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r1);

        if $r3 != null goto label1;

        return;

     label1:
        $i0 = interfaceinvoke r0.<android.content.res.XmlResourceParser: int getAttributeResourceValue(java.lang.String,java.lang.String,int)>(null, r1, 0);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke r2.<java.util.function.Consumer: void accept(java.lang.Object)>($r4);

        return;
    }

    private static void setResAttributeArray(android.content.res.XmlResourceParser, java.util.function.Consumer) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        java.util.function.Consumer r0;
        int i0, $i1, $i2, $i3, i5, i6;
        java.lang.String r2, $r7, $r13, $r15;
        java.util.ArrayList $r4;
        java.lang.Object $r5;
        java.lang.Integer $r6, $r8;
        boolean $z0, $z2;
        java.lang.StringBuilder $r9;
        android.content.res.XmlResourceParser r16;
        int[] r17;

        r16 := @parameter0: android.content.res.XmlResourceParser;

        r0 := @parameter1: java.util.function.Consumer;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        i0 = interfaceinvoke r16.<android.content.res.XmlResourceParser: int getDepth()>();

     label1:
        $z2 = staticinvoke <com.android.internal.util.XmlUtils: boolean nextElementWithin(org.xmlpull.v1.XmlPullParser,int)>(r16, i0);

        if $z2 == 0 goto label4;

        r2 = interfaceinvoke r16.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $r7 = "item";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 != 0 goto label2;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping unknown child element ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r13 = interfaceinvoke r16.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserTypeFactory", $r15);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r16);

        goto label1;

     label2:
        i5 = interfaceinvoke r16.<android.content.res.XmlResourceParser: int getAttributeResourceValue(java.lang.String,java.lang.String,int)>(null, "res", -1);

        if i5 != -1 goto label3;

        goto label1;

     label3:
        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        goto label1;

     label4:
        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        r17 = newarray (int)[$i1];

        i6 = 0;

     label5:
        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if i6 >= $i2 goto label6;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $r6 = (java.lang.Integer) $r5;

        $i3 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        r17[i6] = $i3;

        i6 = i6 + 1;

        goto label5;

     label6:
        interfaceinvoke r0.<java.util.function.Consumer: void accept(java.lang.Object)>(r17);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.pm.UserTypeFactory: java.lang.String LOG_TAG> = "UserTypeFactory";

        return;
    }
}
