class com.android.server.pm.dex.ArtManagerService$ArtManagerInternalImpl extends android.content.pm.dex.ArtManagerInternal
{
    private static final java.lang.String IORAP_DIR;
    private static final java.lang.String TAG;
    final com.android.server.pm.dex.ArtManagerService this$0;

    private void <init>(com.android.server.pm.dex.ArtManagerService)
    {
        com.android.server.pm.dex.ArtManagerService$ArtManagerInternalImpl r0;
        com.android.server.pm.dex.ArtManagerService r1;

        r0 := @this: com.android.server.pm.dex.ArtManagerService$ArtManagerInternalImpl;

        r1 := @parameter0: com.android.server.pm.dex.ArtManagerService;

        r0.<com.android.server.pm.dex.ArtManagerService$ArtManagerInternalImpl: com.android.server.pm.dex.ArtManagerService this$0> = r1;

        specialinvoke r0.<android.content.pm.dex.ArtManagerInternal: void <init>()>();

        return;
    }

    void <init>(com.android.server.pm.dex.ArtManagerService, com.android.server.pm.dex.ArtManagerService$1)
    {
        com.android.server.pm.dex.ArtManagerService$ArtManagerInternalImpl r0;
        com.android.server.pm.dex.ArtManagerService r1;
        com.android.server.pm.dex.ArtManagerService$1 r2;

        r0 := @this: com.android.server.pm.dex.ArtManagerService$ArtManagerInternalImpl;

        r1 := @parameter0: com.android.server.pm.dex.ArtManagerService;

        r2 := @parameter1: com.android.server.pm.dex.ArtManagerService$1;

        specialinvoke r0.<com.android.server.pm.dex.ArtManagerService$ArtManagerInternalImpl: void <init>(com.android.server.pm.dex.ArtManagerService)>(r1);

        return;
    }

    private boolean checkIorapCompiledTrace(java.lang.String, java.lang.String, long)
    {
        com.android.server.pm.dex.ArtManagerService$ArtManagerInternalImpl r0;
        boolean z0, z1;
        java.lang.String[] $r2;
        java.lang.String $r3, $r5, $r8, $r9, $r12, $r14, $r16, r17, r18, r20;
        java.nio.file.LinkOption[] $r4;
        byte $b2;
        java.lang.Throwable $r15;
        long l4, l5;
        java.nio.file.Path r19;
        java.lang.StringBuilder r23, r24;
        java.io.IOException r25;

        r0 := @this: com.android.server.pm.dex.ArtManagerService$ArtManagerInternalImpl;

        r17 := @parameter0: java.lang.String;

        r18 := @parameter1: java.lang.String;

        l4 := @parameter2: long;

        z1 = 0;

        $r2 = newarray (java.lang.String)[5];

        $r2[0] = r17;

        $r3 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l4);

        $r2[1] = $r3;

        $r2[2] = r18;

        $r2[3] = "compiled_traces";

        $r2[4] = "compiled_trace.pb";

        r19 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>("/data/misc/iorapd", $r2);

     label01:
        $r4 = newarray (java.nio.file.LinkOption)[0];

        z0 = staticinvoke <java.nio.file.Files: boolean exists(java.nio.file.Path,java.nio.file.LinkOption[])>(r19, $r4);

        r23 = new java.lang.StringBuilder;

        specialinvoke r23.<java.lang.StringBuilder: void <init>()>();

        $r5 = interfaceinvoke r19.<java.nio.file.Path: java.lang.String toString()>();

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

     label02:
        if z0 == 0 goto label03;

        r20 = " exists";

        goto label04;

     label03:
        r20 = " doesn\'t exist";

     label04:
        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        $r8 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ArtManagerInternalImpl", $r8);

     label05:
        if z0 == 0 goto label09;

     label06:
        l5 = staticinvoke <java.nio.file.Files: long size(java.nio.file.Path)>(r19);

        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        $r9 = interfaceinvoke r19.<java.nio.file.Path: java.lang.String toString()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" size is ");

        $r12 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l5);

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ArtManagerInternalImpl", $r14);

     label07:
        $b2 = l5 cmp 0L;

        if $b2 <= 0 goto label08;

        z1 = 1;

     label08:
        return z1;

     label09:
        return z0;

     label10:
        $r15 := @caughtexception;

        r25 = (java.io.IOException) $r15;

        $r16 = virtualinvoke r25.<java.io.IOException: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ArtManagerInternalImpl", $r16);

        return 0;

        catch java.io.IOException from label01 to label02 with label10;
        catch java.io.IOException from label04 to label05 with label10;
        catch java.io.IOException from label06 to label07 with label10;
    }

    public android.content.pm.dex.PackageOptimizationInfo getPackageOptimizationInfo(android.content.pm.ApplicationInfo, java.lang.String, java.lang.String)
    {
        com.android.server.pm.dex.ArtManagerService$ArtManagerInternalImpl r0;
        java.lang.String r1, $r2, $r10, $r14, $r18, $r20, r22, r23, r25, r26, r27, r32, $r33;
        android.content.pm.dex.PackageOptimizationInfo $r3;
        int $i0, $i1;
        java.lang.StringBuilder $r4, $r8, $r16;
        java.lang.Throwable $r7, $r15;
        android.content.pm.ApplicationInfo r21;
        dalvik.system.DexFile$OptimizationInfo r24;
        long $l4;
        boolean $z0;

        r0 := @this: com.android.server.pm.dex.ArtManagerService$ArtManagerInternalImpl;

        r21 := @parameter0: android.content.pm.ApplicationInfo;

        r22 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

     label1:
        r23 = staticinvoke <dalvik.system.VMRuntime: java.lang.String getInstructionSet(java.lang.String)>(r22);

     label2:
        $r2 = virtualinvoke r21.<android.content.pm.ApplicationInfo: java.lang.String getBaseCodePath()>();

        r24 = staticinvoke <dalvik.system.DexFile: dalvik.system.DexFile$OptimizationInfo getDexFileOptimizationInfo(java.lang.String,java.lang.String)>($r2, r23);

        r25 = virtualinvoke r24.<dalvik.system.DexFile$OptimizationInfo: java.lang.String getStatus()>();

        r26 = virtualinvoke r24.<dalvik.system.DexFile$OptimizationInfo: java.lang.String getReason()>();

     label3:
        r27 = r25;

        goto label6;

     label4:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested optimization status for ");

        $r10 = virtualinvoke r21.<android.content.pm.ApplicationInfo: java.lang.String getBaseCodePath()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" due to an invalid abi ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $r14 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("ArtManagerInternalImpl", $r14, $r7);

        r27 = "error";

        r26 = "error";

        goto label6;

     label5:
        $r15 := @caughtexception;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not get optimizations status for ");

        $r18 = virtualinvoke r21.<android.content.pm.ApplicationInfo: java.lang.String getBaseCodePath()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ArtManagerInternalImpl", $r20, $r15);

        r27 = "error";

        r26 = "error";

     label6:
        r32 = r27;

        $r33 = r21.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $l4 = r21.<android.content.pm.ApplicationInfo: long longVersionCode>;

        $z0 = specialinvoke r0.<com.android.server.pm.dex.ArtManagerService$ArtManagerInternalImpl: boolean checkIorapCompiledTrace(java.lang.String,java.lang.String,long)>($r33, r1, $l4);

        if $z0 == 0 goto label7;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-iorap");

        r32 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label7:
        $r3 = new android.content.pm.dex.PackageOptimizationInfo;

        $i0 = staticinvoke <com.android.server.pm.dex.ArtManagerService: int access$100(java.lang.String)>(r32);

        $i1 = staticinvoke <com.android.server.pm.dex.ArtManagerService: int access$200(java.lang.String)>(r26);

        specialinvoke $r3.<android.content.pm.dex.PackageOptimizationInfo: void <init>(int,int)>($i0, $i1);

        return $r3;

        catch java.io.FileNotFoundException from label1 to label2 with label5;
        catch java.lang.IllegalArgumentException from label1 to label2 with label4;
        catch java.io.FileNotFoundException from label2 to label3 with label5;
        catch java.lang.IllegalArgumentException from label2 to label3 with label4;
    }

    public static void <clinit>()
    {
        <com.android.server.pm.dex.ArtManagerService$ArtManagerInternalImpl: java.lang.String TAG> = "ArtManagerInternalImpl";

        <com.android.server.pm.dex.ArtManagerService$ArtManagerInternalImpl: java.lang.String IORAP_DIR> = "/data/misc/iorapd";

        return;
    }
}
