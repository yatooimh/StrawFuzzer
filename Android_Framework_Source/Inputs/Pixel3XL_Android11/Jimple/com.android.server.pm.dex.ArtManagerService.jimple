public class com.android.server.pm.dex.ArtManagerService extends android.content.pm.dex.IArtManager$Stub
{
    private static final java.lang.String BOOT_IMAGE_ANDROID_PACKAGE;
    private static final java.lang.String BOOT_IMAGE_PROFILE_NAME;
    private static final boolean DEBUG;
    public static final java.lang.String DEXOPT_REASON_WITH_DEX_METADATA_ANNOTATION;
    private static final java.lang.String TAG;
    private static final int TRON_COMPILATION_FILTER_ASSUMED_VERIFIED;
    private static final int TRON_COMPILATION_FILTER_ASSUMED_VERIFIED_IORAP;
    private static final int TRON_COMPILATION_FILTER_ERROR;
    private static final int TRON_COMPILATION_FILTER_EVERYTHING;
    private static final int TRON_COMPILATION_FILTER_EVERYTHING_IORAP;
    private static final int TRON_COMPILATION_FILTER_EVERYTHING_PROFILE;
    private static final int TRON_COMPILATION_FILTER_EVERYTHING_PROFILE_IORAP;
    private static final int TRON_COMPILATION_FILTER_EXTRACT;
    private static final int TRON_COMPILATION_FILTER_EXTRACT_IORAP;
    private static final int TRON_COMPILATION_FILTER_FAKE_RUN_FROM_APK;
    private static final int TRON_COMPILATION_FILTER_FAKE_RUN_FROM_APK_FALLBACK;
    private static final int TRON_COMPILATION_FILTER_FAKE_RUN_FROM_APK_FALLBACK_IORAP;
    private static final int TRON_COMPILATION_FILTER_FAKE_RUN_FROM_APK_IORAP;
    private static final int TRON_COMPILATION_FILTER_FAKE_RUN_FROM_VDEX_FALLBACK;
    private static final int TRON_COMPILATION_FILTER_FAKE_RUN_FROM_VDEX_FALLBACK_IORAP;
    private static final int TRON_COMPILATION_FILTER_QUICKEN;
    private static final int TRON_COMPILATION_FILTER_QUICKEN_IORAP;
    private static final int TRON_COMPILATION_FILTER_SPACE;
    private static final int TRON_COMPILATION_FILTER_SPACE_IORAP;
    private static final int TRON_COMPILATION_FILTER_SPACE_PROFILE;
    private static final int TRON_COMPILATION_FILTER_SPACE_PROFILE_IORAP;
    private static final int TRON_COMPILATION_FILTER_SPEED;
    private static final int TRON_COMPILATION_FILTER_SPEED_IORAP;
    private static final int TRON_COMPILATION_FILTER_SPEED_PROFILE;
    private static final int TRON_COMPILATION_FILTER_SPEED_PROFILE_IORAP;
    private static final int TRON_COMPILATION_FILTER_UNKNOWN;
    private static final int TRON_COMPILATION_FILTER_VERIFY;
    private static final int TRON_COMPILATION_FILTER_VERIFY_IORAP;
    private static final int TRON_COMPILATION_REASON_AB_OTA;
    private static final int TRON_COMPILATION_REASON_BG_DEXOPT;
    private static final int TRON_COMPILATION_REASON_BOOT;
    private static final int TRON_COMPILATION_REASON_ERROR;
    private static final int TRON_COMPILATION_REASON_FIRST_BOOT;
    private static final int TRON_COMPILATION_REASON_INACTIVE;
    private static final int TRON_COMPILATION_REASON_INSTALL;
    private static final int TRON_COMPILATION_REASON_INSTALL_WITH_DEX_METADATA;
    private static final int TRON_COMPILATION_REASON_SHARED;
    private static final int TRON_COMPILATION_REASON_UNKNOWN;
    private final android.content.Context mContext;
    private final android.os.Handler mHandler;
    private final java.lang.Object mInstallLock;
    private final com.android.server.pm.Installer mInstaller;
    private final android.content.pm.IPackageManager mPackageManager;

    static void <clinit>()
    {
        boolean $z0;

        <com.android.server.pm.dex.ArtManagerService: int TRON_COMPILATION_REASON_UNKNOWN> = 1;

        <com.android.server.pm.dex.ArtManagerService: int TRON_COMPILATION_REASON_SHARED> = 8;

        <com.android.server.pm.dex.ArtManagerService: int TRON_COMPILATION_REASON_INSTALL_WITH_DEX_METADATA> = 9;

        <com.android.server.pm.dex.ArtManagerService: int TRON_COMPILATION_REASON_INSTALL> = 4;

        <com.android.server.pm.dex.ArtManagerService: int TRON_COMPILATION_REASON_INACTIVE> = 7;

        <com.android.server.pm.dex.ArtManagerService: int TRON_COMPILATION_REASON_FIRST_BOOT> = 2;

        <com.android.server.pm.dex.ArtManagerService: int TRON_COMPILATION_REASON_ERROR> = 0;

        <com.android.server.pm.dex.ArtManagerService: int TRON_COMPILATION_REASON_BOOT> = 3;

        <com.android.server.pm.dex.ArtManagerService: int TRON_COMPILATION_REASON_BG_DEXOPT> = 5;

        <com.android.server.pm.dex.ArtManagerService: int TRON_COMPILATION_REASON_AB_OTA> = 6;

        <com.android.server.pm.dex.ArtManagerService: int TRON_COMPILATION_FILTER_VERIFY_IORAP> = 17;

        <com.android.server.pm.dex.ArtManagerService: int TRON_COMPILATION_FILTER_VERIFY> = 4;

        <com.android.server.pm.dex.ArtManagerService: int TRON_COMPILATION_FILTER_UNKNOWN> = 1;

        <com.android.server.pm.dex.ArtManagerService: int TRON_COMPILATION_FILTER_SPEED_PROFILE_IORAP> = 21;

        <com.android.server.pm.dex.ArtManagerService: int TRON_COMPILATION_FILTER_SPEED_PROFILE> = 8;

        <com.android.server.pm.dex.ArtManagerService: int TRON_COMPILATION_FILTER_SPEED_IORAP> = 22;

        <com.android.server.pm.dex.ArtManagerService: int TRON_COMPILATION_FILTER_SPEED> = 9;

        <com.android.server.pm.dex.ArtManagerService: int TRON_COMPILATION_FILTER_SPACE_PROFILE_IORAP> = 19;

        <com.android.server.pm.dex.ArtManagerService: int TRON_COMPILATION_FILTER_SPACE_PROFILE> = 6;

        <com.android.server.pm.dex.ArtManagerService: int TRON_COMPILATION_FILTER_SPACE_IORAP> = 20;

        <com.android.server.pm.dex.ArtManagerService: int TRON_COMPILATION_FILTER_SPACE> = 7;

        <com.android.server.pm.dex.ArtManagerService: int TRON_COMPILATION_FILTER_QUICKEN_IORAP> = 18;

        <com.android.server.pm.dex.ArtManagerService: int TRON_COMPILATION_FILTER_QUICKEN> = 5;

        <com.android.server.pm.dex.ArtManagerService: int TRON_COMPILATION_FILTER_FAKE_RUN_FROM_VDEX_FALLBACK_IORAP> = 27;

        <com.android.server.pm.dex.ArtManagerService: int TRON_COMPILATION_FILTER_FAKE_RUN_FROM_VDEX_FALLBACK> = 14;

        <com.android.server.pm.dex.ArtManagerService: int TRON_COMPILATION_FILTER_FAKE_RUN_FROM_APK_IORAP> = 25;

        <com.android.server.pm.dex.ArtManagerService: int TRON_COMPILATION_FILTER_FAKE_RUN_FROM_APK_FALLBACK_IORAP> = 26;

        <com.android.server.pm.dex.ArtManagerService: int TRON_COMPILATION_FILTER_FAKE_RUN_FROM_APK_FALLBACK> = 13;

        <com.android.server.pm.dex.ArtManagerService: int TRON_COMPILATION_FILTER_FAKE_RUN_FROM_APK> = 12;

        <com.android.server.pm.dex.ArtManagerService: int TRON_COMPILATION_FILTER_EXTRACT_IORAP> = 16;

        <com.android.server.pm.dex.ArtManagerService: int TRON_COMPILATION_FILTER_EXTRACT> = 3;

        <com.android.server.pm.dex.ArtManagerService: int TRON_COMPILATION_FILTER_EVERYTHING_PROFILE_IORAP> = 23;

        <com.android.server.pm.dex.ArtManagerService: int TRON_COMPILATION_FILTER_EVERYTHING_PROFILE> = 10;

        <com.android.server.pm.dex.ArtManagerService: int TRON_COMPILATION_FILTER_EVERYTHING_IORAP> = 24;

        <com.android.server.pm.dex.ArtManagerService: int TRON_COMPILATION_FILTER_EVERYTHING> = 11;

        <com.android.server.pm.dex.ArtManagerService: int TRON_COMPILATION_FILTER_ERROR> = 0;

        <com.android.server.pm.dex.ArtManagerService: int TRON_COMPILATION_FILTER_ASSUMED_VERIFIED_IORAP> = 15;

        <com.android.server.pm.dex.ArtManagerService: int TRON_COMPILATION_FILTER_ASSUMED_VERIFIED> = 2;

        <com.android.server.pm.dex.ArtManagerService: java.lang.String TAG> = "ArtManagerService";

        <com.android.server.pm.dex.ArtManagerService: java.lang.String DEXOPT_REASON_WITH_DEX_METADATA_ANNOTATION> = "-dm";

        <com.android.server.pm.dex.ArtManagerService: java.lang.String BOOT_IMAGE_PROFILE_NAME> = "android.prof";

        <com.android.server.pm.dex.ArtManagerService: java.lang.String BOOT_IMAGE_ANDROID_PACKAGE> = "android";

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("ArtManagerService", 3);

        <com.android.server.pm.dex.ArtManagerService: boolean DEBUG> = $z0;

        staticinvoke <com.android.server.pm.dex.ArtManagerService: void verifyTronLoggingConstants()>();

        return;
    }

    public void <init>(android.content.Context, android.content.pm.IPackageManager, com.android.server.pm.Installer, java.lang.Object)
    {
        com.android.server.pm.dex.ArtManagerService r0;
        android.content.Context r1;
        android.content.pm.IPackageManager r2;
        com.android.server.pm.Installer r3;
        java.lang.Object r4;
        android.os.Handler $r5, $r6;
        android.os.Looper $r7;
        com.android.server.pm.dex.ArtManagerService$ArtManagerInternalImpl $r8;

        r0 := @this: com.android.server.pm.dex.ArtManagerService;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.pm.IPackageManager;

        r3 := @parameter2: com.android.server.pm.Installer;

        r4 := @parameter3: java.lang.Object;

        specialinvoke r0.<android.content.pm.dex.IArtManager$Stub: void <init>()>();

        r0.<com.android.server.pm.dex.ArtManagerService: android.content.Context mContext> = r1;

        r0.<com.android.server.pm.dex.ArtManagerService: android.content.pm.IPackageManager mPackageManager> = r2;

        r0.<com.android.server.pm.dex.ArtManagerService: com.android.server.pm.Installer mInstaller> = r3;

        r0.<com.android.server.pm.dex.ArtManagerService: java.lang.Object mInstallLock> = r4;

        $r5 = new android.os.Handler;

        $r6 = staticinvoke <com.android.internal.os.BackgroundThread: android.os.Handler getHandler()>();

        $r7 = virtualinvoke $r6.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke $r5.<android.os.Handler: void <init>(android.os.Looper)>($r7);

        r0.<com.android.server.pm.dex.ArtManagerService: android.os.Handler mHandler> = $r5;

        $r8 = new com.android.server.pm.dex.ArtManagerService$ArtManagerInternalImpl;

        specialinvoke $r8.<com.android.server.pm.dex.ArtManagerService$ArtManagerInternalImpl: void <init>(com.android.server.pm.dex.ArtManagerService,com.android.server.pm.dex.ArtManagerService$1)>(r0, null);

        staticinvoke <com.android.server.LocalServices: void addService(java.lang.Class,java.lang.Object)>(class "Landroid/content/pm/dex/ArtManagerInternal;", $r8);

        return;
    }

    static int access$100(java.lang.String)
    {
        java.lang.String r0;
        int $i0;

        r0 := @parameter0: java.lang.String;

        $i0 = staticinvoke <com.android.server.pm.dex.ArtManagerService: int getCompilationFilterTronValue(java.lang.String)>(r0);

        return $i0;
    }

    static int access$200(java.lang.String)
    {
        java.lang.String r0;
        int $i0;

        r0 := @parameter0: java.lang.String;

        $i0 = staticinvoke <com.android.server.pm.dex.ArtManagerService: int getCompilationReasonTronValue(java.lang.String)>(r0);

        return $i0;
    }

    private boolean checkAndroidPermissions(int, java.lang.String)
    {
        com.android.server.pm.dex.ArtManagerService r0;
        java.lang.String r1;
        android.content.Context $r2, $r3, $r6;
        java.lang.Object $r4;
        android.app.AppOpsManager $r5;
        int i0, i1;

        r0 := @this: com.android.server.pm.dex.ArtManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<com.android.server.pm.dex.ArtManagerService: android.content.Context mContext>;

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.READ_RUNTIME_PROFILES", "ArtManagerService");

        $r3 = r0.<com.android.server.pm.dex.ArtManagerService: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/AppOpsManager;");

        $r5 = (android.app.AppOpsManager) $r4;

        i1 = virtualinvoke $r5.<android.app.AppOpsManager: int noteOp(int,int,java.lang.String)>(43, i0, r1);

        if i1 == 0 goto label2;

        if i1 == 3 goto label1;

        return 0;

     label1:
        $r6 = r0.<com.android.server.pm.dex.ArtManagerService: android.content.Context mContext>;

        virtualinvoke $r6.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.PACKAGE_USAGE_STATS", "ArtManagerService");

        return 1;

     label2:
        return 1;
    }

    private boolean checkShellPermissions(int, java.lang.String, int)
    {
        com.android.server.pm.dex.ArtManagerService r0;
        int i0, i1, $i2, $i3;
        boolean $z0, z1;
        android.content.pm.IPackageManager $r1;
        android.content.pm.ApplicationInfo $r2;
        android.os.RemoteException $r3;
        java.lang.String r4;
        android.content.pm.PackageInfo r5;

        r0 := @this: com.android.server.pm.dex.ArtManagerService;

        i0 := @parameter0: int;

        r4 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        z1 = 0;

        if i1 == 2000 goto label1;

        return 0;

     label1:
        $z0 = <com.android.internal.os.RoSystemProperties: boolean DEBUGGABLE>;

        if $z0 == 0 goto label2;

        return 1;

     label2:
        if i0 != 1 goto label3;

        return 0;

     label3:
        $r1 = r0.<com.android.server.pm.dex.ArtManagerService: android.content.pm.IPackageManager mPackageManager>;

        r5 = interfaceinvoke $r1.<android.content.pm.IPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>(r4, 0, 0);

     label4:
        goto label6;

     label5:
        $r3 := @caughtexception;

        r5 = null;

     label6:
        if r5 != null goto label7;

        return 0;

     label7:
        $r2 = r5.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r2.<android.content.pm.ApplicationInfo: int flags>;

        $i3 = $i2 & 2;

        if $i3 != 2 goto label8;

        z1 = 1;

     label8:
        return z1;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    private void createProfileSnapshot(java.lang.String, java.lang.String, java.lang.String, int, android.content.pm.dex.ISnapshotRuntimeProfileCallback)
    {
        com.android.server.pm.dex.ArtManagerService r0;
        int i0;
        android.content.pm.dex.ISnapshotRuntimeProfileCallback r1;
        com.android.server.pm.Installer $r2;
        boolean $z0, $z1;
        java.io.FileDescriptor $r3;
        java.lang.Throwable $r4, $r6;
        com.android.server.pm.Installer$InstallerException $r5;
        java.lang.StringBuilder $r7;
        java.lang.String $r12, r13, r14, r15;
        java.lang.Object r16;
        java.io.File r17;
        android.os.ParcelFileDescriptor r18;

        r0 := @this: com.android.server.pm.dex.ArtManagerService;

        r13 := @parameter0: java.lang.String;

        r14 := @parameter1: java.lang.String;

        r15 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r1 := @parameter4: android.content.pm.dex.ISnapshotRuntimeProfileCallback;

        r16 = r0.<com.android.server.pm.dex.ArtManagerService: java.lang.Object mInstallLock>;

        entermonitor r16;

     label01:
        $r2 = r0.<com.android.server.pm.dex.ArtManagerService: com.android.server.pm.Installer mInstaller>;

        $z0 = virtualinvoke $r2.<com.android.server.pm.Installer: boolean createProfileSnapshot(int,java.lang.String,java.lang.String,java.lang.String)>(i0, r13, r14, r15);

        if $z0 != 0 goto label04;

        specialinvoke r0.<com.android.server.pm.dex.ArtManagerService: void postError(android.content.pm.dex.ISnapshotRuntimeProfileCallback,java.lang.String,int)>(r1, r13, 2);

     label02:
        exitmonitor r16;

     label03:
        return;

     label04:
        exitmonitor r16;

     label05:
        r17 = staticinvoke <android.content.pm.dex.ArtManager: java.io.File getProfileSnapshotFileForName(java.lang.String,java.lang.String)>(r13, r14);

     label06:
        r18 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>(r17, 268435456);

     label07:
        if r18 == null goto label12;

     label08:
        $r3 = virtualinvoke r18.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $z1 = virtualinvoke $r3.<java.io.FileDescriptor: boolean valid()>();

        if $z1 != 0 goto label10;

     label09:
        goto label12;

     label10:
        specialinvoke r0.<com.android.server.pm.dex.ArtManagerService: void postSuccess(java.lang.String,android.os.ParcelFileDescriptor,android.content.pm.dex.ISnapshotRuntimeProfileCallback)>(r13, r18, r1);

     label11:
        goto label13;

     label12:
        specialinvoke r0.<com.android.server.pm.dex.ArtManagerService: void postError(android.content.pm.dex.ISnapshotRuntimeProfileCallback,java.lang.String,int)>(r1, r13, 2);

     label13:
        goto label15;

     label14:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not open snapshot profile for ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);

        $r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ArtManagerService", $r12, $r6);

        specialinvoke r0.<com.android.server.pm.dex.ArtManagerService: void postError(android.content.pm.dex.ISnapshotRuntimeProfileCallback,java.lang.String,int)>(r1, r13, 2);

     label15:
        return;

     label16:
        $r4 := @caughtexception;

        goto label20;

     label17:
        $r5 := @caughtexception;

     label18:
        specialinvoke r0.<com.android.server.pm.dex.ArtManagerService: void postError(android.content.pm.dex.ISnapshotRuntimeProfileCallback,java.lang.String,int)>(r1, r13, 2);

        exitmonitor r16;

     label19:
        return;

     label20:
        exitmonitor r16;

     label21:
        throw $r4;

        catch com.android.server.pm.Installer$InstallerException from label01 to label02 with label17;
        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label02 to label03 with label16;
        catch java.lang.Throwable from label04 to label05 with label16;
        catch java.io.FileNotFoundException from label06 to label07 with label14;
        catch java.io.FileNotFoundException from label08 to label09 with label14;
        catch java.io.FileNotFoundException from label10 to label11 with label14;
        catch java.io.FileNotFoundException from label12 to label13 with label14;
        catch java.lang.Throwable from label18 to label19 with label16;
        catch java.lang.Throwable from label20 to label21 with label16;
    }

    private void destroyProfileSnapshot(java.lang.String, java.lang.String)
    {
        com.android.server.pm.dex.ArtManagerService r0;
        java.lang.String r1, $r10, $r17, r18;
        java.lang.StringBuilder r3, $r5;
        boolean $z0;
        com.android.server.pm.Installer $r4;
        java.lang.Throwable $r11;
        com.android.server.pm.Installer$InstallerException $r12;
        java.lang.Object r20;

        r0 := @this: com.android.server.pm.dex.ArtManagerService;

        r18 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $z0 = <com.android.server.pm.dex.ArtManagerService: boolean DEBUG>;

        if $z0 == 0 goto label01;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Destroying profile snapshot for");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ArtManagerService", $r10);

     label01:
        r20 = r0.<com.android.server.pm.dex.ArtManagerService: java.lang.Object mInstallLock>;

        entermonitor r20;

     label02:
        $r4 = r0.<com.android.server.pm.dex.ArtManagerService: com.android.server.pm.Installer mInstaller>;

        virtualinvoke $r4.<com.android.server.pm.Installer: void destroyProfileSnapshot(java.lang.String,java.lang.String)>(r18, r1);

     label03:
        goto label07;

     label04:
        $r11 := @caughtexception;

        goto label09;

     label05:
        $r12 := @caughtexception;

     label06:
        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to destroy profile snapshot for ");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ArtManagerService", $r17, $r12);

     label07:
        exitmonitor r20;

     label08:
        return;

     label09:
        exitmonitor r20;

     label10:
        throw $r11;

        catch com.android.server.pm.Installer$InstallerException from label02 to label03 with label05;
        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label06 to label07 with label04;
        catch java.lang.Throwable from label07 to label08 with label04;
        catch java.lang.Throwable from label09 to label10 with label04;
    }

    private static int getCompilationFilterTronValue(java.lang.String)
    {
        java.lang.String r0;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27;
        byte b1;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -2111392495: goto label29;
            case -1957514039: goto label28;
            case -1803365233: goto label27;
            case -1707970841: goto label26;
            case -1704485649: goto label25;
            case -1305289599: goto label24;
            case -1129892317: goto label23;
            case -1079751646: goto label22;
            case -902315795: goto label21;
            case -819951495: goto label20;
            case -701043824: goto label19;
            case -284840886: goto label18;
            case -44924837: goto label17;
            case 50732855: goto label16;
            case 96784904: goto label15;
            case 109637894: goto label14;
            case 109641799: goto label13;
            case 256996201: goto label12;
            case 348518370: goto label11;
            case 401590963: goto label10;
            case 590454177: goto label09;
            case 658336598: goto label08;
            case 863294077: goto label07;
            case 922064507: goto label06;
            case 979981365: goto label05;
            case 1316714932: goto label04;
            case 1482618884: goto label03;
            case 1906552308: goto label02;
            default: goto label01;
        };

     label01:
        goto label30;

     label02:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("run-from-apk-fallback");

        if $z0 == 0 goto label01;

        b1 = 13;

        goto label31;

     label03:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("quicken-iorap");

        if $z1 == 0 goto label01;

        b1 = 18;

        goto label31;

     label04:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("space-iorap");

        if $z2 == 0 goto label01;

        b1 = 20;

        goto label31;

     label05:
        $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("speed-iorap");

        if $z3 == 0 goto label01;

        b1 = 22;

        goto label31;

     label06:
        $z4 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("run-from-apk");

        if $z4 == 0 goto label01;

        b1 = 12;

        goto label31;

     label07:
        $z5 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("everything-profile-iorap");

        if $z5 == 0 goto label01;

        b1 = 23;

        goto label31;

     label08:
        $z6 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("quicken");

        if $z6 == 0 goto label01;

        b1 = 5;

        goto label31;

     label09:
        $z7 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("everything-iorap");

        if $z7 == 0 goto label01;

        b1 = 24;

        goto label31;

     label10:
        $z8 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("everything");

        if $z8 == 0 goto label01;

        b1 = 11;

        goto label31;

     label11:
        $z9 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("space-profile");

        if $z9 == 0 goto label01;

        b1 = 6;

        goto label31;

     label12:
        $z10 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("run-from-apk-iorap");

        if $z10 == 0 goto label01;

        b1 = 25;

        goto label31;

     label13:
        $z11 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("speed");

        if $z11 == 0 goto label01;

        b1 = 9;

        goto label31;

     label14:
        $z12 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("space");

        if $z12 == 0 goto label01;

        b1 = 7;

        goto label31;

     label15:
        $z13 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("error");

        if $z13 == 0 goto label01;

        b1 = 0;

        goto label31;

     label16:
        $z14 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("assume-verified-iorap");

        if $z14 == 0 goto label01;

        b1 = 15;

        goto label31;

     label17:
        $z15 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("run-from-vdex-fallback-iorap");

        if $z15 == 0 goto label01;

        b1 = 27;

        goto label31;

     label18:
        $z16 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("unknown");

        if $z16 == 0 goto label01;

        b1 = 1;

        goto label31;

     label19:
        $z17 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("space-profile-iorap");

        if $z17 == 0 goto label01;

        b1 = 19;

        goto label31;

     label20:
        $z18 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("verify");

        if $z18 == 0 goto label01;

        b1 = 4;

        goto label31;

     label21:
        $z19 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("run-from-vdex-fallback");

        if $z19 == 0 goto label01;

        b1 = 14;

        goto label31;

     label22:
        $z20 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("run-from-apk-fallback-iorap");

        if $z20 == 0 goto label01;

        b1 = 26;

        goto label31;

     label23:
        $z21 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("speed-profile");

        if $z21 == 0 goto label01;

        b1 = 8;

        goto label31;

     label24:
        $z22 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("extract");

        if $z22 == 0 goto label01;

        b1 = 3;

        goto label31;

     label25:
        $z23 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("extract-iorap");

        if $z23 == 0 goto label01;

        b1 = 16;

        goto label31;

     label26:
        $z24 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("verify-iorap");

        if $z24 == 0 goto label01;

        b1 = 17;

        goto label31;

     label27:
        $z25 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("everything-profile");

        if $z25 == 0 goto label01;

        b1 = 10;

        goto label31;

     label28:
        $z26 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("assume-verified");

        if $z26 == 0 goto label01;

        b1 = 2;

        goto label31;

     label29:
        $z27 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("speed-profile-iorap");

        if $z27 == 0 goto label01;

        b1 = 21;

        goto label31;

     label30:
        b1 = -1;

     label31:
        if b1 == 0 goto label59;

        tableswitch(b1)
        {
            case 2: goto label58;
            case 3: goto label57;
            case 4: goto label56;
            case 5: goto label55;
            case 6: goto label54;
            case 7: goto label53;
            case 8: goto label52;
            case 9: goto label51;
            case 10: goto label50;
            case 11: goto label49;
            case 12: goto label48;
            case 13: goto label47;
            case 14: goto label46;
            case 15: goto label45;
            case 16: goto label44;
            case 17: goto label43;
            case 18: goto label42;
            case 19: goto label41;
            case 20: goto label40;
            case 21: goto label39;
            case 22: goto label38;
            case 23: goto label37;
            case 24: goto label36;
            case 25: goto label35;
            case 26: goto label34;
            case 27: goto label33;
            default: goto label32;
        };

     label32:
        return 1;

     label33:
        return 27;

     label34:
        return 26;

     label35:
        return 25;

     label36:
        return 24;

     label37:
        return 23;

     label38:
        return 22;

     label39:
        return 21;

     label40:
        return 20;

     label41:
        return 19;

     label42:
        return 18;

     label43:
        return 17;

     label44:
        return 16;

     label45:
        return 15;

     label46:
        return 14;

     label47:
        return 13;

     label48:
        return 12;

     label49:
        return 11;

     label50:
        return 10;

     label51:
        return 9;

     label52:
        return 8;

     label53:
        return 7;

     label54:
        return 6;

     label55:
        return 5;

     label56:
        return 4;

     label57:
        return 3;

     label58:
        return 2;

     label59:
        return 0;
    }

    private static int getCompilationReasonTronValue(java.lang.String)
    {
        java.lang.String r0;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        byte b1;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1968171580: goto label11;
            case -1425983632: goto label10;
            case -903566235: goto label09;
            case -284840886: goto label08;
            case -207505425: goto label07;
            case 3029746: goto label06;
            case 24665195: goto label05;
            case 96784904: goto label04;
            case 900392443: goto label03;
            case 1957569947: goto label02;
            default: goto label01;
        };

     label01:
        goto label12;

     label02:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("install");

        if $z0 == 0 goto label01;

        b1 = 4;

        goto label13;

     label03:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("install-dm");

        if $z1 == 0 goto label01;

        b1 = 9;

        goto label13;

     label04:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("error");

        if $z2 == 0 goto label01;

        b1 = 1;

        goto label13;

     label05:
        $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("inactive");

        if $z3 == 0 goto label01;

        b1 = 7;

        goto label13;

     label06:
        $z4 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("boot");

        if $z4 == 0 goto label01;

        b1 = 3;

        goto label13;

     label07:
        $z5 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("first-boot");

        if $z5 == 0 goto label01;

        b1 = 2;

        goto label13;

     label08:
        $z6 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("unknown");

        if $z6 == 0 goto label01;

        b1 = 0;

        goto label13;

     label09:
        $z7 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("shared");

        if $z7 == 0 goto label01;

        b1 = 8;

        goto label13;

     label10:
        $z8 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("ab-ota");

        if $z8 == 0 goto label01;

        b1 = 6;

        goto label13;

     label11:
        $z9 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("bg-dexopt");

        if $z9 == 0 goto label01;

        b1 = 5;

        goto label13;

     label12:
        b1 = -1;

     label13:
        tableswitch(b1)
        {
            case 1: goto label23;
            case 2: goto label22;
            case 3: goto label21;
            case 4: goto label20;
            case 5: goto label19;
            case 6: goto label18;
            case 7: goto label17;
            case 8: goto label16;
            case 9: goto label15;
            default: goto label14;
        };

     label14:
        return 1;

     label15:
        return 9;

     label16:
        return 8;

     label17:
        return 7;

     label18:
        return 6;

     label19:
        return 5;

     label20:
        return 4;

     label21:
        return 3;

     label22:
        return 2;

     label23:
        return 0;
    }

    private android.util.ArrayMap getPackageProfileNames(com.android.server.pm.parsing.pkg.AndroidPackage)
    {
        com.android.server.pm.dex.ArtManagerService r0;
        java.lang.String[] r2, r13;
        int[] r3;
        android.util.ArrayMap $r4;
        boolean $z0, $z1;
        int $i0, $i1, $i2, i3;
        java.lang.String $r5, $r6, $r7, $r9, $r10;
        com.android.server.pm.parsing.pkg.AndroidPackage r12;

        r0 := @this: com.android.server.pm.dex.ArtManagerService;

        r12 := @parameter0: com.android.server.pm.parsing.pkg.AndroidPackage;

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        $z0 = interfaceinvoke r12.<com.android.server.pm.parsing.pkg.AndroidPackage: boolean isHasCode()>();

        if $z0 == 0 goto label1;

        $r9 = interfaceinvoke r12.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getBaseCodePath()>();

        $r10 = staticinvoke <android.content.pm.dex.ArtManager: java.lang.String getProfileName(java.lang.String)>(null);

        virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r10);

     label1:
        r2 = interfaceinvoke r12.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String[] getSplitCodePaths()>();

        r3 = interfaceinvoke r12.<com.android.server.pm.parsing.pkg.AndroidPackage: int[] getSplitFlags()>();

        r13 = interfaceinvoke r12.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String[] getSplitNames()>();

        $z1 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r2);

        if $z1 != 0 goto label4;

        i3 = 0;

     label2:
        $i0 = lengthof r2;

        if i3 >= $i0 goto label4;

        $i1 = r3[i3];

        $i2 = $i1 & 4;

        if $i2 == 0 goto label3;

        $r6 = r2[i3];

        $r5 = r13[i3];

        $r7 = staticinvoke <android.content.pm.dex.ArtManager: java.lang.String getProfileName(java.lang.String)>($r5);

        virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        return $r4;
    }

    static void lambda$postError$0(android.content.pm.dex.ISnapshotRuntimeProfileCallback, int, java.lang.String)
    {
        int i0;
        java.lang.String r0, $r6;
        java.lang.Exception $r2;
        java.lang.StringBuilder $r3;
        android.content.pm.dex.ISnapshotRuntimeProfileCallback r7;

        r7 := @parameter0: android.content.pm.dex.ISnapshotRuntimeProfileCallback;

        i0 := @parameter1: int;

        r0 := @parameter2: java.lang.String;

     label1:
        interfaceinvoke r7.<android.content.pm.dex.ISnapshotRuntimeProfileCallback: void onError(int)>(i0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to callback after profile snapshot for ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ArtManagerService", $r6, $r2);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    static void lambda$postSuccess$1(android.os.ParcelFileDescriptor, android.content.pm.dex.ISnapshotRuntimeProfileCallback, java.lang.String)
    {
        android.os.ParcelFileDescriptor r0;
        java.lang.String r1, $r5, $r9;
        java.io.FileDescriptor $r2;
        boolean $z0;
        java.lang.Exception $r6;
        java.lang.Throwable $r10;
        android.content.pm.dex.ISnapshotRuntimeProfileCallback r11;
        java.lang.StringBuilder r12, r15;

        r0 := @parameter0: android.os.ParcelFileDescriptor;

        r11 := @parameter1: android.content.pm.dex.ISnapshotRuntimeProfileCallback;

        r1 := @parameter2: java.lang.String;

     label01:
        $r2 = virtualinvoke r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $z0 = virtualinvoke $r2.<java.io.FileDescriptor: boolean valid()>();

        if $z0 == 0 goto label03;

        interfaceinvoke r11.<android.content.pm.dex.ISnapshotRuntimeProfileCallback: void onSuccess(android.os.ParcelFileDescriptor)>(r0);

     label02:
        goto label04;

     label03:
        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The snapshot FD became invalid before posting the result for ");

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ArtManagerService", $r5);

        interfaceinvoke r11.<android.content.pm.dex.ISnapshotRuntimeProfileCallback: void onError(int)>(2);

     label04:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r0);

        goto label09;

     label05:
        $r10 := @caughtexception;

        goto label10;

     label06:
        $r6 := @caughtexception;

     label07:
        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to call onSuccess after profile snapshot for ");

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ArtManagerService", $r9, $r6);

     label08:
        goto label04;

     label09:
        return;

     label10:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r0);

        throw $r10;

        catch java.lang.Exception from label01 to label02 with label06;
        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Exception from label03 to label04 with label06;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label07 to label08 with label05;
    }

    private void postError(android.content.pm.dex.ISnapshotRuntimeProfileCallback, java.lang.String, int)
    {
        com.android.server.pm.dex.ArtManagerService r0;
        android.content.pm.dex.ISnapshotRuntimeProfileCallback r1;
        java.lang.String r2, $r11;
        int i0;
        boolean $z0;
        com.android.server.pm.dex._$$Lambda$ArtManagerService$_rD0Y6OPSJHMdjTIOtucoGQ1xag $r4;
        android.os.Handler $r5;
        java.lang.StringBuilder $r6;

        r0 := @this: com.android.server.pm.dex.ArtManagerService;

        r1 := @parameter0: android.content.pm.dex.ISnapshotRuntimeProfileCallback;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $z0 = <com.android.server.pm.dex.ArtManagerService: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to snapshot profile for ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with error: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ArtManagerService", $r11);

     label1:
        $r5 = r0.<com.android.server.pm.dex.ArtManagerService: android.os.Handler mHandler>;

        $r4 = new com.android.server.pm.dex._$$Lambda$ArtManagerService$_rD0Y6OPSJHMdjTIOtucoGQ1xag;

        specialinvoke $r4.<com.android.server.pm.dex._$$Lambda$ArtManagerService$_rD0Y6OPSJHMdjTIOtucoGQ1xag: void <init>(android.content.pm.dex.ISnapshotRuntimeProfileCallback,int,java.lang.String)>(r1, i0, r2);

        virtualinvoke $r5.<android.os.Handler: boolean post(java.lang.Runnable)>($r4);

        return;
    }

    private void postSuccess(java.lang.String, android.os.ParcelFileDescriptor, android.content.pm.dex.ISnapshotRuntimeProfileCallback)
    {
        com.android.server.pm.dex.ArtManagerService r0;
        java.lang.String r1, $r10;
        android.os.ParcelFileDescriptor r2;
        android.content.pm.dex.ISnapshotRuntimeProfileCallback r3;
        boolean $z0;
        com.android.server.pm.dex._$$Lambda$ArtManagerService$MEVzU_orlv4msZVF_bA5NLti04g $r5;
        android.os.Handler $r6;
        java.lang.StringBuilder $r7;

        r0 := @this: com.android.server.pm.dex.ArtManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.ParcelFileDescriptor;

        r3 := @parameter2: android.content.pm.dex.ISnapshotRuntimeProfileCallback;

        $z0 = <com.android.server.pm.dex.ArtManagerService: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Successfully snapshot profile for ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ArtManagerService", $r10);

     label1:
        $r6 = r0.<com.android.server.pm.dex.ArtManagerService: android.os.Handler mHandler>;

        $r5 = new com.android.server.pm.dex._$$Lambda$ArtManagerService$MEVzU_orlv4msZVF_bA5NLti04g;

        specialinvoke $r5.<com.android.server.pm.dex._$$Lambda$ArtManagerService$MEVzU_orlv4msZVF_bA5NLti04g: void <init>(android.os.ParcelFileDescriptor,android.content.pm.dex.ISnapshotRuntimeProfileCallback,java.lang.String)>(r2, r3, r1);

        virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r5);

        return;
    }

    private void snapshotAppProfile(java.lang.String, java.lang.String, android.content.pm.dex.ISnapshotRuntimeProfileCallback)
    {
        com.android.server.pm.dex.ArtManagerService r0;
        java.lang.String r1, $r6, $r9, $r10, $r12, $r13, r17, r20;
        android.content.pm.dex.ISnapshotRuntimeProfileCallback r2;
        boolean z0, $z1, z2;
        java.lang.String[] r3, $r15;
        android.content.pm.IPackageManager $r4;
        android.content.pm.ApplicationInfo $r5, $r7, $r8, $r14;
        int $i0, $i1, i2, i3;
        java.lang.StringBuilder $r11;
        android.os.RemoteException $r16;
        android.content.pm.PackageInfo r18, r19;

        r0 := @this: com.android.server.pm.dex.ArtManagerService;

        r1 := @parameter0: java.lang.String;

        r17 := @parameter1: java.lang.String;

        r2 := @parameter2: android.content.pm.dex.ISnapshotRuntimeProfileCallback;

        r18 = null;

     label01:
        $r4 = r0.<com.android.server.pm.dex.ArtManagerService: android.content.pm.IPackageManager mPackageManager>;

        r19 = interfaceinvoke $r4.<android.content.pm.IPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>(r1, 0, 0);

     label02:
        r18 = r19;

        goto label04;

     label03:
        $r16 := @caughtexception;

     label04:
        if r18 != null goto label05;

        specialinvoke r0.<com.android.server.pm.dex.ArtManagerService: void postError(android.content.pm.dex.ISnapshotRuntimeProfileCallback,java.lang.String,int)>(r2, r1, 0);

        return;

     label05:
        $r5 = r18.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r6 = virtualinvoke $r5.<android.content.pm.ApplicationInfo: java.lang.String getBaseCodePath()>();

        z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r17);

        $r7 = r18.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r3 = virtualinvoke $r7.<android.content.pm.ApplicationInfo: java.lang.String[] getSplitCodePaths()>();

        z2 = z0;

        r20 = null;

        if z0 != 0 goto label08;

        z2 = z0;

        r20 = null;

        if r3 == null goto label08;

        $i1 = lengthof r3;

        i2 = $i1 - 1;

     label06:
        z2 = z0;

        r20 = null;

        if i2 < 0 goto label08;

        $r13 = r3[i2];

        $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r17);

        if $z1 == 0 goto label07;

        z2 = 1;

        $r14 = r18.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r15 = $r14.<android.content.pm.ApplicationInfo: java.lang.String[] splitNames>;

        r20 = $r15[i2];

        goto label08;

     label07:
        i2 = i2 + -1;

        goto label06;

     label08:
        if z2 != 0 goto label09;

        specialinvoke r0.<com.android.server.pm.dex.ArtManagerService: void postError(android.content.pm.dex.ISnapshotRuntimeProfileCallback,java.lang.String,int)>(r2, r1, 1);

        return;

     label09:
        $r8 = r18.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r8.<android.content.pm.ApplicationInfo: int uid>;

        i3 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i0);

        if i3 >= 0 goto label10;

        specialinvoke r0.<com.android.server.pm.dex.ArtManagerService: void postError(android.content.pm.dex.ISnapshotRuntimeProfileCallback,java.lang.String,int)>(r2, r1, 2);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AppId is -1 for package: ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ArtManagerService", $r12);

        return;

     label10:
        $r9 = staticinvoke <android.content.pm.dex.ArtManager: java.lang.String getProfileName(java.lang.String)>(r20);

        specialinvoke r0.<com.android.server.pm.dex.ArtManagerService: void createProfileSnapshot(java.lang.String,java.lang.String,java.lang.String,int,android.content.pm.dex.ISnapshotRuntimeProfileCallback)>(r1, $r9, r17, i3, r2);

        $r10 = staticinvoke <android.content.pm.dex.ArtManager: java.lang.String getProfileName(java.lang.String)>(r20);

        specialinvoke r0.<com.android.server.pm.dex.ArtManagerService: void destroyProfileSnapshot(java.lang.String,java.lang.String)>(r1, $r10);

        return;

        catch android.os.RemoteException from label01 to label02 with label03;
    }

    private void snapshotBootImageProfile(android.content.pm.dex.ISnapshotRuntimeProfileCallback)
    {
        com.android.server.pm.dex.ArtManagerService r0;
        android.content.pm.dex.ISnapshotRuntimeProfileCallback r1;
        java.lang.Object[] $r2;
        java.lang.String $r3, $r4, $r5;
        java.lang.CharSequence[] r6;

        r0 := @this: com.android.server.pm.dex.ArtManagerService;

        r1 := @parameter0: android.content.pm.dex.ISnapshotRuntimeProfileCallback;

        $r2 = newarray (java.lang.CharSequence)[2];

        $r3 = staticinvoke <android.system.Os: java.lang.String getenv(java.lang.String)>("BOOTCLASSPATH");

        $r2[0] = $r3;

        $r4 = staticinvoke <android.system.Os: java.lang.String getenv(java.lang.String)>("SYSTEMSERVERCLASSPATH");

        $r2[1] = $r4;

        r6 = (java.lang.CharSequence[]) $r2;

        $r5 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.CharSequence[])>(":", r6);

        specialinvoke r0.<com.android.server.pm.dex.ArtManagerService: void createProfileSnapshot(java.lang.String,java.lang.String,java.lang.String,int,android.content.pm.dex.ISnapshotRuntimeProfileCallback)>("android", "android.prof", $r5, -1, r1);

        specialinvoke r0.<com.android.server.pm.dex.ArtManagerService: void destroyProfileSnapshot(java.lang.String,java.lang.String)>("android", "android.prof");

        return;
    }

    private static void verifyTronLoggingConstants()
    {
        java.lang.String r0, $r8;
        int i0, $i1, i2;
        java.lang.String[] $r2, $r3;
        java.lang.StringBuilder $r4;
        java.lang.IllegalArgumentException $r7;

        i2 = 0;

     label1:
        $r2 = <com.android.server.pm.PackageManagerServiceCompilerMapping: java.lang.String[] REASON_STRINGS>;

        $i1 = lengthof $r2;

        if i2 >= $i1 goto label3;

        $r3 = <com.android.server.pm.PackageManagerServiceCompilerMapping: java.lang.String[] REASON_STRINGS>;

        r0 = $r3[i2];

        i0 = staticinvoke <com.android.server.pm.dex.ArtManagerService: int getCompilationReasonTronValue(java.lang.String)>(r0);

        if i0 == 0 goto label2;

        if i0 == 1 goto label2;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Compilation reason not configured for TRON logging: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label3:
        return;
    }

    public void clearAppProfiles(com.android.server.pm.parsing.pkg.AndroidPackage)
    {
        com.android.server.pm.dex.ArtManagerService r0;
        android.util.ArrayMap r1;
        java.lang.String r2, $r5, $r7;
        int $i0, i2;
        java.lang.Object $r3;
        com.android.server.pm.Installer $r4;
        com.android.server.pm.Installer$InstallerException $r6;
        com.android.server.pm.parsing.pkg.AndroidPackage r8;

        r0 := @this: com.android.server.pm.dex.ArtManagerService;

        r8 := @parameter0: com.android.server.pm.parsing.pkg.AndroidPackage;

     label1:
        r1 = specialinvoke r0.<com.android.server.pm.dex.ArtManagerService: android.util.ArrayMap getPackageProfileNames(com.android.server.pm.parsing.pkg.AndroidPackage)>(r8);

        $i0 = virtualinvoke r1.<android.util.ArrayMap: int size()>();

        i2 = $i0 - 1;

     label2:
        if i2 < 0 goto label5;

     label3:
        $r3 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i2);

        r2 = (java.lang.String) $r3;

        $r4 = r0.<com.android.server.pm.dex.ArtManagerService: com.android.server.pm.Installer mInstaller>;

        $r5 = interfaceinvoke r8.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getPackageName()>();

        virtualinvoke $r4.<com.android.server.pm.Installer: void clearAppProfiles(java.lang.String,java.lang.String)>($r5, r2);

     label4:
        i2 = i2 + -1;

        goto label2;

     label5:
        goto label7;

     label6:
        $r6 := @caughtexception;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ArtManagerService", $r7);

     label7:
        return;

        catch com.android.server.pm.Installer$InstallerException from label1 to label2 with label6;
        catch com.android.server.pm.Installer$InstallerException from label3 to label4 with label6;
    }

    public boolean compileLayouts(com.android.server.pm.parsing.pkg.AndroidPackage)
    {
        com.android.server.pm.dex.ArtManagerService r0;
        java.lang.String r1, r2, $r3, $r12, r20;
        long l0;
        boolean z0, $z1, $z2, $z3;
        int $i1, $i3;
        com.android.server.pm.Installer $r13;
        java.lang.Throwable $r14, $r15, $r16;
        com.android.server.pm.parsing.pkg.AndroidPackage r17;
        java.io.File r18;
        java.lang.StringBuilder r19, r21;
        java.lang.Object r22;

        r0 := @this: com.android.server.pm.dex.ArtManagerService;

        r17 := @parameter0: com.android.server.pm.parsing.pkg.AndroidPackage;

     label01:
        r1 = interfaceinvoke r17.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getPackageName()>();

        r2 = interfaceinvoke r17.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getBaseCodePath()>();

        $i1 = staticinvoke <android.os.UserHandle: int myUserId()>();

        r18 = staticinvoke <android.content.pm.parsing.PackageInfoWithoutStateUtils: java.io.File getDataDir(android.content.pm.parsing.ParsingPackageRead,int)>(r17, $i1);

        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r18.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/code_cache/compiled_view.dex");

        r20 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = interfaceinvoke r17.<com.android.server.pm.parsing.pkg.AndroidPackage: boolean isPrivileged()>();

        if $z1 != 0 goto label14;

        $z2 = interfaceinvoke r17.<com.android.server.pm.parsing.pkg.AndroidPackage: boolean isUseEmbeddedDex()>();

        if $z2 != 0 goto label14;

        $z3 = interfaceinvoke r17.<com.android.server.pm.parsing.pkg.AndroidPackage: boolean isDefaultToDeviceProtectedStorage()>();

        if $z3 == 0 goto label03;

     label02:
        goto label14;

     label03:
        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Compiling layouts in ");

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") to ");

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        $r12 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", $r12);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        r22 = r0.<com.android.server.pm.dex.ArtManagerService: java.lang.Object mInstallLock>;

        entermonitor r22;

     label05:
        $r13 = r0.<com.android.server.pm.dex.ArtManagerService: com.android.server.pm.Installer mInstaller>;

        $i3 = interfaceinvoke r17.<com.android.server.pm.parsing.pkg.AndroidPackage: int getUid()>();

        z0 = virtualinvoke $r13.<com.android.server.pm.Installer: boolean compileLayouts(java.lang.String,java.lang.String,java.lang.String,int)>(r2, r1, r20, $i3);

        exitmonitor r22;

     label06:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label07:
        return z0;

     label08:
        $r16 := @caughtexception;

     label09:
        exitmonitor r22;

     label10:
        throw $r16;

     label11:
        $r14 := @caughtexception;

     label12:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label13:
        throw $r14;

     label14:
        return 0;

     label15:
        $r15 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Failed to compile layouts", $r15);

        return 0;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public void dumpProfiles(com.android.server.pm.parsing.pkg.AndroidPackage)
    {
        com.android.server.pm.dex.ArtManagerService r0;
        int i0, $i1, $i2, i4;
        android.util.ArrayMap r1;
        java.lang.String r2, r3, $r8;
        java.lang.Object r4, $r5, $r6;
        com.android.server.pm.Installer $r7;
        com.android.server.pm.Installer$InstallerException $r9;
        java.lang.Throwable $r10;
        com.android.server.pm.parsing.pkg.AndroidPackage r11;

        r0 := @this: com.android.server.pm.dex.ArtManagerService;

        r11 := @parameter0: com.android.server.pm.parsing.pkg.AndroidPackage;

        $i1 = interfaceinvoke r11.<com.android.server.pm.parsing.pkg.AndroidPackage: int getUid()>();

        i0 = staticinvoke <android.os.UserHandle: int getSharedAppGid(int)>($i1);

     label01:
        r1 = specialinvoke r0.<com.android.server.pm.dex.ArtManagerService: android.util.ArrayMap getPackageProfileNames(com.android.server.pm.parsing.pkg.AndroidPackage)>(r11);

        $i2 = virtualinvoke r1.<android.util.ArrayMap: int size()>();

        i4 = $i2 - 1;

     label02:
        if i4 < 0 goto label09;

     label03:
        $r5 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i4);

        r2 = (java.lang.String) $r5;

        $r6 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i4);

        r3 = (java.lang.String) $r6;

        r4 = r0.<com.android.server.pm.dex.ArtManagerService: java.lang.Object mInstallLock>;

        entermonitor r4;

     label04:
        $r7 = r0.<com.android.server.pm.dex.ArtManagerService: com.android.server.pm.Installer mInstaller>;

        $r8 = interfaceinvoke r11.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getPackageName()>();

        virtualinvoke $r7.<com.android.server.pm.Installer: boolean dumpProfiles(int,java.lang.String,java.lang.String,java.lang.String)>(i0, $r8, r3, r2);

        exitmonitor r4;

     label05:
        i4 = i4 + -1;

        goto label02;

     label06:
        $r10 := @caughtexception;

     label07:
        exitmonitor r4;

     label08:
        throw $r10;

     label09:
        goto label11;

     label10:
        $r9 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ArtManagerService", "Failed to dump profiles", $r9);

     label11:
        return;

        catch com.android.server.pm.Installer$InstallerException from label01 to label02 with label10;
        catch com.android.server.pm.Installer$InstallerException from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch com.android.server.pm.Installer$InstallerException from label08 to label09 with label10;
    }

    public boolean isRuntimeProfilingEnabled(int, java.lang.String)
    {
        com.android.server.pm.dex.ArtManagerService r0;
        int i0, i1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, z7;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5, r6;

        r0 := @this: com.android.server.pm.dex.ArtManagerService;

        i0 := @parameter0: int;

        r6 := @parameter1: java.lang.String;

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        z7 = 0;

        if i1 == 2000 goto label1;

        $z6 = specialinvoke r0.<com.android.server.pm.dex.ArtManagerService: boolean checkAndroidPermissions(int,java.lang.String)>(i1, r6);

        if $z6 != 0 goto label1;

        return 0;

     label1:
        if i0 == 0 goto label5;

        if i0 != 1 goto label4;

        $z2 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("dalvik.vm.profilebootclasspath", 0);

        z0 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("persist.device_config.runtime_native_boot.profilebootclasspath", $z2);

        $z3 = <android.os.Build: boolean IS_USERDEBUG>;

        if $z3 != 0 goto label2;

        $z5 = <android.os.Build: boolean IS_ENG>;

        if $z5 == 0 goto label3;

     label2:
        $z4 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("dalvik.vm.usejitprofiles", 0);

        if $z4 == 0 goto label3;

        if z0 == 0 goto label3;

        z7 = 1;

        goto label3;

     label3:
        return z7;

     label4:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid profile type:");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label5:
        $z1 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("dalvik.vm.usejitprofiles", 0);

        return $z1;
    }

    public void prepareAppProfiles(com.android.server.pm.parsing.pkg.AndroidPackage, int, boolean)
    {
        com.android.server.pm.dex.ArtManagerService r0;
        int i0, i1, $i2, $i3, i8;
        boolean z0, $z1;
        java.lang.String r1, r2, $r7, $r9, $r13, $r17, $r21, $r26, $r28, r35;
        com.android.server.pm.Installer r3, $r6;
        java.lang.Object $r4, $r5;
        java.lang.StringBuilder $r14, $r18, $r24, r36;
        java.lang.Throwable $r22;
        com.android.server.pm.Installer$InstallerException $r23;
        com.android.server.pm.parsing.pkg.AndroidPackage r29;
        android.util.ArrayMap r32;
        java.io.File r33, r34;

        r0 := @this: com.android.server.pm.dex.ArtManagerService;

        r29 := @parameter0: com.android.server.pm.parsing.pkg.AndroidPackage;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $i2 = interfaceinvoke r29.<com.android.server.pm.parsing.pkg.AndroidPackage: int getUid()>();

        i1 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i2);

        if i0 >= 0 goto label01;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid user id: ");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ArtManagerService", $r21);

        return;

     label01:
        if i1 >= 0 goto label02;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid app id: ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ArtManagerService", $r17);

        return;

     label02:
        r32 = specialinvoke r0.<com.android.server.pm.dex.ArtManagerService: android.util.ArrayMap getPackageProfileNames(com.android.server.pm.parsing.pkg.AndroidPackage)>(r29);

        $i3 = virtualinvoke r32.<android.util.ArrayMap: int size()>();

        i8 = $i3 - 1;

     label03:
        if i8 < 0 goto label18;

     label04:
        $r4 = virtualinvoke r32.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i8);

        r1 = (java.lang.String) $r4;

        $r5 = virtualinvoke r32.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i8);

        r2 = (java.lang.String) $r5;

     label05:
        if z0 == 0 goto label10;

     label06:
        r33 = new java.io.File;

        specialinvoke r33.<java.io.File: void <init>(java.lang.String)>(r1);

        r34 = staticinvoke <android.content.pm.dex.DexMetadataHelper: java.io.File findDexMetadataForFile(java.io.File)>(r33);

     label07:
        if r34 != null goto label08;

        r35 = null;

        goto label09;

     label08:
        r35 = virtualinvoke r34.<java.io.File: java.lang.String getAbsolutePath()>();

     label09:
        goto label11;

     label10:
        r35 = null;

     label11:
        r3 = r0.<com.android.server.pm.dex.ArtManagerService: com.android.server.pm.Installer mInstaller>;

        entermonitor r3;

     label12:
        $r6 = r0.<com.android.server.pm.dex.ArtManagerService: com.android.server.pm.Installer mInstaller>;

        $r7 = interfaceinvoke r29.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getPackageName()>();

        $z1 = virtualinvoke $r6.<com.android.server.pm.Installer: boolean prepareAppProfile(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String)>($r7, i0, i1, r2, r1, r35);

        if $z1 != 0 goto label13;

        r36 = new java.lang.StringBuilder;

        specialinvoke r36.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to prepare profile for ");

        $r9 = interfaceinvoke r29.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getPackageName()>();

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ArtManagerService", $r13);

     label13:
        exitmonitor r3;

     label14:
        i8 = i8 + -1;

        goto label03;

     label15:
        $r22 := @caughtexception;

     label16:
        exitmonitor r3;

     label17:
        throw $r22;

     label18:
        goto label20;

     label19:
        $r23 := @caughtexception;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to prepare profile for ");

        $r26 = interfaceinvoke r29.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getPackageName()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ArtManagerService", $r28, $r23);

     label20:
        return;

        catch com.android.server.pm.Installer$InstallerException from label02 to label03 with label19;
        catch com.android.server.pm.Installer$InstallerException from label04 to label05 with label19;
        catch com.android.server.pm.Installer$InstallerException from label06 to label07 with label19;
        catch com.android.server.pm.Installer$InstallerException from label08 to label09 with label19;
        catch com.android.server.pm.Installer$InstallerException from label11 to label12 with label19;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
        catch com.android.server.pm.Installer$InstallerException from label17 to label18 with label19;
    }

    public void prepareAppProfiles(com.android.server.pm.parsing.pkg.AndroidPackage, int[], boolean)
    {
        com.android.server.pm.dex.ArtManagerService r0;
        com.android.server.pm.parsing.pkg.AndroidPackage r1;
        int[] r2;
        boolean z0;
        int $i0, $i1, i2;

        r0 := @this: com.android.server.pm.dex.ArtManagerService;

        r1 := @parameter0: com.android.server.pm.parsing.pkg.AndroidPackage;

        r2 := @parameter1: int[];

        z0 := @parameter2: boolean;

        i2 = 0;

     label1:
        $i0 = lengthof r2;

        if i2 >= $i0 goto label2;

        $i1 = r2[i2];

        virtualinvoke r0.<com.android.server.pm.dex.ArtManagerService: void prepareAppProfiles(com.android.server.pm.parsing.pkg.AndroidPackage,int,boolean)>(r1, $i1, z0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void snapshotRuntimeProfile(int, java.lang.String, java.lang.String, android.content.pm.dex.ISnapshotRuntimeProfileCallback, java.lang.String)
    {
        com.android.server.pm.dex.ArtManagerService r0;
        int i0, i2;
        java.lang.String r1, $r8, $r14, r18, r19;
        android.content.pm.dex.ISnapshotRuntimeProfileCallback r2;
        boolean $z0, $z1, $z2, $z3, z4;
        java.lang.StringBuilder $r4, $r9;
        java.lang.IllegalStateException $r7;
        android.os.RemoteException $r17;

        r0 := @this: com.android.server.pm.dex.ArtManagerService;

        i0 := @parameter0: int;

        r18 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: android.content.pm.dex.ISnapshotRuntimeProfileCallback;

        r19 := @parameter4: java.lang.String;

        i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $z0 = specialinvoke r0.<com.android.server.pm.dex.ArtManagerService: boolean checkShellPermissions(int,java.lang.String,int)>(i0, r18, i2);

        if $z0 != 0 goto label05;

        $z3 = specialinvoke r0.<com.android.server.pm.dex.ArtManagerService: boolean checkAndroidPermissions(int,java.lang.String)>(i2, r19);

        if $z3 != 0 goto label05;

     label01:
        interfaceinvoke r2.<android.content.pm.dex.ISnapshotRuntimeProfileCallback: void onError(int)>(2);

     label02:
        goto label04;

     label03:
        $r17 := @caughtexception;

     label04:
        return;

     label05:
        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        z4 = 1;

        if i0 != 1 goto label06;

        goto label07;

     label06:
        z4 = 0;

     label07:
        if z4 != 0 goto label08;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence)>(r1);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence)>(r18);

     label08:
        $z1 = virtualinvoke r0.<com.android.server.pm.dex.ArtManagerService: boolean isRuntimeProfilingEnabled(int,java.lang.String)>(i0, r19);

        if $z1 == 0 goto label12;

        $z2 = <com.android.server.pm.dex.ArtManagerService: boolean DEBUG>;

        if $z2 == 0 goto label09;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested snapshot for ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ArtManagerService", $r14);

     label09:
        if z4 == 0 goto label10;

        specialinvoke r0.<com.android.server.pm.dex.ArtManagerService: void snapshotBootImageProfile(android.content.pm.dex.ISnapshotRuntimeProfileCallback)>(r2);

        goto label11;

     label10:
        specialinvoke r0.<com.android.server.pm.dex.ArtManagerService: void snapshotAppProfile(java.lang.String,java.lang.String,android.content.pm.dex.ISnapshotRuntimeProfileCallback)>(r18, r1, r2);

     label11:
        return;

     label12:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Runtime profiling is not enabled for ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = new java.lang.IllegalStateException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r7;

        catch android.os.RemoteException from label01 to label02 with label03;
    }
}
