public class com.android.server.pm.dex.DynamicCodeLogger extends java.lang.Object
{
    private static final java.lang.String DCL_DEX_SUBTAG;
    private static final java.lang.String DCL_NATIVE_SUBTAG;
    private static final int SNET_TAG;
    private static final java.lang.String TAG;
    private final com.android.server.pm.Installer mInstaller;
    private final com.android.server.pm.dex.PackageDynamicCodeLoading mPackageDynamicCodeLoading;
    private final android.content.pm.IPackageManager mPackageManager;

    void <init>(android.content.pm.IPackageManager, com.android.server.pm.Installer)
    {
        com.android.server.pm.dex.DynamicCodeLogger r0;
        android.content.pm.IPackageManager r1;
        com.android.server.pm.Installer r2;
        com.android.server.pm.dex.PackageDynamicCodeLoading $r3;

        r0 := @this: com.android.server.pm.dex.DynamicCodeLogger;

        r1 := @parameter0: android.content.pm.IPackageManager;

        r2 := @parameter1: com.android.server.pm.Installer;

        $r3 = new com.android.server.pm.dex.PackageDynamicCodeLoading;

        specialinvoke $r3.<com.android.server.pm.dex.PackageDynamicCodeLoading: void <init>()>();

        specialinvoke r0.<com.android.server.pm.dex.DynamicCodeLogger: void <init>(android.content.pm.IPackageManager,com.android.server.pm.Installer,com.android.server.pm.dex.PackageDynamicCodeLoading)>(r1, r2, $r3);

        return;
    }

    void <init>(android.content.pm.IPackageManager, com.android.server.pm.Installer, com.android.server.pm.dex.PackageDynamicCodeLoading)
    {
        com.android.server.pm.dex.DynamicCodeLogger r0;
        android.content.pm.IPackageManager r1;
        com.android.server.pm.Installer r2;
        com.android.server.pm.dex.PackageDynamicCodeLoading r3;

        r0 := @this: com.android.server.pm.dex.DynamicCodeLogger;

        r1 := @parameter0: android.content.pm.IPackageManager;

        r2 := @parameter1: com.android.server.pm.Installer;

        r3 := @parameter2: com.android.server.pm.dex.PackageDynamicCodeLoading;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.pm.dex.DynamicCodeLogger: android.content.pm.IPackageManager mPackageManager> = r1;

        r0.<com.android.server.pm.dex.DynamicCodeLogger: com.android.server.pm.dex.PackageDynamicCodeLoading mPackageDynamicCodeLoading> = r3;

        r0.<com.android.server.pm.dex.DynamicCodeLogger: com.android.server.pm.Installer mInstaller> = r2;

        return;
    }

    private boolean fileIsUnder(java.lang.String, java.lang.String)
    {
        com.android.server.pm.dex.DynamicCodeLogger r0;
        boolean z0;
        java.lang.String $r1, r3, r4, r6;
        java.lang.Throwable $r2;
        java.io.File r5, r7;

        r0 := @this: com.android.server.pm.dex.DynamicCodeLogger;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        if r4 != null goto label1;

        return 0;

     label1:
        r5 = new java.io.File;

        specialinvoke r5.<java.io.File: void <init>(java.lang.String)>(r4);

        r6 = virtualinvoke r5.<java.io.File: java.lang.String getCanonicalPath()>();

        r7 = new java.io.File;

        specialinvoke r7.<java.io.File: void <init>(java.lang.String)>(r3);

        $r1 = virtualinvoke r7.<java.io.File: java.lang.String getCanonicalPath()>();

        z0 = staticinvoke <android.os.FileUtils: boolean contains(java.lang.String,java.lang.String)>(r6, $r1);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch java.io.IOException from label1 to label2 with label3;
    }

    void clear()
    {
        com.android.server.pm.dex.DynamicCodeLogger r0;
        com.android.server.pm.dex.PackageDynamicCodeLoading $r1;

        r0 := @this: com.android.server.pm.dex.DynamicCodeLogger;

        $r1 = r0.<com.android.server.pm.dex.DynamicCodeLogger: com.android.server.pm.dex.PackageDynamicCodeLoading mPackageDynamicCodeLoading>;

        virtualinvoke $r1.<com.android.server.pm.dex.PackageDynamicCodeLoading: void clear()>();

        return;
    }

    public java.util.Set getAllPackagesWithDynamicCodeLoading()
    {
        com.android.server.pm.dex.DynamicCodeLogger r0;
        com.android.server.pm.dex.PackageDynamicCodeLoading $r1;
        java.util.Set $r2;

        r0 := @this: com.android.server.pm.dex.DynamicCodeLogger;

        $r1 = r0.<com.android.server.pm.dex.DynamicCodeLogger: com.android.server.pm.dex.PackageDynamicCodeLoading mPackageDynamicCodeLoading>;

        $r2 = virtualinvoke $r1.<com.android.server.pm.dex.PackageDynamicCodeLoading: java.util.Set getAllPackagesWithDynamicCodeLoading()>();

        return $r2;
    }

    com.android.server.pm.dex.PackageDynamicCodeLoading$PackageDynamicCode getPackageDynamicCodeInfo(java.lang.String)
    {
        com.android.server.pm.dex.DynamicCodeLogger r0;
        java.lang.String r1;
        com.android.server.pm.dex.PackageDynamicCodeLoading $r2;
        com.android.server.pm.dex.PackageDynamicCodeLoading$PackageDynamicCode $r3;

        r0 := @this: com.android.server.pm.dex.DynamicCodeLogger;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.pm.dex.DynamicCodeLogger: com.android.server.pm.dex.PackageDynamicCodeLoading mPackageDynamicCodeLoading>;

        $r3 = virtualinvoke $r2.<com.android.server.pm.dex.PackageDynamicCodeLoading: com.android.server.pm.dex.PackageDynamicCodeLoading$PackageDynamicCode getPackageDynamicCodeInfo(java.lang.String)>(r1);

        return $r3;
    }

    public void logDynamicCodeLoading(java.lang.String)
    {
        com.android.server.pm.dex.DynamicCodeLogger r0;
        java.lang.String r1, $r13, $r14, $r18, $r21, $r26, $r33, $r40, $r49, $r51, r55, r62, r66, r67, r69, r73;
        com.android.server.pm.dex.PackageDynamicCodeLoading$PackageDynamicCode r2;
        java.util.Iterator r4, r72;
        int i0, $i1, $i4, i7, i8, i10, i11;
        boolean z0, $z1, $z2, $z3, $z4, $z5, z6, $z7, $z8;
        android.util.SparseArray $r5;
        java.util.Map $r6;
        java.util.Set $r7, $r71;
        com.android.server.pm.dex.PackageDynamicCodeLoading $r8, $r19, $r27, $r41;
        java.lang.Object $r9, $r10, $r11, $r28, $r42;
        android.content.pm.IPackageManager $r12, $r29;
        java.lang.StringBuilder $r15, $r23, $r30, $r35, $r45;
        java.io.File $r20;
        byte[] $r22, r63;
        android.os.RemoteException $r43, $r53;
        com.android.server.pm.Installer$InstallerException $r44, $r52, r64;
        java.util.Map$Entry r54;
        com.android.server.pm.dex.PackageDynamicCodeLoading$DynamicCodeFile r56;
        android.content.pm.ApplicationInfo r57;
        android.content.pm.PackageInfo r58;
        com.android.server.pm.Installer r61;
        char $c9;

        r0 := @this: com.android.server.pm.dex.DynamicCodeLogger;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<com.android.server.pm.dex.DynamicCodeLogger: com.android.server.pm.dex.PackageDynamicCodeLoading$PackageDynamicCode getPackageDynamicCodeInfo(java.lang.String)>(r1);

        if r2 != null goto label01;

        return;

     label01:
        $r5 = new android.util.SparseArray;

        specialinvoke $r5.<android.util.SparseArray: void <init>()>();

        $r6 = r2.<com.android.server.pm.dex.PackageDynamicCodeLoading$PackageDynamicCode: java.util.Map mFileUsageMap>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>();

        r4 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

        z6 = 0;

     label02:
        $z7 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label31;

        $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r54 = (java.util.Map$Entry) $r9;

        $r10 = interfaceinvoke r54.<java.util.Map$Entry: java.lang.Object getKey()>();

        r55 = (java.lang.String) $r10;

        $r11 = interfaceinvoke r54.<java.util.Map$Entry: java.lang.Object getValue()>();

        r56 = (com.android.server.pm.dex.PackageDynamicCodeLoading$DynamicCodeFile) $r11;

        i0 = r56.<com.android.server.pm.dex.PackageDynamicCodeLoading$DynamicCodeFile: int mUserId>;

        $i1 = virtualinvoke $r5.<android.util.SparseArray: int indexOfKey(int)>(i0);

        if $i1 < 0 goto label03;

        $r42 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r57 = (android.content.pm.ApplicationInfo) $r42;

        goto label09;

     label03:
        $r12 = r0.<com.android.server.pm.dex.DynamicCodeLogger: android.content.pm.IPackageManager mPackageManager>;

        r58 = interfaceinvoke $r12.<android.content.pm.IPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>(r1, 0, i0);

     label04:
        if r58 != null goto label05;

        r57 = null;

        goto label06;

     label05:
        r57 = r58.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

     label06:
        goto label08;

     label07:
        $r53 := @caughtexception;

        r57 = null;

     label08:
        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r57);

        if r57 != null goto label09;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find package ");

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for user ");

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r40 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("DynamicCodeLogger", $r40);

        $r41 = r0.<com.android.server.pm.dex.DynamicCodeLogger: com.android.server.pm.dex.PackageDynamicCodeLoading mPackageDynamicCodeLoading>;

        z0 = virtualinvoke $r41.<com.android.server.pm.dex.PackageDynamicCodeLoading: boolean removeUserPackage(java.lang.String,int)>(r1, i0);

        z6 = z6 | z0;

        goto label09;

     label09:
        if r57 != null goto label10;

        goto label02;

     label10:
        $r13 = r57.<android.content.pm.ApplicationInfo: java.lang.String credentialProtectedDataDir>;

        $z1 = specialinvoke r0.<com.android.server.pm.dex.DynamicCodeLogger: boolean fileIsUnder(java.lang.String,java.lang.String)>(r55, $r13);

        if $z1 == 0 goto label11;

        i7 = 2;

        goto label12;

     label11:
        $r14 = r57.<android.content.pm.ApplicationInfo: java.lang.String deviceProtectedDataDir>;

        $z2 = specialinvoke r0.<com.android.server.pm.dex.DynamicCodeLogger: boolean fileIsUnder(java.lang.String,java.lang.String)>(r55, $r14);

        if $z2 == 0 goto label30;

        i7 = 1;

     label12:
        r61 = r0.<com.android.server.pm.dex.DynamicCodeLogger: com.android.server.pm.Installer mInstaller>;

        i8 = r57.<android.content.pm.ApplicationInfo: int uid>;

        r62 = r57.<android.content.pm.ApplicationInfo: java.lang.String volumeUuid>;

     label13:
        r63 = virtualinvoke r61.<com.android.server.pm.Installer: byte[] hashSecondaryDexFile(java.lang.String,java.lang.String,int,java.lang.String,int)>(r55, r1, i8, r62, i7);

     label14:
        goto label18;

     label15:
        $r44 := @caughtexception;

        r64 = $r44;

        goto label17;

     label16:
        $r52 := @caughtexception;

        r64 = $r52;

     label17:
        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got InstallerException when hashing file ");

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r55);

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r49 = virtualinvoke r64.<com.android.server.pm.Installer$InstallerException: java.lang.String getMessage()>();

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r51 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("DynamicCodeLogger", $r51);

        r63 = null;

     label18:
        $c9 = r56.<com.android.server.pm.dex.PackageDynamicCodeLoading$DynamicCodeFile: char mFileType>;

        if $c9 != 68 goto label19;

        r66 = "dcl";

        goto label20;

     label19:
        r66 = "dcln";

     label20:
        $r20 = new java.io.File;

        specialinvoke $r20.<java.io.File: void <init>(java.lang.String)>(r55);

        $r21 = virtualinvoke $r20.<java.io.File: java.lang.String getName()>();

        $r22 = virtualinvoke $r21.<java.lang.String: byte[] getBytes()>();

        r67 = staticinvoke <android.util.PackageUtils: java.lang.String computeSha256Digest(byte[])>($r22);

        if r63 == null goto label21;

        $i4 = lengthof r63;

        if $i4 != 32 goto label21;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r67);

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r33 = staticinvoke <libcore.util.HexEncoding: java.lang.String encodeToString(byte[])>(r63);

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        r69 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label22;

     label21:
        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got no hash for ");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r55);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("DynamicCodeLogger", $r26);

        $r27 = r0.<com.android.server.pm.dex.DynamicCodeLogger: com.android.server.pm.dex.PackageDynamicCodeLoading mPackageDynamicCodeLoading>;

        $z4 = virtualinvoke $r27.<com.android.server.pm.dex.PackageDynamicCodeLoading: boolean removeFile(java.lang.String,java.lang.String,int)>(r1, r55, i0);

        z6 = z6 | $z4;

        r69 = r67;

     label22:
        $r71 = r56.<com.android.server.pm.dex.PackageDynamicCodeLoading$DynamicCodeFile: java.util.Set mLoadingPackages>;

        r72 = interfaceinvoke $r71.<java.util.Set: java.util.Iterator iterator()>();

     label23:
        $z8 = interfaceinvoke r72.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label29;

        $r28 = interfaceinvoke r72.<java.util.Iterator: java.lang.Object next()>();

        r73 = (java.lang.String) $r28;

        i10 = -1;

        $z5 = virtualinvoke r73.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z5 == 0 goto label24;

        i10 = r57.<android.content.pm.ApplicationInfo: int uid>;

        goto label27;

     label24:
        $r29 = r0.<com.android.server.pm.dex.DynamicCodeLogger: android.content.pm.IPackageManager mPackageManager>;

        i11 = interfaceinvoke $r29.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int,int)>(r73, 0, i0);

     label25:
        i10 = i11;

        goto label27;

     label26:
        $r43 := @caughtexception;

     label27:
        if i10 == -1 goto label28;

        virtualinvoke r0.<com.android.server.pm.dex.DynamicCodeLogger: void writeDclEvent(java.lang.String,int,java.lang.String)>(r66, i10, r69);

     label28:
        goto label23;

     label29:
        goto label02;

     label30:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not infer CE/DE storage for path ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r55);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("DynamicCodeLogger", $r18);

        $r19 = r0.<com.android.server.pm.dex.DynamicCodeLogger: com.android.server.pm.dex.PackageDynamicCodeLoading mPackageDynamicCodeLoading>;

        $z3 = virtualinvoke $r19.<com.android.server.pm.dex.PackageDynamicCodeLoading: boolean removeFile(java.lang.String,java.lang.String,int)>(r1, r55, i0);

        z6 = z6 | $z3;

        goto label02;

     label31:
        if z6 == 0 goto label32;

        $r8 = r0.<com.android.server.pm.dex.DynamicCodeLogger: com.android.server.pm.dex.PackageDynamicCodeLoading mPackageDynamicCodeLoading>;

        virtualinvoke $r8.<com.android.server.pm.dex.PackageDynamicCodeLoading: void maybeWriteAsync()>();

     label32:
        return;

        catch android.os.RemoteException from label03 to label04 with label07;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch com.android.server.pm.Installer$InstallerException from label12 to label13 with label16;
        catch com.android.server.pm.Installer$InstallerException from label13 to label14 with label15;
        catch android.os.RemoteException from label24 to label25 with label26;
    }

    void readAndSync(java.util.Map)
    {
        com.android.server.pm.dex.DynamicCodeLogger r0;
        java.util.Map r1;
        com.android.server.pm.dex.PackageDynamicCodeLoading $r2, $r3;

        r0 := @this: com.android.server.pm.dex.DynamicCodeLogger;

        r1 := @parameter0: java.util.Map;

        $r2 = r0.<com.android.server.pm.dex.DynamicCodeLogger: com.android.server.pm.dex.PackageDynamicCodeLoading mPackageDynamicCodeLoading>;

        virtualinvoke $r2.<com.android.server.pm.dex.PackageDynamicCodeLoading: void read()>();

        $r3 = r0.<com.android.server.pm.dex.DynamicCodeLogger: com.android.server.pm.dex.PackageDynamicCodeLoading mPackageDynamicCodeLoading>;

        virtualinvoke $r3.<com.android.server.pm.dex.PackageDynamicCodeLoading: void syncData(java.util.Map)>(r1);

        return;
    }

    void recordDex(int, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.server.pm.dex.DynamicCodeLogger r0;
        int i0;
        java.lang.String r1, r2, r3;
        com.android.server.pm.dex.PackageDynamicCodeLoading $r4, $r5;
        boolean $z0;

        r0 := @this: com.android.server.pm.dex.DynamicCodeLogger;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r4 = r0.<com.android.server.pm.dex.DynamicCodeLogger: com.android.server.pm.dex.PackageDynamicCodeLoading mPackageDynamicCodeLoading>;

        $z0 = virtualinvoke $r4.<com.android.server.pm.dex.PackageDynamicCodeLoading: boolean record(java.lang.String,java.lang.String,int,int,java.lang.String)>(r2, r1, 68, i0, r3);

        if $z0 == 0 goto label1;

        $r5 = r0.<com.android.server.pm.dex.DynamicCodeLogger: com.android.server.pm.dex.PackageDynamicCodeLoading mPackageDynamicCodeLoading>;

        virtualinvoke $r5.<com.android.server.pm.dex.PackageDynamicCodeLoading: void maybeWriteAsync()>();

     label1:
        return;
    }

    public void recordNative(int, java.lang.String)
    {
        com.android.server.pm.dex.DynamicCodeLogger r0;
        int i0, i1, i2;
        android.content.pm.IPackageManager $r1;
        com.android.server.pm.dex.PackageDynamicCodeLoading $r2, $r3;
        boolean $z0;
        android.os.RemoteException $r4;
        java.lang.String r5, r7;
        java.lang.String[] r6;

        r0 := @this: com.android.server.pm.dex.DynamicCodeLogger;

        i1 := @parameter0: int;

        r5 := @parameter1: java.lang.String;

     label1:
        $r1 = r0.<com.android.server.pm.dex.DynamicCodeLogger: android.content.pm.IPackageManager mPackageManager>;

        r6 = interfaceinvoke $r1.<android.content.pm.IPackageManager: java.lang.String[] getPackagesForUid(int)>(i1);

     label2:
        if r6 == null goto label7;

     label3:
        i0 = lengthof r6;

     label4:
        if i0 != 0 goto label5;

        goto label7;

     label5:
        r7 = r6[0];

        i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

        $r2 = r0.<com.android.server.pm.dex.DynamicCodeLogger: com.android.server.pm.dex.PackageDynamicCodeLoading mPackageDynamicCodeLoading>;

        $z0 = virtualinvoke $r2.<com.android.server.pm.dex.PackageDynamicCodeLoading: boolean record(java.lang.String,java.lang.String,int,int,java.lang.String)>(r7, r5, 78, i2, r7);

        if $z0 == 0 goto label6;

        $r3 = r0.<com.android.server.pm.dex.DynamicCodeLogger: com.android.server.pm.dex.PackageDynamicCodeLoading mPackageDynamicCodeLoading>;

        virtualinvoke $r3.<com.android.server.pm.dex.PackageDynamicCodeLoading: void maybeWriteAsync()>();

     label6:
        return;

     label7:
        return;

     label8:
        $r4 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label8;
        catch android.os.RemoteException from label3 to label4 with label8;
    }

    void removePackage(java.lang.String)
    {
        com.android.server.pm.dex.DynamicCodeLogger r0;
        java.lang.String r1;
        com.android.server.pm.dex.PackageDynamicCodeLoading $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.server.pm.dex.DynamicCodeLogger;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.pm.dex.DynamicCodeLogger: com.android.server.pm.dex.PackageDynamicCodeLoading mPackageDynamicCodeLoading>;

        $z0 = virtualinvoke $r2.<com.android.server.pm.dex.PackageDynamicCodeLoading: boolean removePackage(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.server.pm.dex.DynamicCodeLogger: com.android.server.pm.dex.PackageDynamicCodeLoading mPackageDynamicCodeLoading>;

        virtualinvoke $r3.<com.android.server.pm.dex.PackageDynamicCodeLoading: void maybeWriteAsync()>();

     label1:
        return;
    }

    void removeUserPackage(java.lang.String, int)
    {
        com.android.server.pm.dex.DynamicCodeLogger r0;
        java.lang.String r1;
        int i0;
        com.android.server.pm.dex.PackageDynamicCodeLoading $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.server.pm.dex.DynamicCodeLogger;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.pm.dex.DynamicCodeLogger: com.android.server.pm.dex.PackageDynamicCodeLoading mPackageDynamicCodeLoading>;

        $z0 = virtualinvoke $r2.<com.android.server.pm.dex.PackageDynamicCodeLoading: boolean removeUserPackage(java.lang.String,int)>(r1, i0);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.server.pm.dex.DynamicCodeLogger: com.android.server.pm.dex.PackageDynamicCodeLoading mPackageDynamicCodeLoading>;

        virtualinvoke $r3.<com.android.server.pm.dex.PackageDynamicCodeLoading: void maybeWriteAsync()>();

     label1:
        return;
    }

    void writeDclEvent(java.lang.String, int, java.lang.String)
    {
        com.android.server.pm.dex.DynamicCodeLogger r0;
        java.lang.String r1, r2;
        int i0;
        java.lang.Object[] $r3;
        java.lang.Integer $r4;

        r0 := @this: com.android.server.pm.dex.DynamicCodeLogger;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $r3 = newarray (java.lang.Object)[3];

        $r3[0] = r1;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3[1] = $r4;

        $r3[2] = r2;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(1397638484, $r3);

        return;
    }

    void writeNow()
    {
        com.android.server.pm.dex.DynamicCodeLogger r0;
        com.android.server.pm.dex.PackageDynamicCodeLoading $r1;

        r0 := @this: com.android.server.pm.dex.DynamicCodeLogger;

        $r1 = r0.<com.android.server.pm.dex.DynamicCodeLogger: com.android.server.pm.dex.PackageDynamicCodeLoading mPackageDynamicCodeLoading>;

        virtualinvoke $r1.<com.android.server.pm.dex.PackageDynamicCodeLoading: void writeNow()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.pm.dex.DynamicCodeLogger: java.lang.String TAG> = "DynamicCodeLogger";

        <com.android.server.pm.dex.DynamicCodeLogger: int SNET_TAG> = 1397638484;

        <com.android.server.pm.dex.DynamicCodeLogger: java.lang.String DCL_NATIVE_SUBTAG> = "dcln";

        <com.android.server.pm.dex.DynamicCodeLogger: java.lang.String DCL_DEX_SUBTAG> = "dcl";

        return;
    }
}
