public class com.android.server.pm.dex.PackageDexUsage extends com.android.server.pm.AbstractStatsBase
{
    private static final java.lang.String CODE_PATH_LINE_CHAR;
    private static final java.lang.String DEX_LINE_CHAR;
    private static final java.lang.String LOADING_PACKAGE_CHAR;
    static final int MAX_SECONDARY_FILES_PER_OWNER;
    private static final int PACKAGE_DEX_USAGE_VERSION;
    private static final java.lang.String PACKAGE_DEX_USAGE_VERSION_HEADER;
    private static final java.lang.String SPLIT_CHAR;
    private static final java.lang.String TAG;
    static final java.lang.String UNSUPPORTED_CLASS_LOADER_CONTEXT;
    static final java.lang.String VARIABLE_CLASS_LOADER_CONTEXT;
    private final java.util.Map mPackageUseInfoMap;

    void <init>()
    {
        com.android.server.pm.dex.PackageDexUsage r0;
        java.util.HashMap $r1;

        r0 := @this: com.android.server.pm.dex.PackageDexUsage;

        specialinvoke r0.<com.android.server.pm.AbstractStatsBase: void <init>(java.lang.String,java.lang.String,boolean)>("package-dex-usage.list", "PackageDexUsage_DiskWriter", 0);

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.pm.dex.PackageDexUsage: java.util.Map mPackageUseInfoMap> = $r1;

        return;
    }

    private java.util.Map clonePackageUseInfoMap()
    {
        com.android.server.pm.dex.PackageDexUsage r0;
        java.util.Map r2, $r7;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        com.android.server.pm.dex.PackageDexUsage$PackageUseInfo r5, $r12;
        java.util.HashMap $r6;
        java.util.Set $r8;
        boolean $z0;
        java.lang.Object $r9, $r10, $r11;
        java.lang.Throwable $r14;
        java.lang.String r15;

        r0 := @this: com.android.server.pm.dex.PackageDexUsage;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r2 = r0.<com.android.server.pm.dex.PackageDexUsage: java.util.Map mPackageUseInfoMap>;

        entermonitor r2;

     label1:
        $r7 = r0.<com.android.server.pm.dex.PackageDexUsage: java.util.Map mPackageUseInfoMap>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r9;

        $r10 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        r15 = (java.lang.String) $r10;

        r5 = new com.android.server.pm.dex.PackageDexUsage$PackageUseInfo;

        $r11 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = (com.android.server.pm.dex.PackageDexUsage$PackageUseInfo) $r11;

        specialinvoke r5.<com.android.server.pm.dex.PackageDexUsage$PackageUseInfo: void <init>(com.android.server.pm.dex.PackageDexUsage$PackageUseInfo,com.android.server.pm.dex.PackageDexUsage$1)>($r12, null);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r15, r5);

     label3:
        goto label2;

     label4:
        exitmonitor r2;

     label5:
        return $r6;

     label6:
        $r14 := @caughtexception;

     label7:
        exitmonitor r2;

     label8:
        throw $r14;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private boolean isSupportedVersion(int)
    {
        com.android.server.pm.dex.PackageDexUsage r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.server.pm.dex.PackageDexUsage;

        i0 := @parameter0: int;

        if i0 != 2 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean maybeAddLoadingPackage(java.lang.String, java.lang.String, java.util.Set)
    {
        com.android.server.pm.dex.PackageDexUsage r0;
        java.lang.String r1, r2;
        java.util.Set r3;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.server.pm.dex.PackageDexUsage;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.Set;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 != 0 goto label1;

        $z1 = interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r2);

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    private boolean readBoolean(java.lang.String)
    {
        com.android.server.pm.dex.PackageDexUsage r0;
        java.lang.String r1, $r3, $r4, $r9;
        boolean $z0, $z1;
        java.lang.StringBuilder $r5;
        java.lang.IllegalArgumentException $r8;

        r0 := @this: com.android.server.pm.dex.PackageDexUsage;

        r1 := @parameter0: java.lang.String;

        $r3 = "0";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r4 = "1";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown bool encoding: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r8;
    }

    private java.lang.String readClassLoaderContext(java.io.BufferedReader, int) throws java.io.IOException
    {
        com.android.server.pm.dex.PackageDexUsage r0;
        int i0;
        java.lang.IllegalStateException $r1;
        java.io.BufferedReader r2;
        java.lang.String r3;

        r0 := @this: com.android.server.pm.dex.PackageDexUsage;

        r2 := @parameter0: java.io.BufferedReader;

        i0 := @parameter1: int;

        r3 = virtualinvoke r2.<java.io.BufferedReader: java.lang.String readLine()>();

        if r3 == null goto label1;

        return r3;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Could not find the classLoaderContext line.");

        throw $r1;
    }

    private java.util.Set readLoadingPackages(java.io.BufferedReader, int) throws java.io.IOException
    {
        com.android.server.pm.dex.PackageDexUsage r0;
        int i0, $i1, $i2, $i3;
        java.lang.IllegalStateException $r2;
        java.util.HashSet $r3;
        java.lang.String $r4, $r5, $r6, r9;
        java.lang.String[] $r7;
        java.io.BufferedReader r8;

        r0 := @this: com.android.server.pm.dex.PackageDexUsage;

        r8 := @parameter0: java.io.BufferedReader;

        i0 := @parameter1: int;

        r9 = virtualinvoke r8.<java.io.BufferedReader: java.lang.String readLine()>();

        if r9 == null goto label2;

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        $i1 = virtualinvoke r9.<java.lang.String: int length()>();

        $r4 = "@";

        $i2 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i1 == $i2 goto label1;

        $r5 = "@";

        $i3 = virtualinvoke $r5.<java.lang.String: int length()>();

        $r6 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int)>($i3);

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>($r3, $r7);

     label1:
        return $r3;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Could not find the loadingPackages line.");

        throw $r2;
    }

    private boolean removeDexFile(com.android.server.pm.dex.PackageDexUsage$PackageUseInfo, java.lang.String, int)
    {
        com.android.server.pm.dex.PackageDexUsage r0;
        com.android.server.pm.dex.PackageDexUsage$PackageUseInfo r1;
        java.lang.String r2;
        int i0, $i1;
        com.android.server.pm.dex.PackageDexUsage$DexUseInfo r3;
        java.util.Map $r4, $r6;
        java.lang.Object $r5;

        r0 := @this: com.android.server.pm.dex.PackageDexUsage;

        r1 := @parameter0: com.android.server.pm.dex.PackageDexUsage$PackageUseInfo;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r4 = staticinvoke <com.android.server.pm.dex.PackageDexUsage$PackageUseInfo: java.util.Map access$100(com.android.server.pm.dex.PackageDexUsage$PackageUseInfo)>(r1);

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (com.android.server.pm.dex.PackageDexUsage$DexUseInfo) $r5;

        if r3 != null goto label1;

        return 0;

     label1:
        $i1 = staticinvoke <com.android.server.pm.dex.PackageDexUsage$DexUseInfo: int access$300(com.android.server.pm.dex.PackageDexUsage$DexUseInfo)>(r3);

        if $i1 != i0 goto label2;

        $r6 = staticinvoke <com.android.server.pm.dex.PackageDexUsage$PackageUseInfo: java.util.Map access$100(com.android.server.pm.dex.PackageDexUsage$PackageUseInfo)>(r1);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2);

        return 1;

     label2:
        return 0;
    }

    private java.lang.String writeBoolean(boolean)
    {
        com.android.server.pm.dex.PackageDexUsage r0;
        boolean z0;
        java.lang.String r1;

        r0 := @this: com.android.server.pm.dex.PackageDexUsage;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        r1 = "1";

        goto label2;

     label1:
        r1 = "0";

     label2:
        return r1;
    }

    void clear()
    {
        com.android.server.pm.dex.PackageDexUsage r0;
        java.util.Map r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.pm.dex.PackageDexUsage;

        r1 = r0.<com.android.server.pm.dex.PackageDexUsage: java.util.Map mPackageUseInfoMap>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.pm.dex.PackageDexUsage: java.util.Map mPackageUseInfoMap>;

        interfaceinvoke $r3.<java.util.Map: void clear()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    boolean clearUsedByOtherApps(java.lang.String)
    {
        com.android.server.pm.dex.PackageDexUsage r0;
        java.util.Map r1, $r2;
        boolean z0;
        java.lang.Object $r3;
        java.lang.Throwable $r4;
        java.lang.String r5;
        com.android.server.pm.dex.PackageDexUsage$PackageUseInfo r6;

        r0 := @this: com.android.server.pm.dex.PackageDexUsage;

        r5 := @parameter0: java.lang.String;

        r1 = r0.<com.android.server.pm.dex.PackageDexUsage: java.util.Map mPackageUseInfoMap>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.pm.dex.PackageDexUsage: java.util.Map mPackageUseInfoMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        r6 = (com.android.server.pm.dex.PackageDexUsage$PackageUseInfo) $r3;

     label2:
        if r6 != null goto label5;

     label3:
        exitmonitor r1;

     label4:
        return 0;

     label5:
        z0 = virtualinvoke r6.<com.android.server.pm.dex.PackageDexUsage$PackageUseInfo: boolean clearCodePathUsedByOtherApps()>();

        exitmonitor r1;

     label6:
        return z0;

     label7:
        $r4 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    java.lang.String dump()
    {
        com.android.server.pm.dex.PackageDexUsage r0;
        java.io.StringWriter $r2;
        java.lang.String $r3;

        r0 := @this: com.android.server.pm.dex.PackageDexUsage;

        $r2 = new java.io.StringWriter;

        specialinvoke $r2.<java.io.StringWriter: void <init>()>();

        virtualinvoke r0.<com.android.server.pm.dex.PackageDexUsage: void write(java.io.Writer)>($r2);

        $r3 = virtualinvoke $r2.<java.io.StringWriter: java.lang.String toString()>();

        return $r3;
    }

    java.util.Set getAllPackagesWithSecondaryDexFiles()
    {
        com.android.server.pm.dex.PackageDexUsage r0;
        java.util.Map r2, $r5, $r10;
        java.util.Iterator r3;
        java.util.HashSet $r4;
        java.util.Set $r6;
        boolean $z0, $z1;
        java.lang.Object $r7, $r8, $r11;
        com.android.server.pm.dex.PackageDexUsage$PackageUseInfo $r9;
        java.lang.String $r12;
        java.lang.Throwable $r13;
        java.util.Map$Entry r14;

        r0 := @this: com.android.server.pm.dex.PackageDexUsage;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r2 = r0.<com.android.server.pm.dex.PackageDexUsage: java.util.Map mPackageUseInfoMap>;

        entermonitor r2;

     label1:
        $r5 = r0.<com.android.server.pm.dex.PackageDexUsage: java.util.Map mPackageUseInfoMap>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r14 = (java.util.Map$Entry) $r7;

        $r8 = interfaceinvoke r14.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (com.android.server.pm.dex.PackageDexUsage$PackageUseInfo) $r8;

        $r10 = staticinvoke <com.android.server.pm.dex.PackageDexUsage$PackageUseInfo: java.util.Map access$100(com.android.server.pm.dex.PackageDexUsage$PackageUseInfo)>($r9);

        $z1 = interfaceinvoke $r10.<java.util.Map: boolean isEmpty()>();

        if $z1 != 0 goto label3;

        $r11 = interfaceinvoke r14.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r12 = (java.lang.String) $r11;

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r12);

     label3:
        goto label2;

     label4:
        exitmonitor r2;

     label5:
        return $r4;

     label6:
        $r13 := @caughtexception;

     label7:
        exitmonitor r2;

     label8:
        throw $r13;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    com.android.server.pm.dex.PackageDexUsage$PackageUseInfo getPackageUseInfo(java.lang.String)
    {
        com.android.server.pm.dex.PackageDexUsage r0;
        java.util.Map r1, $r3;
        com.android.server.pm.dex.PackageDexUsage$PackageUseInfo r2, $r5, r8;
        java.lang.Object $r4;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: com.android.server.pm.dex.PackageDexUsage;

        r7 := @parameter0: java.lang.String;

        r1 = r0.<com.android.server.pm.dex.PackageDexUsage: java.util.Map mPackageUseInfoMap>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.pm.dex.PackageDexUsage: java.util.Map mPackageUseInfoMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7);

        r2 = (com.android.server.pm.dex.PackageDexUsage$PackageUseInfo) $r4;

     label2:
        r8 = null;

        if r2 != null goto label3;

        goto label4;

     label3:
        $r5 = new com.android.server.pm.dex.PackageDexUsage$PackageUseInfo;

        specialinvoke $r5.<com.android.server.pm.dex.PackageDexUsage$PackageUseInfo: void <init>(com.android.server.pm.dex.PackageDexUsage$PackageUseInfo,com.android.server.pm.dex.PackageDexUsage$1)>(r2, null);

        r8 = $r5;

     label4:
        exitmonitor r1;

     label5:
        return r8;

     label6:
        $r6 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    void maybeWriteAsync()
    {
        com.android.server.pm.dex.PackageDexUsage r0;

        r0 := @this: com.android.server.pm.dex.PackageDexUsage;

        virtualinvoke r0.<com.android.server.pm.dex.PackageDexUsage: boolean maybeWriteAsync(java.lang.Object)>(null);

        return;
    }

    void read()
    {
        com.android.server.pm.dex.PackageDexUsage r0;
        java.lang.Void $r1;

        r0 := @this: com.android.server.pm.dex.PackageDexUsage;

        $r1 = (java.lang.Void) null;

        virtualinvoke r0.<com.android.server.pm.dex.PackageDexUsage: void read(java.lang.Object)>($r1);

        return;
    }

    void read(java.io.Reader) throws java.io.IOException
    {
        com.android.server.pm.dex.PackageDexUsage r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i10, i11, i12;
        java.lang.String r4, r7, $r16, $r17, $r18, $r24, $r28, $r34, $r35, $r36, $r37, $r45, $r49, $r51, $r52, $r53, $r58, r61, r65, r66, r67, r69, r72;
        java.lang.String[] r5, r63;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z7, $z8;
        java.util.HashMap $r9;
        java.io.BufferedReader $r10;
        java.lang.IllegalStateException $r11, $r15, $r27, $r29, $r33;
        java.lang.StringBuilder $r12, $r30, $r42, $r46, $r54;
        java.util.HashSet $r19;
        java.util.Map $r20, $r21, $r25, $r40, r74;
        com.android.server.pm.dex.PackageDexUsage$PackageUseInfo $r22, r64;
        com.android.server.pm.dex.PackageDexUsage$DexUseInfo $r38;
        java.util.Set $r39, $r50, r68, r73;
        java.lang.Throwable $r59;
        java.io.Reader r60;

        r0 := @this: com.android.server.pm.dex.PackageDexUsage;

        r60 := @parameter0: java.io.Reader;

        $r9 = new java.util.HashMap;

        specialinvoke $r9.<java.util.HashMap: void <init>()>();

        $r10 = new java.io.BufferedReader;

        specialinvoke $r10.<java.io.BufferedReader: void <init>(java.io.Reader)>(r60);

        r61 = virtualinvoke $r10.<java.io.BufferedReader: java.lang.String readLine()>();

        if r61 == null goto label24;

        $z1 = virtualinvoke r61.<java.lang.String: boolean startsWith(java.lang.String)>("PACKAGE_MANAGER__PACKAGE_DEX_USAGE__");

        if $z1 == 0 goto label23;

        $r17 = "PACKAGE_MANAGER__PACKAGE_DEX_USAGE__";

        $i2 = virtualinvoke $r17.<java.lang.String: int length()>();

        $r18 = virtualinvoke r61.<java.lang.String: java.lang.String substring(int)>($i2);

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r18);

        $z2 = specialinvoke r0.<com.android.server.pm.dex.PackageDexUsage: boolean isSupportedVersion(int)>(i0);

        if $z2 != 0 goto label01;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected package-dex-use version: ");

        virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Not reading from it");

        $r58 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageDexUsage", $r58);

        return;

     label01:
        $r19 = new java.util.HashSet;

        specialinvoke $r19.<java.util.HashSet: void <init>()>();

        r63 = <android.os.Build: java.lang.String[] SUPPORTED_ABIS>;

        i1 = lengthof r63;

        i10 = 0;

     label02:
        if i10 >= i1 goto label03;

        $r52 = r63[i10];

        $r53 = staticinvoke <dalvik.system.VMRuntime: java.lang.String getInstructionSet(java.lang.String)>($r52);

        interfaceinvoke $r19.<java.util.Set: boolean add(java.lang.Object)>($r53);

        i10 = i10 + 1;

        goto label02;

     label03:
        r64 = null;

        r65 = null;

     label04:
        r66 = virtualinvoke $r10.<java.io.BufferedReader: java.lang.String readLine()>();

        if r66 == null goto label17;

        $z3 = virtualinvoke r66.<java.lang.String: boolean startsWith(java.lang.String)>("#");

        if $z3 == 0 goto label14;

        if r65 == null goto label13;

        $r28 = "#";

        $i4 = virtualinvoke $r28.<java.lang.String: int length()>();

        r4 = virtualinvoke r66.<java.lang.String: java.lang.String substring(int)>($i4);

        r67 = virtualinvoke $r10.<java.io.BufferedReader: java.lang.String readLine()>();

        if r67 == null goto label12;

        r5 = virtualinvoke r67.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i5 = lengthof r5;

        if $i5 < 3 goto label11;

        r68 = specialinvoke r0.<com.android.server.pm.dex.PackageDexUsage: java.util.Set readLoadingPackages(java.io.BufferedReader,int)>($r10, i0);

        r69 = specialinvoke r0.<com.android.server.pm.dex.PackageDexUsage: java.lang.String readClassLoaderContext(java.io.BufferedReader,int)>($r10, i0);

        $r35 = "=UnsupportedClassLoaderContext=";

        $z5 = virtualinvoke $r35.<java.lang.String: boolean equals(java.lang.Object)>(r69);

        if $z5 == 0 goto label05;

        goto label15;

     label05:
        $r36 = r5[0];

        i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r36);

        $r37 = r5[1];

        z0 = specialinvoke r0.<com.android.server.pm.dex.PackageDexUsage: boolean readBoolean(java.lang.String)>($r37);

        $r38 = new com.android.server.pm.dex.PackageDexUsage$DexUseInfo;

        specialinvoke $r38.<com.android.server.pm.dex.PackageDexUsage$DexUseInfo: void <init>(boolean,int,java.lang.String,java.lang.String)>(z0, i11, r69, null);

        $r39 = staticinvoke <com.android.server.pm.dex.PackageDexUsage$DexUseInfo: java.util.Set access$200(com.android.server.pm.dex.PackageDexUsage$DexUseInfo)>($r38);

        interfaceinvoke $r39.<java.util.Set: boolean addAll(java.util.Collection)>(r68);

        i12 = 2;

     label06:
        $i6 = lengthof r5;

        if i12 >= $i6 goto label09;

        r7 = r5[i12];

        $z8 = interfaceinvoke $r19.<java.util.Set: boolean contains(java.lang.Object)>(r7);

        if $z8 == 0 goto label07;

        $r50 = staticinvoke <com.android.server.pm.dex.PackageDexUsage$DexUseInfo: java.util.Set access$700(com.android.server.pm.dex.PackageDexUsage$DexUseInfo)>($r38);

        $r51 = r5[i12];

        interfaceinvoke $r50.<java.util.Set: boolean add(java.lang.Object)>($r51);

        goto label08;

     label07:
        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported ISA when parsing PackageDexUsage: ");

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r49 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("PackageDexUsage", $r49);

     label08:
        i12 = i12 + 1;

        goto label06;

     label09:
        $z7 = interfaceinvoke $r19.<java.util.Set: boolean isEmpty()>();

        if $z7 == 0 goto label10;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignore dexPath when parsing PackageDexUsage because of unsupported isas. dexPath=");

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r45 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("PackageDexUsage", $r45);

        goto label15;

     label10:
        $r40 = staticinvoke <com.android.server.pm.dex.PackageDexUsage$PackageUseInfo: java.util.Map access$100(com.android.server.pm.dex.PackageDexUsage$PackageUseInfo)>(r64);

        interfaceinvoke $r40.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r38);

        goto label15;

     label11:
        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid PackageDexUsage line: ");

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r67);

        $r33 = new java.lang.IllegalStateException;

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r34);

        throw $r33;

     label12:
        $r29 = new java.lang.IllegalStateException;

        specialinvoke $r29.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Could not find dexUseInfo line");

        throw $r29;

     label13:
        $r27 = new java.lang.IllegalStateException;

        specialinvoke $r27.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Malformed PackageDexUsage file. Expected package line before dex line.");

        throw $r27;

     label14:
        $z4 = virtualinvoke r66.<java.lang.String: boolean startsWith(java.lang.String)>("+");

        if $z4 == 0 goto label16;

        $r24 = "+";

        $i3 = virtualinvoke $r24.<java.lang.String: int length()>();

        r72 = virtualinvoke r66.<java.lang.String: java.lang.String substring(int)>($i3);

        r73 = specialinvoke r0.<com.android.server.pm.dex.PackageDexUsage: java.util.Set readLoadingPackages(java.io.BufferedReader,int)>($r10, i0);

        $r25 = staticinvoke <com.android.server.pm.dex.PackageDexUsage$PackageUseInfo: java.util.Map access$500(com.android.server.pm.dex.PackageDexUsage$PackageUseInfo)>(r64);

        interfaceinvoke $r25.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r72, r73);

     label15:
        goto label04;

     label16:
        r65 = r66;

        $r22 = new com.android.server.pm.dex.PackageDexUsage$PackageUseInfo;

        specialinvoke $r22.<com.android.server.pm.dex.PackageDexUsage$PackageUseInfo: void <init>(java.lang.String)>(r66);

        r64 = $r22;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r66, $r22);

        goto label04;

     label17:
        r74 = r0.<com.android.server.pm.dex.PackageDexUsage: java.util.Map mPackageUseInfoMap>;

        entermonitor r74;

     label18:
        $r20 = r0.<com.android.server.pm.dex.PackageDexUsage: java.util.Map mPackageUseInfoMap>;

        interfaceinvoke $r20.<java.util.Map: void clear()>();

        $r21 = r0.<com.android.server.pm.dex.PackageDexUsage: java.util.Map mPackageUseInfoMap>;

        interfaceinvoke $r21.<java.util.Map: void putAll(java.util.Map)>($r9);

        exitmonitor r74;

     label19:
        return;

     label20:
        $r59 := @caughtexception;

     label21:
        exitmonitor r74;

     label22:
        throw $r59;

     label23:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid version line: ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r61);

        $r15 = new java.lang.IllegalStateException;

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r16);

        throw $r15;

     label24:
        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No version line found.");

        throw $r11;

        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label21 to label22 with label20;
    }

    protected volatile void readInternal(java.lang.Object)
    {
        com.android.server.pm.dex.PackageDexUsage r0;
        java.lang.Object r1;
        java.lang.Void $r2;

        r0 := @this: com.android.server.pm.dex.PackageDexUsage;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Void) r1;

        virtualinvoke r0.<com.android.server.pm.dex.PackageDexUsage: void readInternal(java.lang.Void)>($r2);

        return;
    }

    protected void readInternal(java.lang.Void)
    {
        com.android.server.pm.dex.PackageDexUsage r0;
        android.util.AtomicFile r1;
        java.io.InputStreamReader r2;
        java.io.FileInputStream $r3;
        java.lang.Throwable $r4, $r5, $r6;
        java.lang.Void r7;
        java.io.BufferedReader r8, r9, r10, r11;

        r0 := @this: com.android.server.pm.dex.PackageDexUsage;

        r7 := @parameter0: java.lang.Void;

        r1 = virtualinvoke r0.<com.android.server.pm.dex.PackageDexUsage: android.util.AtomicFile getFile()>();

        r8 = null;

        r9 = null;

        r10 = null;

     label01:
        r11 = new java.io.BufferedReader;

     label02:
        r8 = null;

        r9 = null;

        r10 = null;

     label03:
        r2 = new java.io.InputStreamReader;

     label04:
        r8 = null;

        r9 = null;

        r10 = null;

     label05:
        $r3 = virtualinvoke r1.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

        specialinvoke r2.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r3);

     label06:
        r8 = null;

        r9 = null;

        r10 = null;

     label07:
        specialinvoke r11.<java.io.BufferedReader: void <init>(java.io.Reader)>(r2);

     label08:
        r8 = r11;

        r9 = r11;

        r10 = r11;

     label09:
        virtualinvoke r0.<com.android.server.pm.dex.PackageDexUsage: void read(java.io.Reader)>(r11);

     label10:
        goto label17;

     label11:
        $r5 := @caughtexception;

        goto label15;

     label12:
        $r6 := @caughtexception;

        r8 = r9;

     label13:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageDexUsage", "Failed to parse package dex usage.", $r6);

     label14:
        r11 = r9;

        goto label17;

     label15:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r8);

        throw $r5;

     label16:
        $r4 := @caughtexception;

        r11 = r10;

     label17:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r11);

        return;

        catch java.io.FileNotFoundException from label01 to label02 with label16;
        catch java.io.IOException from label01 to label02 with label12;
        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.io.FileNotFoundException from label03 to label04 with label16;
        catch java.io.IOException from label03 to label04 with label12;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.io.FileNotFoundException from label05 to label06 with label16;
        catch java.io.IOException from label05 to label06 with label12;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.io.FileNotFoundException from label07 to label08 with label16;
        catch java.io.IOException from label07 to label08 with label12;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.io.FileNotFoundException from label09 to label10 with label16;
        catch java.io.IOException from label09 to label10 with label12;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label13 to label14 with label11;
    }

    boolean record(java.lang.String, java.lang.String, int, java.lang.String, boolean, java.lang.String, java.lang.String)
    {
        com.android.server.pm.dex.PackageDexUsage r0;
        java.lang.String r1, r2, $r9, $r22, r32, r33, r34;
        int i0, $i1, $i2, $i3;
        java.util.Map r3, $r11, $r14, $r23, $r24, $r26, $r29;
        boolean $z1, $z2, $z3, z6, z7, z8, z9, z10, z11;
        java.lang.StringBuilder $r4, r41;
        java.lang.IllegalArgumentException $r8, $r10, r40;
        java.lang.Object $r12, $r15;
        java.util.Set $r13, $r28;
        java.lang.Throwable $r31;
        com.android.server.pm.dex.PackageDexUsage$PackageUseInfo r35, r36;
        com.android.server.pm.dex.PackageDexUsage$DexUseInfo r37, r38, r39;

        r0 := @this: com.android.server.pm.dex.PackageDexUsage;

        r32 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r33 := @parameter3: java.lang.String;

        z6 := @parameter4: boolean;

        r34 := @parameter5: java.lang.String;

        r2 := @parameter6: java.lang.String;

        $z1 = staticinvoke <com.android.server.pm.PackageManagerServiceUtils: boolean checkISA(java.lang.String)>(r33);

        if $z1 == 0 goto label32;

        if r2 == null goto label31;

        z7 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("=UnsupportedClassLoaderContext=");

        if z7 == 0 goto label01;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageDexUsage", "Unsupported context?");

        return 0;

     label01:
        $z2 = virtualinvoke r32.<java.lang.String: boolean equals(java.lang.Object)>(r34);

        z8 = $z2 ^ 1;

        r3 = r0.<com.android.server.pm.dex.PackageDexUsage: java.util.Map mPackageUseInfoMap>;

        entermonitor r3;

     label02:
        $r11 = r0.<com.android.server.pm.dex.PackageDexUsage: java.util.Map mPackageUseInfoMap>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r32);

        r35 = (com.android.server.pm.dex.PackageDexUsage$PackageUseInfo) $r12;

     label03:
        if r35 != null goto label12;

     label04:
        r36 = new com.android.server.pm.dex.PackageDexUsage$PackageUseInfo;

        specialinvoke r36.<com.android.server.pm.dex.PackageDexUsage$PackageUseInfo: void <init>(java.lang.String)>(r32);

     label05:
        if z6 == 0 goto label08;

     label06:
        staticinvoke <com.android.server.pm.dex.PackageDexUsage$PackageUseInfo: boolean access$000(com.android.server.pm.dex.PackageDexUsage$PackageUseInfo,java.lang.String,java.lang.String)>(r36, r1, r34);

     label07:
        goto label10;

     label08:
        r37 = new com.android.server.pm.dex.PackageDexUsage$DexUseInfo;

        specialinvoke r37.<com.android.server.pm.dex.PackageDexUsage$DexUseInfo: void <init>(boolean,int,java.lang.String,java.lang.String)>(z8, i0, r2, r33);

        $r26 = staticinvoke <com.android.server.pm.dex.PackageDexUsage$PackageUseInfo: java.util.Map access$100(com.android.server.pm.dex.PackageDexUsage$PackageUseInfo)>(r36);

        interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r37);

     label09:
        $r28 = staticinvoke <com.android.server.pm.dex.PackageDexUsage$DexUseInfo: java.util.Set access$200(com.android.server.pm.dex.PackageDexUsage$DexUseInfo)>(r37);

        specialinvoke r0.<com.android.server.pm.dex.PackageDexUsage: boolean maybeAddLoadingPackage(java.lang.String,java.lang.String,java.util.Set)>(r32, r34, $r28);

     label10:
        $r29 = r0.<com.android.server.pm.dex.PackageDexUsage: java.util.Map mPackageUseInfoMap>;

        interfaceinvoke $r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r32, r36);

        exitmonitor r3;

     label11:
        return 1;

     label12:
        if z6 == 0 goto label15;

     label13:
        z9 = staticinvoke <com.android.server.pm.dex.PackageDexUsage$PackageUseInfo: boolean access$000(com.android.server.pm.dex.PackageDexUsage$PackageUseInfo,java.lang.String,java.lang.String)>(r35, r1, r34);

        exitmonitor r3;

     label14:
        return z9;

     label15:
        r38 = new com.android.server.pm.dex.PackageDexUsage$DexUseInfo;

        specialinvoke r38.<com.android.server.pm.dex.PackageDexUsage$DexUseInfo: void <init>(boolean,int,java.lang.String,java.lang.String)>(z8, i0, r2, r33);

     label16:
        $r13 = staticinvoke <com.android.server.pm.dex.PackageDexUsage$DexUseInfo: java.util.Set access$200(com.android.server.pm.dex.PackageDexUsage$DexUseInfo)>(r38);

        z10 = specialinvoke r0.<com.android.server.pm.dex.PackageDexUsage: boolean maybeAddLoadingPackage(java.lang.String,java.lang.String,java.util.Set)>(r32, r34, $r13);

        $r14 = staticinvoke <com.android.server.pm.dex.PackageDexUsage$PackageUseInfo: java.util.Map access$100(com.android.server.pm.dex.PackageDexUsage$PackageUseInfo)>(r35);

        $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r39 = (com.android.server.pm.dex.PackageDexUsage$DexUseInfo) $r15;

     label17:
        if r39 != null goto label22;

     label18:
        $r23 = staticinvoke <com.android.server.pm.dex.PackageDexUsage$PackageUseInfo: java.util.Map access$100(com.android.server.pm.dex.PackageDexUsage$PackageUseInfo)>(r35);

        $i3 = interfaceinvoke $r23.<java.util.Map: int size()>();

        if $i3 >= 100 goto label20;

        $r24 = staticinvoke <com.android.server.pm.dex.PackageDexUsage$PackageUseInfo: java.util.Map access$100(com.android.server.pm.dex.PackageDexUsage$PackageUseInfo)>(r35);

        interfaceinvoke $r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r38);

        exitmonitor r3;

     label19:
        return 1;

     label20:
        exitmonitor r3;

     label21:
        return z10;

     label22:
        $i1 = staticinvoke <com.android.server.pm.dex.PackageDexUsage$DexUseInfo: int access$300(com.android.server.pm.dex.PackageDexUsage$DexUseInfo)>(r39);

        if i0 != $i1 goto label27;

        $z3 = staticinvoke <com.android.server.pm.dex.PackageDexUsage$DexUseInfo: boolean access$400(com.android.server.pm.dex.PackageDexUsage$DexUseInfo,com.android.server.pm.dex.PackageDexUsage$DexUseInfo)>(r39, r38);

        if $z3 != 0 goto label24;

     label23:
        z11 = 0;

        if z10 == 0 goto label25;

     label24:
        z11 = 1;

     label25:
        exitmonitor r3;

     label26:
        return z11;

     label27:
        r40 = new java.lang.IllegalArgumentException;

        r41 = new java.lang.StringBuilder;

        specialinvoke r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to change ownerUserId for  dex path ");

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        $i2 = staticinvoke <com.android.server.pm.dex.PackageDexUsage$DexUseInfo: int access$300(com.android.server.pm.dex.PackageDexUsage$DexUseInfo)>(r39);

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r22 = virtualinvoke r41.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r40.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw r40;

     label28:
        $r31 := @caughtexception;

     label29:
        exitmonitor r3;

     label30:
        throw $r31;

     label31:
        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null classLoaderContext");

        throw $r10;

     label32:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("loaderIsa ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is unsupported");

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r8;

        catch java.lang.Throwable from label02 to label03 with label28;
        catch java.lang.Throwable from label04 to label05 with label28;
        catch java.lang.Throwable from label06 to label07 with label28;
        catch java.lang.Throwable from label08 to label09 with label28;
        catch java.lang.Throwable from label09 to label10 with label28;
        catch java.lang.Throwable from label10 to label11 with label28;
        catch java.lang.Throwable from label13 to label14 with label28;
        catch java.lang.Throwable from label15 to label16 with label28;
        catch java.lang.Throwable from label16 to label17 with label28;
        catch java.lang.Throwable from label18 to label19 with label28;
        catch java.lang.Throwable from label20 to label21 with label28;
        catch java.lang.Throwable from label22 to label23 with label28;
        catch java.lang.Throwable from label25 to label26 with label28;
        catch java.lang.Throwable from label27 to label28 with label28;
        catch java.lang.Throwable from label29 to label30 with label28;
    }

    boolean removeDexFile(java.lang.String, java.lang.String, int)
    {
        com.android.server.pm.dex.PackageDexUsage r0;
        java.lang.String r1, r6;
        int i0;
        java.util.Map r2, $r3;
        boolean z0;
        java.lang.Object $r4;
        java.lang.Throwable $r5;
        com.android.server.pm.dex.PackageDexUsage$PackageUseInfo r7;

        r0 := @this: com.android.server.pm.dex.PackageDexUsage;

        r6 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 = r0.<com.android.server.pm.dex.PackageDexUsage: java.util.Map mPackageUseInfoMap>;

        entermonitor r2;

     label1:
        $r3 = r0.<com.android.server.pm.dex.PackageDexUsage: java.util.Map mPackageUseInfoMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        r7 = (com.android.server.pm.dex.PackageDexUsage$PackageUseInfo) $r4;

     label2:
        if r7 != null goto label5;

     label3:
        exitmonitor r2;

     label4:
        return 0;

     label5:
        z0 = specialinvoke r0.<com.android.server.pm.dex.PackageDexUsage: boolean removeDexFile(com.android.server.pm.dex.PackageDexUsage$PackageUseInfo,java.lang.String,int)>(r7, r1, i0);

        exitmonitor r2;

     label6:
        return z0;

     label7:
        $r5 := @caughtexception;

     label8:
        exitmonitor r2;

     label9:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    boolean removePackage(java.lang.String)
    {
        com.android.server.pm.dex.PackageDexUsage r0;
        java.util.Map r1, $r2;
        java.lang.Object $r3;
        java.lang.Throwable $r4;
        java.lang.String r5;
        boolean z0;

        r0 := @this: com.android.server.pm.dex.PackageDexUsage;

        r5 := @parameter0: java.lang.String;

        r1 = r0.<com.android.server.pm.dex.PackageDexUsage: java.util.Map mPackageUseInfoMap>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.pm.dex.PackageDexUsage: java.util.Map mPackageUseInfoMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r5);

        if $r3 == null goto label3;

     label2:
        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        exitmonitor r1;

     label5:
        return z0;

     label6:
        $r4 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    boolean removeUserPackage(java.lang.String, int)
    {
        com.android.server.pm.dex.PackageDexUsage r0;
        int i0, $i1;
        java.util.Map r1, $r4, $r6, $r8, $r9;
        com.android.server.pm.dex.PackageDexUsage$PackageUseInfo r2;
        java.util.Iterator r3;
        java.lang.Object $r5, $r11, $r13;
        java.util.Set $r7;
        boolean $z0, $z1, $z2, z3, z4;
        java.util.Map$Entry $r12;
        com.android.server.pm.dex.PackageDexUsage$DexUseInfo $r14;
        java.lang.Throwable $r15;
        java.lang.String r16;

        r0 := @this: com.android.server.pm.dex.PackageDexUsage;

        r16 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = r0.<com.android.server.pm.dex.PackageDexUsage: java.util.Map mPackageUseInfoMap>;

        entermonitor r1;

     label01:
        $r4 = r0.<com.android.server.pm.dex.PackageDexUsage: java.util.Map mPackageUseInfoMap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r16);

        r2 = (com.android.server.pm.dex.PackageDexUsage$PackageUseInfo) $r5;

     label02:
        if r2 != null goto label05;

     label03:
        exitmonitor r1;

     label04:
        return 0;

     label05:
        z3 = 0;

     label06:
        $r6 = staticinvoke <com.android.server.pm.dex.PackageDexUsage$PackageUseInfo: java.util.Map access$100(com.android.server.pm.dex.PackageDexUsage$PackageUseInfo)>(r2);

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label07:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

     label08:
        $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (java.util.Map$Entry) $r11;

        $r13 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r14 = (com.android.server.pm.dex.PackageDexUsage$DexUseInfo) $r13;

        $i1 = staticinvoke <com.android.server.pm.dex.PackageDexUsage$DexUseInfo: int access$300(com.android.server.pm.dex.PackageDexUsage$DexUseInfo)>($r14);

        if $i1 != i0 goto label10;

        interfaceinvoke r3.<java.util.Iterator: void remove()>();

     label09:
        z3 = 1;

     label10:
        goto label07;

     label11:
        z4 = z3;

     label12:
        $r8 = staticinvoke <com.android.server.pm.dex.PackageDexUsage$PackageUseInfo: java.util.Map access$100(com.android.server.pm.dex.PackageDexUsage$PackageUseInfo)>(r2);

        $z1 = interfaceinvoke $r8.<java.util.Map: boolean isEmpty()>();

        if $z1 == 0 goto label16;

     label13:
        z4 = z3;

     label14:
        $z2 = virtualinvoke r2.<com.android.server.pm.dex.PackageDexUsage$PackageUseInfo: boolean isAnyCodePathUsedByOtherApps()>();

        if $z2 != 0 goto label16;

        $r9 = r0.<com.android.server.pm.dex.PackageDexUsage: java.util.Map mPackageUseInfoMap>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r16);

     label15:
        z4 = 1;

     label16:
        exitmonitor r1;

     label17:
        return z4;

     label18:
        $r15 := @caughtexception;

     label19:
        exitmonitor r1;

     label20:
        throw $r15;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.lang.Throwable from label08 to label09 with label18;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
    }

    void syncData(java.util.Map, java.util.Map, java.util.List)
    {
        com.android.server.pm.dex.PackageDexUsage r0;
        java.util.Map r1, r3, $r6, $r12, $r15, $r17, r30;
        java.util.List r2;
        java.util.Iterator r4, r35, r37, r40;
        java.lang.String r5, $r20, r32;
        java.util.Set $r7, $r13, $r16, r34, r36, r39;
        java.lang.Object $r8, $r9, $r10, $r11, $r14, $r18, $r19, $r21, $r22, $r23, $r25;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.util.Map$Entry $r24, r31, r38;
        com.android.server.pm.dex.PackageDexUsage$DexUseInfo $r26;
        int $i0;
        java.lang.Integer $r27;
        java.lang.Throwable $r28, $r29, r41;
        com.android.server.pm.dex.PackageDexUsage$PackageUseInfo r33;

        r0 := @this: com.android.server.pm.dex.PackageDexUsage;

        r30 := @parameter0: java.util.Map;

        r1 := @parameter1: java.util.Map;

        r2 := @parameter2: java.util.List;

        r3 = r0.<com.android.server.pm.dex.PackageDexUsage: java.util.Map mPackageUseInfoMap>;

        entermonitor r3;

     label01:
        $r6 = r0.<com.android.server.pm.dex.PackageDexUsage: java.util.Map mPackageUseInfoMap>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>();

        r4 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z10 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label22;

        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r31 = (java.util.Map$Entry) $r8;

        $r9 = interfaceinvoke r31.<java.util.Map$Entry: java.lang.Object getKey()>();

        r32 = (java.lang.String) $r9;

        $z0 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>(r32);

        if $z0 == 0 goto label04;

     label03:
        goto label02;

     label04:
        $r10 = interfaceinvoke r31.<java.util.Map$Entry: java.lang.Object getValue()>();

        r33 = (com.android.server.pm.dex.PackageDexUsage$PackageUseInfo) $r10;

        $r11 = interfaceinvoke r30.<java.util.Map: java.lang.Object get(java.lang.Object)>(r32);

        r34 = (java.util.Set) $r11;

     label05:
        if r34 != null goto label08;

     label06:
        interfaceinvoke r4.<java.util.Iterator: void remove()>();

     label07:
        goto label21;

     label08:
        $r12 = staticinvoke <com.android.server.pm.dex.PackageDexUsage$PackageUseInfo: java.util.Map access$100(com.android.server.pm.dex.PackageDexUsage$PackageUseInfo)>(r33);

        $r13 = interfaceinvoke $r12.<java.util.Map: java.util.Set entrySet()>();

        r35 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $z1 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r23 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>();

        $r24 = (java.util.Map$Entry) $r23;

        $r25 = interfaceinvoke $r24.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r26 = (com.android.server.pm.dex.PackageDexUsage$DexUseInfo) $r25;

        $i0 = staticinvoke <com.android.server.pm.dex.PackageDexUsage$DexUseInfo: int access$300(com.android.server.pm.dex.PackageDexUsage$DexUseInfo)>($r26);

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $z9 = interfaceinvoke r34.<java.util.Set: boolean contains(java.lang.Object)>($r27);

        if $z9 != 0 goto label10;

        interfaceinvoke r35.<java.util.Iterator: void remove()>();

     label10:
        goto label09;

     label11:
        $r14 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r32);

        r36 = (java.util.Set) $r14;

     label12:
        $r15 = staticinvoke <com.android.server.pm.dex.PackageDexUsage$PackageUseInfo: java.util.Map access$500(com.android.server.pm.dex.PackageDexUsage$PackageUseInfo)>(r33);

        $r16 = interfaceinvoke $r15.<java.util.Map: java.util.Set entrySet()>();

        r37 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>();

     label13:
        $z2 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label20;

        $r18 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>();

        r38 = (java.util.Map$Entry) $r18;

        $r19 = interfaceinvoke r38.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r20 = (java.lang.String) $r19;

        $z5 = interfaceinvoke r36.<java.util.Set: boolean contains(java.lang.Object)>($r20);

        if $z5 != 0 goto label15;

        interfaceinvoke r37.<java.util.Iterator: void remove()>();

     label14:
        goto label19;

     label15:
        $r21 = interfaceinvoke r38.<java.util.Map$Entry: java.lang.Object getValue()>();

        r39 = (java.util.Set) $r21;

     label16:
        r40 = interfaceinvoke r39.<java.util.Set: java.util.Iterator iterator()>();

     label17:
        $z6 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label19;

        $r22 = interfaceinvoke r40.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r22;

        $z7 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>(r5);

        if $z7 != 0 goto label18;

        $z8 = interfaceinvoke r30.<java.util.Map: boolean containsKey(java.lang.Object)>(r5);

        if $z8 != 0 goto label18;

        interfaceinvoke r40.<java.util.Iterator: void remove()>();

     label18:
        goto label17;

     label19:
        goto label13;

     label20:
        $z3 = virtualinvoke r33.<com.android.server.pm.dex.PackageDexUsage$PackageUseInfo: boolean isAnyCodePathUsedByOtherApps()>();

        if $z3 != 0 goto label21;

        $r17 = staticinvoke <com.android.server.pm.dex.PackageDexUsage$PackageUseInfo: java.util.Map access$100(com.android.server.pm.dex.PackageDexUsage$PackageUseInfo)>(r33);

        $z4 = interfaceinvoke $r17.<java.util.Map: boolean isEmpty()>();

        if $z4 == 0 goto label21;

        interfaceinvoke r4.<java.util.Iterator: void remove()>();

     label21:
        goto label02;

     label22:
        exitmonitor r3;

     label23:
        return;

     label24:
        $r28 := @caughtexception;

        r41 = $r28;

     label25:
        exitmonitor r3;

     label26:
        throw r41;

     label27:
        $r29 := @caughtexception;

        r41 = $r29;

        goto label25;

        catch java.lang.Throwable from label01 to label02 with label24;
        catch java.lang.Throwable from label02 to label03 with label24;
        catch java.lang.Throwable from label04 to label05 with label24;
        catch java.lang.Throwable from label06 to label07 with label24;
        catch java.lang.Throwable from label08 to label09 with label24;
        catch java.lang.Throwable from label09 to label10 with label24;
        catch java.lang.Throwable from label11 to label12 with label27;
        catch java.lang.Throwable from label12 to label13 with label27;
        catch java.lang.Throwable from label13 to label14 with label27;
        catch java.lang.Throwable from label15 to label16 with label27;
        catch java.lang.Throwable from label16 to label17 with label27;
        catch java.lang.Throwable from label17 to label18 with label27;
        catch java.lang.Throwable from label20 to label21 with label27;
        catch java.lang.Throwable from label22 to label23 with label27;
        catch java.lang.Throwable from label25 to label26 with label27;
    }

    void write(java.io.Writer)
    {
        com.android.server.pm.dex.PackageDexUsage r0;
        java.util.Iterator r2, r54, r60, r65;
        java.util.Set $r4, $r9, $r11, $r23, $r26, r57;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Object $r5, $r6, $r7, $r12, $r13, $r14, $r31, $r36, $r37, $r38;
        java.util.Map $r8, $r10, r49;
        java.lang.String $r18, $r20, $r21, $r22, $r27, $r29, $r30, $r35, $r42, $r45, $r47, r52, r56, r62, r66;
        java.lang.Object[] $r19;
        int $i0;
        java.io.Writer r48;
        java.util.Map$Entry r51, r55, r61;
        com.android.server.pm.dex.PackageDexUsage$PackageUseInfo r53;
        com.android.server.pm.dex.PackageDexUsage$DexUseInfo r63;
        com.android.internal.util.FastPrintWriter r69;
        java.lang.StringBuilder r70, r71, r72, r73, r74;
        java.lang.CharSequence[] r75;

        r0 := @this: com.android.server.pm.dex.PackageDexUsage;

        r48 := @parameter0: java.io.Writer;

        r49 = specialinvoke r0.<com.android.server.pm.dex.PackageDexUsage: java.util.Map clonePackageUseInfoMap()>();

        r69 = new com.android.internal.util.FastPrintWriter;

        specialinvoke r69.<com.android.internal.util.FastPrintWriter: void <init>(java.io.Writer)>(r48);

        virtualinvoke r69.<com.android.internal.util.FastPrintWriter: void print(java.lang.String)>("PACKAGE_MANAGER__PACKAGE_DEX_USAGE__");

        virtualinvoke r69.<com.android.internal.util.FastPrintWriter: void println(int)>(2);

        $r4 = interfaceinvoke r49.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r51 = (java.util.Map$Entry) $r5;

        $r6 = interfaceinvoke r51.<java.util.Map$Entry: java.lang.Object getKey()>();

        r52 = (java.lang.String) $r6;

        $r7 = interfaceinvoke r51.<java.util.Map$Entry: java.lang.Object getValue()>();

        r53 = (com.android.server.pm.dex.PackageDexUsage$PackageUseInfo) $r7;

        virtualinvoke r69.<com.android.internal.util.FastPrintWriter: void println(java.lang.String)>(r52);

        $r8 = staticinvoke <com.android.server.pm.dex.PackageDexUsage$PackageUseInfo: java.util.Map access$500(com.android.server.pm.dex.PackageDexUsage$PackageUseInfo)>(r53);

        $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Set entrySet()>();

        r54 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r54.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r36 = interfaceinvoke r54.<java.util.Iterator: java.lang.Object next()>();

        r55 = (java.util.Map$Entry) $r36;

        $r37 = interfaceinvoke r55.<java.util.Map$Entry: java.lang.Object getKey()>();

        r56 = (java.lang.String) $r37;

        $r38 = interfaceinvoke r55.<java.util.Map$Entry: java.lang.Object getValue()>();

        r57 = (java.util.Set) $r38;

        r70 = new java.lang.StringBuilder;

        specialinvoke r70.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+");

        virtualinvoke r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r56);

        $r42 = virtualinvoke r70.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r69.<com.android.internal.util.FastPrintWriter: void println(java.lang.String)>($r42);

        r71 = new java.lang.StringBuilder;

        specialinvoke r71.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r45 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(",", r57);

        virtualinvoke r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r47 = virtualinvoke r71.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r69.<com.android.internal.util.FastPrintWriter: void println(java.lang.String)>($r47);

        goto label2;

     label3:
        $r10 = staticinvoke <com.android.server.pm.dex.PackageDexUsage$PackageUseInfo: java.util.Map access$100(com.android.server.pm.dex.PackageDexUsage$PackageUseInfo)>(r53);

        $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Set entrySet()>();

        r60 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z2 = interfaceinvoke r60.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        $r12 = interfaceinvoke r60.<java.util.Iterator: java.lang.Object next()>();

        r61 = (java.util.Map$Entry) $r12;

        $r13 = interfaceinvoke r61.<java.util.Map$Entry: java.lang.Object getKey()>();

        r62 = (java.lang.String) $r13;

        $r14 = interfaceinvoke r61.<java.util.Map$Entry: java.lang.Object getValue()>();

        r63 = (com.android.server.pm.dex.PackageDexUsage$DexUseInfo) $r14;

        r72 = new java.lang.StringBuilder;

        specialinvoke r72.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        virtualinvoke r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r62);

        $r18 = virtualinvoke r72.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r69.<com.android.internal.util.FastPrintWriter: void println(java.lang.String)>($r18);

        $r19 = newarray (java.lang.CharSequence)[2];

        $i0 = staticinvoke <com.android.server.pm.dex.PackageDexUsage$DexUseInfo: int access$300(com.android.server.pm.dex.PackageDexUsage$DexUseInfo)>(r63);

        $r20 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $r19[0] = $r20;

        $z3 = staticinvoke <com.android.server.pm.dex.PackageDexUsage$DexUseInfo: boolean access$600(com.android.server.pm.dex.PackageDexUsage$DexUseInfo)>(r63);

        $r21 = specialinvoke r0.<com.android.server.pm.dex.PackageDexUsage: java.lang.String writeBoolean(boolean)>($z3);

        $r19[1] = $r21;

        r75 = (java.lang.CharSequence[]) $r19;

        $r22 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.CharSequence[])>(",", r75);

        virtualinvoke r69.<com.android.internal.util.FastPrintWriter: void print(java.lang.String)>($r22);

        $r23 = staticinvoke <com.android.server.pm.dex.PackageDexUsage$DexUseInfo: java.util.Set access$700(com.android.server.pm.dex.PackageDexUsage$DexUseInfo)>(r63);

        r65 = interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z4 = interfaceinvoke r65.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label6;

        $r31 = interfaceinvoke r65.<java.util.Iterator: java.lang.Object next()>();

        r66 = (java.lang.String) $r31;

        r73 = new java.lang.StringBuilder;

        specialinvoke r73.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        virtualinvoke r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r66);

        $r35 = virtualinvoke r73.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r69.<com.android.internal.util.FastPrintWriter: void print(java.lang.String)>($r35);

        goto label5;

     label6:
        virtualinvoke r69.<com.android.internal.util.FastPrintWriter: void println()>();

        r74 = new java.lang.StringBuilder;

        specialinvoke r74.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r26 = staticinvoke <com.android.server.pm.dex.PackageDexUsage$DexUseInfo: java.util.Set access$200(com.android.server.pm.dex.PackageDexUsage$DexUseInfo)>(r63);

        $r27 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(",", $r26);

        virtualinvoke r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke r74.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r69.<com.android.internal.util.FastPrintWriter: void println(java.lang.String)>($r29);

        $r30 = virtualinvoke r63.<com.android.server.pm.dex.PackageDexUsage$DexUseInfo: java.lang.String getClassLoaderContext()>();

        virtualinvoke r69.<com.android.internal.util.FastPrintWriter: void println(java.lang.String)>($r30);

        goto label4;

     label7:
        goto label1;

     label8:
        virtualinvoke r69.<com.android.internal.util.FastPrintWriter: void flush()>();

        return;
    }

    protected volatile void writeInternal(java.lang.Object)
    {
        com.android.server.pm.dex.PackageDexUsage r0;
        java.lang.Object r1;
        java.lang.Void $r2;

        r0 := @this: com.android.server.pm.dex.PackageDexUsage;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Void) r1;

        virtualinvoke r0.<com.android.server.pm.dex.PackageDexUsage: void writeInternal(java.lang.Void)>($r2);

        return;
    }

    protected void writeInternal(java.lang.Void)
    {
        com.android.server.pm.dex.PackageDexUsage r0;
        android.util.AtomicFile r1;
        java.io.OutputStreamWriter r2;
        java.lang.Throwable $r3;
        java.lang.Void r4;
        java.io.FileOutputStream r5, r6;

        r0 := @this: com.android.server.pm.dex.PackageDexUsage;

        r4 := @parameter0: java.lang.Void;

        r1 = virtualinvoke r0.<com.android.server.pm.dex.PackageDexUsage: android.util.AtomicFile getFile()>();

        r5 = null;

     label01:
        r6 = virtualinvoke r1.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

     label02:
        r5 = r6;

     label03:
        r2 = new java.io.OutputStreamWriter;

     label04:
        r5 = r6;

     label05:
        specialinvoke r2.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>(r6);

     label06:
        r5 = r6;

     label07:
        virtualinvoke r0.<com.android.server.pm.dex.PackageDexUsage: void write(java.io.Writer)>(r2);

     label08:
        r5 = r6;

     label09:
        virtualinvoke r2.<java.io.OutputStreamWriter: void flush()>();

     label10:
        r5 = r6;

     label11:
        virtualinvoke r1.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r6);

     label12:
        goto label15;

     label13:
        $r3 := @caughtexception;

        if r5 == null goto label14;

        virtualinvoke r1.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r5);

     label14:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageDexUsage", "Failed to write usage for dex files", $r3);

     label15:
        return;

        catch java.io.IOException from label01 to label02 with label13;
        catch java.io.IOException from label03 to label04 with label13;
        catch java.io.IOException from label05 to label06 with label13;
        catch java.io.IOException from label07 to label08 with label13;
        catch java.io.IOException from label09 to label10 with label13;
        catch java.io.IOException from label11 to label12 with label13;
    }

    void writeNow()
    {
        com.android.server.pm.dex.PackageDexUsage r0;

        r0 := @this: com.android.server.pm.dex.PackageDexUsage;

        virtualinvoke r0.<com.android.server.pm.dex.PackageDexUsage: void writeInternal(java.lang.Void)>(null);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.pm.dex.PackageDexUsage: java.lang.String VARIABLE_CLASS_LOADER_CONTEXT> = "=VariableClassLoaderContext=";

        <com.android.server.pm.dex.PackageDexUsage: java.lang.String UNSUPPORTED_CLASS_LOADER_CONTEXT> = "=UnsupportedClassLoaderContext=";

        <com.android.server.pm.dex.PackageDexUsage: java.lang.String TAG> = "PackageDexUsage";

        <com.android.server.pm.dex.PackageDexUsage: java.lang.String SPLIT_CHAR> = ",";

        <com.android.server.pm.dex.PackageDexUsage: java.lang.String PACKAGE_DEX_USAGE_VERSION_HEADER> = "PACKAGE_MANAGER__PACKAGE_DEX_USAGE__";

        <com.android.server.pm.dex.PackageDexUsage: int PACKAGE_DEX_USAGE_VERSION> = 2;

        <com.android.server.pm.dex.PackageDexUsage: int MAX_SECONDARY_FILES_PER_OWNER> = 100;

        <com.android.server.pm.dex.PackageDexUsage: java.lang.String LOADING_PACKAGE_CHAR> = "@";

        <com.android.server.pm.dex.PackageDexUsage: java.lang.String DEX_LINE_CHAR> = "#";

        <com.android.server.pm.dex.PackageDexUsage: java.lang.String CODE_PATH_LINE_CHAR> = "+";

        return;
    }
}
