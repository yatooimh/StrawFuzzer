public class com.android.server.pm.parsing.library.OrgApacheHttpLegacyUpdater extends com.android.server.pm.parsing.library.PackageSharedLibraryUpdater
{

    public void <init>()
    {
        com.android.server.pm.parsing.library.OrgApacheHttpLegacyUpdater r0;

        r0 := @this: com.android.server.pm.parsing.library.OrgApacheHttpLegacyUpdater;

        specialinvoke r0.<com.android.server.pm.parsing.library.PackageSharedLibraryUpdater: void <init>()>();

        return;
    }

    private static boolean apkTargetsApiLevelLessThanOrEqualToOMR1(com.android.server.pm.parsing.pkg.AndroidPackage)
    {
        com.android.server.pm.parsing.pkg.AndroidPackage r0;
        int $i0;
        boolean z0;

        r0 := @parameter0: com.android.server.pm.parsing.pkg.AndroidPackage;

        $i0 = interfaceinvoke r0.<com.android.server.pm.parsing.pkg.AndroidPackage: int getTargetSdkVersion()>();

        if $i0 >= 28 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void updatePackage(com.android.server.pm.parsing.pkg.ParsedPackage, boolean)
    {
        com.android.server.pm.parsing.library.OrgApacheHttpLegacyUpdater r0;
        com.android.server.pm.parsing.pkg.ParsedPackage r1;
        boolean z0, $z1;

        r0 := @this: com.android.server.pm.parsing.library.OrgApacheHttpLegacyUpdater;

        r1 := @parameter0: com.android.server.pm.parsing.pkg.ParsedPackage;

        z0 := @parameter1: boolean;

        $z1 = staticinvoke <com.android.server.pm.parsing.library.OrgApacheHttpLegacyUpdater: boolean apkTargetsApiLevelLessThanOrEqualToOMR1(com.android.server.pm.parsing.pkg.AndroidPackage)>(r1);

        if $z1 == 0 goto label1;

        virtualinvoke r0.<com.android.server.pm.parsing.library.OrgApacheHttpLegacyUpdater: void prefixRequiredLibrary(com.android.server.pm.parsing.pkg.ParsedPackage,java.lang.String)>(r1, "org.apache.http.legacy");

     label1:
        return;
    }
}
