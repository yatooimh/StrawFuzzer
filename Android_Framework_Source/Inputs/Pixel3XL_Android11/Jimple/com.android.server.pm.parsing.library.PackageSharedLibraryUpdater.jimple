public abstract class com.android.server.pm.parsing.library.PackageSharedLibraryUpdater extends java.lang.Object
{

    public void <init>()
    {
        com.android.server.pm.parsing.library.PackageSharedLibraryUpdater r0;

        r0 := @this: com.android.server.pm.parsing.library.PackageSharedLibraryUpdater;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static boolean isLibraryPresent(java.util.List, java.util.List, java.lang.String)
    {
        java.util.List r0, r1;
        java.lang.String r2;
        boolean $z0, $z1, z2;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: java.lang.String;

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.util.Collection,java.lang.Object)>(r0, r2);

        if $z0 != 0 goto label2;

        $z1 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.util.Collection,java.lang.Object)>(r1, r2);

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    static java.util.ArrayList prefix(java.util.ArrayList, java.lang.Object)
    {
        java.util.ArrayList r0, $r2, r3;
        java.lang.Object r1;

        r0 := @parameter0: java.util.ArrayList;

        r1 := @parameter1: java.lang.Object;

        r3 = r0;

        if r0 != null goto label1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r3 = $r2;

     label1:
        virtualinvoke r3.<java.util.ArrayList: void add(int,java.lang.Object)>(0, r1);

        return r3;
    }

    static void removeLibrary(com.android.server.pm.parsing.pkg.ParsedPackage, java.lang.String)
    {
        com.android.server.pm.parsing.pkg.ParsedPackage r0, $r2;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.pm.parsing.pkg.ParsedPackage;

        r1 := @parameter1: java.lang.String;

        $r2 = interfaceinvoke r0.<com.android.server.pm.parsing.pkg.ParsedPackage: com.android.server.pm.parsing.pkg.ParsedPackage removeUsesLibrary(java.lang.String)>(r1);

        interfaceinvoke $r2.<com.android.server.pm.parsing.pkg.ParsedPackage: com.android.server.pm.parsing.pkg.ParsedPackage removeUsesOptionalLibrary(java.lang.String)>(r1);

        return;
    }

    void prefixImplicitDependency(com.android.server.pm.parsing.pkg.ParsedPackage, java.lang.String, java.lang.String)
    {
        com.android.server.pm.parsing.library.PackageSharedLibraryUpdater r0;
        com.android.server.pm.parsing.pkg.ParsedPackage r1;
        java.lang.String r2, r3;
        java.util.List r4, r5;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.server.pm.parsing.library.PackageSharedLibraryUpdater;

        r1 := @parameter0: com.android.server.pm.parsing.pkg.ParsedPackage;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 = interfaceinvoke r1.<com.android.server.pm.parsing.pkg.ParsedPackage: java.util.List getUsesLibraries()>();

        r5 = interfaceinvoke r1.<com.android.server.pm.parsing.pkg.ParsedPackage: java.util.List getUsesOptionalLibraries()>();

        $z0 = staticinvoke <com.android.server.pm.parsing.library.PackageSharedLibraryUpdater: boolean isLibraryPresent(java.util.List,java.util.List,java.lang.String)>(r4, r5, r3);

        if $z0 != 0 goto label2;

        $z1 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.util.Collection,java.lang.Object)>(r4, r2);

        if $z1 == 0 goto label1;

        interfaceinvoke r1.<com.android.server.pm.parsing.pkg.ParsedPackage: com.android.server.pm.parsing.pkg.ParsedPackage addUsesLibrary(int,java.lang.String)>(0, r3);

        goto label2;

     label1:
        $z2 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.util.Collection,java.lang.Object)>(r5, r2);

        if $z2 == 0 goto label2;

        interfaceinvoke r1.<com.android.server.pm.parsing.pkg.ParsedPackage: com.android.server.pm.parsing.pkg.ParsedPackage addUsesOptionalLibrary(int,java.lang.String)>(0, r3);

     label2:
        return;
    }

    void prefixRequiredLibrary(com.android.server.pm.parsing.pkg.ParsedPackage, java.lang.String)
    {
        com.android.server.pm.parsing.library.PackageSharedLibraryUpdater r0;
        com.android.server.pm.parsing.pkg.ParsedPackage r1;
        java.lang.String r2;
        java.util.List $r3, $r4;
        boolean $z0;

        r0 := @this: com.android.server.pm.parsing.library.PackageSharedLibraryUpdater;

        r1 := @parameter0: com.android.server.pm.parsing.pkg.ParsedPackage;

        r2 := @parameter1: java.lang.String;

        $r3 = interfaceinvoke r1.<com.android.server.pm.parsing.pkg.ParsedPackage: java.util.List getUsesLibraries()>();

        $r4 = interfaceinvoke r1.<com.android.server.pm.parsing.pkg.ParsedPackage: java.util.List getUsesOptionalLibraries()>();

        $z0 = staticinvoke <com.android.server.pm.parsing.library.PackageSharedLibraryUpdater: boolean isLibraryPresent(java.util.List,java.util.List,java.lang.String)>($r3, $r4, r2);

        if $z0 != 0 goto label1;

        interfaceinvoke r1.<com.android.server.pm.parsing.pkg.ParsedPackage: com.android.server.pm.parsing.pkg.ParsedPackage addUsesLibrary(int,java.lang.String)>(0, r2);

     label1:
        return;
    }

    public abstract void updatePackage(com.android.server.pm.parsing.pkg.ParsedPackage, boolean);
}
