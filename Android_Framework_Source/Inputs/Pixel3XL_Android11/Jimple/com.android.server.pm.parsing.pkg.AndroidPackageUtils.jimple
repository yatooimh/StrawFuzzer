public class com.android.server.pm.parsing.pkg.AndroidPackageUtils extends java.lang.Object
{

    private void <init>()
    {
        com.android.server.pm.parsing.pkg.AndroidPackageUtils r0;

        r0 := @this: com.android.server.pm.parsing.pkg.AndroidPackageUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean canHaveOatDir(com.android.server.pm.parsing.pkg.AndroidPackage, boolean)
    {
        com.android.server.pm.parsing.pkg.AndroidPackage r0;
        boolean z0, $z1, $z2;
        java.lang.String $r1;

        r0 := @parameter0: com.android.server.pm.parsing.pkg.AndroidPackage;

        z0 := @parameter1: boolean;

        $z1 = interfaceinvoke r0.<com.android.server.pm.parsing.pkg.AndroidPackage: boolean isSystem()>();

        if $z1 == 0 goto label1;

        if z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = interfaceinvoke r0.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getCodePath()>();

        $z2 = staticinvoke <android.os.incremental.IncrementalManager: boolean isIncrementalPath(java.lang.String)>($r1);

        if $z2 == 0 goto label2;

        return 0;

     label2:
        return 1;
    }

    public static com.android.internal.content.NativeLibraryHelper$Handle createNativeLibraryHandle(com.android.server.pm.parsing.pkg.AndroidPackage) throws java.io.IOException
    {
        com.android.server.pm.parsing.pkg.AndroidPackage r0;
        java.util.List $r1;
        boolean $z0, $z1, $z2;
        com.android.internal.content.NativeLibraryHelper$Handle $r2;

        r0 := @parameter0: com.android.server.pm.parsing.pkg.AndroidPackage;

        $r1 = staticinvoke <com.android.server.pm.parsing.pkg.AndroidPackageUtils: java.util.List getAllCodePaths(com.android.server.pm.parsing.pkg.AndroidPackage)>(r0);

        $z0 = interfaceinvoke r0.<com.android.server.pm.parsing.pkg.AndroidPackage: boolean isMultiArch()>();

        $z1 = interfaceinvoke r0.<com.android.server.pm.parsing.pkg.AndroidPackage: boolean isExtractNativeLibs()>();

        $z2 = interfaceinvoke r0.<com.android.server.pm.parsing.pkg.AndroidPackage: boolean isDebuggable()>();

        $r2 = staticinvoke <com.android.internal.content.NativeLibraryHelper$Handle: com.android.internal.content.NativeLibraryHelper$Handle create(java.util.List,boolean,boolean,boolean)>($r1, $z0, $z1, $z2);

        return $r2;
    }

    public static android.content.pm.SharedLibraryInfo createSharedLibraryForDynamic(com.android.server.pm.parsing.pkg.AndroidPackage, java.lang.String)
    {
        com.android.server.pm.parsing.pkg.AndroidPackage r0;
        java.lang.String r1, $r3, $r6;
        android.content.pm.SharedLibraryInfo $r2;
        java.util.List $r4;
        android.content.pm.VersionedPackage $r5;
        long $l0;

        r0 := @parameter0: com.android.server.pm.parsing.pkg.AndroidPackage;

        r1 := @parameter1: java.lang.String;

        $r2 = new android.content.pm.SharedLibraryInfo;

        $r3 = interfaceinvoke r0.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getPackageName()>();

        $r4 = staticinvoke <com.android.server.pm.parsing.pkg.AndroidPackageUtils: java.util.List getAllCodePaths(com.android.server.pm.parsing.pkg.AndroidPackage)>(r0);

        $r5 = new android.content.pm.VersionedPackage;

        $r6 = interfaceinvoke r0.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getPackageName()>();

        $l0 = interfaceinvoke r0.<com.android.server.pm.parsing.pkg.AndroidPackage: long getLongVersionCode()>();

        specialinvoke $r5.<android.content.pm.VersionedPackage: void <init>(java.lang.String,long)>($r6, $l0);

        specialinvoke $r2.<android.content.pm.SharedLibraryInfo: void <init>(java.lang.String,java.lang.String,java.util.List,java.lang.String,long,int,android.content.pm.VersionedPackage,java.util.List,java.util.List)>(null, $r3, $r4, r1, -1L, 1, $r5, null, null);

        return $r2;
    }

    public static android.content.pm.SharedLibraryInfo createSharedLibraryForStatic(com.android.server.pm.parsing.pkg.AndroidPackage)
    {
        com.android.server.pm.parsing.pkg.AndroidPackage r0;
        android.content.pm.SharedLibraryInfo $r1;
        java.lang.String $r2, $r4, $r6;
        java.util.List $r3;
        long $l0, $l1;
        android.content.pm.VersionedPackage $r5;

        r0 := @parameter0: com.android.server.pm.parsing.pkg.AndroidPackage;

        $r1 = new android.content.pm.SharedLibraryInfo;

        $r2 = interfaceinvoke r0.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getPackageName()>();

        $r3 = staticinvoke <com.android.server.pm.parsing.pkg.AndroidPackageUtils: java.util.List getAllCodePaths(com.android.server.pm.parsing.pkg.AndroidPackage)>(r0);

        $r4 = interfaceinvoke r0.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getStaticSharedLibName()>();

        $l0 = interfaceinvoke r0.<com.android.server.pm.parsing.pkg.AndroidPackage: long getStaticSharedLibVersion()>();

        $r5 = new android.content.pm.VersionedPackage;

        $r6 = interfaceinvoke r0.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getManifestPackageName()>();

        $l1 = interfaceinvoke r0.<com.android.server.pm.parsing.pkg.AndroidPackage: long getLongVersionCode()>();

        specialinvoke $r5.<android.content.pm.VersionedPackage: void <init>(java.lang.String,long)>($r6, $l1);

        specialinvoke $r1.<android.content.pm.SharedLibraryInfo: void <init>(java.lang.String,java.lang.String,java.util.List,java.lang.String,long,int,android.content.pm.VersionedPackage,java.util.List,java.util.List)>(null, $r2, $r3, $r4, $l0, 2, $r5, null, null);

        return $r1;
    }

    public static java.util.List getAllCodePaths(com.android.server.pm.parsing.pkg.AndroidPackage)
    {
        java.util.ArrayList $r0;
        java.lang.String $r1;
        boolean $z1;
        com.android.server.pm.parsing.pkg.AndroidPackage r2;
        com.android.server.pm.parsing.pkg.PackageImpl r3;
        java.lang.String[] r5;

        r2 := @parameter0: com.android.server.pm.parsing.pkg.AndroidPackage;

        r3 = (com.android.server.pm.parsing.pkg.PackageImpl) r2;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r1 = virtualinvoke r3.<com.android.server.pm.parsing.pkg.PackageImpl: java.lang.String getBaseCodePath()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        r5 = virtualinvoke r3.<com.android.server.pm.parsing.pkg.PackageImpl: java.lang.String[] getSplitCodePaths()>();

        $z1 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r5);

        if $z1 != 0 goto label1;

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>($r0, r5);

     label1:
        return $r0;
    }

    public static java.util.List getAllCodePathsExcludingResourceOnly(com.android.server.pm.parsing.pkg.AndroidPackage)
    {
        java.lang.String[] r1;
        java.util.ArrayList $r2;
        boolean $z0, $z1;
        int $i0, $i1, $i2, i3;
        int[] $r3;
        java.lang.String $r4, $r5;
        com.android.server.pm.parsing.pkg.AndroidPackage r6;
        com.android.server.pm.parsing.pkg.PackageImpl r7;

        r6 := @parameter0: com.android.server.pm.parsing.pkg.AndroidPackage;

        r7 = (com.android.server.pm.parsing.pkg.PackageImpl) r6;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $z0 = virtualinvoke r7.<com.android.server.pm.parsing.pkg.PackageImpl: boolean isHasCode()>();

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r7.<com.android.server.pm.parsing.pkg.PackageImpl: java.lang.String getBaseCodePath()>();

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

     label1:
        r1 = virtualinvoke r7.<com.android.server.pm.parsing.pkg.PackageImpl: java.lang.String[] getSplitCodePaths()>();

        $z1 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r1);

        if $z1 != 0 goto label4;

        i3 = 0;

     label2:
        $i0 = lengthof r1;

        if i3 >= $i0 goto label4;

        $r3 = virtualinvoke r7.<com.android.server.pm.parsing.pkg.PackageImpl: int[] getSplitFlags()>();

        $i1 = $r3[i3];

        $i2 = $i1 & 4;

        if $i2 == 0 goto label3;

        $r4 = r1[i3];

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        return $r2;
    }

    public static int getHiddenApiEnforcementPolicy(com.android.server.pm.parsing.pkg.AndroidPackage, com.android.server.pm.PackageSetting)
    {
        com.android.server.pm.parsing.pkg.AndroidPackage r0;
        com.android.server.pm.PackageSetting r1;
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        com.android.server.SystemConfig $r2;
        android.util.ArraySet $r3;
        java.lang.String $r4;
        com.android.server.pm.pkg.PackageStateUnserialized $r5;

        r0 := @parameter0: com.android.server.pm.parsing.pkg.AndroidPackage;

        r1 := @parameter1: com.android.server.pm.PackageSetting;

        $z0 = interfaceinvoke r0.<com.android.server.pm.parsing.pkg.AndroidPackage: boolean isSignedWithPlatformKey()>();

        if $z0 == 0 goto label1;

        z5 = 1;

        goto label6;

     label1:
        $z1 = interfaceinvoke r0.<com.android.server.pm.parsing.pkg.AndroidPackage: boolean isSystem()>();

        if $z1 != 0 goto label3;

        $r5 = virtualinvoke r1.<com.android.server.pm.PackageSetting: com.android.server.pm.pkg.PackageStateUnserialized getPkgState()>();

        $z4 = virtualinvoke $r5.<com.android.server.pm.pkg.PackageStateUnserialized: boolean isUpdatedSystemApp()>();

        if $z4 == 0 goto label2;

        goto label3;

     label2:
        z5 = 0;

        goto label6;

     label3:
        $z2 = interfaceinvoke r0.<com.android.server.pm.parsing.pkg.AndroidPackage: boolean isUsesNonSdkApi()>();

        if $z2 != 0 goto label5;

        $r2 = staticinvoke <com.android.server.SystemConfig: com.android.server.SystemConfig getInstance()>();

        $r3 = virtualinvoke $r2.<com.android.server.SystemConfig: android.util.ArraySet getHiddenApiWhitelistedApps()>();

        $r4 = interfaceinvoke r0.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getPackageName()>();

        $z3 = virtualinvoke $r3.<android.util.ArraySet: boolean contains(java.lang.Object)>($r4);

        if $z3 == 0 goto label4;

        goto label5;

     label4:
        z5 = 0;

        goto label6;

     label5:
        z5 = 1;

     label6:
        if z5 == 0 goto label7;

        return 0;

     label7:
        return 2;
    }

    public static int getIcon(android.content.pm.parsing.ParsingPackageRead)
    {
        android.content.pm.parsing.ParsingPackageRead r0;
        boolean $z0;
        int $i0, i1;

        r0 := @parameter0: android.content.pm.parsing.ParsingPackageRead;

        $z0 = <android.content.pm.PackageParser: boolean sUseRoundIcon>;

        if $z0 == 0 goto label1;

        $i0 = interfaceinvoke r0.<android.content.pm.parsing.ParsingPackageRead: int getRoundIconRes()>();

        if $i0 == 0 goto label1;

        i1 = interfaceinvoke r0.<android.content.pm.parsing.ParsingPackageRead: int getRoundIconRes()>();

        goto label2;

     label1:
        i1 = interfaceinvoke r0.<android.content.pm.parsing.ParsingPackageRead: int getIconRes()>();

     label2:
        return i1;
    }

    public static long getLongVersionCode(com.android.server.pm.parsing.pkg.AndroidPackage)
    {
        com.android.server.pm.parsing.pkg.AndroidPackage r0;
        int $i0, $i1;
        long $l2;

        r0 := @parameter0: com.android.server.pm.parsing.pkg.AndroidPackage;

        $i0 = interfaceinvoke r0.<com.android.server.pm.parsing.pkg.AndroidPackage: int getVersionCodeMajor()>();

        $i1 = interfaceinvoke r0.<com.android.server.pm.parsing.pkg.AndroidPackage: int getVersionCode()>();

        $l2 = staticinvoke <android.content.pm.PackageInfo: long composeLongVersionCode(int,int)>($i0, $i1);

        return $l2;
    }

    public static java.util.Map getPackageDexMetadata(com.android.server.pm.parsing.pkg.AndroidPackage)
    {
        com.android.server.pm.parsing.pkg.AndroidPackage r0;
        java.util.List $r1;
        java.util.Map $r2;

        r0 := @parameter0: com.android.server.pm.parsing.pkg.AndroidPackage;

        $r1 = staticinvoke <com.android.server.pm.parsing.pkg.AndroidPackageUtils: java.util.List getAllCodePaths(com.android.server.pm.parsing.pkg.AndroidPackage)>(r0);

        $r2 = staticinvoke <android.content.pm.dex.DexMetadataHelper: java.util.Map buildPackageApkToDexMetadataMap(java.util.List)>($r1);

        return $r2;
    }

    public static java.lang.String getPrimaryCpuAbi(com.android.server.pm.parsing.pkg.AndroidPackage, com.android.server.pm.PackageSetting)
    {
        com.android.server.pm.parsing.pkg.AndroidPackage r0;
        com.android.server.pm.PackageSetting r1;
        java.lang.String $r2, $r3, $r4;
        boolean $z0;

        r0 := @parameter0: com.android.server.pm.parsing.pkg.AndroidPackage;

        r1 := @parameter1: com.android.server.pm.PackageSetting;

        if r1 == null goto label2;

        $r3 = r1.<com.android.server.pm.PackageSetting: java.lang.String primaryCpuAbiString>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        $r4 = r1.<com.android.server.pm.PackageSetting: java.lang.String primaryCpuAbiString>;

        return $r4;

     label2:
        $r2 = interfaceinvoke r0.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getPrimaryCpuAbi()>();

        return $r2;
    }

    public static java.lang.String getRawPrimaryCpuAbi(com.android.server.pm.parsing.pkg.AndroidPackage)
    {
        com.android.server.pm.parsing.pkg.AndroidPackage r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.server.pm.parsing.pkg.AndroidPackage;

        $r1 = interfaceinvoke r0.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getPrimaryCpuAbi()>();

        return $r1;
    }

    public static java.lang.String getRawSecondaryCpuAbi(com.android.server.pm.parsing.pkg.AndroidPackage)
    {
        com.android.server.pm.parsing.pkg.AndroidPackage r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.server.pm.parsing.pkg.AndroidPackage;

        $r1 = interfaceinvoke r0.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getSecondaryCpuAbi()>();

        return $r1;
    }

    public static java.lang.String getSeInfo(com.android.server.pm.parsing.pkg.AndroidPackage, com.android.server.pm.PackageSetting)
    {
        com.android.server.pm.parsing.pkg.AndroidPackage r0;
        java.lang.String $r1, r4;
        com.android.server.pm.pkg.PackageStateUnserialized $r2;
        boolean $z0;
        com.android.server.pm.PackageSetting r3;

        r0 := @parameter0: com.android.server.pm.parsing.pkg.AndroidPackage;

        r3 := @parameter1: com.android.server.pm.PackageSetting;

        if r3 == null goto label1;

        $r2 = virtualinvoke r3.<com.android.server.pm.PackageSetting: com.android.server.pm.pkg.PackageStateUnserialized getPkgState()>();

        r4 = virtualinvoke $r2.<com.android.server.pm.pkg.PackageStateUnserialized: java.lang.String getOverrideSeInfo()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r4);

        if $z0 != 0 goto label1;

        return r4;

     label1:
        $r1 = interfaceinvoke r0.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getSeInfo()>();

        return $r1;
    }

    public static java.lang.String getSecondaryCpuAbi(com.android.server.pm.parsing.pkg.AndroidPackage, com.android.server.pm.PackageSetting)
    {
        com.android.server.pm.parsing.pkg.AndroidPackage r0;
        com.android.server.pm.PackageSetting r1;
        java.lang.String $r2, $r3, $r4;
        boolean $z0;

        r0 := @parameter0: com.android.server.pm.parsing.pkg.AndroidPackage;

        r1 := @parameter1: com.android.server.pm.PackageSetting;

        if r1 == null goto label2;

        $r3 = r1.<com.android.server.pm.PackageSetting: java.lang.String secondaryCpuAbiString>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        $r4 = r1.<com.android.server.pm.PackageSetting: java.lang.String secondaryCpuAbiString>;

        return $r4;

     label2:
        $r2 = interfaceinvoke r0.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getSecondaryCpuAbi()>();

        return $r2;
    }

    public static boolean hasComponentClassName(com.android.server.pm.parsing.pkg.AndroidPackage, java.lang.String)
    {
        java.lang.String r0, $r3, $r6, $r9, $r12, $r15;
        java.lang.Object $r1, $r4, $r7, $r10, $r13;
        android.content.pm.parsing.component.ParsedInstrumentation $r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.content.pm.parsing.component.ParsedService $r5;
        android.content.pm.parsing.component.ParsedProvider $r8;
        android.content.pm.parsing.component.ParsedActivity $r11, $r14;
        com.android.server.pm.parsing.pkg.AndroidPackage r16;
        java.util.List r17, r18, r19, r20, r21;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9;

        r16 := @parameter0: com.android.server.pm.parsing.pkg.AndroidPackage;

        r0 := @parameter1: java.lang.String;

        r17 = interfaceinvoke r16.<com.android.server.pm.parsing.pkg.AndroidPackage: java.util.List getActivities()>();

        i0 = interfaceinvoke r17.<java.util.List: int size()>();

        i1 = 0;

     label01:
        if i1 >= i0 goto label03;

        $r13 = interfaceinvoke r17.<java.util.List: java.lang.Object get(int)>(i1);

        $r14 = (android.content.pm.parsing.component.ParsedActivity) $r13;

        $r15 = virtualinvoke $r14.<android.content.pm.parsing.component.ParsedActivity: java.lang.String getName()>();

        $z4 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r0, $r15);

        if $z4 == 0 goto label02;

        return 1;

     label02:
        i1 = i1 + 1;

        goto label01;

     label03:
        r18 = interfaceinvoke r16.<com.android.server.pm.parsing.pkg.AndroidPackage: java.util.List getReceivers()>();

        i2 = interfaceinvoke r18.<java.util.List: int size()>();

        i3 = 0;

     label04:
        if i3 >= i2 goto label06;

        $r10 = interfaceinvoke r18.<java.util.List: java.lang.Object get(int)>(i3);

        $r11 = (android.content.pm.parsing.component.ParsedActivity) $r10;

        $r12 = virtualinvoke $r11.<android.content.pm.parsing.component.ParsedActivity: java.lang.String getName()>();

        $z3 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r0, $r12);

        if $z3 == 0 goto label05;

        return 1;

     label05:
        i3 = i3 + 1;

        goto label04;

     label06:
        r19 = interfaceinvoke r16.<com.android.server.pm.parsing.pkg.AndroidPackage: java.util.List getProviders()>();

        i4 = interfaceinvoke r19.<java.util.List: int size()>();

        i5 = 0;

     label07:
        if i5 >= i4 goto label09;

        $r7 = interfaceinvoke r19.<java.util.List: java.lang.Object get(int)>(i5);

        $r8 = (android.content.pm.parsing.component.ParsedProvider) $r7;

        $r9 = virtualinvoke $r8.<android.content.pm.parsing.component.ParsedProvider: java.lang.String getName()>();

        $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r0, $r9);

        if $z2 == 0 goto label08;

        return 1;

     label08:
        i5 = i5 + 1;

        goto label07;

     label09:
        r20 = interfaceinvoke r16.<com.android.server.pm.parsing.pkg.AndroidPackage: java.util.List getServices()>();

        i6 = interfaceinvoke r20.<java.util.List: int size()>();

        i7 = 0;

     label10:
        if i7 >= i6 goto label12;

        $r4 = interfaceinvoke r20.<java.util.List: java.lang.Object get(int)>(i7);

        $r5 = (android.content.pm.parsing.component.ParsedService) $r4;

        $r6 = virtualinvoke $r5.<android.content.pm.parsing.component.ParsedService: java.lang.String getName()>();

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r0, $r6);

        if $z1 == 0 goto label11;

        return 1;

     label11:
        i7 = i7 + 1;

        goto label10;

     label12:
        r21 = interfaceinvoke r16.<com.android.server.pm.parsing.pkg.AndroidPackage: java.util.List getInstrumentations()>();

        i8 = interfaceinvoke r21.<java.util.List: int size()>();

        i9 = 0;

     label13:
        if i9 >= i8 goto label15;

        $r1 = interfaceinvoke r21.<java.util.List: java.lang.Object get(int)>(i9);

        $r2 = (android.content.pm.parsing.component.ParsedInstrumentation) $r1;

        $r3 = virtualinvoke $r2.<android.content.pm.parsing.component.ParsedInstrumentation: java.lang.String getName()>();

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r0, $r3);

        if $z0 == 0 goto label14;

        return 1;

     label14:
        i9 = i9 + 1;

        goto label13;

     label15:
        return 0;
    }

    public static boolean isEncryptionAware(com.android.server.pm.parsing.pkg.AndroidPackage)
    {
        com.android.server.pm.parsing.pkg.AndroidPackage r0;
        boolean $z0, $z1, z2;

        r0 := @parameter0: com.android.server.pm.parsing.pkg.AndroidPackage;

        $z0 = interfaceinvoke r0.<com.android.server.pm.parsing.pkg.AndroidPackage: boolean isDirectBootAware()>();

        if $z0 != 0 goto label2;

        $z1 = interfaceinvoke r0.<com.android.server.pm.parsing.pkg.AndroidPackage: boolean isPartiallyDirectBootAware()>();

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    public static boolean isLibrary(com.android.server.pm.parsing.pkg.AndroidPackage)
    {
        com.android.server.pm.parsing.pkg.AndroidPackage r0;
        java.lang.String $r1;
        java.util.List $r2;
        boolean $z0, z1;

        r0 := @parameter0: com.android.server.pm.parsing.pkg.AndroidPackage;

        $r1 = interfaceinvoke r0.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getStaticSharedLibName()>();

        if $r1 != null goto label2;

        $r2 = interfaceinvoke r0.<com.android.server.pm.parsing.pkg.AndroidPackage: java.util.List getLibraryNames()>();

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        z1 = 0;

        goto label3;

     label2:
        z1 = 1;

     label3:
        return z1;
    }

    public static boolean isMatchForSystemOnly(com.android.server.pm.parsing.pkg.AndroidPackage, int)
    {
        com.android.server.pm.parsing.pkg.AndroidPackage r0;
        int i0, $i1;
        boolean $z0;

        r0 := @parameter0: com.android.server.pm.parsing.pkg.AndroidPackage;

        i0 := @parameter1: int;

        $i1 = 1048576 & i0;

        if $i1 == 0 goto label1;

        $z0 = interfaceinvoke r0.<com.android.server.pm.parsing.pkg.AndroidPackage: boolean isSystem()>();

        return $z0;

     label1:
        return 1;
    }

    public static void validatePackageDexMetadata(com.android.server.pm.parsing.pkg.AndroidPackage) throws android.content.pm.PackageParser$PackageParserException
    {
        java.util.Map $r0;
        java.util.Collection $r1;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.String $r3;
        com.android.server.pm.parsing.pkg.AndroidPackage r4;
        java.util.Iterator r5;

        r4 := @parameter0: com.android.server.pm.parsing.pkg.AndroidPackage;

        $r0 = staticinvoke <com.android.server.pm.parsing.pkg.AndroidPackageUtils: java.util.Map getPackageDexMetadata(com.android.server.pm.parsing.pkg.AndroidPackage)>(r4);

        $r1 = interfaceinvoke $r0.<java.util.Map: java.util.Collection values()>();

        r5 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.String) $r2;

        staticinvoke <android.content.pm.dex.DexMetadataHelper: void validateDexMetadataFile(java.lang.String)>($r3);

        goto label1;

     label2:
        return;
    }
}
