public final class com.android.server.pm.permission.BasePermission extends java.lang.Object
{
    static final java.lang.String TAG;
    public static final int TYPE_BUILTIN;
    public static final int TYPE_DYNAMIC;
    public static final int TYPE_NORMAL;
    private int[] gids;
    final java.lang.String name;
    android.content.pm.PermissionInfo pendingPermissionInfo;
    private boolean perUser;
    android.content.pm.parsing.component.ParsedPermission perm;
    int protectionLevel;
    java.lang.String sourcePackageName;
    final int type;
    int uid;

    public void <init>(java.lang.String, java.lang.String, int)
    {
        com.android.server.pm.permission.BasePermission r0;
        java.lang.String r1, r2;
        int i0;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.pm.permission.BasePermission: java.lang.String name> = r1;

        r0.<com.android.server.pm.permission.BasePermission: java.lang.String sourcePackageName> = r2;

        r0.<com.android.server.pm.permission.BasePermission: int type> = i0;

        r0.<com.android.server.pm.permission.BasePermission: int protectionLevel> = 2;

        return;
    }

    private static boolean comparePermissionInfos(android.content.pm.parsing.component.ParsedPermission, android.content.pm.PermissionInfo)
    {
        android.content.pm.parsing.component.ParsedPermission r0;
        android.content.pm.PermissionInfo r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r2, $r3, $r6, $r7;
        boolean $z0, $z1, $z2;
        java.lang.CharSequence $r4, $r5;

        r0 := @parameter0: android.content.pm.parsing.component.ParsedPermission;

        r1 := @parameter1: android.content.pm.PermissionInfo;

        $i0 = virtualinvoke r0.<android.content.pm.parsing.component.ParsedPermission: int getIcon()>();

        $i1 = r1.<android.content.pm.PermissionInfo: int icon>;

        if $i0 == $i1 goto label1;

        return 0;

     label1:
        $i2 = virtualinvoke r0.<android.content.pm.parsing.component.ParsedPermission: int getLogo()>();

        $i3 = r1.<android.content.pm.PermissionInfo: int logo>;

        if $i2 == $i3 goto label2;

        return 0;

     label2:
        $i4 = virtualinvoke r0.<android.content.pm.parsing.component.ParsedPermission: int getProtectionLevel()>();

        $i5 = r1.<android.content.pm.PermissionInfo: int protectionLevel>;

        if $i4 == $i5 goto label3;

        return 0;

     label3:
        $r2 = virtualinvoke r0.<android.content.pm.parsing.component.ParsedPermission: java.lang.String getName()>();

        $r3 = r1.<android.content.pm.PermissionInfo: java.lang.String name>;

        $z0 = staticinvoke <com.android.server.pm.permission.BasePermission: boolean compareStrings(java.lang.CharSequence,java.lang.CharSequence)>($r2, $r3);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        $r4 = virtualinvoke r0.<android.content.pm.parsing.component.ParsedPermission: java.lang.CharSequence getNonLocalizedLabel()>();

        $r5 = r1.<android.content.pm.PermissionInfo: java.lang.CharSequence nonLocalizedLabel>;

        $z1 = staticinvoke <com.android.server.pm.permission.BasePermission: boolean compareStrings(java.lang.CharSequence,java.lang.CharSequence)>($r4, $r5);

        if $z1 != 0 goto label5;

        return 0;

     label5:
        $r6 = virtualinvoke r0.<android.content.pm.parsing.component.ParsedPermission: java.lang.String getPackageName()>();

        $r7 = r1.<android.content.pm.PermissionInfo: java.lang.String packageName>;

        $z2 = staticinvoke <com.android.server.pm.permission.BasePermission: boolean compareStrings(java.lang.CharSequence,java.lang.CharSequence)>($r6, $r7);

        if $z2 != 0 goto label6;

        return 0;

     label6:
        return 1;
    }

    private static boolean compareStrings(java.lang.CharSequence, java.lang.CharSequence)
    {
        java.lang.CharSequence r0, r1;
        java.lang.Class $r2, $r3;
        boolean $z0, z1;

        r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: java.lang.CharSequence;

        z1 = 0;

        if r0 != null goto label2;

        if r1 != null goto label1;

        z1 = 1;

     label1:
        return z1;

     label2:
        if r1 != null goto label3;

        return 0;

     label3:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label4;

        return 0;

     label4:
        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    static com.android.server.pm.permission.BasePermission createOrUpdate(android.content.pm.PackageManagerInternal, com.android.server.pm.permission.BasePermission, android.content.pm.parsing.component.ParsedPermission, com.android.server.pm.parsing.pkg.AndroidPackage, java.util.Collection, boolean)
    {
        android.content.pm.parsing.component.ParsedPermission r0, r2, $r4, $r7, $r42, r57;
        java.util.Collection r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, z6, $z7;
        java.lang.String $r3, $r5, $r6, $r8, $r9, $r12, $r13, $r14, $r17, $r18, $r19, $r21, $r22, $r23, $r24, $r25, $r26, $r28, $r29, $r30, $r31, $r33, $r34, $r35, $r36, $r37, $r39, $r40, $r41, $r43, r51;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.StringBuilder $r11, $r16, $r20, $r27, $r38;
        com.android.server.pm.permission.BasePermission $r32, r45, r48, r50, r53;
        android.content.pm.PackageManagerInternal r44;
        com.android.server.pm.parsing.pkg.AndroidPackage r46, r47;

        r44 := @parameter0: android.content.pm.PackageManagerInternal;

        r45 := @parameter1: com.android.server.pm.permission.BasePermission;

        r0 := @parameter2: android.content.pm.parsing.component.ParsedPermission;

        r46 := @parameter3: com.android.server.pm.parsing.pkg.AndroidPackage;

        r1 := @parameter4: java.util.Collection;

        z0 := @parameter5: boolean;

        $r3 = interfaceinvoke r46.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getPackageName()>();

        virtualinvoke r44.<android.content.pm.PackageManagerInternal: com.android.server.pm.PackageSetting getPackageSetting(java.lang.String)>($r3);

        if r45 == null goto label07;

        $r35 = r45.<com.android.server.pm.permission.BasePermission: java.lang.String sourcePackageName>;

        $r36 = virtualinvoke r0.<android.content.pm.parsing.component.ParsedPermission: java.lang.String getPackageName()>();

        $z5 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r35, $r36);

        if $z5 != 0 goto label07;

        r2 = r45.<com.android.server.pm.permission.BasePermission: android.content.pm.parsing.component.ParsedPermission perm>;

        if r2 != null goto label01;

        z6 = 0;

        goto label03;

     label01:
        $r37 = virtualinvoke r2.<android.content.pm.parsing.component.ParsedPermission: java.lang.String getPackageName()>();

        r47 = virtualinvoke r44.<android.content.pm.PackageManagerInternal: com.android.server.pm.parsing.pkg.AndroidPackage getPackage(java.lang.String)>($r37);

        if r47 != null goto label02;

        z6 = 0;

        goto label03;

     label02:
        z6 = interfaceinvoke r47.<com.android.server.pm.parsing.pkg.AndroidPackage: boolean isSystem()>();

     label03:
        $z7 = interfaceinvoke r46.<com.android.server.pm.parsing.pkg.AndroidPackage: boolean isSystem()>();

        if $z7 == 0 goto label06;

        $i4 = r45.<com.android.server.pm.permission.BasePermission: int type>;

        if $i4 != 1 goto label04;

        $r42 = r45.<com.android.server.pm.permission.BasePermission: android.content.pm.parsing.component.ParsedPermission perm>;

        if $r42 != null goto label04;

        $i5 = virtualinvoke r0.<android.content.pm.parsing.component.ParsedPermission: int getFlags()>();

        $i6 = $i5 | 1073741824;

        virtualinvoke r0.<android.content.pm.parsing.component.ParsedPermission: android.content.pm.parsing.component.ParsedPermission setFlags(int)>($i6);

        r45.<com.android.server.pm.permission.BasePermission: android.content.pm.parsing.component.ParsedPermission perm> = r0;

        $i7 = interfaceinvoke r46.<com.android.server.pm.parsing.pkg.AndroidPackage: int getUid()>();

        r45.<com.android.server.pm.permission.BasePermission: int uid> = $i7;

        $r43 = virtualinvoke r0.<android.content.pm.parsing.component.ParsedPermission: java.lang.String getPackageName()>();

        r45.<com.android.server.pm.permission.BasePermission: java.lang.String sourcePackageName> = $r43;

        r48 = r45;

        goto label08;

     label04:
        if z6 != 0 goto label05;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("New decl ");

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r46);

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of permission  ");

        $r39 = virtualinvoke r0.<android.content.pm.parsing.component.ParsedPermission: java.lang.String getName()>();

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is system; overriding ");

        $r40 = r45.<com.android.server.pm.permission.BasePermission: java.lang.String sourcePackageName>;

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r41 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r41);

        r48 = null;

        goto label08;

     label05:
        r48 = r45;

        goto label08;

     label06:
        r48 = r45;

        goto label08;

     label07:
        r48 = r45;

     label08:
        r50 = r48;

        if r48 != null goto label09;

        $r32 = new com.android.server.pm.permission.BasePermission;

        $r33 = virtualinvoke r0.<android.content.pm.parsing.component.ParsedPermission: java.lang.String getName()>();

        $r34 = virtualinvoke r0.<android.content.pm.parsing.component.ParsedPermission: java.lang.String getPackageName()>();

        specialinvoke $r32.<com.android.server.pm.permission.BasePermission: void <init>(java.lang.String,java.lang.String,int)>($r33, $r34, 0);

        r50 = $r32;

     label09:
        $r4 = r50.<com.android.server.pm.permission.BasePermission: android.content.pm.parsing.component.ParsedPermission perm>;

        if $r4 != null goto label16;

        r51 = r50.<com.android.server.pm.permission.BasePermission: java.lang.String sourcePackageName>;

        if r51 == null goto label11;

        $r26 = virtualinvoke r0.<android.content.pm.parsing.component.ParsedPermission: java.lang.String getPackageName()>();

        $z4 = virtualinvoke r51.<java.lang.String: boolean equals(java.lang.Object)>($r26);

        if $z4 == 0 goto label10;

        goto label11;

     label10:
        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission ");

        $r28 = virtualinvoke r0.<android.content.pm.parsing.component.ParsedPermission: java.lang.String getName()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from package ");

        $r29 = virtualinvoke r0.<android.content.pm.parsing.component.ParsedPermission: java.lang.String getPackageName()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ignored: original from ");

        $r30 = r50.<com.android.server.pm.permission.BasePermission: java.lang.String sourcePackageName>;

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r31);

        goto label18;

     label11:
        $r13 = virtualinvoke r0.<android.content.pm.parsing.component.ParsedPermission: java.lang.String getName()>();

        r53 = staticinvoke <com.android.server.pm.permission.BasePermission: com.android.server.pm.permission.BasePermission findPermissionTree(java.util.Collection,java.lang.String)>(r1, $r13);

        if r53 == null goto label13;

        $r18 = r53.<com.android.server.pm.permission.BasePermission: java.lang.String sourcePackageName>;

        $r19 = virtualinvoke r0.<android.content.pm.parsing.component.ParsedPermission: java.lang.String getPackageName()>();

        $z3 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>($r19);

        if $z3 == 0 goto label12;

        goto label13;

     label12:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission ");

        $r21 = virtualinvoke r0.<android.content.pm.parsing.component.ParsedPermission: java.lang.String getName()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from package ");

        $r22 = virtualinvoke r0.<android.content.pm.parsing.component.ParsedPermission: java.lang.String getPackageName()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ignored: base tree ");

        $r23 = r53.<com.android.server.pm.permission.BasePermission: java.lang.String name>;

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is from package ");

        $r24 = r53.<com.android.server.pm.permission.BasePermission: java.lang.String sourcePackageName>;

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r25 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r25);

        goto label15;

     label13:
        $i1 = virtualinvoke r0.<android.content.pm.parsing.component.ParsedPermission: int getFlags()>();

        $i2 = 1073741824 | $i1;

        virtualinvoke r0.<android.content.pm.parsing.component.ParsedPermission: android.content.pm.parsing.component.ParsedPermission setFlags(int)>($i2);

        r50.<com.android.server.pm.permission.BasePermission: android.content.pm.parsing.component.ParsedPermission perm> = r0;

        $i3 = interfaceinvoke r46.<com.android.server.pm.parsing.pkg.AndroidPackage: int getUid()>();

        r50.<com.android.server.pm.permission.BasePermission: int uid> = $i3;

        $r14 = virtualinvoke r0.<android.content.pm.parsing.component.ParsedPermission: java.lang.String getPackageName()>();

        r50.<com.android.server.pm.permission.BasePermission: java.lang.String sourcePackageName> = $r14;

        if z0 == 0 goto label15;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>(int)>(256);

        goto label14;

     label14:
        $r17 = virtualinvoke r0.<android.content.pm.parsing.component.ParsedPermission: java.lang.String getName()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

     label15:
        goto label18;

     label16:
        if z0 == 0 goto label18;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(int)>(256);

        goto label17;

     label17:
        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DUP:");

        $r12 = virtualinvoke r0.<android.content.pm.parsing.component.ParsedPermission: java.lang.String getName()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

     label18:
        r57 = r50.<com.android.server.pm.permission.BasePermission: android.content.pm.parsing.component.ParsedPermission perm>;

        if r57 == null goto label19;

        $r5 = virtualinvoke r57.<android.content.pm.parsing.component.ParsedPermission: java.lang.String getPackageName()>();

        $r6 = virtualinvoke r0.<android.content.pm.parsing.component.ParsedPermission: java.lang.String getPackageName()>();

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r5, $r6);

        if $z1 == 0 goto label19;

        $r7 = r50.<com.android.server.pm.permission.BasePermission: android.content.pm.parsing.component.ParsedPermission perm>;

        $r8 = virtualinvoke $r7.<android.content.pm.parsing.component.ParsedPermission: java.lang.String getName()>();

        $r9 = virtualinvoke r0.<android.content.pm.parsing.component.ParsedPermission: java.lang.String getName()>();

        $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r8, $r9);

        if $z2 == 0 goto label19;

        $i0 = virtualinvoke r0.<android.content.pm.parsing.component.ParsedPermission: int getProtectionLevel()>();

        r50.<com.android.server.pm.permission.BasePermission: int protectionLevel> = $i0;

     label19:
        return r50;
    }

    static com.android.server.pm.permission.BasePermission enforcePermissionTree(java.util.Collection, java.lang.String, int)
    {
        int i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r0, $r5;
        java.lang.SecurityException $r3, $r13;
        java.lang.String $r4, $r9, $r14, r16;
        java.util.Collection r15;
        com.android.server.pm.permission.BasePermission r17;

        r15 := @parameter0: java.util.Collection;

        r16 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        if r16 == null goto label2;

        r17 = staticinvoke <com.android.server.pm.permission.BasePermission: com.android.server.pm.permission.BasePermission findPermissionTree(java.util.Collection,java.lang.String)>(r15, r16);

        if r17 == null goto label2;

        $i1 = r17.<com.android.server.pm.permission.BasePermission: int uid>;

        $i2 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        if $i1 != $i2 goto label1;

        return r17;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling uid ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not allowed to add to permission tree ");

        $r9 = r17.<com.android.server.pm.permission.BasePermission: java.lang.String name>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" owned by uid ");

        $i3 = r17.<com.android.server.pm.permission.BasePermission: int uid>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r13 = new java.lang.SecurityException;

        $r14 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.SecurityException: void <init>(java.lang.String)>($r14);

        throw $r13;

     label2:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No permission tree found for ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r3 = new java.lang.SecurityException;

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>($r4);

        throw $r3;
    }

    private static com.android.server.pm.permission.BasePermission findPermissionTree(java.util.Collection, java.lang.String)
    {
        java.lang.String r0, $r3, $r4, $r5;
        java.util.Iterator r1;
        boolean $z0, $z1;
        java.lang.Object $r2;
        int $i0, $i1, $i2;
        char $c3;
        java.util.Collection r6;
        com.android.server.pm.permission.BasePermission r7;

        r6 := @parameter0: java.util.Collection;

        r0 := @parameter1: java.lang.String;

        r1 = interfaceinvoke r6.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.android.server.pm.permission.BasePermission) $r2;

        $r3 = r7.<com.android.server.pm.permission.BasePermission: java.lang.String name>;

        $z1 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>($r3);

        if $z1 == 0 goto label2;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r4 = r7.<com.android.server.pm.permission.BasePermission: java.lang.String name>;

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 <= $i1 goto label2;

        $r5 = r7.<com.android.server.pm.permission.BasePermission: java.lang.String name>;

        $i2 = virtualinvoke $r5.<java.lang.String: int length()>();

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i2);

        if $c3 != 46 goto label2;

        return r7;

     label2:
        goto label1;

     label3:
        return null;
    }

    private static int readInt(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String, int)
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, $r9, $r11, r12, r13;
        int i0, i1;
        java.lang.Throwable $r2;
        java.lang.StringBuilder $r3;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r12 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r13 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(r12, r1);

        if r13 != null goto label1;

        return i0;

     label1:
        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r13);

     label2:
        return i1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: attribute ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has bad integer value ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r9 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r11);

        return i0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static boolean readLPw(java.util.Map, org.xmlpull.v1.XmlPullParser)
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, r2, $r3, $r6, $r8, $r9, $r12, $r15, $r16, $r17, r19, r22;
        boolean z0, $z1;
        java.lang.StringBuilder $r4;
        java.lang.Object $r10;
        com.android.server.pm.permission.BasePermission $r11, r20, r21;
        android.content.pm.PermissionInfo $r14;
        int $i0, $i1, $i2, i4, $i5;
        java.util.Map r18;
        byte b3;

        r18 := @parameter0: java.util.Map;

        r0 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r3 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z1 != 0 goto label1;

        return 0;

     label1:
        r1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "package");

        r19 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "type");

        if r1 == null goto label8;

        if r2 != null goto label2;

        goto label8;

     label2:
        $r9 = "dynamic";

        z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r19);

        $r10 = interfaceinvoke r18.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r20 = (com.android.server.pm.permission.BasePermission) $r10;

        if r20 == null goto label3;

        r21 = r20;

        $i2 = r20.<com.android.server.pm.permission.BasePermission: int type>;

        if $i2 == 1 goto label6;

     label3:
        r22 = virtualinvoke r1.<java.lang.String: java.lang.String intern()>();

        if z0 == 0 goto label4;

        b3 = 2;

        goto label5;

     label4:
        b3 = 0;

     label5:
        $r11 = new com.android.server.pm.permission.BasePermission;

        specialinvoke $r11.<com.android.server.pm.permission.BasePermission: void <init>(java.lang.String,java.lang.String,int)>(r22, r2, b3);

        r21 = $r11;

     label6:
        i4 = staticinvoke <com.android.server.pm.permission.BasePermission: int readInt(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String,int)>(r0, null, "protection", 0);

        r21.<com.android.server.pm.permission.BasePermission: int protectionLevel> = i4;

        $i5 = staticinvoke <android.content.pm.PermissionInfo: int fixProtectionLevel(int)>(i4);

        r21.<com.android.server.pm.permission.BasePermission: int protectionLevel> = $i5;

        if z0 == 0 goto label7;

        $r14 = new android.content.pm.PermissionInfo;

        specialinvoke $r14.<android.content.pm.PermissionInfo: void <init>()>();

        $r15 = virtualinvoke r2.<java.lang.String: java.lang.String intern()>();

        $r14.<android.content.pm.PermissionInfo: java.lang.String packageName> = $r15;

        $r16 = virtualinvoke r1.<java.lang.String: java.lang.String intern()>();

        $r14.<android.content.pm.PermissionInfo: java.lang.String name> = $r16;

        $i0 = staticinvoke <com.android.server.pm.permission.BasePermission: int readInt(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String,int)>(r0, null, "icon", 0);

        $r14.<android.content.pm.PermissionInfo: int icon> = $i0;

        $r17 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "label");

        $r14.<android.content.pm.PermissionInfo: java.lang.CharSequence nonLocalizedLabel> = $r17;

        $i1 = r21.<com.android.server.pm.permission.BasePermission: int protectionLevel>;

        $r14.<android.content.pm.PermissionInfo: int protectionLevel> = $i1;

        r21.<com.android.server.pm.permission.BasePermission: android.content.pm.PermissionInfo pendingPermissionInfo> = $r14;

     label7:
        $r12 = r21.<com.android.server.pm.permission.BasePermission: java.lang.String name>;

        interfaceinvoke r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, r21);

        return 1;

     label8:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in package manager settings: permissions has no name at ");

        $r6 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r8);

        return 0;
    }

    public boolean addToTree(int, android.content.pm.PermissionInfo, com.android.server.pm.permission.BasePermission)
    {
        com.android.server.pm.permission.BasePermission r0, r2;
        int i0, $i1, $i2, $i3, $i4;
        android.content.pm.PermissionInfo r1, $r8;
        android.content.pm.parsing.component.ParsedPermission r3, $r5, $r7, $r9, $r10;
        java.lang.String $r4, $r6;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.pm.PermissionInfo;

        r2 := @parameter2: com.android.server.pm.permission.BasePermission;

        $i1 = r0.<com.android.server.pm.permission.BasePermission: int protectionLevel>;

        if $i1 != i0 goto label2;

        r3 = r0.<com.android.server.pm.permission.BasePermission: android.content.pm.parsing.component.ParsedPermission perm>;

        if r3 == null goto label2;

        $i3 = r0.<com.android.server.pm.permission.BasePermission: int uid>;

        $i2 = r2.<com.android.server.pm.permission.BasePermission: int uid>;

        if $i3 != $i2 goto label2;

        $r4 = virtualinvoke r3.<android.content.pm.parsing.component.ParsedPermission: java.lang.String getPackageName()>();

        $r5 = r2.<com.android.server.pm.permission.BasePermission: android.content.pm.parsing.component.ParsedPermission perm>;

        $r6 = virtualinvoke $r5.<android.content.pm.parsing.component.ParsedPermission: java.lang.String getPackageName()>();

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r4, $r6);

        if $z0 == 0 goto label2;

        $r7 = r0.<com.android.server.pm.permission.BasePermission: android.content.pm.parsing.component.ParsedPermission perm>;

        $z1 = staticinvoke <com.android.server.pm.permission.BasePermission: boolean comparePermissionInfos(android.content.pm.parsing.component.ParsedPermission,android.content.pm.PermissionInfo)>($r7, r1);

        if $z1 != 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        r0.<com.android.server.pm.permission.BasePermission: int protectionLevel> = i0;

        $r8 = new android.content.pm.PermissionInfo;

        specialinvoke $r8.<android.content.pm.PermissionInfo: void <init>(android.content.pm.PermissionInfo)>(r1);

        $r8.<android.content.pm.PermissionInfo: int protectionLevel> = i0;

        $r9 = new android.content.pm.parsing.component.ParsedPermission;

        $r10 = r2.<com.android.server.pm.permission.BasePermission: android.content.pm.parsing.component.ParsedPermission perm>;

        specialinvoke $r9.<android.content.pm.parsing.component.ParsedPermission: void <init>(android.content.pm.parsing.component.ParsedPermission)>($r10);

        r0.<com.android.server.pm.permission.BasePermission: android.content.pm.parsing.component.ParsedPermission perm> = $r9;

        $i4 = r2.<com.android.server.pm.permission.BasePermission: int uid>;

        r0.<com.android.server.pm.permission.BasePermission: int uid> = $i4;

        return z2;
    }

    public int calculateFootprint(com.android.server.pm.permission.BasePermission)
    {
        com.android.server.pm.permission.BasePermission r0, r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r2;
        android.content.pm.parsing.component.ParsedPermission $r3;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        r1 := @parameter0: com.android.server.pm.permission.BasePermission;

        $i1 = r0.<com.android.server.pm.permission.BasePermission: int uid>;

        $i0 = r1.<com.android.server.pm.permission.BasePermission: int uid>;

        if $i1 != $i0 goto label1;

        $r2 = r1.<com.android.server.pm.permission.BasePermission: java.lang.String name>;

        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

        $r3 = r1.<com.android.server.pm.permission.BasePermission: android.content.pm.parsing.component.ParsedPermission perm>;

        $i3 = virtualinvoke $r3.<android.content.pm.parsing.component.ParsedPermission: int calculateFootprint()>();

        $i4 = $i2 + $i3;

        return $i4;

     label1:
        return 0;
    }

    public int[] computeGids(int)
    {
        com.android.server.pm.permission.BasePermission r0;
        int i0, $i1, $i2, $i3, $i4, i5;
        int[] r1, r2, $r3, $r4;
        boolean $z0;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        i0 := @parameter0: int;

        $z0 = r0.<com.android.server.pm.permission.BasePermission: boolean perUser>;

        if $z0 == 0 goto label3;

        $r4 = r0.<com.android.server.pm.permission.BasePermission: int[] gids>;

        $i1 = lengthof $r4;

        r1 = newarray (int)[$i1];

        i5 = 0;

     label1:
        r2 = r0.<com.android.server.pm.permission.BasePermission: int[] gids>;

        $i2 = lengthof r2;

        if i5 >= $i2 goto label2;

        $i3 = r2[i5];

        $i4 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(i0, $i3);

        r1[i5] = $i4;

        i5 = i5 + 1;

        goto label1;

     label2:
        return r1;

     label3:
        $r3 = r0.<com.android.server.pm.permission.BasePermission: int[] gids>;

        return $r3;
    }

    public boolean dumpPermissionsLPr(java.io.PrintWriter, java.lang.String, java.util.Set, boolean, boolean, com.android.server.pm.DumpState)
    {
        com.android.server.pm.permission.BasePermission r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r8, $r10, $r11, $r12, $r13, $r14, $r16, $r17, $r19, $r20;
        java.util.Set r3;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        com.android.server.pm.DumpState r4;
        android.content.pm.parsing.component.ParsedPermission $r5, $r6, $r7, $r9, $r18;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        int[] $r15;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.Set;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        r4 := @parameter5: com.android.server.pm.DumpState;

        if r2 == null goto label1;

        $r11 = r0.<com.android.server.pm.permission.BasePermission: java.lang.String sourcePackageName>;

        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z4 != 0 goto label1;

        return 0;

     label1:
        if r3 == null goto label2;

        $r10 = r0.<com.android.server.pm.permission.BasePermission: java.lang.String name>;

        $z3 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>($r10);

        if $z3 != 0 goto label2;

        return 0;

     label2:
        if z1 != 0 goto label4;

        $z2 = virtualinvoke r4.<com.android.server.pm.DumpState: boolean onTitlePrinted()>();

        if $z2 == 0 goto label3;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label3:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Permissions:");

     label4:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  Permission [");

        $r12 = r0.<com.android.server.pm.permission.BasePermission: java.lang.String name>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r12);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("] (");

        $i5 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r13 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r13);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("):");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    sourcePackage=");

        $r14 = r0.<com.android.server.pm.permission.BasePermission: java.lang.String sourcePackageName>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r14);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    uid=");

        $i6 = r0.<com.android.server.pm.permission.BasePermission: int uid>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i6);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" gids=");

        $r15 = virtualinvoke r0.<com.android.server.pm.permission.BasePermission: int[] computeGids(int)>(0);

        $r16 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>($r15);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r16);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" type=");

        $i7 = r0.<com.android.server.pm.permission.BasePermission: int type>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i7);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" prot=");

        $i8 = r0.<com.android.server.pm.permission.BasePermission: int protectionLevel>;

        $r17 = staticinvoke <android.content.pm.PermissionInfo: java.lang.String protectionToString(int)>($i8);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r17);

        $r18 = r0.<com.android.server.pm.permission.BasePermission: android.content.pm.parsing.component.ParsedPermission perm>;

        if $r18 == null goto label6;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    perm=");

        $r5 = r0.<com.android.server.pm.permission.BasePermission: android.content.pm.parsing.component.ParsedPermission perm>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r5);

        $r6 = r0.<com.android.server.pm.permission.BasePermission: android.content.pm.parsing.component.ParsedPermission perm>;

        $i0 = virtualinvoke $r6.<android.content.pm.parsing.component.ParsedPermission: int getFlags()>();

        $i1 = $i0 & 1073741824;

        if $i1 == 0 goto label5;

        $r9 = r0.<com.android.server.pm.permission.BasePermission: android.content.pm.parsing.component.ParsedPermission perm>;

        $i3 = virtualinvoke $r9.<android.content.pm.parsing.component.ParsedPermission: int getFlags()>();

        $i4 = $i3 & 2;

        if $i4 == 0 goto label6;

     label5:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    flags=0x");

        $r7 = r0.<com.android.server.pm.permission.BasePermission: android.content.pm.parsing.component.ParsedPermission perm>;

        $i2 = virtualinvoke $r7.<android.content.pm.parsing.component.ParsedPermission: int getFlags()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r8);

     label6:
        $r19 = "android.permission.READ_EXTERNAL_STORAGE";

        $r20 = r0.<com.android.server.pm.permission.BasePermission: java.lang.String name>;

        $z5 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>($r20);

        if $z5 == 0 goto label7;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    enforced=");

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>(z0);

     label7:
        return 1;
    }

    public void enforceDeclaredUsedAndRuntimeOrDevelopment(com.android.server.pm.parsing.pkg.AndroidPackage, com.android.server.pm.PackageSetting)
    {
        com.android.server.pm.permission.BasePermission r0;
        com.android.server.pm.parsing.pkg.AndroidPackage r1;
        int i0;
        java.util.List $r2;
        java.lang.String $r3, $r4, $r7, $r10, $r14, $r17, $r20, $r23;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r5, $r15;
        java.lang.SecurityException $r13, $r22;
        com.android.server.pm.PackageSetting r24;
        com.android.server.pm.permission.PermissionsState r25;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        r1 := @parameter0: com.android.server.pm.parsing.pkg.AndroidPackage;

        r24 := @parameter1: com.android.server.pm.PackageSetting;

        r25 = virtualinvoke r24.<com.android.server.pm.PackageSetting: com.android.server.pm.permission.PermissionsState getPermissionsState()>();

        $r2 = interfaceinvoke r1.<com.android.server.pm.parsing.pkg.AndroidPackage: java.util.List getRequestedPermissions()>();

        $r3 = r0.<com.android.server.pm.permission.BasePermission: java.lang.String name>;

        i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>($r3);

        $r4 = r0.<com.android.server.pm.permission.BasePermission: java.lang.String name>;

        $z0 = virtualinvoke r25.<com.android.server.pm.permission.PermissionsState: boolean hasRequestedPermission(java.lang.String)>($r4);

        if $z0 != 0 goto label2;

        if i0 == -1 goto label1;

        goto label2;

     label1:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r17 = interfaceinvoke r1.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getPackageName()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has not requested permission ");

        $r20 = r0.<com.android.server.pm.permission.BasePermission: java.lang.String name>;

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = new java.lang.SecurityException;

        $r23 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.lang.SecurityException: void <init>(java.lang.String)>($r23);

        throw $r22;

     label2:
        $z1 = virtualinvoke r0.<com.android.server.pm.permission.BasePermission: boolean isRuntime()>();

        if $z1 != 0 goto label4;

        $z2 = virtualinvoke r0.<com.android.server.pm.permission.BasePermission: boolean isDevelopment()>();

        if $z2 == 0 goto label3;

        goto label4;

     label3:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission ");

        $r7 = r0.<com.android.server.pm.permission.BasePermission: java.lang.String name>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requested by ");

        $r10 = interfaceinvoke r1.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getPackageName()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a changeable permission type");

        $r13 = new java.lang.SecurityException;

        $r14 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.SecurityException: void <init>(java.lang.String)>($r14);

        throw $r13;

     label4:
        return;
    }

    public android.content.pm.PermissionInfo generatePermissionInfo(int, int)
    {
        com.android.server.pm.permission.BasePermission r0;
        int i0, i1, $i2, $i3;
        android.content.pm.PermissionInfo r1, $r3, $r8, r9;
        android.content.pm.parsing.component.ParsedPermission $r2, $r7;
        java.lang.String $r4, $r5, $r6;
        boolean z0;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<com.android.server.pm.permission.BasePermission: android.content.pm.parsing.component.ParsedPermission perm>;

        if $r2 == null goto label4;

        $i3 = r0.<com.android.server.pm.permission.BasePermission: int protectionLevel>;

        if $i3 == i0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        $r7 = r0.<com.android.server.pm.permission.BasePermission: android.content.pm.parsing.component.ParsedPermission perm>;

        r1 = staticinvoke <com.android.server.pm.parsing.PackageInfoUtils: android.content.pm.PermissionInfo generatePermissionInfo(android.content.pm.parsing.component.ParsedPermission,int)>($r7, i1);

        r9 = r1;

        if z0 == 0 goto label3;

        $r8 = new android.content.pm.PermissionInfo;

        specialinvoke $r8.<android.content.pm.PermissionInfo: void <init>(android.content.pm.PermissionInfo)>(r1);

        r9 = $r8;

        $r8.<android.content.pm.PermissionInfo: int protectionLevel> = i0;

     label3:
        return r9;

     label4:
        $r3 = new android.content.pm.PermissionInfo;

        specialinvoke $r3.<android.content.pm.PermissionInfo: void <init>()>();

        $r4 = r0.<com.android.server.pm.permission.BasePermission: java.lang.String name>;

        $r3.<android.content.pm.PermissionInfo: java.lang.String name> = $r4;

        $r5 = r0.<com.android.server.pm.permission.BasePermission: java.lang.String sourcePackageName>;

        $r3.<android.content.pm.PermissionInfo: java.lang.String packageName> = $r5;

        $r6 = r0.<com.android.server.pm.permission.BasePermission: java.lang.String name>;

        $r3.<android.content.pm.PermissionInfo: java.lang.CharSequence nonLocalizedLabel> = $r6;

        $i2 = r0.<com.android.server.pm.permission.BasePermission: int protectionLevel>;

        $r3.<android.content.pm.PermissionInfo: int protectionLevel> = $i2;

        return $r3;
    }

    public android.content.pm.PermissionInfo generatePermissionInfo(java.lang.String, int)
    {
        com.android.server.pm.permission.BasePermission r0;
        int i0, $i1;
        android.content.pm.parsing.component.ParsedPermission r1, $r3, r8;
        java.lang.String $r2, $r6, r7;
        boolean $z0;
        android.content.pm.PermissionInfo $r4, $r5;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        r7 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if r7 != null goto label2;

        r8 = r0.<com.android.server.pm.permission.BasePermission: android.content.pm.parsing.component.ParsedPermission perm>;

        if r8 == null goto label1;

        $r6 = virtualinvoke r8.<android.content.pm.parsing.component.ParsedPermission: java.lang.String getGroup()>();

        if $r6 != null goto label3;

     label1:
        $i1 = r0.<com.android.server.pm.permission.BasePermission: int protectionLevel>;

        $r5 = virtualinvoke r0.<com.android.server.pm.permission.BasePermission: android.content.pm.PermissionInfo generatePermissionInfo(int,int)>($i1, i0);

        return $r5;

     label2:
        r1 = r0.<com.android.server.pm.permission.BasePermission: android.content.pm.parsing.component.ParsedPermission perm>;

        if r1 == null goto label3;

        $r2 = virtualinvoke r1.<android.content.pm.parsing.component.ParsedPermission: java.lang.String getGroup()>();

        $z0 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label3;

        $r3 = r0.<com.android.server.pm.permission.BasePermission: android.content.pm.parsing.component.ParsedPermission perm>;

        $r4 = staticinvoke <com.android.server.pm.parsing.PackageInfoUtils: android.content.pm.PermissionInfo generatePermissionInfo(android.content.pm.parsing.component.ParsedPermission,int)>($r3, i0);

        return $r4;

     label3:
        return null;
    }

    public java.lang.String getName()
    {
        com.android.server.pm.permission.BasePermission r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        $r1 = r0.<com.android.server.pm.permission.BasePermission: java.lang.String name>;

        return $r1;
    }

    public int getProtectionLevel()
    {
        com.android.server.pm.permission.BasePermission r0;
        int $i0;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        $i0 = r0.<com.android.server.pm.permission.BasePermission: int protectionLevel>;

        return $i0;
    }

    public java.lang.String getSourcePackageName()
    {
        com.android.server.pm.permission.BasePermission r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        $r1 = r0.<com.android.server.pm.permission.BasePermission: java.lang.String sourcePackageName>;

        return $r1;
    }

    public int getType()
    {
        com.android.server.pm.permission.BasePermission r0;
        int $i0;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        $i0 = r0.<com.android.server.pm.permission.BasePermission: int type>;

        return $i0;
    }

    public int getUid()
    {
        com.android.server.pm.permission.BasePermission r0;
        int $i0;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        $i0 = r0.<com.android.server.pm.permission.BasePermission: int uid>;

        return $i0;
    }

    public boolean isAppOp()
    {
        com.android.server.pm.permission.BasePermission r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        $i0 = r0.<com.android.server.pm.permission.BasePermission: int protectionLevel>;

        $i1 = $i0 & 64;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isAppPredictor()
    {
        com.android.server.pm.permission.BasePermission r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        $i0 = r0.<com.android.server.pm.permission.BasePermission: int protectionLevel>;

        $i1 = $i0 & 2097152;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isCompanion()
    {
        com.android.server.pm.permission.BasePermission r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        $i0 = r0.<com.android.server.pm.permission.BasePermission: int protectionLevel>;

        $i1 = $i0 & 8388608;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isConfigurator()
    {
        com.android.server.pm.permission.BasePermission r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        $i0 = r0.<com.android.server.pm.permission.BasePermission: int protectionLevel>;

        $i1 = $i0 & 524288;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isDevelopment()
    {
        com.android.server.pm.permission.BasePermission r0;
        boolean $z0, z1;
        int $i0, $i1;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        $z0 = virtualinvoke r0.<com.android.server.pm.permission.BasePermission: boolean isSignature()>();

        if $z0 == 0 goto label1;

        $i0 = r0.<com.android.server.pm.permission.BasePermission: int protectionLevel>;

        $i1 = $i0 & 32;

        if $i1 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public boolean isDocumenter()
    {
        com.android.server.pm.permission.BasePermission r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        $i0 = r0.<com.android.server.pm.permission.BasePermission: int protectionLevel>;

        $i1 = $i0 & 262144;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isDynamic()
    {
        com.android.server.pm.permission.BasePermission r0;
        int $i0;
        boolean z0;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        $i0 = r0.<com.android.server.pm.permission.BasePermission: int type>;

        if $i0 != 2 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isHardOrSoftRestricted()
    {
        com.android.server.pm.permission.BasePermission r0;
        android.content.pm.parsing.component.ParsedPermission r1;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        r1 = r0.<com.android.server.pm.permission.BasePermission: android.content.pm.parsing.component.ParsedPermission perm>;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<android.content.pm.parsing.component.ParsedPermission: int getFlags()>();

        $i1 = $i0 & 12;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isHardRestricted()
    {
        com.android.server.pm.permission.BasePermission r0;
        android.content.pm.parsing.component.ParsedPermission r1;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        r1 = r0.<com.android.server.pm.permission.BasePermission: android.content.pm.parsing.component.ParsedPermission perm>;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<android.content.pm.parsing.component.ParsedPermission: int getFlags()>();

        $i1 = $i0 & 4;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isImmutablyRestricted()
    {
        com.android.server.pm.permission.BasePermission r0;
        android.content.pm.parsing.component.ParsedPermission r1;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        r1 = r0.<com.android.server.pm.permission.BasePermission: android.content.pm.parsing.component.ParsedPermission perm>;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<android.content.pm.parsing.component.ParsedPermission: int getFlags()>();

        $i1 = $i0 & 16;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isIncidentReportApprover()
    {
        com.android.server.pm.permission.BasePermission r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        $i0 = r0.<com.android.server.pm.permission.BasePermission: int protectionLevel>;

        $i1 = $i0 & 1048576;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isInstaller()
    {
        com.android.server.pm.permission.BasePermission r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        $i0 = r0.<com.android.server.pm.permission.BasePermission: int protectionLevel>;

        $i1 = $i0 & 256;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isInstant()
    {
        com.android.server.pm.permission.BasePermission r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        $i0 = r0.<com.android.server.pm.permission.BasePermission: int protectionLevel>;

        $i1 = $i0 & 4096;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isNormal()
    {
        com.android.server.pm.permission.BasePermission r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        $i0 = r0.<com.android.server.pm.permission.BasePermission: int protectionLevel>;

        $i1 = $i0 & 15;

        if $i1 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isOEM()
    {
        com.android.server.pm.permission.BasePermission r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        $i0 = r0.<com.android.server.pm.permission.BasePermission: int protectionLevel>;

        $i1 = $i0 & 16384;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isPermission(android.content.pm.parsing.component.ParsedPermission)
    {
        com.android.server.pm.permission.BasePermission r0;
        android.content.pm.parsing.component.ParsedPermission r1, r2, $r5;
        java.lang.String $r3, $r4, $r6, $r7;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        r1 := @parameter0: android.content.pm.parsing.component.ParsedPermission;

        r2 = r0.<com.android.server.pm.permission.BasePermission: android.content.pm.parsing.component.ParsedPermission perm>;

        z2 = 0;

        if r2 != null goto label1;

        return 0;

     label1:
        $r3 = virtualinvoke r2.<android.content.pm.parsing.component.ParsedPermission: java.lang.String getPackageName()>();

        $r4 = virtualinvoke r1.<android.content.pm.parsing.component.ParsedPermission: java.lang.String getPackageName()>();

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $z0 == 0 goto label2;

        $r5 = r0.<com.android.server.pm.permission.BasePermission: android.content.pm.parsing.component.ParsedPermission perm>;

        $r6 = virtualinvoke $r5.<android.content.pm.parsing.component.ParsedPermission: java.lang.String getName()>();

        $r7 = virtualinvoke r1.<android.content.pm.parsing.component.ParsedPermission: java.lang.String getName()>();

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r7);

        if $z1 == 0 goto label2;

        z2 = 1;

        goto label2;

     label2:
        return z2;
    }

    public boolean isPre23()
    {
        com.android.server.pm.permission.BasePermission r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        $i0 = r0.<com.android.server.pm.permission.BasePermission: int protectionLevel>;

        $i1 = $i0 & 128;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isPreInstalled()
    {
        com.android.server.pm.permission.BasePermission r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        $i0 = r0.<com.android.server.pm.permission.BasePermission: int protectionLevel>;

        $i1 = $i0 & 1024;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isPrivileged()
    {
        com.android.server.pm.permission.BasePermission r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        $i0 = r0.<com.android.server.pm.permission.BasePermission: int protectionLevel>;

        $i1 = $i0 & 16;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isRemoved()
    {
        com.android.server.pm.permission.BasePermission r0;
        android.content.pm.parsing.component.ParsedPermission r1;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        r1 = r0.<com.android.server.pm.permission.BasePermission: android.content.pm.parsing.component.ParsedPermission perm>;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<android.content.pm.parsing.component.ParsedPermission: int getFlags()>();

        $i1 = $i0 & 2;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isRetailDemo()
    {
        com.android.server.pm.permission.BasePermission r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        $i0 = r0.<com.android.server.pm.permission.BasePermission: int protectionLevel>;

        $i1 = $i0 & 16777216;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isRuntime()
    {
        com.android.server.pm.permission.BasePermission r0;
        int i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        i0 = r0.<com.android.server.pm.permission.BasePermission: int protectionLevel>;

        z0 = 1;

        $i1 = i0 & 15;

        if $i1 != 1 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isRuntimeOnly()
    {
        com.android.server.pm.permission.BasePermission r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        $i0 = r0.<com.android.server.pm.permission.BasePermission: int protectionLevel>;

        $i1 = $i0 & 8192;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isSetup()
    {
        com.android.server.pm.permission.BasePermission r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        $i0 = r0.<com.android.server.pm.permission.BasePermission: int protectionLevel>;

        $i1 = $i0 & 2048;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isSignature()
    {
        com.android.server.pm.permission.BasePermission r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        $i0 = r0.<com.android.server.pm.permission.BasePermission: int protectionLevel>;

        $i1 = $i0 & 15;

        if $i1 != 2 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isSoftRestricted()
    {
        com.android.server.pm.permission.BasePermission r0;
        android.content.pm.parsing.component.ParsedPermission r1;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        r1 = r0.<com.android.server.pm.permission.BasePermission: android.content.pm.parsing.component.ParsedPermission perm>;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<android.content.pm.parsing.component.ParsedPermission: int getFlags()>();

        $i1 = $i0 & 8;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isSystemTextClassifier()
    {
        com.android.server.pm.permission.BasePermission r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        $i0 = r0.<com.android.server.pm.permission.BasePermission: int protectionLevel>;

        $i1 = $i0 & 65536;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isVendorPrivileged()
    {
        com.android.server.pm.permission.BasePermission r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        $i0 = r0.<com.android.server.pm.permission.BasePermission: int protectionLevel>;

        $i1 = $i0 & 32768;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isVerifier()
    {
        com.android.server.pm.permission.BasePermission r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        $i0 = r0.<com.android.server.pm.permission.BasePermission: int protectionLevel>;

        $i1 = $i0 & 512;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isWellbeing()
    {
        com.android.server.pm.permission.BasePermission r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        $i0 = r0.<com.android.server.pm.permission.BasePermission: int protectionLevel>;

        $i1 = $i0 & 131072;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void setGids(int[], boolean)
    {
        com.android.server.pm.permission.BasePermission r0;
        int[] r1;
        boolean z0;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        r1 := @parameter0: int[];

        z0 := @parameter1: boolean;

        r0.<com.android.server.pm.permission.BasePermission: int[] gids> = r1;

        r0.<com.android.server.pm.permission.BasePermission: boolean perUser> = z0;

        return;
    }

    public void setPermission(android.content.pm.parsing.component.ParsedPermission)
    {
        com.android.server.pm.permission.BasePermission r0;
        android.content.pm.parsing.component.ParsedPermission r1;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        r1 := @parameter0: android.content.pm.parsing.component.ParsedPermission;

        r0.<com.android.server.pm.permission.BasePermission: android.content.pm.parsing.component.ParsedPermission perm> = r1;

        return;
    }

    public java.lang.String toString()
    {
        com.android.server.pm.permission.BasePermission r0;
        java.lang.StringBuilder $r2;
        int $i0;
        java.lang.String $r4, $r7, $r10;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BasePermission{");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = r0.<com.android.server.pm.permission.BasePermission: java.lang.String name>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public void transfer(java.lang.String, java.lang.String)
    {
        com.android.server.pm.permission.BasePermission r0;
        java.lang.String r1, $r2, r3;
        boolean $z0;
        android.content.pm.PermissionInfo r4;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        r3 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<com.android.server.pm.permission.BasePermission: java.lang.String sourcePackageName>;

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        return;

     label1:
        r0.<com.android.server.pm.permission.BasePermission: java.lang.String sourcePackageName> = r1;

        r0.<com.android.server.pm.permission.BasePermission: android.content.pm.parsing.component.ParsedPermission perm> = null;

        r4 = r0.<com.android.server.pm.permission.BasePermission: android.content.pm.PermissionInfo pendingPermissionInfo>;

        if r4 == null goto label2;

        r4.<android.content.pm.PermissionInfo: java.lang.String packageName> = r1;

     label2:
        r0.<com.android.server.pm.permission.BasePermission: int uid> = 0;

        virtualinvoke r0.<com.android.server.pm.permission.BasePermission: void setGids(int[],boolean)>(null, 0);

        return;
    }

    public void updateDynamicPermission(java.util.Collection)
    {
        com.android.server.pm.permission.BasePermission r0, r10;
        android.content.pm.parsing.component.ParsedPermission r1, $r4, $r5;
        android.content.pm.PermissionInfo $r2, $r6;
        java.lang.String $r3, $r7, $r8;
        int $i0;
        java.util.Collection r9;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        r9 := @parameter0: java.util.Collection;

        $r2 = r0.<com.android.server.pm.permission.BasePermission: android.content.pm.PermissionInfo pendingPermissionInfo>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.server.pm.permission.BasePermission: java.lang.String name>;

        r10 = staticinvoke <com.android.server.pm.permission.BasePermission: com.android.server.pm.permission.BasePermission findPermissionTree(java.util.Collection,java.lang.String)>(r9, $r3);

        if r10 == null goto label1;

        $r4 = r10.<com.android.server.pm.permission.BasePermission: android.content.pm.parsing.component.ParsedPermission perm>;

        if $r4 == null goto label1;

        r1 = r10.<com.android.server.pm.permission.BasePermission: android.content.pm.parsing.component.ParsedPermission perm>;

        $r5 = new android.content.pm.parsing.component.ParsedPermission;

        $r6 = r0.<com.android.server.pm.permission.BasePermission: android.content.pm.PermissionInfo pendingPermissionInfo>;

        $r7 = virtualinvoke r1.<android.content.pm.parsing.component.ParsedPermission: java.lang.String getPackageName()>();

        $r8 = r0.<com.android.server.pm.permission.BasePermission: java.lang.String name>;

        specialinvoke $r5.<android.content.pm.parsing.component.ParsedPermission: void <init>(android.content.pm.parsing.component.ParsedPermission,android.content.pm.PermissionInfo,java.lang.String,java.lang.String)>(r1, $r6, $r7, $r8);

        r0.<com.android.server.pm.permission.BasePermission: android.content.pm.parsing.component.ParsedPermission perm> = $r5;

        $i0 = r10.<com.android.server.pm.permission.BasePermission: int uid>;

        r0.<com.android.server.pm.permission.BasePermission: int uid> = $i0;

     label1:
        return;
    }

    public void writeLPr(org.xmlpull.v1.XmlSerializer) throws java.io.IOException
    {
        com.android.server.pm.permission.BasePermission r0;
        org.xmlpull.v1.XmlSerializer r1;
        java.lang.String $r2, $r4, $r6, $r13, $r15, $r18;
        int $i0, i1, i2;
        android.content.pm.parsing.component.ParsedPermission $r9, r20, r21;
        android.content.pm.PermissionInfo $r11, $r12, $r17;
        java.lang.CharSequence r22;

        r0 := @this: com.android.server.pm.permission.BasePermission;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $r2 = r0.<com.android.server.pm.permission.BasePermission: java.lang.String sourcePackageName>;

        if $r2 != null goto label1;

        return;

     label1:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        $r4 = r0.<com.android.server.pm.permission.BasePermission: java.lang.String name>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r4);

        $r6 = r0.<com.android.server.pm.permission.BasePermission: java.lang.String sourcePackageName>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "package", $r6);

        i1 = r0.<com.android.server.pm.permission.BasePermission: int protectionLevel>;

        if i1 == 0 goto label2;

        $r18 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "protection", $r18);

     label2:
        $i0 = r0.<com.android.server.pm.permission.BasePermission: int type>;

        if $i0 != 2 goto label9;

        $r9 = r0.<com.android.server.pm.permission.BasePermission: android.content.pm.parsing.component.ParsedPermission perm>;

        if $r9 != null goto label3;

        $r17 = r0.<com.android.server.pm.permission.BasePermission: android.content.pm.PermissionInfo pendingPermissionInfo>;

        if $r17 == null goto label9;

     label3:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "dynamic");

        r20 = r0.<com.android.server.pm.permission.BasePermission: android.content.pm.parsing.component.ParsedPermission perm>;

        if r20 == null goto label4;

        i2 = virtualinvoke r20.<android.content.pm.parsing.component.ParsedPermission: int getIcon()>();

        goto label5;

     label4:
        $r11 = r0.<com.android.server.pm.permission.BasePermission: android.content.pm.PermissionInfo pendingPermissionInfo>;

        i2 = $r11.<android.content.pm.PermissionInfo: int icon>;

     label5:
        r21 = r0.<com.android.server.pm.permission.BasePermission: android.content.pm.parsing.component.ParsedPermission perm>;

        if r21 == null goto label6;

        r22 = virtualinvoke r21.<android.content.pm.parsing.component.ParsedPermission: java.lang.CharSequence getNonLocalizedLabel()>();

        goto label7;

     label6:
        $r12 = r0.<com.android.server.pm.permission.BasePermission: android.content.pm.PermissionInfo pendingPermissionInfo>;

        r22 = $r12.<android.content.pm.PermissionInfo: java.lang.CharSequence nonLocalizedLabel>;

     label7:
        if i2 == 0 goto label8;

        $r15 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i2);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "icon", $r15);

     label8:
        if r22 == null goto label9;

        $r13 = interfaceinvoke r22.<java.lang.CharSequence: java.lang.String toString()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "label", $r13);

     label9:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.pm.permission.BasePermission: int TYPE_NORMAL> = 0;

        <com.android.server.pm.permission.BasePermission: int TYPE_DYNAMIC> = 2;

        <com.android.server.pm.permission.BasePermission: int TYPE_BUILTIN> = 1;

        <com.android.server.pm.permission.BasePermission: java.lang.String TAG> = "PackageManager";

        return;
    }
}
