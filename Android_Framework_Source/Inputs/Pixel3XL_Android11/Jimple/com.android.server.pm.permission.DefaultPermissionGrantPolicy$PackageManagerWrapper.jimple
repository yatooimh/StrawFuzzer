abstract class com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper extends java.lang.Object
{
    final com.android.server.pm.permission.DefaultPermissionGrantPolicy this$0;

    private void <init>(com.android.server.pm.permission.DefaultPermissionGrantPolicy)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper r0;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r1;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper;

        r1 := @parameter0: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: com.android.server.pm.permission.DefaultPermissionGrantPolicy this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(com.android.server.pm.permission.DefaultPermissionGrantPolicy, com.android.server.pm.permission.DefaultPermissionGrantPolicy$1)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper r0;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r1;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$1 r2;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper;

        r1 := @parameter0: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r2 := @parameter1: com.android.server.pm.permission.DefaultPermissionGrantPolicy$1;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: void <init>(com.android.server.pm.permission.DefaultPermissionGrantPolicy)>(r1);

        return;
    }

    java.lang.String getBackgroundPermission(java.lang.String)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper r0;
        java.lang.String $r1, r2;
        android.content.pm.PermissionInfo r3;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper;

        r2 := @parameter0: java.lang.String;

        r3 = virtualinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String)>(r2);

        if r3 != null goto label1;

        return null;

     label1:
        $r1 = r3.<android.content.pm.PermissionInfo: java.lang.String backgroundPermission>;

        return $r1;
    }

    abstract android.content.pm.PackageInfo getPackageInfo(java.lang.String);

    abstract int getPermissionFlags(java.lang.String, android.content.pm.PackageInfo, android.os.UserHandle);

    abstract android.content.pm.PermissionInfo getPermissionInfo(java.lang.String);

    android.content.pm.PackageInfo getSystemPackageInfo(java.lang.String)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper r0;
        android.content.pm.ApplicationInfo $r1;
        boolean $z0;
        java.lang.String r2;
        android.content.pm.PackageInfo r3;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper;

        r2 := @parameter0: java.lang.String;

        r3 = virtualinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: android.content.pm.PackageInfo getPackageInfo(java.lang.String)>(r2);

        if r3 == null goto label2;

        $r1 = r3.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $z0 = virtualinvoke $r1.<android.content.pm.ApplicationInfo: boolean isSystemApp()>();

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        return r3;

     label2:
        return null;
    }

    abstract void grantPermission(java.lang.String, android.content.pm.PackageInfo, android.os.UserHandle);

    abstract boolean isGranted(java.lang.String, android.content.pm.PackageInfo, android.os.UserHandle);

    boolean isPermissionDangerous(java.lang.String)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper r0;
        int $i0;
        java.lang.String r1;
        android.content.pm.PermissionInfo r2;
        boolean z0;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String)>(r1);

        z0 = 0;

        if r2 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r2.<android.content.pm.PermissionInfo: int getProtection()>();

        if $i0 != 1 goto label2;

        z0 = 1;

     label2:
        return z0;
    }

    boolean isPermissionRestricted(java.lang.String)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper r0;
        boolean $z0;
        java.lang.String r1;
        android.content.pm.PermissionInfo r2;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String)>(r1);

        if r2 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r2.<android.content.pm.PermissionInfo: boolean isRestricted()>();

        return $z0;
    }

    boolean isSysComponentOrPersistentPlatformSignedPrivApp(android.content.pm.PackageInfo)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper r0;
        android.content.pm.PackageInfo r1, r10;
        android.content.pm.ApplicationInfo $r2, $r3, $r6, $r9, r11;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy $r4, $r12;
        android.content.pm.PackageManagerInternal $r5, $r13;
        java.lang.String $r7, $r8, $r14;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper;

        r1 := @parameter0: android.content.pm.PackageInfo;

        $r2 = r1.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r2.<android.content.pm.ApplicationInfo: int uid>;

        $i1 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i0);

        if $i1 >= 10000 goto label1;

        return 1;

     label1:
        $r3 = r1.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $z0 = virtualinvoke $r3.<android.content.pm.ApplicationInfo: boolean isPrivilegedApp()>();

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r4 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: com.android.server.pm.permission.DefaultPermissionGrantPolicy this$0>;

        $r5 = staticinvoke <com.android.server.pm.permission.DefaultPermissionGrantPolicy: android.content.pm.PackageManagerInternal access$700(com.android.server.pm.permission.DefaultPermissionGrantPolicy)>($r4);

        $r6 = r1.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r7 = $r6.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r8 = virtualinvoke $r5.<android.content.pm.PackageManagerInternal: java.lang.String getDisabledSystemPackageName(java.lang.String)>($r7);

        r10 = virtualinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: android.content.pm.PackageInfo getSystemPackageInfo(java.lang.String)>($r8);

        if r10 == null goto label3;

        r11 = r10.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        if r11 == null goto label4;

        $i4 = r11.<android.content.pm.ApplicationInfo: int flags>;

        $i5 = $i4 & 8;

        if $i5 != 0 goto label4;

        return 0;

     label3:
        $r9 = r1.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r9.<android.content.pm.ApplicationInfo: int flags>;

        $i3 = $i2 & 8;

        if $i3 != 0 goto label4;

        return 0;

     label4:
        $r12 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: com.android.server.pm.permission.DefaultPermissionGrantPolicy this$0>;

        $r13 = staticinvoke <com.android.server.pm.permission.DefaultPermissionGrantPolicy: android.content.pm.PackageManagerInternal access$700(com.android.server.pm.permission.DefaultPermissionGrantPolicy)>($r12);

        $r14 = r1.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $z1 = virtualinvoke $r13.<android.content.pm.PackageManagerInternal: boolean isPlatformSigned(java.lang.String)>($r14);

        return $z1;
    }

    boolean isSystemPackage(android.content.pm.PackageInfo)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper r0;
        android.content.pm.PackageInfo r1;
        android.content.pm.ApplicationInfo $r2;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper;

        r1 := @parameter0: android.content.pm.PackageInfo;

        z2 = 0;

        if r1 != null goto label1;

        return 0;

     label1:
        $r2 = r1.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $z0 = virtualinvoke $r2.<android.content.pm.ApplicationInfo: boolean isSystemApp()>();

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: boolean isSysComponentOrPersistentPlatformSignedPrivApp(android.content.pm.PackageInfo)>(r1);

        if $z1 != 0 goto label2;

        z2 = 1;

        goto label2;

     label2:
        return z2;
    }

    boolean isSystemPackage(java.lang.String)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper r0;
        java.lang.String r1;
        android.content.pm.PackageInfo $r2;
        boolean $z0;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: android.content.pm.PackageInfo getPackageInfo(java.lang.String)>(r1);

        $z0 = virtualinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: boolean isSystemPackage(android.content.pm.PackageInfo)>($r2);

        return $z0;
    }

    abstract void revokePermission(java.lang.String, android.content.pm.PackageInfo, android.os.UserHandle);

    abstract void updatePermissionFlags(java.lang.String, android.content.pm.PackageInfo, int, int, android.os.UserHandle);
}
