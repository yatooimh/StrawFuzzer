public final class com.android.server.pm.permission.DefaultPermissionGrantPolicy extends java.lang.Object
{
    private static final java.lang.String ACTION_TRACK;
    private static final java.util.Set ACTIVITY_RECOGNITION_PERMISSIONS;
    private static final java.util.Set ALWAYS_LOCATION_PERMISSIONS;
    private static final java.lang.String ATTR_FIXED;
    private static final java.lang.String ATTR_NAME;
    private static final java.lang.String ATTR_PACKAGE;
    private static final java.lang.String ATTR_WHITELISTED;
    private static final java.lang.String AUDIO_MIME_TYPE;
    private static final java.util.Set CALENDAR_PERMISSIONS;
    private static final java.util.Set CAMERA_PERMISSIONS;
    private static final java.util.Set COARSE_BACKGROUND_LOCATION_PERMISSIONS;
    private static final java.util.Set CONTACTS_PERMISSIONS;
    private static final boolean DEBUG;
    private static final int DEFAULT_INTENT_QUERY_FLAGS;
    private static final int DEFAULT_PACKAGE_INFO_QUERY_FLAGS;
    private static final java.util.Set FOREGROUND_LOCATION_PERMISSIONS;
    private static final java.util.Set MICROPHONE_PERMISSIONS;
    private static final int MSG_READ_DEFAULT_PERMISSION_EXCEPTIONS;
    private static final java.util.Set PHONE_PERMISSIONS;
    private static final java.util.Set SENSORS_PERMISSIONS;
    private static final java.util.Set SMS_PERMISSIONS;
    private static final java.util.Set STORAGE_PERMISSIONS;
    private static final java.lang.String TAG;
    private static final java.lang.String TAG_EXCEPTION;
    private static final java.lang.String TAG_EXCEPTIONS;
    private static final java.lang.String TAG_PERMISSION;
    private final com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper NO_PM_CACHE;
    private final android.content.Context mContext;
    private com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider mDialerAppPackagesProvider;
    private android.util.ArrayMap mGrantExceptions;
    private final android.os.Handler mHandler;
    private com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider mLocationExtraPackagesProvider;
    private com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider mLocationPackagesProvider;
    private final java.lang.Object mLock;
    private final android.content.pm.PackageManagerInternal mServiceInternal;
    private com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider mSimCallManagerPackagesProvider;
    private com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider mSmsAppPackagesProvider;
    private com.android.server.pm.permission.PermissionManagerServiceInternal$SyncAdapterPackagesProvider mSyncAdapterPackagesProvider;
    private com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider mUseOpenWifiAppPackagesProvider;
    private com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider mVoiceInteractionPackagesProvider;

    static void <clinit>()
    {
        android.util.ArraySet $r0, $r7, $r10, $r13, $r15, $r17, $r18, $r20, $r26, $r27, $r28, $r29;
        java.util.Set $r1, $r2, $r3, $r4, $r5, $r6, $r8, $r9, $r11, $r12, $r14, $r16, $r19, $r21, $r22, $r23, $r24, $r25, $r30, $r31;

        <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String TAG_PERMISSION> = "permission";

        <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String TAG_EXCEPTIONS> = "exceptions";

        <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String TAG_EXCEPTION> = "exception";

        <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String TAG> = "DefaultPermGrantPolicy";

        <com.android.server.pm.permission.DefaultPermissionGrantPolicy: int MSG_READ_DEFAULT_PERMISSION_EXCEPTIONS> = 1;

        <com.android.server.pm.permission.DefaultPermissionGrantPolicy: int DEFAULT_PACKAGE_INFO_QUERY_FLAGS> = 536915968;

        <com.android.server.pm.permission.DefaultPermissionGrantPolicy: int DEFAULT_INTENT_QUERY_FLAGS> = 794624;

        <com.android.server.pm.permission.DefaultPermissionGrantPolicy: boolean DEBUG> = 0;

        <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String AUDIO_MIME_TYPE> = "audio/mpeg";

        <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String ATTR_WHITELISTED> = "whitelisted";

        <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String ATTR_PACKAGE> = "package";

        <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String ATTR_NAME> = "name";

        <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String ATTR_FIXED> = "fixed";

        <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String ACTION_TRACK> = "com.android.fitness.TRACK";

        $r0 = new android.util.ArraySet;

        specialinvoke $r0.<android.util.ArraySet: void <init>()>();

        <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set PHONE_PERMISSIONS> = $r0;

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>("android.permission.READ_PHONE_STATE");

        $r1 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set PHONE_PERMISSIONS>;

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("android.permission.CALL_PHONE");

        $r2 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set PHONE_PERMISSIONS>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>("android.permission.READ_CALL_LOG");

        $r3 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set PHONE_PERMISSIONS>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>("android.permission.WRITE_CALL_LOG");

        $r4 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set PHONE_PERMISSIONS>;

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>("com.android.voicemail.permission.ADD_VOICEMAIL");

        $r5 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set PHONE_PERMISSIONS>;

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>("android.permission.USE_SIP");

        $r6 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set PHONE_PERMISSIONS>;

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>("android.permission.PROCESS_OUTGOING_CALLS");

        $r7 = new android.util.ArraySet;

        specialinvoke $r7.<android.util.ArraySet: void <init>()>();

        <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set CONTACTS_PERMISSIONS> = $r7;

        interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>("android.permission.READ_CONTACTS");

        $r8 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set CONTACTS_PERMISSIONS>;

        interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>("android.permission.WRITE_CONTACTS");

        $r9 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set CONTACTS_PERMISSIONS>;

        interfaceinvoke $r9.<java.util.Set: boolean add(java.lang.Object)>("android.permission.GET_ACCOUNTS");

        $r10 = new android.util.ArraySet;

        specialinvoke $r10.<android.util.ArraySet: void <init>()>();

        <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set ALWAYS_LOCATION_PERMISSIONS> = $r10;

        interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>("android.permission.ACCESS_FINE_LOCATION");

        $r11 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set ALWAYS_LOCATION_PERMISSIONS>;

        interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>("android.permission.ACCESS_COARSE_LOCATION");

        $r12 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set ALWAYS_LOCATION_PERMISSIONS>;

        interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>("android.permission.ACCESS_BACKGROUND_LOCATION");

        $r13 = new android.util.ArraySet;

        specialinvoke $r13.<android.util.ArraySet: void <init>()>();

        <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set FOREGROUND_LOCATION_PERMISSIONS> = $r13;

        interfaceinvoke $r13.<java.util.Set: boolean add(java.lang.Object)>("android.permission.ACCESS_FINE_LOCATION");

        $r14 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set FOREGROUND_LOCATION_PERMISSIONS>;

        interfaceinvoke $r14.<java.util.Set: boolean add(java.lang.Object)>("android.permission.ACCESS_COARSE_LOCATION");

        $r15 = new android.util.ArraySet;

        specialinvoke $r15.<android.util.ArraySet: void <init>()>();

        <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set COARSE_BACKGROUND_LOCATION_PERMISSIONS> = $r15;

        interfaceinvoke $r15.<java.util.Set: boolean add(java.lang.Object)>("android.permission.ACCESS_COARSE_LOCATION");

        $r16 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set COARSE_BACKGROUND_LOCATION_PERMISSIONS>;

        interfaceinvoke $r16.<java.util.Set: boolean add(java.lang.Object)>("android.permission.ACCESS_BACKGROUND_LOCATION");

        $r17 = new android.util.ArraySet;

        specialinvoke $r17.<android.util.ArraySet: void <init>()>();

        <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set ACTIVITY_RECOGNITION_PERMISSIONS> = $r17;

        interfaceinvoke $r17.<java.util.Set: boolean add(java.lang.Object)>("android.permission.ACTIVITY_RECOGNITION");

        $r18 = new android.util.ArraySet;

        specialinvoke $r18.<android.util.ArraySet: void <init>()>();

        <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set CALENDAR_PERMISSIONS> = $r18;

        interfaceinvoke $r18.<java.util.Set: boolean add(java.lang.Object)>("android.permission.READ_CALENDAR");

        $r19 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set CALENDAR_PERMISSIONS>;

        interfaceinvoke $r19.<java.util.Set: boolean add(java.lang.Object)>("android.permission.WRITE_CALENDAR");

        $r20 = new android.util.ArraySet;

        specialinvoke $r20.<android.util.ArraySet: void <init>()>();

        <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set SMS_PERMISSIONS> = $r20;

        interfaceinvoke $r20.<java.util.Set: boolean add(java.lang.Object)>("android.permission.SEND_SMS");

        $r21 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set SMS_PERMISSIONS>;

        interfaceinvoke $r21.<java.util.Set: boolean add(java.lang.Object)>("android.permission.RECEIVE_SMS");

        $r22 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set SMS_PERMISSIONS>;

        interfaceinvoke $r22.<java.util.Set: boolean add(java.lang.Object)>("android.permission.READ_SMS");

        $r23 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set SMS_PERMISSIONS>;

        interfaceinvoke $r23.<java.util.Set: boolean add(java.lang.Object)>("android.permission.RECEIVE_WAP_PUSH");

        $r24 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set SMS_PERMISSIONS>;

        interfaceinvoke $r24.<java.util.Set: boolean add(java.lang.Object)>("android.permission.RECEIVE_MMS");

        $r25 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set SMS_PERMISSIONS>;

        interfaceinvoke $r25.<java.util.Set: boolean add(java.lang.Object)>("android.permission.READ_CELL_BROADCASTS");

        $r26 = new android.util.ArraySet;

        specialinvoke $r26.<android.util.ArraySet: void <init>()>();

        <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set MICROPHONE_PERMISSIONS> = $r26;

        interfaceinvoke $r26.<java.util.Set: boolean add(java.lang.Object)>("android.permission.RECORD_AUDIO");

        $r27 = new android.util.ArraySet;

        specialinvoke $r27.<android.util.ArraySet: void <init>()>();

        <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set CAMERA_PERMISSIONS> = $r27;

        interfaceinvoke $r27.<java.util.Set: boolean add(java.lang.Object)>("android.permission.CAMERA");

        $r28 = new android.util.ArraySet;

        specialinvoke $r28.<android.util.ArraySet: void <init>()>();

        <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set SENSORS_PERMISSIONS> = $r28;

        interfaceinvoke $r28.<java.util.Set: boolean add(java.lang.Object)>("android.permission.BODY_SENSORS");

        $r29 = new android.util.ArraySet;

        specialinvoke $r29.<android.util.ArraySet: void <init>()>();

        <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set STORAGE_PERMISSIONS> = $r29;

        interfaceinvoke $r29.<java.util.Set: boolean add(java.lang.Object)>("android.permission.READ_EXTERNAL_STORAGE");

        $r30 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set STORAGE_PERMISSIONS>;

        interfaceinvoke $r30.<java.util.Set: boolean add(java.lang.Object)>("android.permission.WRITE_EXTERNAL_STORAGE");

        $r31 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set STORAGE_PERMISSIONS>;

        interfaceinvoke $r31.<java.util.Set: boolean add(java.lang.Object)>("android.permission.ACCESS_MEDIA_LOCATION");

        return;
    }

    void <init>(android.content.Context, android.os.Looper)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        android.content.Context r1;
        android.os.Looper r2;
        java.lang.Object $r3, $r6;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$1 $r4;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$2 $r5;
        android.content.pm.PackageManagerInternal $r7;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Looper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.Object mLock> = $r3;

        $r4 = new com.android.server.pm.permission.DefaultPermissionGrantPolicy$1;

        specialinvoke $r4.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$1: void <init>(com.android.server.pm.permission.DefaultPermissionGrantPolicy)>(r0);

        r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper NO_PM_CACHE> = $r4;

        r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: android.content.Context mContext> = r1;

        $r5 = new com.android.server.pm.permission.DefaultPermissionGrantPolicy$2;

        specialinvoke $r5.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$2: void <init>(com.android.server.pm.permission.DefaultPermissionGrantPolicy,android.os.Looper)>(r0, r2);

        r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: android.os.Handler mHandler> = $r5;

        $r6 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/content/pm/PackageManagerInternal;");

        $r7 = (android.content.pm.PackageManagerInternal) $r6;

        r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: android.content.pm.PackageManagerInternal mServiceInternal> = $r7;

        return;
    }

    static android.content.Context access$100(com.android.server.pm.permission.DefaultPermissionGrantPolicy)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        $r1 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: android.content.Context mContext>;

        return $r1;
    }

    static java.lang.Object access$200(com.android.server.pm.permission.DefaultPermissionGrantPolicy)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        $r1 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.Object mLock>;

        return $r1;
    }

    static android.util.ArrayMap access$300(com.android.server.pm.permission.DefaultPermissionGrantPolicy)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        android.util.ArrayMap $r1;

        r0 := @parameter0: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        $r1 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: android.util.ArrayMap mGrantExceptions>;

        return $r1;
    }

    static android.util.ArrayMap access$302(com.android.server.pm.permission.DefaultPermissionGrantPolicy, android.util.ArrayMap)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        android.util.ArrayMap r1;

        r0 := @parameter0: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r1 := @parameter1: android.util.ArrayMap;

        r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: android.util.ArrayMap mGrantExceptions> = r1;

        return r1;
    }

    static com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper access$400(com.android.server.pm.permission.DefaultPermissionGrantPolicy)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper $r1;

        r0 := @parameter0: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        $r1 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper NO_PM_CACHE>;

        return $r1;
    }

    static android.util.ArrayMap access$500(com.android.server.pm.permission.DefaultPermissionGrantPolicy, com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper r1;
        android.util.ArrayMap $r2;

        r0 := @parameter0: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r1 := @parameter1: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper;

        $r2 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: android.util.ArrayMap readDefaultPermissionExceptionsLocked(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper)>(r1);

        return $r2;
    }

    static android.content.pm.PackageManagerInternal access$700(com.android.server.pm.permission.DefaultPermissionGrantPolicy)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        android.content.pm.PackageManagerInternal $r1;

        r0 := @parameter0: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        $r1 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: android.content.pm.PackageManagerInternal mServiceInternal>;

        return $r1;
    }

    private static boolean doesPackageSupportRuntimePermissions(android.content.pm.PackageInfo)
    {
        android.content.pm.PackageInfo r0;
        android.content.pm.ApplicationInfo $r1, $r2;
        int $i0;
        boolean z0;

        r0 := @parameter0: android.content.pm.PackageInfo;

        $r1 = r0.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r2.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i0 <= 22 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private java.io.File[] getDefaultPermissionFiles()
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        java.util.ArrayList $r1;
        java.io.File $r2, $r3, $r6, $r7, $r16, $r17, $r19, $r20, $r22, $r23, $r25, $r26;
        boolean $z0, $z1, $z2, $z4, $z6, $z8, $z10, $z12, $z14, $z15, $z16, $z17, $z18, $z19;
        java.io.File[] $r4, $r8, $r9, $r10, $r11, $r12, $r13, r31;
        java.lang.Object[] $r5;
        android.content.Context $r28;
        android.content.pm.PackageManager $r29;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = new java.io.File;

        $r3 = staticinvoke <android.os.Environment: java.io.File getRootDirectory()>();

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, "etc/default-permissions");

        $z0 = virtualinvoke $r2.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label1;

        $z12 = virtualinvoke $r2.<java.io.File: boolean canRead()>();

        if $z12 == 0 goto label1;

        $r13 = virtualinvoke $r2.<java.io.File: java.io.File[] listFiles()>();

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>($r1, $r13);

     label1:
        $r16 = new java.io.File;

        $r17 = staticinvoke <android.os.Environment: java.io.File getVendorDirectory()>();

        specialinvoke $r16.<java.io.File: void <init>(java.io.File,java.lang.String)>($r17, "etc/default-permissions");

        $z14 = virtualinvoke $r16.<java.io.File: boolean isDirectory()>();

        if $z14 == 0 goto label2;

        $z10 = virtualinvoke $r16.<java.io.File: boolean canRead()>();

        if $z10 == 0 goto label2;

        $r12 = virtualinvoke $r16.<java.io.File: java.io.File[] listFiles()>();

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>($r1, $r12);

     label2:
        $r19 = new java.io.File;

        $r20 = staticinvoke <android.os.Environment: java.io.File getOdmDirectory()>();

        specialinvoke $r19.<java.io.File: void <init>(java.io.File,java.lang.String)>($r20, "etc/default-permissions");

        $z15 = virtualinvoke $r19.<java.io.File: boolean isDirectory()>();

        if $z15 == 0 goto label3;

        $z8 = virtualinvoke $r19.<java.io.File: boolean canRead()>();

        if $z8 == 0 goto label3;

        $r11 = virtualinvoke $r19.<java.io.File: java.io.File[] listFiles()>();

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>($r1, $r11);

     label3:
        $r22 = new java.io.File;

        $r23 = staticinvoke <android.os.Environment: java.io.File getProductDirectory()>();

        specialinvoke $r22.<java.io.File: void <init>(java.io.File,java.lang.String)>($r23, "etc/default-permissions");

        $z16 = virtualinvoke $r22.<java.io.File: boolean isDirectory()>();

        if $z16 == 0 goto label4;

        $z6 = virtualinvoke $r22.<java.io.File: boolean canRead()>();

        if $z6 == 0 goto label4;

        $r10 = virtualinvoke $r22.<java.io.File: java.io.File[] listFiles()>();

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>($r1, $r10);

     label4:
        $r25 = new java.io.File;

        $r26 = staticinvoke <android.os.Environment: java.io.File getSystemExtDirectory()>();

        specialinvoke $r25.<java.io.File: void <init>(java.io.File,java.lang.String)>($r26, "etc/default-permissions");

        $z17 = virtualinvoke $r25.<java.io.File: boolean isDirectory()>();

        if $z17 == 0 goto label5;

        $z4 = virtualinvoke $r25.<java.io.File: boolean canRead()>();

        if $z4 == 0 goto label5;

        $r9 = virtualinvoke $r25.<java.io.File: java.io.File[] listFiles()>();

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>($r1, $r9);

     label5:
        $r28 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: android.content.Context mContext>;

        $r29 = virtualinvoke $r28.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $z18 = virtualinvoke $r29.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String,int)>("android.hardware.type.embedded", 0);

        if $z18 == 0 goto label6;

        $r6 = new java.io.File;

        $r7 = staticinvoke <android.os.Environment: java.io.File getOemDirectory()>();

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, "etc/default-permissions");

        $z1 = virtualinvoke $r6.<java.io.File: boolean isDirectory()>();

        if $z1 == 0 goto label6;

        $z2 = virtualinvoke $r6.<java.io.File: boolean canRead()>();

        if $z2 == 0 goto label6;

        $r8 = virtualinvoke $r6.<java.io.File: java.io.File[] listFiles()>();

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>($r1, $r8);

     label6:
        $z19 = virtualinvoke $r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z19 == 0 goto label7;

        r31 = null;

        goto label8;

     label7:
        $r4 = newarray (java.io.File)[0];

        $r5 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        r31 = (java.io.File[]) $r5;

     label8:
        return r31;
    }

    private java.lang.String getDefaultProviderAuthorityPackage(java.lang.String, int)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        int i0;
        android.content.Context $r1;
        android.content.pm.PackageManager $r2;
        java.lang.String $r3, r4;
        android.content.pm.ProviderInfo r5;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r5 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.ProviderInfo resolveContentProviderAsUser(java.lang.String,int,int)>(r4, 794624, i0);

        if r5 == null goto label1;

        $r3 = r5.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        return $r3;

     label1:
        return null;
    }

    private java.lang.String getDefaultSystemHandlerActivityPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper, android.content.Intent, int)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper r1;
        int i0;
        android.content.Context $r2;
        android.content.pm.PackageManager $r3;
        android.content.pm.ActivityInfo $r4, $r5, $r7;
        android.content.pm.PackageManagerInternal $r6;
        boolean $z0, $z1;
        android.content.Intent r8;
        android.content.pm.ResolveInfo r9;
        java.lang.String r10, r11;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r1 := @parameter0: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper;

        r8 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        $r2 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r9 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivityAsUser(android.content.Intent,int,int)>(r8, 794624, i0);

        r10 = null;

        if r9 == null goto label4;

        $r4 = r9.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        if $r4 != null goto label1;

        goto label4;

     label1:
        $r6 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: android.content.pm.PackageManagerInternal mServiceInternal>;

        $r5 = r9.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $z0 = virtualinvoke $r6.<android.content.pm.PackageManagerInternal: boolean isResolveActivityComponent(android.content.pm.ComponentInfo)>($r5);

        if $z0 == 0 goto label2;

        return null;

     label2:
        $r7 = r9.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        r11 = $r7.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $z1 = virtualinvoke r1.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: boolean isSystemPackage(java.lang.String)>(r11);

        if $z1 == 0 goto label3;

        r10 = r11;

     label3:
        return r10;

     label4:
        return null;
    }

    private java.lang.String getDefaultSystemHandlerActivityPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper, java.lang.String, int)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper r1;
        java.lang.String r2, $r4;
        int i0;
        android.content.Intent $r3;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r1 := @parameter0: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>(r2);

        $r4 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String getDefaultSystemHandlerActivityPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,android.content.Intent,int)>(r1, $r3, i0);

        return $r4;
    }

    private java.lang.String getDefaultSystemHandlerActivityPackageForCategory(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper, java.lang.String, int)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper r1;
        java.lang.String r2, $r5;
        int i0;
        android.content.Intent $r3, $r4;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r1 := @parameter0: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.MAIN");

        $r4 = virtualinvoke $r3.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>(r2);

        $r5 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String getDefaultSystemHandlerActivityPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,android.content.Intent,int)>(r1, $r4, i0);

        return $r5;
    }

    private java.lang.String getDefaultSystemHandlerServicePackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper, android.content.Intent, int)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper r1;
        int i0, i1, i2;
        java.lang.String r2;
        android.content.Context $r3;
        android.content.pm.PackageManager $r4;
        java.lang.Object $r5;
        android.content.pm.ResolveInfo $r6;
        android.content.pm.ServiceInfo $r7;
        boolean $z0;
        android.content.Intent r8;
        java.util.List r9;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r1 := @parameter0: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper;

        r8 := @parameter1: android.content.Intent;

        i1 := @parameter2: int;

        $r3 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r9 = virtualinvoke $r4.<android.content.pm.PackageManager: java.util.List queryIntentServicesAsUser(android.content.Intent,int,int)>(r8, 794624, i1);

        if r9 != null goto label1;

        return null;

     label1:
        i0 = interfaceinvoke r9.<java.util.List: int size()>();

        i2 = 0;

     label2:
        if i2 >= i0 goto label4;

        $r5 = interfaceinvoke r9.<java.util.List: java.lang.Object get(int)>(i2);

        $r6 = (android.content.pm.ResolveInfo) $r5;

        $r7 = $r6.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        r2 = $r7.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $z0 = virtualinvoke r1.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: boolean isSystemPackage(java.lang.String)>(r2);

        if $z0 == 0 goto label3;

        return r2;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        return null;
    }

    private java.lang.String getDefaultSystemHandlerServicePackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper, java.lang.String, int)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper r1;
        java.lang.String r2, $r4;
        int i0;
        android.content.Intent $r3;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r1 := @parameter0: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>(r2);

        $r4 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String getDefaultSystemHandlerServicePackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,android.content.Intent,int)>(r1, $r3, i0);

        return $r4;
    }

    private java.util.ArrayList getHeadlessSyncAdapterPackages(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper, java.lang.String[], int)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper r1;
        java.lang.String[] r2;
        int i0, i1, i2;
        android.content.Intent r4, $r7;
        java.lang.String r5;
        java.util.ArrayList $r6;
        android.content.Context $r9;
        android.content.pm.PackageManager $r10;
        android.content.pm.ResolveInfo $r11;
        boolean $z0;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r1 := @parameter0: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper;

        r2 := @parameter1: java.lang.String[];

        i0 := @parameter2: int;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.MAIN");

        r4 = virtualinvoke $r7.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>("android.intent.category.LAUNCHER");

        i1 = lengthof r2;

        i2 = 0;

     label1:
        if i2 >= i1 goto label4;

        r5 = r2[i2];

        virtualinvoke r4.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r5);

        $r9 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: android.content.Context mContext>;

        $r10 = virtualinvoke $r9.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r11 = virtualinvoke $r10.<android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivityAsUser(android.content.Intent,int,int)>(r4, 794624, i0);

        if $r11 == null goto label2;

        goto label3;

     label2:
        $z0 = virtualinvoke r1.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: boolean isSystemPackage(java.lang.String)>(r5);

        if $z0 == 0 goto label3;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return $r6;
    }

    private java.lang.String[] getKnownPackages(int, int)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        int i0, i1;
        android.content.pm.PackageManagerInternal $r1;
        java.lang.String[] $r2;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: android.content.pm.PackageManagerInternal mServiceInternal>;

        $r2 = virtualinvoke $r1.<android.content.pm.PackageManagerInternal: java.lang.String[] getKnownPackageNames(int,int)>(i0, i1);

        return $r2;
    }

    private void grantDefaultPermissionExceptions(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper, int)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        int i0, i1, i2, i4, i5;
        android.content.pm.PackageInfo r1;
        java.util.List r2;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$DefaultPermissionGrant r3;
        android.os.Handler $r5;
        android.util.ArrayMap $r6, $r7, $r8, $r11, $r23;
        java.lang.Object $r9, $r12, $r13, r26;
        java.lang.String $r10, $r14, $r15, $r19, $r22;
        boolean $z0, $z2, $z3;
        android.util.ArraySet $r16, r27;
        java.lang.StringBuilder $r17;
        java.lang.Throwable $r24;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper r25;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r25 := @parameter0: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper;

        i0 := @parameter1: int;

        $r5 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: android.os.Handler mHandler>;

        virtualinvoke $r5.<android.os.Handler: void removeMessages(int)>(1);

        r26 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.Object mLock>;

        entermonitor r26;

     label01:
        $r6 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: android.util.ArrayMap mGrantExceptions>;

        if $r6 != null goto label02;

        $r23 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: android.util.ArrayMap readDefaultPermissionExceptionsLocked(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper)>(r25);

        r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: android.util.ArrayMap mGrantExceptions> = $r23;

     label02:
        exitmonitor r26;

     label03:
        r27 = null;

        $r7 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: android.util.ArrayMap mGrantExceptions>;

        i1 = virtualinvoke $r7.<android.util.ArrayMap: int size()>();

        i4 = 0;

     label04:
        if i4 >= i1 goto label11;

        $r8 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: android.util.ArrayMap mGrantExceptions>;

        $r9 = virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i4);

        $r10 = (java.lang.String) $r9;

        r1 = virtualinvoke r25.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: android.content.pm.PackageInfo getSystemPackageInfo(java.lang.String)>($r10);

        $r11 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: android.util.ArrayMap mGrantExceptions>;

        $r12 = virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i4);

        r2 = (java.util.List) $r12;

        i2 = interfaceinvoke r2.<java.util.List: int size()>();

        i5 = 0;

     label05:
        if i5 >= i2 goto label10;

        $r13 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i5);

        r3 = (com.android.server.pm.permission.DefaultPermissionGrantPolicy$DefaultPermissionGrant) $r13;

        $r14 = r3.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$DefaultPermissionGrant: java.lang.String name>;

        $z0 = virtualinvoke r25.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: boolean isPermissionDangerous(java.lang.String)>($r14);

        if $z0 != 0 goto label06;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring permission ");

        $r19 = r3.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$DefaultPermissionGrant: java.lang.String name>;

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" which isn\'t dangerous");

        $r22 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DefaultPermGrantPolicy", $r22);

        goto label09;

     label06:
        if r27 != null goto label07;

        $r16 = new android.util.ArraySet;

        specialinvoke $r16.<android.util.ArraySet: void <init>()>();

        r27 = $r16;

        goto label08;

     label07:
        interfaceinvoke r27.<java.util.Set: void clear()>();

     label08:
        $r15 = r3.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$DefaultPermissionGrant: java.lang.String name>;

        interfaceinvoke r27.<java.util.Set: boolean add(java.lang.Object)>($r15);

        $z3 = r3.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$DefaultPermissionGrant: boolean fixed>;

        $z2 = r3.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$DefaultPermissionGrant: boolean whitelisted>;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantRuntimePermissions(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,android.content.pm.PackageInfo,java.util.Set,boolean,boolean,boolean,int)>(r25, r1, r27, $z3, $z2, 1, i0);

     label09:
        i5 = i5 + 1;

        goto label05;

     label10:
        i4 = i4 + 1;

        goto label04;

     label11:
        return;

     label12:
        $r24 := @caughtexception;

     label13:
        exitmonitor r26;

     label14:
        throw $r24;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    private void grantDefaultPermissionsToDefaultSimCallManager(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper, java.lang.String, int)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper r1;
        java.lang.String r2, $r7;
        int i0;
        java.lang.StringBuilder $r4;
        java.util.Set[] $r8;
        java.util.Set $r9, $r10;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r1 := @parameter0: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        if r2 != null goto label1;

        return;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Granting permissions to sim call manager for user:");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("DefaultPermGrantPolicy", $r7);

        $r8 = newarray (java.util.Set)[2];

        $r9 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set PHONE_PERMISSIONS>;

        $r8[0] = $r9;

        $r10 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set MICROPHONE_PERMISSIONS>;

        $r8[1] = $r10;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,boolean,boolean,java.util.Set[])>(r1, r2, i0, 0, 1, $r8);

        return;
    }

    private void grantDefaultPermissionsToDefaultSystemDialerApp(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper, java.lang.String, int)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper r1;
        java.lang.String r2;
        int i0;
        android.content.Context $r3;
        android.content.pm.PackageManager $r4;
        boolean $z0;
        java.util.Set[] $r5, $r7, $r12;
        java.util.Set $r6, $r8, $r9, $r10, $r11, $r13;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r1 := @parameter0: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        if r2 != null goto label1;

        return;

     label1:
        $r3 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $z0 = virtualinvoke $r4.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String,int)>("android.hardware.type.watch", 0);

        if $z0 == 0 goto label2;

        $r12 = newarray (java.util.Set)[1];

        $r13 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set PHONE_PERMISSIONS>;

        $r12[0] = $r13;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantSystemFixedPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r1, r2, i0, $r12);

        goto label3;

     label2:
        $r5 = newarray (java.util.Set)[1];

        $r6 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set PHONE_PERMISSIONS>;

        $r5[0] = $r6;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r1, r2, i0, $r5);

     label3:
        $r7 = newarray (java.util.Set)[4];

        $r8 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set CONTACTS_PERMISSIONS>;

        $r7[0] = $r8;

        $r9 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set SMS_PERMISSIONS>;

        $r7[1] = $r9;

        $r10 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set MICROPHONE_PERMISSIONS>;

        $r7[2] = $r10;

        $r11 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set CAMERA_PERMISSIONS>;

        $r7[3] = $r11;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r1, r2, i0, $r7);

        return;
    }

    private void grantDefaultPermissionsToDefaultSystemSimCallManager(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper, java.lang.String, int)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper r1;
        java.lang.String r2;
        int i0;
        boolean $z0;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r1 := @parameter0: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $z0 = virtualinvoke r1.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: boolean isSystemPackage(java.lang.String)>(r2);

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantDefaultPermissionsToDefaultSimCallManager(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int)>(r1, r2, i0);

     label1:
        return;
    }

    private void grantDefaultPermissionsToDefaultSystemSmsApp(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper, java.lang.String, int)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper r1;
        java.lang.String r2;
        int i0;
        java.util.Set[] $r3;
        java.util.Set $r4, $r5, $r6, $r7, $r8, $r9;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r1 := @parameter0: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r3 = newarray (java.util.Set)[6];

        $r4 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set PHONE_PERMISSIONS>;

        $r3[0] = $r4;

        $r5 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set CONTACTS_PERMISSIONS>;

        $r3[1] = $r5;

        $r6 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set SMS_PERMISSIONS>;

        $r3[2] = $r6;

        $r7 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set STORAGE_PERMISSIONS>;

        $r3[3] = $r7;

        $r8 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set MICROPHONE_PERMISSIONS>;

        $r3[4] = $r8;

        $r9 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set CAMERA_PERMISSIONS>;

        $r3[5] = $r9;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r1, r2, i0, $r3);

        return;
    }

    private void grantDefaultPermissionsToDefaultSystemUseOpenWifiApp(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper, java.lang.String, int)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper r1;
        java.lang.String r2;
        int i0;
        java.util.Set[] $r3;
        java.util.Set $r4;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r1 := @parameter0: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r3 = newarray (java.util.Set)[1];

        $r4 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set ALWAYS_LOCATION_PERMISSIONS>;

        $r3[0] = $r4;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r1, r2, i0, $r3);

        return;
    }

    private void grantDefaultSystemHandlerPermissions(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper, int)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        int i0, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17;
        java.lang.String r1, $r5, $r10, $r25, $r26, $r31, $r34, $r37, $r40, $r43, $r46, $r49, $r52, $r55, $r67, $r79, $r82, $r89, $r96, $r101, $r108, $r113, $r117, $r122, $r145, $r152, $r158, $r171, $r182, $r183, $r184, $r185, $r186, $r187, $r188, r210, r211, r212, r216, r219, r222, r223, r224;
        java.lang.StringBuilder $r2;
        java.lang.String[] $r6, $r11, $r18, $r86, r201, r202, r203, r204, r205, r206, r207, r208, r209, r221;
        java.lang.Object $r7, $r12, $r19, $r87, r192;
        java.util.Set[] $r8, $r13, $r15, $r20, $r27, $r32, $r35, $r38, $r41, $r44, $r47, $r50, $r53, $r56, $r59, $r62, $r65, $r68, $r72, $r74, $r77, $r80, $r83, $r90, $r97, $r102, $r106, $r109, $r114, $r118, $r120, $r123, $r129, $r133, $r135, $r137, $r142, $r146, $r150, $r153, $r156, $r159, $r168, $r172, $r175, $r213;
        java.util.Set $r9, $r14, $r16, $r17, $r21, $r22, $r23, $r24, $r28, $r29, $r30, $r33, $r36, $r39, $r42, $r45, $r48, $r51, $r54, $r57, $r58, $r60, $r61, $r63, $r66, $r69, $r70, $r73, $r75, $r76, $r78, $r81, $r84, $r85, $r91, $r98, $r103, $r107, $r110, $r111, $r115, $r116, $r119, $r121, $r124, $r130, $r134, $r136, $r138, $r139, $r140, $r141, $r143, $r144, $r147, $r148, $r149, $r151, $r154, $r155, $r157, $r160, $r161, $r162, $r163, $r164, $r165, $r166, $r167, $r169, $r170, $r173, $r174, $r176, $r177, $r178, $r179, $r180, $r181, $r214;
        java.util.ArrayList $r64, $r71;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        android.content.Intent $r88, $r92, $r93, $r99, $r100, $r112, r215, r217, r218, r220;
        java.io.File $r94;
        android.net.Uri $r95;
        android.content.Context $r104, $r125, $r127, $r131;
        android.content.pm.PackageManager $r105, $r126, $r128, $r132;
        java.lang.Throwable $r189;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper r190;
        com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider r193, r194, r195, r196, r197, r198, r199;
        com.android.server.pm.permission.PermissionManagerServiceInternal$SyncAdapterPackagesProvider r200;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r190 := @parameter0: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper;

        i0 := @parameter1: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Granting permissions to default platform handlers for user ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("DefaultPermGrantPolicy", $r5);

        r192 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.Object mLock>;

        entermonitor r192;

     label01:
        r193 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider mLocationPackagesProvider>;

        r194 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider mLocationExtraPackagesProvider>;

        r195 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider mVoiceInteractionPackagesProvider>;

        r196 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider mSmsAppPackagesProvider>;

        r197 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider mDialerAppPackagesProvider>;

        r198 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider mSimCallManagerPackagesProvider>;

        r199 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider mUseOpenWifiAppPackagesProvider>;

        r200 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: com.android.server.pm.permission.PermissionManagerServiceInternal$SyncAdapterPackagesProvider mSyncAdapterPackagesProvider>;

        exitmonitor r192;

     label02:
        if r195 == null goto label03;

        r201 = interfaceinvoke r195.<com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider: java.lang.String[] getPackages(int)>(i0);

        goto label04;

     label03:
        r201 = null;

     label04:
        if r193 == null goto label05;

        r202 = interfaceinvoke r193.<com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider: java.lang.String[] getPackages(int)>(i0);

        goto label06;

     label05:
        r202 = null;

     label06:
        if r194 == null goto label07;

        r203 = interfaceinvoke r194.<com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider: java.lang.String[] getPackages(int)>(i0);

        goto label08;

     label07:
        r203 = null;

     label08:
        if r196 == null goto label09;

        r204 = interfaceinvoke r196.<com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider: java.lang.String[] getPackages(int)>(i0);

        goto label10;

     label09:
        r204 = null;

     label10:
        if r197 == null goto label11;

        r205 = interfaceinvoke r197.<com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider: java.lang.String[] getPackages(int)>(i0);

        goto label12;

     label11:
        r205 = null;

     label12:
        if r198 == null goto label13;

        r206 = interfaceinvoke r198.<com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider: java.lang.String[] getPackages(int)>(i0);

        goto label14;

     label13:
        r206 = null;

     label14:
        if r199 == null goto label15;

        r207 = interfaceinvoke r199.<com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider: java.lang.String[] getPackages(int)>(i0);

        goto label16;

     label15:
        r207 = null;

     label16:
        if r200 == null goto label17;

        r208 = interfaceinvoke r200.<com.android.server.pm.permission.PermissionManagerServiceInternal$SyncAdapterPackagesProvider: java.lang.String[] getPackages(java.lang.String,int)>("com.android.contacts", i0);

        goto label18;

     label17:
        r208 = null;

     label18:
        if r200 == null goto label19;

        r209 = interfaceinvoke r200.<com.android.server.pm.permission.PermissionManagerServiceInternal$SyncAdapterPackagesProvider: java.lang.String[] getPackages(java.lang.String,int)>("com.android.calendar", i0);

        goto label20;

     label19:
        r209 = null;

     label20:
        $r6 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String[] getKnownPackages(int,int)>(2, i0);

        $r7 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object firstOrNull(java.lang.Object[])>($r6);

        $r10 = (java.lang.String) $r7;

        $r8 = newarray (java.util.Set)[1];

        $r9 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set STORAGE_PERMISSIONS>;

        $r8[0] = $r9;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantSystemFixedPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, $r10, i0, $r8);

        $r11 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String[] getKnownPackages(int,int)>(3, i0);

        $r12 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object firstOrNull(java.lang.Object[])>($r11);

        r1 = (java.lang.String) $r12;

        $r13 = newarray (java.util.Set)[1];

        $r14 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set STORAGE_PERMISSIONS>;

        $r13[0] = $r14;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantSystemFixedPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, r1, i0, $r13);

        $r15 = newarray (java.util.Set)[2];

        $r16 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set PHONE_PERMISSIONS>;

        $r15[0] = $r16;

        $r17 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set SMS_PERMISSIONS>;

        $r15[1] = $r17;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, r1, i0, $r15);

        $r18 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String[] getKnownPackages(int,int)>(1, i0);

        $r19 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object firstOrNull(java.lang.Object[])>($r18);

        $r25 = (java.lang.String) $r19;

        $r20 = newarray (java.util.Set)[4];

        $r21 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set PHONE_PERMISSIONS>;

        $r20[0] = $r21;

        $r22 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set CONTACTS_PERMISSIONS>;

        $r20[1] = $r22;

        $r23 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set ALWAYS_LOCATION_PERMISSIONS>;

        $r20[2] = $r23;

        $r24 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set CAMERA_PERMISSIONS>;

        $r20[3] = $r24;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, $r25, i0, $r20);

        $r26 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String getDefaultSystemHandlerActivityPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int)>(r190, "android.media.action.IMAGE_CAPTURE", i0);

        $r27 = newarray (java.util.Set)[3];

        $r28 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set CAMERA_PERMISSIONS>;

        $r27[0] = $r28;

        $r29 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set MICROPHONE_PERMISSIONS>;

        $r27[1] = $r29;

        $r30 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set STORAGE_PERMISSIONS>;

        $r27[2] = $r30;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, $r26, i0, $r27);

        $r31 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String getDefaultSystemHandlerActivityPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int)>(r190, "android.provider.MediaStore.RECORD_SOUND", i0);

        $r32 = newarray (java.util.Set)[1];

        $r33 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set MICROPHONE_PERMISSIONS>;

        $r32[0] = $r33;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, $r31, i0, $r32);

        $r34 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String getDefaultProviderAuthorityPackage(java.lang.String,int)>("media", i0);

        $r35 = newarray (java.util.Set)[1];

        $r36 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set STORAGE_PERMISSIONS>;

        $r35[0] = $r36;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantSystemFixedPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, $r34, i0, $r35);

        $r37 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String getDefaultProviderAuthorityPackage(java.lang.String,int)>("downloads", i0);

        $r38 = newarray (java.util.Set)[1];

        $r39 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set STORAGE_PERMISSIONS>;

        $r38[0] = $r39;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantSystemFixedPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, $r37, i0, $r38);

        $r40 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String getDefaultSystemHandlerActivityPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int)>(r190, "android.intent.action.VIEW_DOWNLOADS", i0);

        $r41 = newarray (java.util.Set)[1];

        $r42 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set STORAGE_PERMISSIONS>;

        $r41[0] = $r42;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantSystemFixedPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, $r40, i0, $r41);

        $r43 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String getDefaultProviderAuthorityPackage(java.lang.String,int)>("com.android.externalstorage.documents", i0);

        $r44 = newarray (java.util.Set)[1];

        $r45 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set STORAGE_PERMISSIONS>;

        $r44[0] = $r45;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantSystemFixedPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, $r43, i0, $r44);

        $r46 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String getDefaultSystemHandlerActivityPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int)>(r190, "android.credentials.INSTALL", i0);

        $r47 = newarray (java.util.Set)[1];

        $r48 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set STORAGE_PERMISSIONS>;

        $r47[0] = $r48;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantSystemFixedPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, $r46, i0, $r47);

        if r205 != null goto label21;

        $r188 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String getDefaultSystemHandlerActivityPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int)>(r190, "android.intent.action.DIAL", i0);

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantDefaultPermissionsToDefaultSystemDialerApp(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int)>(r190, $r188, i0);

        goto label23;

     label21:
        i2 = lengthof r205;

        i3 = 0;

     label22:
        if i3 >= i2 goto label23;

        $r187 = r205[i3];

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantDefaultPermissionsToDefaultSystemDialerApp(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int)>(r190, $r187, i0);

        i3 = i3 + 1;

        goto label22;

     label23:
        if r206 == null goto label25;

        i4 = lengthof r206;

        i5 = 0;

     label24:
        if i5 >= i4 goto label25;

        $r186 = r206[i5];

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantDefaultPermissionsToDefaultSystemSimCallManager(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int)>(r190, $r186, i0);

        i5 = i5 + 1;

        goto label24;

     label25:
        if r207 == null goto label27;

        i6 = lengthof r207;

        i7 = 0;

     label26:
        if i7 >= i6 goto label27;

        $r185 = r207[i7];

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantDefaultPermissionsToDefaultSystemUseOpenWifiApp(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int)>(r190, $r185, i0);

        i7 = i7 + 1;

        goto label26;

     label27:
        if r204 != null goto label28;

        $r184 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String getDefaultSystemHandlerActivityPackageForCategory(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int)>(r190, "android.intent.category.APP_MESSAGING", i0);

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantDefaultPermissionsToDefaultSystemSmsApp(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int)>(r190, $r184, i0);

        goto label30;

     label28:
        i8 = lengthof r204;

        i9 = 0;

     label29:
        if i9 >= i8 goto label30;

        $r183 = r204[i9];

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantDefaultPermissionsToDefaultSystemSmsApp(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int)>(r190, $r183, i0);

        i9 = i9 + 1;

        goto label29;

     label30:
        $r49 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String getDefaultSystemHandlerActivityPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int)>(r190, "android.provider.Telephony.SMS_CB_RECEIVED", i0);

        $r50 = newarray (java.util.Set)[1];

        $r51 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set SMS_PERMISSIONS>;

        $r50[0] = $r51;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantSystemFixedPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, $r49, i0, $r50);

        $r52 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String getDefaultSystemHandlerServicePackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int)>(r190, "android.provider.Telephony.SMS_CARRIER_PROVISION", i0);

        $r53 = newarray (java.util.Set)[1];

        $r54 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set SMS_PERMISSIONS>;

        $r53[0] = $r54;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, $r52, i0, $r53);

        $r55 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String getDefaultSystemHandlerActivityPackageForCategory(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int)>(r190, "android.intent.category.APP_CALENDAR", i0);

        $r56 = newarray (java.util.Set)[2];

        $r57 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set CALENDAR_PERMISSIONS>;

        $r56[0] = $r57;

        $r58 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set CONTACTS_PERMISSIONS>;

        $r56[1] = $r58;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, $r55, i0, $r56);

        r210 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String getDefaultProviderAuthorityPackage(java.lang.String,int)>("com.android.calendar", i0);

        $r59 = newarray (java.util.Set)[2];

        $r60 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set CONTACTS_PERMISSIONS>;

        $r59[0] = $r60;

        $r61 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set STORAGE_PERMISSIONS>;

        $r59[1] = $r61;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, r210, i0, $r59);

        $r62 = newarray (java.util.Set)[1];

        $r63 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set CALENDAR_PERMISSIONS>;

        $r62[0] = $r63;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantSystemFixedPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, r210, i0, $r62);

        $r64 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.ArrayList getHeadlessSyncAdapterPackages(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String[],int)>(r190, r209, i0);

        $r65 = newarray (java.util.Set)[1];

        $r66 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set CALENDAR_PERMISSIONS>;

        $r65[0] = $r66;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionToEachSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.util.ArrayList,int,java.util.Set[])>(r190, $r64, i0, $r65);

        $r67 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String getDefaultSystemHandlerActivityPackageForCategory(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int)>(r190, "android.intent.category.APP_CONTACTS", i0);

        $r68 = newarray (java.util.Set)[2];

        $r69 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set CONTACTS_PERMISSIONS>;

        $r68[0] = $r69;

        $r70 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set PHONE_PERMISSIONS>;

        $r68[1] = $r70;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, $r67, i0, $r68);

        $r71 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.ArrayList getHeadlessSyncAdapterPackages(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String[],int)>(r190, r208, i0);

        $r72 = newarray (java.util.Set)[1];

        $r73 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set CONTACTS_PERMISSIONS>;

        $r72[0] = $r73;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionToEachSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.util.ArrayList,int,java.util.Set[])>(r190, $r71, i0, $r72);

        r211 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String getDefaultProviderAuthorityPackage(java.lang.String,int)>("com.android.contacts", i0);

        $r74 = newarray (java.util.Set)[2];

        $r75 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set CONTACTS_PERMISSIONS>;

        $r74[0] = $r75;

        $r76 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set PHONE_PERMISSIONS>;

        $r74[1] = $r76;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantSystemFixedPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, r211, i0, $r74);

        $r77 = newarray (java.util.Set)[1];

        $r78 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set STORAGE_PERMISSIONS>;

        $r77[0] = $r78;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, r211, i0, $r77);

        $r79 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String getDefaultSystemHandlerActivityPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int)>(r190, "android.app.action.PROVISION_MANAGED_DEVICE", i0);

        $r80 = newarray (java.util.Set)[1];

        $r81 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set CONTACTS_PERMISSIONS>;

        $r80[0] = $r81;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, $r79, i0, $r80);

        $r82 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String getDefaultSystemHandlerActivityPackageForCategory(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int)>(r190, "android.intent.category.APP_EMAIL", i0);

        $r83 = newarray (java.util.Set)[2];

        $r84 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set CONTACTS_PERMISSIONS>;

        $r83[0] = $r84;

        $r85 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set CALENDAR_PERMISSIONS>;

        $r83[1] = $r85;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, $r82, i0, $r83);

        $r86 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String[] getKnownPackages(int,int)>(4, i0);

        $r87 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object firstOrNull(java.lang.Object[])>($r86);

        r212 = (java.lang.String) $r87;

        if r212 != null goto label32;

        r212 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String getDefaultSystemHandlerActivityPackageForCategory(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int)>(r190, "android.intent.category.APP_BROWSER", i0);

        $z5 = virtualinvoke r190.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: boolean isSystemPackage(java.lang.String)>(r212);

        if $z5 != 0 goto label31;

        r212 = null;

        goto label32;

     label31:
        goto label32;

     label32:
        $r213 = newarray (java.util.Set)[1];

        $r214 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set FOREGROUND_LOCATION_PERMISSIONS>;

        $r213[0] = $r214;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,boolean,boolean,java.util.Set[])>(r190, r212, i0, 0, 1, $r213);

        if r201 == null goto label35;

        i10 = lengthof r201;

        i11 = 0;

     label33:
        if i11 >= i10 goto label34;

        $r182 = r201[i11];

        $r175 = newarray (java.util.Set)[6];

        $r176 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set CONTACTS_PERMISSIONS>;

        $r175[0] = $r176;

        $r177 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set CALENDAR_PERMISSIONS>;

        $r175[1] = $r177;

        $r178 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set MICROPHONE_PERMISSIONS>;

        $r175[2] = $r178;

        $r179 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set PHONE_PERMISSIONS>;

        $r175[3] = $r179;

        $r180 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set SMS_PERMISSIONS>;

        $r175[4] = $r180;

        $r181 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set ALWAYS_LOCATION_PERMISSIONS>;

        $r175[5] = $r181;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, $r182, i0, $r175);

        i11 = i11 + 1;

        goto label33;

     label34:
        goto label35;

     label35:
        $z0 = staticinvoke <android.app.ActivityManager: boolean isLowRamDeviceStatic()>();

        if $z0 == 0 goto label36;

        $r171 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String getDefaultSystemHandlerActivityPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int)>(r190, "android.search.action.GLOBAL_SEARCH", i0);

        $r172 = newarray (java.util.Set)[2];

        $r173 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set MICROPHONE_PERMISSIONS>;

        $r172[0] = $r173;

        $r174 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set ALWAYS_LOCATION_PERMISSIONS>;

        $r172[1] = $r174;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, $r171, i0, $r172);

     label36:
        $r88 = new android.content.Intent;

        specialinvoke $r88.<android.content.Intent: void <init>(java.lang.String)>("android.speech.RecognitionService");

        r215 = virtualinvoke $r88.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>("android.intent.category.DEFAULT");

        $r89 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String getDefaultSystemHandlerServicePackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,android.content.Intent,int)>(r190, r215, i0);

        $r90 = newarray (java.util.Set)[1];

        $r91 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set MICROPHONE_PERMISSIONS>;

        $r90[0] = $r91;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, $r89, i0, $r90);

        if r202 == null goto label38;

        i12 = lengthof r202;

        i13 = 0;

     label37:
        if i13 >= i12 goto label38;

        r216 = r202[i13];

        $r159 = newarray (java.util.Set)[8];

        $r160 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set CONTACTS_PERMISSIONS>;

        $r159[0] = $r160;

        $r161 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set CALENDAR_PERMISSIONS>;

        $r159[1] = $r161;

        $r162 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set MICROPHONE_PERMISSIONS>;

        $r159[2] = $r162;

        $r163 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set PHONE_PERMISSIONS>;

        $r159[3] = $r163;

        $r164 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set SMS_PERMISSIONS>;

        $r159[4] = $r164;

        $r165 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set CAMERA_PERMISSIONS>;

        $r159[5] = $r165;

        $r166 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set SENSORS_PERMISSIONS>;

        $r159[6] = $r166;

        $r167 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set STORAGE_PERMISSIONS>;

        $r159[7] = $r167;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, r216, i0, $r159);

        $r168 = newarray (java.util.Set)[2];

        $r169 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set ALWAYS_LOCATION_PERMISSIONS>;

        $r168[0] = $r169;

        $r170 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set ACTIVITY_RECOGNITION_PERMISSIONS>;

        $r168[1] = $r170;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantSystemFixedPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, r216, i0, $r168);

        i13 = i13 + 1;

        goto label37;

     label38:
        if r203 == null goto label40;

        i14 = lengthof r203;

        i15 = 0;

     label39:
        if i15 >= i14 goto label40;

        $r158 = r203[i15];

        $r156 = newarray (java.util.Set)[1];

        $r157 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set ALWAYS_LOCATION_PERMISSIONS>;

        $r156[0] = $r157;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, $r158, i0, $r156);

        i15 = i15 + 1;

        goto label39;

     label40:
        $r92 = new android.content.Intent;

        specialinvoke $r92.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.VIEW");

        $r93 = virtualinvoke $r92.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>("android.intent.category.DEFAULT");

        $r94 = new java.io.File;

        specialinvoke $r94.<java.io.File: void <init>(java.lang.String)>("foo.mp3");

        $r95 = staticinvoke <android.net.Uri: android.net.Uri fromFile(java.io.File)>($r94);

        r217 = virtualinvoke $r93.<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>($r95, "audio/mpeg");

        $r96 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String getDefaultSystemHandlerActivityPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,android.content.Intent,int)>(r190, r217, i0);

        $r97 = newarray (java.util.Set)[1];

        $r98 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set STORAGE_PERMISSIONS>;

        $r97[0] = $r98;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, $r96, i0, $r97);

        $r99 = new android.content.Intent;

        specialinvoke $r99.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.MAIN");

        $r100 = virtualinvoke $r99.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>("android.intent.category.HOME");

        r218 = virtualinvoke $r100.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>("android.intent.category.LAUNCHER_APP");

        $r101 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String getDefaultSystemHandlerActivityPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,android.content.Intent,int)>(r190, r218, i0);

        $r102 = newarray (java.util.Set)[1];

        $r103 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set ALWAYS_LOCATION_PERMISSIONS>;

        $r102[0] = $r103;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, $r101, i0, $r102);

        $r104 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: android.content.Context mContext>;

        $r105 = virtualinvoke $r104.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $z1 = virtualinvoke $r105.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String,int)>("android.hardware.type.watch", 0);

        if $z1 == 0 goto label41;

        r219 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String getDefaultSystemHandlerActivityPackageForCategory(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int)>(r190, "android.intent.category.HOME_MAIN", i0);

        $r146 = newarray (java.util.Set)[3];

        $r147 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set CONTACTS_PERMISSIONS>;

        $r146[0] = $r147;

        $r148 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set MICROPHONE_PERMISSIONS>;

        $r146[1] = $r148;

        $r149 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set ALWAYS_LOCATION_PERMISSIONS>;

        $r146[2] = $r149;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, r219, i0, $r146);

        $r150 = newarray (java.util.Set)[1];

        $r151 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set PHONE_PERMISSIONS>;

        $r150[0] = $r151;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantSystemFixedPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, r219, i0, $r150);

        $r152 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String getDefaultSystemHandlerActivityPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int)>(r190, "com.android.fitness.TRACK", i0);

        $r153 = newarray (java.util.Set)[2];

        $r154 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set SENSORS_PERMISSIONS>;

        $r153[0] = $r154;

        $r155 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set ALWAYS_LOCATION_PERMISSIONS>;

        $r153[1] = $r155;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, $r152, i0, $r153);

        goto label41;

     label41:
        $r106 = newarray (java.util.Set)[1];

        $r107 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set ALWAYS_LOCATION_PERMISSIONS>;

        $r106[0] = $r107;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantSystemFixedPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, "com.android.printspooler", i0, $r106);

        $r108 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String getDefaultSystemHandlerActivityPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int)>(r190, "android.telephony.action.EMERGENCY_ASSISTANCE", i0);

        $r109 = newarray (java.util.Set)[2];

        $r110 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set CONTACTS_PERMISSIONS>;

        $r109[0] = $r110;

        $r111 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set PHONE_PERMISSIONS>;

        $r109[1] = $r111;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantSystemFixedPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, $r108, i0, $r109);

        $r112 = new android.content.Intent;

        specialinvoke $r112.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.VIEW");

        r220 = virtualinvoke $r112.<android.content.Intent: android.content.Intent setType(java.lang.String)>("vnd.android.cursor.item/ndef_msg");

        $r113 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String getDefaultSystemHandlerActivityPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,android.content.Intent,int)>(r190, r220, i0);

        $r114 = newarray (java.util.Set)[2];

        $r115 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set CONTACTS_PERMISSIONS>;

        $r114[0] = $r115;

        $r116 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set PHONE_PERMISSIONS>;

        $r114[1] = $r116;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, $r113, i0, $r114);

        $r117 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String getDefaultSystemHandlerActivityPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int)>(r190, "android.os.storage.action.MANAGE_STORAGE", i0);

        $r118 = newarray (java.util.Set)[1];

        $r119 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set STORAGE_PERMISSIONS>;

        $r118[0] = $r119;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantSystemFixedPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, $r117, i0, $r118);

        $r120 = newarray (java.util.Set)[1];

        $r121 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set ALWAYS_LOCATION_PERMISSIONS>;

        $r120[0] = $r121;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantSystemFixedPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, "com.android.companiondevicemanager", i0, $r120);

        $r122 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String getDefaultSystemHandlerActivityPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int)>(r190, "android.intent.action.RINGTONE_PICKER", i0);

        $r123 = newarray (java.util.Set)[1];

        $r124 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set STORAGE_PERMISSIONS>;

        $r123[0] = $r124;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantSystemFixedPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, $r122, i0, $r123);

        r221 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.String[] getKnownPackages(int,int)>(5, i0);

        i16 = lengthof r221;

        i17 = 0;

     label42:
        if i17 >= i16 goto label43;

        $r145 = r221[i17];

        $r142 = newarray (java.util.Set)[2];

        $r143 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set COARSE_BACKGROUND_LOCATION_PERMISSIONS>;

        $r142[0] = $r143;

        $r144 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set CONTACTS_PERMISSIONS>;

        $r142[1] = $r144;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, $r145, i0, $r142);

        i17 = i17 + 1;

        goto label42;

     label43:
        $r125 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: android.content.Context mContext>;

        $r126 = virtualinvoke $r125.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r222 = virtualinvoke $r126.<android.content.pm.PackageManager: java.lang.String getContentCaptureServicePackageName()>();

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r222);

        if $z2 != 0 goto label44;

        $r137 = newarray (java.util.Set)[4];

        $r138 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set PHONE_PERMISSIONS>;

        $r137[0] = $r138;

        $r139 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set SMS_PERMISSIONS>;

        $r137[1] = $r139;

        $r140 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set ALWAYS_LOCATION_PERMISSIONS>;

        $r137[2] = $r140;

        $r141 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set CONTACTS_PERMISSIONS>;

        $r137[3] = $r141;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, r222, i0, $r137);

     label44:
        $r127 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: android.content.Context mContext>;

        $r128 = virtualinvoke $r127.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r223 = virtualinvoke $r128.<android.content.pm.PackageManager: java.lang.String getAttentionServicePackageName()>();

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r223);

        if $z3 != 0 goto label45;

        $r135 = newarray (java.util.Set)[1];

        $r136 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set CAMERA_PERMISSIONS>;

        $r135[0] = $r136;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, r223, i0, $r135);

        goto label45;

     label45:
        $r129 = newarray (java.util.Set)[1];

        $r130 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set STORAGE_PERMISSIONS>;

        $r129[0] = $r130;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantSystemFixedPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, "com.android.sharedstoragebackup", i0, $r129);

        $r131 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: android.content.Context mContext>;

        $r132 = virtualinvoke $r131.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r224 = virtualinvoke $r132.<android.content.pm.PackageManager: java.lang.String getSystemCaptionsServicePackageName()>();

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r224);

        if $z4 != 0 goto label46;

        $r133 = newarray (java.util.Set)[1];

        $r134 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set MICROPHONE_PERMISSIONS>;

        $r133[0] = $r134;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r190, r224, i0, $r133);

     label46:
        return;

     label47:
        $r189 := @caughtexception;

     label48:
        exitmonitor r192;

     label49:
        throw $r189;

        catch java.lang.Throwable from label01 to label02 with label47;
        catch java.lang.Throwable from label48 to label49 with label47;
    }

    private final transient void grantIgnoringSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper, java.lang.String, int, java.util.Set[])
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper r1;
        java.lang.String r2;
        int i0;
        java.util.Set[] r3;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r1 := @parameter0: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: java.util.Set[];

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,boolean,boolean,java.util.Set[])>(r1, r2, i0, 1, 1, r3);

        return;
    }

    private final transient void grantPermissionToEachSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper, java.util.ArrayList, int, java.util.Set[])
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper r1;
        java.util.ArrayList r2;
        int i0, i1, i2;
        java.util.Set[] r3;
        java.lang.Object $r4;
        java.lang.String $r5;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r1 := @parameter0: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper;

        r2 := @parameter1: java.util.ArrayList;

        i0 := @parameter2: int;

        r3 := @parameter3: java.util.Set[];

        if r2 != null goto label1;

        return;

     label1:
        i1 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i2 = 0;

     label2:
        if i2 >= i1 goto label3;

        $r4 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r5 = (java.lang.String) $r4;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>(r1, $r5, i0, r3);

        i2 = i2 + 1;

        goto label2;

     label3:
        return;
    }

    private final transient void grantPermissionsToPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper, android.content.pm.PackageInfo, int, boolean, boolean, boolean, java.util.Set[])
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper r1;
        android.content.pm.PackageInfo r2;
        int i0, i1, i2;
        boolean z0, z1, z2, $z3;
        java.util.Set[] r3;
        java.util.Set $r4;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r1 := @parameter0: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper;

        r2 := @parameter1: android.content.pm.PackageInfo;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        z2 := @parameter5: boolean;

        r3 := @parameter6: java.util.Set[];

        if r2 != null goto label1;

        return;

     label1:
        $z3 = staticinvoke <com.android.server.pm.permission.DefaultPermissionGrantPolicy: boolean doesPackageSupportRuntimePermissions(android.content.pm.PackageInfo)>(r2);

        if $z3 == 0 goto label3;

        i1 = lengthof r3;

        i2 = 0;

     label2:
        if i2 >= i1 goto label3;

        $r4 = r3[i2];

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantRuntimePermissions(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,android.content.pm.PackageInfo,java.util.Set,boolean,boolean,boolean,int)>(r1, r2, $r4, z0, z1, z2, i0);

        i2 = i2 + 1;

        goto label2;

     label3:
        return;
    }

    private final transient void grantPermissionsToPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper, java.lang.String, int, boolean, boolean, java.util.Set[])
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper r1;
        java.lang.String r2;
        int i0;
        boolean z0, z1;
        java.util.Set[] r3;
        android.content.pm.PackageInfo $r4;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r1 := @parameter0: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        r3 := @parameter5: java.util.Set[];

        $r4 = virtualinvoke r1.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: android.content.pm.PackageInfo getPackageInfo(java.lang.String)>(r2);

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,android.content.pm.PackageInfo,int,boolean,boolean,boolean,java.util.Set[])>(r1, $r4, i0, 0, z0, z1, r3);

        return;
    }

    private void grantPermissionsToSysComponentsAndPrivApps(com.android.server.pm.permission.DefaultPermissionGrantPolicy$DelayingPackageManagerCache, int)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$DelayingPackageManagerCache r1;
        int i0, i1, i3;
        java.lang.StringBuilder $r2;
        java.lang.String $r5, $r11, $r12, $r15;
        android.content.Context $r6;
        android.content.pm.PackageManager $r7;
        java.lang.Object $r8, $r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.String[] $r9, $r16, r23;
        android.content.pm.ApplicationInfo $r10;
        java.util.Set $r13;
        java.util.List r18;
        java.util.Iterator r19, r21;
        android.content.pm.PackageInfo r20, r22;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r1 := @parameter0: com.android.server.pm.permission.DefaultPermissionGrantPolicy$DelayingPackageManagerCache;

        i0 := @parameter1: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Granting permissions to platform components for user ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("DefaultPermGrantPolicy", $r5);

        $r6 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r18 = virtualinvoke $r7.<android.content.pm.PackageManager: java.util.List getInstalledPackagesAsUser(int,int)>(536915968, 0);

        r19 = interfaceinvoke r18.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z7 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label04;

        $r14 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        r20 = (android.content.pm.PackageInfo) $r14;

        if r20 != null goto label02;

        goto label01;

     label02:
        $r15 = r20.<android.content.pm.PackageInfo: java.lang.String packageName>;

        virtualinvoke r1.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$DelayingPackageManagerCache: void addPackageInfo(java.lang.String,android.content.pm.PackageInfo)>($r15, r20);

        $z4 = virtualinvoke r1.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$DelayingPackageManagerCache: boolean isSysComponentOrPersistentPlatformSignedPrivApp(android.content.pm.PackageInfo)>(r20);

        if $z4 == 0 goto label01;

        $z5 = staticinvoke <com.android.server.pm.permission.DefaultPermissionGrantPolicy: boolean doesPackageSupportRuntimePermissions(android.content.pm.PackageInfo)>(r20);

        if $z5 == 0 goto label01;

        $r16 = r20.<android.content.pm.PackageInfo: java.lang.String[] requestedPermissions>;

        $z6 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>($r16);

        if $z6 == 0 goto label03;

        goto label01;

     label03:
        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantRuntimePermissionsForSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,int,android.content.pm.PackageInfo)>(r1, i0, r20);

        goto label01;

     label04:
        r21 = interfaceinvoke r18.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z8 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label10;

        $r8 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>();

        r22 = (android.content.pm.PackageInfo) $r8;

        if r22 == null goto label05;

        $z0 = staticinvoke <com.android.server.pm.permission.DefaultPermissionGrantPolicy: boolean doesPackageSupportRuntimePermissions(android.content.pm.PackageInfo)>(r22);

        if $z0 == 0 goto label05;

        $r9 = r22.<android.content.pm.PackageInfo: java.lang.String[] requestedPermissions>;

        $z1 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>($r9);

        if $z1 != 0 goto label05;

        $r10 = r22.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $z2 = virtualinvoke $r10.<android.content.pm.ApplicationInfo: boolean isPrivilegedApp()>();

        if $z2 != 0 goto label06;

        goto label05;

     label06:
        r23 = r22.<android.content.pm.PackageInfo: java.lang.String[] requestedPermissions>;

        i1 = lengthof r23;

        i3 = 0;

     label07:
        if i3 >= i1 goto label09;

        $r12 = "android.permission.READ_PRIVILEGED_PHONE_STATE";

        $r11 = r23[i3];

        $z3 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z3 == 0 goto label08;

        $r13 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>("android.permission.READ_PHONE_STATE");

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantRuntimePermissions(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,android.content.pm.PackageInfo,java.util.Set,boolean,int)>(r1, r22, $r13, 1, i0);

        goto label08;

     label08:
        i3 = i3 + 1;

        goto label07;

     label09:
        goto label05;

     label10:
        return;
    }

    private final transient void grantPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper, java.lang.String, int, boolean, java.util.Set[])
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper r1;
        java.lang.String r2;
        int i0;
        boolean z0, $z1;
        java.util.Set[] r3;
        android.content.pm.PackageInfo $r4;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r1 := @parameter0: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        r3 := @parameter4: java.util.Set[];

        $z1 = virtualinvoke r1.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: boolean isSystemPackage(java.lang.String)>(r2);

        if $z1 != 0 goto label1;

        return;

     label1:
        $r4 = virtualinvoke r1.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: android.content.pm.PackageInfo getSystemPackageInfo(java.lang.String)>(r2);

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,android.content.pm.PackageInfo,int,boolean,boolean,boolean,java.util.Set[])>(r1, $r4, i0, z0, 0, 1, r3);

        return;
    }

    private final transient void grantPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper, java.lang.String, int, java.util.Set[])
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper r1;
        java.lang.String r2;
        int i0;
        java.util.Set[] r3;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r1 := @parameter0: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: java.util.Set[];

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,boolean,java.util.Set[])>(r1, r2, i0, 0, r3);

        return;
    }

    private void grantRuntimePermissions(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper, android.content.pm.PackageInfo, java.util.Set, boolean, int)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper r1;
        android.content.pm.PackageInfo r2;
        java.util.Set r3;
        boolean z0;
        int i0;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r1 := @parameter0: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper;

        r2 := @parameter1: android.content.pm.PackageInfo;

        r3 := @parameter2: java.util.Set;

        z0 := @parameter3: boolean;

        i0 := @parameter4: int;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantRuntimePermissions(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,android.content.pm.PackageInfo,java.util.Set,boolean,boolean,boolean,int)>(r1, r2, r3, z0, 0, 1, i0);

        return;
    }

    private void grantRuntimePermissions(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper, android.content.pm.PackageInfo, java.util.Set, boolean, boolean, boolean, int)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper r1;
        android.content.pm.PackageInfo r2, $r7, r33;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z13, z14, $z15;
        android.os.UserHandle r3;
        java.util.List r5, $r21, $r24;
        java.lang.String $r6, $r14, $r15, $r17, $r23, $r25, r37, r40, r41;
        com.android.server.pm.permission.'-$$Lambda$DefaultPermissionGrantPolicy$SHfHTWKpfBf_vZtWArm-FlNBI8k' $r8;
        java.lang.Object[] $r9;
        android.content.Context $r11;
        java.lang.Object $r12, $r22;
        android.permission.PermissionManager $r13;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i19, i20, i22, i23, $i24, i25, $i28;
        android.content.pm.PackageManagerInternal $r16;
        java.lang.String[] $r18, $r19, r28, r29, r30, r35, r36, r38;
        java.util.Set r26;
        android.content.pm.ApplicationInfo r31;
        android.permission.PermissionManager$SplitPermissionInfo r32;
        android.util.ArraySet r34, r42, r43;
        java.util.function.IntFunction r44;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r1 := @parameter0: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper;

        r2 := @parameter1: android.content.pm.PackageInfo;

        r26 := @parameter2: java.util.Set;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        z2 := @parameter5: boolean;

        i9 := @parameter6: int;

        r3 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>(i9);

        if r2 != null goto label01;

        return;

     label01:
        r28 = r2.<android.content.pm.PackageInfo: java.lang.String[] requestedPermissions>;

        $z3 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r28);

        if $z3 == 0 goto label02;

        return;

     label02:
        $r6 = r2.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $r7 = virtualinvoke r1.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: android.content.pm.PackageInfo getPackageInfo(java.lang.String)>($r6);

        r29 = $r7.<android.content.pm.PackageInfo: java.lang.String[] requestedPermissions>;

        i10 = lengthof r28;

        i11 = 0;

     label03:
        if i11 >= i10 goto label05;

        $r25 = r28[i11];

        $z13 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>(r29, $r25);

        if $z13 != 0 goto label04;

        r28[i11] = null;

     label04:
        i11 = i11 + 1;

        goto label03;

     label05:
        $r8 = <com.android.server.pm.permission._$$Lambda$DefaultPermissionGrantPolicy$SHfHTWKpfBf_vZtWArm_FlNBI8k: com.android.server.pm.permission.'-$$Lambda$DefaultPermissionGrantPolicy$SHfHTWKpfBf_vZtWArm-FlNBI8k' INSTANCE>;

        r44 = (java.util.function.IntFunction) $r8;

        $r9 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] filterNotNull(java.lang.Object[],java.util.function.IntFunction)>(r28, r44);

        r30 = (java.lang.String[]) $r9;

        r42 = new android.util.ArraySet;

        specialinvoke r42.<android.util.ArraySet: void <init>(java.util.Collection)>(r26);

        r31 = r2.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        i12 = 32;

        if z0 == 0 goto label06;

        i12 = 32 | 16;

     label06:
        $r11 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: android.content.Context mContext>;

        $r12 = virtualinvoke $r11.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/permission/PermissionManager;");

        $r13 = (android.permission.PermissionManager) $r12;

        r5 = virtualinvoke $r13.<android.permission.PermissionManager: java.util.List getSplitPermissions()>();

        i13 = interfaceinvoke r5.<java.util.List: int size()>();

        i14 = 0;

     label07:
        if i14 >= i13 goto label09;

        $r22 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i14);

        r32 = (android.permission.PermissionManager$SplitPermissionInfo) $r22;

        if r31 == null goto label08;

        $i7 = r31.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        $i8 = virtualinvoke r32.<android.permission.PermissionManager$SplitPermissionInfo: int getTargetSdk()>();

        if $i7 >= $i8 goto label08;

        $r23 = virtualinvoke r32.<android.permission.PermissionManager$SplitPermissionInfo: java.lang.String getSplitPermission()>();

        $z11 = interfaceinvoke r26.<java.util.Set: boolean contains(java.lang.Object)>($r23);

        if $z11 == 0 goto label08;

        $r24 = virtualinvoke r32.<android.permission.PermissionManager$SplitPermissionInfo: java.util.List getNewPermissions()>();

        virtualinvoke r42.<android.util.ArraySet: boolean addAll(java.util.Collection)>($r24);

        goto label08;

     label08:
        i14 = i14 + 1;

        goto label07;

     label09:
        if z1 != 0 goto label11;

        if r31 == null goto label11;

        $z8 = virtualinvoke r31.<android.content.pm.ApplicationInfo: boolean isUpdatedSystemApp()>();

        if $z8 == 0 goto label11;

        $r16 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: android.content.pm.PackageManagerInternal mServiceInternal>;

        $r15 = r2.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $r17 = virtualinvoke $r16.<android.content.pm.PackageManagerInternal: java.lang.String getDisabledSystemPackageName(java.lang.String)>($r15);

        r33 = virtualinvoke r1.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: android.content.pm.PackageInfo getSystemPackageInfo(java.lang.String)>($r17);

        if r33 == null goto label11;

        $r18 = r33.<android.content.pm.PackageInfo: java.lang.String[] requestedPermissions>;

        $z9 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>($r18);

        if $z9 == 0 goto label10;

        return;

     label10:
        $r19 = r33.<android.content.pm.PackageInfo: java.lang.String[] requestedPermissions>;

        $z10 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>(r30, $r19);

        if $z10 != 0 goto label11;

        r43 = new android.util.ArraySet;

        $r21 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r30);

        specialinvoke r43.<android.util.ArraySet: void <init>(java.util.Collection)>($r21);

        r34 = r43;

        r35 = r33.<android.content.pm.PackageInfo: java.lang.String[] requestedPermissions>;

        goto label12;

     label11:
        r35 = r30;

        r34 = null;

     label12:
        i15 = lengthof r35;

        r36 = newarray (java.lang.String)[i15];

        i16 = 0;

        i17 = 0;

        i19 = 0;

     label13:
        if i19 >= i15 goto label16;

        r37 = r35[i19];

        $r14 = virtualinvoke r1.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: java.lang.String getBackgroundPermission(java.lang.String)>(r37);

        if $r14 == null goto label14;

        r36[i16] = r37;

        i16 = i16 + 1;

        goto label15;

     label14:
        $i5 = i15 - 1;

        $i6 = $i5 - i17;

        r36[$i6] = r37;

        i17 = i17 + 1;

     label15:
        i19 = i19 + 1;

        goto label13;

     label16:
        i20 = 0;

        r38 = r35;

     label17:
        if i20 >= i15 goto label30;

        r40 = r38[i20];

        if r34 == null goto label18;

        $z7 = interfaceinvoke r34.<java.util.Set: boolean contains(java.lang.Object)>(r40);

        if $z7 != 0 goto label18;

        i22 = i12;

        goto label29;

     label18:
        $z4 = virtualinvoke r42.<android.util.ArraySet: boolean contains(java.lang.Object)>(r40);

        if $z4 == 0 goto label28;

        i23 = virtualinvoke r1.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: int getPermissionFlags(java.lang.String,android.content.pm.PackageInfo,android.os.UserHandle)>(r40, r2, r3);

        if z0 == 0 goto label19;

        $i4 = i23 & 16;

        if $i4 == 0 goto label19;

        z14 = 1;

        goto label20;

     label19:
        z14 = 0;

     label20:
        $z15 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: boolean isFixedOrUserSet(int)>(i23);

        if $z15 == 0 goto label22;

        if z1 != 0 goto label22;

        if z14 == 0 goto label21;

        goto label22;

     label21:
        goto label27;

     label22:
        $i24 = i23 & 4;

        if $i24 == 0 goto label23;

        i22 = i12;

        goto label29;

     label23:
        $i1 = i23 & 14336;

        i25 = i12 | $i1;

        if z2 == 0 goto label24;

        $z6 = virtualinvoke r1.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: boolean isPermissionRestricted(java.lang.String)>(r40);

        if $z6 == 0 goto label24;

        virtualinvoke r1.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: void updatePermissionFlags(java.lang.String,android.content.pm.PackageInfo,int,int,android.os.UserHandle)>(r40, r2, 4096, 4096, r3);

        goto label24;

     label24:
        r41 = r40;

        if z14 == 0 goto label25;

        $i3 = i23 & -17;

        virtualinvoke r1.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: void updatePermissionFlags(java.lang.String,android.content.pm.PackageInfo,int,int,android.os.UserHandle)>(r40, r2, i23, $i3, r3);

     label25:
        $z5 = virtualinvoke r1.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: boolean isGranted(java.lang.String,android.content.pm.PackageInfo,android.os.UserHandle)>(r41, r2, r3);

        if $z5 != 0 goto label26;

        virtualinvoke r1.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: void grantPermission(java.lang.String,android.content.pm.PackageInfo,android.os.UserHandle)>(r41, r2, r3);

     label26:
        r40 = r41;

        virtualinvoke r1.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: void updatePermissionFlags(java.lang.String,android.content.pm.PackageInfo,int,int,android.os.UserHandle)>(r41, r2, i25, i25, r3);

        i12 = i25;

     label27:
        i22 = i12;

        $i28 = i23 & 32;

        if $i28 == 0 goto label29;

        i22 = i12;

        $i2 = i23 & 16;

        if $i2 == 0 goto label29;

        i22 = i12;

        if z0 != 0 goto label29;

        virtualinvoke r1.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: void updatePermissionFlags(java.lang.String,android.content.pm.PackageInfo,int,int,android.os.UserHandle)>(r40, r2, 16, 0, r3);

        i22 = i12;

        goto label29;

     label28:
        i22 = i12;

     label29:
        i20 = i20 + 1;

        i12 = i22;

        goto label17;

     label30:
        return;
    }

    private void grantRuntimePermissionsForSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper, int, android.content.pm.PackageInfo)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper r1;
        int i0, i1, i2;
        android.content.pm.PackageInfo r2;
        java.lang.String[] r4;
        java.lang.String r5;
        android.content.pm.PermissionInfo r6;
        android.util.ArraySet $r7;
        boolean $z0, $z1;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r1 := @parameter0: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.pm.PackageInfo;

        $r7 = new android.util.ArraySet;

        specialinvoke $r7.<android.util.ArraySet: void <init>()>();

        r4 = r2.<android.content.pm.PackageInfo: java.lang.String[] requestedPermissions>;

        i1 = lengthof r4;

        i2 = 0;

     label1:
        if i2 >= i1 goto label4;

        r5 = r4[i2];

        r6 = virtualinvoke r1.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String)>(r5);

        if r6 != null goto label2;

        goto label3;

     label2:
        $z1 = virtualinvoke r6.<android.content.pm.PermissionInfo: boolean isRuntime()>();

        if $z1 == 0 goto label3;

        interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>(r5);

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        $z0 = interfaceinvoke $r7.<java.util.Set: boolean isEmpty()>();

        if $z0 != 0 goto label5;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantRuntimePermissions(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,android.content.pm.PackageInfo,java.util.Set,boolean,int)>(r1, r2, $r7, 1, i0);

     label5:
        return;
    }

    private final transient void grantSystemFixedPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper, java.lang.String, int, java.util.Set[])
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper r1;
        java.lang.String r2;
        int i0;
        java.util.Set[] r3;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r1 := @parameter0: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: java.util.Set[];

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,boolean,java.util.Set[])>(r1, r2, i0, 1, r3);

        return;
    }

    private boolean isFixedOrUserSet(int)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        int i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        i0 := @parameter0: int;

        $i1 = i0 & 23;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    static java.lang.String[] lambda$grantRuntimePermissions$0(int)
    {
        int i0;
        java.lang.String[] $r0;

        i0 := @parameter0: int;

        $r0 = newarray (java.lang.String)[i0];

        return $r0;
    }

    private void parse(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper, org.xmlpull.v1.XmlPullParser, java.util.Map) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper r1;
        org.xmlpull.v1.XmlPullParser r2;
        java.util.Map r3;
        int i0, i1, $i3;
        java.lang.String $r5, $r6, $r9, $r11;
        boolean $z0;
        java.lang.StringBuilder $r7;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r1 := @parameter0: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter2: java.util.Map;

        i0 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        i1 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 == 1 goto label5;

        if i1 != 3 goto label2;

        $i3 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i3 <= i0 goto label5;

     label2:
        if i1 == 3 goto label1;

        if i1 != 4 goto label3;

        goto label1;

     label3:
        $r5 = "exceptions";

        $r6 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label4;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void parseExceptions(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,org.xmlpull.v1.XmlPullParser,java.util.Map)>(r1, r2, r3);

        goto label1;

     label4:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown tag ");

        $r9 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DefaultPermGrantPolicy", $r11);

        goto label1;

     label5:
        return;
    }

    private void parseExceptions(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper, org.xmlpull.v1.XmlPullParser, java.util.Map) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper r1;
        org.xmlpull.v1.XmlPullParser r2;
        java.util.Map r3;
        int i0, i1, $i6;
        java.lang.String r4, $r6, $r7, $r10, $r13, $r20, $r24, $r28;
        java.util.List r5, r40;
        boolean $z0, $z1, $z2;
        java.lang.Object $r14, r29;
        android.content.pm.PackageInfo r30;
        java.lang.StringBuilder r35, r36, r37, r39;
        java.util.ArrayList r38;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r1 := @parameter0: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter2: java.util.Map;

        i0 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        i1 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 == 1 goto label9;

        if i1 != 3 goto label2;

        $i6 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i6 <= i0 goto label9;

     label2:
        if i1 == 3 goto label1;

        if i1 != 4 goto label3;

        goto label1;

     label3:
        $r6 = "exception";

        $r7 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label8;

        r4 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "package");

        $r14 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (java.util.List) $r14;

        r29 = r5;

        if r5 != null goto label7;

        r30 = virtualinvoke r1.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: android.content.pm.PackageInfo getSystemPackageInfo(java.lang.String)>(r4);

        if r30 != null goto label4;

        r35 = new java.lang.StringBuilder;

        specialinvoke r35.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No such package:");

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r28 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DefaultPermGrantPolicy", $r28);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r2);

        goto label1;

     label4:
        $z1 = virtualinvoke r1.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: boolean isSystemPackage(android.content.pm.PackageInfo)>(r30);

        if $z1 != 0 goto label5;

        r36 = new java.lang.StringBuilder;

        specialinvoke r36.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown system package:");

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r24 = virtualinvoke r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DefaultPermGrantPolicy", $r24);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r2);

        goto label1;

     label5:
        $z2 = staticinvoke <com.android.server.pm.permission.DefaultPermissionGrantPolicy: boolean doesPackageSupportRuntimePermissions(android.content.pm.PackageInfo)>(r30);

        if $z2 != 0 goto label6;

        r37 = new java.lang.StringBuilder;

        specialinvoke r37.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping non supporting runtime permissions package:");

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r20 = virtualinvoke r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DefaultPermGrantPolicy", $r20);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r2);

        goto label1;

     label6:
        r38 = new java.util.ArrayList;

        specialinvoke r38.<java.util.ArrayList: void <init>()>();

        r29 = r38;

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r38);

     label7:
        r40 = (java.util.List) r29;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void parsePermission(org.xmlpull.v1.XmlPullParser,java.util.List)>(r2, r40);

        goto label1;

     label8:
        r39 = new java.lang.StringBuilder;

        specialinvoke r39.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown tag ");

        $r10 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("under <exceptions>");

        $r13 = virtualinvoke r39.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DefaultPermGrantPolicy", $r13);

        goto label1;

     label9:
        return;
    }

    private void parsePermission(org.xmlpull.v1.XmlPullParser, java.util.List) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.util.List r2;
        int i0, i1, $i4;
        java.lang.String $r3, $r4, $r7, $r10, r12;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r5;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$DefaultPermissionGrant $r11;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: java.util.List;

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 == 1 goto label6;

        if i1 != 3 goto label2;

        $i4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i4 <= i0 goto label6;

     label2:
        if i1 == 3 goto label1;

        if i1 != 4 goto label3;

        goto label1;

     label3:
        $r3 = "permission";

        $r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean contains(java.lang.CharSequence)>($r4);

        if $z0 == 0 goto label5;

        r12 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        if r12 != null goto label4;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DefaultPermGrantPolicy", "Mandatory name attribute missing for permission tag");

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label1;

     label4:
        $r11 = new com.android.server.pm.permission.DefaultPermissionGrantPolicy$DefaultPermissionGrant;

        $z1 = staticinvoke <com.android.internal.util.XmlUtils: boolean readBooleanAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "fixed");

        $z2 = staticinvoke <com.android.internal.util.XmlUtils: boolean readBooleanAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "whitelisted");

        specialinvoke $r11.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$DefaultPermissionGrant: void <init>(java.lang.String,boolean,boolean)>(r12, $z1, $z2);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r11);

        goto label1;

     label5:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown tag ");

        $r7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("under <exception>");

        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DefaultPermGrantPolicy", $r10);

        goto label1;

     label6:
        return;
    }

    private android.util.ArrayMap readDefaultPermissionExceptionsLocked(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper r1;
        java.io.File[] r2;
        int i0, i4;
        java.io.File r4;
        android.util.ArrayMap $r5, $r20;
        java.lang.String $r6, $r11, $r16, $r19, $r27;
        boolean $z0, $z1;
        java.lang.StringBuilder $r7, $r12, $r24;
        java.lang.Throwable $r21, $r22, $r23;
        java.io.BufferedInputStream r30;
        java.io.FileInputStream r31;
        org.xmlpull.v1.XmlPullParser r32;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r1 := @parameter0: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper;

        r2 = specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.io.File[] getDefaultPermissionFiles()>();

        i4 = 0;

        if r2 != null goto label01;

        $r20 = new android.util.ArrayMap;

        specialinvoke $r20.<android.util.ArrayMap: void <init>(int)>(0);

        return $r20;

     label01:
        $r5 = new android.util.ArrayMap;

        specialinvoke $r5.<android.util.ArrayMap: void <init>()>();

        i0 = lengthof r2;

     label02:
        if i4 >= i0 goto label16;

        r4 = r2[i4];

        $r6 = virtualinvoke r4.<java.io.File: java.lang.String getPath()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean endsWith(java.lang.String)>(".xml");

        if $z0 != 0 goto label03;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Non-xml file ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r16 = virtualinvoke r4.<java.io.File: java.lang.String getParent()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" directory, ignoring");

        $r19 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("DefaultPermGrantPolicy", $r19);

        goto label15;

     label03:
        $z1 = virtualinvoke r4.<java.io.File: boolean canRead()>();

        if $z1 != 0 goto label04;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Default permissions file ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be read");

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("DefaultPermGrantPolicy", $r11);

        goto label15;

     label04:
        r30 = new java.io.BufferedInputStream;

        r31 = new java.io.FileInputStream;

        specialinvoke r31.<java.io.FileInputStream: void <init>(java.io.File)>(r4);

        specialinvoke r30.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r31);

     label05:
        r32 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r32.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r30, null);

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void parse(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,org.xmlpull.v1.XmlPullParser,java.util.Map)>(r1, r32, $r5);

     label06:
        virtualinvoke r30.<java.io.InputStream: void close()>();

     label07:
        goto label15;

     label08:
        $r22 := @caughtexception;

     label09:
        virtualinvoke r30.<java.io.InputStream: void close()>();

     label10:
        goto label13;

     label11:
        $r21 := @caughtexception;

     label12:
        virtualinvoke $r22.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r21);

     label13:
        throw $r22;

     label14:
        $r23 := @caughtexception;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading default permissions file ");

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("DefaultPermGrantPolicy", $r27, $r23);

     label15:
        i4 = i4 + 1;

        goto label02;

     label16:
        return $r5;

        catch org.xmlpull.v1.XmlPullParserException from label04 to label05 with label14;
        catch java.io.IOException from label04 to label05 with label14;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch org.xmlpull.v1.XmlPullParserException from label06 to label07 with label14;
        catch java.io.IOException from label06 to label07 with label14;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch org.xmlpull.v1.XmlPullParserException from label12 to label13 with label14;
        catch java.io.IOException from label12 to label13 with label14;
        catch org.xmlpull.v1.XmlPullParserException from label13 to label14 with label14;
        catch java.io.IOException from label13 to label14 with label14;
    }

    private void revokeRuntimePermissions(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper, java.lang.String, java.util.Set, boolean, int)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper r1;
        java.lang.String r2, r5;
        boolean z0, $z1, $z2, $z3;
        int i0, i1, $i2, $i3, $i4;
        android.content.pm.PackageInfo r3, $r12;
        android.os.UserHandle r6;
        java.lang.String[] $r7, $r9;
        android.util.ArraySet $r8;
        java.util.List $r10;
        java.lang.Object $r11;
        java.util.Set r13;
        java.util.Iterator r14;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r1 := @parameter0: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper;

        r2 := @parameter1: java.lang.String;

        r13 := @parameter2: java.util.Set;

        z0 := @parameter3: boolean;

        i0 := @parameter4: int;

        r3 = virtualinvoke r1.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: android.content.pm.PackageInfo getSystemPackageInfo(java.lang.String)>(r2);

        if r3 == null goto label8;

        $r7 = r3.<android.content.pm.PackageInfo: java.lang.String[] requestedPermissions>;

        $z1 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>($r7);

        if $z1 == 0 goto label1;

        goto label8;

     label1:
        $r8 = new android.util.ArraySet;

        $r9 = r3.<android.content.pm.PackageInfo: java.lang.String[] requestedPermissions>;

        $r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r9);

        specialinvoke $r8.<android.util.ArraySet: void <init>(java.util.Collection)>($r10);

        r14 = interfaceinvoke r13.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label7;

        $r11 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r11;

        $z2 = interfaceinvoke $r8.<java.util.Set: boolean contains(java.lang.Object)>(r5);

        if $z2 != 0 goto label3;

        goto label2;

     label3:
        r6 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>(i0);

        $r12 = virtualinvoke r1.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: android.content.pm.PackageInfo getPackageInfo(java.lang.String)>(r2);

        i1 = virtualinvoke r1.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: int getPermissionFlags(java.lang.String,android.content.pm.PackageInfo,android.os.UserHandle)>(r5, $r12, r6);

        $i2 = i1 & 32;

        if $i2 != 0 goto label4;

        goto label2;

     label4:
        $i3 = i1 & 4;

        if $i3 == 0 goto label5;

        goto label2;

     label5:
        $i4 = i1 & 16;

        if $i4 == 0 goto label6;

        if z0 != 0 goto label6;

        goto label2;

     label6:
        virtualinvoke r1.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: void revokePermission(java.lang.String,android.content.pm.PackageInfo,android.os.UserHandle)>(r5, r3, r6);

        virtualinvoke r1.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: void updatePermissionFlags(java.lang.String,android.content.pm.PackageInfo,int,int,android.os.UserHandle)>(r5, r3, 32, 0, r6);

        goto label2;

     label7:
        return;

     label8:
        return;
    }

    public void grantDefaultPermissions(int)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        int i0;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$DelayingPackageManagerCache $r2;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        i0 := @parameter0: int;

        $r2 = new com.android.server.pm.permission.DefaultPermissionGrantPolicy$DelayingPackageManagerCache;

        specialinvoke $r2.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$DelayingPackageManagerCache: void <init>(com.android.server.pm.permission.DefaultPermissionGrantPolicy,com.android.server.pm.permission.DefaultPermissionGrantPolicy$1)>(r0, null);

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToSysComponentsAndPrivApps(com.android.server.pm.permission.DefaultPermissionGrantPolicy$DelayingPackageManagerCache,int)>($r2, i0);

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantDefaultSystemHandlerPermissions(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,int)>($r2, i0);

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantDefaultPermissionExceptions(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,int)>($r2, i0);

        virtualinvoke $r2.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$DelayingPackageManagerCache: void apply()>();

        return;
    }

    public void grantDefaultPermissionsToActiveLuiApp(java.lang.String, int)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        java.lang.String r1, $r6;
        int i0;
        java.lang.StringBuilder $r3;
        java.util.Set[] $r7;
        java.util.Set $r8;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper $r9;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Granting permissions to active LUI app for user:");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("DefaultPermGrantPolicy", $r6);

        $r9 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper NO_PM_CACHE>;

        $r7 = newarray (java.util.Set)[1];

        $r8 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set CAMERA_PERMISSIONS>;

        $r7[0] = $r8;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantSystemFixedPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>($r9, r1, i0, $r7);

        return;
    }

    public void grantDefaultPermissionsToDefaultBrowser(java.lang.String, int)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        java.lang.String r1, $r6;
        int i0;
        java.lang.StringBuilder $r3;
        java.util.Set[] $r7;
        java.util.Set $r8;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper $r9;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Granting permissions to default browser for user:");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("DefaultPermGrantPolicy", $r6);

        $r9 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper NO_PM_CACHE>;

        $r7 = newarray (java.util.Set)[1];

        $r8 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set FOREGROUND_LOCATION_PERMISSIONS>;

        $r7[0] = $r8;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>($r9, r1, i0, $r7);

        return;
    }

    public void grantDefaultPermissionsToDefaultSimCallManager(java.lang.String, int)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        java.lang.String r1;
        int i0;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper $r2;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper NO_PM_CACHE>;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantDefaultPermissionsToDefaultSimCallManager(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int)>($r2, r1, i0);

        return;
    }

    public void grantDefaultPermissionsToDefaultUseOpenWifiApp(java.lang.String, int)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        java.lang.String r1, $r6;
        int i0;
        java.lang.StringBuilder $r3;
        java.util.Set[] $r7;
        java.util.Set $r8;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper $r9;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Granting permissions to default Use Open WiFi app for user:");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("DefaultPermGrantPolicy", $r6);

        $r9 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper NO_PM_CACHE>;

        $r7 = newarray (java.util.Set)[1];

        $r8 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set ALWAYS_LOCATION_PERMISSIONS>;

        $r7[0] = $r8;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantIgnoringSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>($r9, r1, i0, $r7);

        return;
    }

    public void grantDefaultPermissionsToEnabledCarrierApps(java.lang.String[], int)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        java.lang.String[] r1;
        int i0, i1, i3;
        java.lang.StringBuilder $r2;
        java.lang.String $r5, r12;
        java.util.Set[] $r6;
        java.util.Set $r7, $r8, $r9;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper $r10;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r1 := @parameter0: java.lang.String[];

        i0 := @parameter1: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Granting permissions to enabled carrier apps for user:");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("DefaultPermGrantPolicy", $r5);

        if r1 != null goto label1;

        return;

     label1:
        i1 = lengthof r1;

        i3 = 0;

     label2:
        if i3 >= i1 goto label3;

        r12 = r1[i3];

        $r10 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper NO_PM_CACHE>;

        $r6 = newarray (java.util.Set)[3];

        $r7 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set PHONE_PERMISSIONS>;

        $r6[0] = $r7;

        $r8 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set ALWAYS_LOCATION_PERMISSIONS>;

        $r6[1] = $r8;

        $r9 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set SMS_PERMISSIONS>;

        $r6[2] = $r9;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>($r10, r12, i0, $r6);

        i3 = i3 + 1;

        goto label2;

     label3:
        return;
    }

    public void grantDefaultPermissionsToEnabledImsServices(java.lang.String[], int)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        java.lang.String[] r1;
        int i0, i1, i3;
        java.lang.StringBuilder $r2;
        java.lang.String $r5, r14;
        java.util.Set[] $r6;
        java.util.Set $r7, $r8, $r9, $r10, $r11;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper $r12;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r1 := @parameter0: java.lang.String[];

        i0 := @parameter1: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Granting permissions to enabled ImsServices for user:");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("DefaultPermGrantPolicy", $r5);

        if r1 != null goto label1;

        return;

     label1:
        i1 = lengthof r1;

        i3 = 0;

     label2:
        if i3 >= i1 goto label3;

        r14 = r1[i3];

        $r12 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper NO_PM_CACHE>;

        $r6 = newarray (java.util.Set)[5];

        $r7 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set PHONE_PERMISSIONS>;

        $r6[0] = $r7;

        $r8 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set MICROPHONE_PERMISSIONS>;

        $r6[1] = $r8;

        $r9 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set ALWAYS_LOCATION_PERMISSIONS>;

        $r6[2] = $r9;

        $r10 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set CAMERA_PERMISSIONS>;

        $r6[3] = $r10;

        $r11 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set CONTACTS_PERMISSIONS>;

        $r6[4] = $r11;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>($r12, r14, i0, $r6);

        i3 = i3 + 1;

        goto label2;

     label3:
        return;
    }

    public void grantDefaultPermissionsToEnabledTelephonyDataServices(java.lang.String[], int)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        java.lang.String[] r1;
        int i0, i1, i3;
        java.lang.StringBuilder $r2;
        java.lang.String $r5, r11;
        java.util.Set[] $r6;
        java.util.Set $r7, $r8;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper $r9;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r1 := @parameter0: java.lang.String[];

        i0 := @parameter1: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Granting permissions to enabled data services for user:");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("DefaultPermGrantPolicy", $r5);

        if r1 != null goto label1;

        return;

     label1:
        i1 = lengthof r1;

        i3 = 0;

     label2:
        if i3 >= i1 goto label3;

        r11 = r1[i3];

        $r9 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper NO_PM_CACHE>;

        $r6 = newarray (java.util.Set)[2];

        $r7 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set PHONE_PERMISSIONS>;

        $r6[0] = $r7;

        $r8 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set ALWAYS_LOCATION_PERMISSIONS>;

        $r6[1] = $r8;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantSystemFixedPermissionsToSystemPackage(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,int,java.util.Set[])>($r9, r11, i0, $r6);

        i3 = i3 + 1;

        goto label2;

     label3:
        return;
    }

    public void revokeDefaultPermissionsFromDisabledTelephonyDataServices(java.lang.String[], int)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        java.lang.String[] r1;
        int i0, i1, i3;
        java.lang.String r2, $r6;
        java.lang.StringBuilder $r3;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper $r7, $r8, $r10, $r12;
        boolean $z0, $z1;
        java.util.Set $r9, $r11;
        android.content.pm.PackageInfo r14;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r1 := @parameter0: java.lang.String[];

        i0 := @parameter1: int;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Revoking permissions from disabled data services for user:");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("DefaultPermGrantPolicy", $r6);

        if r1 != null goto label1;

        return;

     label1:
        i1 = lengthof r1;

        i3 = 0;

     label2:
        if i3 >= i1 goto label4;

        r2 = r1[i3];

        $r7 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper NO_PM_CACHE>;

        r14 = virtualinvoke $r7.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: android.content.pm.PackageInfo getSystemPackageInfo(java.lang.String)>(r2);

        $r8 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper NO_PM_CACHE>;

        $z0 = virtualinvoke $r8.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: boolean isSystemPackage(android.content.pm.PackageInfo)>(r14);

        if $z0 == 0 goto label3;

        $z1 = staticinvoke <com.android.server.pm.permission.DefaultPermissionGrantPolicy: boolean doesPackageSupportRuntimePermissions(android.content.pm.PackageInfo)>(r14);

        if $z1 == 0 goto label3;

        $r10 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper NO_PM_CACHE>;

        $r9 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set PHONE_PERMISSIONS>;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void revokeRuntimePermissions(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,java.util.Set,boolean,int)>($r10, r2, $r9, 1, i0);

        $r12 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper NO_PM_CACHE>;

        $r11 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set ALWAYS_LOCATION_PERMISSIONS>;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void revokeRuntimePermissions(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,java.util.Set,boolean,int)>($r12, r2, $r11, 1, i0);

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        return;
    }

    public void revokeDefaultPermissionsFromLuiApps(java.lang.String[], int)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        java.lang.String[] r1;
        int i0, i1, i3;
        java.lang.String r2, $r6;
        java.lang.StringBuilder $r3;
        com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper $r7, $r8, $r10;
        boolean $z0, $z1;
        java.util.Set $r9;
        android.content.pm.PackageInfo r12;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r1 := @parameter0: java.lang.String[];

        i0 := @parameter1: int;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Revoke permissions from LUI apps for user:");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("DefaultPermGrantPolicy", $r6);

        if r1 != null goto label1;

        return;

     label1:
        i1 = lengthof r1;

        i3 = 0;

     label2:
        if i3 >= i1 goto label4;

        r2 = r1[i3];

        $r7 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper NO_PM_CACHE>;

        r12 = virtualinvoke $r7.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: android.content.pm.PackageInfo getSystemPackageInfo(java.lang.String)>(r2);

        $r8 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper NO_PM_CACHE>;

        $z0 = virtualinvoke $r8.<com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper: boolean isSystemPackage(android.content.pm.PackageInfo)>(r12);

        if $z0 == 0 goto label3;

        $z1 = staticinvoke <com.android.server.pm.permission.DefaultPermissionGrantPolicy: boolean doesPackageSupportRuntimePermissions(android.content.pm.PackageInfo)>(r12);

        if $z1 == 0 goto label3;

        $r10 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper NO_PM_CACHE>;

        $r9 = <com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.util.Set CAMERA_PERMISSIONS>;

        specialinvoke r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void revokeRuntimePermissions(com.android.server.pm.permission.DefaultPermissionGrantPolicy$PackageManagerWrapper,java.lang.String,java.util.Set,boolean,int)>($r10, r2, $r9, 1, i0);

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        return;
    }

    public void scheduleReadDefaultPermissionExceptions()
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        android.os.Handler $r1;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        $r1 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: boolean sendEmptyMessage(int)>(1);

        return;
    }

    public void setDialerAppPackagesProvider(com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider r3;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r3 := @parameter0: com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider;

        r1 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider mDialerAppPackagesProvider> = r3;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setLocationExtraPackagesProvider(com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider r3;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r3 := @parameter0: com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider;

        r1 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider mLocationExtraPackagesProvider> = r3;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setLocationPackagesProvider(com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider r3;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r3 := @parameter0: com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider;

        r1 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider mLocationPackagesProvider> = r3;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setSimCallManagerPackagesProvider(com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider r3;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r3 := @parameter0: com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider;

        r1 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider mSimCallManagerPackagesProvider> = r3;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setSmsAppPackagesProvider(com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider r3;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r3 := @parameter0: com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider;

        r1 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider mSmsAppPackagesProvider> = r3;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setSyncAdapterPackagesProvider(com.android.server.pm.permission.PermissionManagerServiceInternal$SyncAdapterPackagesProvider)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        com.android.server.pm.permission.PermissionManagerServiceInternal$SyncAdapterPackagesProvider r3;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r3 := @parameter0: com.android.server.pm.permission.PermissionManagerServiceInternal$SyncAdapterPackagesProvider;

        r1 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: com.android.server.pm.permission.PermissionManagerServiceInternal$SyncAdapterPackagesProvider mSyncAdapterPackagesProvider> = r3;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setUseOpenWifiAppPackagesProvider(com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider r3;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r3 := @parameter0: com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider;

        r1 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider mUseOpenWifiAppPackagesProvider> = r3;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setVoiceInteractionPackagesProvider(com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider)
    {
        com.android.server.pm.permission.DefaultPermissionGrantPolicy r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider r3;

        r0 := @this: com.android.server.pm.permission.DefaultPermissionGrantPolicy;

        r3 := @parameter0: com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider;

        r1 = r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<com.android.server.pm.permission.DefaultPermissionGrantPolicy: com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider mVoiceInteractionPackagesProvider> = r3;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
