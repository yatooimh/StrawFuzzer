final class com.android.server.pm.permission.PermissionManagerService$OnPermissionChangeListeners extends android.os.Handler
{
    private static final int MSG_ON_PERMISSIONS_CHANGED;
    private final android.os.RemoteCallbackList mPermissionListeners;

    void <init>(android.os.Looper)
    {
        com.android.server.pm.permission.PermissionManagerService$OnPermissionChangeListeners r0;
        android.os.Looper r1;
        android.os.RemoteCallbackList $r2;

        r0 := @this: com.android.server.pm.permission.PermissionManagerService$OnPermissionChangeListeners;

        r1 := @parameter0: android.os.Looper;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r1);

        $r2 = new android.os.RemoteCallbackList;

        specialinvoke $r2.<android.os.RemoteCallbackList: void <init>()>();

        r0.<com.android.server.pm.permission.PermissionManagerService$OnPermissionChangeListeners: android.os.RemoteCallbackList mPermissionListeners> = $r2;

        return;
    }

    private void handleOnPermissionsChanged(int)
    {
        com.android.server.pm.permission.PermissionManagerService$OnPermissionChangeListeners r0;
        int i0, i1, i3;
        android.os.RemoteCallbackList $r1, $r2, $r3, $r6;
        android.os.IInterface $r4;
        java.lang.Throwable $r5;
        android.os.RemoteException $r7;
        android.permission.IOnPermissionsChangeListener r8;

        r0 := @this: com.android.server.pm.permission.PermissionManagerService$OnPermissionChangeListeners;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.pm.permission.PermissionManagerService$OnPermissionChangeListeners: android.os.RemoteCallbackList mPermissionListeners>;

        i1 = virtualinvoke $r1.<android.os.RemoteCallbackList: int beginBroadcast()>();

        i3 = 0;

     label1:
        if i3 >= i1 goto label9;

     label2:
        $r3 = r0.<com.android.server.pm.permission.PermissionManagerService$OnPermissionChangeListeners: android.os.RemoteCallbackList mPermissionListeners>;

        $r4 = virtualinvoke $r3.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i3);

        r8 = (android.permission.IOnPermissionsChangeListener) $r4;

     label3:
        interfaceinvoke r8.<android.permission.IOnPermissionsChangeListener: void onPermissionsChanged(int)>(i0);

     label4:
        goto label7;

     label5:
        $r7 := @caughtexception;

     label6:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Permission listener is dead", $r7);

     label7:
        i3 = i3 + 1;

        goto label1;

     label8:
        $r5 := @caughtexception;

        $r6 = r0.<com.android.server.pm.permission.PermissionManagerService$OnPermissionChangeListeners: android.os.RemoteCallbackList mPermissionListeners>;

        virtualinvoke $r6.<android.os.RemoteCallbackList: void finishBroadcast()>();

        throw $r5;

     label9:
        $r2 = r0.<com.android.server.pm.permission.PermissionManagerService$OnPermissionChangeListeners: android.os.RemoteCallbackList mPermissionListeners>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

        catch java.lang.Throwable from label2 to label3 with label8;
        catch android.os.RemoteException from label3 to label4 with label5;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void addListenerLocked(android.permission.IOnPermissionsChangeListener)
    {
        com.android.server.pm.permission.PermissionManagerService$OnPermissionChangeListeners r0;
        android.permission.IOnPermissionsChangeListener r1;
        android.os.RemoteCallbackList $r2;

        r0 := @this: com.android.server.pm.permission.PermissionManagerService$OnPermissionChangeListeners;

        r1 := @parameter0: android.permission.IOnPermissionsChangeListener;

        $r2 = r0.<com.android.server.pm.permission.PermissionManagerService$OnPermissionChangeListeners: android.os.RemoteCallbackList mPermissionListeners>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: boolean register(android.os.IInterface)>(r1);

        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.server.pm.permission.PermissionManagerService$OnPermissionChangeListeners r0;
        android.os.Message r1;
        int $i0, $i1;

        r0 := @this: com.android.server.pm.permission.PermissionManagerService$OnPermissionChangeListeners;

        r1 := @parameter0: android.os.Message;

        $i0 = r1.<android.os.Message: int what>;

        if $i0 == 1 goto label1;

        goto label2;

     label1:
        $i1 = r1.<android.os.Message: int arg1>;

        specialinvoke r0.<com.android.server.pm.permission.PermissionManagerService$OnPermissionChangeListeners: void handleOnPermissionsChanged(int)>($i1);

     label2:
        return;
    }

    public void onPermissionsChanged(int)
    {
        com.android.server.pm.permission.PermissionManagerService$OnPermissionChangeListeners r0;
        int i0, $i1;
        android.os.RemoteCallbackList $r1;
        android.os.Message $r2;

        r0 := @this: com.android.server.pm.permission.PermissionManagerService$OnPermissionChangeListeners;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.pm.permission.PermissionManagerService$OnPermissionChangeListeners: android.os.RemoteCallbackList mPermissionListeners>;

        $i1 = virtualinvoke $r1.<android.os.RemoteCallbackList: int getRegisteredCallbackCount()>();

        if $i1 <= 0 goto label1;

        $r2 = virtualinvoke r0.<com.android.server.pm.permission.PermissionManagerService$OnPermissionChangeListeners: android.os.Message obtainMessage(int,int,int)>(1, i0, 0);

        virtualinvoke $r2.<android.os.Message: void sendToTarget()>();

     label1:
        return;
    }

    public void removeListenerLocked(android.permission.IOnPermissionsChangeListener)
    {
        com.android.server.pm.permission.PermissionManagerService$OnPermissionChangeListeners r0;
        android.permission.IOnPermissionsChangeListener r1;
        android.os.RemoteCallbackList $r2;

        r0 := @this: com.android.server.pm.permission.PermissionManagerService$OnPermissionChangeListeners;

        r1 := @parameter0: android.permission.IOnPermissionsChangeListener;

        $r2 = r0.<com.android.server.pm.permission.PermissionManagerService$OnPermissionChangeListeners: android.os.RemoteCallbackList mPermissionListeners>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: boolean unregister(android.os.IInterface)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.pm.permission.PermissionManagerService$OnPermissionChangeListeners: int MSG_ON_PERMISSIONS_CHANGED> = 1;

        return;
    }
}
