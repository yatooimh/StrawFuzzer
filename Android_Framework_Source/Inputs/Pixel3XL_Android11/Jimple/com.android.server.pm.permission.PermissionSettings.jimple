public class com.android.server.pm.permission.PermissionSettings extends java.lang.Object
{
    final android.util.ArrayMap mAppOpPermissionPackages;
    private final java.lang.Object mLock;
    final android.util.ArrayMap mPermissionGroups;
    final android.util.ArrayMap mPermissionTrees;
    final android.util.ArrayMap mPermissions;

    void <init>(java.lang.Object)
    {
        com.android.server.pm.permission.PermissionSettings r0;
        java.lang.Object r1;
        android.util.ArrayMap $r2, $r3, $r4, $r5;

        r0 := @this: com.android.server.pm.permission.PermissionSettings;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.util.ArrayMap;

        specialinvoke $r2.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.pm.permission.PermissionSettings: android.util.ArrayMap mPermissions> = $r2;

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.pm.permission.PermissionSettings: android.util.ArrayMap mPermissionTrees> = $r3;

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.pm.permission.PermissionSettings: android.util.ArrayMap mPermissionGroups> = $r4;

        $r5 = new android.util.ArrayMap;

        specialinvoke $r5.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.pm.permission.PermissionSettings: android.util.ArrayMap mAppOpPermissionPackages> = $r5;

        r0.<com.android.server.pm.permission.PermissionSettings: java.lang.Object mLock> = r1;

        return;
    }

    public static void readPermissions(android.util.ArrayMap, org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        android.util.ArrayMap r0;
        org.xmlpull.v1.XmlPullParser r1;
        int i0, i1, $i2;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r8, $r10;

        r0 := @parameter0: android.util.ArrayMap;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 == 1 goto label5;

        if i1 != 3 goto label2;

        $i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 <= i0 goto label5;

     label2:
        if i1 == 3 goto label1;

        if i1 != 4 goto label3;

        goto label1;

     label3:
        $z0 = staticinvoke <com.android.server.pm.permission.BasePermission: boolean readLPw(java.util.Map,org.xmlpull.v1.XmlPullParser)>(r0, r1);

        if $z0 != 0 goto label4;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element reading permissions: ");

        $r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r8 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r10);

     label4:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label1;

     label5:
        return;
    }

    public void addAppOpPackage(java.lang.String, java.lang.String)
    {
        com.android.server.pm.permission.PermissionSettings r0;
        java.lang.String r1, r2;
        android.util.ArraySet r3, $r6, r9;
        android.util.ArrayMap $r4, $r7;
        java.lang.Object $r5;

        r0 := @this: com.android.server.pm.permission.PermissionSettings;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r4 = r0.<com.android.server.pm.permission.PermissionSettings: android.util.ArrayMap mAppOpPermissionPackages>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (android.util.ArraySet) $r5;

        r9 = r3;

        if r3 != null goto label1;

        $r6 = new android.util.ArraySet;

        specialinvoke $r6.<android.util.ArraySet: void <init>()>();

        r9 = $r6;

        $r7 = r0.<com.android.server.pm.permission.PermissionSettings: android.util.ArrayMap mAppOpPermissionPackages>;

        virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r6);

     label1:
        virtualinvoke r9.<android.util.ArraySet: boolean add(java.lang.Object)>(r2);

        return;
    }

    public boolean canPropagatePermissionToInstantApp(java.lang.String)
    {
        com.android.server.pm.permission.PermissionSettings r0;
        java.lang.Object r1, $r3;
        android.util.ArrayMap $r2;
        boolean $z0, $z1, $z2, z3;
        java.lang.Throwable $r4;
        java.lang.String r5;
        com.android.server.pm.permission.BasePermission r6;

        r0 := @this: com.android.server.pm.permission.PermissionSettings;

        r5 := @parameter0: java.lang.String;

        r1 = r0.<com.android.server.pm.permission.PermissionSettings: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.pm.permission.PermissionSettings: android.util.ArrayMap mPermissions>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r5);

        r6 = (com.android.server.pm.permission.BasePermission) $r3;

     label02:
        if r6 == null goto label06;

     label03:
        $z0 = virtualinvoke r6.<com.android.server.pm.permission.BasePermission: boolean isRuntime()>();

        if $z0 != 0 goto label04;

        $z2 = virtualinvoke r6.<com.android.server.pm.permission.BasePermission: boolean isDevelopment()>();

        if $z2 == 0 goto label06;

     label04:
        $z1 = virtualinvoke r6.<com.android.server.pm.permission.BasePermission: boolean isInstant()>();

        if $z1 == 0 goto label06;

     label05:
        z3 = 1;

        goto label07;

     label06:
        z3 = 0;

     label07:
        exitmonitor r1;

     label08:
        return z3;

     label09:
        $r4 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void dumpPermissions(java.io.PrintWriter, java.lang.String, android.util.ArraySet, boolean, com.android.server.pm.DumpState)
    {
        com.android.server.pm.permission.PermissionSettings r0;
        android.util.ArraySet r1, r20;
        boolean z0, $z1, $z2, z3;
        com.android.server.pm.DumpState r2;
        java.lang.Object r3, $r8, $r10, $r16, $r19;
        java.util.Iterator r4;
        android.util.ArrayMap $r5, $r7, $r15, $r18;
        java.util.Collection $r6;
        int $i0, i1, i2, $i3;
        java.lang.String $r9, r14, $r17;
        com.android.server.pm.permission.BasePermission $r11;
        java.lang.Throwable $r12;
        java.io.PrintWriter r13;

        r0 := @this: com.android.server.pm.permission.PermissionSettings;

        r13 := @parameter0: java.io.PrintWriter;

        r14 := @parameter1: java.lang.String;

        r1 := @parameter2: android.util.ArraySet;

        z0 := @parameter3: boolean;

        r2 := @parameter4: com.android.server.pm.DumpState;

        r3 = r0.<com.android.server.pm.permission.PermissionSettings: java.lang.Object mLock>;

        entermonitor r3;

        z3 = 0;

     label01:
        $r5 = r0.<com.android.server.pm.permission.PermissionSettings: android.util.ArrayMap mPermissions>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.util.Collection values()>();

        r4 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label04;

        $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (com.android.server.pm.permission.BasePermission) $r10;

        z3 = virtualinvoke $r11.<com.android.server.pm.permission.BasePermission: boolean dumpPermissionsLPr(java.io.PrintWriter,java.lang.String,java.util.Set,boolean,boolean,com.android.server.pm.DumpState)>(r13, r14, r1, z0, z3, r2);

     label03:
        goto label02;

     label04:
        if r14 != null goto label14;

        if r1 != null goto label14;

        i1 = 0;

     label05:
        $r7 = r0.<com.android.server.pm.permission.PermissionSettings: android.util.ArrayMap mAppOpPermissionPackages>;

        $i0 = virtualinvoke $r7.<android.util.ArrayMap: int size()>();

        if i1 >= $i0 goto label14;

     label06:
        if i1 != 0 goto label09;

     label07:
        $z2 = virtualinvoke r2.<com.android.server.pm.DumpState: boolean onTitlePrinted()>();

        if $z2 == 0 goto label08;

        virtualinvoke r13.<java.io.PrintWriter: void println()>();

     label08:
        virtualinvoke r13.<java.io.PrintWriter: void println(java.lang.String)>("AppOp Permissions:");

     label09:
        virtualinvoke r13.<java.io.PrintWriter: void print(java.lang.String)>("  AppOp Permission ");

        $r15 = r0.<com.android.server.pm.permission.PermissionSettings: android.util.ArrayMap mAppOpPermissionPackages>;

        $r16 = virtualinvoke $r15.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i1);

        $r17 = (java.lang.String) $r16;

        virtualinvoke r13.<java.io.PrintWriter: void print(java.lang.String)>($r17);

        virtualinvoke r13.<java.io.PrintWriter: void println(java.lang.String)>(":");

        $r18 = r0.<com.android.server.pm.permission.PermissionSettings: android.util.ArrayMap mAppOpPermissionPackages>;

        $r19 = virtualinvoke $r18.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        r20 = (android.util.ArraySet) $r19;

     label10:
        i2 = 0;

     label11:
        $i3 = virtualinvoke r20.<android.util.ArraySet: int size()>();

        if i2 >= $i3 goto label13;

        virtualinvoke r13.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $r8 = virtualinvoke r20.<android.util.ArraySet: java.lang.Object valueAt(int)>(i2);

        $r9 = (java.lang.String) $r8;

        virtualinvoke r13.<java.io.PrintWriter: void println(java.lang.String)>($r9);

     label12:
        i2 = i2 + 1;

        goto label11;

     label13:
        i1 = i1 + 1;

        goto label05;

     label14:
        exitmonitor r3;

     label15:
        return;

     label16:
        $r12 := @caughtexception;

     label17:
        exitmonitor r3;

     label18:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label02 to label03 with label16;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    com.android.server.pm.permission.BasePermission enforcePermissionTree(java.lang.String, int)
    {
        com.android.server.pm.permission.PermissionSettings r0;
        int i0;
        java.lang.Object r1;
        android.util.ArrayMap $r2;
        java.util.Collection $r3;
        java.lang.Throwable $r4;
        java.lang.String r5;
        com.android.server.pm.permission.BasePermission r6;

        r0 := @this: com.android.server.pm.permission.PermissionSettings;

        r5 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = r0.<com.android.server.pm.permission.PermissionSettings: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.pm.permission.PermissionSettings: android.util.ArrayMap mPermissionTrees>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.util.Collection values()>();

        r6 = staticinvoke <com.android.server.pm.permission.BasePermission: com.android.server.pm.permission.BasePermission enforcePermissionTree(java.util.Collection,java.lang.String,int)>($r3, r5, i0);

        exitmonitor r1;

     label2:
        return r6;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    java.util.Collection getAllPermissionTreesLocked()
    {
        com.android.server.pm.permission.PermissionSettings r0;
        android.util.ArrayMap $r1;
        java.util.Collection $r2;

        r0 := @this: com.android.server.pm.permission.PermissionSettings;

        $r1 = r0.<com.android.server.pm.permission.PermissionSettings: android.util.ArrayMap mPermissionTrees>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.util.Collection values()>();

        return $r2;
    }

    java.util.Collection getAllPermissionsLocked()
    {
        com.android.server.pm.permission.PermissionSettings r0;
        android.util.ArrayMap $r1;
        java.util.Collection $r2;

        r0 := @this: com.android.server.pm.permission.PermissionSettings;

        $r1 = r0.<com.android.server.pm.permission.PermissionSettings: android.util.ArrayMap mPermissions>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.util.Collection values()>();

        return $r2;
    }

    public com.android.server.pm.permission.BasePermission getPermission(java.lang.String)
    {
        com.android.server.pm.permission.PermissionSettings r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        java.lang.String r3;
        com.android.server.pm.permission.BasePermission r4;

        r0 := @this: com.android.server.pm.permission.PermissionSettings;

        r3 := @parameter0: java.lang.String;

        r1 = r0.<com.android.server.pm.permission.PermissionSettings: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r4 = virtualinvoke r0.<com.android.server.pm.permission.PermissionSettings: com.android.server.pm.permission.BasePermission getPermissionLocked(java.lang.String)>(r3);

        exitmonitor r1;

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    com.android.server.pm.permission.BasePermission getPermissionLocked(java.lang.String)
    {
        com.android.server.pm.permission.PermissionSettings r0;
        java.lang.String r1;
        android.util.ArrayMap $r2;
        java.lang.Object $r3;
        com.android.server.pm.permission.BasePermission $r4;

        r0 := @this: com.android.server.pm.permission.PermissionSettings;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.pm.permission.PermissionSettings: android.util.ArrayMap mPermissions>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (com.android.server.pm.permission.BasePermission) $r3;

        return $r4;
    }

    com.android.server.pm.permission.BasePermission getPermissionTreeLocked(java.lang.String)
    {
        com.android.server.pm.permission.PermissionSettings r0;
        java.lang.String r1;
        android.util.ArrayMap $r2;
        java.lang.Object $r3;
        com.android.server.pm.permission.BasePermission $r4;

        r0 := @this: com.android.server.pm.permission.PermissionSettings;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.pm.permission.PermissionSettings: android.util.ArrayMap mPermissionTrees>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (com.android.server.pm.permission.BasePermission) $r3;

        return $r4;
    }

    boolean isPermissionAppOp(java.lang.String)
    {
        com.android.server.pm.permission.PermissionSettings r0;
        java.lang.Object r1, $r3;
        android.util.ArrayMap $r2;
        boolean $z0, z1;
        java.lang.Throwable $r4;
        java.lang.String r5;
        com.android.server.pm.permission.BasePermission r6;

        r0 := @this: com.android.server.pm.permission.PermissionSettings;

        r5 := @parameter0: java.lang.String;

        r1 = r0.<com.android.server.pm.permission.PermissionSettings: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.pm.permission.PermissionSettings: android.util.ArrayMap mPermissions>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r5);

        r6 = (com.android.server.pm.permission.BasePermission) $r3;

     label02:
        if r6 == null goto label05;

     label03:
        $z0 = virtualinvoke r6.<com.android.server.pm.permission.BasePermission: boolean isAppOp()>();

        if $z0 == 0 goto label05;

     label04:
        z1 = 1;

        goto label06;

     label05:
        z1 = 0;

     label06:
        exitmonitor r1;

     label07:
        return z1;

     label08:
        $r4 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public boolean isPermissionInstant(java.lang.String)
    {
        com.android.server.pm.permission.PermissionSettings r0;
        java.lang.Object r1, $r3;
        android.util.ArrayMap $r2;
        boolean $z0, z1;
        java.lang.Throwable $r4;
        java.lang.String r5;
        com.android.server.pm.permission.BasePermission r6;

        r0 := @this: com.android.server.pm.permission.PermissionSettings;

        r5 := @parameter0: java.lang.String;

        r1 = r0.<com.android.server.pm.permission.PermissionSettings: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.pm.permission.PermissionSettings: android.util.ArrayMap mPermissions>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r5);

        r6 = (com.android.server.pm.permission.BasePermission) $r3;

     label02:
        if r6 == null goto label05;

     label03:
        $z0 = virtualinvoke r6.<com.android.server.pm.permission.BasePermission: boolean isInstant()>();

        if $z0 == 0 goto label05;

     label04:
        z1 = 1;

        goto label06;

     label05:
        z1 = 0;

     label06:
        exitmonitor r1;

     label07:
        return z1;

     label08:
        $r4 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public boolean isPermissionRuntime(java.lang.String)
    {
        com.android.server.pm.permission.PermissionSettings r0;
        java.lang.Object r1, $r3;
        android.util.ArrayMap $r2;
        boolean $z0, z1;
        java.lang.Throwable $r4;
        java.lang.String r5;
        com.android.server.pm.permission.BasePermission r6;

        r0 := @this: com.android.server.pm.permission.PermissionSettings;

        r5 := @parameter0: java.lang.String;

        r1 = r0.<com.android.server.pm.permission.PermissionSettings: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.pm.permission.PermissionSettings: android.util.ArrayMap mPermissions>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r5);

        r6 = (com.android.server.pm.permission.BasePermission) $r3;

     label02:
        if r6 == null goto label05;

     label03:
        $z0 = virtualinvoke r6.<com.android.server.pm.permission.BasePermission: boolean isRuntime()>();

        if $z0 == 0 goto label05;

     label04:
        z1 = 1;

        goto label06;

     label05:
        z1 = 0;

     label06:
        exitmonitor r1;

     label07:
        return z1;

     label08:
        $r4 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    void putPermissionLocked(java.lang.String, com.android.server.pm.permission.BasePermission)
    {
        com.android.server.pm.permission.PermissionSettings r0;
        java.lang.String r1;
        com.android.server.pm.permission.BasePermission r2;
        android.util.ArrayMap $r3;

        r0 := @this: com.android.server.pm.permission.PermissionSettings;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.server.pm.permission.BasePermission;

        $r3 = r0.<com.android.server.pm.permission.PermissionSettings: android.util.ArrayMap mPermissions>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    void putPermissionTreeLocked(java.lang.String, com.android.server.pm.permission.BasePermission)
    {
        com.android.server.pm.permission.PermissionSettings r0;
        java.lang.String r1;
        com.android.server.pm.permission.BasePermission r2;
        android.util.ArrayMap $r3;

        r0 := @this: com.android.server.pm.permission.PermissionSettings;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.server.pm.permission.BasePermission;

        $r3 = r0.<com.android.server.pm.permission.PermissionSettings: android.util.ArrayMap mPermissionTrees>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void readPermissionTrees(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.pm.permission.PermissionSettings r0;
        java.lang.Object r1;
        android.util.ArrayMap $r2;
        java.lang.Throwable $r3;
        org.xmlpull.v1.XmlPullParser r4;

        r0 := @this: com.android.server.pm.permission.PermissionSettings;

        r4 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 = r0.<com.android.server.pm.permission.PermissionSettings: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.pm.permission.PermissionSettings: android.util.ArrayMap mPermissionTrees>;

        staticinvoke <com.android.server.pm.permission.PermissionSettings: void readPermissions(android.util.ArrayMap,org.xmlpull.v1.XmlPullParser)>($r2, r4);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void readPermissions(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.pm.permission.PermissionSettings r0;
        java.lang.Object r1;
        android.util.ArrayMap $r2;
        java.lang.Throwable $r3;
        org.xmlpull.v1.XmlPullParser r4;

        r0 := @this: com.android.server.pm.permission.PermissionSettings;

        r4 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 = r0.<com.android.server.pm.permission.PermissionSettings: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.pm.permission.PermissionSettings: android.util.ArrayMap mPermissions>;

        staticinvoke <com.android.server.pm.permission.PermissionSettings: void readPermissions(android.util.ArrayMap,org.xmlpull.v1.XmlPullParser)>($r2, r4);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void removePermissionLocked(java.lang.String)
    {
        com.android.server.pm.permission.PermissionSettings r0;
        java.lang.String r1;
        android.util.ArrayMap $r2;

        r0 := @this: com.android.server.pm.permission.PermissionSettings;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.pm.permission.PermissionSettings: android.util.ArrayMap mPermissions>;

        virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    void removePermissionTreeLocked(java.lang.String)
    {
        com.android.server.pm.permission.PermissionSettings r0;
        java.lang.String r1;
        android.util.ArrayMap $r2;

        r0 := @this: com.android.server.pm.permission.PermissionSettings;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.pm.permission.PermissionSettings: android.util.ArrayMap mPermissionTrees>;

        virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    public void transferPermissions(java.lang.String, java.lang.String)
    {
        com.android.server.pm.permission.PermissionSettings r0;
        java.lang.String r1, r7;
        java.lang.Object r2, $r4;
        java.util.Collection $r3;
        com.android.server.pm.permission.BasePermission $r5;
        java.lang.Throwable $r6;
        int i0;
        android.util.ArrayMap r8;
        java.util.Iterator r9;
        boolean $z0;

        r0 := @this: com.android.server.pm.permission.PermissionSettings;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = r0.<com.android.server.pm.permission.PermissionSettings: java.lang.Object mLock>;

        entermonitor r2;

        i0 = 0;

     label01:
        if i0 >= 2 goto label09;

        if i0 != 0 goto label04;

     label02:
        r8 = r0.<com.android.server.pm.permission.PermissionSettings: android.util.ArrayMap mPermissionTrees>;

     label03:
        goto label05;

     label04:
        r8 = r0.<com.android.server.pm.permission.PermissionSettings: android.util.ArrayMap mPermissions>;

     label05:
        $r3 = virtualinvoke r8.<android.util.ArrayMap: java.util.Collection values()>();

        r9 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r4 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.android.server.pm.permission.BasePermission) $r4;

        virtualinvoke $r5.<com.android.server.pm.permission.BasePermission: void transfer(java.lang.String,java.lang.String)>(r7, r1);

     label07:
        goto label06;

     label08:
        i0 = i0 + 1;

        goto label01;

     label09:
        exitmonitor r2;

     label10:
        return;

     label11:
        $r6 := @caughtexception;

     label12:
        exitmonitor r2;

     label13:
        throw $r6;

        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public void writePermissionTrees(org.xmlpull.v1.XmlSerializer) throws java.io.IOException
    {
        com.android.server.pm.permission.PermissionSettings r0;
        java.lang.Object r1, $r5;
        java.util.Iterator r2;
        android.util.ArrayMap $r3;
        java.util.Collection $r4;
        boolean $z0;
        com.android.server.pm.permission.BasePermission $r6;
        java.lang.Throwable $r7;
        org.xmlpull.v1.XmlSerializer r8;

        r0 := @this: com.android.server.pm.permission.PermissionSettings;

        r8 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 = r0.<com.android.server.pm.permission.PermissionSettings: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.pm.permission.PermissionSettings: android.util.ArrayMap mPermissionTrees>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.android.server.pm.permission.BasePermission) $r5;

        virtualinvoke $r6.<com.android.server.pm.permission.BasePermission: void writeLPr(org.xmlpull.v1.XmlSerializer)>(r8);

     label3:
        goto label2;

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r7 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void writePermissions(org.xmlpull.v1.XmlSerializer) throws java.io.IOException
    {
        com.android.server.pm.permission.PermissionSettings r0;
        java.lang.Object r1, $r5;
        java.util.Iterator r2;
        android.util.ArrayMap $r3;
        java.util.Collection $r4;
        boolean $z0;
        com.android.server.pm.permission.BasePermission $r6;
        java.lang.Throwable $r7;
        org.xmlpull.v1.XmlSerializer r8;

        r0 := @this: com.android.server.pm.permission.PermissionSettings;

        r8 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 = r0.<com.android.server.pm.permission.PermissionSettings: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.pm.permission.PermissionSettings: android.util.ArrayMap mPermissions>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.android.server.pm.permission.BasePermission) $r5;

        virtualinvoke $r6.<com.android.server.pm.permission.BasePermission: void writeLPr(org.xmlpull.v1.XmlSerializer)>(r8);

     label3:
        goto label2;

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r7 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }
}
