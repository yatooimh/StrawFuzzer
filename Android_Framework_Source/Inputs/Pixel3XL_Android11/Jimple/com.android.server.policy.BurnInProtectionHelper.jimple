public class com.android.server.policy.BurnInProtectionHelper extends java.lang.Object implements android.hardware.display.DisplayManager$DisplayListener, android.animation.Animator$AnimatorListener, android.animation.ValueAnimator$AnimatorUpdateListener
{
    private static final java.lang.String ACTION_BURN_IN_PROTECTION;
    private static final long BURNIN_PROTECTION_FIRST_WAKEUP_INTERVAL_MS;
    private static final long BURNIN_PROTECTION_MINIMAL_INTERVAL_MS;
    private static final long BURNIN_PROTECTION_SUBSEQUENT_WAKEUP_INTERVAL_MS;
    public static final int BURN_IN_MAX_RADIUS_DEFAULT;
    private static final int BURN_IN_SHIFT_STEP;
    private static final long CENTERING_ANIMATION_DURATION_MS;
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    private final android.app.AlarmManager mAlarmManager;
    private int mAppliedBurnInXOffset;
    private int mAppliedBurnInYOffset;
    private boolean mBurnInProtectionActive;
    private final android.app.PendingIntent mBurnInProtectionIntent;
    private android.content.BroadcastReceiver mBurnInProtectionReceiver;
    private final int mBurnInRadiusMaxSquared;
    private final android.animation.ValueAnimator mCenteringAnimator;
    private final android.view.Display mDisplay;
    private final android.hardware.display.DisplayManagerInternal mDisplayManagerInternal;
    private boolean mFirstUpdate;
    private int mLastBurnInXOffset;
    private int mLastBurnInYOffset;
    private final int mMaxHorizontalBurnInOffset;
    private final int mMaxVerticalBurnInOffset;
    private final int mMinHorizontalBurnInOffset;
    private final int mMinVerticalBurnInOffset;
    private int mXOffsetDirection;
    private int mYOffsetDirection;

    static void <clinit>()
    {
        java.util.concurrent.TimeUnit $r0, $r1, $r2;
        long $l0, $l1, $l2;

        <com.android.server.policy.BurnInProtectionHelper: java.lang.String TAG> = "BurnInProtection";

        <com.android.server.policy.BurnInProtectionHelper: boolean DEBUG> = 0;

        <com.android.server.policy.BurnInProtectionHelper: long CENTERING_ANIMATION_DURATION_MS> = 100L;

        <com.android.server.policy.BurnInProtectionHelper: int BURN_IN_SHIFT_STEP> = 2;

        <com.android.server.policy.BurnInProtectionHelper: int BURN_IN_MAX_RADIUS_DEFAULT> = -1;

        <com.android.server.policy.BurnInProtectionHelper: java.lang.String ACTION_BURN_IN_PROTECTION> = "android.internal.policy.action.BURN_IN_PROTECTION";

        $r0 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MINUTES>;

        $l0 = virtualinvoke $r0.<java.util.concurrent.TimeUnit: long toMillis(long)>(1L);

        <com.android.server.policy.BurnInProtectionHelper: long BURNIN_PROTECTION_FIRST_WAKEUP_INTERVAL_MS> = $l0;

        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MINUTES>;

        $l1 = virtualinvoke $r1.<java.util.concurrent.TimeUnit: long toMillis(long)>(2L);

        <com.android.server.policy.BurnInProtectionHelper: long BURNIN_PROTECTION_SUBSEQUENT_WAKEUP_INTERVAL_MS> = $l1;

        $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $l2 = virtualinvoke $r2.<java.util.concurrent.TimeUnit: long toMillis(long)>(10L);

        <com.android.server.policy.BurnInProtectionHelper: long BURNIN_PROTECTION_MINIMAL_INTERVAL_MS> = $l2;

        return;
    }

    public void <init>(android.content.Context, int, int, int, int, int)
    {
        com.android.server.policy.BurnInProtectionHelper r0;
        int i0, i1, i2, i3, i4, $i5;
        com.android.server.policy.BurnInProtectionHelper$1 $r2;
        java.lang.Object $r3, $r5, $r15;
        android.hardware.display.DisplayManagerInternal $r4;
        android.app.AlarmManager $r6;
        android.content.IntentFilter $r7;
        android.content.BroadcastReceiver $r8;
        android.content.Intent $r10;
        java.lang.String $r11;
        android.app.PendingIntent $r14;
        android.view.Display $r16;
        float[] $r17;
        android.view.animation.LinearInterpolator $r19;
        android.animation.ValueAnimator $r20, $r21, $r22, r25;
        android.content.Context r23;
        android.hardware.display.DisplayManager r24;

        r0 := @this: com.android.server.policy.BurnInProtectionHelper;

        r23 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.policy.BurnInProtectionHelper: int mLastBurnInXOffset> = 0;

        r0.<com.android.server.policy.BurnInProtectionHelper: int mXOffsetDirection> = 1;

        r0.<com.android.server.policy.BurnInProtectionHelper: int mLastBurnInYOffset> = 0;

        r0.<com.android.server.policy.BurnInProtectionHelper: int mYOffsetDirection> = 1;

        r0.<com.android.server.policy.BurnInProtectionHelper: int mAppliedBurnInXOffset> = 0;

        r0.<com.android.server.policy.BurnInProtectionHelper: int mAppliedBurnInYOffset> = 0;

        $r2 = new com.android.server.policy.BurnInProtectionHelper$1;

        specialinvoke $r2.<com.android.server.policy.BurnInProtectionHelper$1: void <init>(com.android.server.policy.BurnInProtectionHelper)>(r0);

        r0.<com.android.server.policy.BurnInProtectionHelper: android.content.BroadcastReceiver mBurnInProtectionReceiver> = $r2;

        r0.<com.android.server.policy.BurnInProtectionHelper: int mMinHorizontalBurnInOffset> = i0;

        r0.<com.android.server.policy.BurnInProtectionHelper: int mMaxHorizontalBurnInOffset> = i1;

        r0.<com.android.server.policy.BurnInProtectionHelper: int mMinVerticalBurnInOffset> = i2;

        r0.<com.android.server.policy.BurnInProtectionHelper: int mMaxVerticalBurnInOffset> = i3;

        if i4 == -1 goto label1;

        $i5 = i4 * i4;

        r0.<com.android.server.policy.BurnInProtectionHelper: int mBurnInRadiusMaxSquared> = $i5;

        goto label2;

     label1:
        r0.<com.android.server.policy.BurnInProtectionHelper: int mBurnInRadiusMaxSquared> = -1;

     label2:
        $r3 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/hardware/display/DisplayManagerInternal;");

        $r4 = (android.hardware.display.DisplayManagerInternal) $r3;

        r0.<com.android.server.policy.BurnInProtectionHelper: android.hardware.display.DisplayManagerInternal mDisplayManagerInternal> = $r4;

        $r5 = virtualinvoke r23.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        $r6 = (android.app.AlarmManager) $r5;

        r0.<com.android.server.policy.BurnInProtectionHelper: android.app.AlarmManager mAlarmManager> = $r6;

        $r8 = r0.<com.android.server.policy.BurnInProtectionHelper: android.content.BroadcastReceiver mBurnInProtectionReceiver>;

        $r7 = new android.content.IntentFilter;

        specialinvoke $r7.<android.content.IntentFilter: void <init>(java.lang.String)>("android.internal.policy.action.BURN_IN_PROTECTION");

        virtualinvoke r23.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r8, $r7);

        $r10 = new android.content.Intent;

        specialinvoke $r10.<android.content.Intent: void <init>(java.lang.String)>("android.internal.policy.action.BURN_IN_PROTECTION");

        $r11 = virtualinvoke r23.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke $r10.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r11);

        virtualinvoke $r10.<android.content.Intent: android.content.Intent setFlags(int)>(1073741824);

        $r14 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>(r23, 0, $r10, 134217728);

        r0.<com.android.server.policy.BurnInProtectionHelper: android.app.PendingIntent mBurnInProtectionIntent> = $r14;

        $r15 = virtualinvoke r23.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("display");

        r24 = (android.hardware.display.DisplayManager) $r15;

        $r16 = virtualinvoke r24.<android.hardware.display.DisplayManager: android.view.Display getDisplay(int)>(0);

        r0.<com.android.server.policy.BurnInProtectionHelper: android.view.Display mDisplay> = $r16;

        virtualinvoke r24.<android.hardware.display.DisplayManager: void registerDisplayListener(android.hardware.display.DisplayManager$DisplayListener,android.os.Handler)>(r0, null);

        $r17 = newarray (float)[2];

        $r17[0] = 1.0F;

        $r17[1] = 0.0F;

        r25 = staticinvoke <android.animation.ValueAnimator: android.animation.ValueAnimator ofFloat(float[])>($r17);

        r0.<com.android.server.policy.BurnInProtectionHelper: android.animation.ValueAnimator mCenteringAnimator> = r25;

        virtualinvoke r25.<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>(100L);

        $r20 = r0.<com.android.server.policy.BurnInProtectionHelper: android.animation.ValueAnimator mCenteringAnimator>;

        $r19 = new android.view.animation.LinearInterpolator;

        specialinvoke $r19.<android.view.animation.LinearInterpolator: void <init>()>();

        virtualinvoke $r20.<android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r19);

        $r21 = r0.<com.android.server.policy.BurnInProtectionHelper: android.animation.ValueAnimator mCenteringAnimator>;

        virtualinvoke $r21.<android.animation.ValueAnimator: void addListener(android.animation.Animator$AnimatorListener)>(r0);

        $r22 = r0.<com.android.server.policy.BurnInProtectionHelper: android.animation.ValueAnimator mCenteringAnimator>;

        virtualinvoke $r22.<android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>(r0);

        return;
    }

    static void access$000(com.android.server.policy.BurnInProtectionHelper)
    {
        com.android.server.policy.BurnInProtectionHelper r0;

        r0 := @parameter0: com.android.server.policy.BurnInProtectionHelper;

        specialinvoke r0.<com.android.server.policy.BurnInProtectionHelper: void updateBurnInProtection()>();

        return;
    }

    private void adjustOffsets()
    {
        com.android.server.policy.BurnInProtectionHelper r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, i21, i22, i23, i24, i25;

        r0 := @this: com.android.server.policy.BurnInProtectionHelper;

     label1:
        $i1 = r0.<com.android.server.policy.BurnInProtectionHelper: int mXOffsetDirection>;

        i20 = $i1 * 2;

        $i2 = r0.<com.android.server.policy.BurnInProtectionHelper: int mLastBurnInXOffset>;

        i21 = $i2 + i20;

        r0.<com.android.server.policy.BurnInProtectionHelper: int mLastBurnInXOffset> = i21;

        $i3 = r0.<com.android.server.policy.BurnInProtectionHelper: int mMaxHorizontalBurnInOffset>;

        if i21 > $i3 goto label2;

        $i19 = r0.<com.android.server.policy.BurnInProtectionHelper: int mMinHorizontalBurnInOffset>;

        if i21 >= $i19 goto label4;

     label2:
        $i4 = r0.<com.android.server.policy.BurnInProtectionHelper: int mLastBurnInXOffset>;

        $i5 = $i4 - i20;

        r0.<com.android.server.policy.BurnInProtectionHelper: int mLastBurnInXOffset> = $i5;

        $i6 = r0.<com.android.server.policy.BurnInProtectionHelper: int mXOffsetDirection>;

        $i7 = $i6 * -1;

        r0.<com.android.server.policy.BurnInProtectionHelper: int mXOffsetDirection> = $i7;

        $i8 = r0.<com.android.server.policy.BurnInProtectionHelper: int mYOffsetDirection>;

        i22 = $i8 * 2;

        $i9 = r0.<com.android.server.policy.BurnInProtectionHelper: int mLastBurnInYOffset>;

        i23 = $i9 + i22;

        r0.<com.android.server.policy.BurnInProtectionHelper: int mLastBurnInYOffset> = i23;

        $i10 = r0.<com.android.server.policy.BurnInProtectionHelper: int mMaxVerticalBurnInOffset>;

        if i23 > $i10 goto label3;

        $i18 = r0.<com.android.server.policy.BurnInProtectionHelper: int mMinVerticalBurnInOffset>;

        if i23 >= $i18 goto label4;

     label3:
        $i11 = r0.<com.android.server.policy.BurnInProtectionHelper: int mLastBurnInYOffset>;

        $i12 = $i11 - i22;

        r0.<com.android.server.policy.BurnInProtectionHelper: int mLastBurnInYOffset> = $i12;

        $i13 = r0.<com.android.server.policy.BurnInProtectionHelper: int mYOffsetDirection>;

        $i14 = $i13 * -1;

        r0.<com.android.server.policy.BurnInProtectionHelper: int mYOffsetDirection> = $i14;

     label4:
        i0 = r0.<com.android.server.policy.BurnInProtectionHelper: int mBurnInRadiusMaxSquared>;

        if i0 == -1 goto label5;

        i24 = r0.<com.android.server.policy.BurnInProtectionHelper: int mLastBurnInXOffset>;

        i25 = r0.<com.android.server.policy.BurnInProtectionHelper: int mLastBurnInYOffset>;

        $i16 = i24 * i24;

        $i15 = i25 * i25;

        $i17 = $i16 + $i15;

        if $i17 > i0 goto label1;

     label5:
        return;
    }

    private void updateBurnInProtection()
    {
        com.android.server.policy.BurnInProtectionHelper r0;
        long l0, l1, l2, $l8, $l9, $l10, $l11, $l12, $l13, l14;
        boolean $z0, $z1, $z2;
        android.app.PendingIntent $r1, $r6;
        android.app.AlarmManager $r2, $r7;
        android.animation.ValueAnimator $r3;
        int $i3, $i4, $i5, $i6, $i7;
        android.view.Display $r4;
        android.hardware.display.DisplayManagerInternal $r5;

        r0 := @this: com.android.server.policy.BurnInProtectionHelper;

        $z0 = r0.<com.android.server.policy.BurnInProtectionHelper: boolean mBurnInProtectionActive>;

        if $z0 == 0 goto label5;

        $z1 = r0.<com.android.server.policy.BurnInProtectionHelper: boolean mFirstUpdate>;

        if $z1 == 0 goto label1;

        l14 = <com.android.server.policy.BurnInProtectionHelper: long BURNIN_PROTECTION_FIRST_WAKEUP_INTERVAL_MS>;

        goto label2;

     label1:
        l14 = <com.android.server.policy.BurnInProtectionHelper: long BURNIN_PROTECTION_SUBSEQUENT_WAKEUP_INTERVAL_MS>;

     label2:
        $z2 = r0.<com.android.server.policy.BurnInProtectionHelper: boolean mFirstUpdate>;

        if $z2 == 0 goto label3;

        r0.<com.android.server.policy.BurnInProtectionHelper: boolean mFirstUpdate> = 0;

        goto label4;

     label3:
        specialinvoke r0.<com.android.server.policy.BurnInProtectionHelper: void adjustOffsets()>();

        $i3 = r0.<com.android.server.policy.BurnInProtectionHelper: int mLastBurnInXOffset>;

        r0.<com.android.server.policy.BurnInProtectionHelper: int mAppliedBurnInXOffset> = $i3;

        $i4 = r0.<com.android.server.policy.BurnInProtectionHelper: int mLastBurnInYOffset>;

        r0.<com.android.server.policy.BurnInProtectionHelper: int mAppliedBurnInYOffset> = $i4;

        $r5 = r0.<com.android.server.policy.BurnInProtectionHelper: android.hardware.display.DisplayManagerInternal mDisplayManagerInternal>;

        $r4 = r0.<com.android.server.policy.BurnInProtectionHelper: android.view.Display mDisplay>;

        $i5 = virtualinvoke $r4.<android.view.Display: int getDisplayId()>();

        $i7 = r0.<com.android.server.policy.BurnInProtectionHelper: int mLastBurnInXOffset>;

        $i6 = r0.<com.android.server.policy.BurnInProtectionHelper: int mLastBurnInYOffset>;

        virtualinvoke $r5.<android.hardware.display.DisplayManagerInternal: void setDisplayOffsets(int,int,int)>($i5, $i7, $i6);

     label4:
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l8 = <com.android.server.policy.BurnInProtectionHelper: long BURNIN_PROTECTION_MINIMAL_INTERVAL_MS>;

        l2 = $l8 + l0;

        $r7 = r0.<com.android.server.policy.BurnInProtectionHelper: android.app.AlarmManager mAlarmManager>;

        $l9 = l2 % l14;

        $l10 = l2 - $l9;

        $l11 = $l10 + l14;

        $l12 = $l11 - l0;

        $l13 = $l12 + l1;

        $r6 = r0.<com.android.server.policy.BurnInProtectionHelper: android.app.PendingIntent mBurnInProtectionIntent>;

        virtualinvoke $r7.<android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)>(3, $l13, $r6);

        goto label6;

     label5:
        $r2 = r0.<com.android.server.policy.BurnInProtectionHelper: android.app.AlarmManager mAlarmManager>;

        $r1 = r0.<com.android.server.policy.BurnInProtectionHelper: android.app.PendingIntent mBurnInProtectionIntent>;

        virtualinvoke $r2.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>($r1);

        $r3 = r0.<com.android.server.policy.BurnInProtectionHelper: android.animation.ValueAnimator mCenteringAnimator>;

        virtualinvoke $r3.<android.animation.ValueAnimator: void start()>();

     label6:
        return;
    }

    public void cancelBurnInProtection()
    {
        com.android.server.policy.BurnInProtectionHelper r0;
        boolean $z0;

        r0 := @this: com.android.server.policy.BurnInProtectionHelper;

        $z0 = r0.<com.android.server.policy.BurnInProtectionHelper: boolean mBurnInProtectionActive>;

        if $z0 == 0 goto label1;

        r0.<com.android.server.policy.BurnInProtectionHelper: boolean mBurnInProtectionActive> = 0;

        specialinvoke r0.<com.android.server.policy.BurnInProtectionHelper: void updateBurnInProtection()>();

     label1:
        return;
    }

    public void dump(java.lang.String, java.io.PrintWriter)
    {
        com.android.server.policy.BurnInProtectionHelper r0;
        java.io.PrintWriter r1;
        java.lang.StringBuilder $r2, $r6, $r9, $r14, $r22, $r30, $r35, $r43;
        java.lang.String $r5, $r13, $r21, $r29, $r34, $r42, $r50, r51, r54;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: com.android.server.policy.BurnInProtectionHelper;

        r51 := @parameter0: java.lang.String;

        r1 := @parameter1: java.io.PrintWriter;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r51);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BurnInProtection");

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r51);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        r54 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r54);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mBurnInProtectionActive=");

        $z0 = r0.<com.android.server.policy.BurnInProtectionHelper: boolean mBurnInProtectionActive>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r13);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r54);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mHorizontalBurnInOffsetsBounds=(");

        $i0 = r0.<com.android.server.policy.BurnInProtectionHelper: int mMinHorizontalBurnInOffset>;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i1 = r0.<com.android.server.policy.BurnInProtectionHelper: int mMaxHorizontalBurnInOffset>;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r21 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r21);

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r54);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mVerticalBurnInOffsetsBounds=(");

        $i2 = r0.<com.android.server.policy.BurnInProtectionHelper: int mMinVerticalBurnInOffset>;

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i3 = r0.<com.android.server.policy.BurnInProtectionHelper: int mMaxVerticalBurnInOffset>;

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r29 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r29);

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r54);

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mBurnInRadiusMaxSquared=");

        $i4 = r0.<com.android.server.policy.BurnInProtectionHelper: int mBurnInRadiusMaxSquared>;

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r34);

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r54);

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mLastBurnInOffset=(");

        $i5 = r0.<com.android.server.policy.BurnInProtectionHelper: int mLastBurnInXOffset>;

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i6 = r0.<com.android.server.policy.BurnInProtectionHelper: int mLastBurnInYOffset>;

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r42 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r42);

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r54);

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mOfsetChangeDirections=(");

        $i7 = r0.<com.android.server.policy.BurnInProtectionHelper: int mXOffsetDirection>;

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i8 = r0.<com.android.server.policy.BurnInProtectionHelper: int mYOffsetDirection>;

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r50 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r50);

        return;
    }

    public void onAnimationCancel(android.animation.Animator)
    {
        com.android.server.policy.BurnInProtectionHelper r0;
        android.animation.Animator r1;

        r0 := @this: com.android.server.policy.BurnInProtectionHelper;

        r1 := @parameter0: android.animation.Animator;

        return;
    }

    public void onAnimationEnd(android.animation.Animator)
    {
        com.android.server.policy.BurnInProtectionHelper r0;
        android.animation.Animator r1;
        android.animation.ValueAnimator $r2;
        boolean $z0;
        android.view.Display $r3;
        android.hardware.display.DisplayManagerInternal $r4;
        int $i0;

        r0 := @this: com.android.server.policy.BurnInProtectionHelper;

        r1 := @parameter0: android.animation.Animator;

        $r2 = r0.<com.android.server.policy.BurnInProtectionHelper: android.animation.ValueAnimator mCenteringAnimator>;

        if r1 != $r2 goto label1;

        $z0 = r0.<com.android.server.policy.BurnInProtectionHelper: boolean mBurnInProtectionActive>;

        if $z0 != 0 goto label1;

        r0.<com.android.server.policy.BurnInProtectionHelper: int mAppliedBurnInXOffset> = 0;

        r0.<com.android.server.policy.BurnInProtectionHelper: int mAppliedBurnInYOffset> = 0;

        $r4 = r0.<com.android.server.policy.BurnInProtectionHelper: android.hardware.display.DisplayManagerInternal mDisplayManagerInternal>;

        $r3 = r0.<com.android.server.policy.BurnInProtectionHelper: android.view.Display mDisplay>;

        $i0 = virtualinvoke $r3.<android.view.Display: int getDisplayId()>();

        virtualinvoke $r4.<android.hardware.display.DisplayManagerInternal: void setDisplayOffsets(int,int,int)>($i0, 0, 0);

     label1:
        return;
    }

    public void onAnimationRepeat(android.animation.Animator)
    {
        com.android.server.policy.BurnInProtectionHelper r0;
        android.animation.Animator r1;

        r0 := @this: com.android.server.policy.BurnInProtectionHelper;

        r1 := @parameter0: android.animation.Animator;

        return;
    }

    public void onAnimationStart(android.animation.Animator)
    {
        com.android.server.policy.BurnInProtectionHelper r0;
        android.animation.Animator r1;

        r0 := @this: com.android.server.policy.BurnInProtectionHelper;

        r1 := @parameter0: android.animation.Animator;

        return;
    }

    public void onAnimationUpdate(android.animation.ValueAnimator)
    {
        com.android.server.policy.BurnInProtectionHelper r0;
        android.animation.ValueAnimator r1;
        float f0, $f1, $f2, $f3, $f4;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Float $r3;
        android.view.Display $r4;
        android.hardware.display.DisplayManagerInternal $r5;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.android.server.policy.BurnInProtectionHelper;

        r1 := @parameter0: android.animation.ValueAnimator;

        $z0 = r0.<com.android.server.policy.BurnInProtectionHelper: boolean mBurnInProtectionActive>;

        if $z0 != 0 goto label1;

        $r2 = virtualinvoke r1.<android.animation.ValueAnimator: java.lang.Object getAnimatedValue()>();

        $r3 = (java.lang.Float) $r2;

        f0 = virtualinvoke $r3.<java.lang.Float: float floatValue()>();

        $r5 = r0.<com.android.server.policy.BurnInProtectionHelper: android.hardware.display.DisplayManagerInternal mDisplayManagerInternal>;

        $r4 = r0.<com.android.server.policy.BurnInProtectionHelper: android.view.Display mDisplay>;

        $i0 = virtualinvoke $r4.<android.view.Display: int getDisplayId()>();

        $i1 = r0.<com.android.server.policy.BurnInProtectionHelper: int mAppliedBurnInXOffset>;

        $f1 = (float) $i1;

        $f2 = $f1 * f0;

        $i4 = (int) $f2;

        $i2 = r0.<com.android.server.policy.BurnInProtectionHelper: int mAppliedBurnInYOffset>;

        $f3 = (float) $i2;

        $f4 = $f3 * f0;

        $i3 = (int) $f4;

        virtualinvoke $r5.<android.hardware.display.DisplayManagerInternal: void setDisplayOffsets(int,int,int)>($i0, $i4, $i3);

     label1:
        return;
    }

    public void onDisplayAdded(int)
    {
        com.android.server.policy.BurnInProtectionHelper r0;
        int i0;

        r0 := @this: com.android.server.policy.BurnInProtectionHelper;

        i0 := @parameter0: int;

        return;
    }

    public void onDisplayChanged(int)
    {
        com.android.server.policy.BurnInProtectionHelper r0;
        int i0, $i1, $i2, $i3, $i4;
        android.view.Display $r1, $r2, $r3, $r4;

        r0 := @this: com.android.server.policy.BurnInProtectionHelper;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.policy.BurnInProtectionHelper: android.view.Display mDisplay>;

        $i1 = virtualinvoke $r1.<android.view.Display: int getDisplayId()>();

        if i0 != $i1 goto label3;

        $r2 = r0.<com.android.server.policy.BurnInProtectionHelper: android.view.Display mDisplay>;

        $i2 = virtualinvoke $r2.<android.view.Display: int getState()>();

        if $i2 == 3 goto label2;

        $r3 = r0.<com.android.server.policy.BurnInProtectionHelper: android.view.Display mDisplay>;

        $i3 = virtualinvoke $r3.<android.view.Display: int getState()>();

        if $i3 == 4 goto label2;

        $r4 = r0.<com.android.server.policy.BurnInProtectionHelper: android.view.Display mDisplay>;

        $i4 = virtualinvoke $r4.<android.view.Display: int getState()>();

        if $i4 != 6 goto label1;

        goto label2;

     label1:
        virtualinvoke r0.<com.android.server.policy.BurnInProtectionHelper: void cancelBurnInProtection()>();

        goto label3;

     label2:
        virtualinvoke r0.<com.android.server.policy.BurnInProtectionHelper: void startBurnInProtection()>();

     label3:
        return;
    }

    public void onDisplayRemoved(int)
    {
        com.android.server.policy.BurnInProtectionHelper r0;
        int i0;

        r0 := @this: com.android.server.policy.BurnInProtectionHelper;

        i0 := @parameter0: int;

        return;
    }

    public void startBurnInProtection()
    {
        com.android.server.policy.BurnInProtectionHelper r0;
        boolean $z0;
        android.animation.ValueAnimator $r1;

        r0 := @this: com.android.server.policy.BurnInProtectionHelper;

        $z0 = r0.<com.android.server.policy.BurnInProtectionHelper: boolean mBurnInProtectionActive>;

        if $z0 != 0 goto label1;

        r0.<com.android.server.policy.BurnInProtectionHelper: boolean mBurnInProtectionActive> = 1;

        r0.<com.android.server.policy.BurnInProtectionHelper: boolean mFirstUpdate> = 1;

        $r1 = r0.<com.android.server.policy.BurnInProtectionHelper: android.animation.ValueAnimator mCenteringAnimator>;

        virtualinvoke $r1.<android.animation.ValueAnimator: void cancel()>();

        specialinvoke r0.<com.android.server.policy.BurnInProtectionHelper: void updateBurnInProtection()>();

     label1:
        return;
    }
}
