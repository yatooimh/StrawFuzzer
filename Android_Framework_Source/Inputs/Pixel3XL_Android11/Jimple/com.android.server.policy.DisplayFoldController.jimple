class com.android.server.policy.DisplayFoldController extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final int mDisplayId;
    private final android.hardware.display.DisplayManagerInternal mDisplayManagerInternal;
    private final com.android.server.policy.DisplayFoldDurationLogger mDurationLogger;
    private java.lang.String mFocusedApp;
    private java.lang.Boolean mFolded;
    private final android.graphics.Rect mFoldedArea;
    private final android.os.Handler mHandler;
    private final android.os.RemoteCallbackList mListeners;
    private final android.view.DisplayInfo mNonOverrideDisplayInfo;
    private android.graphics.Rect mOverrideFoldedArea;
    private final com.android.server.wm.WindowManagerInternal mWindowManagerInternal;

    void <init>(com.android.server.wm.WindowManagerInternal, android.hardware.display.DisplayManagerInternal, int, android.graphics.Rect, android.os.Handler)
    {
        com.android.server.policy.DisplayFoldController r0;
        com.android.server.wm.WindowManagerInternal r1;
        android.hardware.display.DisplayManagerInternal r2;
        int i0;
        android.graphics.Rect r3, $r5, $r9;
        android.os.Handler r4;
        android.view.DisplayInfo $r6;
        android.os.RemoteCallbackList $r7;
        com.android.server.policy.DisplayFoldDurationLogger $r8;

        r0 := @this: com.android.server.policy.DisplayFoldController;

        r1 := @parameter0: com.android.server.wm.WindowManagerInternal;

        r2 := @parameter1: android.hardware.display.DisplayManagerInternal;

        i0 := @parameter2: int;

        r3 := @parameter3: android.graphics.Rect;

        r4 := @parameter4: android.os.Handler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.policy.DisplayFoldController: android.graphics.Rect mOverrideFoldedArea> = $r5;

        $r6 = new android.view.DisplayInfo;

        specialinvoke $r6.<android.view.DisplayInfo: void <init>()>();

        r0.<com.android.server.policy.DisplayFoldController: android.view.DisplayInfo mNonOverrideDisplayInfo> = $r6;

        $r7 = new android.os.RemoteCallbackList;

        specialinvoke $r7.<android.os.RemoteCallbackList: void <init>()>();

        r0.<com.android.server.policy.DisplayFoldController: android.os.RemoteCallbackList mListeners> = $r7;

        $r8 = new com.android.server.policy.DisplayFoldDurationLogger;

        specialinvoke $r8.<com.android.server.policy.DisplayFoldDurationLogger: void <init>()>();

        r0.<com.android.server.policy.DisplayFoldController: com.android.server.policy.DisplayFoldDurationLogger mDurationLogger> = $r8;

        r0.<com.android.server.policy.DisplayFoldController: com.android.server.wm.WindowManagerInternal mWindowManagerInternal> = r1;

        r0.<com.android.server.policy.DisplayFoldController: android.hardware.display.DisplayManagerInternal mDisplayManagerInternal> = r2;

        r0.<com.android.server.policy.DisplayFoldController: int mDisplayId> = i0;

        $r9 = new android.graphics.Rect;

        specialinvoke $r9.<android.graphics.Rect: void <init>(android.graphics.Rect)>(r3);

        r0.<com.android.server.policy.DisplayFoldController: android.graphics.Rect mFoldedArea> = $r9;

        r0.<com.android.server.policy.DisplayFoldController: android.os.Handler mHandler> = r4;

        return;
    }

    static com.android.server.policy.DisplayFoldController create(android.content.Context, int)
    {
        int i0;
        android.hardware.display.DisplayManagerInternal r0;
        java.lang.Object $r1, $r8;
        android.content.res.Resources $r2;
        android.graphics.Rect $r3, r6;
        boolean $z0;
        android.content.Context r4;
        java.lang.String r5;
        com.android.server.policy.DisplayFoldController $r7;
        com.android.server.wm.WindowManagerInternal $r9;
        android.os.Handler $r10;

        r4 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r1 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/hardware/display/DisplayManagerInternal;");

        r0 = (android.hardware.display.DisplayManagerInternal) $r1;

        $r2 = virtualinvoke r4.<android.content.Context: android.content.res.Resources getResources()>();

        r5 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String getString(int)>(17039895);

        if r5 == null goto label2;

        $z0 = virtualinvoke r5.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        r6 = staticinvoke <android.graphics.Rect: android.graphics.Rect unflattenFromString(java.lang.String)>(r5);

        goto label3;

     label2:
        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r6 = $r3;

     label3:
        $r7 = new com.android.server.policy.DisplayFoldController;

        $r8 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/wm/WindowManagerInternal;");

        $r9 = (com.android.server.wm.WindowManagerInternal) $r8;

        $r10 = staticinvoke <com.android.server.DisplayThread: android.os.Handler getHandler()>();

        specialinvoke $r7.<com.android.server.policy.DisplayFoldController: void <init>(com.android.server.wm.WindowManagerInternal,android.hardware.display.DisplayManagerInternal,int,android.graphics.Rect,android.os.Handler)>($r9, r0, i0, r6, $r10);

        return $r7;
    }

    static com.android.server.policy.DisplayFoldController createWithProxSensor(android.content.Context, int)
    {
        int i0;
        android.hardware.SensorManager r0;
        android.hardware.Sensor r1;
        java.lang.Object $r2;
        com.android.server.policy.DisplayFoldController$1 $r3;
        android.content.Context r4;
        com.android.server.policy.DisplayFoldController r5;

        r4 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r4.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/hardware/SensorManager;");

        r0 = (android.hardware.SensorManager) $r2;

        r1 = virtualinvoke r0.<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int)>(8);

        if r1 != null goto label1;

        return null;

     label1:
        r5 = staticinvoke <com.android.server.policy.DisplayFoldController: com.android.server.policy.DisplayFoldController create(android.content.Context,int)>(r4, i0);

        $r3 = new com.android.server.policy.DisplayFoldController$1;

        specialinvoke $r3.<com.android.server.policy.DisplayFoldController$1: void <init>(com.android.server.policy.DisplayFoldController)>(r5);

        virtualinvoke r0.<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int)>($r3, r1, 3);

        return r5;
    }

    void finishedGoingToSleep()
    {
        com.android.server.policy.DisplayFoldController r0;
        com.android.server.policy.DisplayFoldDurationLogger $r1;

        r0 := @this: com.android.server.policy.DisplayFoldController;

        $r1 = r0.<com.android.server.policy.DisplayFoldController: com.android.server.policy.DisplayFoldDurationLogger mDurationLogger>;

        virtualinvoke $r1.<com.android.server.policy.DisplayFoldDurationLogger: void onFinishedGoingToSleep()>();

        return;
    }

    void finishedWakingUp()
    {
        com.android.server.policy.DisplayFoldController r0;
        java.lang.Boolean $r1;
        com.android.server.policy.DisplayFoldDurationLogger $r2;

        r0 := @this: com.android.server.policy.DisplayFoldController;

        $r2 = r0.<com.android.server.policy.DisplayFoldController: com.android.server.policy.DisplayFoldDurationLogger mDurationLogger>;

        $r1 = r0.<com.android.server.policy.DisplayFoldController: java.lang.Boolean mFolded>;

        virtualinvoke $r2.<com.android.server.policy.DisplayFoldDurationLogger: void onFinishedWakingUp(java.lang.Boolean)>($r1);

        return;
    }

    android.graphics.Rect getFoldedArea()
    {
        com.android.server.policy.DisplayFoldController r0;
        android.graphics.Rect $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.server.policy.DisplayFoldController;

        $r1 = r0.<com.android.server.policy.DisplayFoldController: android.graphics.Rect mOverrideFoldedArea>;

        $z0 = virtualinvoke $r1.<android.graphics.Rect: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r3 = r0.<com.android.server.policy.DisplayFoldController: android.graphics.Rect mOverrideFoldedArea>;

        return $r3;

     label1:
        $r2 = r0.<com.android.server.policy.DisplayFoldController: android.graphics.Rect mFoldedArea>;

        return $r2;
    }

    public void lambda$registerDisplayFoldListener$1$DisplayFoldController(android.view.IDisplayFoldListener)
    {
        com.android.server.policy.DisplayFoldController r0;
        java.lang.Boolean $r1;
        int $i0;
        boolean $z0;
        android.os.RemoteException $r2;
        android.view.IDisplayFoldListener r3;

        r0 := @this: com.android.server.policy.DisplayFoldController;

        r3 := @parameter0: android.view.IDisplayFoldListener;

     label1:
        $i0 = r0.<com.android.server.policy.DisplayFoldController: int mDisplayId>;

        $r1 = r0.<com.android.server.policy.DisplayFoldController: java.lang.Boolean mFolded>;

        $z0 = virtualinvoke $r1.<java.lang.Boolean: boolean booleanValue()>();

        interfaceinvoke r3.<android.view.IDisplayFoldListener: void onDisplayFoldChanged(int,boolean)>($i0, $z0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void lambda$requestDeviceFolded$0$DisplayFoldController(boolean)
    {
        com.android.server.policy.DisplayFoldController r0;
        boolean z0;

        r0 := @this: com.android.server.policy.DisplayFoldController;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.android.server.policy.DisplayFoldController: void setDeviceFolded(boolean)>(z0);

        return;
    }

    void onDefaultDisplayFocusChanged(java.lang.String)
    {
        com.android.server.policy.DisplayFoldController r0;
        java.lang.String r1;

        r0 := @this: com.android.server.policy.DisplayFoldController;

        r1 := @parameter0: java.lang.String;

        r0.<com.android.server.policy.DisplayFoldController: java.lang.String mFocusedApp> = r1;

        return;
    }

    void registerDisplayFoldListener(android.view.IDisplayFoldListener)
    {
        com.android.server.policy.DisplayFoldController r0;
        android.view.IDisplayFoldListener r1;
        android.os.RemoteCallbackList $r2;
        java.lang.Boolean $r3;
        com.android.server.policy._$$Lambda$DisplayFoldController$aUVA2gXih47E319JuwXnHTqEGHI $r4;
        android.os.Handler $r5;

        r0 := @this: com.android.server.policy.DisplayFoldController;

        r1 := @parameter0: android.view.IDisplayFoldListener;

        $r2 = r0.<com.android.server.policy.DisplayFoldController: android.os.RemoteCallbackList mListeners>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: boolean register(android.os.IInterface)>(r1);

        $r3 = r0.<com.android.server.policy.DisplayFoldController: java.lang.Boolean mFolded>;

        if $r3 != null goto label1;

        return;

     label1:
        $r5 = r0.<com.android.server.policy.DisplayFoldController: android.os.Handler mHandler>;

        $r4 = new com.android.server.policy._$$Lambda$DisplayFoldController$aUVA2gXih47E319JuwXnHTqEGHI;

        specialinvoke $r4.<com.android.server.policy._$$Lambda$DisplayFoldController$aUVA2gXih47E319JuwXnHTqEGHI: void <init>(com.android.server.policy.DisplayFoldController,android.view.IDisplayFoldListener)>(r0, r1);

        virtualinvoke $r5.<android.os.Handler: boolean post(java.lang.Runnable)>($r4);

        return;
    }

    void requestDeviceFolded(boolean)
    {
        com.android.server.policy.DisplayFoldController r0;
        boolean z0;
        com.android.server.policy._$$Lambda$DisplayFoldController$NTSuhIo_Cno_Oi2ZijeIvJCcvfc $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.server.policy.DisplayFoldController;

        z0 := @parameter0: boolean;

        $r2 = r0.<com.android.server.policy.DisplayFoldController: android.os.Handler mHandler>;

        $r1 = new com.android.server.policy._$$Lambda$DisplayFoldController$NTSuhIo_Cno_Oi2ZijeIvJCcvfc;

        specialinvoke $r1.<com.android.server.policy._$$Lambda$DisplayFoldController$NTSuhIo_Cno_Oi2ZijeIvJCcvfc: void <init>(com.android.server.policy.DisplayFoldController,boolean)>(r0, z0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    void setDeviceFolded(boolean)
    {
        com.android.server.policy.DisplayFoldController r0;
        boolean z0, $z1, $z2, $z3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, i23, i24, i25;
        android.hardware.display.DisplayManagerInternal $r1, $r3, $r16, $r19, $r21;
        com.android.server.wm.WindowManagerInternal $r2, $r20;
        com.android.server.policy.DisplayFoldDurationLogger $r4, $r6;
        java.lang.String $r5;
        java.lang.Boolean $r7, r23;
        android.os.RemoteCallbackList $r8, $r9, $r10;
        android.os.IInterface $r11;
        android.view.IDisplayFoldListener $r12;
        android.graphics.Rect $r13, $r14, r24;
        android.view.DisplayInfo $r15, $r17, $r18;
        android.os.RemoteException $r22;

        r0 := @this: com.android.server.policy.DisplayFoldController;

        z0 := @parameter0: boolean;

        r23 = r0.<com.android.server.policy.DisplayFoldController: java.lang.Boolean mFolded>;

        if r23 == null goto label01;

        $z3 = virtualinvoke r23.<java.lang.Boolean: boolean booleanValue()>();

        if $z3 != z0 goto label01;

        return;

     label01:
        if z0 == 0 goto label05;

        $r13 = r0.<com.android.server.policy.DisplayFoldController: android.graphics.Rect mOverrideFoldedArea>;

        $z1 = virtualinvoke $r13.<android.graphics.Rect: boolean isEmpty()>();

        if $z1 != 0 goto label02;

        r24 = r0.<com.android.server.policy.DisplayFoldController: android.graphics.Rect mOverrideFoldedArea>;

        goto label03;

     label02:
        $r14 = r0.<com.android.server.policy.DisplayFoldController: android.graphics.Rect mFoldedArea>;

        $z2 = virtualinvoke $r14.<android.graphics.Rect: boolean isEmpty()>();

        if $z2 != 0 goto label04;

        r24 = r0.<com.android.server.policy.DisplayFoldController: android.graphics.Rect mFoldedArea>;

     label03:
        $r16 = r0.<com.android.server.policy.DisplayFoldController: android.hardware.display.DisplayManagerInternal mDisplayManagerInternal>;

        $i6 = r0.<com.android.server.policy.DisplayFoldController: int mDisplayId>;

        $r15 = r0.<com.android.server.policy.DisplayFoldController: android.view.DisplayInfo mNonOverrideDisplayInfo>;

        virtualinvoke $r16.<android.hardware.display.DisplayManagerInternal: void getNonOverrideDisplayInfo(int,android.view.DisplayInfo)>($i6, $r15);

        $r17 = r0.<com.android.server.policy.DisplayFoldController: android.view.DisplayInfo mNonOverrideDisplayInfo>;

        $i7 = $r17.<android.view.DisplayInfo: int logicalWidth>;

        $i8 = virtualinvoke r24.<android.graphics.Rect: int width()>();

        $i9 = $i7 - $i8;

        i0 = $i9 / 2;

        i1 = r24.<android.graphics.Rect: int left>;

        $r18 = r0.<com.android.server.policy.DisplayFoldController: android.view.DisplayInfo mNonOverrideDisplayInfo>;

        $i10 = $r18.<android.view.DisplayInfo: int logicalHeight>;

        $i11 = virtualinvoke r24.<android.graphics.Rect: int height()>();

        $i12 = $i10 - $i11;

        i22 = $i12 / 2;

        i23 = r24.<android.graphics.Rect: int top>;

        $r19 = r0.<com.android.server.policy.DisplayFoldController: android.hardware.display.DisplayManagerInternal mDisplayManagerInternal>;

        $i13 = r0.<com.android.server.policy.DisplayFoldController: int mDisplayId>;

        virtualinvoke $r19.<android.hardware.display.DisplayManagerInternal: void setDisplayScalingDisabled(int,boolean)>($i13, 1);

        $r20 = r0.<com.android.server.policy.DisplayFoldController: com.android.server.wm.WindowManagerInternal mWindowManagerInternal>;

        $i14 = r0.<com.android.server.policy.DisplayFoldController: int mDisplayId>;

        $i15 = virtualinvoke r24.<android.graphics.Rect: int width()>();

        $i16 = virtualinvoke r24.<android.graphics.Rect: int height()>();

        virtualinvoke $r20.<com.android.server.wm.WindowManagerInternal: void setForcedDisplaySize(int,int,int)>($i14, $i15, $i16);

        $r21 = r0.<com.android.server.policy.DisplayFoldController: android.hardware.display.DisplayManagerInternal mDisplayManagerInternal>;

        $i21 = r0.<com.android.server.policy.DisplayFoldController: int mDisplayId>;

        $i17 = i0 - i1;

        $i20 = neg $i17;

        $i18 = i22 - i23;

        $i19 = neg $i18;

        virtualinvoke $r21.<android.hardware.display.DisplayManagerInternal: void setDisplayOffsets(int,int,int)>($i21, $i20, $i19);

        goto label06;

     label04:
        return;

     label05:
        $r1 = r0.<com.android.server.policy.DisplayFoldController: android.hardware.display.DisplayManagerInternal mDisplayManagerInternal>;

        $i2 = r0.<com.android.server.policy.DisplayFoldController: int mDisplayId>;

        virtualinvoke $r1.<android.hardware.display.DisplayManagerInternal: void setDisplayScalingDisabled(int,boolean)>($i2, 0);

        $r2 = r0.<com.android.server.policy.DisplayFoldController: com.android.server.wm.WindowManagerInternal mWindowManagerInternal>;

        $i3 = r0.<com.android.server.policy.DisplayFoldController: int mDisplayId>;

        virtualinvoke $r2.<com.android.server.wm.WindowManagerInternal: void clearForcedDisplaySize(int)>($i3);

        $r3 = r0.<com.android.server.policy.DisplayFoldController: android.hardware.display.DisplayManagerInternal mDisplayManagerInternal>;

        $i4 = r0.<com.android.server.policy.DisplayFoldController: int mDisplayId>;

        virtualinvoke $r3.<android.hardware.display.DisplayManagerInternal: void setDisplayOffsets(int,int,int)>($i4, 0, 0);

     label06:
        $r4 = r0.<com.android.server.policy.DisplayFoldController: com.android.server.policy.DisplayFoldDurationLogger mDurationLogger>;

        virtualinvoke $r4.<com.android.server.policy.DisplayFoldDurationLogger: void setDeviceFolded(boolean)>(z0);

        $r6 = r0.<com.android.server.policy.DisplayFoldController: com.android.server.policy.DisplayFoldDurationLogger mDurationLogger>;

        $r5 = r0.<com.android.server.policy.DisplayFoldController: java.lang.String mFocusedApp>;

        virtualinvoke $r6.<com.android.server.policy.DisplayFoldDurationLogger: void logFocusedAppWithFoldState(boolean,java.lang.String)>(z0, $r5);

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r0.<com.android.server.policy.DisplayFoldController: java.lang.Boolean mFolded> = $r7;

        $r8 = r0.<com.android.server.policy.DisplayFoldController: android.os.RemoteCallbackList mListeners>;

        i24 = virtualinvoke $r8.<android.os.RemoteCallbackList: int beginBroadcast()>();

        i25 = 0;

     label07:
        if i25 >= i24 goto label12;

     label08:
        $r10 = r0.<com.android.server.policy.DisplayFoldController: android.os.RemoteCallbackList mListeners>;

        $r11 = virtualinvoke $r10.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i25);

        $r12 = (android.view.IDisplayFoldListener) $r11;

        $i5 = r0.<com.android.server.policy.DisplayFoldController: int mDisplayId>;

        interfaceinvoke $r12.<android.view.IDisplayFoldListener: void onDisplayFoldChanged(int,boolean)>($i5, z0);

     label09:
        goto label11;

     label10:
        $r22 := @caughtexception;

     label11:
        i25 = i25 + 1;

        goto label07;

     label12:
        $r9 = r0.<com.android.server.policy.DisplayFoldController: android.os.RemoteCallbackList mListeners>;

        virtualinvoke $r9.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

        catch android.os.RemoteException from label08 to label09 with label10;
    }

    void setOverrideFoldedArea(android.graphics.Rect)
    {
        com.android.server.policy.DisplayFoldController r0;
        android.graphics.Rect r1, $r2;

        r0 := @this: com.android.server.policy.DisplayFoldController;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<com.android.server.policy.DisplayFoldController: android.graphics.Rect mOverrideFoldedArea>;

        virtualinvoke $r2.<android.graphics.Rect: void set(android.graphics.Rect)>(r1);

        return;
    }

    void unregisterDisplayFoldListener(android.view.IDisplayFoldListener)
    {
        com.android.server.policy.DisplayFoldController r0;
        android.view.IDisplayFoldListener r1;
        android.os.RemoteCallbackList $r2;

        r0 := @this: com.android.server.policy.DisplayFoldController;

        r1 := @parameter0: android.view.IDisplayFoldListener;

        $r2 = r0.<com.android.server.policy.DisplayFoldController: android.os.RemoteCallbackList mListeners>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: boolean unregister(android.os.IInterface)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.policy.DisplayFoldController: java.lang.String TAG> = "DisplayFoldController";

        return;
    }
}
