class com.android.server.policy.PermissionPolicyService$3 extends android.content.BroadcastReceiver
{
    final java.util.Map mPermControllerManagers;
    final java.util.List mUserSetupUids;
    final com.android.server.policy.PermissionPolicyService this$0;
    final android.content.pm.PackageManagerInternal val$packageManagerInternal;

    void <init>(com.android.server.policy.PermissionPolicyService, android.content.pm.PackageManagerInternal)
    {
        com.android.server.policy.PermissionPolicyService$3 r0;
        com.android.server.policy.PermissionPolicyService r1;
        android.content.pm.PackageManagerInternal r2;
        java.util.ArrayList $r3;
        java.util.HashMap $r4;

        r0 := @this: com.android.server.policy.PermissionPolicyService$3;

        r1 := @parameter0: com.android.server.policy.PermissionPolicyService;

        r2 := @parameter1: android.content.pm.PackageManagerInternal;

        r0.<com.android.server.policy.PermissionPolicyService$3: com.android.server.policy.PermissionPolicyService this$0> = r1;

        r0.<com.android.server.policy.PermissionPolicyService$3: android.content.pm.PackageManagerInternal val$packageManagerInternal> = r2;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(200);

        r0.<com.android.server.policy.PermissionPolicyService$3: java.util.List mUserSetupUids> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.policy.PermissionPolicyService$3: java.util.Map mPermControllerManagers> = $r4;

        return;
    }

    private void updateUid(int)
    {
        com.android.server.policy.PermissionPolicyService$3 r0;
        int i0;
        android.os.UserHandle r1;
        android.permission.PermissionControllerManager r2, $r5, r12;
        java.util.Map $r3, $r10;
        java.lang.Object $r4;
        com.android.server.policy.PermissionPolicyService $r6;
        android.content.Context $r7, $r8;
        android.os.Handler $r9;

        r0 := @this: com.android.server.policy.PermissionPolicyService$3;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.UserHandle: android.os.UserHandle getUserHandleForUid(int)>(i0);

        $r3 = r0.<com.android.server.policy.PermissionPolicyService$3: java.util.Map mPermControllerManagers>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (android.permission.PermissionControllerManager) $r4;

        r12 = r2;

        if r2 != null goto label1;

        $r5 = new android.permission.PermissionControllerManager;

        $r6 = r0.<com.android.server.policy.PermissionPolicyService$3: com.android.server.policy.PermissionPolicyService this$0>;

        $r7 = virtualinvoke $r6.<com.android.server.policy.PermissionPolicyService: android.content.Context getContext()>();

        $r8 = staticinvoke <com.android.server.policy.PermissionPolicyService: android.content.Context access$600(android.content.Context,android.os.UserHandle)>($r7, r1);

        $r9 = staticinvoke <com.android.server.FgThread: android.os.Handler getHandler()>();

        specialinvoke $r5.<android.permission.PermissionControllerManager: void <init>(android.content.Context,android.os.Handler)>($r8, $r9);

        r12 = $r5;

        $r10 = r0.<com.android.server.policy.PermissionPolicyService$3: java.util.Map mPermControllerManagers>;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r5);

     label1:
        virtualinvoke r12.<android.permission.PermissionControllerManager: void updateUserSensitiveForApp(int)>(i0);

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        com.android.server.policy.PermissionPolicyService$3 r0;
        com.android.server.policy.PermissionPolicyService $r1;
        android.content.Context $r2, r19;
        android.content.ContentResolver $r3;
        android.content.pm.PackageManagerInternal $r4;
        com.android.server.pm.parsing.pkg.AndroidPackage $r5;
        java.util.List $r6, $r8, $r10, $r11, $r12, $r13, r22, r24;
        java.lang.Integer $r7, $r9, $r15;
        boolean $z0, $z2, z3;
        int $i0, $i1, i2, i3, i4;
        java.lang.Object $r14;
        android.provider.Settings$SettingNotFoundException $r16;
        java.lang.Throwable $r17, $r18;
        android.content.Intent r20;

        r0 := @this: com.android.server.policy.PermissionPolicyService$3;

        r19 := @parameter0: android.content.Context;

        r20 := @parameter1: android.content.Intent;

        z3 = 1;

     label01:
        $r1 = r0.<com.android.server.policy.PermissionPolicyService$3: com.android.server.policy.PermissionPolicyService this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.policy.PermissionPolicyService: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        i2 = staticinvoke <android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String)>($r3, "user_setup_complete");

     label02:
        if i2 == 0 goto label03;

        z3 = 1;

        goto label04;

     label03:
        z3 = 0;

     label04:
        goto label06;

     label05:
        $r16 := @caughtexception;

     label06:
        i3 = virtualinvoke r20.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.intent.extra.UID", -1);

        $r4 = r0.<com.android.server.policy.PermissionPolicyService$3: android.content.pm.PackageManagerInternal val$packageManagerInternal>;

        $r5 = virtualinvoke $r4.<android.content.pm.PackageManagerInternal: com.android.server.pm.parsing.pkg.AndroidPackage getPackage(int)>(i3);

        if $r5 != null goto label07;

        return;

     label07:
        if z3 == 0 goto label18;

        $r10 = r0.<com.android.server.policy.PermissionPolicyService$3: java.util.List mUserSetupUids>;

        $z2 = interfaceinvoke $r10.<java.util.List: boolean isEmpty()>();

        if $z2 != 0 goto label17;

        r22 = r0.<com.android.server.policy.PermissionPolicyService$3: java.util.List mUserSetupUids>;

        entermonitor r22;

     label08:
        $r11 = r0.<com.android.server.policy.PermissionPolicyService$3: java.util.List mUserSetupUids>;

        $i0 = interfaceinvoke $r11.<java.util.List: int size()>();

        i4 = $i0 - 1;

     label09:
        if i4 < 0 goto label12;

     label10:
        $r13 = r0.<com.android.server.policy.PermissionPolicyService$3: java.util.List mUserSetupUids>;

        $r14 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(i4);

        $r15 = (java.lang.Integer) $r14;

        $i1 = virtualinvoke $r15.<java.lang.Integer: int intValue()>();

        specialinvoke r0.<com.android.server.policy.PermissionPolicyService$3: void updateUid(int)>($i1);

     label11:
        i4 = i4 + -1;

        goto label09;

     label12:
        $r12 = r0.<com.android.server.policy.PermissionPolicyService$3: java.util.List mUserSetupUids>;

        interfaceinvoke $r12.<java.util.List: void clear()>();

        exitmonitor r22;

     label13:
        goto label17;

     label14:
        $r17 := @caughtexception;

     label15:
        exitmonitor r22;

     label16:
        throw $r17;

     label17:
        specialinvoke r0.<com.android.server.policy.PermissionPolicyService$3: void updateUid(int)>(i3);

        goto label21;

     label18:
        r24 = r0.<com.android.server.policy.PermissionPolicyService$3: java.util.List mUserSetupUids>;

        entermonitor r24;

     label19:
        $r6 = r0.<com.android.server.policy.PermissionPolicyService$3: java.util.List mUserSetupUids>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $z0 = interfaceinvoke $r6.<java.util.List: boolean contains(java.lang.Object)>($r7);

        if $z0 != 0 goto label20;

        $r8 = r0.<com.android.server.policy.PermissionPolicyService$3: java.util.List mUserSetupUids>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r9);

     label20:
        exitmonitor r24;

     label21:
        return;

     label22:
        $r18 := @caughtexception;

     label23:
        exitmonitor r24;

     label24:
        throw $r18;

        catch android.provider.Settings$SettingNotFoundException from label01 to label02 with label05;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
        catch java.lang.Throwable from label19 to label20 with label22;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label23 to label24 with label22;
    }
}
