class com.android.server.policy.PermissionPolicyService$Internal extends com.android.server.policy.PermissionPolicyInternal
{
    final com.android.server.policy.PermissionPolicyService this$0;

    private void <init>(com.android.server.policy.PermissionPolicyService)
    {
        com.android.server.policy.PermissionPolicyService$Internal r0;
        com.android.server.policy.PermissionPolicyService r1;

        r0 := @this: com.android.server.policy.PermissionPolicyService$Internal;

        r1 := @parameter0: com.android.server.policy.PermissionPolicyService;

        r0.<com.android.server.policy.PermissionPolicyService$Internal: com.android.server.policy.PermissionPolicyService this$0> = r1;

        specialinvoke r0.<com.android.server.policy.PermissionPolicyInternal: void <init>()>();

        return;
    }

    void <init>(com.android.server.policy.PermissionPolicyService, com.android.server.policy.PermissionPolicyService$1)
    {
        com.android.server.policy.PermissionPolicyService$Internal r0;
        com.android.server.policy.PermissionPolicyService r1;
        com.android.server.policy.PermissionPolicyService$1 r2;

        r0 := @this: com.android.server.policy.PermissionPolicyService$Internal;

        r1 := @parameter0: com.android.server.policy.PermissionPolicyService;

        r2 := @parameter1: com.android.server.policy.PermissionPolicyService$1;

        specialinvoke r0.<com.android.server.policy.PermissionPolicyService$Internal: void <init>(com.android.server.policy.PermissionPolicyService)>(r1);

        return;
    }

    private boolean isActionRemovedForCallingPackage(android.content.Intent, int, java.lang.String)
    {
        com.android.server.policy.PermissionPolicyService$Internal r0;
        android.content.Intent r1;
        java.lang.String r2, r3, $r13, r14;
        int i0, $i1, i3, i5;
        boolean $z0, $z1;
        com.android.server.policy.PermissionPolicyService $r4;
        android.content.Context $r5;
        android.content.pm.PackageManager $r6;
        android.content.pm.ApplicationInfo $r7;
        android.content.pm.PackageManager$NameNotFoundException $r9;
        java.lang.StringBuilder $r10;
        byte b4;

        r0 := @this: com.android.server.policy.PermissionPolicyService$Internal;

        r1 := @parameter0: android.content.Intent;

        i3 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r14 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        if r14 != null goto label01;

        return 0;

     label01:
        b4 = -1;

        i0 = virtualinvoke r14.<java.lang.String: int hashCode()>();

        if i0 == -1673968409 goto label04;

        if i0 == 579418056 goto label03;

     label02:
        goto label05;

     label03:
        $z1 = virtualinvoke r14.<java.lang.String: boolean equals(java.lang.Object)>("android.telecom.action.CHANGE_DEFAULT_DIALER");

        if $z1 == 0 goto label02;

        b4 = 0;

        goto label05;

     label04:
        $z0 = virtualinvoke r14.<java.lang.String: boolean equals(java.lang.Object)>("android.provider.Telephony.ACTION_CHANGE_DEFAULT");

        if $z0 == 0 goto label02;

        b4 = 1;

     label05:
        if b4 == 0 goto label06;

        if b4 == 1 goto label06;

        return 0;

     label06:
        $r4 = r0.<com.android.server.policy.PermissionPolicyService$Internal: com.android.server.policy.PermissionPolicyService this$0>;

        $r5 = virtualinvoke $r4.<com.android.server.policy.PermissionPolicyService: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i3);

        $r7 = virtualinvoke $r6.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfoAsUser(java.lang.String,int,int)>(r2, 0, $i1);

        i5 = $r7.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

     label07:
        if i5 < 29 goto label08;

        return 1;

     label08:
        goto label10;

     label09:
        $r9 := @caughtexception;

        r3 = staticinvoke <com.android.server.policy.PermissionPolicyService: java.lang.String access$1000()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find application info for ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r3, $r13);

     label10:
        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.intent.extra.CALLING_PACKAGE", r2);

        return 0;

        catch android.content.pm.PackageManager$NameNotFoundException from label06 to label07 with label09;
    }

    public boolean checkStartActivity(android.content.Intent, int, java.lang.String)
    {
        com.android.server.policy.PermissionPolicyService$Internal r0;
        android.content.Intent r1;
        int i0;
        java.lang.String r2, r3, $r7, $r14;
        boolean $z0;
        java.lang.StringBuilder $r5;

        r0 := @this: com.android.server.policy.PermissionPolicyService$Internal;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        if r2 == null goto label1;

        $z0 = specialinvoke r0.<com.android.server.policy.PermissionPolicyService$Internal: boolean isActionRemovedForCallingPackage(android.content.Intent,int,java.lang.String)>(r1, i0, r2);

        if $z0 == 0 goto label1;

        r3 = staticinvoke <com.android.server.policy.PermissionPolicyService: java.lang.String access$1000()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Action Removed: starting ");

        $r7 = virtualinvoke r1.<android.content.Intent: java.lang.String toString()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (uid=");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r14 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r3, $r14);

        return 0;

     label1:
        return 1;
    }

    public boolean isInitialized(int)
    {
        com.android.server.policy.PermissionPolicyService$Internal r0;
        int i0;
        com.android.server.policy.PermissionPolicyService $r1;
        boolean $z0;

        r0 := @this: com.android.server.policy.PermissionPolicyService$Internal;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.policy.PermissionPolicyService$Internal: com.android.server.policy.PermissionPolicyService this$0>;

        $z0 = staticinvoke <com.android.server.policy.PermissionPolicyService: boolean access$100(com.android.server.policy.PermissionPolicyService,int)>($r1, i0);

        return $z0;
    }

    public void setOnInitializedCallback(com.android.server.policy.PermissionPolicyInternal$OnInitializedCallback)
    {
        com.android.server.policy.PermissionPolicyService$Internal r0;
        java.lang.Object r1;
        com.android.server.policy.PermissionPolicyService $r2, $r3;
        java.lang.Throwable $r5;
        com.android.server.policy.PermissionPolicyInternal$OnInitializedCallback r6;

        r0 := @this: com.android.server.policy.PermissionPolicyService$Internal;

        r6 := @parameter0: com.android.server.policy.PermissionPolicyInternal$OnInitializedCallback;

        $r2 = r0.<com.android.server.policy.PermissionPolicyService$Internal: com.android.server.policy.PermissionPolicyService this$0>;

        r1 = staticinvoke <com.android.server.policy.PermissionPolicyService: java.lang.Object access$1100(com.android.server.policy.PermissionPolicyService)>($r2);

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.policy.PermissionPolicyService$Internal: com.android.server.policy.PermissionPolicyService this$0>;

        staticinvoke <com.android.server.policy.PermissionPolicyService: com.android.server.policy.PermissionPolicyInternal$OnInitializedCallback access$1202(com.android.server.policy.PermissionPolicyService,com.android.server.policy.PermissionPolicyInternal$OnInitializedCallback)>($r3, r6);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
