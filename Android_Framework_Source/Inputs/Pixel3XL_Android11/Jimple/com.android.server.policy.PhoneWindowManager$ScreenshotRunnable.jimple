class com.android.server.policy.PhoneWindowManager$ScreenshotRunnable extends java.lang.Object implements java.lang.Runnable
{
    private int mScreenshotSource;
    private int mScreenshotType;
    final com.android.server.policy.PhoneWindowManager this$0;

    private void <init>(com.android.server.policy.PhoneWindowManager)
    {
        com.android.server.policy.PhoneWindowManager$ScreenshotRunnable r0;
        com.android.server.policy.PhoneWindowManager r1;

        r0 := @this: com.android.server.policy.PhoneWindowManager$ScreenshotRunnable;

        r1 := @parameter0: com.android.server.policy.PhoneWindowManager;

        r0.<com.android.server.policy.PhoneWindowManager$ScreenshotRunnable: com.android.server.policy.PhoneWindowManager this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.policy.PhoneWindowManager$ScreenshotRunnable: int mScreenshotType> = 1;

        r0.<com.android.server.policy.PhoneWindowManager$ScreenshotRunnable: int mScreenshotSource> = 2;

        return;
    }

    void <init>(com.android.server.policy.PhoneWindowManager, com.android.server.policy.PhoneWindowManager$1)
    {
        com.android.server.policy.PhoneWindowManager$ScreenshotRunnable r0;
        com.android.server.policy.PhoneWindowManager r1;
        com.android.server.policy.PhoneWindowManager$1 r2;

        r0 := @this: com.android.server.policy.PhoneWindowManager$ScreenshotRunnable;

        r1 := @parameter0: com.android.server.policy.PhoneWindowManager;

        r2 := @parameter1: com.android.server.policy.PhoneWindowManager$1;

        specialinvoke r0.<com.android.server.policy.PhoneWindowManager$ScreenshotRunnable: void <init>(com.android.server.policy.PhoneWindowManager)>(r1);

        return;
    }

    public void run()
    {
        com.android.server.policy.PhoneWindowManager$ScreenshotRunnable r0;
        com.android.server.policy.PhoneWindowManager $r1;
        int $i0, $i1;
        com.android.server.wm.DisplayPolicy $r2;

        r0 := @this: com.android.server.policy.PhoneWindowManager$ScreenshotRunnable;

        $r1 = r0.<com.android.server.policy.PhoneWindowManager$ScreenshotRunnable: com.android.server.policy.PhoneWindowManager this$0>;

        $r2 = $r1.<com.android.server.policy.PhoneWindowManager: com.android.server.wm.DisplayPolicy mDefaultDisplayPolicy>;

        $i1 = r0.<com.android.server.policy.PhoneWindowManager$ScreenshotRunnable: int mScreenshotType>;

        $i0 = r0.<com.android.server.policy.PhoneWindowManager$ScreenshotRunnable: int mScreenshotSource>;

        virtualinvoke $r2.<com.android.server.wm.DisplayPolicy: void takeScreenshot(int,int)>($i1, $i0);

        return;
    }

    public void setScreenshotSource(int)
    {
        com.android.server.policy.PhoneWindowManager$ScreenshotRunnable r0;
        int i0;

        r0 := @this: com.android.server.policy.PhoneWindowManager$ScreenshotRunnable;

        i0 := @parameter0: int;

        r0.<com.android.server.policy.PhoneWindowManager$ScreenshotRunnable: int mScreenshotSource> = i0;

        return;
    }

    public void setScreenshotType(int)
    {
        com.android.server.policy.PhoneWindowManager$ScreenshotRunnable r0;
        int i0;

        r0 := @this: com.android.server.policy.PhoneWindowManager$ScreenshotRunnable;

        i0 := @parameter0: int;

        r0.<com.android.server.policy.PhoneWindowManager$ScreenshotRunnable: int mScreenshotType> = i0;

        return;
    }
}
