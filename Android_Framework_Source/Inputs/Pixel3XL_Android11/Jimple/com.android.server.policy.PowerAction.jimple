public final class com.android.server.policy.PowerAction extends com.android.internal.globalactions.SinglePressAction implements com.android.internal.globalactions.LongPressAction
{
    private final android.content.Context mContext;
    private final com.android.server.policy.WindowManagerPolicy$WindowManagerFuncs mWindowManagerFuncs;

    public void <init>(android.content.Context, com.android.server.policy.WindowManagerPolicy$WindowManagerFuncs)
    {
        com.android.server.policy.PowerAction r0;
        android.content.Context r1;
        com.android.server.policy.WindowManagerPolicy$WindowManagerFuncs r2;

        r0 := @this: com.android.server.policy.PowerAction;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.policy.WindowManagerPolicy$WindowManagerFuncs;

        specialinvoke r0.<com.android.internal.globalactions.SinglePressAction: void <init>(int,int)>(17301552, 17040244);

        r0.<com.android.server.policy.PowerAction: android.content.Context mContext> = r1;

        r0.<com.android.server.policy.PowerAction: com.android.server.policy.WindowManagerPolicy$WindowManagerFuncs mWindowManagerFuncs> = r2;

        return;
    }

    public boolean onLongPress()
    {
        com.android.server.policy.PowerAction r0;
        android.content.Context $r1;
        java.lang.Object $r2;
        android.os.UserManager $r3;
        boolean $z0;
        com.android.server.policy.WindowManagerPolicy$WindowManagerFuncs $r4;

        r0 := @this: com.android.server.policy.PowerAction;

        $r1 = r0.<com.android.server.policy.PowerAction: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/os/UserManager;");

        $r3 = (android.os.UserManager) $r2;

        $z0 = virtualinvoke $r3.<android.os.UserManager: boolean hasUserRestriction(java.lang.String)>("no_safe_boot");

        if $z0 != 0 goto label1;

        $r4 = r0.<com.android.server.policy.PowerAction: com.android.server.policy.WindowManagerPolicy$WindowManagerFuncs mWindowManagerFuncs>;

        interfaceinvoke $r4.<com.android.server.policy.WindowManagerPolicy$WindowManagerFuncs: void rebootSafeMode(boolean)>(1);

        return 1;

     label1:
        return 0;
    }

    public void onPress()
    {
        com.android.server.policy.PowerAction r0;
        com.android.server.policy.WindowManagerPolicy$WindowManagerFuncs $r1;

        r0 := @this: com.android.server.policy.PowerAction;

        $r1 = r0.<com.android.server.policy.PowerAction: com.android.server.policy.WindowManagerPolicy$WindowManagerFuncs mWindowManagerFuncs>;

        interfaceinvoke $r1.<com.android.server.policy.WindowManagerPolicy$WindowManagerFuncs: void shutdown(boolean)>(0);

        return;
    }

    public boolean showBeforeProvisioning()
    {
        com.android.server.policy.PowerAction r0;

        r0 := @this: com.android.server.policy.PowerAction;

        return 1;
    }

    public boolean showDuringKeyguard()
    {
        com.android.server.policy.PowerAction r0;

        r0 := @this: com.android.server.policy.PowerAction;

        return 1;
    }
}
