class com.android.server.policy.SoftRestrictedPermissionPolicy$2 extends com.android.server.policy.SoftRestrictedPermissionPolicy
{
    final boolean val$hasRequestedLegacyExternalStorage;
    final boolean val$hasWriteMediaStorageGrantedForUid;
    final boolean val$isWhiteListed;
    final boolean val$shouldApplyRestriction;
    final boolean val$shouldPreserveLegacyExternalStorage;
    final int val$targetSDK;

    void <init>(boolean, int, boolean, boolean, boolean, boolean)
    {
        com.android.server.policy.SoftRestrictedPermissionPolicy$2 r0;
        boolean z0, z1, z2, z3, z4;
        int i0;

        r0 := @this: com.android.server.policy.SoftRestrictedPermissionPolicy$2;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        z3 := @parameter4: boolean;

        z4 := @parameter5: boolean;

        r0.<com.android.server.policy.SoftRestrictedPermissionPolicy$2: boolean val$isWhiteListed> = z0;

        r0.<com.android.server.policy.SoftRestrictedPermissionPolicy$2: int val$targetSDK> = i0;

        r0.<com.android.server.policy.SoftRestrictedPermissionPolicy$2: boolean val$shouldApplyRestriction> = z1;

        r0.<com.android.server.policy.SoftRestrictedPermissionPolicy$2: boolean val$hasRequestedLegacyExternalStorage> = z2;

        r0.<com.android.server.policy.SoftRestrictedPermissionPolicy$2: boolean val$hasWriteMediaStorageGrantedForUid> = z3;

        r0.<com.android.server.policy.SoftRestrictedPermissionPolicy$2: boolean val$shouldPreserveLegacyExternalStorage> = z4;

        specialinvoke r0.<com.android.server.policy.SoftRestrictedPermissionPolicy: void <init>()>();

        return;
    }

    public int getExtraAppOpCode()
    {
        com.android.server.policy.SoftRestrictedPermissionPolicy$2 r0;

        r0 := @this: com.android.server.policy.SoftRestrictedPermissionPolicy$2;

        return 87;
    }

    public boolean mayAllowExtraAppOp()
    {
        com.android.server.policy.SoftRestrictedPermissionPolicy$2 r0;
        boolean $z0, $z1, $z2, $z3, z4;

        r0 := @this: com.android.server.policy.SoftRestrictedPermissionPolicy$2;

        $z0 = r0.<com.android.server.policy.SoftRestrictedPermissionPolicy$2: boolean val$shouldApplyRestriction>;

        if $z0 != 0 goto label2;

        $z1 = r0.<com.android.server.policy.SoftRestrictedPermissionPolicy$2: boolean val$hasRequestedLegacyExternalStorage>;

        if $z1 != 0 goto label1;

        $z2 = r0.<com.android.server.policy.SoftRestrictedPermissionPolicy$2: boolean val$hasWriteMediaStorageGrantedForUid>;

        if $z2 != 0 goto label1;

        $z3 = r0.<com.android.server.policy.SoftRestrictedPermissionPolicy$2: boolean val$shouldPreserveLegacyExternalStorage>;

        if $z3 == 0 goto label2;

     label1:
        z4 = 1;

        goto label3;

     label2:
        z4 = 0;

     label3:
        return z4;
    }

    public boolean mayDenyExtraAppOpIfGranted()
    {
        com.android.server.policy.SoftRestrictedPermissionPolicy$2 r0;
        boolean $z0;

        r0 := @this: com.android.server.policy.SoftRestrictedPermissionPolicy$2;

        $z0 = r0.<com.android.server.policy.SoftRestrictedPermissionPolicy$2: boolean val$shouldApplyRestriction>;

        return $z0;
    }

    public boolean mayGrantPermission()
    {
        com.android.server.policy.SoftRestrictedPermissionPolicy$2 r0;
        boolean $z0, z1;
        int $i0;

        r0 := @this: com.android.server.policy.SoftRestrictedPermissionPolicy$2;

        $z0 = r0.<com.android.server.policy.SoftRestrictedPermissionPolicy$2: boolean val$isWhiteListed>;

        if $z0 != 0 goto label2;

        $i0 = r0.<com.android.server.policy.SoftRestrictedPermissionPolicy$2: int val$targetSDK>;

        if $i0 < 29 goto label1;

        goto label2;

     label1:
        z1 = 0;

        goto label3;

     label2:
        z1 = 1;

     label3:
        return z1;
    }
}
