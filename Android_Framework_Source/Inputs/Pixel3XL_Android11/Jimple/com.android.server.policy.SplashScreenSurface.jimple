class com.android.server.policy.SplashScreenSurface extends java.lang.Object implements com.android.server.policy.WindowManagerPolicy$StartingSurface
{
    private static final java.lang.String TAG;
    private final android.os.IBinder mAppToken;
    private final android.view.View mView;

    void <init>(android.view.View, android.os.IBinder)
    {
        com.android.server.policy.SplashScreenSurface r0;
        android.view.View r1;
        android.os.IBinder r2;

        r0 := @this: com.android.server.policy.SplashScreenSurface;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.policy.SplashScreenSurface: android.view.View mView> = r1;

        r0.<com.android.server.policy.SplashScreenSurface: android.os.IBinder mAppToken> = r2;

        return;
    }

    public void remove()
    {
        com.android.server.policy.SplashScreenSurface r0;
        android.view.View $r1, $r4;
        android.content.Context $r2;
        java.lang.Object $r3;
        android.view.WindowManager $r5;

        r0 := @this: com.android.server.policy.SplashScreenSurface;

        $r1 = r0.<com.android.server.policy.SplashScreenSurface: android.view.View mView>;

        $r2 = virtualinvoke $r1.<android.view.View: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/view/WindowManager;");

        $r5 = (android.view.WindowManager) $r3;

        $r4 = r0.<com.android.server.policy.SplashScreenSurface: android.view.View mView>;

        interfaceinvoke $r5.<android.view.WindowManager: void removeView(android.view.View)>($r4);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.policy.SplashScreenSurface: java.lang.String TAG> = "WindowManager";

        return;
    }
}
