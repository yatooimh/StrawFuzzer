abstract class com.android.server.policy.WindowOrientationListener$OrientationJudge extends java.lang.Object implements android.hardware.SensorEventListener
{
    protected static final float MILLIS_PER_NANO;
    protected static final long NANOS_PER_MS;
    protected static final long PROPOSAL_MIN_TIME_SINCE_TOUCH_END_NANOS;
    final com.android.server.policy.WindowOrientationListener this$0;

    void <init>(com.android.server.policy.WindowOrientationListener)
    {
        com.android.server.policy.WindowOrientationListener$OrientationJudge r0;
        com.android.server.policy.WindowOrientationListener r1;

        r0 := @this: com.android.server.policy.WindowOrientationListener$OrientationJudge;

        r1 := @parameter0: com.android.server.policy.WindowOrientationListener;

        r0.<com.android.server.policy.WindowOrientationListener$OrientationJudge: com.android.server.policy.WindowOrientationListener this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract void dumpLocked(java.io.PrintWriter, java.lang.String);

    public abstract int getProposedRotationLocked();

    public abstract void onAccuracyChanged(android.hardware.Sensor, int);

    public abstract void onSensorChanged(android.hardware.SensorEvent);

    public abstract void onTouchEndLocked(long);

    public abstract void onTouchStartLocked();

    public abstract void resetLocked(boolean);

    public static void <clinit>()
    {
        <com.android.server.policy.WindowOrientationListener$OrientationJudge: long PROPOSAL_MIN_TIME_SINCE_TOUCH_END_NANOS> = 500000000L;

        <com.android.server.policy.WindowOrientationListener$OrientationJudge: long NANOS_PER_MS> = 1000000L;

        <com.android.server.policy.WindowOrientationListener$OrientationJudge: float MILLIS_PER_NANO> = 1.0E-6F;

        return;
    }
}
