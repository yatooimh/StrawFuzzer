class com.android.server.policy.WindowOrientationListener$OrientationSensorJudge$1 extends java.lang.Object implements java.lang.Runnable
{
    final com.android.server.policy.WindowOrientationListener$OrientationSensorJudge this$1;

    void <init>(com.android.server.policy.WindowOrientationListener$OrientationSensorJudge)
    {
        com.android.server.policy.WindowOrientationListener$OrientationSensorJudge$1 r0;
        com.android.server.policy.WindowOrientationListener$OrientationSensorJudge r1;

        r0 := @this: com.android.server.policy.WindowOrientationListener$OrientationSensorJudge$1;

        r1 := @parameter0: com.android.server.policy.WindowOrientationListener$OrientationSensorJudge;

        r0.<com.android.server.policy.WindowOrientationListener$OrientationSensorJudge$1: com.android.server.policy.WindowOrientationListener$OrientationSensorJudge this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        com.android.server.policy.WindowOrientationListener$OrientationSensorJudge$1 r0;
        java.lang.Object r1;
        int i0;
        com.android.server.policy.WindowOrientationListener$OrientationSensorJudge $r3, $r5, $r6, $r7;
        com.android.server.policy.WindowOrientationListener $r4, $r8;
        java.lang.Throwable $r9;

        r0 := @this: com.android.server.policy.WindowOrientationListener$OrientationSensorJudge$1;

        $r3 = r0.<com.android.server.policy.WindowOrientationListener$OrientationSensorJudge$1: com.android.server.policy.WindowOrientationListener$OrientationSensorJudge this$1>;

        $r4 = $r3.<com.android.server.policy.WindowOrientationListener$OrientationSensorJudge: com.android.server.policy.WindowOrientationListener this$0>;

        r1 = staticinvoke <com.android.server.policy.WindowOrientationListener: java.lang.Object access$000(com.android.server.policy.WindowOrientationListener)>($r4);

        entermonitor r1;

     label1:
        $r5 = r0.<com.android.server.policy.WindowOrientationListener$OrientationSensorJudge$1: com.android.server.policy.WindowOrientationListener$OrientationSensorJudge this$1>;

        staticinvoke <com.android.server.policy.WindowOrientationListener$OrientationSensorJudge: boolean access$402(com.android.server.policy.WindowOrientationListener$OrientationSensorJudge,boolean)>($r5, 0);

        $r6 = r0.<com.android.server.policy.WindowOrientationListener$OrientationSensorJudge$1: com.android.server.policy.WindowOrientationListener$OrientationSensorJudge this$1>;

        i0 = virtualinvoke $r6.<com.android.server.policy.WindowOrientationListener$OrientationSensorJudge: int evaluateRotationChangeLocked()>();

        exitmonitor r1;

     label2:
        if i0 < 0 goto label3;

        $r7 = r0.<com.android.server.policy.WindowOrientationListener$OrientationSensorJudge$1: com.android.server.policy.WindowOrientationListener$OrientationSensorJudge this$1>;

        $r8 = $r7.<com.android.server.policy.WindowOrientationListener$OrientationSensorJudge: com.android.server.policy.WindowOrientationListener this$0>;

        virtualinvoke $r8.<com.android.server.policy.WindowOrientationListener: void onProposedRotationChanged(int)>(i0);

     label3:
        return;

     label4:
        $r9 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
}
