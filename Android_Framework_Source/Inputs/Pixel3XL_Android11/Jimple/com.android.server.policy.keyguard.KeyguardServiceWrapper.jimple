public class com.android.server.policy.keyguard.KeyguardServiceWrapper extends java.lang.Object implements com.android.internal.policy.IKeyguardService
{
    private java.lang.String TAG;
    private com.android.server.policy.keyguard.KeyguardStateMonitor mKeyguardStateMonitor;
    private com.android.internal.policy.IKeyguardService mService;

    public void <init>(android.content.Context, com.android.internal.policy.IKeyguardService, com.android.server.policy.keyguard.KeyguardStateMonitor$StateCallback)
    {
        com.android.server.policy.keyguard.KeyguardServiceWrapper r0;
        android.content.Context r1;
        com.android.internal.policy.IKeyguardService r2;
        com.android.server.policy.keyguard.KeyguardStateMonitor$StateCallback r3;
        com.android.server.policy.keyguard.KeyguardStateMonitor $r4;

        r0 := @this: com.android.server.policy.keyguard.KeyguardServiceWrapper;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.internal.policy.IKeyguardService;

        r3 := @parameter2: com.android.server.policy.keyguard.KeyguardStateMonitor$StateCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: java.lang.String TAG> = "KeyguardServiceWrapper";

        r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: com.android.internal.policy.IKeyguardService mService> = r2;

        $r4 = new com.android.server.policy.keyguard.KeyguardStateMonitor;

        specialinvoke $r4.<com.android.server.policy.keyguard.KeyguardStateMonitor: void <init>(android.content.Context,com.android.internal.policy.IKeyguardService,com.android.server.policy.keyguard.KeyguardStateMonitor$StateCallback)>(r1, r2, r3);

        r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: com.android.server.policy.keyguard.KeyguardStateMonitor mKeyguardStateMonitor> = $r4;

        return;
    }

    public void addStateMonitorCallback(com.android.internal.policy.IKeyguardStateCallback)
    {
        com.android.server.policy.keyguard.KeyguardServiceWrapper r0;
        com.android.internal.policy.IKeyguardService $r1;
        android.os.RemoteException $r2;
        java.lang.String $r3;
        com.android.internal.policy.IKeyguardStateCallback r4;

        r0 := @this: com.android.server.policy.keyguard.KeyguardServiceWrapper;

        r4 := @parameter0: com.android.internal.policy.IKeyguardStateCallback;

     label1:
        $r1 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: com.android.internal.policy.IKeyguardService mService>;

        interfaceinvoke $r1.<com.android.internal.policy.IKeyguardService: void addStateMonitorCallback(com.android.internal.policy.IKeyguardStateCallback)>(r4);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r3, "Remote Exception", $r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.os.IBinder asBinder()
    {
        com.android.server.policy.keyguard.KeyguardServiceWrapper r0;
        com.android.internal.policy.IKeyguardService $r1;
        android.os.IBinder $r2;

        r0 := @this: com.android.server.policy.keyguard.KeyguardServiceWrapper;

        $r1 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: com.android.internal.policy.IKeyguardService mService>;

        $r2 = interfaceinvoke $r1.<com.android.internal.policy.IKeyguardService: android.os.IBinder asBinder()>();

        return $r2;
    }

    public void dismiss(com.android.internal.policy.IKeyguardDismissCallback, java.lang.CharSequence)
    {
        com.android.server.policy.keyguard.KeyguardServiceWrapper r0;
        java.lang.CharSequence r1;
        com.android.internal.policy.IKeyguardService $r2;
        android.os.RemoteException $r3;
        java.lang.String $r4;
        com.android.internal.policy.IKeyguardDismissCallback r5;

        r0 := @this: com.android.server.policy.keyguard.KeyguardServiceWrapper;

        r5 := @parameter0: com.android.internal.policy.IKeyguardDismissCallback;

        r1 := @parameter1: java.lang.CharSequence;

     label1:
        $r2 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: com.android.internal.policy.IKeyguardService mService>;

        interfaceinvoke $r2.<com.android.internal.policy.IKeyguardService: void dismiss(com.android.internal.policy.IKeyguardDismissCallback,java.lang.CharSequence)>(r5, r1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "Remote Exception", $r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void doKeyguardTimeout(android.os.Bundle)
    {
        com.android.server.policy.keyguard.KeyguardServiceWrapper r0;
        com.android.internal.policy.IKeyguardService $r1;
        android.os.RemoteException $r2;
        java.lang.String $r3;
        android.os.Bundle r4;

        r0 := @this: com.android.server.policy.keyguard.KeyguardServiceWrapper;

        r4 := @parameter0: android.os.Bundle;

     label1:
        $r1 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: com.android.internal.policy.IKeyguardService mService>;

        interfaceinvoke $r1.<com.android.internal.policy.IKeyguardService: void doKeyguardTimeout(android.os.Bundle)>(r4);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r3, "Remote Exception", $r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void dump(java.lang.String, java.io.PrintWriter)
    {
        com.android.server.policy.keyguard.KeyguardServiceWrapper r0;
        java.lang.String r1;
        java.io.PrintWriter r2;
        com.android.server.policy.keyguard.KeyguardStateMonitor $r3;

        r0 := @this: com.android.server.policy.keyguard.KeyguardServiceWrapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.PrintWriter;

        $r3 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: com.android.server.policy.keyguard.KeyguardStateMonitor mKeyguardStateMonitor>;

        virtualinvoke $r3.<com.android.server.policy.keyguard.KeyguardStateMonitor: void dump(java.lang.String,java.io.PrintWriter)>(r1, r2);

        return;
    }

    public boolean hasLockscreenWallpaper()
    {
        com.android.server.policy.keyguard.KeyguardServiceWrapper r0;
        com.android.server.policy.keyguard.KeyguardStateMonitor $r1;
        boolean $z0;

        r0 := @this: com.android.server.policy.keyguard.KeyguardServiceWrapper;

        $r1 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: com.android.server.policy.keyguard.KeyguardStateMonitor mKeyguardStateMonitor>;

        $z0 = virtualinvoke $r1.<com.android.server.policy.keyguard.KeyguardStateMonitor: boolean hasLockscreenWallpaper()>();

        return $z0;
    }

    public boolean isInputRestricted()
    {
        com.android.server.policy.keyguard.KeyguardServiceWrapper r0;
        com.android.server.policy.keyguard.KeyguardStateMonitor $r1;
        boolean $z0;

        r0 := @this: com.android.server.policy.keyguard.KeyguardServiceWrapper;

        $r1 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: com.android.server.policy.keyguard.KeyguardStateMonitor mKeyguardStateMonitor>;

        $z0 = virtualinvoke $r1.<com.android.server.policy.keyguard.KeyguardStateMonitor: boolean isInputRestricted()>();

        return $z0;
    }

    public boolean isSecure(int)
    {
        com.android.server.policy.keyguard.KeyguardServiceWrapper r0;
        int i0;
        com.android.server.policy.keyguard.KeyguardStateMonitor $r1;
        boolean $z0;

        r0 := @this: com.android.server.policy.keyguard.KeyguardServiceWrapper;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: com.android.server.policy.keyguard.KeyguardStateMonitor mKeyguardStateMonitor>;

        $z0 = virtualinvoke $r1.<com.android.server.policy.keyguard.KeyguardStateMonitor: boolean isSecure(int)>(i0);

        return $z0;
    }

    public boolean isShowing()
    {
        com.android.server.policy.keyguard.KeyguardServiceWrapper r0;
        com.android.server.policy.keyguard.KeyguardStateMonitor $r1;
        boolean $z0;

        r0 := @this: com.android.server.policy.keyguard.KeyguardServiceWrapper;

        $r1 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: com.android.server.policy.keyguard.KeyguardStateMonitor mKeyguardStateMonitor>;

        $z0 = virtualinvoke $r1.<com.android.server.policy.keyguard.KeyguardStateMonitor: boolean isShowing()>();

        return $z0;
    }

    public boolean isTrusted()
    {
        com.android.server.policy.keyguard.KeyguardServiceWrapper r0;
        com.android.server.policy.keyguard.KeyguardStateMonitor $r1;
        boolean $z0;

        r0 := @this: com.android.server.policy.keyguard.KeyguardServiceWrapper;

        $r1 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: com.android.server.policy.keyguard.KeyguardStateMonitor mKeyguardStateMonitor>;

        $z0 = virtualinvoke $r1.<com.android.server.policy.keyguard.KeyguardStateMonitor: boolean isTrusted()>();

        return $z0;
    }

    public void onBootCompleted()
    {
        com.android.server.policy.keyguard.KeyguardServiceWrapper r0;
        com.android.internal.policy.IKeyguardService $r2;
        android.os.RemoteException $r3;
        java.lang.String $r4;

        r0 := @this: com.android.server.policy.keyguard.KeyguardServiceWrapper;

     label1:
        $r2 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: com.android.internal.policy.IKeyguardService mService>;

        interfaceinvoke $r2.<com.android.internal.policy.IKeyguardService: void onBootCompleted()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "Remote Exception", $r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onDreamingStarted()
    {
        com.android.server.policy.keyguard.KeyguardServiceWrapper r0;
        com.android.internal.policy.IKeyguardService $r2;
        android.os.RemoteException $r3;
        java.lang.String $r4;

        r0 := @this: com.android.server.policy.keyguard.KeyguardServiceWrapper;

     label1:
        $r2 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: com.android.internal.policy.IKeyguardService mService>;

        interfaceinvoke $r2.<com.android.internal.policy.IKeyguardService: void onDreamingStarted()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "Remote Exception", $r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onDreamingStopped()
    {
        com.android.server.policy.keyguard.KeyguardServiceWrapper r0;
        com.android.internal.policy.IKeyguardService $r2;
        android.os.RemoteException $r3;
        java.lang.String $r4;

        r0 := @this: com.android.server.policy.keyguard.KeyguardServiceWrapper;

     label1:
        $r2 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: com.android.internal.policy.IKeyguardService mService>;

        interfaceinvoke $r2.<com.android.internal.policy.IKeyguardService: void onDreamingStopped()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "Remote Exception", $r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onFinishedGoingToSleep(int, boolean)
    {
        com.android.server.policy.keyguard.KeyguardServiceWrapper r0;
        int i0;
        boolean z0;
        com.android.internal.policy.IKeyguardService $r2;
        android.os.RemoteException $r3;
        java.lang.String $r4;

        r0 := @this: com.android.server.policy.keyguard.KeyguardServiceWrapper;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

     label1:
        $r2 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: com.android.internal.policy.IKeyguardService mService>;

        interfaceinvoke $r2.<com.android.internal.policy.IKeyguardService: void onFinishedGoingToSleep(int,boolean)>(i0, z0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "Remote Exception", $r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onFinishedWakingUp()
    {
        com.android.server.policy.keyguard.KeyguardServiceWrapper r0;
        com.android.internal.policy.IKeyguardService $r2;
        android.os.RemoteException $r3;
        java.lang.String $r4;

        r0 := @this: com.android.server.policy.keyguard.KeyguardServiceWrapper;

     label1:
        $r2 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: com.android.internal.policy.IKeyguardService mService>;

        interfaceinvoke $r2.<com.android.internal.policy.IKeyguardService: void onFinishedWakingUp()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "Remote Exception", $r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onScreenTurnedOff()
    {
        com.android.server.policy.keyguard.KeyguardServiceWrapper r0;
        com.android.internal.policy.IKeyguardService $r2;
        android.os.RemoteException $r3;
        java.lang.String $r4;

        r0 := @this: com.android.server.policy.keyguard.KeyguardServiceWrapper;

     label1:
        $r2 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: com.android.internal.policy.IKeyguardService mService>;

        interfaceinvoke $r2.<com.android.internal.policy.IKeyguardService: void onScreenTurnedOff()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "Remote Exception", $r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onScreenTurnedOn()
    {
        com.android.server.policy.keyguard.KeyguardServiceWrapper r0;
        com.android.internal.policy.IKeyguardService $r2;
        android.os.RemoteException $r3;
        java.lang.String $r4;

        r0 := @this: com.android.server.policy.keyguard.KeyguardServiceWrapper;

     label1:
        $r2 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: com.android.internal.policy.IKeyguardService mService>;

        interfaceinvoke $r2.<com.android.internal.policy.IKeyguardService: void onScreenTurnedOn()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "Remote Exception", $r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onScreenTurningOff()
    {
        com.android.server.policy.keyguard.KeyguardServiceWrapper r0;
        com.android.internal.policy.IKeyguardService $r2;
        android.os.RemoteException $r3;
        java.lang.String $r4;

        r0 := @this: com.android.server.policy.keyguard.KeyguardServiceWrapper;

     label1:
        $r2 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: com.android.internal.policy.IKeyguardService mService>;

        interfaceinvoke $r2.<com.android.internal.policy.IKeyguardService: void onScreenTurningOff()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "Remote Exception", $r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onScreenTurningOn(com.android.internal.policy.IKeyguardDrawnCallback)
    {
        com.android.server.policy.keyguard.KeyguardServiceWrapper r0;
        com.android.internal.policy.IKeyguardService $r1;
        android.os.RemoteException $r2;
        java.lang.String $r3;
        com.android.internal.policy.IKeyguardDrawnCallback r4;

        r0 := @this: com.android.server.policy.keyguard.KeyguardServiceWrapper;

        r4 := @parameter0: com.android.internal.policy.IKeyguardDrawnCallback;

     label1:
        $r1 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: com.android.internal.policy.IKeyguardService mService>;

        interfaceinvoke $r1.<com.android.internal.policy.IKeyguardService: void onScreenTurningOn(com.android.internal.policy.IKeyguardDrawnCallback)>(r4);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r3, "Remote Exception", $r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onShortPowerPressedGoHome()
    {
        com.android.server.policy.keyguard.KeyguardServiceWrapper r0;
        com.android.internal.policy.IKeyguardService $r2;
        android.os.RemoteException $r3;
        java.lang.String $r4;

        r0 := @this: com.android.server.policy.keyguard.KeyguardServiceWrapper;

     label1:
        $r2 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: com.android.internal.policy.IKeyguardService mService>;

        interfaceinvoke $r2.<com.android.internal.policy.IKeyguardService: void onShortPowerPressedGoHome()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "Remote Exception", $r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onStartedGoingToSleep(int)
    {
        com.android.server.policy.keyguard.KeyguardServiceWrapper r0;
        int i0;
        com.android.internal.policy.IKeyguardService $r2;
        android.os.RemoteException $r3;
        java.lang.String $r4;

        r0 := @this: com.android.server.policy.keyguard.KeyguardServiceWrapper;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: com.android.internal.policy.IKeyguardService mService>;

        interfaceinvoke $r2.<com.android.internal.policy.IKeyguardService: void onStartedGoingToSleep(int)>(i0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "Remote Exception", $r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onStartedWakingUp()
    {
        com.android.server.policy.keyguard.KeyguardServiceWrapper r0;
        com.android.internal.policy.IKeyguardService $r2;
        android.os.RemoteException $r3;
        java.lang.String $r4;

        r0 := @this: com.android.server.policy.keyguard.KeyguardServiceWrapper;

     label1:
        $r2 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: com.android.internal.policy.IKeyguardService mService>;

        interfaceinvoke $r2.<com.android.internal.policy.IKeyguardService: void onStartedWakingUp()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "Remote Exception", $r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onSystemReady()
    {
        com.android.server.policy.keyguard.KeyguardServiceWrapper r0;
        com.android.internal.policy.IKeyguardService $r2;
        android.os.RemoteException $r3;
        java.lang.String $r4;

        r0 := @this: com.android.server.policy.keyguard.KeyguardServiceWrapper;

     label1:
        $r2 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: com.android.internal.policy.IKeyguardService mService>;

        interfaceinvoke $r2.<com.android.internal.policy.IKeyguardService: void onSystemReady()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "Remote Exception", $r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setCurrentUser(int)
    {
        com.android.server.policy.keyguard.KeyguardServiceWrapper r0;
        int i0;
        com.android.server.policy.keyguard.KeyguardStateMonitor $r2;
        com.android.internal.policy.IKeyguardService $r3;
        android.os.RemoteException $r4;
        java.lang.String $r5;

        r0 := @this: com.android.server.policy.keyguard.KeyguardServiceWrapper;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: com.android.server.policy.keyguard.KeyguardStateMonitor mKeyguardStateMonitor>;

        virtualinvoke $r2.<com.android.server.policy.keyguard.KeyguardStateMonitor: void setCurrentUser(int)>(i0);

     label1:
        $r3 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: com.android.internal.policy.IKeyguardService mService>;

        interfaceinvoke $r3.<com.android.internal.policy.IKeyguardService: void setCurrentUser(int)>(i0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, "Remote Exception", $r4);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setKeyguardEnabled(boolean)
    {
        com.android.server.policy.keyguard.KeyguardServiceWrapper r0;
        boolean z0;
        com.android.internal.policy.IKeyguardService $r2;
        android.os.RemoteException $r3;
        java.lang.String $r4;

        r0 := @this: com.android.server.policy.keyguard.KeyguardServiceWrapper;

        z0 := @parameter0: boolean;

     label1:
        $r2 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: com.android.internal.policy.IKeyguardService mService>;

        interfaceinvoke $r2.<com.android.internal.policy.IKeyguardService: void setKeyguardEnabled(boolean)>(z0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "Remote Exception", $r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setOccluded(boolean, boolean)
    {
        com.android.server.policy.keyguard.KeyguardServiceWrapper r0;
        boolean z0, z1;
        com.android.internal.policy.IKeyguardService $r2;
        android.os.RemoteException $r3;
        java.lang.String $r4;

        r0 := @this: com.android.server.policy.keyguard.KeyguardServiceWrapper;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

     label1:
        $r2 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: com.android.internal.policy.IKeyguardService mService>;

        interfaceinvoke $r2.<com.android.internal.policy.IKeyguardService: void setOccluded(boolean,boolean)>(z0, z1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "Remote Exception", $r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setSwitchingUser(boolean)
    {
        com.android.server.policy.keyguard.KeyguardServiceWrapper r0;
        boolean z0;
        com.android.internal.policy.IKeyguardService $r2;
        android.os.RemoteException $r3;
        java.lang.String $r4;

        r0 := @this: com.android.server.policy.keyguard.KeyguardServiceWrapper;

        z0 := @parameter0: boolean;

     label1:
        $r2 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: com.android.internal.policy.IKeyguardService mService>;

        interfaceinvoke $r2.<com.android.internal.policy.IKeyguardService: void setSwitchingUser(boolean)>(z0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "Remote Exception", $r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void startKeyguardExitAnimation(long, long)
    {
        com.android.server.policy.keyguard.KeyguardServiceWrapper r0;
        long l0, l1;
        com.android.internal.policy.IKeyguardService $r2;
        android.os.RemoteException $r3;
        java.lang.String $r4;

        r0 := @this: com.android.server.policy.keyguard.KeyguardServiceWrapper;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

     label1:
        $r2 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: com.android.internal.policy.IKeyguardService mService>;

        interfaceinvoke $r2.<com.android.internal.policy.IKeyguardService: void startKeyguardExitAnimation(long,long)>(l0, l1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "Remote Exception", $r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void verifyUnlock(com.android.internal.policy.IKeyguardExitCallback)
    {
        com.android.server.policy.keyguard.KeyguardServiceWrapper r0;
        com.android.internal.policy.IKeyguardService $r1;
        android.os.RemoteException $r2;
        java.lang.String $r3;
        com.android.internal.policy.IKeyguardExitCallback r4;

        r0 := @this: com.android.server.policy.keyguard.KeyguardServiceWrapper;

        r4 := @parameter0: com.android.internal.policy.IKeyguardExitCallback;

     label1:
        $r1 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: com.android.internal.policy.IKeyguardService mService>;

        interfaceinvoke $r1.<com.android.internal.policy.IKeyguardService: void verifyUnlock(com.android.internal.policy.IKeyguardExitCallback)>(r4);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = r0.<com.android.server.policy.keyguard.KeyguardServiceWrapper: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r3, "Remote Exception", $r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
