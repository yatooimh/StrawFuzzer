public class com.android.server.power.Notifier extends java.lang.Object
{
    private static final int[] CHARGING_VIBRATION_AMPLITUDE;
    private static final android.os.VibrationEffect CHARGING_VIBRATION_EFFECT;
    private static final long[] CHARGING_VIBRATION_TIME;
    private static final boolean DEBUG;
    private static final int INTERACTIVE_STATE_ASLEEP;
    private static final int INTERACTIVE_STATE_AWAKE;
    private static final int INTERACTIVE_STATE_UNKNOWN;
    private static final int MSG_BROADCAST;
    private static final int MSG_PROFILE_TIMED_OUT;
    private static final int MSG_USER_ACTIVITY;
    private static final int MSG_WIRED_CHARGING_STARTED;
    private static final int MSG_WIRELESS_CHARGING_STARTED;
    private static final java.lang.String TAG;
    private static final android.media.AudioAttributes VIBRATION_ATTRIBUTES;
    private final android.app.ActivityManagerInternal mActivityManagerInternal;
    private final android.app.AppOpsManager mAppOps;
    private final com.android.internal.app.IBatteryStats mBatteryStats;
    private boolean mBroadcastInProgress;
    private long mBroadcastStartTime;
    private int mBroadcastedInteractiveState;
    private final android.content.Context mContext;
    private final android.content.BroadcastReceiver mGoToSleepBroadcastDone;
    private final com.android.server.power.Notifier$NotifierHandler mHandler;
    private final android.hardware.input.InputManagerInternal mInputManagerInternal;
    private final com.android.server.inputmethod.InputMethodManagerInternal mInputMethodManagerInternal;
    private boolean mInteractive;
    private int mInteractiveChangeReason;
    private long mInteractiveChangeStartTime;
    private boolean mInteractiveChanging;
    private final java.lang.Object mLock;
    private boolean mPendingGoToSleepBroadcast;
    private int mPendingInteractiveState;
    private boolean mPendingWakeUpBroadcast;
    private final com.android.server.policy.WindowManagerPolicy mPolicy;
    private final android.content.Intent mScreenOffIntent;
    private final android.content.Intent mScreenOnIntent;
    private final boolean mShowWirelessChargingAnimationConfig;
    private final com.android.server.statusbar.StatusBarManagerInternal mStatusBarManagerInternal;
    private final com.android.server.power.SuspendBlocker mSuspendBlocker;
    private final boolean mSuspendWhenScreenOffDueToProximityConfig;
    private final android.app.trust.TrustManager mTrustManager;
    private boolean mUserActivityPending;
    private final android.os.Vibrator mVibrator;
    private final com.android.server.power.WakeLockLog mWakeLockLog;
    private final android.content.BroadcastReceiver mWakeUpBroadcastDone;

    static void <clinit>()
    {
        long[] r0;
        int[] r1;
        android.os.VibrationEffect $r2;
        android.media.AudioAttributes$Builder $r3, $r4;
        android.media.AudioAttributes $r5;

        <com.android.server.power.Notifier: java.lang.String TAG> = "PowerManagerNotifier";

        <com.android.server.power.Notifier: int MSG_WIRELESS_CHARGING_STARTED> = 3;

        <com.android.server.power.Notifier: int MSG_WIRED_CHARGING_STARTED> = 6;

        <com.android.server.power.Notifier: int MSG_USER_ACTIVITY> = 1;

        <com.android.server.power.Notifier: int MSG_PROFILE_TIMED_OUT> = 5;

        <com.android.server.power.Notifier: int MSG_BROADCAST> = 2;

        <com.android.server.power.Notifier: int INTERACTIVE_STATE_UNKNOWN> = 0;

        <com.android.server.power.Notifier: int INTERACTIVE_STATE_AWAKE> = 1;

        <com.android.server.power.Notifier: int INTERACTIVE_STATE_ASLEEP> = 2;

        <com.android.server.power.Notifier: boolean DEBUG> = 0;

        r0 = newarray (long)[16];

        r0[0] = 40L;

        r0[1] = 40L;

        r0[2] = 40L;

        r0[3] = 40L;

        r0[4] = 40L;

        r0[5] = 40L;

        r0[6] = 40L;

        r0[7] = 40L;

        r0[8] = 40L;

        r0[9] = 40L;

        r0[10] = 40L;

        r0[11] = 40L;

        r0[12] = 40L;

        r0[13] = 40L;

        r0[14] = 40L;

        r0[15] = 40L;

        <com.android.server.power.Notifier: long[] CHARGING_VIBRATION_TIME> = r0;

        r1 = newarray (int)[16];

        r1[0] = 1;

        r1[1] = 4;

        r1[2] = 11;

        r1[3] = 25;

        r1[4] = 44;

        r1[5] = 67;

        r1[6] = 91;

        r1[7] = 114;

        r1[8] = 123;

        r1[9] = 103;

        r1[10] = 79;

        r1[11] = 55;

        r1[12] = 34;

        r1[13] = 17;

        r1[14] = 7;

        r1[15] = 2;

        <com.android.server.power.Notifier: int[] CHARGING_VIBRATION_AMPLITUDE> = r1;

        $r2 = staticinvoke <android.os.VibrationEffect: android.os.VibrationEffect createWaveform(long[],int[],int)>(r0, r1, -1);

        <com.android.server.power.Notifier: android.os.VibrationEffect CHARGING_VIBRATION_EFFECT> = $r2;

        $r3 = new android.media.AudioAttributes$Builder;

        specialinvoke $r3.<android.media.AudioAttributes$Builder: void <init>()>();

        $r4 = virtualinvoke $r3.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setContentType(int)>(4);

        $r5 = virtualinvoke $r4.<android.media.AudioAttributes$Builder: android.media.AudioAttributes build()>();

        <com.android.server.power.Notifier: android.media.AudioAttributes VIBRATION_ATTRIBUTES> = $r5;

        return;
    }

    public void <init>(android.os.Looper, android.content.Context, com.android.internal.app.IBatteryStats, com.android.server.power.SuspendBlocker, com.android.server.policy.WindowManagerPolicy)
    {
        com.android.server.power.Notifier r0;
        android.content.Context r1, $r18, $r21;
        com.android.internal.app.IBatteryStats r2, $r32;
        com.android.server.power.SuspendBlocker r3;
        com.android.server.policy.WindowManagerPolicy r4;
        java.lang.Object $r5, $r8, $r10, $r12, $r14, $r16, $r19, $r22;
        com.android.server.power.Notifier$6 $r6;
        com.android.server.power.Notifier$7 $r7;
        android.app.AppOpsManager $r9;
        android.app.ActivityManagerInternal $r11;
        android.hardware.input.InputManagerInternal $r13;
        com.android.server.inputmethod.InputMethodManagerInternal $r15;
        com.android.server.statusbar.StatusBarManagerInternal $r17;
        android.app.trust.TrustManager $r20;
        android.os.Vibrator $r23;
        com.android.server.power.Notifier$NotifierHandler $r24;
        android.content.Intent $r25, $r27;
        android.content.res.Resources $r29, $r30;
        boolean $z0, $z1;
        com.android.server.power.WakeLockLog $r31;
        android.os.RemoteException $r33;
        android.os.Looper r34;

        r0 := @this: com.android.server.power.Notifier;

        r34 := @parameter0: android.os.Looper;

        r1 := @parameter1: android.content.Context;

        r2 := @parameter2: com.android.internal.app.IBatteryStats;

        r3 := @parameter3: com.android.server.power.SuspendBlocker;

        r4 := @parameter4: com.android.server.policy.WindowManagerPolicy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        r0.<com.android.server.power.Notifier: java.lang.Object mLock> = $r5;

        r0.<com.android.server.power.Notifier: boolean mInteractive> = 1;

        $r6 = new com.android.server.power.Notifier$6;

        specialinvoke $r6.<com.android.server.power.Notifier$6: void <init>(com.android.server.power.Notifier)>(r0);

        r0.<com.android.server.power.Notifier: android.content.BroadcastReceiver mWakeUpBroadcastDone> = $r6;

        $r7 = new com.android.server.power.Notifier$7;

        specialinvoke $r7.<com.android.server.power.Notifier$7: void <init>(com.android.server.power.Notifier)>(r0);

        r0.<com.android.server.power.Notifier: android.content.BroadcastReceiver mGoToSleepBroadcastDone> = $r7;

        r0.<com.android.server.power.Notifier: android.content.Context mContext> = r1;

        r0.<com.android.server.power.Notifier: com.android.internal.app.IBatteryStats mBatteryStats> = r2;

        $r8 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/AppOpsManager;");

        $r9 = (android.app.AppOpsManager) $r8;

        r0.<com.android.server.power.Notifier: android.app.AppOpsManager mAppOps> = $r9;

        r0.<com.android.server.power.Notifier: com.android.server.power.SuspendBlocker mSuspendBlocker> = r3;

        r0.<com.android.server.power.Notifier: com.android.server.policy.WindowManagerPolicy mPolicy> = r4;

        $r10 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/app/ActivityManagerInternal;");

        $r11 = (android.app.ActivityManagerInternal) $r10;

        r0.<com.android.server.power.Notifier: android.app.ActivityManagerInternal mActivityManagerInternal> = $r11;

        $r12 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/hardware/input/InputManagerInternal;");

        $r13 = (android.hardware.input.InputManagerInternal) $r12;

        r0.<com.android.server.power.Notifier: android.hardware.input.InputManagerInternal mInputManagerInternal> = $r13;

        $r14 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/inputmethod/InputMethodManagerInternal;");

        $r15 = (com.android.server.inputmethod.InputMethodManagerInternal) $r14;

        r0.<com.android.server.power.Notifier: com.android.server.inputmethod.InputMethodManagerInternal mInputMethodManagerInternal> = $r15;

        $r16 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/statusbar/StatusBarManagerInternal;");

        $r17 = (com.android.server.statusbar.StatusBarManagerInternal) $r16;

        r0.<com.android.server.power.Notifier: com.android.server.statusbar.StatusBarManagerInternal mStatusBarManagerInternal> = $r17;

        $r18 = r0.<com.android.server.power.Notifier: android.content.Context mContext>;

        $r19 = virtualinvoke $r18.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/trust/TrustManager;");

        $r20 = (android.app.trust.TrustManager) $r19;

        r0.<com.android.server.power.Notifier: android.app.trust.TrustManager mTrustManager> = $r20;

        $r21 = r0.<com.android.server.power.Notifier: android.content.Context mContext>;

        $r22 = virtualinvoke $r21.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/os/Vibrator;");

        $r23 = (android.os.Vibrator) $r22;

        r0.<com.android.server.power.Notifier: android.os.Vibrator mVibrator> = $r23;

        $r24 = new com.android.server.power.Notifier$NotifierHandler;

        specialinvoke $r24.<com.android.server.power.Notifier$NotifierHandler: void <init>(com.android.server.power.Notifier,android.os.Looper)>(r0, r34);

        r0.<com.android.server.power.Notifier: com.android.server.power.Notifier$NotifierHandler mHandler> = $r24;

        $r25 = new android.content.Intent;

        specialinvoke $r25.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.SCREEN_ON");

        r0.<com.android.server.power.Notifier: android.content.Intent mScreenOnIntent> = $r25;

        virtualinvoke $r25.<android.content.Intent: android.content.Intent addFlags(int)>(1344274432);

        $r27 = new android.content.Intent;

        specialinvoke $r27.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.SCREEN_OFF");

        r0.<com.android.server.power.Notifier: android.content.Intent mScreenOffIntent> = $r27;

        virtualinvoke $r27.<android.content.Intent: android.content.Intent addFlags(int)>(1344274432);

        $r29 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $z0 = virtualinvoke $r29.<android.content.res.Resources: boolean getBoolean(int)>(17891555);

        r0.<com.android.server.power.Notifier: boolean mSuspendWhenScreenOffDueToProximityConfig> = $z0;

        $r30 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $z1 = virtualinvoke $r30.<android.content.res.Resources: boolean getBoolean(int)>(17891521);

        r0.<com.android.server.power.Notifier: boolean mShowWirelessChargingAnimationConfig> = $z1;

        $r31 = new com.android.server.power.WakeLockLog;

        specialinvoke $r31.<com.android.server.power.WakeLockLog: void <init>()>();

        r0.<com.android.server.power.Notifier: com.android.server.power.WakeLockLog mWakeLockLog> = $r31;

     label1:
        $r32 = r0.<com.android.server.power.Notifier: com.android.internal.app.IBatteryStats mBatteryStats>;

        interfaceinvoke $r32.<com.android.internal.app.IBatteryStats: void noteInteractive(boolean)>(1);

     label2:
        goto label4;

     label3:
        $r33 := @caughtexception;

     label4:
        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int)>(33, 1);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    static android.app.ActivityManagerInternal access$000(com.android.server.power.Notifier)
    {
        com.android.server.power.Notifier r0;
        android.app.ActivityManagerInternal $r1;

        r0 := @parameter0: com.android.server.power.Notifier;

        $r1 = r0.<com.android.server.power.Notifier: android.app.ActivityManagerInternal mActivityManagerInternal>;

        return $r1;
    }

    static int access$100(com.android.server.power.Notifier)
    {
        com.android.server.power.Notifier r0;
        int $i0;

        r0 := @parameter0: com.android.server.power.Notifier;

        $i0 = r0.<com.android.server.power.Notifier: int mInteractiveChangeReason>;

        return $i0;
    }

    static int access$200(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = staticinvoke <com.android.server.power.Notifier: int translateOnReason(int)>(i0);

        return $i1;
    }

    static com.android.server.policy.WindowManagerPolicy access$300(com.android.server.power.Notifier)
    {
        com.android.server.power.Notifier r0;
        com.android.server.policy.WindowManagerPolicy $r1;

        r0 := @parameter0: com.android.server.power.Notifier;

        $r1 = r0.<com.android.server.power.Notifier: com.android.server.policy.WindowManagerPolicy mPolicy>;

        return $r1;
    }

    static long access$400(com.android.server.power.Notifier)
    {
        com.android.server.power.Notifier r0;
        long $l0;

        r0 := @parameter0: com.android.server.power.Notifier;

        $l0 = r0.<com.android.server.power.Notifier: long mBroadcastStartTime>;

        return $l0;
    }

    static void access$500(com.android.server.power.Notifier)
    {
        com.android.server.power.Notifier r0;

        r0 := @parameter0: com.android.server.power.Notifier;

        specialinvoke r0.<com.android.server.power.Notifier: void sendNextBroadcast()>();

        return;
    }

    static void access$600(com.android.server.power.Notifier)
    {
        com.android.server.power.Notifier r0;

        r0 := @parameter0: com.android.server.power.Notifier;

        specialinvoke r0.<com.android.server.power.Notifier: void sendUserActivity()>();

        return;
    }

    static void access$700(com.android.server.power.Notifier, int, int)
    {
        com.android.server.power.Notifier r0;
        int i0, i1;

        r0 := @parameter0: com.android.server.power.Notifier;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.server.power.Notifier: void showWirelessChargingStarted(int,int)>(i0, i1);

        return;
    }

    static void access$800(com.android.server.power.Notifier, int)
    {
        com.android.server.power.Notifier r0;
        int i0;

        r0 := @parameter0: com.android.server.power.Notifier;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.power.Notifier: void lockProfile(int)>(i0);

        return;
    }

    static void access$900(com.android.server.power.Notifier, int)
    {
        com.android.server.power.Notifier r0;
        int i0;

        r0 := @parameter0: com.android.server.power.Notifier;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.power.Notifier: void showWiredChargingStarted(int)>(i0);

        return;
    }

    private void finishPendingBroadcastLocked()
    {
        com.android.server.power.Notifier r0;
        com.android.server.power.SuspendBlocker $r1;

        r0 := @this: com.android.server.power.Notifier;

        r0.<com.android.server.power.Notifier: boolean mBroadcastInProgress> = 0;

        $r1 = r0.<com.android.server.power.Notifier: com.android.server.power.SuspendBlocker mSuspendBlocker>;

        interfaceinvoke $r1.<com.android.server.power.SuspendBlocker: void release()>();

        return;
    }

    private int getBatteryStatsWakeLockMonitorType(int)
    {
        com.android.server.power.Notifier r0;
        boolean $z0;
        int i0, i1;

        r0 := @this: com.android.server.power.Notifier;

        i0 := @parameter0: int;

        i1 = 65535 & i0;

        if i1 == 1 goto label5;

        if i1 == 6 goto label4;

        if i1 == 10 goto label4;

        if i1 == 32 goto label2;

        if i1 == 128 goto label1;

        return -1;

     label1:
        return 18;

     label2:
        $z0 = r0.<com.android.server.power.Notifier: boolean mSuspendWhenScreenOffDueToProximityConfig>;

        if $z0 == 0 goto label3;

        return -1;

     label3:
        return 0;

     label4:
        return 1;

     label5:
        return 0;
    }

    private void handleEarlyInteractiveChange()
    {
        com.android.server.power.Notifier r0;
        java.lang.Object r1;
        int i0, $i1;
        boolean $z0;
        java.lang.Throwable $r2;
        com.android.server.power.Notifier$NotifierHandler r3, r5;
        com.android.server.power.Notifier$2 r4;
        com.android.server.power.Notifier$3 r6;

        r0 := @this: com.android.server.power.Notifier;

        r1 = r0.<com.android.server.power.Notifier: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z0 = r0.<com.android.server.power.Notifier: boolean mInteractive>;

        if $z0 == 0 goto label3;

        r3 = r0.<com.android.server.power.Notifier: com.android.server.power.Notifier$NotifierHandler mHandler>;

        r4 = new com.android.server.power.Notifier$2;

        specialinvoke r4.<com.android.server.power.Notifier$2: void <init>(com.android.server.power.Notifier)>(r0);

        virtualinvoke r3.<com.android.server.power.Notifier$NotifierHandler: boolean post(java.lang.Runnable)>(r4);

        r0.<com.android.server.power.Notifier: int mPendingInteractiveState> = 1;

        r0.<com.android.server.power.Notifier: boolean mPendingWakeUpBroadcast> = 1;

        specialinvoke r0.<com.android.server.power.Notifier: void updatePendingBroadcastLocked()>();

     label2:
        goto label4;

     label3:
        $i1 = r0.<com.android.server.power.Notifier: int mInteractiveChangeReason>;

        i0 = staticinvoke <com.android.server.power.Notifier: int translateOffReason(int)>($i1);

        r5 = r0.<com.android.server.power.Notifier: com.android.server.power.Notifier$NotifierHandler mHandler>;

        r6 = new com.android.server.power.Notifier$3;

        specialinvoke r6.<com.android.server.power.Notifier$3: void <init>(com.android.server.power.Notifier,int)>(r0, i0);

        virtualinvoke r5.<com.android.server.power.Notifier$NotifierHandler: boolean post(java.lang.Runnable)>(r6);

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r2 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private void handleLateInteractiveChange()
    {
        com.android.server.power.Notifier r0;
        java.lang.Object r1;
        int i0, $i4, $i5, i6, i7;
        long $l1, $l2, $l3;
        boolean $z0, $z1;
        com.android.server.power.Notifier$NotifierHandler $r2, r4, r6;
        java.lang.Throwable $r3;
        com.android.server.power.Notifier$4 r5;
        com.android.server.power.Notifier$5 r7;

        r0 := @this: com.android.server.power.Notifier;

        r1 = r0.<com.android.server.power.Notifier: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l2 = r0.<com.android.server.power.Notifier: long mInteractiveChangeStartTime>;

        $l3 = $l1 - $l2;

        i0 = (int) $l3;

        $z0 = r0.<com.android.server.power.Notifier: boolean mInteractive>;

        if $z0 == 0 goto label3;

        $i5 = r0.<com.android.server.power.Notifier: int mInteractiveChangeReason>;

        i6 = staticinvoke <com.android.server.power.Notifier: int translateOnReason(int)>($i5);

        r4 = r0.<com.android.server.power.Notifier: com.android.server.power.Notifier$NotifierHandler mHandler>;

        r5 = new com.android.server.power.Notifier$4;

        specialinvoke r5.<com.android.server.power.Notifier$4: void <init>(com.android.server.power.Notifier,int,int)>(r0, i6, i0);

        virtualinvoke r4.<com.android.server.power.Notifier$NotifierHandler: boolean post(java.lang.Runnable)>(r5);

     label2:
        goto label5;

     label3:
        $z1 = r0.<com.android.server.power.Notifier: boolean mUserActivityPending>;

        if $z1 == 0 goto label4;

        r0.<com.android.server.power.Notifier: boolean mUserActivityPending> = 0;

        $r2 = r0.<com.android.server.power.Notifier: com.android.server.power.Notifier$NotifierHandler mHandler>;

        virtualinvoke $r2.<com.android.server.power.Notifier$NotifierHandler: void removeMessages(int)>(1);

     label4:
        $i4 = r0.<com.android.server.power.Notifier: int mInteractiveChangeReason>;

        i7 = staticinvoke <com.android.server.power.Notifier: int translateOffReason(int)>($i4);

        r6 = r0.<com.android.server.power.Notifier: com.android.server.power.Notifier$NotifierHandler mHandler>;

        r7 = new com.android.server.power.Notifier$5;

        specialinvoke r7.<com.android.server.power.Notifier$5: void <init>(com.android.server.power.Notifier,int,int)>(r0, i7, i0);

        virtualinvoke r6.<com.android.server.power.Notifier$NotifierHandler: boolean post(java.lang.Runnable)>(r7);

        r0.<com.android.server.power.Notifier: int mPendingInteractiveState> = 2;

        r0.<com.android.server.power.Notifier: boolean mPendingGoToSleepBroadcast> = 1;

        specialinvoke r0.<com.android.server.power.Notifier: void updatePendingBroadcastLocked()>();

     label5:
        exitmonitor r1;

     label6:
        return;

     label7:
        $r3 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    private boolean isChargingFeedbackEnabled(int)
    {
        com.android.server.power.Notifier r0;
        android.content.ContentResolver r1, $r4;
        android.content.Context $r2, $r3;
        int $i0, $i1, i2;
        boolean z0, z1, z2;

        r0 := @this: com.android.server.power.Notifier;

        i2 := @parameter0: int;

        $r2 = r0.<com.android.server.power.Notifier: android.content.Context mContext>;

        r1 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        z0 = 1;

        $i0 = staticinvoke <android.provider.Settings$Secure: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>(r1, "charging_sounds_enabled", 1, i2);

        if $i0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        $r3 = r0.<com.android.server.power.Notifier: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i1 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r4, "zen_mode", 1);

        if $i1 != 0 goto label3;

        z2 = 1;

        goto label4;

     label3:
        z2 = 0;

     label4:
        if z1 == 0 goto label5;

        if z2 == 0 goto label5;

        goto label6;

     label5:
        z0 = 0;

     label6:
        return z0;
    }

    private void lockProfile(int)
    {
        com.android.server.power.Notifier r0;
        int i0;
        android.app.trust.TrustManager $r1;

        r0 := @this: com.android.server.power.Notifier;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.power.Notifier: android.app.trust.TrustManager mTrustManager>;

        virtualinvoke $r1.<android.app.trust.TrustManager: void setDeviceLockedForUser(int,boolean)>(i0, 1);

        return;
    }

    private void playChargingStartedFeedback(int, boolean)
    {
        com.android.server.power.Notifier r0;
        boolean z0, $z1, z2;
        android.content.Context $r1, $r3, $r8;
        android.content.ContentResolver $r2, r12;
        int $i0, i1;
        java.lang.StringBuilder $r4;
        java.lang.String $r7, r13, r14;
        android.media.AudioAttributes $r9;
        android.os.VibrationEffect $r10;
        android.os.Vibrator $r11;
        android.net.Uri r16;
        android.media.Ringtone r17;

        r0 := @this: com.android.server.power.Notifier;

        i1 := @parameter0: int;

        z0 := @parameter1: boolean;

        $z1 = specialinvoke r0.<com.android.server.power.Notifier: boolean isChargingFeedbackEnabled(int)>(i1);

        if $z1 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<com.android.server.power.Notifier: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$Secure: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>($r2, "charging_vibration_enabled", 1, i1);

        if $i0 == 0 goto label2;

        z2 = 1;

        goto label3;

     label2:
        z2 = 0;

     label3:
        if z2 == 0 goto label4;

        $r11 = r0.<com.android.server.power.Notifier: android.os.Vibrator mVibrator>;

        $r10 = <com.android.server.power.Notifier: android.os.VibrationEffect CHARGING_VIBRATION_EFFECT>;

        $r9 = <com.android.server.power.Notifier: android.media.AudioAttributes VIBRATION_ATTRIBUTES>;

        virtualinvoke $r11.<android.os.Vibrator: void vibrate(android.os.VibrationEffect,android.media.AudioAttributes)>($r10, $r9);

     label4:
        $r3 = r0.<com.android.server.power.Notifier: android.content.Context mContext>;

        r12 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        if z0 == 0 goto label5;

        r13 = "wireless_charging_started_sound";

        goto label6;

     label5:
        r13 = "charging_started_sound";

     label6:
        r14 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>(r12, r13);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file://");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r16 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r7);

        if r16 == null goto label7;

        $r8 = r0.<com.android.server.power.Notifier: android.content.Context mContext>;

        r17 = staticinvoke <android.media.RingtoneManager: android.media.Ringtone getRingtone(android.content.Context,android.net.Uri)>($r8, r16);

        if r17 == null goto label7;

        virtualinvoke r17.<android.media.Ringtone: void setStreamType(int)>(1);

        virtualinvoke r17.<android.media.Ringtone: void play()>();

     label7:
        return;
    }

    private void sendGoToSleepBroadcast()
    {
        com.android.server.power.Notifier r0;
        android.app.ActivityManagerInternal $r1;
        boolean $z0;
        java.lang.Object[] $r2;
        java.lang.Integer $r3, $r4;
        com.android.server.power.Notifier$NotifierHandler $r5;
        android.content.BroadcastReceiver $r6;
        android.os.UserHandle $r7;
        android.content.Intent $r8;
        android.content.Context $r9;

        r0 := @this: com.android.server.power.Notifier;

        $r1 = r0.<com.android.server.power.Notifier: android.app.ActivityManagerInternal mActivityManagerInternal>;

        $z0 = virtualinvoke $r1.<android.app.ActivityManagerInternal: boolean isSystemReady()>();

        if $z0 == 0 goto label1;

        $r9 = r0.<com.android.server.power.Notifier: android.content.Context mContext>;

        $r8 = r0.<com.android.server.power.Notifier: android.content.Intent mScreenOffIntent>;

        $r7 = <android.os.UserHandle: android.os.UserHandle ALL>;

        $r6 = r0.<com.android.server.power.Notifier: android.content.BroadcastReceiver mGoToSleepBroadcastDone>;

        $r5 = r0.<com.android.server.power.Notifier: com.android.server.power.Notifier$NotifierHandler mHandler>;

        virtualinvoke $r9.<android.content.Context: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>($r8, $r7, null, $r6, $r5, 0, null, null);

        goto label2;

     label1:
        $r2 = newarray (java.lang.Object)[2];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r2[0] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r2[1] = $r4;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(2727, $r2);

        specialinvoke r0.<com.android.server.power.Notifier: void sendNextBroadcast()>();

     label2:
        return;
    }

    private void sendNextBroadcast()
    {
        com.android.server.power.Notifier r0;
        java.lang.Object r1;
        int i0, $i1, $i2, $i4, $i5, $i6;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Throwable $r3;
        long $l7;

        r0 := @this: com.android.server.power.Notifier;

        r1 = r0.<com.android.server.power.Notifier: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $i1 = r0.<com.android.server.power.Notifier: int mBroadcastedInteractiveState>;

        if $i1 != 0 goto label05;

        $i6 = r0.<com.android.server.power.Notifier: int mPendingInteractiveState>;

        if $i6 == 2 goto label03;

        r0.<com.android.server.power.Notifier: boolean mPendingWakeUpBroadcast> = 0;

        r0.<com.android.server.power.Notifier: int mBroadcastedInteractiveState> = 1;

     label02:
        goto label16;

     label03:
        r0.<com.android.server.power.Notifier: boolean mPendingGoToSleepBroadcast> = 0;

        r0.<com.android.server.power.Notifier: int mBroadcastedInteractiveState> = 2;

     label04:
        goto label16;

     label05:
        $i2 = r0.<com.android.server.power.Notifier: int mBroadcastedInteractiveState>;

        if $i2 != 1 goto label11;

        $z2 = r0.<com.android.server.power.Notifier: boolean mPendingWakeUpBroadcast>;

        if $z2 != 0 goto label09;

        $z3 = r0.<com.android.server.power.Notifier: boolean mPendingGoToSleepBroadcast>;

        if $z3 != 0 goto label09;

        $i5 = r0.<com.android.server.power.Notifier: int mPendingInteractiveState>;

        if $i5 != 2 goto label07;

     label06:
        goto label09;

     label07:
        specialinvoke r0.<com.android.server.power.Notifier: void finishPendingBroadcastLocked()>();

        exitmonitor r1;

     label08:
        return;

     label09:
        r0.<com.android.server.power.Notifier: boolean mPendingGoToSleepBroadcast> = 0;

        r0.<com.android.server.power.Notifier: int mBroadcastedInteractiveState> = 2;

     label10:
        goto label16;

     label11:
        $z0 = r0.<com.android.server.power.Notifier: boolean mPendingWakeUpBroadcast>;

        if $z0 != 0 goto label15;

        $z1 = r0.<com.android.server.power.Notifier: boolean mPendingGoToSleepBroadcast>;

        if $z1 != 0 goto label15;

        $i4 = r0.<com.android.server.power.Notifier: int mPendingInteractiveState>;

        if $i4 != 1 goto label13;

     label12:
        goto label15;

     label13:
        specialinvoke r0.<com.android.server.power.Notifier: void finishPendingBroadcastLocked()>();

        exitmonitor r1;

     label14:
        return;

     label15:
        r0.<com.android.server.power.Notifier: boolean mPendingWakeUpBroadcast> = 0;

        r0.<com.android.server.power.Notifier: int mBroadcastedInteractiveState> = 1;

     label16:
        $l7 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.server.power.Notifier: long mBroadcastStartTime> = $l7;

        i0 = r0.<com.android.server.power.Notifier: int mBroadcastedInteractiveState>;

        exitmonitor r1;

     label17:
        staticinvoke <android.util.EventLog: int writeEvent(int,int)>(2725, 1);

        if i0 != 1 goto label18;

        specialinvoke r0.<com.android.server.power.Notifier: void sendWakeUpBroadcast()>();

        goto label19;

     label18:
        specialinvoke r0.<com.android.server.power.Notifier: void sendGoToSleepBroadcast()>();

     label19:
        return;

     label20:
        $r3 := @caughtexception;

     label21:
        exitmonitor r1;

     label22:
        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Throwable from label03 to label04 with label20;
        catch java.lang.Throwable from label05 to label06 with label20;
        catch java.lang.Throwable from label07 to label08 with label20;
        catch java.lang.Throwable from label09 to label10 with label20;
        catch java.lang.Throwable from label11 to label12 with label20;
        catch java.lang.Throwable from label13 to label14 with label20;
        catch java.lang.Throwable from label15 to label16 with label20;
        catch java.lang.Throwable from label16 to label17 with label20;
        catch java.lang.Throwable from label21 to label22 with label20;
    }

    private void sendUserActivity()
    {
        com.android.server.power.Notifier r0;
        java.lang.Object r1, $r4;
        boolean $z0;
        android.content.Context $r3;
        android.telephony.TelephonyManager $r5;
        com.android.server.policy.WindowManagerPolicy $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.server.power.Notifier;

        r1 = r0.<com.android.server.power.Notifier: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z0 = r0.<com.android.server.power.Notifier: boolean mUserActivityPending>;

        if $z0 != 0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        r0.<com.android.server.power.Notifier: boolean mUserActivityPending> = 0;

        exitmonitor r1;

     label4:
        $r3 = r0.<com.android.server.power.Notifier: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/telephony/TelephonyManager;");

        $r5 = (android.telephony.TelephonyManager) $r4;

        virtualinvoke $r5.<android.telephony.TelephonyManager: void notifyUserActivity()>();

        $r6 = r0.<com.android.server.power.Notifier: com.android.server.policy.WindowManagerPolicy mPolicy>;

        interfaceinvoke $r6.<com.android.server.policy.WindowManagerPolicy: void userActivity()>();

        return;

     label5:
        $r7 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    private void sendWakeUpBroadcast()
    {
        com.android.server.power.Notifier r0;
        android.app.ActivityManagerInternal $r1;
        boolean $z0;
        java.lang.Object[] $r2;
        java.lang.Integer $r3, $r4;
        com.android.server.power.Notifier$NotifierHandler $r5;
        android.content.BroadcastReceiver $r6;
        android.os.UserHandle $r7;
        android.content.Intent $r8;
        android.content.Context $r9;

        r0 := @this: com.android.server.power.Notifier;

        $r1 = r0.<com.android.server.power.Notifier: android.app.ActivityManagerInternal mActivityManagerInternal>;

        $z0 = virtualinvoke $r1.<android.app.ActivityManagerInternal: boolean isSystemReady()>();

        if $z0 == 0 goto label1;

        $r9 = r0.<com.android.server.power.Notifier: android.content.Context mContext>;

        $r8 = r0.<com.android.server.power.Notifier: android.content.Intent mScreenOnIntent>;

        $r7 = <android.os.UserHandle: android.os.UserHandle ALL>;

        $r6 = r0.<com.android.server.power.Notifier: android.content.BroadcastReceiver mWakeUpBroadcastDone>;

        $r5 = r0.<com.android.server.power.Notifier: com.android.server.power.Notifier$NotifierHandler mHandler>;

        virtualinvoke $r9.<android.content.Context: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>($r8, $r7, null, $r6, $r5, 0, null, null);

        goto label2;

     label1:
        $r2 = newarray (java.lang.Object)[2];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r2[0] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r2[1] = $r4;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(2727, $r2);

        specialinvoke r0.<com.android.server.power.Notifier: void sendNextBroadcast()>();

     label2:
        return;
    }

    private void showWiredChargingStarted(int)
    {
        com.android.server.power.Notifier r0;
        int i0;
        com.android.server.power.SuspendBlocker $r1;

        r0 := @this: com.android.server.power.Notifier;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.power.Notifier: void playChargingStartedFeedback(int,boolean)>(i0, 0);

        $r1 = r0.<com.android.server.power.Notifier: com.android.server.power.SuspendBlocker mSuspendBlocker>;

        interfaceinvoke $r1.<com.android.server.power.SuspendBlocker: void release()>();

        return;
    }

    private void showWirelessChargingStarted(int, int)
    {
        com.android.server.power.Notifier r0;
        int i0, i1;
        com.android.server.statusbar.StatusBarManagerInternal r1;
        boolean $z0;
        com.android.server.power.SuspendBlocker $r2;

        r0 := @this: com.android.server.power.Notifier;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<com.android.server.power.Notifier: void playChargingStartedFeedback(int,boolean)>(i1, 1);

        $z0 = r0.<com.android.server.power.Notifier: boolean mShowWirelessChargingAnimationConfig>;

        if $z0 == 0 goto label1;

        r1 = r0.<com.android.server.power.Notifier: com.android.server.statusbar.StatusBarManagerInternal mStatusBarManagerInternal>;

        if r1 == null goto label1;

        interfaceinvoke r1.<com.android.server.statusbar.StatusBarManagerInternal: void showChargingAnimation(int)>(i0);

     label1:
        $r2 = r0.<com.android.server.power.Notifier: com.android.server.power.SuspendBlocker mSuspendBlocker>;

        interfaceinvoke $r2.<com.android.server.power.SuspendBlocker: void release()>();

        return;
    }

    private static int translateOffReason(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 1 goto label2;

        if i0 == 2 goto label1;

        if i0 == 9 goto label1;

        return 2;

     label1:
        return 3;

     label2:
        return 1;
    }

    private static int translateOnReason(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label3;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label3;
            case 5: goto label3;
            case 6: goto label3;
            case 7: goto label3;
            case 8: goto label1;
            case 9: goto label3;
            default: goto label1;
        };

     label1:
        return 3;

     label2:
        return 2;

     label3:
        return 1;
    }

    private void updatePendingBroadcastLocked()
    {
        com.android.server.power.Notifier r0;
        int i0, $i1;
        android.os.Message r1;
        boolean $z0, $z1, $z3;
        com.android.server.power.SuspendBlocker $r2;
        com.android.server.power.Notifier$NotifierHandler $r3, $r4;

        r0 := @this: com.android.server.power.Notifier;

        $z0 = r0.<com.android.server.power.Notifier: boolean mBroadcastInProgress>;

        if $z0 != 0 goto label2;

        i0 = r0.<com.android.server.power.Notifier: int mPendingInteractiveState>;

        if i0 == 0 goto label2;

        $z1 = r0.<com.android.server.power.Notifier: boolean mPendingWakeUpBroadcast>;

        if $z1 != 0 goto label1;

        $z3 = r0.<com.android.server.power.Notifier: boolean mPendingGoToSleepBroadcast>;

        if $z3 != 0 goto label1;

        $i1 = r0.<com.android.server.power.Notifier: int mBroadcastedInteractiveState>;

        if i0 == $i1 goto label2;

     label1:
        r0.<com.android.server.power.Notifier: boolean mBroadcastInProgress> = 1;

        $r2 = r0.<com.android.server.power.Notifier: com.android.server.power.SuspendBlocker mSuspendBlocker>;

        interfaceinvoke $r2.<com.android.server.power.SuspendBlocker: void acquire()>();

        $r3 = r0.<com.android.server.power.Notifier: com.android.server.power.Notifier$NotifierHandler mHandler>;

        r1 = virtualinvoke $r3.<com.android.server.power.Notifier$NotifierHandler: android.os.Message obtainMessage(int)>(2);

        virtualinvoke r1.<android.os.Message: void setAsynchronous(boolean)>(1);

        $r4 = r0.<com.android.server.power.Notifier: com.android.server.power.Notifier$NotifierHandler mHandler>;

        virtualinvoke $r4.<com.android.server.power.Notifier$NotifierHandler: boolean sendMessage(android.os.Message)>(r1);

     label2:
        return;
    }

    public void dump(java.io.PrintWriter)
    {
        com.android.server.power.Notifier r0;
        java.io.PrintWriter r1;
        com.android.server.power.WakeLockLog r2;

        r0 := @this: com.android.server.power.Notifier;

        r1 := @parameter0: java.io.PrintWriter;

        r2 = r0.<com.android.server.power.Notifier: com.android.server.power.WakeLockLog mWakeLockLog>;

        if r2 == null goto label1;

        virtualinvoke r2.<com.android.server.power.WakeLockLog: void dump(java.io.PrintWriter)>(r1);

     label1:
        return;
    }

    public void onLongPartialWakeLockFinish(java.lang.String, int, android.os.WorkSource, java.lang.String)
    {
        com.android.server.power.Notifier r0;
        int i0;
        android.os.WorkSource r1;
        java.lang.String r2, r6;
        com.android.internal.app.IBatteryStats $r3, $r4;
        android.os.RemoteException $r5;

        r0 := @this: com.android.server.power.Notifier;

        r6 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: android.os.WorkSource;

        r2 := @parameter3: java.lang.String;

        if r1 == null goto label3;

     label1:
        $r4 = r0.<com.android.server.power.Notifier: com.android.internal.app.IBatteryStats mBatteryStats>;

        interfaceinvoke $r4.<com.android.internal.app.IBatteryStats: void noteLongPartialWakelockFinishFromSource(java.lang.String,java.lang.String,android.os.WorkSource)>(r6, r2, r1);

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,android.os.WorkSource,java.lang.String,java.lang.String,int)>(11, r1, r6, r2, 0);

     label2:
        goto label4;

     label3:
        $r3 = r0.<com.android.server.power.Notifier: com.android.internal.app.IBatteryStats mBatteryStats>;

        interfaceinvoke $r3.<com.android.internal.app.IBatteryStats: void noteLongPartialWakelockFinish(java.lang.String,java.lang.String,int)>(r6, r2, i0);

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write_non_chained(int,int,java.lang.String,java.lang.String,java.lang.String,int)>(11, i0, null, r6, r2, 0);

     label4:
        goto label6;

     label5:
        $r5 := @caughtexception;

     label6:
        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public void onLongPartialWakeLockStart(java.lang.String, int, android.os.WorkSource, java.lang.String)
    {
        com.android.server.power.Notifier r0;
        int i0;
        android.os.WorkSource r1;
        java.lang.String r2, r6;
        com.android.internal.app.IBatteryStats $r3, $r4;
        android.os.RemoteException $r5;

        r0 := @this: com.android.server.power.Notifier;

        r6 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: android.os.WorkSource;

        r2 := @parameter3: java.lang.String;

        if r1 == null goto label3;

     label1:
        $r4 = r0.<com.android.server.power.Notifier: com.android.internal.app.IBatteryStats mBatteryStats>;

        interfaceinvoke $r4.<com.android.internal.app.IBatteryStats: void noteLongPartialWakelockStartFromSource(java.lang.String,java.lang.String,android.os.WorkSource)>(r6, r2, r1);

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,android.os.WorkSource,java.lang.String,java.lang.String,int)>(11, r1, r6, r2, 1);

     label2:
        goto label4;

     label3:
        $r3 = r0.<com.android.server.power.Notifier: com.android.internal.app.IBatteryStats mBatteryStats>;

        interfaceinvoke $r3.<com.android.internal.app.IBatteryStats: void noteLongPartialWakelockStart(java.lang.String,java.lang.String,int)>(r6, r2, i0);

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write_non_chained(int,int,java.lang.String,java.lang.String,java.lang.String,int)>(11, i0, null, r6, r2, 1);

     label4:
        goto label6;

     label5:
        $r5 := @caughtexception;

     label6:
        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public void onProfileTimeout(int)
    {
        com.android.server.power.Notifier r0;
        int i0;
        android.os.Message r1;
        com.android.server.power.Notifier$NotifierHandler $r2, $r3;

        r0 := @this: com.android.server.power.Notifier;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.power.Notifier: com.android.server.power.Notifier$NotifierHandler mHandler>;

        r1 = virtualinvoke $r2.<com.android.server.power.Notifier$NotifierHandler: android.os.Message obtainMessage(int)>(5);

        virtualinvoke r1.<android.os.Message: void setAsynchronous(boolean)>(1);

        r1.<android.os.Message: int arg1> = i0;

        $r3 = r0.<com.android.server.power.Notifier: com.android.server.power.Notifier$NotifierHandler mHandler>;

        virtualinvoke $r3.<com.android.server.power.Notifier$NotifierHandler: boolean sendMessage(android.os.Message)>(r1);

        return;
    }

    public void onUserActivity(int, int)
    {
        com.android.server.power.Notifier r0;
        int i0, i1;
        com.android.internal.app.IBatteryStats $r1;
        boolean $z0;
        com.android.server.power.Notifier$NotifierHandler $r2, $r3;
        android.os.RemoteException $r4;
        java.lang.Throwable $r5;
        java.lang.Object r7;
        android.os.Message r8;

        r0 := @this: com.android.server.power.Notifier;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

     label01:
        $r1 = r0.<com.android.server.power.Notifier: com.android.internal.app.IBatteryStats mBatteryStats>;

        interfaceinvoke $r1.<com.android.internal.app.IBatteryStats: void noteUserActivity(int,int)>(i1, i0);

     label02:
        goto label04;

     label03:
        $r4 := @caughtexception;

     label04:
        r7 = r0.<com.android.server.power.Notifier: java.lang.Object mLock>;

        entermonitor r7;

     label05:
        $z0 = r0.<com.android.server.power.Notifier: boolean mUserActivityPending>;

        if $z0 != 0 goto label06;

        r0.<com.android.server.power.Notifier: boolean mUserActivityPending> = 1;

        $r2 = r0.<com.android.server.power.Notifier: com.android.server.power.Notifier$NotifierHandler mHandler>;

        r8 = virtualinvoke $r2.<com.android.server.power.Notifier$NotifierHandler: android.os.Message obtainMessage(int)>(1);

        virtualinvoke r8.<android.os.Message: void setAsynchronous(boolean)>(1);

        $r3 = r0.<com.android.server.power.Notifier: com.android.server.power.Notifier$NotifierHandler mHandler>;

        virtualinvoke $r3.<com.android.server.power.Notifier$NotifierHandler: boolean sendMessage(android.os.Message)>(r8);

     label06:
        exitmonitor r7;

     label07:
        return;

     label08:
        $r5 := @caughtexception;

     label09:
        exitmonitor r7;

     label10:
        throw $r5;

        catch android.os.RemoteException from label01 to label02 with label03;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void onWakeLockAcquired(int, java.lang.String, java.lang.String, int, int, android.os.WorkSource, java.lang.String)
    {
        com.android.server.power.Notifier r0;
        int i0, i1, i2, i3, $i5;
        java.lang.String r1, r2, r7;
        com.android.internal.app.IBatteryStats $r3, $r4;
        android.os.RemoteException $r5, $r6;
        android.os.WorkSource r8;
        boolean z0;
        android.app.AppOpsManager r9;
        com.android.server.power.WakeLockLog $r12;

        r0 := @this: com.android.server.power.Notifier;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r8 := @parameter5: android.os.WorkSource;

        r2 := @parameter6: java.lang.String;

        i3 = specialinvoke r0.<com.android.server.power.Notifier: int getBatteryStatsWakeLockMonitorType(int)>(i0);

        if i3 < 0 goto label10;

        if i1 != 1000 goto label01;

        $i5 = 1073741824 & i0;

        if $i5 == 0 goto label01;

        z0 = 1;

        goto label02;

     label01:
        z0 = 0;

     label02:
        if r8 == null goto label05;

     label03:
        $r4 = r0.<com.android.server.power.Notifier: com.android.internal.app.IBatteryStats mBatteryStats>;

        interfaceinvoke $r4.<com.android.internal.app.IBatteryStats: void noteStartWakelockFromSource(android.os.WorkSource,int,java.lang.String,java.lang.String,int,boolean)>(r8, i2, r1, r2, i3, z0);

     label04:
        goto label07;

     label05:
        $r3 = r0.<com.android.server.power.Notifier: com.android.internal.app.IBatteryStats mBatteryStats>;

        interfaceinvoke $r3.<com.android.internal.app.IBatteryStats: void noteStartWakelock(int,int,java.lang.String,java.lang.String,int,boolean)>(i1, i2, r1, r2, i3, z0);

        r9 = r0.<com.android.server.power.Notifier: android.app.AppOpsManager mAppOps>;

     label06:
        virtualinvoke r9.<android.app.AppOpsManager: int startOpNoThrow(int,int,java.lang.String)>(40, i1, r7);

     label07:
        goto label10;

     label08:
        $r6 := @caughtexception;

        goto label10;

     label09:
        $r5 := @caughtexception;

        goto label10;

     label10:
        $r12 = r0.<com.android.server.power.Notifier: com.android.server.power.WakeLockLog mWakeLockLog>;

        virtualinvoke $r12.<com.android.server.power.WakeLockLog: void onWakeLockAcquired(java.lang.String,int,int)>(r1, i1, i0);

        return;

        catch android.os.RemoteException from label03 to label04 with label09;
        catch android.os.RemoteException from label05 to label06 with label09;
        catch android.os.RemoteException from label06 to label07 with label08;
    }

    public void onWakeLockChanging(int, java.lang.String, java.lang.String, int, int, android.os.WorkSource, java.lang.String, int, java.lang.String, java.lang.String, int, int, android.os.WorkSource, java.lang.String)
    {
        com.android.server.power.Notifier r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8;
        java.lang.String r1, r3, r4, r5, r7, r9;
        android.os.WorkSource r2, r6;
        android.os.RemoteException $r8;
        boolean z0;
        com.android.internal.app.IBatteryStats $r10;

        r0 := @this: com.android.server.power.Notifier;

        i0 := @parameter0: int;

        r9 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r2 := @parameter5: android.os.WorkSource;

        r3 := @parameter6: java.lang.String;

        i3 := @parameter7: int;

        r4 := @parameter8: java.lang.String;

        r5 := @parameter9: java.lang.String;

        i4 := @parameter10: int;

        i5 := @parameter11: int;

        r6 := @parameter12: android.os.WorkSource;

        r7 := @parameter13: java.lang.String;

        i6 = specialinvoke r0.<com.android.server.power.Notifier: int getBatteryStatsWakeLockMonitorType(int)>(i0);

        i7 = specialinvoke r0.<com.android.server.power.Notifier: int getBatteryStatsWakeLockMonitorType(int)>(i3);

        if r2 == null goto label6;

        if r6 == null goto label6;

        if i6 < 0 goto label6;

        if i7 < 0 goto label6;

        if i4 != 1000 goto label1;

        $i8 = 1073741824 & i3;

        if $i8 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        $r10 = r0.<com.android.server.power.Notifier: com.android.internal.app.IBatteryStats mBatteryStats>;

        interfaceinvoke $r10.<com.android.internal.app.IBatteryStats: void noteChangeWakelockFromSource(android.os.WorkSource,int,java.lang.String,java.lang.String,int,android.os.WorkSource,int,java.lang.String,java.lang.String,int,boolean)>(r2, i2, r9, r3, i6, r6, i5, r4, r7, i7, z0);

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

     label5:
        goto label7;

     label6:
        virtualinvoke r0.<com.android.server.power.Notifier: void onWakeLockReleased(int,java.lang.String,java.lang.String,int,int,android.os.WorkSource,java.lang.String)>(i0, r9, r1, i1, i2, r2, r3);

        virtualinvoke r0.<com.android.server.power.Notifier: void onWakeLockAcquired(int,java.lang.String,java.lang.String,int,int,android.os.WorkSource,java.lang.String)>(i3, r4, r5, i4, i5, r6, r7);

     label7:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public void onWakeLockReleased(int, java.lang.String, java.lang.String, int, int, android.os.WorkSource, java.lang.String)
    {
        com.android.server.power.Notifier r0;
        java.lang.String r1, r3, r8;
        int i0, i1, i2, i3;
        android.os.WorkSource r2;
        com.android.internal.app.IBatteryStats $r4, $r6;
        android.app.AppOpsManager $r5;
        android.os.RemoteException $r7;
        com.android.server.power.WakeLockLog $r10;

        r0 := @this: com.android.server.power.Notifier;

        i2 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r8 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r2 := @parameter5: android.os.WorkSource;

        r3 := @parameter6: java.lang.String;

        i3 = specialinvoke r0.<com.android.server.power.Notifier: int getBatteryStatsWakeLockMonitorType(int)>(i2);

        if i3 < 0 goto label6;

        if r2 == null goto label3;

     label1:
        $r6 = r0.<com.android.server.power.Notifier: com.android.internal.app.IBatteryStats mBatteryStats>;

        interfaceinvoke $r6.<com.android.internal.app.IBatteryStats: void noteStopWakelockFromSource(android.os.WorkSource,int,java.lang.String,java.lang.String,int)>(r2, i1, r1, r3, i3);

     label2:
        goto label4;

     label3:
        $r4 = r0.<com.android.server.power.Notifier: com.android.internal.app.IBatteryStats mBatteryStats>;

        interfaceinvoke $r4.<com.android.internal.app.IBatteryStats: void noteStopWakelock(int,int,java.lang.String,java.lang.String,int)>(i0, i1, r1, r3, i3);

        $r5 = r0.<com.android.server.power.Notifier: android.app.AppOpsManager mAppOps>;

        virtualinvoke $r5.<android.app.AppOpsManager: void finishOp(int,int,java.lang.String)>(40, i0, r8);

     label4:
        goto label6;

     label5:
        $r7 := @caughtexception;

     label6:
        $r10 = r0.<com.android.server.power.Notifier: com.android.server.power.WakeLockLog mWakeLockLog>;

        virtualinvoke $r10.<com.android.server.power.WakeLockLog: void onWakeLockReleased(java.lang.String,int)>(r1, i0);

        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public void onWakeUp(int, java.lang.String, int, java.lang.String, int)
    {
        com.android.server.power.Notifier r0;
        int i0, i1, i2;
        java.lang.String r1, r5;
        com.android.internal.app.IBatteryStats $r2;
        android.app.AppOpsManager $r3;
        android.os.RemoteException $r4;

        r0 := @this: com.android.server.power.Notifier;

        i0 := @parameter0: int;

        r5 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        i2 := @parameter4: int;

     label1:
        $r2 = r0.<com.android.server.power.Notifier: com.android.internal.app.IBatteryStats mBatteryStats>;

        interfaceinvoke $r2.<com.android.internal.app.IBatteryStats: void noteWakeUp(java.lang.String,int)>(r5, i1);

     label2:
        if r1 == null goto label4;

     label3:
        $r3 = r0.<com.android.server.power.Notifier: android.app.AppOpsManager mAppOps>;

        virtualinvoke $r3.<android.app.AppOpsManager: int noteOpNoThrow(int,int,java.lang.String)>(61, i2, r1);

     label4:
        goto label6;

     label5:
        $r4 := @caughtexception;

     label6:
        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int)>(282, i0);

        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public void onWakefulnessChangeFinished()
    {
        com.android.server.power.Notifier r0;
        boolean $z0;

        r0 := @this: com.android.server.power.Notifier;

        $z0 = r0.<com.android.server.power.Notifier: boolean mInteractiveChanging>;

        if $z0 == 0 goto label1;

        r0.<com.android.server.power.Notifier: boolean mInteractiveChanging> = 0;

        specialinvoke r0.<com.android.server.power.Notifier: void handleLateInteractiveChange()>();

     label1:
        return;
    }

    public void onWakefulnessChangeStarted(int, int, long)
    {
        com.android.server.power.Notifier r0;
        int i0, i2;
        long l1;
        boolean z0, $z2, $z3;
        com.android.server.power.Notifier$1 $r2;
        com.android.server.power.Notifier$NotifierHandler $r3;
        android.hardware.input.InputManagerInternal $r4;
        com.android.server.inputmethod.InputMethodManagerInternal $r5;
        com.android.internal.app.IBatteryStats $r6;
        android.os.RemoteException $r7;
        byte b3;

        r0 := @this: com.android.server.power.Notifier;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        z0 = staticinvoke <android.os.PowerManagerInternal: boolean isInteractive(int)>(i2);

        $r3 = r0.<com.android.server.power.Notifier: com.android.server.power.Notifier$NotifierHandler mHandler>;

        $r2 = new com.android.server.power.Notifier$1;

        specialinvoke $r2.<com.android.server.power.Notifier$1: void <init>(com.android.server.power.Notifier,int)>(r0, i2);

        virtualinvoke $r3.<com.android.server.power.Notifier$NotifierHandler: boolean post(java.lang.Runnable)>($r2);

        $z2 = r0.<com.android.server.power.Notifier: boolean mInteractive>;

        if $z2 == z0 goto label8;

        $z3 = r0.<com.android.server.power.Notifier: boolean mInteractiveChanging>;

        if $z3 == 0 goto label1;

        specialinvoke r0.<com.android.server.power.Notifier: void handleLateInteractiveChange()>();

     label1:
        $r4 = r0.<com.android.server.power.Notifier: android.hardware.input.InputManagerInternal mInputManagerInternal>;

        virtualinvoke $r4.<android.hardware.input.InputManagerInternal: void setInteractive(boolean)>(z0);

        $r5 = r0.<com.android.server.power.Notifier: com.android.server.inputmethod.InputMethodManagerInternal mInputMethodManagerInternal>;

        virtualinvoke $r5.<com.android.server.inputmethod.InputMethodManagerInternal: void setInteractive(boolean)>(z0);

     label2:
        $r6 = r0.<com.android.server.power.Notifier: com.android.internal.app.IBatteryStats mBatteryStats>;

        interfaceinvoke $r6.<com.android.internal.app.IBatteryStats: void noteInteractive(boolean)>(z0);

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

     label5:
        if z0 == 0 goto label6;

        b3 = 1;

        goto label7;

     label6:
        b3 = 0;

     label7:
        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int)>(33, b3);

        r0.<com.android.server.power.Notifier: boolean mInteractive> = z0;

        r0.<com.android.server.power.Notifier: int mInteractiveChangeReason> = i0;

        r0.<com.android.server.power.Notifier: long mInteractiveChangeStartTime> = l1;

        r0.<com.android.server.power.Notifier: boolean mInteractiveChanging> = 1;

        specialinvoke r0.<com.android.server.power.Notifier: void handleEarlyInteractiveChange()>();

     label8:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public void onWiredChargingStarted(int)
    {
        com.android.server.power.Notifier r0;
        int i0;
        android.os.Message r1;
        com.android.server.power.SuspendBlocker $r2;
        com.android.server.power.Notifier$NotifierHandler $r3, $r4;

        r0 := @this: com.android.server.power.Notifier;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.power.Notifier: com.android.server.power.SuspendBlocker mSuspendBlocker>;

        interfaceinvoke $r2.<com.android.server.power.SuspendBlocker: void acquire()>();

        $r3 = r0.<com.android.server.power.Notifier: com.android.server.power.Notifier$NotifierHandler mHandler>;

        r1 = virtualinvoke $r3.<com.android.server.power.Notifier$NotifierHandler: android.os.Message obtainMessage(int)>(6);

        virtualinvoke r1.<android.os.Message: void setAsynchronous(boolean)>(1);

        r1.<android.os.Message: int arg1> = i0;

        $r4 = r0.<com.android.server.power.Notifier: com.android.server.power.Notifier$NotifierHandler mHandler>;

        virtualinvoke $r4.<com.android.server.power.Notifier$NotifierHandler: boolean sendMessage(android.os.Message)>(r1);

        return;
    }

    public void onWirelessChargingStarted(int, int)
    {
        com.android.server.power.Notifier r0;
        int i0, i1;
        android.os.Message r1;
        com.android.server.power.SuspendBlocker $r2;
        com.android.server.power.Notifier$NotifierHandler $r3, $r4;

        r0 := @this: com.android.server.power.Notifier;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<com.android.server.power.Notifier: com.android.server.power.SuspendBlocker mSuspendBlocker>;

        interfaceinvoke $r2.<com.android.server.power.SuspendBlocker: void acquire()>();

        $r3 = r0.<com.android.server.power.Notifier: com.android.server.power.Notifier$NotifierHandler mHandler>;

        r1 = virtualinvoke $r3.<com.android.server.power.Notifier$NotifierHandler: android.os.Message obtainMessage(int)>(3);

        virtualinvoke r1.<android.os.Message: void setAsynchronous(boolean)>(1);

        r1.<android.os.Message: int arg1> = i0;

        r1.<android.os.Message: int arg2> = i1;

        $r4 = r0.<com.android.server.power.Notifier: com.android.server.power.Notifier$NotifierHandler mHandler>;

        virtualinvoke $r4.<com.android.server.power.Notifier$NotifierHandler: boolean sendMessage(android.os.Message)>(r1);

        return;
    }
}
