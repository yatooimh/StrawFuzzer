final class com.android.server.power.PowerManagerService$BinderService extends android.os.IPowerManager$Stub
{
    final com.android.server.power.PowerManagerService this$0;

    void <init>(com.android.server.power.PowerManagerService)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        com.android.server.power.PowerManagerService r1;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        r1 := @parameter0: com.android.server.power.PowerManagerService;

        r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0> = r1;

        specialinvoke r0.<android.os.IPowerManager$Stub: void <init>()>();

        return;
    }

    public void acquireWakeLock(android.os.IBinder, int, java.lang.String, java.lang.String, android.os.WorkSource, java.lang.String)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        int i0, i1, i2, $i4;
        java.lang.String r1, r2, r3;
        long l3;
        java.lang.IllegalArgumentException $r4, $r5;
        com.android.server.power.PowerManagerService $r6, $r8, $r10, $r15;
        android.content.Context $r7, $r9, $r11;
        boolean $z0;
        java.lang.Throwable $r12;
        android.os.IBinder r13;
        android.os.WorkSource r14;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        r13 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r14 := @parameter4: android.os.WorkSource;

        r3 := @parameter5: java.lang.String;

        if r13 == null goto label8;

        if r2 == null goto label7;

        staticinvoke <android.os.PowerManager: void validateWakeLockParameters(int,java.lang.String)>(i0, r1);

        $r6 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r7 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r6);

        virtualinvoke $r7.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.WAKE_LOCK", null);

        $i4 = i0 & 64;

        if $i4 == 0 goto label1;

        $r10 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r11 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r10);

        virtualinvoke $r11.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DEVICE_POWER", null);

     label1:
        if r14 == null goto label2;

        $z0 = virtualinvoke r14.<android.os.WorkSource: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r8 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r9 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r8);

        virtualinvoke $r9.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.UPDATE_DEVICE_STATS", null);

        goto label3;

     label2:
        r14 = null;

     label3:
        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label4:
        $r15 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$4600(com.android.server.power.PowerManagerService,android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String,int,int)>($r15, r13, i0, r1, r2, r14, r3, i1, i2);

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        return;

     label6:
        $r12 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        throw $r12;

     label7:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("packageName must not be null");

        throw $r5;

     label8:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("lock must not be null");

        throw $r4;

        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void acquireWakeLockWithUid(android.os.IBinder, int, java.lang.String, java.lang.String, int)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        android.os.IBinder r1;
        int i0, i1, i2;
        java.lang.String r2, r3;
        android.os.WorkSource $r4;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        i2 = i1;

        if i1 >= 0 goto label1;

        i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

     label1:
        $r4 = new android.os.WorkSource;

        specialinvoke $r4.<android.os.WorkSource: void <init>(int)>(i2);

        virtualinvoke r0.<com.android.server.power.PowerManagerService$BinderService: void acquireWakeLock(android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String)>(r1, i0, r2, r3, $r4, null);

        return;
    }

    public void boostScreenBrightness(long)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        long l0, l2, $l3;
        int i1;
        com.android.server.power.PowerManagerService $r2, $r5, $r7;
        com.android.server.power.PowerManagerService$Clock $r3;
        byte $b4;
        java.lang.IllegalArgumentException $r4;
        android.content.Context $r6;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        l0 := @parameter0: long;

        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r3 = staticinvoke <com.android.server.power.PowerManagerService: com.android.server.power.PowerManagerService$Clock access$200(com.android.server.power.PowerManagerService)>($r2);

        $l3 = interfaceinvoke $r3.<com.android.server.power.PowerManagerService$Clock: long uptimeMillis()>();

        $b4 = l0 cmp $l3;

        if $b4 > 0 goto label4;

        $r5 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r6 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r5);

        virtualinvoke $r6.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DEVICE_POWER", null);

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r7 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$6700(com.android.server.power.PowerManagerService,long,int)>($r7, l0, i1);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label3:
        $r8 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r8;

     label4:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("event time must not be in the future");

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void crash(java.lang.String)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        long l0;
        com.android.server.power.PowerManagerService $r1, $r3;
        android.content.Context $r2;
        java.lang.Throwable $r4;
        java.lang.String r5;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        r5 := @parameter0: java.lang.String;

        $r1 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r2 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r1);

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.REBOOT", null);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$6200(com.android.server.power.PowerManagerService,java.lang.String)>($r3, r5);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        java.io.PrintWriter r1;
        java.lang.String[] r2;
        long l0;
        int i1, i2;
        com.android.server.power.PowerManagerService $r3, $r5, $r6;
        android.content.Context $r4;
        boolean $z0, $z1, z2;
        java.lang.String $r7;
        java.lang.Throwable $r8;
        java.io.FileDescriptor r9;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        r9 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r2 := @parameter2: java.lang.String[];

        $r3 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r4 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r3);

        $z0 = staticinvoke <com.android.internal.util.DumpUtils: boolean checkDumpPermission(android.content.Context,java.lang.String,java.io.PrintWriter)>($r4, "PowerManagerService", r1);

        if $z0 != 0 goto label1;

        return;

     label1:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        z2 = 0;

        i1 = lengthof r2;

        i2 = 0;

     label2:
        if i2 >= i1 goto label4;

        $r7 = r2[i2];

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("--proto");

        if $z1 == 0 goto label3;

        z2 = 1;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        if z2 == 0 goto label7;

     label5:
        $r6 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$7000(com.android.server.power.PowerManagerService,java.io.FileDescriptor)>($r6, r9);

     label6:
        goto label8;

     label7:
        $r5 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$7100(com.android.server.power.PowerManagerService,java.io.PrintWriter)>($r5, r1);

     label8:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label9:
        $r8 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r8;

        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label7 to label8 with label9;
    }

    public boolean forceSuspend()
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        int i0;
        long l1;
        boolean z0;
        com.android.server.power.PowerManagerService $r2, $r4;
        android.content.Context $r3;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r3 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r2);

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DEVICE_POWER", null);

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        z0 = staticinvoke <com.android.server.power.PowerManagerService: boolean access$6900(com.android.server.power.PowerManagerService,int)>($r4, i0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return z0;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public float getBrightnessConstraint(int)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        int i0;
        com.android.server.power.PowerManagerService $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label9;
            case 1: goto label8;
            case 2: goto label7;
            case 3: goto label6;
            case 4: goto label5;
            case 5: goto label4;
            case 6: goto label3;
            case 7: goto label2;
            default: goto label1;
        };

     label1:
        return #NaNF;

     label2:
        $r1 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $f0 = $r1.<com.android.server.power.PowerManagerService: float mScreenBrightnessDefaultVr>;

        return $f0;

     label3:
        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $f1 = $r2.<com.android.server.power.PowerManagerService: float mScreenBrightnessMaximumVr>;

        return $f1;

     label4:
        $r3 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $f2 = $r3.<com.android.server.power.PowerManagerService: float mScreenBrightnessMinimumVr>;

        return $f2;

     label5:
        $r4 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $f3 = $r4.<com.android.server.power.PowerManagerService: float mScreenBrightnessDoze>;

        return $f3;

     label6:
        $r5 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $f4 = $r5.<com.android.server.power.PowerManagerService: float mScreenBrightnessDim>;

        return $f4;

     label7:
        $r6 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $f5 = $r6.<com.android.server.power.PowerManagerService: float mScreenBrightnessDefault>;

        return $f5;

     label8:
        $r7 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $f6 = $r7.<com.android.server.power.PowerManagerService: float mScreenBrightnessMaximum>;

        return $f6;

     label9:
        $r8 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $f7 = $r8.<com.android.server.power.PowerManagerService: float mScreenBrightnessMinimum>;

        return $f7;
    }

    public int getLastShutdownReason()
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        long l0;
        int i1;
        com.android.server.power.PowerManagerService $r2, $r4;
        android.content.Context $r3;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r3 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r2);

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DEVICE_POWER", null);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        i1 = virtualinvoke $r4.<com.android.server.power.PowerManagerService: int getLastShutdownReasonInternal()>();

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return i1;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getLastSleepReason()
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        long l0;
        int i1;
        com.android.server.power.PowerManagerService $r2, $r4;
        android.content.Context $r3;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r3 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r2);

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DEVICE_POWER", null);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        i1 = staticinvoke <com.android.server.power.PowerManagerService: int access$6000(com.android.server.power.PowerManagerService)>($r4);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return i1;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getPowerSaveModeTrigger()
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        long l0;
        int i1;
        com.android.server.power.PowerManagerService $r2, $r4;
        android.content.Context $r3, $r5;
        android.content.ContentResolver $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r3 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r2);

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.POWER_SAVER", null);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r5 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r4);

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        i1 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r6, "automatic_power_save_mode", 0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return i1;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.os.PowerSaveState getPowerSaveState(int)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        int i0;
        long l1;
        com.android.server.power.PowerManagerService $r1;
        com.android.server.power.batterysaver.BatterySaverPolicy $r2;
        java.lang.Throwable $r3;
        android.os.PowerSaveState r4;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        i0 := @parameter0: int;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r2 = staticinvoke <com.android.server.power.PowerManagerService: com.android.server.power.batterysaver.BatterySaverPolicy access$5700(com.android.server.power.PowerManagerService)>($r1);

        r4 = virtualinvoke $r2.<com.android.server.power.batterysaver.BatterySaverPolicy: android.os.PowerSaveState getBatterySaverPolicy(int)>(i0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return r4;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void goToSleep(long, int, int)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        long l0, l4, $l5;
        int i1, i2, i3;
        com.android.server.power.PowerManagerService $r2, $r5, $r7;
        com.android.server.power.PowerManagerService$Clock $r3;
        byte $b6;
        java.lang.IllegalArgumentException $r4;
        android.content.Context $r6;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r3 = staticinvoke <com.android.server.power.PowerManagerService: com.android.server.power.PowerManagerService$Clock access$200(com.android.server.power.PowerManagerService)>($r2);

        $l5 = interfaceinvoke $r3.<com.android.server.power.PowerManagerService$Clock: long uptimeMillis()>();

        $b6 = l0 cmp $l5;

        if $b6 > 0 goto label4;

        $r5 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r6 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r5);

        virtualinvoke $r6.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DEVICE_POWER", null);

        i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l4 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r7 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$5300(com.android.server.power.PowerManagerService,long,int,int,int)>($r7, l0, i1, i2, i3);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        return;

     label3:
        $r8 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        throw $r8;

     label4:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("event time must not be in the future");

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean isAmbientDisplayAvailable()
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        long l0;
        boolean z0;
        com.android.server.power.PowerManagerService $r2, $r4;
        android.content.Context $r3;
        android.hardware.display.AmbientDisplayConfiguration $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r3 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r2);

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.READ_DREAM_STATE", null);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r5 = staticinvoke <com.android.server.power.PowerManagerService: android.hardware.display.AmbientDisplayConfiguration access$6500(com.android.server.power.PowerManagerService)>($r4);

        z0 = virtualinvoke $r5.<android.hardware.display.AmbientDisplayConfiguration: boolean ambientDisplayAvailable()>();

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z0;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean isAmbientDisplaySuppressed()
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        long l0;
        boolean z0;
        com.android.server.power.PowerManagerService $r2, $r4;
        android.content.Context $r3;
        com.android.server.power.AmbientDisplaySuppressionController $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r3 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r2);

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.READ_DREAM_STATE", null);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r5 = staticinvoke <com.android.server.power.PowerManagerService: com.android.server.power.AmbientDisplaySuppressionController access$6600(com.android.server.power.PowerManagerService)>($r4);

        z0 = virtualinvoke $r5.<com.android.server.power.AmbientDisplaySuppressionController: boolean isSuppressed()>();

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z0;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean isAmbientDisplaySuppressedForToken(java.lang.String)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        int i0;
        long l1;
        boolean z0;
        com.android.server.power.PowerManagerService $r1, $r3;
        android.content.Context $r2;
        com.android.server.power.AmbientDisplaySuppressionController $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        r6 := @parameter0: java.lang.String;

        $r1 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r2 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r1);

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.READ_DREAM_STATE", null);

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r4 = staticinvoke <com.android.server.power.PowerManagerService: com.android.server.power.AmbientDisplaySuppressionController access$6600(com.android.server.power.PowerManagerService)>($r3);

        z0 = virtualinvoke $r4.<com.android.server.power.AmbientDisplaySuppressionController: boolean isSuppressed(java.lang.String,int)>(r6, i0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return z0;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean isDeviceIdleMode()
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        long l0;
        boolean z0;
        com.android.server.power.PowerManagerService $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        z0 = virtualinvoke $r2.<com.android.server.power.PowerManagerService: boolean isDeviceIdleModeInternal()>();

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z0;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean isInteractive()
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        long l0;
        boolean z0;
        com.android.server.power.PowerManagerService $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        z0 = staticinvoke <com.android.server.power.PowerManagerService: boolean access$5500(com.android.server.power.PowerManagerService)>($r2);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z0;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean isLightDeviceIdleMode()
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        long l0;
        boolean z0;
        com.android.server.power.PowerManagerService $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        z0 = virtualinvoke $r2.<com.android.server.power.PowerManagerService: boolean isLightDeviceIdleModeInternal()>();

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z0;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean isPowerSaveMode()
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        long l0;
        boolean z0;
        com.android.server.power.PowerManagerService $r2;
        com.android.server.power.batterysaver.BatterySaverController $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r3 = staticinvoke <com.android.server.power.PowerManagerService: com.android.server.power.batterysaver.BatterySaverController access$5600(com.android.server.power.PowerManagerService)>($r2);

        z0 = virtualinvoke $r3.<com.android.server.power.batterysaver.BatterySaverController: boolean isEnabled()>();

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z0;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean isScreenBrightnessBoosted()
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        long l0;
        boolean z0;
        com.android.server.power.PowerManagerService $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        z0 = staticinvoke <com.android.server.power.PowerManagerService: boolean access$6800(com.android.server.power.PowerManagerService)>($r2);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z0;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean isWakeLockLevelSupported(int)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        int i0;
        long l1;
        boolean z0;
        com.android.server.power.PowerManagerService $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        i0 := @parameter0: int;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        z0 = staticinvoke <com.android.server.power.PowerManagerService: boolean access$4900(com.android.server.power.PowerManagerService,int)>($r2, i0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return z0;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void nap(long)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        long l0, l2, $l3;
        int i1;
        com.android.server.power.PowerManagerService $r2, $r5, $r7;
        com.android.server.power.PowerManagerService$Clock $r3;
        byte $b4;
        java.lang.IllegalArgumentException $r4;
        android.content.Context $r6;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        l0 := @parameter0: long;

        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r3 = staticinvoke <com.android.server.power.PowerManagerService: com.android.server.power.PowerManagerService$Clock access$200(com.android.server.power.PowerManagerService)>($r2);

        $l3 = interfaceinvoke $r3.<com.android.server.power.PowerManagerService$Clock: long uptimeMillis()>();

        $b4 = l0 cmp $l3;

        if $b4 > 0 goto label4;

        $r5 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r6 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r5);

        virtualinvoke $r6.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DEVICE_POWER", null);

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r7 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$5400(com.android.server.power.PowerManagerService,long,int)>($r7, l0, i1);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label3:
        $r8 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r8;

     label4:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("event time must not be in the future");

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onShellCommand(java.io.FileDescriptor, java.io.FileDescriptor, java.io.FileDescriptor, java.lang.String[], android.os.ShellCallback, android.os.ResultReceiver)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        java.io.FileDescriptor r1, r2, r3;
        java.lang.String[] r4;
        android.os.ShellCallback r5;
        android.os.ResultReceiver r6;
        com.android.server.power.PowerManagerShellCommand $r7;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.FileDescriptor;

        r3 := @parameter2: java.io.FileDescriptor;

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: android.os.ShellCallback;

        r6 := @parameter5: android.os.ResultReceiver;

        $r7 = new com.android.server.power.PowerManagerShellCommand;

        specialinvoke $r7.<com.android.server.power.PowerManagerShellCommand: void <init>(android.os.IPowerManager)>(r0);

        virtualinvoke $r7.<com.android.server.power.PowerManagerShellCommand: int exec(android.os.Binder,java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>(r0, r1, r2, r3, r4, r5, r6);

        return;
    }

    public void powerHint(int, int)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        int i0, i1;
        com.android.server.power.PowerManagerService $r1, $r2, $r4;
        boolean $z0;
        android.content.Context $r3;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $z0 = staticinvoke <com.android.server.power.PowerManagerService: boolean access$4300(com.android.server.power.PowerManagerService)>($r1);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r3 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r2);

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DEVICE_POWER", null);

        $r4 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$3400(com.android.server.power.PowerManagerService,int,int)>($r4, i0, i1);

        return;
    }

    public void reboot(boolean, java.lang.String, boolean)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        boolean z0, z1, $z2, $z3;
        long l0;
        com.android.server.power.PowerManagerService $r1, $r4, $r9;
        android.content.Context $r2, $r5;
        java.lang.String $r3, $r6, r8;
        java.lang.Throwable $r7;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        z0 := @parameter0: boolean;

        r8 := @parameter1: java.lang.String;

        z1 := @parameter2: boolean;

        $r1 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r2 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r1);

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.REBOOT", null);

        $r3 = "recovery";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z2 != 0 goto label1;

        $r6 = "recovery-update";

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z3 == 0 goto label2;

     label1:
        $r4 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r5 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r4);

        virtualinvoke $r5.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.RECOVERY", null);

     label2:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label3:
        $r9 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$6100(com.android.server.power.PowerManagerService,int,boolean,java.lang.String,boolean)>($r9, 1, z0, r8, z1);

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label5:
        $r7 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r7;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void rebootSafeMode(boolean, boolean)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        boolean z0, z1;
        long l0;
        com.android.server.power.PowerManagerService $r2, $r4;
        android.content.Context $r3;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r3 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r2);

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.REBOOT", null);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$6100(com.android.server.power.PowerManagerService,int,boolean,java.lang.String,boolean)>($r4, 2, z0, "safemode", z1);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void releaseWakeLock(android.os.IBinder, int)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        int i0;
        long l1;
        java.lang.IllegalArgumentException $r1;
        com.android.server.power.PowerManagerService $r2, $r4;
        android.content.Context $r3;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        r6 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        if r6 == null goto label4;

        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r3 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r2);

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.WAKE_LOCK", null);

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$4700(com.android.server.power.PowerManagerService,android.os.IBinder,int)>($r4, r6, i0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r5;

     label4:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("lock must not be null");

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean setAdaptivePowerSaveEnabled(boolean)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        long l0;
        com.android.server.power.PowerManagerService $r2, $r4, $r6;
        android.content.Context $r3, $r7;
        int $i1;
        com.android.server.power.batterysaver.BatterySaverStateMachine $r5;
        java.lang.Throwable $r8;
        boolean z0, z1;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        z0 := @parameter0: boolean;

        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r3 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r2);

        $i1 = virtualinvoke $r3.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.POWER_SAVER");

        if $i1 == 0 goto label1;

        $r6 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r7 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r6);

        virtualinvoke $r7.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DEVICE_POWER", "setAdaptivePowerSaveEnabled");

     label1:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r4 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r5 = staticinvoke <com.android.server.power.PowerManagerService: com.android.server.power.batterysaver.BatterySaverStateMachine access$5900(com.android.server.power.PowerManagerService)>($r4);

        z1 = virtualinvoke $r5.<com.android.server.power.batterysaver.BatterySaverStateMachine: boolean setAdaptiveBatterySaverEnabled(boolean)>(z0);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z1;

     label4:
        $r8 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r8;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public boolean setAdaptivePowerSavePolicy(android.os.BatterySaverPolicyConfig)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        long l0;
        boolean z0;
        com.android.server.power.PowerManagerService $r1, $r3, $r5;
        android.content.Context $r2, $r6;
        int $i1;
        com.android.server.power.batterysaver.BatterySaverStateMachine $r4;
        java.lang.Throwable $r7;
        android.os.BatterySaverPolicyConfig r8;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        r8 := @parameter0: android.os.BatterySaverPolicyConfig;

        $r1 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r2 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r1);

        $i1 = virtualinvoke $r2.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.POWER_SAVER");

        if $i1 == 0 goto label1;

        $r5 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r6 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r5);

        virtualinvoke $r6.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DEVICE_POWER", "setAdaptivePowerSavePolicy");

     label1:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r3 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r4 = staticinvoke <com.android.server.power.PowerManagerService: com.android.server.power.batterysaver.BatterySaverStateMachine access$5900(com.android.server.power.PowerManagerService)>($r3);

        z0 = virtualinvoke $r4.<com.android.server.power.batterysaver.BatterySaverStateMachine: boolean setAdaptiveBatterySaverPolicy(android.os.BatterySaverPolicyConfig)>(r8);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z0;

     label4:
        $r7 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r7;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public void setAttentionLight(boolean, int)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        boolean z0;
        int i0;
        long l1;
        com.android.server.power.PowerManagerService $r2, $r4;
        android.content.Context $r3;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r3 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r2);

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DEVICE_POWER", null);

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$6300(com.android.server.power.PowerManagerService,boolean,int)>($r4, z0, i0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setDozeAfterScreenOff(boolean)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        boolean z0;
        long l0;
        com.android.server.power.PowerManagerService $r2, $r4;
        android.content.Context $r3;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        z0 := @parameter0: boolean;

        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r3 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r2);

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DEVICE_POWER", null);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$6400(com.android.server.power.PowerManagerService,boolean)>($r4, z0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean setDynamicPowerSaveHint(boolean, int)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        long l0;
        boolean z0, z1, z2, z3;
        com.android.server.power.PowerManagerService $r1, $r3;
        android.content.Context $r2, $r4;
        java.lang.Throwable $r5;
        int i1;
        android.content.ContentResolver r6;
        byte b2;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        z1 := @parameter0: boolean;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r2 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r1);

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.POWER_SAVER", "updateDynamicPowerSavings");

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r4 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r3);

        r6 = virtualinvoke $r4.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        z0 = staticinvoke <android.provider.Settings$Global: boolean putInt(android.content.ContentResolver,java.lang.String,int)>(r6, "dynamic_power_savings_disable_threshold", i1);

     label2:
        z2 = z0;

        if z0 == 0 goto label6;

        if z1 == 0 goto label3;

        b2 = 1;

        goto label4;

     label3:
        b2 = 0;

     label4:
        z3 = staticinvoke <android.provider.Settings$Global: boolean putInt(android.content.ContentResolver,java.lang.String,int)>(r6, "dynamic_power_savings_enabled", b2);

     label5:
        z2 = z0 & z3;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z2;

     label7:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public void setPowerBoost(int, int)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        int i0, i1;
        com.android.server.power.PowerManagerService $r1, $r2, $r4;
        boolean $z0;
        android.content.Context $r3;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $z0 = staticinvoke <com.android.server.power.PowerManagerService: boolean access$4300(com.android.server.power.PowerManagerService)>($r1);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r3 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r2);

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DEVICE_POWER", null);

        $r4 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$4500(com.android.server.power.PowerManagerService,int,int)>($r4, i0, i1);

        return;
    }

    public void setPowerMode(int, boolean)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        int i0;
        boolean z0, $z1;
        com.android.server.power.PowerManagerService $r1, $r2, $r4;
        android.content.Context $r3;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $z1 = staticinvoke <com.android.server.power.PowerManagerService: boolean access$4300(com.android.server.power.PowerManagerService)>($r1);

        if $z1 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r3 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r2);

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DEVICE_POWER", null);

        $r4 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: boolean access$2400(com.android.server.power.PowerManagerService,int,boolean)>($r4, i0, z0);

        return;
    }

    public boolean setPowerModeChecked(int, boolean)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        int i0;
        boolean z0, $z1, $z2;
        com.android.server.power.PowerManagerService $r1, $r2, $r4;
        android.content.Context $r3;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $z1 = staticinvoke <com.android.server.power.PowerManagerService: boolean access$4300(com.android.server.power.PowerManagerService)>($r1);

        if $z1 != 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r3 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r2);

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DEVICE_POWER", null);

        $r4 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $z2 = staticinvoke <com.android.server.power.PowerManagerService: boolean access$2400(com.android.server.power.PowerManagerService,int,boolean)>($r4, i0, z0);

        return $z2;
    }

    public boolean setPowerSaveModeEnabled(boolean)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        long l0;
        com.android.server.power.PowerManagerService $r2, $r4, $r5;
        android.content.Context $r3, $r6;
        int $i1;
        java.lang.Throwable $r7;
        boolean z0, z1;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        z0 := @parameter0: boolean;

        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r3 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r2);

        $i1 = virtualinvoke $r3.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.POWER_SAVER");

        if $i1 == 0 goto label1;

        $r5 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r6 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r5);

        virtualinvoke $r6.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DEVICE_POWER", null);

     label1:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r4 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        z1 = staticinvoke <com.android.server.power.PowerManagerService: boolean access$5800(com.android.server.power.PowerManagerService,boolean)>($r4, z0);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z1;

     label4:
        $r7 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r7;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public void setStayOnSetting(int)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        int i0, i1;
        long l2;
        com.android.server.power.PowerManagerService $r2, $r3, $r5;
        android.content.Context $r4, $r6;
        java.lang.String $r7;
        boolean $z0;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        i0 := @parameter0: int;

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i1 == 0 goto label1;

        $r3 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r4 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r3);

        $r5 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r6 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r5);

        $r7 = staticinvoke <android.provider.Settings: java.lang.String getPackageNameForUid(android.content.Context,int)>($r6, i1);

        $z0 = staticinvoke <android.provider.Settings: boolean checkAndNoteWriteSettingsOperation(android.content.Context,int,java.lang.String,boolean)>($r4, i1, $r7, 1);

        if $z0 != 0 goto label1;

        return;

     label1:
        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        virtualinvoke $r2.<com.android.server.power.PowerManagerService: void setStayOnSettingInternal(int)>(i0);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label4:
        $r8 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r8;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public void shutdown(boolean, java.lang.String, boolean)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        boolean z0, z1;
        long l0;
        com.android.server.power.PowerManagerService $r1, $r3;
        android.content.Context $r2;
        java.lang.Throwable $r4;
        java.lang.String r5;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        z0 := @parameter0: boolean;

        r5 := @parameter1: java.lang.String;

        z1 := @parameter2: boolean;

        $r1 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r2 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r1);

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.REBOOT", null);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$6100(com.android.server.power.PowerManagerService,int,boolean,java.lang.String,boolean)>($r3, 0, z0, r5, z1);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void suppressAmbientDisplay(java.lang.String, boolean)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        boolean z0;
        int i0;
        long l1;
        com.android.server.power.PowerManagerService $r1, $r3;
        android.content.Context $r2;
        com.android.server.power.AmbientDisplaySuppressionController $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        r6 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r1 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r2 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r1);

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.WRITE_DREAM_STATE", null);

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r4 = staticinvoke <com.android.server.power.PowerManagerService: com.android.server.power.AmbientDisplaySuppressionController access$6600(com.android.server.power.PowerManagerService)>($r3);

        virtualinvoke $r4.<com.android.server.power.AmbientDisplaySuppressionController: void suppress(java.lang.String,int,boolean)>(r6, i0, z0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void updateWakeLockUids(android.os.IBinder, int[])
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        android.os.IBinder r1;
        int[] r2;
        android.os.WorkSource $r4, r5;
        int $i0, $i1, i2;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: int[];

        r5 = null;

        if r2 == null goto label2;

        $r4 = new android.os.WorkSource;

        specialinvoke $r4.<android.os.WorkSource: void <init>()>();

        i2 = 0;

     label1:
        r5 = $r4;

        $i0 = lengthof r2;

        if i2 >= $i0 goto label2;

        $i1 = r2[i2];

        virtualinvoke $r4.<android.os.WorkSource: boolean add(int)>($i1);

        i2 = i2 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<com.android.server.power.PowerManagerService$BinderService: void updateWakeLockWorkSource(android.os.IBinder,android.os.WorkSource,java.lang.String)>(r1, r5, null);

        return;
    }

    public void updateWakeLockWorkSource(android.os.IBinder, android.os.WorkSource, java.lang.String)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        java.lang.String r1;
        int i0;
        long l1;
        java.lang.IllegalArgumentException $r2;
        com.android.server.power.PowerManagerService $r3, $r5, $r10;
        android.content.Context $r4, $r6;
        boolean $z0;
        java.lang.Throwable $r7;
        android.os.IBinder r8;
        android.os.WorkSource r9;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        r8 := @parameter0: android.os.IBinder;

        r9 := @parameter1: android.os.WorkSource;

        r1 := @parameter2: java.lang.String;

        if r8 == null goto label6;

        $r3 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r4 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r3);

        virtualinvoke $r4.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.WAKE_LOCK", null);

        if r9 == null goto label1;

        $z0 = virtualinvoke r9.<android.os.WorkSource: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r5 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r6 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r5);

        virtualinvoke $r6.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.UPDATE_DEVICE_STATS", null);

        goto label2;

     label1:
        r9 = null;

     label2:
        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label3:
        $r10 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$4800(com.android.server.power.PowerManagerService,android.os.IBinder,android.os.WorkSource,java.lang.String,int)>($r10, r8, r9, r1, i0);

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label5:
        $r7 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r7;

     label6:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("lock must not be null");

        throw $r2;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void userActivity(long, int, int)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        long l0, $l7, $l8, l14, l15;
        int i1, i2, i3, $i4, $i6, $i11, $i12;
        com.android.server.power.PowerManagerService $r1, $r3, $r6, $r7, $r9, $r10, $r11;
        com.android.server.power.PowerManagerService$Clock $r2;
        android.content.Context $r4, $r8;
        byte $b5, $b9;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r16;
        java.lang.Throwable $r17, $r18;
        java.lang.Object r19;
        java.lang.StringBuilder r20;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r2 = staticinvoke <com.android.server.power.PowerManagerService: com.android.server.power.PowerManagerService$Clock access$200(com.android.server.power.PowerManagerService)>($r1);

        l14 = interfaceinvoke $r2.<com.android.server.power.PowerManagerService$Clock: long uptimeMillis()>();

        $r3 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r4 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r3);

        $i4 = virtualinvoke $r4.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.DEVICE_POWER");

        if $i4 == 0 goto label07;

        $r7 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r8 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r7);

        $i6 = virtualinvoke $r8.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.USER_ACTIVITY");

        if $i6 == 0 goto label07;

        $r9 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        r19 = staticinvoke <com.android.server.power.PowerManagerService: java.lang.Object access$000(com.android.server.power.PowerManagerService)>($r9);

        entermonitor r19;

     label01:
        $r10 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $l7 = staticinvoke <com.android.server.power.PowerManagerService: long access$5000(com.android.server.power.PowerManagerService)>($r10);

        $l8 = $l7 + 300000L;

        $b9 = l14 cmp $l8;

        if $b9 < 0 goto label02;

        $r11 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: long access$5002(com.android.server.power.PowerManagerService,long)>($r11, l14);

        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring call to PowerManager.userActivity() because the caller does not have DEVICE_POWER or USER_ACTIVITY permission.  Please fix your app!   pid=");

        $i11 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uid=");

        $i12 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r16 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PowerManagerService", $r16);

     label02:
        exitmonitor r19;

     label03:
        return;

     label04:
        $r18 := @caughtexception;

     label05:
        exitmonitor r19;

     label06:
        throw $r18;

     label07:
        $b5 = l0 cmp l14;

        if $b5 > 0 goto label11;

        i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l15 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label08:
        $r6 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$5100(com.android.server.power.PowerManagerService,long,int,int,int)>($r6, l0, i1, i2, i3);

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l15);

        return;

     label10:
        $r17 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l15);

        throw $r17;

     label11:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("event time must not be in the future");

        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label05 to label06 with label04;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void wakeUp(long, int, java.lang.String, java.lang.String)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        long l0, l3, $l4;
        int i1, i2;
        java.lang.String r1, r9;
        com.android.server.power.PowerManagerService $r2, $r5, $r7;
        com.android.server.power.PowerManagerService$Clock $r3;
        byte $b5;
        java.lang.IllegalArgumentException $r4;
        android.content.Context $r6;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r9 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.String;

        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r3 = staticinvoke <com.android.server.power.PowerManagerService: com.android.server.power.PowerManagerService$Clock access$200(com.android.server.power.PowerManagerService)>($r2);

        $l4 = interfaceinvoke $r3.<com.android.server.power.PowerManagerService$Clock: long uptimeMillis()>();

        $b5 = l0 cmp $l4;

        if $b5 > 0 goto label4;

        $r5 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r6 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$4400(com.android.server.power.PowerManagerService)>($r5);

        virtualinvoke $r6.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DEVICE_POWER", null);

        i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r7 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$5200(com.android.server.power.PowerManagerService,long,int,java.lang.String,int,java.lang.String,int)>($r7, l0, i1, r9, i2, r1, i2);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        return;

     label3:
        $r8 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        throw $r8;

     label4:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("event time must not be in the future");

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
