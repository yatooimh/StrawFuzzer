final class com.android.server.power.PowerManagerService$Constants extends android.database.ContentObserver
{
    private static final boolean DEFAULT_NO_CACHED_WAKE_LOCKS;
    private static final java.lang.String KEY_NO_CACHED_WAKE_LOCKS;
    public boolean NO_CACHED_WAKE_LOCKS;
    private final android.util.KeyValueListParser mParser;
    private android.content.ContentResolver mResolver;
    final com.android.server.power.PowerManagerService this$0;

    public void <init>(com.android.server.power.PowerManagerService, android.os.Handler)
    {
        com.android.server.power.PowerManagerService$Constants r0;
        com.android.server.power.PowerManagerService r1;
        android.os.Handler r2;
        android.util.KeyValueListParser $r3;

        r0 := @this: com.android.server.power.PowerManagerService$Constants;

        r1 := @parameter0: com.android.server.power.PowerManagerService;

        r2 := @parameter1: android.os.Handler;

        r0.<com.android.server.power.PowerManagerService$Constants: com.android.server.power.PowerManagerService this$0> = r1;

        specialinvoke r0.<android.database.ContentObserver: void <init>(android.os.Handler)>(r2);

        r0.<com.android.server.power.PowerManagerService$Constants: boolean NO_CACHED_WAKE_LOCKS> = 1;

        $r3 = new android.util.KeyValueListParser;

        specialinvoke $r3.<android.util.KeyValueListParser: void <init>(char)>(44);

        r0.<com.android.server.power.PowerManagerService$Constants: android.util.KeyValueListParser mParser> = $r3;

        return;
    }

    private void updateConstants()
    {
        com.android.server.power.PowerManagerService$Constants r0;
        java.lang.Object r1;
        com.android.server.power.PowerManagerService $r2;
        android.content.ContentResolver $r3;
        android.util.KeyValueListParser $r4, $r6;
        java.lang.String $r5;
        boolean $z0;
        java.lang.Throwable $r7, $r8;

        r0 := @this: com.android.server.power.PowerManagerService$Constants;

        $r2 = r0.<com.android.server.power.PowerManagerService$Constants: com.android.server.power.PowerManagerService this$0>;

        r1 = staticinvoke <com.android.server.power.PowerManagerService: java.lang.Object access$000(com.android.server.power.PowerManagerService)>($r2);

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.power.PowerManagerService$Constants: android.util.KeyValueListParser mParser>;

        $r3 = r0.<com.android.server.power.PowerManagerService$Constants: android.content.ContentResolver mResolver>;

        $r5 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r3, "power_manager_constants");

        virtualinvoke $r4.<android.util.KeyValueListParser: void setString(java.lang.String)>($r5);

     label2:
        goto label6;

     label3:
        $r8 := @caughtexception;

        goto label8;

     label4:
        $r7 := @caughtexception;

     label5:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PowerManagerService", "Bad alarm manager settings", $r7);

     label6:
        $r6 = r0.<com.android.server.power.PowerManagerService$Constants: android.util.KeyValueListParser mParser>;

        $z0 = virtualinvoke $r6.<android.util.KeyValueListParser: boolean getBoolean(java.lang.String,boolean)>("no_cached_wake_locks", 1);

        r0.<com.android.server.power.PowerManagerService$Constants: boolean NO_CACHED_WAKE_LOCKS> = $z0;

        exitmonitor r1;

     label7:
        return;

     label8:
        exitmonitor r1;

     label9:
        throw $r8;

        catch java.lang.IllegalArgumentException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
        catch java.lang.Throwable from label6 to label7 with label3;
        catch java.lang.Throwable from label8 to label9 with label3;
    }

    void dump(java.io.PrintWriter)
    {
        com.android.server.power.PowerManagerService$Constants r0;
        java.io.PrintWriter r1;
        boolean $z0;

        r0 := @this: com.android.server.power.PowerManagerService$Constants;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  Settings power_manager_constants:");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("no_cached_wake_locks");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("=");

        $z0 = r0.<com.android.server.power.PowerManagerService$Constants: boolean NO_CACHED_WAKE_LOCKS>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z0);

        return;
    }

    void dumpProto(android.util.proto.ProtoOutputStream)
    {
        com.android.server.power.PowerManagerService$Constants r0;
        android.util.proto.ProtoOutputStream r1;
        long l0;
        boolean $z0;

        r0 := @this: com.android.server.power.PowerManagerService$Constants;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        l0 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268033L);

        $z0 = r0.<com.android.server.power.PowerManagerService$Constants: boolean NO_CACHED_WAKE_LOCKS>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366145L, $z0);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l0);

        return;
    }

    public void onChange(boolean, android.net.Uri)
    {
        com.android.server.power.PowerManagerService$Constants r0;
        boolean z0;
        android.net.Uri r1;

        r0 := @this: com.android.server.power.PowerManagerService$Constants;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.net.Uri;

        specialinvoke r0.<com.android.server.power.PowerManagerService$Constants: void updateConstants()>();

        return;
    }

    public void start(android.content.ContentResolver)
    {
        com.android.server.power.PowerManagerService$Constants r0;
        android.content.ContentResolver r1;
        android.net.Uri $r2;

        r0 := @this: com.android.server.power.PowerManagerService$Constants;

        r1 := @parameter0: android.content.ContentResolver;

        r0.<com.android.server.power.PowerManagerService$Constants: android.content.ContentResolver mResolver> = r1;

        $r2 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("power_manager_constants");

        virtualinvoke r1.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r2, 0, r0);

        specialinvoke r0.<com.android.server.power.PowerManagerService$Constants: void updateConstants()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.power.PowerManagerService$Constants: java.lang.String KEY_NO_CACHED_WAKE_LOCKS> = "no_cached_wake_locks";

        <com.android.server.power.PowerManagerService$Constants: boolean DEFAULT_NO_CACHED_WAKE_LOCKS> = 1;

        return;
    }
}
