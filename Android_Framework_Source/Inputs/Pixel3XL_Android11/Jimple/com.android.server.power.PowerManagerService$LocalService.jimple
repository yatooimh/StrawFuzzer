final class com.android.server.power.PowerManagerService$LocalService extends android.os.PowerManagerInternal
{
    final com.android.server.power.PowerManagerService this$0;

    void <init>(com.android.server.power.PowerManagerService)
    {
        com.android.server.power.PowerManagerService$LocalService r0;
        com.android.server.power.PowerManagerService r1;

        r0 := @this: com.android.server.power.PowerManagerService$LocalService;

        r1 := @parameter0: com.android.server.power.PowerManagerService;

        r0.<com.android.server.power.PowerManagerService$LocalService: com.android.server.power.PowerManagerService this$0> = r1;

        specialinvoke r0.<android.os.PowerManagerInternal: void <init>()>();

        return;
    }

    public void finishUidChanges()
    {
        com.android.server.power.PowerManagerService$LocalService r0;
        com.android.server.power.PowerManagerService $r1;

        r0 := @this: com.android.server.power.PowerManagerService$LocalService;

        $r1 = r0.<com.android.server.power.PowerManagerService$LocalService: com.android.server.power.PowerManagerService this$0>;

        virtualinvoke $r1.<com.android.server.power.PowerManagerService: void finishUidChangesInternal()>();

        return;
    }

    public android.os.PowerManager$WakeData getLastWakeup()
    {
        com.android.server.power.PowerManagerService$LocalService r0;
        com.android.server.power.PowerManagerService $r1;
        android.os.PowerManager$WakeData $r2;

        r0 := @this: com.android.server.power.PowerManagerService$LocalService;

        $r1 = r0.<com.android.server.power.PowerManagerService$LocalService: com.android.server.power.PowerManagerService this$0>;

        $r2 = staticinvoke <com.android.server.power.PowerManagerService: android.os.PowerManager$WakeData access$7700(com.android.server.power.PowerManagerService)>($r1);

        return $r2;
    }

    public android.os.PowerSaveState getLowPowerState(int)
    {
        com.android.server.power.PowerManagerService$LocalService r0;
        int i0;
        com.android.server.power.PowerManagerService $r1;
        com.android.server.power.batterysaver.BatterySaverPolicy $r2;
        android.os.PowerSaveState $r3;

        r0 := @this: com.android.server.power.PowerManagerService$LocalService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.power.PowerManagerService$LocalService: com.android.server.power.PowerManagerService this$0>;

        $r2 = staticinvoke <com.android.server.power.PowerManagerService: com.android.server.power.batterysaver.BatterySaverPolicy access$5700(com.android.server.power.PowerManagerService)>($r1);

        $r3 = virtualinvoke $r2.<com.android.server.power.batterysaver.BatterySaverPolicy: android.os.PowerSaveState getBatterySaverPolicy(int)>(i0);

        return $r3;
    }

    public void powerHint(int, int)
    {
        com.android.server.power.PowerManagerService$LocalService r0;
        int i0, i1;
        com.android.server.power.PowerManagerService $r1;

        r0 := @this: com.android.server.power.PowerManagerService$LocalService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.power.PowerManagerService$LocalService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$3400(com.android.server.power.PowerManagerService,int,int)>($r1, i0, i1);

        return;
    }

    public void registerLowPowerModeObserver(android.os.PowerManagerInternal$LowPowerModeListener)
    {
        com.android.server.power.PowerManagerService$LocalService r0;
        android.os.PowerManagerInternal$LowPowerModeListener r1;
        com.android.server.power.PowerManagerService $r2;
        com.android.server.power.batterysaver.BatterySaverController $r3;

        r0 := @this: com.android.server.power.PowerManagerService$LocalService;

        r1 := @parameter0: android.os.PowerManagerInternal$LowPowerModeListener;

        $r2 = r0.<com.android.server.power.PowerManagerService$LocalService: com.android.server.power.PowerManagerService this$0>;

        $r3 = staticinvoke <com.android.server.power.PowerManagerService: com.android.server.power.batterysaver.BatterySaverController access$5600(com.android.server.power.PowerManagerService)>($r2);

        virtualinvoke $r3.<com.android.server.power.batterysaver.BatterySaverController: void addListener(android.os.PowerManagerInternal$LowPowerModeListener)>(r1);

        return;
    }

    public boolean setDeviceIdleMode(boolean)
    {
        com.android.server.power.PowerManagerService$LocalService r0;
        boolean z0, $z1;
        com.android.server.power.PowerManagerService $r1;

        r0 := @this: com.android.server.power.PowerManagerService$LocalService;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.server.power.PowerManagerService$LocalService: com.android.server.power.PowerManagerService this$0>;

        $z1 = virtualinvoke $r1.<com.android.server.power.PowerManagerService: boolean setDeviceIdleModeInternal(boolean)>(z0);

        return $z1;
    }

    public void setDeviceIdleTempWhitelist(int[])
    {
        com.android.server.power.PowerManagerService$LocalService r0;
        int[] r1;
        com.android.server.power.PowerManagerService $r2;

        r0 := @this: com.android.server.power.PowerManagerService$LocalService;

        r1 := @parameter0: int[];

        $r2 = r0.<com.android.server.power.PowerManagerService$LocalService: com.android.server.power.PowerManagerService this$0>;

        virtualinvoke $r2.<com.android.server.power.PowerManagerService: void setDeviceIdleTempWhitelistInternal(int[])>(r1);

        return;
    }

    public void setDeviceIdleWhitelist(int[])
    {
        com.android.server.power.PowerManagerService$LocalService r0;
        int[] r1;
        com.android.server.power.PowerManagerService $r2;

        r0 := @this: com.android.server.power.PowerManagerService$LocalService;

        r1 := @parameter0: int[];

        $r2 = r0.<com.android.server.power.PowerManagerService$LocalService: com.android.server.power.PowerManagerService this$0>;

        virtualinvoke $r2.<com.android.server.power.PowerManagerService: void setDeviceIdleWhitelistInternal(int[])>(r1);

        return;
    }

    public void setDozeOverrideFromDreamManager(int, int)
    {
        com.android.server.power.PowerManagerService$LocalService r0;
        int i0, i1, i2;
        com.android.server.power.PowerManagerService $r1;

        r0 := @this: com.android.server.power.PowerManagerService$LocalService;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        tableswitch(i1)
        {
            case 0: goto label2;
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label2;
            case 4: goto label2;
            case 5: goto label2;
            case 6: goto label2;
            default: goto label1;
        };

     label1:
        i1 = 0;

        goto label2;

     label2:
        if i0 < -1 goto label3;

        i2 = i0;

        if i0 <= 255 goto label4;

     label3:
        i2 = -1;

     label4:
        $r1 = r0.<com.android.server.power.PowerManagerService$LocalService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$7300(com.android.server.power.PowerManagerService,int,int)>($r1, i1, i2);

        return;
    }

    public void setDrawWakeLockOverrideFromSidekick(boolean)
    {
        com.android.server.power.PowerManagerService$LocalService r0;
        boolean z0;
        com.android.server.power.PowerManagerService $r1;

        r0 := @this: com.android.server.power.PowerManagerService$LocalService;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.server.power.PowerManagerService$LocalService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$7600(com.android.server.power.PowerManagerService,boolean)>($r1, z0);

        return;
    }

    public boolean setLightDeviceIdleMode(boolean)
    {
        com.android.server.power.PowerManagerService$LocalService r0;
        boolean z0, $z1;
        com.android.server.power.PowerManagerService $r1;

        r0 := @this: com.android.server.power.PowerManagerService$LocalService;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.server.power.PowerManagerService$LocalService: com.android.server.power.PowerManagerService this$0>;

        $z1 = virtualinvoke $r1.<com.android.server.power.PowerManagerService: boolean setLightDeviceIdleModeInternal(boolean)>(z0);

        return $z1;
    }

    public void setMaximumScreenOffTimeoutFromDeviceAdmin(int, long)
    {
        com.android.server.power.PowerManagerService$LocalService r0;
        int i0;
        long l1;
        com.android.server.power.PowerManagerService $r1;

        r0 := @this: com.android.server.power.PowerManagerService$LocalService;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r1 = r0.<com.android.server.power.PowerManagerService$LocalService: com.android.server.power.PowerManagerService this$0>;

        virtualinvoke $r1.<com.android.server.power.PowerManagerService: void setMaximumScreenOffTimeoutFromDeviceAdminInternal(int,long)>(i0, l1);

        return;
    }

    public void setPowerBoost(int, int)
    {
        com.android.server.power.PowerManagerService$LocalService r0;
        int i0, i1;
        com.android.server.power.PowerManagerService $r1;

        r0 := @this: com.android.server.power.PowerManagerService$LocalService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.power.PowerManagerService$LocalService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$4500(com.android.server.power.PowerManagerService,int,int)>($r1, i0, i1);

        return;
    }

    public void setPowerMode(int, boolean)
    {
        com.android.server.power.PowerManagerService$LocalService r0;
        int i0;
        boolean z0;
        com.android.server.power.PowerManagerService $r1;

        r0 := @this: com.android.server.power.PowerManagerService$LocalService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<com.android.server.power.PowerManagerService$LocalService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: boolean access$2400(com.android.server.power.PowerManagerService,int,boolean)>($r1, i0, z0);

        return;
    }

    public void setScreenBrightnessOverrideFromWindowManager(float)
    {
        com.android.server.power.PowerManagerService$LocalService r0;
        float f0, f1;
        byte $b0, $b1;
        com.android.server.power.PowerManagerService $r1;

        r0 := @this: com.android.server.power.PowerManagerService$LocalService;

        f0 := @parameter0: float;

        $b0 = f0 cmpg 0.0F;

        if $b0 < 0 goto label1;

        f1 = f0;

        $b1 = f0 cmpl 1.0F;

        if $b1 <= 0 goto label2;

     label1:
        f1 = #NaNF;

     label2:
        $r1 = r0.<com.android.server.power.PowerManagerService$LocalService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$7200(com.android.server.power.PowerManagerService,float)>($r1, f1);

        return;
    }

    public void setUserActivityTimeoutOverrideFromWindowManager(long)
    {
        com.android.server.power.PowerManagerService$LocalService r0;
        long l0;
        com.android.server.power.PowerManagerService $r1;

        r0 := @this: com.android.server.power.PowerManagerService$LocalService;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.server.power.PowerManagerService$LocalService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$7500(com.android.server.power.PowerManagerService,long)>($r1, l0);

        return;
    }

    public void setUserInactiveOverrideFromWindowManager()
    {
        com.android.server.power.PowerManagerService$LocalService r0;
        com.android.server.power.PowerManagerService $r1;

        r0 := @this: com.android.server.power.PowerManagerService$LocalService;

        $r1 = r0.<com.android.server.power.PowerManagerService$LocalService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$7400(com.android.server.power.PowerManagerService)>($r1);

        return;
    }

    public void startUidChanges()
    {
        com.android.server.power.PowerManagerService$LocalService r0;
        com.android.server.power.PowerManagerService $r1;

        r0 := @this: com.android.server.power.PowerManagerService$LocalService;

        $r1 = r0.<com.android.server.power.PowerManagerService$LocalService: com.android.server.power.PowerManagerService this$0>;

        virtualinvoke $r1.<com.android.server.power.PowerManagerService: void startUidChangesInternal()>();

        return;
    }

    public void uidActive(int)
    {
        com.android.server.power.PowerManagerService$LocalService r0;
        int i0;
        com.android.server.power.PowerManagerService $r1;

        r0 := @this: com.android.server.power.PowerManagerService$LocalService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.power.PowerManagerService$LocalService: com.android.server.power.PowerManagerService this$0>;

        virtualinvoke $r1.<com.android.server.power.PowerManagerService: void uidActiveInternal(int)>(i0);

        return;
    }

    public void uidGone(int)
    {
        com.android.server.power.PowerManagerService$LocalService r0;
        int i0;
        com.android.server.power.PowerManagerService $r1;

        r0 := @this: com.android.server.power.PowerManagerService$LocalService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.power.PowerManagerService$LocalService: com.android.server.power.PowerManagerService this$0>;

        virtualinvoke $r1.<com.android.server.power.PowerManagerService: void uidGoneInternal(int)>(i0);

        return;
    }

    public void uidIdle(int)
    {
        com.android.server.power.PowerManagerService$LocalService r0;
        int i0;
        com.android.server.power.PowerManagerService $r1;

        r0 := @this: com.android.server.power.PowerManagerService$LocalService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.power.PowerManagerService$LocalService: com.android.server.power.PowerManagerService this$0>;

        virtualinvoke $r1.<com.android.server.power.PowerManagerService: void uidIdleInternal(int)>(i0);

        return;
    }

    public void updateUidProcState(int, int)
    {
        com.android.server.power.PowerManagerService$LocalService r0;
        int i0, i1;
        com.android.server.power.PowerManagerService $r1;

        r0 := @this: com.android.server.power.PowerManagerService$LocalService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.power.PowerManagerService$LocalService: com.android.server.power.PowerManagerService this$0>;

        virtualinvoke $r1.<com.android.server.power.PowerManagerService: void updateUidProcStateInternal(int,int)>(i0, i1);

        return;
    }

    public boolean wasDeviceIdleFor(long)
    {
        com.android.server.power.PowerManagerService$LocalService r0;
        long l0;
        com.android.server.power.PowerManagerService $r1;
        boolean $z0;

        r0 := @this: com.android.server.power.PowerManagerService$LocalService;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.server.power.PowerManagerService$LocalService: com.android.server.power.PowerManagerService this$0>;

        $z0 = virtualinvoke $r1.<com.android.server.power.PowerManagerService: boolean wasDeviceIdleForInternal(long)>(l0);

        return $z0;
    }
}
