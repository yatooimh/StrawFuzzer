final class com.android.server.power.PowerManagerService$SuspendBlockerImpl extends java.lang.Object implements com.android.server.power.SuspendBlocker
{
    private final java.lang.String mName;
    private int mReferenceCount;
    private final java.lang.String mTraceName;
    final com.android.server.power.PowerManagerService this$0;

    public void <init>(com.android.server.power.PowerManagerService, java.lang.String)
    {
        com.android.server.power.PowerManagerService$SuspendBlockerImpl r0;
        java.lang.String r1, $r6;
        java.lang.StringBuilder $r2;
        com.android.server.power.PowerManagerService r7;

        r0 := @this: com.android.server.power.PowerManagerService$SuspendBlockerImpl;

        r7 := @parameter0: com.android.server.power.PowerManagerService;

        r1 := @parameter1: java.lang.String;

        r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: com.android.server.power.PowerManagerService this$0> = r7;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: java.lang.String mName> = r1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SuspendBlocker (");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: java.lang.String mTraceName> = $r6;

        return;
    }

    public void acquire()
    {
        com.android.server.power.PowerManagerService$SuspendBlockerImpl r0;
        int i0, $i1;
        java.lang.String $r2, $r5;
        com.android.server.power.PowerManagerService $r3;
        com.android.server.power.PowerManagerService$NativeWrapper $r4;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.power.PowerManagerService$SuspendBlockerImpl;

        entermonitor r0;

     label1:
        $i1 = r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: int mReferenceCount>;

        i0 = $i1 + 1;

        r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: int mReferenceCount> = i0;

     label2:
        if i0 != 1 goto label4;

     label3:
        $r2 = r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: java.lang.String mTraceName>;

        staticinvoke <android.os.Trace: void asyncTraceBegin(long,java.lang.String,int)>(131072L, $r2, 0);

        $r3 = r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: com.android.server.power.PowerManagerService this$0>;

        $r4 = staticinvoke <com.android.server.power.PowerManagerService: com.android.server.power.PowerManagerService$NativeWrapper access$4200(com.android.server.power.PowerManagerService)>($r3);

        $r5 = r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: java.lang.String mName>;

        virtualinvoke $r4.<com.android.server.power.PowerManagerService$NativeWrapper: void nativeAcquireSuspendBlocker(java.lang.String)>($r5);

     label4:
        exitmonitor r0;

     label5:
        return;

     label6:
        $r6 := @caughtexception;

     label7:
        exitmonitor r0;

     label8:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void dumpDebug(android.util.proto.ProtoOutputStream, long)
    {
        com.android.server.power.PowerManagerService$SuspendBlockerImpl r0;
        java.lang.String $r1;
        int $i0;
        java.lang.Throwable $r2;
        android.util.proto.ProtoOutputStream r3;
        long l1, l2;

        r0 := @this: com.android.server.power.PowerManagerService$SuspendBlockerImpl;

        r3 := @parameter0: android.util.proto.ProtoOutputStream;

        l1 := @parameter1: long;

        l2 = virtualinvoke r3.<android.util.proto.ProtoOutputStream: long start(long)>(l1);

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: java.lang.String mName>;

        virtualinvoke r3.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333441L, $r1);

        $i0 = r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: int mReferenceCount>;

        virtualinvoke r3.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464258L, $i0);

        exitmonitor r0;

     label2:
        virtualinvoke r3.<android.util.proto.ProtoOutputStream: void end(long)>(l2);

        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected void finalize() throws java.lang.Throwable
    {
        com.android.server.power.PowerManagerService$SuspendBlockerImpl r0;
        int $i0;
        java.lang.String $r2, $r5, $r8, $r9;
        com.android.server.power.PowerManagerService $r6;
        com.android.server.power.PowerManagerService$NativeWrapper $r7;
        java.lang.Throwable $r10;
        java.lang.StringBuilder r11;

        r0 := @this: com.android.server.power.PowerManagerService$SuspendBlockerImpl;

     label1:
        $i0 = r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: int mReferenceCount>;

        if $i0 == 0 goto label2;

        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Suspend blocker \"");

        $r2 = r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: java.lang.String mName>;

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" was finalized without being released!");

        $r5 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("PowerManagerService", $r5);

        r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: int mReferenceCount> = 0;

        $r6 = r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: com.android.server.power.PowerManagerService this$0>;

        $r7 = staticinvoke <com.android.server.power.PowerManagerService: com.android.server.power.PowerManagerService$NativeWrapper access$4200(com.android.server.power.PowerManagerService)>($r6);

        $r8 = r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: java.lang.String mName>;

        virtualinvoke $r7.<com.android.server.power.PowerManagerService$NativeWrapper: void nativeReleaseSuspendBlocker(java.lang.String)>($r8);

        $r9 = r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: java.lang.String mTraceName>;

        staticinvoke <android.os.Trace: void asyncTraceEnd(long,java.lang.String,int)>(131072L, $r9, 0);

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void release()
    {
        com.android.server.power.PowerManagerService$SuspendBlockerImpl r0;
        int i0, $i1;
        java.lang.Throwable r1, $r10;
        java.lang.String $r3, $r8, $r9, r12;
        com.android.server.power.PowerManagerService $r6;
        com.android.server.power.PowerManagerService$NativeWrapper $r7;
        java.lang.StringBuilder r11;

        r0 := @this: com.android.server.power.PowerManagerService$SuspendBlockerImpl;

        entermonitor r0;

     label01:
        $i1 = r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: int mReferenceCount>;

        i0 = $i1 - 1;

        r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: int mReferenceCount> = i0;

     label02:
        if i0 != 0 goto label05;

     label03:
        $r6 = r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: com.android.server.power.PowerManagerService this$0>;

        $r7 = staticinvoke <com.android.server.power.PowerManagerService: com.android.server.power.PowerManagerService$NativeWrapper access$4200(com.android.server.power.PowerManagerService)>($r6);

        $r8 = r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: java.lang.String mName>;

        virtualinvoke $r7.<com.android.server.power.PowerManagerService$NativeWrapper: void nativeReleaseSuspendBlocker(java.lang.String)>($r8);

        $r9 = r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: java.lang.String mTraceName>;

        staticinvoke <android.os.Trace: void asyncTraceEnd(long,java.lang.String,int)>(131072L, $r9, 0);

     label04:
        goto label07;

     label05:
        if i0 >= 0 goto label07;

     label06:
        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Suspend blocker \"");

        $r3 = r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: java.lang.String mName>;

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" was released without being acquired!");

        r12 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.String toString()>();

        r1 = new java.lang.Throwable;

        specialinvoke r1.<java.lang.Throwable: void <init>()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("PowerManagerService", r12, r1);

        r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: int mReferenceCount> = 0;

     label07:
        exitmonitor r0;

     label08:
        return;

     label09:
        $r10 := @caughtexception;

     label10:
        exitmonitor r0;

     label11:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public java.lang.String toString()
    {
        com.android.server.power.PowerManagerService$SuspendBlockerImpl r0;
        java.lang.String $r1, r7;
        int $i0;
        java.lang.Throwable $r5;
        java.lang.StringBuilder r6;

        r0 := @this: com.android.server.power.PowerManagerService$SuspendBlockerImpl;

        entermonitor r0;

     label1:
        r6 = new java.lang.StringBuilder;

        specialinvoke r6.<java.lang.StringBuilder: void <init>()>();

        $r1 = r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: java.lang.String mName>;

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ref count=");

        $i0 = r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: int mReferenceCount>;

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        r7 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>();

        exitmonitor r0;

     label2:
        return r7;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
