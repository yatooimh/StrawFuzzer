class com.android.server.power.PowerManagerShellCommand extends android.os.ShellCommand
{
    private static final int LOW_POWER_MODE_ON;
    final android.os.IPowerManager mInterface;

    void <init>(android.os.IPowerManager)
    {
        com.android.server.power.PowerManagerShellCommand r0;
        android.os.IPowerManager r1;

        r0 := @this: com.android.server.power.PowerManagerShellCommand;

        r1 := @parameter0: android.os.IPowerManager;

        specialinvoke r0.<android.os.ShellCommand: void <init>()>();

        r0.<com.android.server.power.PowerManagerShellCommand: android.os.IPowerManager mInterface> = r1;

        return;
    }

    private int runSetAdaptiveEnabled() throws android.os.RemoteException
    {
        com.android.server.power.PowerManagerShellCommand r0;
        android.os.IPowerManager $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: com.android.server.power.PowerManagerShellCommand;

        $r1 = r0.<com.android.server.power.PowerManagerShellCommand: android.os.IPowerManager mInterface>;

        $r2 = virtualinvoke r0.<com.android.server.power.PowerManagerShellCommand: java.lang.String getNextArgRequired()>();

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2);

        interfaceinvoke $r1.<android.os.IPowerManager: boolean setAdaptivePowerSaveEnabled(boolean)>($z0);

        return 0;
    }

    private int runSetFixedPerformanceModeEnabled() throws android.os.RemoteException
    {
        com.android.server.power.PowerManagerShellCommand r0;
        boolean z0, $z1;
        java.io.PrintWriter r1;
        android.os.IPowerManager $r2;
        java.lang.String $r3;
        byte b0;

        r0 := @this: com.android.server.power.PowerManagerShellCommand;

        $r2 = r0.<com.android.server.power.PowerManagerShellCommand: android.os.IPowerManager mInterface>;

        $r3 = virtualinvoke r0.<com.android.server.power.PowerManagerShellCommand: java.lang.String getNextArgRequired()>();

        $z1 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r3);

        z0 = interfaceinvoke $r2.<android.os.IPowerManager: boolean setPowerModeChecked(int,boolean)>(3, $z1);

        if z0 != 0 goto label1;

        r1 = virtualinvoke r0.<com.android.server.power.PowerManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Failed to set FIXED_PERFORMANCE mode");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("This is likely because Power HAL AIDL is not implemented on this device");

     label1:
        if z0 == 0 goto label2;

        b0 = 0;

        goto label3;

     label2:
        b0 = -1;

     label3:
        return b0;
    }

    private int runSetMode() throws android.os.RemoteException
    {
        com.android.server.power.PowerManagerShellCommand r0;
        java.io.PrintWriter r1;
        int i0;
        java.lang.String $r3, $r7, $r9;
        java.lang.RuntimeException $r4;
        java.lang.StringBuilder $r5;
        android.os.IPowerManager r10;
        boolean z1;

        r0 := @this: com.android.server.power.PowerManagerShellCommand;

        r1 = virtualinvoke r0.<com.android.server.power.PowerManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

     label1:
        $r3 = virtualinvoke r0.<com.android.server.power.PowerManagerShellCommand: java.lang.String getNextArgRequired()>();

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

     label2:
        r10 = r0.<com.android.server.power.PowerManagerShellCommand: android.os.IPowerManager mInterface>;

        z1 = 1;

        if i0 != 1 goto label3;

        goto label4;

     label3:
        z1 = 0;

     label4:
        interfaceinvoke r10.<android.os.IPowerManager: boolean setPowerSaveModeEnabled(boolean)>(z1);

        return 0;

     label5:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: ");

        $r7 = virtualinvoke $r4.<java.lang.RuntimeException: java.lang.String toString()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        return -1;

        catch java.lang.RuntimeException from label1 to label2 with label5;
    }

    public int onCommand(java.lang.String)
    {
        com.android.server.power.PowerManagerShellCommand r0;
        java.io.PrintWriter r1;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i3, i4, i6;
        android.os.RemoteException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r7, r8;
        byte b5;

        r0 := @this: com.android.server.power.PowerManagerShellCommand;

        r8 := @parameter0: java.lang.String;

        if r8 != null goto label01;

        $i3 = virtualinvoke r0.<com.android.server.power.PowerManagerShellCommand: int handleDefaultCommands(java.lang.String)>(r8);

        return $i3;

     label01:
        r1 = virtualinvoke r0.<com.android.server.power.PowerManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

     label02:
        i4 = virtualinvoke r8.<java.lang.String: int hashCode()>();

     label03:
        if i4 == -531688203 goto label09;

        if i4 == 1032507032 goto label07;

        if i4 == 1369181230 goto label05;

     label04:
        goto label11;

     label05:
        $z2 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("set-mode");

        if $z2 == 0 goto label04;

     label06:
        b5 = 1;

        goto label12;

     label07:
        $z1 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("set-fixed-performance-mode-enabled");

        if $z1 == 0 goto label04;

     label08:
        b5 = 2;

        goto label12;

     label09:
        $z0 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("set-adaptive-power-saver-enabled");

        if $z0 == 0 goto label04;

     label10:
        b5 = 0;

        goto label12;

     label11:
        b5 = -1;

     label12:
        if b5 == 0 goto label16;

        if b5 == 1 goto label15;

        if b5 == 2 goto label14;

     label13:
        $i2 = virtualinvoke r0.<com.android.server.power.PowerManagerShellCommand: int handleDefaultCommands(java.lang.String)>(r8);

        return $i2;

     label14:
        $i1 = specialinvoke r0.<com.android.server.power.PowerManagerShellCommand: int runSetFixedPerformanceModeEnabled()>();

        return $i1;

     label15:
        $i0 = specialinvoke r0.<com.android.server.power.PowerManagerShellCommand: int runSetMode()>();

        return $i0;

     label16:
        i6 = specialinvoke r0.<com.android.server.power.PowerManagerShellCommand: int runSetAdaptiveEnabled()>();

     label17:
        return i6;

     label18:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remote exception: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        return -1;

        catch android.os.RemoteException from label02 to label03 with label18;
        catch android.os.RemoteException from label05 to label06 with label18;
        catch android.os.RemoteException from label07 to label08 with label18;
        catch android.os.RemoteException from label09 to label10 with label18;
        catch android.os.RemoteException from label13 to label14 with label18;
        catch android.os.RemoteException from label14 to label15 with label18;
        catch android.os.RemoteException from label15 to label16 with label18;
        catch android.os.RemoteException from label16 to label17 with label18;
    }

    public void onHelp()
    {
        com.android.server.power.PowerManagerShellCommand r0;
        java.io.PrintWriter r1;

        r0 := @this: com.android.server.power.PowerManagerShellCommand;

        r1 = virtualinvoke r0.<com.android.server.power.PowerManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Power manager (power) commands:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  help");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Print this help text.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  set-adaptive-power-saver-enabled [true|false]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    enables or disables adaptive power saver.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  set-mode MODE");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    sets the power mode of the device to MODE.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    1 turns low power mode on and 0 turns low power mode off.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  set-fixed-performance-mode-enabled [true|false]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    enables or disables fixed performance mode");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    note: this will affect system performance and should only be used");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("          during development");

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        staticinvoke <android.content.Intent: void printIntentArgsHelp(java.io.PrintWriter,java.lang.String)>(r1, "");

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.power.PowerManagerShellCommand: int LOW_POWER_MODE_ON> = 1;

        return;
    }
}
