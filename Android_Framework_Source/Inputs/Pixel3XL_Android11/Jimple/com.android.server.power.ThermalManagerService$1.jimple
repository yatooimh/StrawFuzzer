class com.android.server.power.ThermalManagerService$1 extends android.os.IThermalService$Stub
{
    final com.android.server.power.ThermalManagerService this$0;

    void <init>(com.android.server.power.ThermalManagerService)
    {
        com.android.server.power.ThermalManagerService$1 r0;
        com.android.server.power.ThermalManagerService r1;

        r0 := @this: com.android.server.power.ThermalManagerService$1;

        r1 := @parameter0: com.android.server.power.ThermalManagerService;

        r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0> = r1;

        specialinvoke r0.<android.os.IThermalService$Stub: void <init>()>();

        return;
    }

    private void dumpItemsLocked(java.io.PrintWriter, java.lang.String, java.util.Collection)
    {
        com.android.server.power.ThermalManagerService$1 r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r7, $r9;
        boolean $z0;
        java.lang.StringBuilder $r4;
        java.lang.Object $r6;
        java.util.Collection r10;
        java.util.Iterator r11;

        r0 := @this: com.android.server.power.ThermalManagerService$1;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        r10 := @parameter2: java.util.Collection;

        r11 = interfaceinvoke r10.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r6 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        goto label1;

     label2:
        return;
    }

    private boolean isCallerShell()
    {
        com.android.server.power.ThermalManagerService$1 r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.server.power.ThermalManagerService$1;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i0 == 2000 goto label2;

        if i0 != 0 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.power.ThermalManagerService$1 r0;
        long l0;
        com.android.server.power.ThermalManagerService $r1, $r4, $r6, $r9, $r11, $r14, $r17, $r21, $r25, $r27, $r29, $r32;
        android.content.Context $r2;
        java.lang.String $r3, $r8, $r16, $r24;
        boolean $z0, $z1, $z2, $z3;
        android.os.RemoteCallbackList $r10, $r12;
        int $i1;
        android.util.ArrayMap $r18;
        java.util.Collection $r19;
        java.util.concurrent.atomic.AtomicBoolean $r22, $r26;
        com.android.server.power.ThermalManagerService$ThermalHalWrapper $r28, $r30, $r33;
        java.util.List $r31, $r34;
        java.lang.Throwable $r35, $r36;
        java.io.FileDescriptor r37;
        java.io.PrintWriter r38;
        java.lang.String[] r39;
        java.lang.Object r40;
        java.lang.StringBuilder r41, r42, r43;

        r0 := @this: com.android.server.power.ThermalManagerService$1;

        r37 := @parameter0: java.io.FileDescriptor;

        r38 := @parameter1: java.io.PrintWriter;

        r39 := @parameter2: java.lang.String[];

        $r1 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.power.ThermalManagerService: android.content.Context getContext()>();

        $r3 = staticinvoke <com.android.server.power.ThermalManagerService: java.lang.String access$800()>();

        $z0 = staticinvoke <com.android.internal.util.DumpUtils: boolean checkDumpPermission(android.content.Context,java.lang.String,java.io.PrintWriter)>($r2, $r3, r38);

        if $z0 != 0 goto label1;

        return;

     label1:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r4 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        r40 = staticinvoke <com.android.server.power.ThermalManagerService: java.lang.Object access$000(com.android.server.power.ThermalManagerService)>($r4);

        entermonitor r40;

     label3:
        r41 = new java.lang.StringBuilder;

        specialinvoke r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IsStatusOverride: ");

        $r6 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        $z1 = staticinvoke <com.android.server.power.ThermalManagerService: boolean access$900(com.android.server.power.ThermalManagerService)>($r6);

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r8 = virtualinvoke r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r38.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        virtualinvoke r38.<java.io.PrintWriter: void println(java.lang.String)>("ThermalEventListeners:");

        $r9 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        $r10 = staticinvoke <com.android.server.power.ThermalManagerService: android.os.RemoteCallbackList access$100(com.android.server.power.ThermalManagerService)>($r9);

        virtualinvoke $r10.<android.os.RemoteCallbackList: void dump(java.io.PrintWriter,java.lang.String)>(r38, "\t");

        virtualinvoke r38.<java.io.PrintWriter: void println(java.lang.String)>("ThermalStatusListeners:");

        $r11 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        $r12 = staticinvoke <com.android.server.power.ThermalManagerService: android.os.RemoteCallbackList access$500(com.android.server.power.ThermalManagerService)>($r11);

        virtualinvoke $r12.<android.os.RemoteCallbackList: void dump(java.io.PrintWriter,java.lang.String)>(r38, "\t");

        r42 = new java.lang.StringBuilder;

        specialinvoke r42.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Thermal Status: ");

        $r14 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        $i1 = staticinvoke <com.android.server.power.ThermalManagerService: int access$700(com.android.server.power.ThermalManagerService)>($r14);

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r16 = virtualinvoke r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r38.<java.io.PrintWriter: void println(java.lang.String)>($r16);

        virtualinvoke r38.<java.io.PrintWriter: void println(java.lang.String)>("Cached temperatures:");

        $r17 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        $r18 = staticinvoke <com.android.server.power.ThermalManagerService: android.util.ArrayMap access$1000(com.android.server.power.ThermalManagerService)>($r17);

        $r19 = virtualinvoke $r18.<android.util.ArrayMap: java.util.Collection values()>();

        specialinvoke r0.<com.android.server.power.ThermalManagerService$1: void dumpItemsLocked(java.io.PrintWriter,java.lang.String,java.util.Collection)>(r38, "\t", $r19);

        r43 = new java.lang.StringBuilder;

        specialinvoke r43.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HAL Ready: ");

        $r21 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        $r22 = staticinvoke <com.android.server.power.ThermalManagerService: java.util.concurrent.atomic.AtomicBoolean access$300(com.android.server.power.ThermalManagerService)>($r21);

        $z2 = virtualinvoke $r22.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r24 = virtualinvoke r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r38.<java.io.PrintWriter: void println(java.lang.String)>($r24);

        $r25 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        $r26 = staticinvoke <com.android.server.power.ThermalManagerService: java.util.concurrent.atomic.AtomicBoolean access$300(com.android.server.power.ThermalManagerService)>($r25);

        $z3 = virtualinvoke $r26.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z3 == 0 goto label4;

        virtualinvoke r38.<java.io.PrintWriter: void println(java.lang.String)>("HAL connection:");

        $r27 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        $r28 = staticinvoke <com.android.server.power.ThermalManagerService: com.android.server.power.ThermalManagerService$ThermalHalWrapper access$400(com.android.server.power.ThermalManagerService)>($r27);

        virtualinvoke $r28.<com.android.server.power.ThermalManagerService$ThermalHalWrapper: void dump(java.io.PrintWriter,java.lang.String)>(r38, "\t");

        virtualinvoke r38.<java.io.PrintWriter: void println(java.lang.String)>("Current temperatures from HAL:");

        $r29 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        $r30 = staticinvoke <com.android.server.power.ThermalManagerService: com.android.server.power.ThermalManagerService$ThermalHalWrapper access$400(com.android.server.power.ThermalManagerService)>($r29);

        $r31 = virtualinvoke $r30.<com.android.server.power.ThermalManagerService$ThermalHalWrapper: java.util.List getCurrentTemperatures(boolean,int)>(0, 0);

        specialinvoke r0.<com.android.server.power.ThermalManagerService$1: void dumpItemsLocked(java.io.PrintWriter,java.lang.String,java.util.Collection)>(r38, "\t", $r31);

        virtualinvoke r38.<java.io.PrintWriter: void println(java.lang.String)>("Current cooling devices from HAL:");

        $r32 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        $r33 = staticinvoke <com.android.server.power.ThermalManagerService: com.android.server.power.ThermalManagerService$ThermalHalWrapper access$400(com.android.server.power.ThermalManagerService)>($r32);

        $r34 = virtualinvoke $r33.<com.android.server.power.ThermalManagerService$ThermalHalWrapper: java.util.List getCurrentCoolingDevices(boolean,int)>(0, 0);

        specialinvoke r0.<com.android.server.power.ThermalManagerService$1: void dumpItemsLocked(java.io.PrintWriter,java.lang.String,java.util.Collection)>(r38, "\t", $r34);

     label4:
        exitmonitor r40;

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label6:
        $r36 := @caughtexception;

     label7:
        exitmonitor r40;

     label8:
        throw $r36;

     label9:
        $r35 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r35;

        catch java.lang.Throwable from label2 to label3 with label9;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
        catch java.lang.Throwable from label8 to label9 with label9;
    }

    public android.os.CoolingDevice[] getCurrentCoolingDevices()
    {
        com.android.server.power.ThermalManagerService$1 r0;
        long l0;
        com.android.server.power.ThermalManagerService $r1, $r3, $r5;
        android.content.Context $r2;
        java.util.concurrent.atomic.AtomicBoolean $r4;
        boolean $z0;
        com.android.server.power.ThermalManagerService$ThermalHalWrapper $r6;
        int $i1;
        android.os.CoolingDevice[] $r7, $r9, r12;
        java.lang.Object[] $r8;
        java.lang.Throwable $r10;
        java.util.List r11;

        r0 := @this: com.android.server.power.ThermalManagerService$1;

        $r1 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.power.ThermalManagerService: android.content.Context getContext()>();

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DEVICE_POWER", null);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        $r4 = staticinvoke <com.android.server.power.ThermalManagerService: java.util.concurrent.atomic.AtomicBoolean access$300(com.android.server.power.ThermalManagerService)>($r3);

        $z0 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 != 0 goto label3;

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        $r9 = newarray (android.os.CoolingDevice)[0];

        return $r9;

     label3:
        $r5 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        $r6 = staticinvoke <com.android.server.power.ThermalManagerService: com.android.server.power.ThermalManagerService$ThermalHalWrapper access$400(com.android.server.power.ThermalManagerService)>($r5);

        r11 = virtualinvoke $r6.<com.android.server.power.ThermalManagerService$ThermalHalWrapper: java.util.List getCurrentCoolingDevices(boolean,int)>(0, 0);

        $i1 = interfaceinvoke r11.<java.util.List: int size()>();

        $r7 = newarray (android.os.CoolingDevice)[$i1];

        $r8 = interfaceinvoke r11.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        r12 = (android.os.CoolingDevice[]) $r8;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return r12;

     label5:
        $r10 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.os.CoolingDevice[] getCurrentCoolingDevicesWithType(int)
    {
        com.android.server.power.ThermalManagerService$1 r0;
        int i0, $i2;
        long l1;
        com.android.server.power.ThermalManagerService $r1, $r3, $r5;
        android.content.Context $r2;
        java.util.concurrent.atomic.AtomicBoolean $r4;
        boolean $z0;
        com.android.server.power.ThermalManagerService$ThermalHalWrapper $r6;
        android.os.CoolingDevice[] $r7, $r9, r12;
        java.lang.Object[] $r8;
        java.lang.Throwable $r10;
        java.util.List r11;

        r0 := @this: com.android.server.power.ThermalManagerService$1;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.power.ThermalManagerService: android.content.Context getContext()>();

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DEVICE_POWER", null);

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        $r4 = staticinvoke <com.android.server.power.ThermalManagerService: java.util.concurrent.atomic.AtomicBoolean access$300(com.android.server.power.ThermalManagerService)>($r3);

        $z0 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 != 0 goto label3;

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        $r9 = newarray (android.os.CoolingDevice)[0];

        return $r9;

     label3:
        $r5 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        $r6 = staticinvoke <com.android.server.power.ThermalManagerService: com.android.server.power.ThermalManagerService$ThermalHalWrapper access$400(com.android.server.power.ThermalManagerService)>($r5);

        r11 = virtualinvoke $r6.<com.android.server.power.ThermalManagerService$ThermalHalWrapper: java.util.List getCurrentCoolingDevices(boolean,int)>(1, i0);

        $i2 = interfaceinvoke r11.<java.util.List: int size()>();

        $r7 = newarray (android.os.CoolingDevice)[$i2];

        $r8 = interfaceinvoke r11.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        r12 = (android.os.CoolingDevice[]) $r8;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return r12;

     label5:
        $r10 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.os.Temperature[] getCurrentTemperatures()
    {
        com.android.server.power.ThermalManagerService$1 r0;
        long l0;
        com.android.server.power.ThermalManagerService $r1, $r3, $r5;
        android.content.Context $r2;
        java.util.concurrent.atomic.AtomicBoolean $r4;
        boolean $z0;
        com.android.server.power.ThermalManagerService$ThermalHalWrapper $r6;
        int $i1;
        android.os.Temperature[] $r7, $r9, r12;
        java.lang.Object[] $r8;
        java.lang.Throwable $r10;
        java.util.List r11;

        r0 := @this: com.android.server.power.ThermalManagerService$1;

        $r1 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.power.ThermalManagerService: android.content.Context getContext()>();

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DEVICE_POWER", null);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        $r4 = staticinvoke <com.android.server.power.ThermalManagerService: java.util.concurrent.atomic.AtomicBoolean access$300(com.android.server.power.ThermalManagerService)>($r3);

        $z0 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 != 0 goto label3;

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        $r9 = newarray (android.os.Temperature)[0];

        return $r9;

     label3:
        $r5 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        $r6 = staticinvoke <com.android.server.power.ThermalManagerService: com.android.server.power.ThermalManagerService$ThermalHalWrapper access$400(com.android.server.power.ThermalManagerService)>($r5);

        r11 = virtualinvoke $r6.<com.android.server.power.ThermalManagerService$ThermalHalWrapper: java.util.List getCurrentTemperatures(boolean,int)>(0, 0);

        $i1 = interfaceinvoke r11.<java.util.List: int size()>();

        $r7 = newarray (android.os.Temperature)[$i1];

        $r8 = interfaceinvoke r11.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        r12 = (android.os.Temperature[]) $r8;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return r12;

     label5:
        $r10 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.os.Temperature[] getCurrentTemperaturesWithType(int)
    {
        com.android.server.power.ThermalManagerService$1 r0;
        int i0, $i2;
        long l1;
        com.android.server.power.ThermalManagerService $r1, $r3, $r5;
        android.content.Context $r2;
        java.util.concurrent.atomic.AtomicBoolean $r4;
        boolean $z0;
        com.android.server.power.ThermalManagerService$ThermalHalWrapper $r6;
        android.os.Temperature[] $r7, $r9, r12;
        java.lang.Object[] $r8;
        java.lang.Throwable $r10;
        java.util.List r11;

        r0 := @this: com.android.server.power.ThermalManagerService$1;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.power.ThermalManagerService: android.content.Context getContext()>();

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DEVICE_POWER", null);

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        $r4 = staticinvoke <com.android.server.power.ThermalManagerService: java.util.concurrent.atomic.AtomicBoolean access$300(com.android.server.power.ThermalManagerService)>($r3);

        $z0 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 != 0 goto label3;

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        $r9 = newarray (android.os.Temperature)[0];

        return $r9;

     label3:
        $r5 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        $r6 = staticinvoke <com.android.server.power.ThermalManagerService: com.android.server.power.ThermalManagerService$ThermalHalWrapper access$400(com.android.server.power.ThermalManagerService)>($r5);

        r11 = virtualinvoke $r6.<com.android.server.power.ThermalManagerService$ThermalHalWrapper: java.util.List getCurrentTemperatures(boolean,int)>(1, i0);

        $i2 = interfaceinvoke r11.<java.util.List: int size()>();

        $r7 = newarray (android.os.Temperature)[$i2];

        $r8 = interfaceinvoke r11.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        r12 = (android.os.Temperature[]) $r8;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return r12;

     label5:
        $r10 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getCurrentThermalStatus()
    {
        com.android.server.power.ThermalManagerService$1 r0;
        java.lang.Object r1;
        long l0;
        int i1;
        com.android.server.power.ThermalManagerService $r2, $r3;
        java.lang.Throwable $r4, $r5;

        r0 := @this: com.android.server.power.ThermalManagerService$1;

        $r2 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        r1 = staticinvoke <com.android.server.power.ThermalManagerService: java.lang.Object access$000(com.android.server.power.ThermalManagerService)>($r2);

        entermonitor r1;

     label01:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r3 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        i1 = staticinvoke <com.android.server.power.ThermalManagerService: int access$700(com.android.server.power.ThermalManagerService)>($r3);

     label03:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        exitmonitor r1;

     label04:
        return i1;

     label05:
        $r5 := @caughtexception;

     label06:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label07:
        throw $r5;

     label08:
        $r4 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public float getThermalHeadroom(int)
    {
        com.android.server.power.ThermalManagerService$1 r0;
        int i0;
        com.android.server.power.ThermalManagerService $r1, $r3;
        java.util.concurrent.atomic.AtomicBoolean $r2;
        boolean $z0;
        com.android.server.power.ThermalManagerService$TemperatureWatcher $r4;
        float $f0;

        r0 := @this: com.android.server.power.ThermalManagerService$1;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        $r2 = staticinvoke <com.android.server.power.ThermalManagerService: java.util.concurrent.atomic.AtomicBoolean access$300(com.android.server.power.ThermalManagerService)>($r1);

        $z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 != 0 goto label1;

        return #NaNF;

     label1:
        $r3 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        $r4 = $r3.<com.android.server.power.ThermalManagerService: com.android.server.power.ThermalManagerService$TemperatureWatcher mTemperatureWatcher>;

        $f0 = virtualinvoke $r4.<com.android.server.power.ThermalManagerService$TemperatureWatcher: float getForecast(int)>(i0);

        return $f0;
    }

    public void onShellCommand(java.io.FileDescriptor, java.io.FileDescriptor, java.io.FileDescriptor, java.lang.String[], android.os.ShellCallback, android.os.ResultReceiver)
    {
        com.android.server.power.ThermalManagerService$1 r0;
        java.io.FileDescriptor r1, r2, r3;
        java.lang.String[] r4;
        android.os.ShellCallback r5;
        android.os.ResultReceiver r6;
        boolean $z0;
        com.android.server.power.ThermalManagerService$ThermalShellCommand $r7;
        com.android.server.power.ThermalManagerService $r8;
        java.lang.String $r9;

        r0 := @this: com.android.server.power.ThermalManagerService$1;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.FileDescriptor;

        r3 := @parameter2: java.io.FileDescriptor;

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: android.os.ShellCallback;

        r6 := @parameter5: android.os.ResultReceiver;

        $z0 = specialinvoke r0.<com.android.server.power.ThermalManagerService$1: boolean isCallerShell()>();

        if $z0 != 0 goto label1;

        $r9 = staticinvoke <com.android.server.power.ThermalManagerService: java.lang.String access$800()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r9, "Only shell is allowed to call thermalservice shell commands");

        return;

     label1:
        $r7 = new com.android.server.power.ThermalManagerService$ThermalShellCommand;

        $r8 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        specialinvoke $r7.<com.android.server.power.ThermalManagerService$ThermalShellCommand: void <init>(com.android.server.power.ThermalManagerService)>($r8);

        virtualinvoke $r7.<com.android.server.power.ThermalManagerService$ThermalShellCommand: int exec(android.os.Binder,java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>(r0, r1, r2, r3, r4, r5, r6);

        return;
    }

    public boolean registerThermalEventListener(android.os.IThermalEventListener)
    {
        com.android.server.power.ThermalManagerService$1 r0;
        java.lang.Object r1;
        long l0;
        boolean z0;
        com.android.server.power.ThermalManagerService $r2, $r4, $r5, $r7;
        android.content.Context $r3;
        android.os.RemoteCallbackList $r6;
        java.lang.Throwable $r8, $r9;
        android.os.IThermalEventListener r10;

        r0 := @this: com.android.server.power.ThermalManagerService$1;

        r10 := @parameter0: android.os.IThermalEventListener;

        $r2 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        $r3 = virtualinvoke $r2.<com.android.server.power.ThermalManagerService: android.content.Context getContext()>();

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DEVICE_POWER", null);

        $r4 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        r1 = staticinvoke <com.android.server.power.ThermalManagerService: java.lang.Object access$000(com.android.server.power.ThermalManagerService)>($r4);

        entermonitor r1;

     label01:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r5 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        $r6 = staticinvoke <com.android.server.power.ThermalManagerService: android.os.RemoteCallbackList access$100(com.android.server.power.ThermalManagerService)>($r5);

        z0 = virtualinvoke $r6.<android.os.RemoteCallbackList: boolean register(android.os.IInterface,java.lang.Object)>(r10, null);

     label03:
        if z0 != 0 goto label06;

     label04:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        exitmonitor r1;

     label05:
        return 0;

     label06:
        $r7 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        staticinvoke <com.android.server.power.ThermalManagerService: void access$200(com.android.server.power.ThermalManagerService,android.os.IThermalEventListener,java.lang.Integer)>($r7, r10, null);

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        exitmonitor r1;

     label08:
        return 1;

     label09:
        $r8 := @caughtexception;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label11:
        throw $r8;

     label12:
        $r9 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label11 to label12 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public boolean registerThermalEventListenerWithType(android.os.IThermalEventListener, int)
    {
        com.android.server.power.ThermalManagerService$1 r0;
        int i0;
        java.lang.Object r1;
        long l1;
        boolean z0;
        com.android.server.power.ThermalManagerService $r2, $r4, $r5, r11;
        android.content.Context $r3;
        java.lang.Throwable $r6, $r7;
        android.os.IThermalEventListener r8;
        android.os.RemoteCallbackList r9;
        java.lang.Integer r10, r12;

        r0 := @this: com.android.server.power.ThermalManagerService$1;

        r8 := @parameter0: android.os.IThermalEventListener;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        $r3 = virtualinvoke $r2.<com.android.server.power.ThermalManagerService: android.content.Context getContext()>();

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DEVICE_POWER", null);

        $r4 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        r1 = staticinvoke <com.android.server.power.ThermalManagerService: java.lang.Object access$000(com.android.server.power.ThermalManagerService)>($r4);

        entermonitor r1;

     label01:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r5 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        r9 = staticinvoke <com.android.server.power.ThermalManagerService: android.os.RemoteCallbackList access$100(com.android.server.power.ThermalManagerService)>($r5);

        r10 = new java.lang.Integer;

        specialinvoke r10.<java.lang.Integer: void <init>(int)>(i0);

        z0 = virtualinvoke r9.<android.os.RemoteCallbackList: boolean register(android.os.IInterface,java.lang.Object)>(r8, r10);

     label03:
        if z0 != 0 goto label06;

     label04:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        exitmonitor r1;

     label05:
        return 0;

     label06:
        r11 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        r12 = new java.lang.Integer;

        specialinvoke r12.<java.lang.Integer: void <init>(int)>(i0);

        staticinvoke <com.android.server.power.ThermalManagerService: void access$200(com.android.server.power.ThermalManagerService,android.os.IThermalEventListener,java.lang.Integer)>(r11, r8, r12);

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        exitmonitor r1;

     label08:
        return 1;

     label09:
        $r7 := @caughtexception;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

     label11:
        throw $r7;

     label12:
        $r6 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label11 to label12 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public boolean registerThermalStatusListener(android.os.IThermalStatusListener)
    {
        com.android.server.power.ThermalManagerService$1 r0;
        java.lang.Object r1;
        long l0;
        boolean z0;
        com.android.server.power.ThermalManagerService $r2, $r3, $r5;
        android.os.RemoteCallbackList $r4;
        java.lang.Throwable $r6, $r7;
        android.os.IThermalStatusListener r8;

        r0 := @this: com.android.server.power.ThermalManagerService$1;

        r8 := @parameter0: android.os.IThermalStatusListener;

        $r2 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        r1 = staticinvoke <com.android.server.power.ThermalManagerService: java.lang.Object access$000(com.android.server.power.ThermalManagerService)>($r2);

        entermonitor r1;

     label01:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r3 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        $r4 = staticinvoke <com.android.server.power.ThermalManagerService: android.os.RemoteCallbackList access$500(com.android.server.power.ThermalManagerService)>($r3);

        z0 = virtualinvoke $r4.<android.os.RemoteCallbackList: boolean register(android.os.IInterface)>(r8);

     label03:
        if z0 != 0 goto label06;

     label04:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        exitmonitor r1;

     label05:
        return 0;

     label06:
        $r5 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        staticinvoke <com.android.server.power.ThermalManagerService: void access$600(com.android.server.power.ThermalManagerService,android.os.IThermalStatusListener)>($r5, r8);

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        exitmonitor r1;

     label08:
        return 1;

     label09:
        $r6 := @caughtexception;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label11:
        throw $r6;

     label12:
        $r7 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label11 to label12 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public boolean unregisterThermalEventListener(android.os.IThermalEventListener)
    {
        com.android.server.power.ThermalManagerService$1 r0;
        java.lang.Object r1;
        long l0;
        boolean z0;
        com.android.server.power.ThermalManagerService $r2, $r4, $r5;
        android.content.Context $r3;
        android.os.RemoteCallbackList $r6;
        java.lang.Throwable $r7, $r8;
        android.os.IThermalEventListener r9;

        r0 := @this: com.android.server.power.ThermalManagerService$1;

        r9 := @parameter0: android.os.IThermalEventListener;

        $r2 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        $r3 = virtualinvoke $r2.<com.android.server.power.ThermalManagerService: android.content.Context getContext()>();

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DEVICE_POWER", null);

        $r4 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        r1 = staticinvoke <com.android.server.power.ThermalManagerService: java.lang.Object access$000(com.android.server.power.ThermalManagerService)>($r4);

        entermonitor r1;

     label01:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r5 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        $r6 = staticinvoke <com.android.server.power.ThermalManagerService: android.os.RemoteCallbackList access$100(com.android.server.power.ThermalManagerService)>($r5);

        z0 = virtualinvoke $r6.<android.os.RemoteCallbackList: boolean unregister(android.os.IInterface)>(r9);

     label03:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        exitmonitor r1;

     label04:
        return z0;

     label05:
        $r7 := @caughtexception;

     label06:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label07:
        throw $r7;

     label08:
        $r8 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public boolean unregisterThermalStatusListener(android.os.IThermalStatusListener)
    {
        com.android.server.power.ThermalManagerService$1 r0;
        java.lang.Object r1;
        long l0;
        boolean z0;
        com.android.server.power.ThermalManagerService $r2, $r3;
        android.os.RemoteCallbackList $r4;
        java.lang.Throwable $r5, $r6;
        android.os.IThermalStatusListener r7;

        r0 := @this: com.android.server.power.ThermalManagerService$1;

        r7 := @parameter0: android.os.IThermalStatusListener;

        $r2 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        r1 = staticinvoke <com.android.server.power.ThermalManagerService: java.lang.Object access$000(com.android.server.power.ThermalManagerService)>($r2);

        entermonitor r1;

     label01:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r3 = r0.<com.android.server.power.ThermalManagerService$1: com.android.server.power.ThermalManagerService this$0>;

        $r4 = staticinvoke <com.android.server.power.ThermalManagerService: android.os.RemoteCallbackList access$500(com.android.server.power.ThermalManagerService)>($r3);

        z0 = virtualinvoke $r4.<android.os.RemoteCallbackList: boolean unregister(android.os.IInterface)>(r7);

     label03:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        exitmonitor r1;

     label04:
        return z0;

     label05:
        $r6 := @caughtexception;

     label06:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label07:
        throw $r6;

     label08:
        $r5 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }
}
