class com.android.server.power.ThermalManagerService$TemperatureWatcher extends java.lang.Object
{
    private static final float DEGREES_BETWEEN_ZERO_AND_ONE;
    private static final int INACTIVITY_THRESHOLD_MILLIS;
    private static final int MINIMUM_SAMPLE_COUNT;
    private static final int RING_BUFFER_SIZE;
    private final android.os.Handler mHandler;
    private long mLastForecastCallTimeMillis;
    final android.util.ArrayMap mSamples;
    android.util.ArrayMap mSevereThresholds;
    final com.android.server.power.ThermalManagerService this$0;

    void <init>(com.android.server.power.ThermalManagerService)
    {
        com.android.server.power.ThermalManagerService$TemperatureWatcher r0;
        com.android.server.power.ThermalManagerService r1;
        android.os.Handler $r2;
        android.util.ArrayMap $r3, $r4;

        r0 := @this: com.android.server.power.ThermalManagerService$TemperatureWatcher;

        r1 := @parameter0: com.android.server.power.ThermalManagerService;

        r0.<com.android.server.power.ThermalManagerService$TemperatureWatcher: com.android.server.power.ThermalManagerService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.android.internal.os.BackgroundThread: android.os.Handler getHandler()>();

        r0.<com.android.server.power.ThermalManagerService$TemperatureWatcher: android.os.Handler mHandler> = $r2;

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.power.ThermalManagerService$TemperatureWatcher: android.util.ArrayMap mSamples> = $r3;

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.power.ThermalManagerService$TemperatureWatcher: android.util.ArrayMap mSevereThresholds> = $r4;

        r0.<com.android.server.power.ThermalManagerService$TemperatureWatcher: long mLastForecastCallTimeMillis> = 0L;

        return;
    }

    public static void lambda$JYrkaQF5G_b3JlK-Z9IVPBOdj94(com.android.server.power.ThermalManagerService$TemperatureWatcher)
    {
        com.android.server.power.ThermalManagerService$TemperatureWatcher r0;

        r0 := @parameter0: com.android.server.power.ThermalManagerService$TemperatureWatcher;

        specialinvoke r0.<com.android.server.power.ThermalManagerService$TemperatureWatcher: void updateTemperature()>();

        return;
    }

    static java.util.ArrayList lambda$updateTemperature$0(java.lang.String)
    {
        java.lang.String r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(30);

        return $r1;
    }

    private void updateTemperature()
    {
        com.android.server.power.ThermalManagerService$TemperatureWatcher r0;
        android.util.ArrayMap r1, $r4, $r8;
        long l0, $l1, $l2, $l3;
        java.util.List r2;
        byte $b4;
        com.android.server.power.ThermalManagerService $r5;
        com.android.server.power.ThermalManagerService$ThermalHalWrapper $r6;
        int $i5, $i6, i7;
        java.lang.Object $r7, $r11;
        float $f0, $f1;
        boolean $z1;
        java.lang.String $r9;
        com.android.server.power.'-$$Lambda$ThermalManagerService$TemperatureWatcher$9FLOzsuP5Xc5FIuLbGsATAbaBFA' $r10;
        java.lang.Throwable $r13;
        android.os.Handler r14;
        android.os.Temperature r16;
        java.util.ArrayList r17;
        com.android.server.power._$$Lambda$ThermalManagerService$TemperatureWatcher$JYrkaQF5G_b3JlK_Z9IVPBOdj94 r19;
        com.android.server.power.ThermalManagerService$TemperatureWatcher$Sample r20;
        java.util.function.Function r21;

        r0 := @this: com.android.server.power.ThermalManagerService$TemperatureWatcher;

        r1 = r0.<com.android.server.power.ThermalManagerService$TemperatureWatcher: android.util.ArrayMap mSamples>;

        entermonitor r1;

     label01:
        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l2 = r0.<com.android.server.power.ThermalManagerService$TemperatureWatcher: long mLastForecastCallTimeMillis>;

        $l3 = $l1 - $l2;

        $b4 = $l3 cmp 10000L;

        if $b4 >= 0 goto label10;

        r14 = r0.<com.android.server.power.ThermalManagerService$TemperatureWatcher: android.os.Handler mHandler>;

        r19 = new com.android.server.power._$$Lambda$ThermalManagerService$TemperatureWatcher$JYrkaQF5G_b3JlK_Z9IVPBOdj94;

        specialinvoke r19.<com.android.server.power._$$Lambda$ThermalManagerService$TemperatureWatcher$JYrkaQF5G_b3JlK_Z9IVPBOdj94: void <init>(com.android.server.power.ThermalManagerService$TemperatureWatcher)>(r0);

        virtualinvoke r14.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>(r19, 1000L);

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r5 = r0.<com.android.server.power.ThermalManagerService$TemperatureWatcher: com.android.server.power.ThermalManagerService this$0>;

        $r6 = staticinvoke <com.android.server.power.ThermalManagerService: com.android.server.power.ThermalManagerService$ThermalHalWrapper access$400(com.android.server.power.ThermalManagerService)>($r5);

        r2 = virtualinvoke $r6.<com.android.server.power.ThermalManagerService$ThermalHalWrapper: java.util.List getCurrentTemperatures(boolean,int)>(1, 3);

     label02:
        i7 = 0;

     label03:
        $i5 = interfaceinvoke r2.<java.util.List: int size()>();

        if i7 >= $i5 goto label08;

        $r7 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i7);

        r16 = (android.os.Temperature) $r7;

        $f0 = virtualinvoke r16.<android.os.Temperature: float getValue()>();

        $z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f0);

        if $z1 == 0 goto label05;

     label04:
        goto label07;

     label05:
        $r8 = r0.<com.android.server.power.ThermalManagerService$TemperatureWatcher: android.util.ArrayMap mSamples>;

        $r9 = virtualinvoke r16.<android.os.Temperature: java.lang.String getName()>();

        $r10 = <com.android.server.power._$$Lambda$ThermalManagerService$TemperatureWatcher$9FLOzsuP5Xc5FIuLbGsATAbaBFA: com.android.server.power.'-$$Lambda$ThermalManagerService$TemperatureWatcher$9FLOzsuP5Xc5FIuLbGsATAbaBFA' INSTANCE>;

        r21 = (java.util.function.Function) $r10;

        $r11 = virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>($r9, r21);

        r17 = (java.util.ArrayList) $r11;

        $i6 = virtualinvoke r17.<java.util.ArrayList: int size()>();

        if $i6 != 30 goto label06;

        virtualinvoke r17.<java.util.ArrayList: java.lang.Object remove(int)>(0);

     label06:
        r20 = new com.android.server.power.ThermalManagerService$TemperatureWatcher$Sample;

        $f1 = virtualinvoke r16.<android.os.Temperature: float getValue()>();

        specialinvoke r20.<com.android.server.power.ThermalManagerService$TemperatureWatcher$Sample: void <init>(com.android.server.power.ThermalManagerService$TemperatureWatcher,long,float)>(r0, l0, $f1);

        virtualinvoke r17.<java.util.ArrayList: boolean add(java.lang.Object)>(r20);

     label07:
        i7 = i7 + 1;

        goto label03;

     label08:
        exitmonitor r1;

     label09:
        return;

     label10:
        $r4 = r0.<com.android.server.power.ThermalManagerService$TemperatureWatcher: android.util.ArrayMap mSamples>;

        virtualinvoke $r4.<android.util.ArrayMap: void clear()>();

        exitmonitor r1;

     label11:
        return;

     label12:
        $r13 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    com.android.server.power.ThermalManagerService$TemperatureWatcher$Sample createSampleForTesting(long, float)
    {
        com.android.server.power.ThermalManagerService$TemperatureWatcher r0;
        long l0;
        float f0;
        com.android.server.power.ThermalManagerService$TemperatureWatcher$Sample $r1;

        r0 := @this: com.android.server.power.ThermalManagerService$TemperatureWatcher;

        l0 := @parameter0: long;

        f0 := @parameter1: float;

        $r1 = new com.android.server.power.ThermalManagerService$TemperatureWatcher$Sample;

        specialinvoke $r1.<com.android.server.power.ThermalManagerService$TemperatureWatcher$Sample: void <init>(com.android.server.power.ThermalManagerService$TemperatureWatcher,long,float)>(r0, l0, f0);

        return $r1;
    }

    float getForecast(int)
    {
        com.android.server.power.ThermalManagerService$TemperatureWatcher r0;
        int i0, $i2;
        android.util.ArrayMap r1, $r3, $r4, $r5, $r6, $r11;
        java.util.Iterator r2;
        long $l1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.Set $r7;
        java.lang.Object $r8, $r9, $r10, $r12, $r13;
        com.android.server.power.ThermalManagerService$TemperatureWatcher$Sample $r14;
        float $f0, $f1, $f2, $f3, $f4, $f5, f6, f7, f8, f9, f10, f11;
        byte $b3, $b4;
        java.lang.String $r17, $r18, $r19, r22, r25;
        java.lang.Throwable $r20;
        java.util.Map$Entry r21;
        java.util.ArrayList r23;
        java.lang.Float r24;
        java.lang.StringBuilder r26;

        r0 := @this: com.android.server.power.ThermalManagerService$TemperatureWatcher;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.power.ThermalManagerService$TemperatureWatcher: android.util.ArrayMap mSamples>;

        entermonitor r1;

     label01:
        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.server.power.ThermalManagerService$TemperatureWatcher: long mLastForecastCallTimeMillis> = $l1;

        $r3 = r0.<com.android.server.power.ThermalManagerService$TemperatureWatcher: android.util.ArrayMap mSamples>;

        $z0 = virtualinvoke $r3.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 == 0 goto label02;

        specialinvoke r0.<com.android.server.power.ThermalManagerService$TemperatureWatcher: void updateTemperature()>();

     label02:
        $r4 = r0.<com.android.server.power.ThermalManagerService$TemperatureWatcher: android.util.ArrayMap mSamples>;

        $z1 = virtualinvoke $r4.<android.util.ArrayMap: boolean isEmpty()>();

        if $z1 == 0 goto label04;

        $r19 = staticinvoke <com.android.server.power.ThermalManagerService: java.lang.String access$800()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r19, "No temperature samples found");

        exitmonitor r1;

     label03:
        return #NaNF;

     label04:
        $r5 = r0.<com.android.server.power.ThermalManagerService$TemperatureWatcher: android.util.ArrayMap mSevereThresholds>;

        $z2 = virtualinvoke $r5.<android.util.ArrayMap: boolean isEmpty()>();

        if $z2 == 0 goto label06;

        $r18 = staticinvoke <com.android.server.power.ThermalManagerService: java.lang.String access$800()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r18, "No temperature thresholds found");

        exitmonitor r1;

     label05:
        return #NaNF;

     label06:
        f6 = #NaNF;

     label07:
        $r6 = r0.<com.android.server.power.ThermalManagerService$TemperatureWatcher: android.util.ArrayMap mSamples>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label08:
        $z5 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label19;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r21 = (java.util.Map$Entry) $r8;

        $r9 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getKey()>();

        r22 = (java.lang.String) $r9;

        $r10 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getValue()>();

        r23 = (java.util.ArrayList) $r10;

        $r11 = r0.<com.android.server.power.ThermalManagerService$TemperatureWatcher: android.util.ArrayMap mSevereThresholds>;

        $r12 = virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r22);

        r24 = (java.lang.Float) $r12;

     label09:
        if r24 != null goto label12;

     label10:
        r25 = staticinvoke <com.android.server.power.ThermalManagerService: java.lang.String access$800()>();

        r26 = new java.lang.StringBuilder;

        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No threshold found for ");

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $r17 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>(r25, $r17);

     label11:
        goto label08;

     label12:
        $r13 = virtualinvoke r23.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r14 = (com.android.server.power.ThermalManagerService$TemperatureWatcher$Sample) $r13;

        f7 = $r14.<com.android.server.power.ThermalManagerService$TemperatureWatcher$Sample: float temperature>;

        $i2 = virtualinvoke r23.<java.util.ArrayList: int size()>();

        if $i2 >= 3 goto label15;

        $f5 = virtualinvoke r24.<java.lang.Float: float floatValue()>();

        f8 = virtualinvoke r0.<com.android.server.power.ThermalManagerService$TemperatureWatcher: float normalizeTemperature(float,float)>(f7, $f5);

        $z4 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f6);

        if $z4 != 0 goto label14;

     label13:
        $b4 = f8 cmpl f6;

        if $b4 <= 0 goto label08;

     label14:
        f6 = f8;

        goto label08;

     label15:
        f9 = virtualinvoke r0.<com.android.server.power.ThermalManagerService$TemperatureWatcher: float getSlopeOf(java.util.List)>(r23);

        $f0 = (float) i0;

        $f1 = $f0 * f9;

        $f2 = $f1 * 1000.0F;

        $f3 = $f2 + f7;

        $f4 = virtualinvoke r24.<java.lang.Float: float floatValue()>();

        f10 = virtualinvoke r0.<com.android.server.power.ThermalManagerService$TemperatureWatcher: float normalizeTemperature(float,float)>($f3, $f4);

        $z3 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f6);

        if $z3 != 0 goto label17;

     label16:
        f11 = f6;

        $b3 = f10 cmpl f6;

        if $b3 <= 0 goto label18;

     label17:
        f11 = f10;

     label18:
        f6 = f11;

        goto label08;

     label19:
        exitmonitor r1;

     label20:
        return f6;

     label21:
        $r20 := @caughtexception;

     label22:
        exitmonitor r1;

     label23:
        throw $r20;

        catch java.lang.Throwable from label01 to label02 with label21;
        catch java.lang.Throwable from label02 to label03 with label21;
        catch java.lang.Throwable from label04 to label05 with label21;
        catch java.lang.Throwable from label07 to label08 with label21;
        catch java.lang.Throwable from label08 to label09 with label21;
        catch java.lang.Throwable from label10 to label11 with label21;
        catch java.lang.Throwable from label12 to label13 with label21;
        catch java.lang.Throwable from label15 to label16 with label21;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label22 to label23 with label21;
    }

    float getSlopeOf(java.util.List)
    {
        com.android.server.power.ThermalManagerService$TemperatureWatcher r0;
        java.util.List r1;
        long l0, l1, $l4, $l7, $l8, $l9, l10, l12;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, f9, f10;
        int $i2, $i3, $i5, $i6, i11, i13;
        java.lang.Object $r2, $r3;
        com.android.server.power.ThermalManagerService$TemperatureWatcher$Sample r4, r5;

        r0 := @this: com.android.server.power.ThermalManagerService$TemperatureWatcher;

        r1 := @parameter0: java.util.List;

        l10 = 0L;

        f9 = 0.0F;

        i11 = 0;

     label1:
        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        if i11 >= $i2 goto label2;

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i11);

        r4 = (com.android.server.power.ThermalManagerService$TemperatureWatcher$Sample) $r3;

        $l9 = r4.<com.android.server.power.ThermalManagerService$TemperatureWatcher$Sample: long time>;

        l10 = l10 + $l9;

        $f8 = r4.<com.android.server.power.ThermalManagerService$TemperatureWatcher$Sample: float temperature>;

        f9 = f9 + $f8;

        i11 = i11 + 1;

        goto label1;

     label2:
        $i3 = interfaceinvoke r1.<java.util.List: int size()>();

        $l4 = (long) $i3;

        l0 = l10 / $l4;

        $i5 = interfaceinvoke r1.<java.util.List: int size()>();

        $f2 = (float) $i5;

        f0 = f9 / $f2;

        l12 = 0L;

        f10 = 0.0F;

        i13 = 0;

     label3:
        $i6 = interfaceinvoke r1.<java.util.List: int size()>();

        if i13 >= $i6 goto label4;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i13);

        r5 = (com.android.server.power.ThermalManagerService$TemperatureWatcher$Sample) $r2;

        $l7 = r5.<com.android.server.power.ThermalManagerService$TemperatureWatcher$Sample: long time>;

        l1 = $l7 - l0;

        f1 = r5.<com.android.server.power.ThermalManagerService$TemperatureWatcher$Sample: float temperature>;

        $l8 = l1 * l1;

        l12 = l12 + $l8;

        $f6 = (float) l1;

        $f5 = f1 - f0;

        $f7 = $f6 * $f5;

        f10 = f10 + $f7;

        i13 = i13 + 1;

        goto label3;

     label4:
        $f3 = (float) l12;

        $f4 = f10 / $f3;

        return $f4;
    }

    float normalizeTemperature(float, float)
    {
        com.android.server.power.ThermalManagerService$TemperatureWatcher r0;
        android.util.ArrayMap r1;
        byte $b0;
        float $f0, f1, f2, f3, f4;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.power.ThermalManagerService$TemperatureWatcher;

        f1 := @parameter0: float;

        f2 := @parameter1: float;

        r1 = r0.<com.android.server.power.ThermalManagerService$TemperatureWatcher: android.util.ArrayMap mSamples>;

        entermonitor r1;

        f3 = f2 - 30.0F;

        $b0 = f1 cmpg f3;

        if $b0 > 0 goto label3;

     label1:
        exitmonitor r1;

     label2:
        return 0.0F;

     label3:
        $f0 = f1 - f3;

        f4 = $f0 / 30.0F;

     label4:
        exitmonitor r1;

     label5:
        return f4;

     label6:
        $r3 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    void updateSevereThresholds()
    {
        com.android.server.power.ThermalManagerService$TemperatureWatcher r0;
        android.util.ArrayMap r1, $r9;
        java.util.List r2;
        com.android.server.power.ThermalManagerService $r3;
        com.android.server.power.ThermalManagerService$ThermalHalWrapper $r4;
        int $i0, $i1, i2;
        java.lang.Object $r5;
        float[] $r6, $r7, $r8;
        float $f0, $f1;
        boolean $z0;
        java.lang.String $r10;
        java.lang.Float $r11;
        java.lang.Throwable $r13;
        android.hardware.thermal.V2_0.TemperatureThreshold r14;

        r0 := @this: com.android.server.power.ThermalManagerService$TemperatureWatcher;

        r1 = r0.<com.android.server.power.ThermalManagerService$TemperatureWatcher: android.util.ArrayMap mSamples>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.power.ThermalManagerService$TemperatureWatcher: com.android.server.power.ThermalManagerService this$0>;

        $r4 = staticinvoke <com.android.server.power.ThermalManagerService: com.android.server.power.ThermalManagerService$ThermalHalWrapper access$400(com.android.server.power.ThermalManagerService)>($r3);

        r2 = virtualinvoke $r4.<com.android.server.power.ThermalManagerService$ThermalHalWrapper: java.util.List getTemperatureThresholds(boolean,int)>(1, 3);

     label02:
        i2 = 0;

     label03:
        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if i2 >= $i0 goto label07;

        $r5 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i2);

        r14 = (android.hardware.thermal.V2_0.TemperatureThreshold) $r5;

        $r6 = r14.<android.hardware.thermal.V2_0.TemperatureThreshold: float[] hotThrottlingThresholds>;

        $i1 = lengthof $r6;

        if $i1 > 3 goto label05;

     label04:
        goto label06;

     label05:
        $r7 = r14.<android.hardware.thermal.V2_0.TemperatureThreshold: float[] hotThrottlingThresholds>;

        $f0 = $r7[3];

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f0);

        if $z0 != 0 goto label06;

        $r9 = r0.<com.android.server.power.ThermalManagerService$TemperatureWatcher: android.util.ArrayMap mSevereThresholds>;

        $r10 = r14.<android.hardware.thermal.V2_0.TemperatureThreshold: java.lang.String name>;

        $r8 = r14.<android.hardware.thermal.V2_0.TemperatureThreshold: float[] hotThrottlingThresholds>;

        $f1 = $r8[3];

        $r11 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r11);

     label06:
        i2 = i2 + 1;

        goto label03;

     label07:
        exitmonitor r1;

     label08:
        return;

     label09:
        $r13 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public static void <clinit>()
    {
        <com.android.server.power.ThermalManagerService$TemperatureWatcher: int RING_BUFFER_SIZE> = 30;

        <com.android.server.power.ThermalManagerService$TemperatureWatcher: int MINIMUM_SAMPLE_COUNT> = 3;

        <com.android.server.power.ThermalManagerService$TemperatureWatcher: int INACTIVITY_THRESHOLD_MILLIS> = 10000;

        <com.android.server.power.ThermalManagerService$TemperatureWatcher: float DEGREES_BETWEEN_ZERO_AND_ONE> = 30.0F;

        return;
    }
}
