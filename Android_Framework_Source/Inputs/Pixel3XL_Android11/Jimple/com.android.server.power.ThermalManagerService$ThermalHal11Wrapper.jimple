class com.android.server.power.ThermalManagerService$ThermalHal11Wrapper extends com.android.server.power.ThermalManagerService$ThermalHalWrapper
{
    private final android.hardware.thermal.V1_1.IThermalCallback$Stub mThermalCallback11;
    private android.hardware.thermal.V1_1.IThermal mThermalHal11;

    void <init>()
    {
        com.android.server.power.ThermalManagerService$ThermalHal11Wrapper r0;
        com.android.server.power.ThermalManagerService$ThermalHal11Wrapper$1 $r1;

        r0 := @this: com.android.server.power.ThermalManagerService$ThermalHal11Wrapper;

        specialinvoke r0.<com.android.server.power.ThermalManagerService$ThermalHalWrapper: void <init>()>();

        r0.<com.android.server.power.ThermalManagerService$ThermalHal11Wrapper: android.hardware.thermal.V1_1.IThermal mThermalHal11> = null;

        $r1 = new com.android.server.power.ThermalManagerService$ThermalHal11Wrapper$1;

        specialinvoke $r1.<com.android.server.power.ThermalManagerService$ThermalHal11Wrapper$1: void <init>(com.android.server.power.ThermalManagerService$ThermalHal11Wrapper)>(r0);

        r0.<com.android.server.power.ThermalManagerService$ThermalHal11Wrapper: android.hardware.thermal.V1_1.IThermalCallback$Stub mThermalCallback11> = $r1;

        return;
    }

    static void lambda$getCurrentCoolingDevices$1(boolean, int, java.util.List, android.hardware.thermal.V1_0.ThermalStatus, java.util.ArrayList)
    {
        boolean z0, $z2;
        int i0, $i1, $i3, $i5;
        java.lang.StringBuilder $r0;
        java.lang.String $r2, $r4, $r7, r13;
        java.lang.Object $r5;
        android.os.CoolingDevice $r6;
        float $f0;
        long $l4;
        java.util.List r8;
        android.hardware.thermal.V1_0.ThermalStatus r9;
        java.util.ArrayList r10;
        java.util.Iterator r11;
        android.hardware.thermal.V1_0.CoolingDevice r12;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r8 := @parameter2: java.util.List;

        r9 := @parameter3: android.hardware.thermal.V1_0.ThermalStatus;

        r10 := @parameter4: java.util.ArrayList;

        $i1 = r9.<android.hardware.thermal.V1_0.ThermalStatus: int code>;

        if $i1 != 0 goto label4;

        r11 = virtualinvoke r10.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r5 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r12 = (android.hardware.thermal.V1_0.CoolingDevice) $r5;

        if z0 == 0 goto label2;

        $i5 = r12.<android.hardware.thermal.V1_0.CoolingDevice: int type>;

        if i0 == $i5 goto label2;

        goto label1;

     label2:
        $r6 = new android.os.CoolingDevice;

        $f0 = r12.<android.hardware.thermal.V1_0.CoolingDevice: float currentValue>;

        $l4 = (long) $f0;

        $i3 = r12.<android.hardware.thermal.V1_0.CoolingDevice: int type>;

        $r7 = r12.<android.hardware.thermal.V1_0.CoolingDevice: java.lang.String name>;

        specialinvoke $r6.<android.os.CoolingDevice: void <init>(long,int,java.lang.String)>($l4, $i3, $r7);

        interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label1;

     label3:
        goto label5;

     label4:
        r13 = <com.android.server.power.ThermalManagerService$ThermalHal11Wrapper: java.lang.String TAG>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t get cooling device because of HAL error: ");

        $r2 = r9.<android.hardware.thermal.V1_0.ThermalStatus: java.lang.String debugMessage>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>(r13, $r4);

     label5:
        return;
    }

    static void lambda$getCurrentTemperatures$0(boolean, int, java.util.List, android.hardware.thermal.V1_0.ThermalStatus, java.util.ArrayList)
    {
        boolean z0, $z2;
        int i0, $i1, $i3, $i4;
        java.lang.StringBuilder $r0;
        java.lang.String $r2, $r4, $r7, r13;
        java.lang.Object $r5;
        android.os.Temperature $r6;
        float $f0;
        java.util.List r8;
        android.hardware.thermal.V1_0.ThermalStatus r9;
        java.util.ArrayList r10;
        java.util.Iterator r11;
        android.hardware.thermal.V1_0.Temperature r12;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r8 := @parameter2: java.util.List;

        r9 := @parameter3: android.hardware.thermal.V1_0.ThermalStatus;

        r10 := @parameter4: java.util.ArrayList;

        $i1 = r9.<android.hardware.thermal.V1_0.ThermalStatus: int code>;

        if $i1 != 0 goto label4;

        r11 = virtualinvoke r10.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r5 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r12 = (android.hardware.thermal.V1_0.Temperature) $r5;

        if z0 == 0 goto label2;

        $i4 = r12.<android.hardware.thermal.V1_0.Temperature: int type>;

        if i0 == $i4 goto label2;

        goto label1;

     label2:
        $r6 = new android.os.Temperature;

        $f0 = r12.<android.hardware.thermal.V1_0.Temperature: float currentValue>;

        $i3 = r12.<android.hardware.thermal.V1_0.Temperature: int type>;

        $r7 = r12.<android.hardware.thermal.V1_0.Temperature: java.lang.String name>;

        specialinvoke $r6.<android.os.Temperature: void <init>(float,int,java.lang.String,int)>($f0, $i3, $r7, 0);

        interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label1;

     label3:
        goto label5;

     label4:
        r13 = <com.android.server.power.ThermalManagerService$ThermalHal11Wrapper: java.lang.String TAG>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t get temperatures because of HAL error: ");

        $r2 = r9.<android.hardware.thermal.V1_0.ThermalStatus: java.lang.String debugMessage>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>(r13, $r4);

     label5:
        return;
    }

    protected boolean connectToHal()
    {
        com.android.server.power.ThermalManagerService$ThermalHal11Wrapper r0;
        java.lang.Object r1;
        com.android.server.power.ThermalManagerService$ThermalHalWrapper$DeathRecipient r2;
        android.hardware.thermal.V1_1.IThermalCallback$Stub $r3;
        android.hardware.thermal.V1_1.IThermal $r4, $r6, r10;
        java.lang.String $r5, $r9;
        java.lang.Throwable $r7, $r8;
        boolean z1;

        r0 := @this: com.android.server.power.ThermalManagerService$ThermalHal11Wrapper;

        r1 = r0.<com.android.server.power.ThermalManagerService$ThermalHal11Wrapper: java.lang.Object mHalLock>;

        entermonitor r1;

        z1 = 1;

     label01:
        r10 = staticinvoke <android.hardware.thermal.V1_1.IThermal: android.hardware.thermal.V1_1.IThermal getService(boolean)>(1);

        r0.<com.android.server.power.ThermalManagerService$ThermalHal11Wrapper: android.hardware.thermal.V1_1.IThermal mThermalHal11> = r10;

        r2 = new com.android.server.power.ThermalManagerService$ThermalHalWrapper$DeathRecipient;

        specialinvoke r2.<com.android.server.power.ThermalManagerService$ThermalHalWrapper$DeathRecipient: void <init>(com.android.server.power.ThermalManagerService$ThermalHalWrapper)>(r0);

        interfaceinvoke r10.<android.hardware.thermal.V1_1.IThermal: boolean linkToDeath(android.os.IHwBinder$DeathRecipient,long)>(r2, 5612L);

        $r4 = r0.<com.android.server.power.ThermalManagerService$ThermalHal11Wrapper: android.hardware.thermal.V1_1.IThermal mThermalHal11>;

        $r3 = r0.<com.android.server.power.ThermalManagerService$ThermalHal11Wrapper: android.hardware.thermal.V1_1.IThermalCallback$Stub mThermalCallback11>;

        interfaceinvoke $r4.<android.hardware.thermal.V1_1.IThermal: void registerThermalCallback(android.hardware.thermal.V1_1.IThermalCallback)>($r3);

        $r5 = <com.android.server.power.ThermalManagerService$ThermalHal11Wrapper: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>($r5, "Thermal HAL 1.1 service connected, limited thermal functions due to legacy API.");

     label02:
        goto label06;

     label03:
        $r7 := @caughtexception;

        goto label11;

     label04:
        $r8 := @caughtexception;

     label05:
        $r9 = <com.android.server.power.ThermalManagerService$ThermalHal11Wrapper: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r9, "Thermal HAL 1.1 service not connected.");

        r0.<com.android.server.power.ThermalManagerService$ThermalHal11Wrapper: android.hardware.thermal.V1_1.IThermal mThermalHal11> = null;

     label06:
        $r6 = r0.<com.android.server.power.ThermalManagerService$ThermalHal11Wrapper: android.hardware.thermal.V1_1.IThermal mThermalHal11>;

        if $r6 == null goto label08;

     label07:
        goto label09;

     label08:
        z1 = 0;

     label09:
        exitmonitor r1;

     label10:
        return z1;

     label11:
        exitmonitor r1;

     label12:
        throw $r7;

        catch java.util.NoSuchElementException from label01 to label02 with label04;
        catch android.os.RemoteException from label01 to label02 with label04;
        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label05 to label06 with label03;
        catch java.lang.Throwable from label06 to label07 with label03;
        catch java.lang.Throwable from label09 to label10 with label03;
        catch java.lang.Throwable from label11 to label12 with label03;
    }

    protected void dump(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.power.ThermalManagerService$ThermalHal11Wrapper r0;
        java.lang.Object r1;
        java.lang.StringBuilder r2;
        android.hardware.thermal.V1_1.IThermal $r4;
        java.lang.String $r6, r9, r10;
        java.lang.Throwable $r7;
        java.io.PrintWriter r8;

        r0 := @this: com.android.server.power.ThermalManagerService$ThermalHal11Wrapper;

        r8 := @parameter0: java.io.PrintWriter;

        r9 := @parameter1: java.lang.String;

        r1 = r0.<com.android.server.power.ThermalManagerService$ThermalHal11Wrapper: java.lang.Object mHalLock>;

        entermonitor r1;

     label1:
        virtualinvoke r8.<java.io.PrintWriter: void print(java.lang.String)>(r9);

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ThermalHAL 1.1 connected: ");

        $r4 = r0.<com.android.server.power.ThermalManagerService$ThermalHal11Wrapper: android.hardware.thermal.V1_1.IThermal mThermalHal11>;

        if $r4 == null goto label3;

     label2:
        r10 = "yes";

        goto label4;

     label3:
        r10 = "no";

     label4:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r6 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r8.<java.io.PrintWriter: void println(java.lang.String)>($r6);

        exitmonitor r1;

     label5:
        return;

     label6:
        $r7 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    protected java.util.List getCurrentCoolingDevices(boolean, int)
    {
        com.android.server.power.ThermalManagerService$ThermalHal11Wrapper r0;
        boolean z0;
        int i0;
        java.lang.Object r1;
        com.android.server.power._$$Lambda$ThermalManagerService$ThermalHal11Wrapper$h5fsSA4CwK_Xli1jHnpETKQH7nA r2;
        android.hardware.thermal.V1_1.IThermal $r3, r8;
        android.os.RemoteException $r4;
        java.lang.String $r5;
        java.lang.Throwable $r6;
        java.util.ArrayList r7;

        r0 := @this: com.android.server.power.ThermalManagerService$ThermalHal11Wrapper;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 = r0.<com.android.server.power.ThermalManagerService$ThermalHal11Wrapper: java.lang.Object mHalLock>;

        entermonitor r1;

     label01:
        r7 = new java.util.ArrayList;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $r3 = r0.<com.android.server.power.ThermalManagerService$ThermalHal11Wrapper: android.hardware.thermal.V1_1.IThermal mThermalHal11>;

        if $r3 != null goto label03;

        exitmonitor r1;

     label02:
        return r7;

     label03:
        r8 = r0.<com.android.server.power.ThermalManagerService$ThermalHal11Wrapper: android.hardware.thermal.V1_1.IThermal mThermalHal11>;

        r2 = new com.android.server.power._$$Lambda$ThermalManagerService$ThermalHal11Wrapper$h5fsSA4CwK_Xli1jHnpETKQH7nA;

        specialinvoke r2.<com.android.server.power._$$Lambda$ThermalManagerService$ThermalHal11Wrapper$h5fsSA4CwK_Xli1jHnpETKQH7nA: void <init>(boolean,int,java.util.List)>(z0, i0, r7);

        interfaceinvoke r8.<android.hardware.thermal.V1_1.IThermal: void getCoolingDevices(android.hardware.thermal.V1_0.IThermal$getCoolingDevicesCallback)>(r2);

     label04:
        goto label07;

     label05:
        $r4 := @caughtexception;

     label06:
        $r5 = <com.android.server.power.ThermalManagerService$ThermalHal11Wrapper: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, "Couldn\'t getCurrentCoolingDevices, reconnecting...", $r4);

        virtualinvoke r0.<com.android.server.power.ThermalManagerService$ThermalHal11Wrapper: boolean connectToHal()>();

     label07:
        exitmonitor r1;

     label08:
        return r7;

     label09:
        $r6 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    protected java.util.List getCurrentTemperatures(boolean, int)
    {
        com.android.server.power.ThermalManagerService$ThermalHal11Wrapper r0;
        boolean z0;
        int i0;
        java.lang.Object r1;
        android.hardware.thermal.V1_1.IThermal r2, $r3;
        java.lang.Throwable $r4;
        android.os.RemoteException $r5;
        java.lang.String $r6;
        java.util.ArrayList r7;
        com.android.server.power._$$Lambda$ThermalManagerService$ThermalHal11Wrapper$ewP6gmklD7_k_bU5IqeZFG8_BZk r8;

        r0 := @this: com.android.server.power.ThermalManagerService$ThermalHal11Wrapper;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 = r0.<com.android.server.power.ThermalManagerService$ThermalHal11Wrapper: java.lang.Object mHalLock>;

        entermonitor r1;

     label01:
        r7 = new java.util.ArrayList;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $r3 = r0.<com.android.server.power.ThermalManagerService$ThermalHal11Wrapper: android.hardware.thermal.V1_1.IThermal mThermalHal11>;

        if $r3 != null goto label03;

        exitmonitor r1;

     label02:
        return r7;

     label03:
        r2 = r0.<com.android.server.power.ThermalManagerService$ThermalHal11Wrapper: android.hardware.thermal.V1_1.IThermal mThermalHal11>;

        r8 = new com.android.server.power._$$Lambda$ThermalManagerService$ThermalHal11Wrapper$ewP6gmklD7_k_bU5IqeZFG8_BZk;

        specialinvoke r8.<com.android.server.power._$$Lambda$ThermalManagerService$ThermalHal11Wrapper$ewP6gmklD7_k_bU5IqeZFG8_BZk: void <init>(boolean,int,java.util.List)>(z0, i0, r7);

        interfaceinvoke r2.<android.hardware.thermal.V1_1.IThermal: void getTemperatures(android.hardware.thermal.V1_0.IThermal$getTemperaturesCallback)>(r8);

     label04:
        goto label07;

     label05:
        $r5 := @caughtexception;

     label06:
        $r6 = <com.android.server.power.ThermalManagerService$ThermalHal11Wrapper: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r6, "Couldn\'t getCurrentTemperatures, reconnecting...", $r5);

        virtualinvoke r0.<com.android.server.power.ThermalManagerService$ThermalHal11Wrapper: boolean connectToHal()>();

     label07:
        exitmonitor r1;

     label08:
        return r7;

     label09:
        $r4 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    protected java.util.List getTemperatureThresholds(boolean, int)
    {
        com.android.server.power.ThermalManagerService$ThermalHal11Wrapper r0;
        boolean z0;
        int i0;
        java.util.ArrayList $r1;

        r0 := @this: com.android.server.power.ThermalManagerService$ThermalHal11Wrapper;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        return $r1;
    }
}
