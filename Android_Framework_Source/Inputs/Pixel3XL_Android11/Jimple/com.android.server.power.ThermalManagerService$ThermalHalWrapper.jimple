abstract class com.android.server.power.ThermalManagerService$ThermalHalWrapper extends java.lang.Object
{
    protected static final java.lang.String TAG;
    protected static final int THERMAL_HAL_DEATH_COOKIE;
    protected com.android.server.power.ThermalManagerService$ThermalHalWrapper$TemperatureChangedCallback mCallback;
    protected final java.lang.Object mHalLock;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <com.android.server.power.ThermalManagerService$ThermalHalWrapper: int THERMAL_HAL_DEATH_COOKIE> = 5612;

        $r0 = class "Lcom/android/server/power/ThermalManagerService$ThermalHalWrapper;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.server.power.ThermalManagerService$ThermalHalWrapper: java.lang.String TAG> = $r1;

        return;
    }

    void <init>()
    {
        com.android.server.power.ThermalManagerService$ThermalHalWrapper r0;
        java.lang.Object $r1;

        r0 := @this: com.android.server.power.ThermalManagerService$ThermalHalWrapper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<com.android.server.power.ThermalManagerService$ThermalHalWrapper: java.lang.Object mHalLock> = $r1;

        return;
    }

    protected abstract boolean connectToHal();

    protected abstract void dump(java.io.PrintWriter, java.lang.String);

    protected abstract java.util.List getCurrentCoolingDevices(boolean, int);

    protected abstract java.util.List getCurrentTemperatures(boolean, int);

    protected abstract java.util.List getTemperatureThresholds(boolean, int);

    protected void resendCurrentTemperatures()
    {
        com.android.server.power.ThermalManagerService$ThermalHalWrapper r0;
        java.lang.Object r1, $r3;
        int i0, i1;
        com.android.server.power.ThermalManagerService$ThermalHalWrapper$TemperatureChangedCallback $r2;
        android.os.Temperature $r4;
        java.lang.Throwable $r5;
        java.util.List r6;

        r0 := @this: com.android.server.power.ThermalManagerService$ThermalHalWrapper;

        r1 = r0.<com.android.server.power.ThermalManagerService$ThermalHalWrapper: java.lang.Object mHalLock>;

        entermonitor r1;

     label01:
        r6 = virtualinvoke r0.<com.android.server.power.ThermalManagerService$ThermalHalWrapper: java.util.List getCurrentTemperatures(boolean,int)>(0, 0);

        i0 = interfaceinvoke r6.<java.util.List: int size()>();

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label06;

     label04:
        $r2 = r0.<com.android.server.power.ThermalManagerService$ThermalHalWrapper: com.android.server.power.ThermalManagerService$ThermalHalWrapper$TemperatureChangedCallback mCallback>;

        $r3 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i1);

        $r4 = (android.os.Temperature) $r3;

        interfaceinvoke $r2.<com.android.server.power.ThermalManagerService$ThermalHalWrapper$TemperatureChangedCallback: void onValues(android.os.Temperature)>($r4);

     label05:
        i1 = i1 + 1;

        goto label03;

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r5 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    protected void setCallback(com.android.server.power.ThermalManagerService$ThermalHalWrapper$TemperatureChangedCallback)
    {
        com.android.server.power.ThermalManagerService$ThermalHalWrapper r0;
        com.android.server.power.ThermalManagerService$ThermalHalWrapper$TemperatureChangedCallback r1;

        r0 := @this: com.android.server.power.ThermalManagerService$ThermalHalWrapper;

        r1 := @parameter0: com.android.server.power.ThermalManagerService$ThermalHalWrapper$TemperatureChangedCallback;

        r0.<com.android.server.power.ThermalManagerService$ThermalHalWrapper: com.android.server.power.ThermalManagerService$ThermalHalWrapper$TemperatureChangedCallback mCallback> = r1;

        return;
    }
}
