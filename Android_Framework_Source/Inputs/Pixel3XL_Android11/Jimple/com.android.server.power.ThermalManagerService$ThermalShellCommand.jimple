class com.android.server.power.ThermalManagerService$ThermalShellCommand extends android.os.ShellCommand
{
    final com.android.server.power.ThermalManagerService this$0;

    void <init>(com.android.server.power.ThermalManagerService)
    {
        com.android.server.power.ThermalManagerService$ThermalShellCommand r0;
        com.android.server.power.ThermalManagerService r1;

        r0 := @this: com.android.server.power.ThermalManagerService$ThermalShellCommand;

        r1 := @parameter0: com.android.server.power.ThermalManagerService;

        r0.<com.android.server.power.ThermalManagerService$ThermalShellCommand: com.android.server.power.ThermalManagerService this$0> = r1;

        specialinvoke r0.<android.os.ShellCommand: void <init>()>();

        return;
    }

    private int runOverrideStatus()
    {
        com.android.server.power.ThermalManagerService$ThermalShellCommand r0;
        long l0;
        int i1;
        java.lang.String $r2, $r8, $r12, $r14;
        boolean $z0;
        com.android.server.power.ThermalManagerService $r3, $r4, $r5;
        java.lang.Throwable $r9, $r15;
        java.lang.RuntimeException $r10;
        java.io.PrintWriter r16;
        java.lang.StringBuilder r17, r20;
        java.lang.Object r18;

        r0 := @this: com.android.server.power.ThermalManagerService$ThermalShellCommand;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        r16 = virtualinvoke r0.<com.android.server.power.ThermalManagerService$ThermalShellCommand: java.io.PrintWriter getOutPrintWriter()>();

     label02:
        $r2 = virtualinvoke r0.<com.android.server.power.ThermalManagerService$ThermalShellCommand: java.lang.String getNextArgRequired()>();

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

     label03:
        $z0 = staticinvoke <android.os.Temperature: boolean isValidStatus(int)>(i1);

        if $z0 != 0 goto label05;

        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid status: ");

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r16.<java.io.PrintWriter: void println(java.lang.String)>($r8);

     label04:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return -1;

     label05:
        $r3 = r0.<com.android.server.power.ThermalManagerService$ThermalShellCommand: com.android.server.power.ThermalManagerService this$0>;

        r18 = staticinvoke <com.android.server.power.ThermalManagerService: java.lang.Object access$000(com.android.server.power.ThermalManagerService)>($r3);

        entermonitor r18;

     label06:
        $r4 = r0.<com.android.server.power.ThermalManagerService$ThermalShellCommand: com.android.server.power.ThermalManagerService this$0>;

        staticinvoke <com.android.server.power.ThermalManagerService: boolean access$902(com.android.server.power.ThermalManagerService,boolean)>($r4, 1);

        $r5 = r0.<com.android.server.power.ThermalManagerService$ThermalShellCommand: com.android.server.power.ThermalManagerService this$0>;

        staticinvoke <com.android.server.power.ThermalManagerService: void access$1200(com.android.server.power.ThermalManagerService,int)>($r5, i1);

        exitmonitor r18;

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 0;

     label08:
        $r9 := @caughtexception;

     label09:
        exitmonitor r18;

     label10:
        throw $r9;

     label11:
        $r10 := @caughtexception;

     label12:
        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: ");

        $r12 = virtualinvoke $r10.<java.lang.RuntimeException: java.lang.String toString()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r16.<java.io.PrintWriter: void println(java.lang.String)>($r14);

     label13:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return -1;

     label14:
        $r15 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r15;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.RuntimeException from label02 to label03 with label11;
        catch java.lang.Throwable from label02 to label03 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    private int runReset()
    {
        com.android.server.power.ThermalManagerService$ThermalShellCommand r0;
        long l0;
        com.android.server.power.ThermalManagerService $r2, $r3, $r4;
        java.lang.Throwable $r5, $r6;
        java.lang.Object r7;

        r0 := @this: com.android.server.power.ThermalManagerService$ThermalShellCommand;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.power.ThermalManagerService$ThermalShellCommand: com.android.server.power.ThermalManagerService this$0>;

        r7 = staticinvoke <com.android.server.power.ThermalManagerService: java.lang.Object access$000(com.android.server.power.ThermalManagerService)>($r2);

        entermonitor r7;

     label2:
        $r3 = r0.<com.android.server.power.ThermalManagerService$ThermalShellCommand: com.android.server.power.ThermalManagerService this$0>;

        staticinvoke <com.android.server.power.ThermalManagerService: boolean access$902(com.android.server.power.ThermalManagerService,boolean)>($r3, 0);

        $r4 = r0.<com.android.server.power.ThermalManagerService$ThermalShellCommand: com.android.server.power.ThermalManagerService this$0>;

        staticinvoke <com.android.server.power.ThermalManagerService: void access$1100(com.android.server.power.ThermalManagerService)>($r4);

        exitmonitor r7;

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 0;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor r7;

     label6:
        throw $r6;

     label7:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label6 to label7 with label7;
    }

    public int onCommand(java.lang.String)
    {
        com.android.server.power.ThermalManagerService$ThermalShellCommand r0;
        java.lang.String r1, r2;
        int i0, $i1, $i2, $i3;
        boolean $z0, $z1;
        byte b4;

        r0 := @this: com.android.server.power.ThermalManagerService$ThermalShellCommand;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        r2 = r1;

        goto label2;

     label1:
        r2 = "";

     label2:
        b4 = -1;

        i0 = virtualinvoke r2.<java.lang.String: int hashCode()>();

        if i0 == 108404047 goto label5;

        if i0 == 385515795 goto label4;

     label3:
        goto label6;

     label4:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("override-status");

        if $z1 == 0 goto label3;

        b4 = 0;

        goto label6;

     label5:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("reset");

        if $z0 == 0 goto label3;

        b4 = 1;

     label6:
        if b4 == 0 goto label8;

        if b4 == 1 goto label7;

        $i3 = virtualinvoke r0.<com.android.server.power.ThermalManagerService$ThermalShellCommand: int handleDefaultCommands(java.lang.String)>(r1);

        return $i3;

     label7:
        $i2 = specialinvoke r0.<com.android.server.power.ThermalManagerService$ThermalShellCommand: int runReset()>();

        return $i2;

     label8:
        $i1 = specialinvoke r0.<com.android.server.power.ThermalManagerService$ThermalShellCommand: int runOverrideStatus()>();

        return $i1;
    }

    public void onHelp()
    {
        com.android.server.power.ThermalManagerService$ThermalShellCommand r0;
        java.io.PrintWriter r1;

        r0 := @this: com.android.server.power.ThermalManagerService$ThermalShellCommand;

        r1 = virtualinvoke r0.<com.android.server.power.ThermalManagerService$ThermalShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Thermal service (thermalservice) commands:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  help");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Print this help text.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  override-status STATUS");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    sets and locks the thermal status of the device to STATUS.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    status code is defined in android.os.Temperature.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  reset");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    unlocks the thermal status of the device.");

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        return;
    }
}
