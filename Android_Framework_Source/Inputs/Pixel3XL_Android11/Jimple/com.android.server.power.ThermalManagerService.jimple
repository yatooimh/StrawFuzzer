public class com.android.server.power.ThermalManagerService extends com.android.server.SystemService
{
    private static final java.lang.String TAG;
    private final java.util.concurrent.atomic.AtomicBoolean mHalReady;
    private com.android.server.power.ThermalManagerService$ThermalHalWrapper mHalWrapper;
    private boolean mIsStatusOverride;
    private final java.lang.Object mLock;
    final android.os.IThermalService$Stub mService;
    private int mStatus;
    private android.util.ArrayMap mTemperatureMap;
    final com.android.server.power.ThermalManagerService$TemperatureWatcher mTemperatureWatcher;
    private final android.os.RemoteCallbackList mThermalEventListeners;
    private final android.os.RemoteCallbackList mThermalStatusListeners;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "Lcom/android/server/power/ThermalManagerService;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.server.power.ThermalManagerService: java.lang.String TAG> = $r1;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.server.power.ThermalManagerService r0;
        android.content.Context r1;

        r0 := @this: com.android.server.power.ThermalManagerService;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.server.power.ThermalManagerService: void <init>(android.content.Context,com.android.server.power.ThermalManagerService$ThermalHalWrapper)>(r1, null);

        return;
    }

    void <init>(android.content.Context, com.android.server.power.ThermalManagerService$ThermalHalWrapper)
    {
        com.android.server.power.ThermalManagerService r0;
        android.content.Context r1;
        com.android.server.power.ThermalManagerService$ThermalHalWrapper r2;
        java.lang.Object $r3;
        android.os.RemoteCallbackList $r4, $r5;
        android.util.ArrayMap $r6;
        java.util.concurrent.atomic.AtomicBoolean $r7;
        com.android.server.power.ThermalManagerService$TemperatureWatcher $r8;
        com.android.server.power.ThermalManagerService$1 $r9;

        r0 := @this: com.android.server.power.ThermalManagerService;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.power.ThermalManagerService$ThermalHalWrapper;

        specialinvoke r0.<com.android.server.SystemService: void <init>(android.content.Context)>(r1);

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<com.android.server.power.ThermalManagerService: java.lang.Object mLock> = $r3;

        $r4 = new android.os.RemoteCallbackList;

        specialinvoke $r4.<android.os.RemoteCallbackList: void <init>()>();

        r0.<com.android.server.power.ThermalManagerService: android.os.RemoteCallbackList mThermalEventListeners> = $r4;

        $r5 = new android.os.RemoteCallbackList;

        specialinvoke $r5.<android.os.RemoteCallbackList: void <init>()>();

        r0.<com.android.server.power.ThermalManagerService: android.os.RemoteCallbackList mThermalStatusListeners> = $r5;

        $r6 = new android.util.ArrayMap;

        specialinvoke $r6.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.power.ThermalManagerService: android.util.ArrayMap mTemperatureMap> = $r6;

        $r7 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r7.<java.util.concurrent.atomic.AtomicBoolean: void <init>()>();

        r0.<com.android.server.power.ThermalManagerService: java.util.concurrent.atomic.AtomicBoolean mHalReady> = $r7;

        $r8 = new com.android.server.power.ThermalManagerService$TemperatureWatcher;

        specialinvoke $r8.<com.android.server.power.ThermalManagerService$TemperatureWatcher: void <init>(com.android.server.power.ThermalManagerService)>(r0);

        r0.<com.android.server.power.ThermalManagerService: com.android.server.power.ThermalManagerService$TemperatureWatcher mTemperatureWatcher> = $r8;

        $r9 = new com.android.server.power.ThermalManagerService$1;

        specialinvoke $r9.<com.android.server.power.ThermalManagerService$1: void <init>(com.android.server.power.ThermalManagerService)>(r0);

        r0.<com.android.server.power.ThermalManagerService: android.os.IThermalService$Stub mService> = $r9;

        r0.<com.android.server.power.ThermalManagerService: com.android.server.power.ThermalManagerService$ThermalHalWrapper mHalWrapper> = r2;

        r0.<com.android.server.power.ThermalManagerService: int mStatus> = 0;

        return;
    }

    static java.lang.Object access$000(com.android.server.power.ThermalManagerService)
    {
        com.android.server.power.ThermalManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.power.ThermalManagerService;

        $r1 = r0.<com.android.server.power.ThermalManagerService: java.lang.Object mLock>;

        return $r1;
    }

    static android.os.RemoteCallbackList access$100(com.android.server.power.ThermalManagerService)
    {
        com.android.server.power.ThermalManagerService r0;
        android.os.RemoteCallbackList $r1;

        r0 := @parameter0: com.android.server.power.ThermalManagerService;

        $r1 = r0.<com.android.server.power.ThermalManagerService: android.os.RemoteCallbackList mThermalEventListeners>;

        return $r1;
    }

    static android.util.ArrayMap access$1000(com.android.server.power.ThermalManagerService)
    {
        com.android.server.power.ThermalManagerService r0;
        android.util.ArrayMap $r1;

        r0 := @parameter0: com.android.server.power.ThermalManagerService;

        $r1 = r0.<com.android.server.power.ThermalManagerService: android.util.ArrayMap mTemperatureMap>;

        return $r1;
    }

    static void access$1100(com.android.server.power.ThermalManagerService)
    {
        com.android.server.power.ThermalManagerService r0;

        r0 := @parameter0: com.android.server.power.ThermalManagerService;

        specialinvoke r0.<com.android.server.power.ThermalManagerService: void onTemperatureMapChangedLocked()>();

        return;
    }

    static void access$1200(com.android.server.power.ThermalManagerService, int)
    {
        com.android.server.power.ThermalManagerService r0;
        int i0;

        r0 := @parameter0: com.android.server.power.ThermalManagerService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.power.ThermalManagerService: void setStatusLocked(int)>(i0);

        return;
    }

    static void access$200(com.android.server.power.ThermalManagerService, android.os.IThermalEventListener, java.lang.Integer)
    {
        com.android.server.power.ThermalManagerService r0;
        android.os.IThermalEventListener r1;
        java.lang.Integer r2;

        r0 := @parameter0: com.android.server.power.ThermalManagerService;

        r1 := @parameter1: android.os.IThermalEventListener;

        r2 := @parameter2: java.lang.Integer;

        specialinvoke r0.<com.android.server.power.ThermalManagerService: void postEventListenerCurrentTemperatures(android.os.IThermalEventListener,java.lang.Integer)>(r1, r2);

        return;
    }

    static java.util.concurrent.atomic.AtomicBoolean access$300(com.android.server.power.ThermalManagerService)
    {
        com.android.server.power.ThermalManagerService r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @parameter0: com.android.server.power.ThermalManagerService;

        $r1 = r0.<com.android.server.power.ThermalManagerService: java.util.concurrent.atomic.AtomicBoolean mHalReady>;

        return $r1;
    }

    static com.android.server.power.ThermalManagerService$ThermalHalWrapper access$400(com.android.server.power.ThermalManagerService)
    {
        com.android.server.power.ThermalManagerService r0;
        com.android.server.power.ThermalManagerService$ThermalHalWrapper $r1;

        r0 := @parameter0: com.android.server.power.ThermalManagerService;

        $r1 = r0.<com.android.server.power.ThermalManagerService: com.android.server.power.ThermalManagerService$ThermalHalWrapper mHalWrapper>;

        return $r1;
    }

    static android.os.RemoteCallbackList access$500(com.android.server.power.ThermalManagerService)
    {
        com.android.server.power.ThermalManagerService r0;
        android.os.RemoteCallbackList $r1;

        r0 := @parameter0: com.android.server.power.ThermalManagerService;

        $r1 = r0.<com.android.server.power.ThermalManagerService: android.os.RemoteCallbackList mThermalStatusListeners>;

        return $r1;
    }

    static void access$600(com.android.server.power.ThermalManagerService, android.os.IThermalStatusListener)
    {
        com.android.server.power.ThermalManagerService r0;
        android.os.IThermalStatusListener r1;

        r0 := @parameter0: com.android.server.power.ThermalManagerService;

        r1 := @parameter1: android.os.IThermalStatusListener;

        specialinvoke r0.<com.android.server.power.ThermalManagerService: void postStatusListener(android.os.IThermalStatusListener)>(r1);

        return;
    }

    static int access$700(com.android.server.power.ThermalManagerService)
    {
        com.android.server.power.ThermalManagerService r0;
        int $i0;

        r0 := @parameter0: com.android.server.power.ThermalManagerService;

        $i0 = r0.<com.android.server.power.ThermalManagerService: int mStatus>;

        return $i0;
    }

    static java.lang.String access$800()
    {
        java.lang.String $r0;

        $r0 = <com.android.server.power.ThermalManagerService: java.lang.String TAG>;

        return $r0;
    }

    static boolean access$900(com.android.server.power.ThermalManagerService)
    {
        com.android.server.power.ThermalManagerService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.power.ThermalManagerService;

        $z0 = r0.<com.android.server.power.ThermalManagerService: boolean mIsStatusOverride>;

        return $z0;
    }

    static boolean access$902(com.android.server.power.ThermalManagerService, boolean)
    {
        com.android.server.power.ThermalManagerService r0;
        boolean z0;

        r0 := @parameter0: com.android.server.power.ThermalManagerService;

        z0 := @parameter1: boolean;

        r0.<com.android.server.power.ThermalManagerService: boolean mIsStatusOverride> = z0;

        return z0;
    }

    public static void lambda$9JFHCKCwrnUIYoXDsqNamhlY5VU(com.android.server.power.ThermalManagerService, android.os.Temperature)
    {
        com.android.server.power.ThermalManagerService r0;
        android.os.Temperature r1;

        r0 := @parameter0: com.android.server.power.ThermalManagerService;

        r1 := @parameter1: android.os.Temperature;

        specialinvoke r0.<com.android.server.power.ThermalManagerService: void onTemperatureChangedCallback(android.os.Temperature)>(r1);

        return;
    }

    static void lambda$postEventListener$1(android.os.IThermalEventListener, android.os.Temperature)
    {
        android.os.Temperature r0;
        java.lang.Exception $r1;
        java.lang.String $r2;
        android.os.IThermalEventListener r3;

        r3 := @parameter0: android.os.IThermalEventListener;

        r0 := @parameter1: android.os.Temperature;

     label1:
        interfaceinvoke r3.<android.os.IThermalEventListener: void notifyThrottling(android.os.Temperature)>(r0);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r2 = <com.android.server.power.ThermalManagerService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, "Thermal callback failed to call", $r1);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    private void notifyEventListenersLocked(android.os.Temperature)
    {
        com.android.server.power.ThermalManagerService r0;
        int i0, $i1, $i2, $i3, i5;
        android.os.RemoteCallbackList $r1, $r2, $r9, $r11, $r16;
        java.lang.Object[] $r3;
        java.lang.String $r4;
        java.lang.Integer $r5, $r7, $r8, $r14;
        float $f0;
        java.lang.Float $r6;
        android.os.IInterface $r10;
        android.os.IThermalEventListener $r12;
        java.lang.Object $r13;
        java.lang.Throwable $r15;
        android.os.Temperature r17;

        r0 := @this: com.android.server.power.ThermalManagerService;

        r17 := @parameter0: android.os.Temperature;

        $r1 = r0.<com.android.server.power.ThermalManagerService: android.os.RemoteCallbackList mThermalEventListeners>;

        i0 = virtualinvoke $r1.<android.os.RemoteCallbackList: int beginBroadcast()>();

        i5 = 0;

     label1:
        if i5 >= i0 goto label5;

     label2:
        $r9 = r0.<com.android.server.power.ThermalManagerService: android.os.RemoteCallbackList mThermalEventListeners>;

        $r10 = virtualinvoke $r9.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i5);

        $r12 = (android.os.IThermalEventListener) $r10;

        $r11 = r0.<com.android.server.power.ThermalManagerService: android.os.RemoteCallbackList mThermalEventListeners>;

        $r13 = virtualinvoke $r11.<android.os.RemoteCallbackList: java.lang.Object getBroadcastCookie(int)>(i5);

        $r14 = (java.lang.Integer) $r13;

        specialinvoke r0.<com.android.server.power.ThermalManagerService: void postEventListener(android.os.Temperature,android.os.IThermalEventListener,java.lang.Integer)>(r17, $r12, $r14);

     label3:
        i5 = i5 + 1;

        goto label1;

     label4:
        $r15 := @caughtexception;

        $r16 = r0.<com.android.server.power.ThermalManagerService: android.os.RemoteCallbackList mThermalEventListeners>;

        virtualinvoke $r16.<android.os.RemoteCallbackList: void finishBroadcast()>();

        throw $r15;

     label5:
        $r2 = r0.<com.android.server.power.ThermalManagerService: android.os.RemoteCallbackList mThermalEventListeners>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: void finishBroadcast()>();

        $r3 = newarray (java.lang.Object)[5];

        $r4 = virtualinvoke r17.<android.os.Temperature: java.lang.String getName()>();

        $r3[0] = $r4;

        $i1 = virtualinvoke r17.<android.os.Temperature: int getType()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3[1] = $r5;

        $f0 = virtualinvoke r17.<android.os.Temperature: float getValue()>();

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3[2] = $r6;

        $i2 = virtualinvoke r17.<android.os.Temperature: int getStatus()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r3[3] = $r7;

        $i3 = r0.<com.android.server.power.ThermalManagerService: int mStatus>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r3[4] = $r8;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(2737, $r3);

        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private void notifyStatusListenersLocked()
    {
        com.android.server.power.ThermalManagerService r0;
        int i0, i1;
        android.os.RemoteCallbackList $r2, $r3, $r4, $r8;
        android.os.IInterface $r5;
        android.os.IThermalStatusListener $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.server.power.ThermalManagerService;

        $r2 = r0.<com.android.server.power.ThermalManagerService: android.os.RemoteCallbackList mThermalStatusListeners>;

        i0 = virtualinvoke $r2.<android.os.RemoteCallbackList: int beginBroadcast()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label5;

     label2:
        $r4 = r0.<com.android.server.power.ThermalManagerService: android.os.RemoteCallbackList mThermalStatusListeners>;

        $r5 = virtualinvoke $r4.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i1);

        $r6 = (android.os.IThermalStatusListener) $r5;

        specialinvoke r0.<com.android.server.power.ThermalManagerService: void postStatusListener(android.os.IThermalStatusListener)>($r6);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        $r7 := @caughtexception;

        $r8 = r0.<com.android.server.power.ThermalManagerService: android.os.RemoteCallbackList mThermalStatusListeners>;

        virtualinvoke $r8.<android.os.RemoteCallbackList: void finishBroadcast()>();

        throw $r7;

     label5:
        $r3 = r0.<com.android.server.power.ThermalManagerService: android.os.RemoteCallbackList mThermalStatusListeners>;

        virtualinvoke $r3.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private void onActivityManagerReady()
    {
        com.android.server.power.ThermalManagerService r0;
        java.lang.Object r1, $r7;
        com.android.server.power._$$Lambda$ThermalManagerService$9JFHCKCwrnUIYoXDsqNamhlY5VU r2;
        int i0, i3;
        com.android.server.power.ThermalManagerService$ThermalHalWrapper $r3, $r4, r15;
        com.android.server.power.ThermalManagerService$TemperatureWatcher $r5;
        java.util.concurrent.atomic.AtomicBoolean $r6;
        android.os.Temperature $r8;
        java.lang.String $r9, $r10;
        java.lang.Throwable $r11;
        boolean z0, z1, z2, z3;
        com.android.server.power.ThermalManagerService$ThermalHal20Wrapper r12;
        com.android.server.power.ThermalManagerService$ThermalHal11Wrapper r13;
        com.android.server.power.ThermalManagerService$ThermalHal10Wrapper r14;
        java.util.List r16;

        r0 := @this: com.android.server.power.ThermalManagerService;

        r1 = r0.<com.android.server.power.ThermalManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.power.ThermalManagerService: com.android.server.power.ThermalManagerService$ThermalHalWrapper mHalWrapper>;

        if $r3 == null goto label03;

     label02:
        z0 = 1;

        goto label04;

     label03:
        z0 = 0;

     label04:
        z1 = z0;

        if z0 != 0 goto label06;

     label05:
        r12 = new com.android.server.power.ThermalManagerService$ThermalHal20Wrapper;

        specialinvoke r12.<com.android.server.power.ThermalManagerService$ThermalHal20Wrapper: void <init>()>();

        r0.<com.android.server.power.ThermalManagerService: com.android.server.power.ThermalManagerService$ThermalHalWrapper mHalWrapper> = r12;

        z1 = virtualinvoke r12.<com.android.server.power.ThermalManagerService$ThermalHalWrapper: boolean connectToHal()>();

     label06:
        z2 = z1;

        if z1 != 0 goto label08;

     label07:
        r13 = new com.android.server.power.ThermalManagerService$ThermalHal11Wrapper;

        specialinvoke r13.<com.android.server.power.ThermalManagerService$ThermalHal11Wrapper: void <init>()>();

        r0.<com.android.server.power.ThermalManagerService: com.android.server.power.ThermalManagerService$ThermalHalWrapper mHalWrapper> = r13;

        z2 = virtualinvoke r13.<com.android.server.power.ThermalManagerService$ThermalHalWrapper: boolean connectToHal()>();

     label08:
        z3 = z2;

        if z2 != 0 goto label10;

     label09:
        r14 = new com.android.server.power.ThermalManagerService$ThermalHal10Wrapper;

        specialinvoke r14.<com.android.server.power.ThermalManagerService$ThermalHal10Wrapper: void <init>()>();

        r0.<com.android.server.power.ThermalManagerService: com.android.server.power.ThermalManagerService$ThermalHalWrapper mHalWrapper> = r14;

        z3 = virtualinvoke r14.<com.android.server.power.ThermalManagerService$ThermalHalWrapper: boolean connectToHal()>();

     label10:
        r15 = r0.<com.android.server.power.ThermalManagerService: com.android.server.power.ThermalManagerService$ThermalHalWrapper mHalWrapper>;

        r2 = new com.android.server.power._$$Lambda$ThermalManagerService$9JFHCKCwrnUIYoXDsqNamhlY5VU;

        specialinvoke r2.<com.android.server.power._$$Lambda$ThermalManagerService$9JFHCKCwrnUIYoXDsqNamhlY5VU: void <init>(com.android.server.power.ThermalManagerService)>(r0);

        virtualinvoke r15.<com.android.server.power.ThermalManagerService$ThermalHalWrapper: void setCallback(com.android.server.power.ThermalManagerService$ThermalHalWrapper$TemperatureChangedCallback)>(r2);

     label11:
        if z3 != 0 goto label14;

     label12:
        $r10 = <com.android.server.power.ThermalManagerService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r10, "No Thermal HAL service on this device");

        exitmonitor r1;

     label13:
        return;

     label14:
        $r4 = r0.<com.android.server.power.ThermalManagerService: com.android.server.power.ThermalManagerService$ThermalHalWrapper mHalWrapper>;

        r16 = virtualinvoke $r4.<com.android.server.power.ThermalManagerService$ThermalHalWrapper: java.util.List getCurrentTemperatures(boolean,int)>(0, 0);

        i0 = interfaceinvoke r16.<java.util.List: int size()>();

     label15:
        if i0 != 0 goto label17;

     label16:
        $r9 = <com.android.server.power.ThermalManagerService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r9, "Thermal HAL reported invalid data, abort connection");

     label17:
        i3 = 0;

     label18:
        if i3 >= i0 goto label21;

     label19:
        $r7 = interfaceinvoke r16.<java.util.List: java.lang.Object get(int)>(i3);

        $r8 = (android.os.Temperature) $r7;

        specialinvoke r0.<com.android.server.power.ThermalManagerService: void onTemperatureChanged(android.os.Temperature,boolean)>($r8, 0);

     label20:
        i3 = i3 + 1;

        goto label18;

     label21:
        specialinvoke r0.<com.android.server.power.ThermalManagerService: void onTemperatureMapChangedLocked()>();

        $r5 = r0.<com.android.server.power.ThermalManagerService: com.android.server.power.ThermalManagerService$TemperatureWatcher mTemperatureWatcher>;

        virtualinvoke $r5.<com.android.server.power.ThermalManagerService$TemperatureWatcher: void updateSevereThresholds()>();

        $r6 = r0.<com.android.server.power.ThermalManagerService: java.util.concurrent.atomic.AtomicBoolean mHalReady>;

        virtualinvoke $r6.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        exitmonitor r1;

     label22:
        return;

     label23:
        $r11 := @caughtexception;

     label24:
        exitmonitor r1;

     label25:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label23;
        catch java.lang.Throwable from label05 to label06 with label23;
        catch java.lang.Throwable from label07 to label08 with label23;
        catch java.lang.Throwable from label09 to label10 with label23;
        catch java.lang.Throwable from label10 to label11 with label23;
        catch java.lang.Throwable from label12 to label13 with label23;
        catch java.lang.Throwable from label14 to label15 with label23;
        catch java.lang.Throwable from label16 to label17 with label23;
        catch java.lang.Throwable from label19 to label20 with label23;
        catch java.lang.Throwable from label21 to label22 with label23;
        catch java.lang.Throwable from label24 to label25 with label23;
    }

    private void onTemperatureChanged(android.os.Temperature, boolean)
    {
        com.android.server.power.ThermalManagerService r0;
        boolean z0;
        java.lang.Object r1, $r5;
        android.os.Temperature r2, r7;
        android.util.ArrayMap $r3;
        java.lang.String $r4;
        int $i0, $i1;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.power.ThermalManagerService;

        r7 := @parameter0: android.os.Temperature;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.server.power.ThermalManagerService: void shutdownIfNeeded(android.os.Temperature)>(r7);

        r1 = r0.<com.android.server.power.ThermalManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.power.ThermalManagerService: android.util.ArrayMap mTemperatureMap>;

        $r4 = virtualinvoke r7.<android.os.Temperature: java.lang.String getName()>();

        $r5 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r7);

        r2 = (android.os.Temperature) $r5;

     label02:
        if r2 == null goto label04;

     label03:
        $i0 = virtualinvoke r2.<android.os.Temperature: int getStatus()>();

        $i1 = virtualinvoke r7.<android.os.Temperature: int getStatus()>();

        if $i0 == $i1 goto label05;

     label04:
        specialinvoke r0.<com.android.server.power.ThermalManagerService: void notifyEventListenersLocked(android.os.Temperature)>(r7);

     label05:
        if z0 == 0 goto label07;

     label06:
        specialinvoke r0.<com.android.server.power.ThermalManagerService: void onTemperatureMapChangedLocked()>();

     label07:
        exitmonitor r1;

     label08:
        return;

     label09:
        $r6 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    private void onTemperatureChangedCallback(android.os.Temperature)
    {
        com.android.server.power.ThermalManagerService r0;
        long l0;
        java.lang.Throwable $r1;
        android.os.Temperature r2;

        r0 := @this: com.android.server.power.ThermalManagerService;

        r2 := @parameter0: android.os.Temperature;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        specialinvoke r0.<com.android.server.power.ThermalManagerService: void onTemperatureChanged(android.os.Temperature,boolean)>(r2, 1);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void onTemperatureMapChangedLocked()
    {
        com.android.server.power.ThermalManagerService r0;
        int i0, $i1, i2, i3, i4;
        android.os.Temperature r1;
        android.util.ArrayMap $r2, $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: com.android.server.power.ThermalManagerService;

        i2 = 0;

        $r2 = r0.<com.android.server.power.ThermalManagerService: android.util.ArrayMap mTemperatureMap>;

        i0 = virtualinvoke $r2.<android.util.ArrayMap: int size()>();

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        $r3 = r0.<com.android.server.power.ThermalManagerService: android.util.ArrayMap mTemperatureMap>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i3);

        r1 = (android.os.Temperature) $r4;

        i4 = i2;

        $i1 = virtualinvoke r1.<android.os.Temperature: int getStatus()>();

        if $i1 < i2 goto label2;

        i4 = virtualinvoke r1.<android.os.Temperature: int getStatus()>();

     label2:
        i3 = i3 + 1;

        i2 = i4;

        goto label1;

     label3:
        $z0 = r0.<com.android.server.power.ThermalManagerService: boolean mIsStatusOverride>;

        if $z0 != 0 goto label4;

        specialinvoke r0.<com.android.server.power.ThermalManagerService: void setStatusLocked(int)>(i2);

     label4:
        return;
    }

    private void postEventListener(android.os.Temperature, android.os.IThermalEventListener, java.lang.Integer)
    {
        com.android.server.power.ThermalManagerService r0;
        android.os.Temperature r1;
        android.os.IThermalEventListener r2;
        java.lang.Integer r3;
        android.os.Handler $r4;
        com.android.server.power._$$Lambda$ThermalManagerService$x5obtNvJKZxnpguOiQsFBDmBZ4k $r5;
        boolean $z0;
        java.lang.String $r6;
        int $i1, $i2;

        r0 := @this: com.android.server.power.ThermalManagerService;

        r1 := @parameter0: android.os.Temperature;

        r2 := @parameter1: android.os.IThermalEventListener;

        r3 := @parameter2: java.lang.Integer;

        if r3 == null goto label1;

        $i1 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        $i2 = virtualinvoke r1.<android.os.Temperature: int getType()>();

        if $i1 == $i2 goto label1;

        return;

     label1:
        $r4 = staticinvoke <com.android.server.FgThread: android.os.Handler getHandler()>();

        $r5 = new com.android.server.power._$$Lambda$ThermalManagerService$x5obtNvJKZxnpguOiQsFBDmBZ4k;

        specialinvoke $r5.<com.android.server.power._$$Lambda$ThermalManagerService$x5obtNvJKZxnpguOiQsFBDmBZ4k: void <init>(android.os.IThermalEventListener,android.os.Temperature)>(r2, r1);

        $z0 = virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r5);

        if $z0 != 0 goto label2;

        $r6 = <com.android.server.power.ThermalManagerService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r6, "Thermal callback failed to queue");

     label2:
        return;
    }

    private void postEventListenerCurrentTemperatures(android.os.IThermalEventListener, java.lang.Integer)
    {
        com.android.server.power.ThermalManagerService r0;
        java.lang.Integer r1;
        java.lang.Object r2, $r5;
        int i0, i1;
        android.util.ArrayMap $r3, $r4;
        android.os.Temperature $r6;
        java.lang.Throwable $r7;
        android.os.IThermalEventListener r8;

        r0 := @this: com.android.server.power.ThermalManagerService;

        r8 := @parameter0: android.os.IThermalEventListener;

        r1 := @parameter1: java.lang.Integer;

        r2 = r0.<com.android.server.power.ThermalManagerService: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        $r3 = r0.<com.android.server.power.ThermalManagerService: android.util.ArrayMap mTemperatureMap>;

        i0 = virtualinvoke $r3.<android.util.ArrayMap: int size()>();

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label06;

     label04:
        $r4 = r0.<com.android.server.power.ThermalManagerService: android.util.ArrayMap mTemperatureMap>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        $r6 = (android.os.Temperature) $r5;

        specialinvoke r0.<com.android.server.power.ThermalManagerService: void postEventListener(android.os.Temperature,android.os.IThermalEventListener,java.lang.Integer)>($r6, r8, r1);

     label05:
        i1 = i1 + 1;

        goto label03;

     label06:
        exitmonitor r2;

     label07:
        return;

     label08:
        $r7 := @caughtexception;

     label09:
        exitmonitor r2;

     label10:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private void postStatusListener(android.os.IThermalStatusListener)
    {
        com.android.server.power.ThermalManagerService r0;
        android.os.IThermalStatusListener r1;
        android.os.Handler $r2;
        com.android.server.power._$$Lambda$ThermalManagerService$ZPQKzo9ZjU_hL4QYH693hWuTqjk $r3;
        boolean $z0;
        java.lang.String $r4;

        r0 := @this: com.android.server.power.ThermalManagerService;

        r1 := @parameter0: android.os.IThermalStatusListener;

        $r2 = staticinvoke <com.android.server.FgThread: android.os.Handler getHandler()>();

        $r3 = new com.android.server.power._$$Lambda$ThermalManagerService$ZPQKzo9ZjU_hL4QYH693hWuTqjk;

        specialinvoke $r3.<com.android.server.power._$$Lambda$ThermalManagerService$ZPQKzo9ZjU_hL4QYH693hWuTqjk: void <init>(com.android.server.power.ThermalManagerService,android.os.IThermalStatusListener)>(r0, r1);

        $z0 = virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        if $z0 != 0 goto label1;

        $r4 = <com.android.server.power.ThermalManagerService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r4, "Thermal callback failed to queue");

     label1:
        return;
    }

    private void setStatusLocked(int)
    {
        com.android.server.power.ThermalManagerService r0;
        int i0, $i1;

        r0 := @this: com.android.server.power.ThermalManagerService;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.server.power.ThermalManagerService: int mStatus>;

        if i0 == $i1 goto label1;

        r0.<com.android.server.power.ThermalManagerService: int mStatus> = i0;

        specialinvoke r0.<com.android.server.power.ThermalManagerService: void notifyStatusListenersLocked()>();

     label1:
        return;
    }

    private void shutdownIfNeeded(android.os.Temperature)
    {
        com.android.server.power.ThermalManagerService r0;
        android.os.Temperature r1;
        android.os.PowerManager r2;
        int i0, $i1;
        android.content.Context $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.server.power.ThermalManagerService;

        r1 := @parameter0: android.os.Temperature;

        $i1 = virtualinvoke r1.<android.os.Temperature: int getStatus()>();

        if $i1 == 6 goto label1;

        return;

     label1:
        $r3 = virtualinvoke r0.<com.android.server.power.ThermalManagerService: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/os/PowerManager;");

        r2 = (android.os.PowerManager) $r4;

        i0 = virtualinvoke r1.<android.os.Temperature: int getType()>();

        if i0 == 0 goto label3;

        if i0 == 1 goto label3;

        if i0 == 2 goto label2;

        if i0 == 3 goto label3;

        if i0 == 9 goto label3;

        goto label4;

     label2:
        virtualinvoke r2.<android.os.PowerManager: void shutdown(boolean,java.lang.String,boolean)>(0, "thermal,battery", 0);

        goto label4;

     label3:
        virtualinvoke r2.<android.os.PowerManager: void shutdown(boolean,java.lang.String,boolean)>(0, "thermal", 0);

     label4:
        return;
    }

    public void lambda$postStatusListener$0$ThermalManagerService(android.os.IThermalStatusListener)
    {
        com.android.server.power.ThermalManagerService r0;
        int $i0;
        java.lang.Exception $r1;
        java.lang.String $r2;
        android.os.IThermalStatusListener r3;

        r0 := @this: com.android.server.power.ThermalManagerService;

        r3 := @parameter0: android.os.IThermalStatusListener;

     label1:
        $i0 = r0.<com.android.server.power.ThermalManagerService: int mStatus>;

        interfaceinvoke r3.<android.os.IThermalStatusListener: void onStatusChange(int)>($i0);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r2 = <com.android.server.power.ThermalManagerService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, "Thermal callback failed to call", $r1);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void onBootPhase(int)
    {
        com.android.server.power.ThermalManagerService r0;
        int i0;

        r0 := @this: com.android.server.power.ThermalManagerService;

        i0 := @parameter0: int;

        if i0 != 550 goto label1;

        specialinvoke r0.<com.android.server.power.ThermalManagerService: void onActivityManagerReady()>();

     label1:
        return;
    }

    public void onStart()
    {
        com.android.server.power.ThermalManagerService r0;
        android.os.IThermalService$Stub $r1;

        r0 := @this: com.android.server.power.ThermalManagerService;

        $r1 = r0.<com.android.server.power.ThermalManagerService: android.os.IThermalService$Stub mService>;

        virtualinvoke r0.<com.android.server.power.ThermalManagerService: void publishBinderService(java.lang.String,android.os.IBinder)>("thermalservice", $r1);

        return;
    }
}
