class com.android.server.power.WakeLockLog$EntryByteTranslator extends java.lang.Object
{
    static final int ERROR_TIME_IS_NEGATIVE;
    static final int ERROR_TIME_TOO_LARGE;
    private final com.android.server.power.WakeLockLog$TagDatabase mTagDatabase;

    void <init>(com.android.server.power.WakeLockLog$TagDatabase)
    {
        com.android.server.power.WakeLockLog$EntryByteTranslator r0;
        com.android.server.power.WakeLockLog$TagDatabase r1;

        r0 := @this: com.android.server.power.WakeLockLog$EntryByteTranslator;

        r1 := @parameter0: com.android.server.power.WakeLockLog$TagDatabase;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.power.WakeLockLog$EntryByteTranslator: com.android.server.power.WakeLockLog$TagDatabase mTagDatabase> = r1;

        return;
    }

    private int getRelativeTime(long, long)
    {
        com.android.server.power.WakeLockLog$EntryByteTranslator r0;
        long l0, l4, l5;
        byte $b1, $b2;
        int $i3;

        r0 := @this: com.android.server.power.WakeLockLog$EntryByteTranslator;

        l4 := @parameter0: long;

        l0 := @parameter1: long;

        $b1 = l0 cmp l4;

        if $b1 >= 0 goto label1;

        return -1;

     label1:
        l5 = l0 - l4;

        $b2 = l5 cmp 255L;

        if $b2 <= 0 goto label2;

        return -2;

     label2:
        $i3 = (int) l5;

        return $i3;
    }

    com.android.server.power.WakeLockLog$LogEntry fromBytes(byte[], long, com.android.server.power.WakeLockLog$LogEntry)
    {
        com.android.server.power.WakeLockLog$EntryByteTranslator r0;
        long l0, $l8, $l9, $l11, $l12, $l13, $l14, $l16, $l17, $l18, $l19, $l21, $l22, $l23, $l24, $l26, $l27, $l28, $l29, $l31, $l32, $l33, $l34, $l36, $l37, $l38, $l39, $l41, $l42, $l43, $l44, $l49, $l51, $l56, $l57;
        byte b1, $b3, $b4, $b5, $b7, $b10, $b15, $b20, $b25, $b30, $b35, $b40, $b46, $b47, $b50, $b53, $b54, b59, b60, b61;
        int $i2, $i6, $i45, $i52;
        com.android.server.power.WakeLockLog$LogEntry $r1, r11;
        com.android.server.power.WakeLockLog$TagDatabase $r2, $r3;
        short $s48, $s55;
        java.lang.StringBuilder $r4;
        java.lang.String $r8;
        java.lang.Exception $r9;
        byte[] r10;
        com.android.server.power.WakeLockLog$TagData r13, r14;

        r0 := @this: com.android.server.power.WakeLockLog$EntryByteTranslator;

        r10 := @parameter0: byte[];

        l0 := @parameter1: long;

        r11 := @parameter2: com.android.server.power.WakeLockLog$LogEntry;

        if r10 == null goto label12;

        $i2 = lengthof r10;

        if $i2 != 0 goto label01;

        goto label12;

     label01:
        if r11 == null goto label02;

        goto label03;

     label02:
        $r1 = new com.android.server.power.WakeLockLog$LogEntry;

        specialinvoke $r1.<com.android.server.power.WakeLockLog$LogEntry: void <init>()>();

        r11 = $r1;

     label03:
        $b3 = r10[0];

        $b4 = $b3 >> 6;

        b59 = $b4 & 3;

        $b5 = b59 & 2;

        if $b5 != 2 goto label04;

        b59 = 2;

        goto label04;

     label04:
        if b59 == 0 goto label09;

        if b59 == 1 goto label07;

        if b59 == 2 goto label05;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Type not recognized [");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b59);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = new java.lang.Exception;

        specialinvoke $r9.<java.lang.Exception: void <init>()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PowerManagerService.WLLog", $r8, $r9);

        goto label10;

     label05:
        $i52 = lengthof r10;

        if $i52 >= 2 goto label06;

        goto label10;

     label06:
        b60 = r10[0];

        $r3 = r0.<com.android.server.power.WakeLockLog$EntryByteTranslator: com.android.server.power.WakeLockLog$TagDatabase mTagDatabase>;

        $b53 = b60 & 127;

        r13 = virtualinvoke $r3.<com.android.server.power.WakeLockLog$TagDatabase: com.android.server.power.WakeLockLog$TagData getTag(int)>($b53);

        $b54 = r10[1];

        $s55 = $b54 & 255;

        $l56 = (long) $s55;

        $l57 = $l56 + l0;

        virtualinvoke r11.<com.android.server.power.WakeLockLog$LogEntry: void set(long,int,com.android.server.power.WakeLockLog$TagData,int)>($l57, 2, r13, 0);

        return r11;

     label07:
        $i45 = lengthof r10;

        if $i45 >= 3 goto label08;

        goto label10;

     label08:
        b1 = r10[0];

        b61 = r10[1];

        $r2 = r0.<com.android.server.power.WakeLockLog$EntryByteTranslator: com.android.server.power.WakeLockLog$TagDatabase mTagDatabase>;

        $b46 = b61 & 127;

        r14 = virtualinvoke $r2.<com.android.server.power.WakeLockLog$TagDatabase: com.android.server.power.WakeLockLog$TagData getTag(int)>($b46);

        $b47 = r10[2];

        $s48 = $b47 & 255;

        $l49 = (long) $s48;

        $l51 = $l49 + l0;

        $b50 = b1 & 63;

        virtualinvoke r11.<com.android.server.power.WakeLockLog$LogEntry: void set(long,int,com.android.server.power.WakeLockLog$TagData,int)>($l51, 1, r14, $b50);

        return r11;

     label09:
        $i6 = lengthof r10;

        if $i6 >= 9 goto label11;

     label10:
        return null;

     label11:
        $b7 = r10[1];

        $l8 = (long) $b7;

        $l9 = $l8 & 255L;

        $l14 = $l9 << 56;

        $b10 = r10[2];

        $l11 = (long) $b10;

        $l12 = $l11 & 255L;

        $l13 = $l12 << 48;

        $l19 = $l14 | $l13;

        $b15 = r10[3];

        $l16 = (long) $b15;

        $l17 = $l16 & 255L;

        $l18 = $l17 << 40;

        $l24 = $l19 | $l18;

        $b20 = r10[4];

        $l21 = (long) $b20;

        $l22 = $l21 & 255L;

        $l23 = $l22 << 32;

        $l29 = $l24 | $l23;

        $b25 = r10[5];

        $l26 = (long) $b25;

        $l27 = $l26 & 255L;

        $l28 = $l27 << 24;

        $l34 = $l29 | $l28;

        $b30 = r10[6];

        $l31 = (long) $b30;

        $l32 = $l31 & 255L;

        $l33 = $l32 << 16;

        $l39 = $l34 | $l33;

        $b35 = r10[7];

        $l36 = (long) $b35;

        $l37 = $l36 & 255L;

        $l38 = $l37 << 8;

        $l43 = $l39 | $l38;

        $b40 = r10[8];

        $l41 = (long) $b40;

        $l42 = $l41 & 255L;

        $l44 = $l43 | $l42;

        virtualinvoke r11.<com.android.server.power.WakeLockLog$LogEntry: void set(long,int,com.android.server.power.WakeLockLog$TagData,int)>($l44, 0, null, 0);

        return r11;

     label12:
        return null;
    }

    int toBytes(com.android.server.power.WakeLockLog$LogEntry, byte[], long)
    {
        com.android.server.power.WakeLockLog$EntryByteTranslator r0;
        com.android.server.power.WakeLockLog$LogEntry r1;
        int $i0, $i4, $i9, $i14, $i19, $i24, $i29, $i34, $i38, $i41, $i43, $i44, $i45, $i48, $i51, $i54, $i56, $i57, $i60, i64, i67, i69;
        byte $b1, $b5, $b6, $b10, $b11, $b15, $b16, $b20, $b21, $b25, $b26, $b30, $b31, $b35, $b36, $b39, $b40, $b46, $b47, $b49, $b50, $b52, $b53, $b58, $b59, $b61, $b62, b66;
        long $l2, $l3, $l7, $l8, $l12, $l13, $l17, $l18, $l22, $l23, $l27, $l28, $l32, $l33, $l37, $l42, $l55, l63, l71;
        com.android.server.power.WakeLockLog$TagData $r2, $r9;
        com.android.server.power.WakeLockLog$TagDatabase $r3, $r10;
        java.lang.StringBuilder $r4;
        java.lang.RuntimeException $r7;
        java.lang.String $r8;
        byte[] r11;

        r0 := @this: com.android.server.power.WakeLockLog$EntryByteTranslator;

        r1 := @parameter0: com.android.server.power.WakeLockLog$LogEntry;

        r11 := @parameter1: byte[];

        l63 := @parameter2: long;

        i64 = r1.<com.android.server.power.WakeLockLog$LogEntry: int type>;

        if i64 == 0 goto label5;

        if i64 == 1 goto label3;

        if i64 != 2 goto label2;

        b66 = 2;

        if r11 == null goto label6;

        b66 = 2;

        $i54 = lengthof r11;

        if $i54 < 2 goto label6;

        $l55 = r1.<com.android.server.power.WakeLockLog$LogEntry: long time>;

        i67 = specialinvoke r0.<com.android.server.power.WakeLockLog$EntryByteTranslator: int getRelativeTime(long,long)>(l63, $l55);

        if i67 >= 0 goto label1;

        return i67;

     label1:
        $r10 = r0.<com.android.server.power.WakeLockLog$EntryByteTranslator: com.android.server.power.WakeLockLog$TagDatabase mTagDatabase>;

        $r9 = r1.<com.android.server.power.WakeLockLog$LogEntry: com.android.server.power.WakeLockLog$TagData tag>;

        $i56 = virtualinvoke $r10.<com.android.server.power.WakeLockLog$TagDatabase: int getTagIndex(com.android.server.power.WakeLockLog$TagData)>($r9);

        $i57 = $i56 | 128;

        $b58 = (byte) $i57;

        $b59 = (byte) $b58;

        r11[0] = $b59;

        $i60 = i67 & 255;

        $b61 = (byte) $i60;

        $b62 = (byte) $b61;

        r11[1] = $b62;

        b66 = 2;

        goto label6;

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown type ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = new java.lang.RuntimeException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label3:
        b66 = 3;

        if r11 == null goto label6;

        b66 = 3;

        $i41 = lengthof r11;

        if $i41 < 3 goto label6;

        $l42 = r1.<com.android.server.power.WakeLockLog$LogEntry: long time>;

        i69 = specialinvoke r0.<com.android.server.power.WakeLockLog$EntryByteTranslator: int getRelativeTime(long,long)>(l63, $l42);

        if i69 >= 0 goto label4;

        return i69;

     label4:
        $i43 = r1.<com.android.server.power.WakeLockLog$LogEntry: int flags>;

        $i44 = $i43 & 63;

        $i45 = $i44 | 64;

        $b46 = (byte) $i45;

        $b47 = (byte) $b46;

        r11[0] = $b47;

        $r3 = r0.<com.android.server.power.WakeLockLog$EntryByteTranslator: com.android.server.power.WakeLockLog$TagDatabase mTagDatabase>;

        $r2 = r1.<com.android.server.power.WakeLockLog$LogEntry: com.android.server.power.WakeLockLog$TagData tag>;

        $i48 = virtualinvoke $r3.<com.android.server.power.WakeLockLog$TagDatabase: int getTagIndex(com.android.server.power.WakeLockLog$TagData)>($r2);

        $b49 = (byte) $i48;

        $b50 = (byte) $b49;

        r11[1] = $b50;

        $i51 = i69 & 255;

        $b52 = (byte) $i51;

        $b53 = (byte) $b52;

        r11[2] = $b53;

        b66 = 3;

        goto label6;

     label5:
        l71 = r1.<com.android.server.power.WakeLockLog$LogEntry: long time>;

        b66 = 9;

        if r11 == null goto label6;

        b66 = 9;

        $i0 = lengthof r11;

        if $i0 < 9 goto label6;

        $b1 = (byte) 0;

        r11[0] = $b1;

        $l2 = l71 >> 56;

        $l3 = $l2 & 255L;

        $i4 = (int) $l3;

        $b5 = (byte) $i4;

        $b6 = (byte) $b5;

        r11[1] = $b6;

        $l7 = l71 >> 48;

        $l8 = $l7 & 255L;

        $i9 = (int) $l8;

        $b10 = (byte) $i9;

        $b11 = (byte) $b10;

        r11[2] = $b11;

        $l12 = l71 >> 40;

        $l13 = $l12 & 255L;

        $i14 = (int) $l13;

        $b15 = (byte) $i14;

        $b16 = (byte) $b15;

        r11[3] = $b16;

        $l17 = l71 >> 32;

        $l18 = $l17 & 255L;

        $i19 = (int) $l18;

        $b20 = (byte) $i19;

        $b21 = (byte) $b20;

        r11[4] = $b21;

        $l22 = l71 >> 24;

        $l23 = $l22 & 255L;

        $i24 = (int) $l23;

        $b25 = (byte) $i24;

        $b26 = (byte) $b25;

        r11[5] = $b26;

        $l27 = l71 >> 16;

        $l28 = $l27 & 255L;

        $i29 = (int) $l28;

        $b30 = (byte) $i29;

        $b31 = (byte) $b30;

        r11[6] = $b31;

        $l32 = l71 >> 8;

        $l33 = $l32 & 255L;

        $i34 = (int) $l33;

        $b35 = (byte) $i34;

        $b36 = (byte) $b35;

        r11[7] = $b36;

        $l37 = l71 & 255L;

        $i38 = (int) $l37;

        $b39 = (byte) $i38;

        $b40 = (byte) $b39;

        r11[8] = $b40;

        b66 = 9;

     label6:
        return b66;
    }

    public static void <clinit>()
    {
        <com.android.server.power.WakeLockLog$EntryByteTranslator: int ERROR_TIME_TOO_LARGE> = -2;

        <com.android.server.power.WakeLockLog$EntryByteTranslator: int ERROR_TIME_IS_NEGATIVE> = -1;

        return;
    }
}
