class com.android.server.power.WakeLockLog$TagDatabase extends java.lang.Object
{
    private final com.android.server.power.WakeLockLog$TagData[] mArray;
    private com.android.server.power.WakeLockLog$TagDatabase$Callback mCallback;
    private final int mInvalidIndex;

    void <init>(com.android.server.power.WakeLockLog$Injector)
    {
        com.android.server.power.WakeLockLog$TagDatabase r0;
        com.android.server.power.WakeLockLog$Injector r1;
        int i0, $i1, $i2, $i3;
        com.android.server.power.WakeLockLog$TagData[] $r2;

        r0 := @this: com.android.server.power.WakeLockLog$TagDatabase;

        r1 := @parameter0: com.android.server.power.WakeLockLog$Injector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = virtualinvoke r1.<com.android.server.power.WakeLockLog$Injector: int getTagDatabaseSize()>();

        i0 = staticinvoke <java.lang.Math: int min(int,int)>($i1, 128);

        $i2 = i0 - 1;

        $r2 = newarray (com.android.server.power.WakeLockLog$TagData)[$i2];

        r0.<com.android.server.power.WakeLockLog$TagDatabase: com.android.server.power.WakeLockLog$TagData[] mArray> = $r2;

        $i3 = i0 - 1;

        r0.<com.android.server.power.WakeLockLog$TagDatabase: int mInvalidIndex> = $i3;

        return;
    }

    private void setToIndex(com.android.server.power.WakeLockLog$TagData, int)
    {
        com.android.server.power.WakeLockLog$TagDatabase r0;
        com.android.server.power.WakeLockLog$TagData r1, r4;
        int i0, $i1, $i2;
        com.android.server.power.WakeLockLog$TagData[] $r2, r3;

        r0 := @this: com.android.server.power.WakeLockLog$TagDatabase;

        r1 := @parameter0: com.android.server.power.WakeLockLog$TagData;

        i0 := @parameter1: int;

        if i0 < 0 goto label3;

        r3 = r0.<com.android.server.power.WakeLockLog$TagDatabase: com.android.server.power.WakeLockLog$TagData[] mArray>;

        $i1 = lengthof r3;

        if i0 < $i1 goto label1;

        goto label3;

     label1:
        r4 = r3[i0];

        if r4 == null goto label2;

        $i2 = r0.<com.android.server.power.WakeLockLog$TagDatabase: int mInvalidIndex>;

        r4.<com.android.server.power.WakeLockLog$TagData: int index> = $i2;

     label2:
        $r2 = r0.<com.android.server.power.WakeLockLog$TagDatabase: com.android.server.power.WakeLockLog$TagData[] mArray>;

        $r2[i0] = r1;

        r1.<com.android.server.power.WakeLockLog$TagData: int index> = i0;

        return;

     label3:
        return;
    }

    public static void updateTagTime(com.android.server.power.WakeLockLog$TagData, long)
    {
        com.android.server.power.WakeLockLog$TagData r0;
        long l0;

        r0 := @parameter0: com.android.server.power.WakeLockLog$TagData;

        l0 := @parameter1: long;

        if r0 == null goto label1;

        r0.<com.android.server.power.WakeLockLog$TagData: long lastUsedTime> = l0;

     label1:
        return;
    }

    public com.android.server.power.WakeLockLog$TagData findOrCreateTag(java.lang.String, int, boolean)
    {
        com.android.server.power.WakeLockLog$TagDatabase r0;
        boolean z0, $z1, z2;
        com.android.server.power.WakeLockLog$TagData r2, $r3, r5, r7;
        int $i0, i4, i5, i6, i7, i8, i9, i10;
        long $l1, $l2;
        byte $b3;
        java.lang.String r4;
        com.android.server.power.WakeLockLog$TagData[] r6;
        com.android.server.power.WakeLockLog$TagDatabase$Callback r8;

        r0 := @this: com.android.server.power.WakeLockLog$TagDatabase;

        r4 := @parameter0: java.lang.String;

        i4 := @parameter1: int;

        z0 := @parameter2: boolean;

        i5 = -1;

        i6 = -1;

        $r3 = new com.android.server.power.WakeLockLog$TagData;

        specialinvoke $r3.<com.android.server.power.WakeLockLog$TagData: void <init>(java.lang.String,int)>(r4, i4);

        i7 = 0;

        r5 = null;

     label01:
        r6 = r0.<com.android.server.power.WakeLockLog$TagDatabase: com.android.server.power.WakeLockLog$TagData[] mArray>;

        $i0 = lengthof r6;

        if i7 >= $i0 goto label07;

        r2 = r6[i7];

        $z1 = virtualinvoke $r3.<com.android.server.power.WakeLockLog$TagData: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label02;

        return r2;

     label02:
        if z0 != 0 goto label03;

        i8 = i5;

        r7 = r5;

        i9 = i6;

        goto label06;

     label03:
        if r2 == null goto label05;

        if r5 == null goto label04;

        i8 = i5;

        r7 = r5;

        i9 = i6;

        $l2 = r2.<com.android.server.power.WakeLockLog$TagData: long lastUsedTime>;

        $l1 = r5.<com.android.server.power.WakeLockLog$TagData: long lastUsedTime>;

        $b3 = $l2 cmp $l1;

        if $b3 >= 0 goto label06;

     label04:
        i9 = i7;

        r7 = r2;

        i8 = i5;

        goto label06;

     label05:
        i8 = i5;

        r7 = r5;

        i9 = i6;

        if i5 != -1 goto label06;

        i8 = i7;

        i9 = i6;

        r7 = r5;

     label06:
        i7 = i7 + 1;

        i5 = i8;

        r5 = r7;

        i6 = i9;

        goto label01;

     label07:
        if z0 != 0 goto label08;

        return null;

     label08:
        if i5 != -1 goto label09;

        z2 = 1;

        goto label10;

     label09:
        z2 = 0;

     label10:
        if z2 == 0 goto label11;

        r8 = r0.<com.android.server.power.WakeLockLog$TagDatabase: com.android.server.power.WakeLockLog$TagDatabase$Callback mCallback>;

        if r8 == null goto label11;

        interfaceinvoke r8.<com.android.server.power.WakeLockLog$TagDatabase$Callback: void onIndexRemoved(int)>(i6);

     label11:
        if i5 == -1 goto label12;

        i10 = i5;

        goto label13;

     label12:
        i10 = i6;

     label13:
        specialinvoke r0.<com.android.server.power.WakeLockLog$TagDatabase: void setToIndex(com.android.server.power.WakeLockLog$TagData,int)>($r3, i10);

        return $r3;
    }

    public com.android.server.power.WakeLockLog$TagData getTag(int)
    {
        com.android.server.power.WakeLockLog$TagDatabase r0;
        int i0, $i1, $i2;
        com.android.server.power.WakeLockLog$TagData[] r1;
        com.android.server.power.WakeLockLog$TagData $r2;

        r0 := @this: com.android.server.power.WakeLockLog$TagDatabase;

        i0 := @parameter0: int;

        if i0 < 0 goto label2;

        r1 = r0.<com.android.server.power.WakeLockLog$TagDatabase: com.android.server.power.WakeLockLog$TagData[] mArray>;

        $i1 = lengthof r1;

        if i0 >= $i1 goto label2;

        $i2 = r0.<com.android.server.power.WakeLockLog$TagDatabase: int mInvalidIndex>;

        if i0 != $i2 goto label1;

        goto label2;

     label1:
        $r2 = r1[i0];

        return $r2;

     label2:
        return null;
    }

    public com.android.server.power.WakeLockLog$TagData getTag(java.lang.String, int)
    {
        com.android.server.power.WakeLockLog$TagDatabase r0;
        java.lang.String r1;
        int i0;
        com.android.server.power.WakeLockLog$TagData $r2;

        r0 := @this: com.android.server.power.WakeLockLog$TagDatabase;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<com.android.server.power.WakeLockLog$TagDatabase: com.android.server.power.WakeLockLog$TagData findOrCreateTag(java.lang.String,int,boolean)>(r1, i0, 0);

        return $r2;
    }

    public int getTagIndex(com.android.server.power.WakeLockLog$TagData)
    {
        com.android.server.power.WakeLockLog$TagDatabase r0;
        com.android.server.power.WakeLockLog$TagData r1;
        int i0;

        r0 := @this: com.android.server.power.WakeLockLog$TagDatabase;

        r1 := @parameter0: com.android.server.power.WakeLockLog$TagData;

        if r1 != null goto label1;

        i0 = r0.<com.android.server.power.WakeLockLog$TagDatabase: int mInvalidIndex>;

        goto label2;

     label1:
        i0 = r1.<com.android.server.power.WakeLockLog$TagData: int index>;

     label2:
        return i0;
    }

    public void setCallback(com.android.server.power.WakeLockLog$TagDatabase$Callback)
    {
        com.android.server.power.WakeLockLog$TagDatabase r0;
        com.android.server.power.WakeLockLog$TagDatabase$Callback r1;

        r0 := @this: com.android.server.power.WakeLockLog$TagDatabase;

        r1 := @parameter0: com.android.server.power.WakeLockLog$TagDatabase$Callback;

        r0.<com.android.server.power.WakeLockLog$TagDatabase: com.android.server.power.WakeLockLog$TagDatabase$Callback mCallback> = r1;

        return;
    }

    public java.lang.String toString()
    {
        com.android.server.power.WakeLockLog$TagDatabase r0;
        java.lang.StringBuilder $r2;
        com.android.server.power.WakeLockLog$TagData[] $r4, r14;
        int $i0, $i1, $i2, i4, i5, i8, i9, i10, i13, i14;
        java.lang.String $r11, $r12, $r13;
        com.android.server.power.WakeLockLog$TagData r15;

        r0 := @this: com.android.server.power.WakeLockLog$TagDatabase;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tag Database: size(");

        $r4 = r0.<com.android.server.power.WakeLockLog$TagDatabase: com.android.server.power.WakeLockLog$TagData[] mArray>;

        $i0 = lengthof $r4;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        i4 = 0;

        i5 = 0;

        i8 = 0;

     label1:
        r14 = r0.<com.android.server.power.WakeLockLog$TagDatabase: com.android.server.power.WakeLockLog$TagData[] mArray>;

        $i1 = lengthof r14;

        if i8 >= $i1 goto label3;

        i9 = i5 + 8;

        r15 = r14[i8];

        i10 = i4;

        i5 = i9;

        if r15 == null goto label2;

        i13 = i4 + 1;

        $i2 = virtualinvoke r15.<com.android.server.power.WakeLockLog$TagData: int getByteSize()>();

        i14 = i9 + $i2;

        i10 = i13;

        i5 = i14;

        $r12 = r15.<com.android.server.power.WakeLockLog$TagData: java.lang.String tag>;

        if $r12 == null goto label2;

        $r13 = r15.<com.android.server.power.WakeLockLog$TagData: java.lang.String tag>;

        virtualinvoke $r13.<java.lang.String: int length()>();

        i5 = i14;

        i10 = i13;

     label2:
        i8 = i8 + 1;

        i4 = i10;

        goto label1;

     label3:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", entries: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Bytes used: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r11 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }
}
