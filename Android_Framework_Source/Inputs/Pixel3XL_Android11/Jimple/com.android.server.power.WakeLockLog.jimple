final class com.android.server.power.WakeLockLog extends java.lang.Object
{
    private static final java.text.SimpleDateFormat DATE_FORMAT;
    private static final boolean DEBUG;
    private static final int FLAG_ACQUIRE_CAUSES_WAKEUP;
    private static final int FLAG_ON_AFTER_RELEASE;
    private static final int LEVEL_DOZE_WAKE_LOCK;
    private static final int LEVEL_DRAW_WAKE_LOCK;
    private static final int LEVEL_FULL_WAKE_LOCK;
    private static final int LEVEL_PARTIAL_WAKE_LOCK;
    private static final int LEVEL_PROXIMITY_SCREEN_OFF_WAKE_LOCK;
    private static final int LEVEL_SCREEN_BRIGHT_WAKE_LOCK;
    private static final int LEVEL_SCREEN_DIM_WAKE_LOCK;
    private static final java.lang.String[] LEVEL_TO_STRING;
    private static final int LEVEL_UNKNOWN;
    private static final int LOG_SIZE;
    private static final int LOG_SIZE_MIN;
    private static final int MASK_LOWER_6_BITS;
    private static final int MASK_LOWER_7_BITS;
    private static final int MAX_LOG_ENTRY_BYTE_SIZE;
    private static final int MSG_ON_WAKE_LOCK_EVENT;
    private static final java.lang.String[] REDUCED_TAG_PREFIXES;
    private static final java.lang.String TAG;
    private static final int TAG_DATABASE_SIZE;
    private static final int TAG_DATABASE_SIZE_MAX;
    private static final int TYPE_ACQUIRE;
    private static final int TYPE_RELEASE;
    private static final int TYPE_TIME_RESET;
    private final java.text.SimpleDateFormat mDumpsysDateFormat;
    private final android.os.Handler mHandler;
    private final com.android.server.power.WakeLockLog$Injector mInjector;
    private final java.lang.Object mLock;
    private final com.android.server.power.WakeLockLog$TheLog mLog;
    private final com.android.server.power.WakeLockLog$TagDatabase mTagDatabase;

    static void <clinit>()
    {
        java.lang.String[] $r0, $r1;
        java.text.SimpleDateFormat $r2;

        <com.android.server.power.WakeLockLog: int TYPE_TIME_RESET> = 0;

        <com.android.server.power.WakeLockLog: int TYPE_RELEASE> = 2;

        <com.android.server.power.WakeLockLog: int TYPE_ACQUIRE> = 1;

        <com.android.server.power.WakeLockLog: int TAG_DATABASE_SIZE_MAX> = 128;

        <com.android.server.power.WakeLockLog: int TAG_DATABASE_SIZE> = 128;

        <com.android.server.power.WakeLockLog: java.lang.String TAG> = "PowerManagerService.WLLog";

        <com.android.server.power.WakeLockLog: int MSG_ON_WAKE_LOCK_EVENT> = 1;

        <com.android.server.power.WakeLockLog: int MAX_LOG_ENTRY_BYTE_SIZE> = 9;

        <com.android.server.power.WakeLockLog: int MASK_LOWER_7_BITS> = 127;

        <com.android.server.power.WakeLockLog: int MASK_LOWER_6_BITS> = 63;

        <com.android.server.power.WakeLockLog: int LOG_SIZE_MIN> = 10;

        <com.android.server.power.WakeLockLog: int LOG_SIZE> = 10240;

        <com.android.server.power.WakeLockLog: int LEVEL_UNKNOWN> = 0;

        <com.android.server.power.WakeLockLog: int LEVEL_SCREEN_DIM_WAKE_LOCK> = 3;

        <com.android.server.power.WakeLockLog: int LEVEL_SCREEN_BRIGHT_WAKE_LOCK> = 4;

        <com.android.server.power.WakeLockLog: int LEVEL_PROXIMITY_SCREEN_OFF_WAKE_LOCK> = 5;

        <com.android.server.power.WakeLockLog: int LEVEL_PARTIAL_WAKE_LOCK> = 1;

        <com.android.server.power.WakeLockLog: int LEVEL_FULL_WAKE_LOCK> = 2;

        <com.android.server.power.WakeLockLog: int LEVEL_DRAW_WAKE_LOCK> = 7;

        <com.android.server.power.WakeLockLog: int LEVEL_DOZE_WAKE_LOCK> = 6;

        <com.android.server.power.WakeLockLog: int FLAG_ON_AFTER_RELEASE> = 8;

        <com.android.server.power.WakeLockLog: int FLAG_ACQUIRE_CAUSES_WAKEUP> = 16;

        <com.android.server.power.WakeLockLog: boolean DEBUG> = 0;

        $r0 = newarray (java.lang.String)[8];

        $r0[0] = "unknown";

        $r0[1] = "partial";

        $r0[2] = "full";

        $r0[3] = "screen-dim";

        $r0[4] = "screen-bright";

        $r0[5] = "prox";

        $r0[6] = "doze";

        $r0[7] = "draw";

        <com.android.server.power.WakeLockLog: java.lang.String[] LEVEL_TO_STRING> = $r0;

        $r1 = newarray (java.lang.String)[3];

        $r1[0] = "*job*/";

        $r1[1] = "*gms_scheduler*/";

        $r1[2] = "IntentOp:";

        <com.android.server.power.WakeLockLog: java.lang.String[] REDUCED_TAG_PREFIXES> = $r1;

        $r2 = new java.text.SimpleDateFormat;

        specialinvoke $r2.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("MM-dd HH:mm:ss.SSS");

        <com.android.server.power.WakeLockLog: java.text.SimpleDateFormat DATE_FORMAT> = $r2;

        return;
    }

    void <init>()
    {
        com.android.server.power.WakeLockLog r0;
        com.android.server.power.WakeLockLog$Injector $r1;

        r0 := @this: com.android.server.power.WakeLockLog;

        $r1 = new com.android.server.power.WakeLockLog$Injector;

        specialinvoke $r1.<com.android.server.power.WakeLockLog$Injector: void <init>()>();

        specialinvoke r0.<com.android.server.power.WakeLockLog: void <init>(com.android.server.power.WakeLockLog$Injector)>($r1);

        return;
    }

    void <init>(com.android.server.power.WakeLockLog$Injector)
    {
        com.android.server.power.WakeLockLog r0;
        com.android.server.power.WakeLockLog$Injector r1;
        java.lang.Object $r3;
        com.android.server.power.WakeLockLog$WakeLockLogHandler $r4;
        android.os.Looper $r5;
        com.android.server.power.WakeLockLog$TagDatabase $r6, $r9;
        com.android.server.power.WakeLockLog$TheLog $r7;
        com.android.server.power.WakeLockLog$EntryByteTranslator $r8;
        java.text.SimpleDateFormat $r10;

        r0 := @this: com.android.server.power.WakeLockLog;

        r1 := @parameter0: com.android.server.power.WakeLockLog$Injector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<com.android.server.power.WakeLockLog: java.lang.Object mLock> = $r3;

        r0.<com.android.server.power.WakeLockLog: com.android.server.power.WakeLockLog$Injector mInjector> = r1;

        $r4 = new com.android.server.power.WakeLockLog$WakeLockLogHandler;

        $r5 = virtualinvoke r1.<com.android.server.power.WakeLockLog$Injector: android.os.Looper getLooper()>();

        specialinvoke $r4.<com.android.server.power.WakeLockLog$WakeLockLogHandler: void <init>(com.android.server.power.WakeLockLog,android.os.Looper)>(r0, $r5);

        r0.<com.android.server.power.WakeLockLog: android.os.Handler mHandler> = $r4;

        $r6 = new com.android.server.power.WakeLockLog$TagDatabase;

        specialinvoke $r6.<com.android.server.power.WakeLockLog$TagDatabase: void <init>(com.android.server.power.WakeLockLog$Injector)>(r1);

        r0.<com.android.server.power.WakeLockLog: com.android.server.power.WakeLockLog$TagDatabase mTagDatabase> = $r6;

        $r7 = new com.android.server.power.WakeLockLog$TheLog;

        $r8 = new com.android.server.power.WakeLockLog$EntryByteTranslator;

        specialinvoke $r8.<com.android.server.power.WakeLockLog$EntryByteTranslator: void <init>(com.android.server.power.WakeLockLog$TagDatabase)>($r6);

        $r9 = r0.<com.android.server.power.WakeLockLog: com.android.server.power.WakeLockLog$TagDatabase mTagDatabase>;

        specialinvoke $r7.<com.android.server.power.WakeLockLog$TheLog: void <init>(com.android.server.power.WakeLockLog$Injector,com.android.server.power.WakeLockLog$EntryByteTranslator,com.android.server.power.WakeLockLog$TagDatabase)>(r1, $r8, $r9);

        r0.<com.android.server.power.WakeLockLog: com.android.server.power.WakeLockLog$TheLog mLog> = $r7;

        $r10 = virtualinvoke r1.<com.android.server.power.WakeLockLog$Injector: java.text.SimpleDateFormat getDateFormat()>();

        r0.<com.android.server.power.WakeLockLog: java.text.SimpleDateFormat mDumpsysDateFormat> = $r10;

        return;
    }

    static java.text.SimpleDateFormat access$000()
    {
        java.text.SimpleDateFormat $r0;

        $r0 = <com.android.server.power.WakeLockLog: java.text.SimpleDateFormat DATE_FORMAT>;

        return $r0;
    }

    static java.lang.String[] access$100()
    {
        java.lang.String[] $r0;

        $r0 = <com.android.server.power.WakeLockLog: java.lang.String[] LEVEL_TO_STRING>;

        return $r0;
    }

    static void access$1000(com.android.server.power.WakeLockLog, int, java.lang.String, int, int, long)
    {
        com.android.server.power.WakeLockLog r0;
        int i0, i1, i2;
        java.lang.String r1;
        long l3;

        r0 := @parameter0: com.android.server.power.WakeLockLog;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        l3 := @parameter5: long;

        specialinvoke r0.<com.android.server.power.WakeLockLog: void handleWakeLockEventInternal(int,java.lang.String,int,int,long)>(i0, r1, i1, i2, l3);

        return;
    }

    private void handleWakeLockEventInternal(int, java.lang.String, int, int, long)
    {
        com.android.server.power.WakeLockLog r0;
        int i0, i1, i2;
        long l3;
        java.lang.Object r1;
        com.android.server.power.WakeLockLog$TagData r2;
        com.android.server.power.WakeLockLog$LogEntry r3;
        com.android.server.power.WakeLockLog$TagDatabase $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;
        com.android.server.power.WakeLockLog$TheLog r7;

        r0 := @this: com.android.server.power.WakeLockLog;

        i0 := @parameter0: int;

        r6 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        l3 := @parameter4: long;

        r1 = r0.<com.android.server.power.WakeLockLog: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.power.WakeLockLog: com.android.server.power.WakeLockLog$TagDatabase mTagDatabase>;

        r2 = virtualinvoke $r4.<com.android.server.power.WakeLockLog$TagDatabase: com.android.server.power.WakeLockLog$TagData findOrCreateTag(java.lang.String,int,boolean)>(r6, i1, 1);

        r7 = r0.<com.android.server.power.WakeLockLog: com.android.server.power.WakeLockLog$TheLog mLog>;

        r3 = new com.android.server.power.WakeLockLog$LogEntry;

        specialinvoke r3.<com.android.server.power.WakeLockLog$LogEntry: void <init>(long,int,com.android.server.power.WakeLockLog$TagData,int)>(l3, i0, r2, i2);

        virtualinvoke r7.<com.android.server.power.WakeLockLog$TheLog: void addEntry(com.android.server.power.WakeLockLog$LogEntry)>(r3);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void onWakeLockEvent(int, java.lang.String, int, int)
    {
        com.android.server.power.WakeLockLog r0;
        java.lang.String r1, $r3, $r12, $r14;
        int i0, i1, $i5, $i7, i9, i10;
        long l2, $l3, $l4, $l6;
        com.android.server.power.WakeLockLog$Injector $r2;
        android.os.Handler $r4;
        android.os.Message $r5;
        java.lang.StringBuilder $r6;
        com.android.internal.os.SomeArgs r16;

        r0 := @this: com.android.server.power.WakeLockLog;

        i9 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        if r1 != null goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Insufficient data to log wakelock [tag: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ownerUid: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", flags: 0x");

        $r12 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PowerManagerService.WLLog", $r14);

        return;

     label1:
        $r2 = r0.<com.android.server.power.WakeLockLog: com.android.server.power.WakeLockLog$Injector mInjector>;

        l2 = virtualinvoke $r2.<com.android.server.power.WakeLockLog$Injector: long currentTimeMillis()>();

        r16 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        $r3 = specialinvoke r0.<com.android.server.power.WakeLockLog: java.lang.String tagNameReducer(java.lang.String)>(r1);

        r16.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = $r3;

        r16.<com.android.internal.os.SomeArgs: int argi1> = i9;

        r16.<com.android.internal.os.SomeArgs: int argi2> = i0;

        if i9 != 1 goto label2;

        i10 = virtualinvoke r0.<com.android.server.power.WakeLockLog: int translateFlagsFromPowerManager(int)>(i1);

        goto label3;

     label2:
        i10 = 0;

     label3:
        r16.<com.android.internal.os.SomeArgs: int argi3> = i10;

        $l3 = l2 >> 32;

        $l4 = $l3 & 4294967295L;

        $i5 = (int) $l4;

        r16.<com.android.internal.os.SomeArgs: int argi4> = $i5;

        $l6 = l2 & 4294967295L;

        $i7 = (int) $l6;

        r16.<com.android.internal.os.SomeArgs: int argi5> = $i7;

        $r4 = r0.<com.android.server.power.WakeLockLog: android.os.Handler mHandler>;

        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1, r16);

        virtualinvoke $r5.<android.os.Message: void sendToTarget()>();

        return;
    }

    private java.lang.String tagNameReducer(java.lang.String)
    {
        com.android.server.power.WakeLockLog r0;
        java.lang.String r1, $r4, $r5, $r6, $r7, r9;
        java.lang.String[] r2, $r8;
        int i0, $i2, $i3, $i4, $i5, i6, i7;
        char c1;
        java.lang.StringBuilder $r3;
        boolean $z0, z1, z2;

        r0 := @this: com.android.server.power.WakeLockLog;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label01;

        return null;

     label01:
        i6 = 0;

     label02:
        r2 = <com.android.server.power.WakeLockLog: java.lang.String[] REDUCED_TAG_PREFIXES>;

        r9 = null;

        $i2 = lengthof r2;

        if i6 >= $i2 goto label04;

        $r7 = r2[i6];

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>($r7);

        if $z0 == 0 goto label03;

        $r8 = <com.android.server.power.WakeLockLog: java.lang.String[] REDUCED_TAG_PREFIXES>;

        r9 = $r8[i6];

        goto label04;

     label03:
        i6 = i6 + 1;

        goto label02;

     label04:
        if r9 == null goto label12;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $i3 = virtualinvoke r9.<java.lang.String: int length()>();

        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $i4 = virtualinvoke r1.<java.lang.String: int lastIndexOf(java.lang.String)>("/");

        $i5 = virtualinvoke r1.<java.lang.String: int lastIndexOf(java.lang.String)>(".");

        i0 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i5);

        z1 = 1;

        i7 = virtualinvoke $r3.<java.lang.StringBuilder: int length()>();

     label05:
        if i7 >= i0 goto label11;

        c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i7);

        if c1 == 46 goto label07;

        if c1 != 47 goto label06;

        goto label07;

     label06:
        z2 = 0;

        goto label08;

     label07:
        z2 = 1;

     label08:
        if z2 != 0 goto label09;

        if z1 == 0 goto label10;

     label09:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

     label10:
        i7 = i7 + 1;

        z1 = z2;

        goto label05;

     label11:
        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i7);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;

     label12:
        return r1;
    }

    public void dump(java.io.PrintWriter)
    {
        com.android.server.power.WakeLockLog r0;
        java.io.PrintWriter r1;

        r0 := @this: com.android.server.power.WakeLockLog;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r0.<com.android.server.power.WakeLockLog: void dump(java.io.PrintWriter,boolean)>(r1, 0);

        return;
    }

    void dump(java.io.PrintWriter, boolean)
    {
        com.android.server.power.WakeLockLog r0;
        java.io.PrintWriter r1;
        boolean z0, $z1;
        java.util.Iterator r2;
        com.android.server.power.WakeLockLog$TheLog $r3, $r10;
        java.lang.String $r8, $r12, $r16, $r23, $r25;
        int $i0, $i1, i2, i3, i4, i5;
        com.android.server.power.WakeLockLog$TagDatabase $r14;
        java.lang.Object $r17, r26;
        java.text.SimpleDateFormat $r18;
        java.lang.Throwable $r19;
        java.lang.Exception $r20;
        java.lang.StringBuilder $r21, r29, r30, r31;
        com.android.server.power.WakeLockLog$LogEntry r27, r28;

        r0 := @this: com.android.server.power.WakeLockLog;

        r1 := @parameter0: java.io.PrintWriter;

        z0 := @parameter1: boolean;

     label01:
        r26 = r0.<com.android.server.power.WakeLockLog: java.lang.Object mLock>;

        entermonitor r26;

     label02:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Wake Lock Log");

        r27 = new com.android.server.power.WakeLockLog$LogEntry;

        specialinvoke r27.<com.android.server.power.WakeLockLog$LogEntry: void <init>()>();

        $r3 = r0.<com.android.server.power.WakeLockLog: com.android.server.power.WakeLockLog$TheLog mLog>;

        r2 = virtualinvoke $r3.<com.android.server.power.WakeLockLog$TheLog: java.util.Iterator getAllItems(com.android.server.power.WakeLockLog$LogEntry)>(r27);

     label03:
        i2 = 0;

        i3 = 0;

     label04:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label12;

        $r17 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r28 = (com.android.server.power.WakeLockLog$LogEntry) $r17;

     label05:
        i4 = i2;

        i5 = i3;

        if r28 == null goto label11;

     label06:
        $i1 = r28.<com.android.server.power.WakeLockLog$LogEntry: int type>;

        if $i1 != 0 goto label08;

     label07:
        i5 = i3 + 1;

        i4 = i2;

        goto label11;

     label08:
        i4 = i2 + 1;

     label09:
        $r18 = r0.<com.android.server.power.WakeLockLog: java.text.SimpleDateFormat mDumpsysDateFormat>;

        virtualinvoke r28.<com.android.server.power.WakeLockLog$LogEntry: void dump(java.io.PrintWriter,java.text.SimpleDateFormat)>(r1, $r18);

     label10:
        i5 = i3;

     label11:
        i2 = i4;

        i3 = i5;

        goto label04;

     label12:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  -");

        r29 = new java.lang.StringBuilder;

        specialinvoke r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Events: ");

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Time-Resets: ");

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r8 = virtualinvoke r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Buffer, Bytes used: ");

        $r10 = r0.<com.android.server.power.WakeLockLog: com.android.server.power.WakeLockLog$TheLog mLog>;

        $i0 = virtualinvoke $r10.<com.android.server.power.WakeLockLog$TheLog: int getUsedBufferSize()>();

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r12 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r12);

     label13:
        if z0 == 0 goto label15;

     label14:
        r31 = new java.lang.StringBuilder;

        specialinvoke r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r14 = r0.<com.android.server.power.WakeLockLog: com.android.server.power.WakeLockLog$TagDatabase mTagDatabase>;

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r16);

     label15:
        exitmonitor r26;

     label16:
        goto label21;

     label17:
        $r19 := @caughtexception;

     label18:
        exitmonitor r26;

     label19:
        throw $r19;

     label20:
        $r20 := @caughtexception;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception dumping wake-lock log: ");

        $r23 = virtualinvoke $r20.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r25);

     label21:
        return;

        catch java.lang.Exception from label01 to label02 with label20;
        catch java.lang.Throwable from label02 to label03 with label17;
        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label14 to label15 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
        catch java.lang.Exception from label19 to label20 with label20;
    }

    public void onWakeLockAcquired(java.lang.String, int, int)
    {
        com.android.server.power.WakeLockLog r0;
        java.lang.String r1;
        int i0, i1;

        r0 := @this: com.android.server.power.WakeLockLog;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.server.power.WakeLockLog: void onWakeLockEvent(int,java.lang.String,int,int)>(1, r1, i0, i1);

        return;
    }

    public void onWakeLockReleased(java.lang.String, int)
    {
        com.android.server.power.WakeLockLog r0;
        java.lang.String r1;
        int i0;

        r0 := @this: com.android.server.power.WakeLockLog;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.power.WakeLockLog: void onWakeLockEvent(int,java.lang.String,int,int)>(2, r1, i0, 0);

        return;
    }

    int translateFlagsFromPowerManager(int)
    {
        com.android.server.power.WakeLockLog r0;
        int i0, $i1, i4, $i6;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;
        byte b3, b5, b7;

        r0 := @this: com.android.server.power.WakeLockLog;

        i0 := @parameter0: int;

        b3 = 0;

        i4 = 65535 & i0;

        if i4 == 1 goto label07;

        if i4 == 6 goto label06;

        if i4 == 10 goto label05;

        if i4 == 26 goto label04;

        if i4 == 32 goto label03;

        if i4 == 64 goto label02;

        if i4 == 128 goto label01;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported lock level for logging, flags: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PowerManagerService.WLLog", $r5);

        goto label08;

     label01:
        b3 = 7;

        goto label08;

     label02:
        b3 = 6;

        goto label08;

     label03:
        b3 = 5;

        goto label08;

     label04:
        b3 = 2;

        goto label08;

     label05:
        b3 = 4;

        goto label08;

     label06:
        b3 = 3;

        goto label08;

     label07:
        b3 = 1;

     label08:
        b5 = b3;

        $i6 = 268435456 & i0;

        if $i6 == 0 goto label09;

        b5 = b3 | 16;

     label09:
        b7 = b5;

        $i1 = 536870912 & i0;

        if $i1 == 0 goto label10;

        b7 = b5 | 8;

     label10:
        return b7;
    }
}
