public class com.android.server.power.batterysaver.BatterySaverController extends java.lang.Object implements com.android.server.power.batterysaver.BatterySaverPolicy$BatterySaverPolicyListener
{
    static final boolean DEBUG;
    public static final int REASON_ADAPTIVE_DYNAMIC_POWER_SAVINGS_CHANGED;
    public static final int REASON_DYNAMIC_POWER_SAVINGS_AUTOMATIC_OFF;
    public static final int REASON_DYNAMIC_POWER_SAVINGS_AUTOMATIC_ON;
    public static final int REASON_INTERACTIVE_CHANGED;
    public static final int REASON_MANUAL_OFF;
    public static final int REASON_MANUAL_ON;
    public static final int REASON_PERCENTAGE_AUTOMATIC_OFF;
    public static final int REASON_PERCENTAGE_AUTOMATIC_ON;
    public static final int REASON_PLUGGED_IN;
    public static final int REASON_POLICY_CHANGED;
    public static final int REASON_SETTING_CHANGED;
    public static final int REASON_STICKY_RESTORE;
    public static final int REASON_TIMEOUT;
    static final java.lang.String TAG;
    private boolean mAdaptiveEnabledRaw;
    private boolean mAdaptivePreviouslyEnabled;
    private final com.android.server.power.batterysaver.BatterySaverPolicy mBatterySaverPolicy;
    private final com.android.server.power.batterysaver.BatterySavingStats mBatterySavingStats;
    private final android.content.Context mContext;
    private final com.android.server.power.batterysaver.FileUpdater mFileUpdater;
    private boolean mFullEnabledRaw;
    private boolean mFullPreviouslyEnabled;
    private final com.android.server.power.batterysaver.BatterySaverController$MyHandler mHandler;
    private boolean mIsInteractive;
    private boolean mIsPluggedIn;
    private final java.util.ArrayList mListeners;
    private final java.lang.Object mLock;
    private final com.android.server.power.batterysaver.BatterySaverController$Plugin[] mPlugins;
    private android.os.PowerManager mPowerManager;
    private java.util.Optional mPowerSaveModeChangedListenerPackage;
    private final android.content.BroadcastReceiver mReceiver;

    public void <init>(java.lang.Object, android.content.Context, android.os.Looper, com.android.server.power.batterysaver.BatterySaverPolicy, com.android.server.power.batterysaver.BatterySavingStats)
    {
        com.android.server.power.batterysaver.BatterySaverController r0;
        java.lang.Object r1;
        android.content.Context r2, $r12;
        android.os.Looper r3;
        com.android.server.power.batterysaver.BatterySaverPolicy r4;
        com.android.server.power.batterysaver.BatterySavingStats r5;
        java.util.ArrayList $r6;
        com.android.server.power.batterysaver.BatterySaverController$1 $r7;
        com.android.server.power.batterysaver.BatterySaverController$MyHandler $r8;
        com.android.server.power.batterysaver.FileUpdater $r9;
        com.android.server.power.batterysaver.BatterySaverController$Plugin[] $r10;
        com.android.server.power.batterysaver.BatterySaverLocationPlugin $r11;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverController;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: android.os.Looper;

        r4 := @parameter3: com.android.server.power.batterysaver.BatterySaverPolicy;

        r5 := @parameter4: com.android.server.power.batterysaver.BatterySavingStats;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.power.batterysaver.BatterySaverController: java.util.ArrayList mListeners> = $r6;

        $r7 = new com.android.server.power.batterysaver.BatterySaverController$1;

        specialinvoke $r7.<com.android.server.power.batterysaver.BatterySaverController$1: void <init>(com.android.server.power.batterysaver.BatterySaverController)>(r0);

        r0.<com.android.server.power.batterysaver.BatterySaverController: android.content.BroadcastReceiver mReceiver> = $r7;

        r0.<com.android.server.power.batterysaver.BatterySaverController: java.lang.Object mLock> = r1;

        r0.<com.android.server.power.batterysaver.BatterySaverController: android.content.Context mContext> = r2;

        $r8 = new com.android.server.power.batterysaver.BatterySaverController$MyHandler;

        specialinvoke $r8.<com.android.server.power.batterysaver.BatterySaverController$MyHandler: void <init>(com.android.server.power.batterysaver.BatterySaverController,android.os.Looper)>(r0, r3);

        r0.<com.android.server.power.batterysaver.BatterySaverController: com.android.server.power.batterysaver.BatterySaverController$MyHandler mHandler> = $r8;

        r0.<com.android.server.power.batterysaver.BatterySaverController: com.android.server.power.batterysaver.BatterySaverPolicy mBatterySaverPolicy> = r4;

        virtualinvoke r4.<com.android.server.power.batterysaver.BatterySaverPolicy: void addListener(com.android.server.power.batterysaver.BatterySaverPolicy$BatterySaverPolicyListener)>(r0);

        $r9 = new com.android.server.power.batterysaver.FileUpdater;

        specialinvoke $r9.<com.android.server.power.batterysaver.FileUpdater: void <init>(android.content.Context)>(r2);

        r0.<com.android.server.power.batterysaver.BatterySaverController: com.android.server.power.batterysaver.FileUpdater mFileUpdater> = $r9;

        r0.<com.android.server.power.batterysaver.BatterySaverController: com.android.server.power.batterysaver.BatterySavingStats mBatterySavingStats> = r5;

        $r10 = newarray (com.android.server.power.batterysaver.BatterySaverController$Plugin)[1];

        $r11 = new com.android.server.power.batterysaver.BatterySaverLocationPlugin;

        $r12 = r0.<com.android.server.power.batterysaver.BatterySaverController: android.content.Context mContext>;

        specialinvoke $r11.<com.android.server.power.batterysaver.BatterySaverLocationPlugin: void <init>(android.content.Context)>($r12);

        $r10[0] = $r11;

        r0.<com.android.server.power.batterysaver.BatterySaverController: com.android.server.power.batterysaver.BatterySaverController$Plugin[] mPlugins> = $r10;

        staticinvoke <android.os.PowerManager: void invalidatePowerSaveModeCaches()>();

        return;
    }

    static boolean access$000(com.android.server.power.batterysaver.BatterySaverController)
    {
        com.android.server.power.batterysaver.BatterySaverController r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.power.batterysaver.BatterySaverController;

        $z0 = specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverController: boolean isPolicyEnabled()>();

        return $z0;
    }

    static void access$100(com.android.server.power.batterysaver.BatterySaverController)
    {
        com.android.server.power.batterysaver.BatterySaverController r0;

        r0 := @parameter0: com.android.server.power.batterysaver.BatterySaverController;

        specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverController: void updateBatterySavingStats()>();

        return;
    }

    static com.android.server.power.batterysaver.BatterySaverController$MyHandler access$200(com.android.server.power.batterysaver.BatterySaverController)
    {
        com.android.server.power.batterysaver.BatterySaverController r0;
        com.android.server.power.batterysaver.BatterySaverController$MyHandler $r1;

        r0 := @parameter0: com.android.server.power.batterysaver.BatterySaverController;

        $r1 = r0.<com.android.server.power.batterysaver.BatterySaverController: com.android.server.power.batterysaver.BatterySaverController$MyHandler mHandler>;

        return $r1;
    }

    static java.lang.Object access$300(com.android.server.power.batterysaver.BatterySaverController)
    {
        com.android.server.power.batterysaver.BatterySaverController r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.power.batterysaver.BatterySaverController;

        $r1 = r0.<com.android.server.power.batterysaver.BatterySaverController: java.lang.Object mLock>;

        return $r1;
    }

    static boolean access$402(com.android.server.power.batterysaver.BatterySaverController, boolean)
    {
        com.android.server.power.batterysaver.BatterySaverController r0;
        boolean z0;

        r0 := @parameter0: com.android.server.power.batterysaver.BatterySaverController;

        z0 := @parameter1: boolean;

        r0.<com.android.server.power.batterysaver.BatterySaverController: boolean mIsPluggedIn> = z0;

        return z0;
    }

    static com.android.server.power.batterysaver.BatterySaverController$Plugin[] access$500(com.android.server.power.batterysaver.BatterySaverController)
    {
        com.android.server.power.batterysaver.BatterySaverController r0;
        com.android.server.power.batterysaver.BatterySaverController$Plugin[] $r1;

        r0 := @parameter0: com.android.server.power.batterysaver.BatterySaverController;

        $r1 = r0.<com.android.server.power.batterysaver.BatterySaverController: com.android.server.power.batterysaver.BatterySaverController$Plugin[] mPlugins>;

        return $r1;
    }

    private boolean getAdaptiveEnabledLocked()
    {
        com.android.server.power.batterysaver.BatterySaverController r0;
        boolean $z0;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverController;

        $z0 = r0.<com.android.server.power.batterysaver.BatterySaverController: boolean mAdaptiveEnabledRaw>;

        return $z0;
    }

    private boolean getFullEnabledLocked()
    {
        com.android.server.power.batterysaver.BatterySaverController r0;
        boolean $z0;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverController;

        $z0 = r0.<com.android.server.power.batterysaver.BatterySaverController: boolean mFullEnabledRaw>;

        return $z0;
    }

    private android.os.PowerManager getPowerManager()
    {
        com.android.server.power.batterysaver.BatterySaverController r0;
        android.os.PowerManager r1, $r2, $r3, $r7;
        android.content.Context $r4;
        java.lang.Object $r5;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverController;

        $r2 = r0.<com.android.server.power.batterysaver.BatterySaverController: android.os.PowerManager mPowerManager>;

        if $r2 != null goto label1;

        $r4 = r0.<com.android.server.power.batterysaver.BatterySaverController: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/os/PowerManager;");

        r1 = (android.os.PowerManager) $r5;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r7 = (android.os.PowerManager) r1;

        r0.<com.android.server.power.batterysaver.BatterySaverController: android.os.PowerManager mPowerManager> = $r7;

     label1:
        $r3 = r0.<com.android.server.power.batterysaver.BatterySaverController: android.os.PowerManager mPowerManager>;

        return $r3;
    }

    private java.util.Optional getPowerSaveModeChangedListenerPackage()
    {
        com.android.server.power.batterysaver.BatterySaverController r0;
        java.util.Optional $r1, r6, $r7;
        android.content.Context $r2;
        java.lang.Object $r3;
        android.content.pm.PackageManagerInternal $r4;
        boolean $z0;
        java.lang.String r5;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverController;

        $r1 = r0.<com.android.server.power.batterysaver.BatterySaverController: java.util.Optional mPowerSaveModeChangedListenerPackage>;

        if $r1 != null goto label3;

        $r2 = r0.<com.android.server.power.batterysaver.BatterySaverController: android.content.Context mContext>;

        r5 = virtualinvoke $r2.<android.content.Context: java.lang.String getString(int)>(17039933);

        $r3 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/content/pm/PackageManagerInternal;");

        $r4 = (android.content.pm.PackageManagerInternal) $r3;

        $z0 = virtualinvoke $r4.<android.content.pm.PackageManagerInternal: boolean isSystemPackage(java.lang.String)>(r5);

        if $z0 == 0 goto label1;

        r6 = staticinvoke <java.util.Optional: java.util.Optional of(java.lang.Object)>(r5);

        goto label2;

     label1:
        r6 = staticinvoke <java.util.Optional: java.util.Optional empty()>();

     label2:
        r0.<com.android.server.power.batterysaver.BatterySaverController: java.util.Optional mPowerSaveModeChangedListenerPackage> = r6;

     label3:
        $r7 = r0.<com.android.server.power.batterysaver.BatterySaverController: java.util.Optional mPowerSaveModeChangedListenerPackage>;

        return $r7;
    }

    private boolean isPolicyEnabled()
    {
        com.android.server.power.batterysaver.BatterySaverController r0;
        java.lang.Object r1;
        boolean $z0, $z1, z2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverController;

        r1 = r0.<com.android.server.power.batterysaver.BatterySaverController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z0 = specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverController: boolean getFullEnabledLocked()>();

        if $z0 != 0 goto label4;

        $z1 = specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverController: boolean getAdaptiveEnabledLocked()>();

        if $z1 == 0 goto label3;

     label2:
        goto label4;

     label3:
        z2 = 0;

        goto label5;

     label4:
        z2 = 1;

     label5:
        exitmonitor r1;

     label6:
        return z2;

     label7:
        $r3 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    static java.lang.String reasonToString(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label14;
            case 1: goto label13;
            case 2: goto label12;
            case 3: goto label11;
            case 4: goto label10;
            case 5: goto label09;
            case 6: goto label08;
            case 7: goto label07;
            case 8: goto label06;
            case 9: goto label05;
            case 10: goto label04;
            case 11: goto label03;
            case 12: goto label02;
            default: goto label01;
        };

     label01:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown reason: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label02:
        return "timeout";

     label03:
        return "Adaptive Power Savings changed";

     label04:
        return "Dynamic Warning Auto OFF";

     label05:
        return "Dynamic Warning Auto ON";

     label06:
        return "Setting changed";

     label07:
        return "Plugged in";

     label08:
        return "Policy changed";

     label09:
        return "Interactivity changed";

     label10:
        return "Sticky restore";

     label11:
        return "Manual OFF";

     label12:
        return "Manual ON";

     label13:
        return "Percentage Auto OFF";

     label14:
        return "Percentage Auto ON";
    }

    private void setAdaptiveEnabledLocked(boolean)
    {
        com.android.server.power.batterysaver.BatterySaverController r0;
        boolean z0, $z1;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverController;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.power.batterysaver.BatterySaverController: boolean mAdaptiveEnabledRaw>;

        if $z1 != z0 goto label1;

        return;

     label1:
        staticinvoke <android.os.PowerManager: void invalidatePowerSaveModeCaches()>();

        r0.<com.android.server.power.batterysaver.BatterySaverController: boolean mAdaptiveEnabledRaw> = z0;

        return;
    }

    private void setFullEnabledLocked(boolean)
    {
        com.android.server.power.batterysaver.BatterySaverController r0;
        boolean z0, $z1;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverController;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.power.batterysaver.BatterySaverController: boolean mFullEnabledRaw>;

        if $z1 != z0 goto label1;

        return;

     label1:
        staticinvoke <android.os.PowerManager: void invalidatePowerSaveModeCaches()>();

        r0.<com.android.server.power.batterysaver.BatterySaverController: boolean mFullEnabledRaw> = z0;

        return;
    }

    private void updateBatterySavingStats()
    {
        com.android.server.power.batterysaver.BatterySaverController r0;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        com.android.server.power.batterysaver.BatterySavingStats $r1, r5;
        java.lang.Throwable $r2;
        android.os.PowerManager r3;
        byte b1, b2, b3;
        java.lang.Object r4;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverController;

        r3 = specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverController: android.os.PowerManager getPowerManager()>();

        if r3 != null goto label01;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("BatterySaverController", "PowerManager not initialized");

        return;

     label01:
        z0 = virtualinvoke r3.<android.os.PowerManager: boolean isInteractive()>();

        z1 = virtualinvoke r3.<android.os.PowerManager: boolean isDeviceIdleMode()>();

        b1 = 2;

        b2 = 1;

        if z1 == 0 goto label02;

        b3 = 2;

        goto label04;

     label02:
        $z2 = virtualinvoke r3.<android.os.PowerManager: boolean isLightDeviceIdleMode()>();

        if $z2 == 0 goto label03;

        b3 = 1;

        goto label04;

     label03:
        b3 = 0;

     label04:
        r4 = r0.<com.android.server.power.batterysaver.BatterySaverController: java.lang.Object mLock>;

        entermonitor r4;

     label05:
        $z5 = r0.<com.android.server.power.batterysaver.BatterySaverController: boolean mIsPluggedIn>;

        if $z5 == 0 goto label07;

        $r1 = r0.<com.android.server.power.batterysaver.BatterySaverController: com.android.server.power.batterysaver.BatterySavingStats mBatterySavingStats>;

        virtualinvoke $r1.<com.android.server.power.batterysaver.BatterySavingStats: void startCharging()>();

        exitmonitor r4;

     label06:
        return;

     label07:
        r5 = r0.<com.android.server.power.batterysaver.BatterySaverController: com.android.server.power.batterysaver.BatterySavingStats mBatterySavingStats>;

        $z3 = specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverController: boolean getFullEnabledLocked()>();

        if $z3 == 0 goto label09;

     label08:
        b1 = 1;

        goto label12;

     label09:
        $z4 = specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverController: boolean getAdaptiveEnabledLocked()>();

        if $z4 == 0 goto label11;

     label10:
        goto label12;

     label11:
        b1 = 0;

     label12:
        if z0 == 0 goto label13;

        goto label14;

     label13:
        b2 = 0;

     label14:
        virtualinvoke r5.<com.android.server.power.batterysaver.BatterySavingStats: void transitionState(int,int,int)>(b1, b2, b3);

        exitmonitor r4;

     label15:
        return;

     label16:
        $r2 := @caughtexception;

     label17:
        exitmonitor r4;

     label18:
        throw $r2;

        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    private boolean updatePolicyLevelLocked()
    {
        com.android.server.power.batterysaver.BatterySaverController r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.android.server.power.batterysaver.BatterySaverPolicy $r1, $r2, $r3;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverController;

        $z0 = specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverController: boolean getFullEnabledLocked()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.server.power.batterysaver.BatterySaverController: com.android.server.power.batterysaver.BatterySaverPolicy mBatterySaverPolicy>;

        $z4 = virtualinvoke $r3.<com.android.server.power.batterysaver.BatterySaverPolicy: boolean setPolicyLevel(int)>(2);

        return $z4;

     label1:
        $z1 = specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverController: boolean getAdaptiveEnabledLocked()>();

        if $z1 == 0 goto label2;

        $r2 = r0.<com.android.server.power.batterysaver.BatterySaverController: com.android.server.power.batterysaver.BatterySaverPolicy mBatterySaverPolicy>;

        $z3 = virtualinvoke $r2.<com.android.server.power.batterysaver.BatterySaverPolicy: boolean setPolicyLevel(int)>(1);

        return $z3;

     label2:
        $r1 = r0.<com.android.server.power.batterysaver.BatterySaverController: com.android.server.power.batterysaver.BatterySaverPolicy mBatterySaverPolicy>;

        $z2 = virtualinvoke $r1.<com.android.server.power.batterysaver.BatterySaverPolicy: boolean setPolicyLevel(int)>(0);

        return $z2;
    }

    public void addListener(android.os.PowerManagerInternal$LowPowerModeListener)
    {
        com.android.server.power.batterysaver.BatterySaverController r0;
        java.lang.Object r1;
        java.util.ArrayList $r2;
        java.lang.Throwable $r3;
        android.os.PowerManagerInternal$LowPowerModeListener r4;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverController;

        r4 := @parameter0: android.os.PowerManagerInternal$LowPowerModeListener;

        r1 = r0.<com.android.server.power.batterysaver.BatterySaverController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.power.batterysaver.BatterySaverController: java.util.ArrayList mListeners>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void enableBatterySaver(boolean, int)
    {
        com.android.server.power.batterysaver.BatterySaverController r0;
        boolean z0, $z1, $z2;
        int i0;
        java.lang.Object r1;
        com.android.server.power.batterysaver.BatterySaverController$MyHandler $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverController;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 = r0.<com.android.server.power.batterysaver.BatterySaverController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z1 = specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverController: boolean getFullEnabledLocked()>();

        if $z1 != z0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverController: void setFullEnabledLocked(boolean)>(z0);

        $z2 = specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverController: boolean updatePolicyLevelLocked()>();

        if $z2 == 0 goto label4;

        $r3 = r0.<com.android.server.power.batterysaver.BatterySaverController: com.android.server.power.batterysaver.BatterySaverController$MyHandler mHandler>;

        virtualinvoke $r3.<com.android.server.power.batterysaver.BatterySaverController$MyHandler: void postStateChanged(boolean,int)>(1, i0);

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r4 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public com.android.server.power.batterysaver.BatterySaverPolicy getBatterySaverPolicy()
    {
        com.android.server.power.batterysaver.BatterySaverController r0;
        com.android.server.power.batterysaver.BatterySaverPolicy $r1;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverController;

        $r1 = r0.<com.android.server.power.batterysaver.BatterySaverController: com.android.server.power.batterysaver.BatterySaverPolicy mBatterySaverPolicy>;

        return $r1;
    }

    void handleBatterySaverStateChanged(boolean, int)
    {
        com.android.server.power.batterysaver.BatterySaverController r0;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, z13, $z14;
        android.os.PowerManagerInternal$LowPowerModeListener[] r1, $r3;
        android.os.PowerManager $r2;
        java.util.ArrayList $r4;
        java.lang.Object[] $r5;
        java.lang.Object $r6, $r25, r35;
        com.android.server.power.batterysaver.FileUpdater $r7, $r31;
        android.content.Intent $r8, $r9, $r12, $r17, $r23, $r27, r40, r42;
        android.os.UserHandle $r10, $r14, $r19, $r28;
        android.content.Context $r11, $r15, $r20, $r29;
        java.util.Optional $r16, $r24;
        com.android.server.power.batterysaver.BatterySaverPolicy $r21, $r32, $r33;
        int $i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12;
        android.os.PowerSaveState $r22;
        java.lang.String $r26, r36;
        com.android.server.power.batterysaver.BatterySaverController$Plugin $r30;
        java.lang.Throwable $r34;
        android.util.ArrayMap r37;
        android.os.PowerManagerInternal r38;
        com.android.server.power.batterysaver.BatterySaverController$Plugin[] r39;
        android.os.PowerManagerInternal$LowPowerModeListener r44;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverController;

        z0 := @parameter0: boolean;

        i2 := @parameter1: int;

        $r2 = specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverController: android.os.PowerManager getPowerManager()>();

        z1 = virtualinvoke $r2.<android.os.PowerManager: boolean isInteractive()>();

        r35 = r0.<com.android.server.power.batterysaver.BatterySaverController: java.lang.Object mLock>;

        entermonitor r35;

     label01:
        z2 = specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverController: boolean getFullEnabledLocked()>();

     label02:
        if z2 != 0 goto label06;

     label03:
        $z12 = specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverController: boolean getAdaptiveEnabledLocked()>();

        if $z12 == 0 goto label05;

     label04:
        goto label06;

     label05:
        z13 = 0;

        goto label07;

     label06:
        z13 = 1;

     label07:
        $z14 = r0.<com.android.server.power.batterysaver.BatterySaverController: boolean mFullPreviouslyEnabled>;

        if $z14 == 0 goto label09;

     label08:
        i3 = 1;

        goto label10;

     label09:
        i3 = 0;

     label10:
        $z4 = r0.<com.android.server.power.batterysaver.BatterySaverController: boolean mAdaptivePreviouslyEnabled>;

        if $z4 == 0 goto label12;

     label11:
        i4 = 1;

        goto label13;

     label12:
        i4 = 0;

     label13:
        $z5 = specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverController: boolean getFullEnabledLocked()>();

        if $z5 == 0 goto label15;

     label14:
        i5 = 1;

        goto label16;

     label15:
        i5 = 0;

     label16:
        z3 = specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverController: boolean getAdaptiveEnabledLocked()>();

     label17:
        if z13 == 0 goto label20;

     label18:
        $r33 = r0.<com.android.server.power.batterysaver.BatterySaverController: com.android.server.power.batterysaver.BatterySaverPolicy mBatterySaverPolicy>;

        r36 = virtualinvoke $r33.<com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String toEventLogString()>();

     label19:
        goto label21;

     label20:
        r36 = "";

     label21:
        i10 = (int) z3;

        i11 = (int) z1;

        staticinvoke <com.android.server.EventLogTags: void writeBatterySaverMode(int,int,int,int,int,java.lang.String,int)>(i3, i4, i5, i10, i11, r36, i2);

        $z6 = specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverController: boolean getFullEnabledLocked()>();

        r0.<com.android.server.power.batterysaver.BatterySaverController: boolean mFullPreviouslyEnabled> = $z6;

        $z7 = specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverController: boolean getAdaptiveEnabledLocked()>();

        r0.<com.android.server.power.batterysaver.BatterySaverController: boolean mAdaptivePreviouslyEnabled> = $z7;

        $r4 = r0.<com.android.server.power.batterysaver.BatterySaverController: java.util.ArrayList mListeners>;

        $r3 = newarray (android.os.PowerManagerInternal$LowPowerModeListener)[0];

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        r1 = (android.os.PowerManagerInternal$LowPowerModeListener[]) $r5;

        r0.<com.android.server.power.batterysaver.BatterySaverController: boolean mIsInteractive> = z1;

     label22:
        if z13 == 0 goto label25;

     label23:
        $r32 = r0.<com.android.server.power.batterysaver.BatterySaverController: com.android.server.power.batterysaver.BatterySaverPolicy mBatterySaverPolicy>;

        r37 = virtualinvoke $r32.<com.android.server.power.batterysaver.BatterySaverPolicy: android.util.ArrayMap getFileValues(boolean)>(z1);

     label24:
        goto label26;

     label25:
        r37 = null;

     label26:
        exitmonitor r35;

     label27:
        $r6 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/os/PowerManagerInternal;");

        r38 = (android.os.PowerManagerInternal) $r6;

        if r38 == null goto label28;

        $z11 = virtualinvoke r0.<com.android.server.power.batterysaver.BatterySaverController: boolean isEnabled()>();

        i12 = (int) $z11;

        virtualinvoke r38.<android.os.PowerManagerInternal: void powerHint(int,int)>(5, i12);

     label28:
        specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverController: void updateBatterySavingStats()>();

        $z8 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.util.Map)>(r37);

        if $z8 == 0 goto label29;

        $r31 = r0.<com.android.server.power.batterysaver.BatterySaverController: com.android.server.power.batterysaver.FileUpdater mFileUpdater>;

        virtualinvoke $r31.<com.android.server.power.batterysaver.FileUpdater: void restoreDefault()>();

        goto label30;

     label29:
        $r7 = r0.<com.android.server.power.batterysaver.BatterySaverController: com.android.server.power.batterysaver.FileUpdater mFileUpdater>;

        virtualinvoke $r7.<com.android.server.power.batterysaver.FileUpdater: void writeFiles(android.util.ArrayMap)>(r37);

     label30:
        r39 = r0.<com.android.server.power.batterysaver.BatterySaverController: com.android.server.power.batterysaver.BatterySaverController$Plugin[] mPlugins>;

        i6 = lengthof r39;

        i7 = 0;

     label31:
        if i7 >= i6 goto label32;

        $r30 = r39[i7];

        interfaceinvoke $r30.<com.android.server.power.batterysaver.BatterySaverController$Plugin: void onBatterySaverChanged(com.android.server.power.batterysaver.BatterySaverController)>(r0);

        i7 = i7 + 1;

        goto label31;

     label32:
        if z0 == 0 goto label35;

        $r8 = new android.content.Intent;

        specialinvoke $r8.<android.content.Intent: void <init>(java.lang.String)>("android.os.action.POWER_SAVE_MODE_CHANGING");

        $z9 = virtualinvoke r0.<com.android.server.power.batterysaver.BatterySaverController: boolean isEnabled()>();

        $r9 = virtualinvoke $r8.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("mode", $z9);

        r40 = virtualinvoke $r9.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        $r11 = r0.<com.android.server.power.batterysaver.BatterySaverController: android.content.Context mContext>;

        $r10 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r11.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r40, $r10);

        $r12 = new android.content.Intent;

        specialinvoke $r12.<android.content.Intent: void <init>(java.lang.String)>("android.os.action.POWER_SAVE_MODE_CHANGED");

        virtualinvoke $r12.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        $r15 = r0.<com.android.server.power.batterysaver.BatterySaverController: android.content.Context mContext>;

        $r14 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r15.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r12, $r14);

        $r16 = specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverController: java.util.Optional getPowerSaveModeChangedListenerPackage()>();

        $z10 = virtualinvoke $r16.<java.util.Optional: boolean isPresent()>();

        if $z10 == 0 goto label33;

        $r23 = new android.content.Intent;

        specialinvoke $r23.<android.content.Intent: void <init>(java.lang.String)>("android.os.action.POWER_SAVE_MODE_CHANGED");

        $r24 = specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverController: java.util.Optional getPowerSaveModeChangedListenerPackage()>();

        $r25 = virtualinvoke $r24.<java.util.Optional: java.lang.Object get()>();

        $r26 = (java.lang.String) $r25;

        $r27 = virtualinvoke $r23.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r26);

        r42 = virtualinvoke $r27.<android.content.Intent: android.content.Intent addFlags(int)>(285212672);

        $r29 = r0.<com.android.server.power.batterysaver.BatterySaverController: android.content.Context mContext>;

        $r28 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r29.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r42, $r28);

     label33:
        $r17 = new android.content.Intent;

        specialinvoke $r17.<android.content.Intent: void <init>(java.lang.String)>("android.os.action.POWER_SAVE_MODE_CHANGED_INTERNAL");

        virtualinvoke $r17.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        $r20 = r0.<com.android.server.power.batterysaver.BatterySaverController: android.content.Context mContext>;

        $r19 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r20.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>($r17, $r19, "android.permission.DEVICE_POWER");

        i8 = lengthof r1;

        i9 = 0;

     label34:
        if i9 >= i8 goto label35;

        r44 = r1[i9];

        $r21 = r0.<com.android.server.power.batterysaver.BatterySaverController: com.android.server.power.batterysaver.BatterySaverPolicy mBatterySaverPolicy>;

        $i1 = interfaceinvoke r44.<android.os.PowerManagerInternal$LowPowerModeListener: int getServiceType()>();

        $r22 = virtualinvoke $r21.<com.android.server.power.batterysaver.BatterySaverPolicy: android.os.PowerSaveState getBatterySaverPolicy(int)>($i1);

        interfaceinvoke r44.<android.os.PowerManagerInternal$LowPowerModeListener: void onLowPowerModeChanged(android.os.PowerSaveState)>($r22);

        i9 = i9 + 1;

        goto label34;

     label35:
        return;

     label36:
        $r34 := @caughtexception;

     label37:
        exitmonitor r35;

     label38:
        throw $r34;

        catch java.lang.Throwable from label01 to label02 with label36;
        catch java.lang.Throwable from label03 to label04 with label36;
        catch java.lang.Throwable from label07 to label08 with label36;
        catch java.lang.Throwable from label10 to label11 with label36;
        catch java.lang.Throwable from label13 to label14 with label36;
        catch java.lang.Throwable from label16 to label17 with label36;
        catch java.lang.Throwable from label18 to label19 with label36;
        catch java.lang.Throwable from label21 to label22 with label36;
        catch java.lang.Throwable from label23 to label24 with label36;
        catch java.lang.Throwable from label26 to label27 with label36;
        catch java.lang.Throwable from label37 to label38 with label36;
    }

    boolean isAdaptiveEnabled()
    {
        com.android.server.power.batterysaver.BatterySaverController r0;
        java.lang.Object r1;
        boolean z0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverController;

        r1 = r0.<com.android.server.power.batterysaver.BatterySaverController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        z0 = specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverController: boolean getAdaptiveEnabledLocked()>();

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean isEnabled()
    {
        com.android.server.power.batterysaver.BatterySaverController r0;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, z3;
        com.android.server.power.batterysaver.BatterySaverPolicy $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverController;

        r1 = r0.<com.android.server.power.batterysaver.BatterySaverController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z0 = specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverController: boolean getFullEnabledLocked()>();

        if $z0 != 0 goto label4;

        $z1 = specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverController: boolean getAdaptiveEnabledLocked()>();

        if $z1 == 0 goto label3;

        $r3 = r0.<com.android.server.power.batterysaver.BatterySaverController: com.android.server.power.batterysaver.BatterySaverPolicy mBatterySaverPolicy>;

        $z2 = virtualinvoke $r3.<com.android.server.power.batterysaver.BatterySaverPolicy: boolean shouldAdvertiseIsEnabled()>();

        if $z2 == 0 goto label3;

     label2:
        goto label4;

     label3:
        z3 = 0;

        goto label5;

     label4:
        z3 = 1;

     label5:
        exitmonitor r1;

     label6:
        return z3;

     label7:
        $r4 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    boolean isFullEnabled()
    {
        com.android.server.power.batterysaver.BatterySaverController r0;
        java.lang.Object r1;
        boolean z0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverController;

        r1 = r0.<com.android.server.power.batterysaver.BatterySaverController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        z0 = specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverController: boolean getFullEnabledLocked()>();

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean isInteractive()
    {
        com.android.server.power.batterysaver.BatterySaverController r0;
        java.lang.Object r1;
        boolean z0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverController;

        r1 = r0.<com.android.server.power.batterysaver.BatterySaverController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        z0 = r0.<com.android.server.power.batterysaver.BatterySaverController: boolean mIsInteractive>;

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean isLaunchBoostDisabled()
    {
        com.android.server.power.batterysaver.BatterySaverController r0;
        boolean $z0, $z1, z2;
        com.android.server.power.batterysaver.BatterySaverPolicy $r1;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverController;

        $z0 = specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverController: boolean isPolicyEnabled()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.server.power.batterysaver.BatterySaverController: com.android.server.power.batterysaver.BatterySaverPolicy mBatterySaverPolicy>;

        $z1 = virtualinvoke $r1.<com.android.server.power.batterysaver.BatterySaverPolicy: boolean isLaunchBoostDisabled()>();

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public void onBatterySaverPolicyChanged(com.android.server.power.batterysaver.BatterySaverPolicy)
    {
        com.android.server.power.batterysaver.BatterySaverController r0;
        com.android.server.power.batterysaver.BatterySaverPolicy r1;
        boolean $z0;
        com.android.server.power.batterysaver.BatterySaverController$MyHandler $r2;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverController;

        r1 := @parameter0: com.android.server.power.batterysaver.BatterySaverPolicy;

        $z0 = specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverController: boolean isPolicyEnabled()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.server.power.batterysaver.BatterySaverController: com.android.server.power.batterysaver.BatterySaverController$MyHandler mHandler>;

        virtualinvoke $r2.<com.android.server.power.batterysaver.BatterySaverController$MyHandler: void postStateChanged(boolean,int)>(1, 6);

        return;
    }

    boolean resetAdaptivePolicyLocked(int)
    {
        com.android.server.power.batterysaver.BatterySaverController r0;
        int i0;
        com.android.server.power.batterysaver.BatterySaverPolicy $r1;
        boolean $z0;
        com.android.server.power.batterysaver.BatterySaverController$MyHandler $r2;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverController;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.power.batterysaver.BatterySaverController: com.android.server.power.batterysaver.BatterySaverPolicy mBatterySaverPolicy>;

        $z0 = virtualinvoke $r1.<com.android.server.power.batterysaver.BatterySaverPolicy: boolean resetAdaptivePolicyLocked()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.server.power.batterysaver.BatterySaverController: com.android.server.power.batterysaver.BatterySaverController$MyHandler mHandler>;

        virtualinvoke $r2.<com.android.server.power.batterysaver.BatterySaverController$MyHandler: void postStateChanged(boolean,int)>(1, i0);

        return 1;

     label1:
        return 0;
    }

    boolean setAdaptivePolicyEnabledLocked(boolean, int)
    {
        com.android.server.power.batterysaver.BatterySaverController r0;
        boolean z0, $z1, $z2;
        int i0;
        com.android.server.power.batterysaver.BatterySaverController$MyHandler $r1;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverController;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        $z1 = specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverController: boolean getAdaptiveEnabledLocked()>();

        if $z1 != z0 goto label1;

        return 0;

     label1:
        specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverController: void setAdaptiveEnabledLocked(boolean)>(z0);

        $z2 = specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverController: boolean updatePolicyLevelLocked()>();

        if $z2 == 0 goto label2;

        $r1 = r0.<com.android.server.power.batterysaver.BatterySaverController: com.android.server.power.batterysaver.BatterySaverController$MyHandler mHandler>;

        virtualinvoke $r1.<com.android.server.power.batterysaver.BatterySaverController$MyHandler: void postStateChanged(boolean,int)>(1, i0);

        return 1;

     label2:
        return 0;
    }

    boolean setAdaptivePolicyLocked(android.os.BatterySaverPolicyConfig, int)
    {
        com.android.server.power.batterysaver.BatterySaverController r0;
        android.os.BatterySaverPolicyConfig r1;
        int i0;
        com.android.server.power.batterysaver.BatterySaverPolicy$Policy $r2;
        boolean $z0;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverController;

        r1 := @parameter0: android.os.BatterySaverPolicyConfig;

        i0 := @parameter1: int;

        $r2 = staticinvoke <com.android.server.power.batterysaver.BatterySaverPolicy$Policy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy fromConfig(android.os.BatterySaverPolicyConfig)>(r1);

        $z0 = virtualinvoke r0.<com.android.server.power.batterysaver.BatterySaverController: boolean setAdaptivePolicyLocked(com.android.server.power.batterysaver.BatterySaverPolicy$Policy,int)>($r2, i0);

        return $z0;
    }

    boolean setAdaptivePolicyLocked(com.android.server.power.batterysaver.BatterySaverPolicy$Policy, int)
    {
        com.android.server.power.batterysaver.BatterySaverController r0;
        com.android.server.power.batterysaver.BatterySaverPolicy$Policy r1;
        int i0;
        com.android.server.power.batterysaver.BatterySaverPolicy $r2;
        boolean $z0;
        com.android.server.power.batterysaver.BatterySaverController$MyHandler $r3;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverController;

        r1 := @parameter0: com.android.server.power.batterysaver.BatterySaverPolicy$Policy;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.power.batterysaver.BatterySaverController: com.android.server.power.batterysaver.BatterySaverPolicy mBatterySaverPolicy>;

        $z0 = virtualinvoke $r2.<com.android.server.power.batterysaver.BatterySaverPolicy: boolean setAdaptivePolicyLocked(com.android.server.power.batterysaver.BatterySaverPolicy$Policy)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.server.power.batterysaver.BatterySaverController: com.android.server.power.batterysaver.BatterySaverController$MyHandler mHandler>;

        virtualinvoke $r3.<com.android.server.power.batterysaver.BatterySaverController$MyHandler: void postStateChanged(boolean,int)>(1, i0);

        return 1;

     label1:
        return 0;
    }

    boolean setAdaptivePolicyLocked(java.lang.String, java.lang.String, int)
    {
        com.android.server.power.batterysaver.BatterySaverController r0;
        java.lang.String r1, r2;
        int i0;
        com.android.server.power.batterysaver.BatterySaverPolicy$Policy $r3;
        boolean $z0;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverController;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r3 = staticinvoke <com.android.server.power.batterysaver.BatterySaverPolicy$Policy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy fromSettings(java.lang.String,java.lang.String)>(r1, r2);

        $z0 = virtualinvoke r0.<com.android.server.power.batterysaver.BatterySaverController: boolean setAdaptivePolicyLocked(com.android.server.power.batterysaver.BatterySaverPolicy$Policy,int)>($r3, i0);

        return $z0;
    }

    public void systemReady()
    {
        com.android.server.power.batterysaver.BatterySaverController r0;
        android.content.IntentFilter $r2;
        android.content.BroadcastReceiver $r3;
        android.content.Context $r4;
        com.android.server.power.batterysaver.FileUpdater $r6;
        java.lang.Object $r7;
        android.app.ActivityManagerInternal $r8;
        boolean $z0;
        com.android.server.power.batterysaver.BatterySaverController$MyHandler $r9;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverController;

        $r2 = new android.content.IntentFilter;

        specialinvoke $r2.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.SCREEN_ON");

        virtualinvoke $r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.SCREEN_OFF");

        virtualinvoke $r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.BATTERY_CHANGED");

        virtualinvoke $r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.os.action.DEVICE_IDLE_MODE_CHANGED");

        virtualinvoke $r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.os.action.LIGHT_DEVICE_IDLE_MODE_CHANGED");

        $r4 = r0.<com.android.server.power.batterysaver.BatterySaverController: android.content.Context mContext>;

        $r3 = r0.<com.android.server.power.batterysaver.BatterySaverController: android.content.BroadcastReceiver mReceiver>;

        virtualinvoke $r4.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r3, $r2);

        $r6 = r0.<com.android.server.power.batterysaver.BatterySaverController: com.android.server.power.batterysaver.FileUpdater mFileUpdater>;

        $r7 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/app/ActivityManagerInternal;");

        $r8 = (android.app.ActivityManagerInternal) $r7;

        $z0 = virtualinvoke $r8.<android.app.ActivityManagerInternal: boolean isRuntimeRestarted()>();

        virtualinvoke $r6.<com.android.server.power.batterysaver.FileUpdater: void systemReady(boolean)>($z0);

        $r9 = r0.<com.android.server.power.batterysaver.BatterySaverController: com.android.server.power.batterysaver.BatterySaverController$MyHandler mHandler>;

        virtualinvoke $r9.<com.android.server.power.batterysaver.BatterySaverController$MyHandler: void postSystemReady()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.power.batterysaver.BatterySaverController: java.lang.String TAG> = "BatterySaverController";

        <com.android.server.power.batterysaver.BatterySaverController: int REASON_TIMEOUT> = 12;

        <com.android.server.power.batterysaver.BatterySaverController: int REASON_STICKY_RESTORE> = 4;

        <com.android.server.power.batterysaver.BatterySaverController: int REASON_SETTING_CHANGED> = 8;

        <com.android.server.power.batterysaver.BatterySaverController: int REASON_POLICY_CHANGED> = 6;

        <com.android.server.power.batterysaver.BatterySaverController: int REASON_PLUGGED_IN> = 7;

        <com.android.server.power.batterysaver.BatterySaverController: int REASON_PERCENTAGE_AUTOMATIC_ON> = 0;

        <com.android.server.power.batterysaver.BatterySaverController: int REASON_PERCENTAGE_AUTOMATIC_OFF> = 1;

        <com.android.server.power.batterysaver.BatterySaverController: int REASON_MANUAL_ON> = 2;

        <com.android.server.power.batterysaver.BatterySaverController: int REASON_MANUAL_OFF> = 3;

        <com.android.server.power.batterysaver.BatterySaverController: int REASON_INTERACTIVE_CHANGED> = 5;

        <com.android.server.power.batterysaver.BatterySaverController: int REASON_DYNAMIC_POWER_SAVINGS_AUTOMATIC_ON> = 9;

        <com.android.server.power.batterysaver.BatterySaverController: int REASON_DYNAMIC_POWER_SAVINGS_AUTOMATIC_OFF> = 10;

        <com.android.server.power.batterysaver.BatterySaverController: int REASON_ADAPTIVE_DYNAMIC_POWER_SAVINGS_CHANGED> = 11;

        <com.android.server.power.batterysaver.BatterySaverController: boolean DEBUG> = 0;

        return;
    }
}
