public class com.android.server.power.batterysaver.BatterySaverPolicy extends android.database.ContentObserver
{
    static final boolean DEBUG;
    private static final com.android.server.power.batterysaver.BatterySaverPolicy$Policy DEFAULT_ADAPTIVE_POLICY;
    private static final com.android.server.power.batterysaver.BatterySaverPolicy$Policy DEFAULT_FULL_POLICY;
    private static final java.lang.String KEY_ACTIVATE_DATASAVER_DISABLED;
    private static final java.lang.String KEY_ACTIVATE_FIREWALL_DISABLED;
    private static final java.lang.String KEY_ADJUST_BRIGHTNESS_DISABLED;
    private static final java.lang.String KEY_ADJUST_BRIGHTNESS_FACTOR;
    private static final java.lang.String KEY_ADVERTISE_IS_ENABLED;
    private static final java.lang.String KEY_ANIMATION_DISABLED;
    private static final java.lang.String KEY_AOD_DISABLED;
    private static final java.lang.String KEY_CPU_FREQ_INTERACTIVE;
    private static final java.lang.String KEY_CPU_FREQ_NONINTERACTIVE;
    private static final java.lang.String KEY_ENABLE_NIGHT_MODE;
    private static final java.lang.String KEY_FORCE_ALL_APPS_STANDBY;
    private static final java.lang.String KEY_FORCE_BACKGROUND_CHECK;
    private static final java.lang.String KEY_FULLBACKUP_DEFERRED;
    private static final java.lang.String KEY_GPS_MODE;
    private static final java.lang.String KEY_KEYVALUE_DEFERRED;
    private static final java.lang.String KEY_LAUNCH_BOOST_DISABLED;
    private static final java.lang.String KEY_OPTIONAL_SENSORS_DISABLED;
    private static final java.lang.String KEY_QUICK_DOZE_ENABLED;
    private static final java.lang.String KEY_SOUNDTRIGGER_DISABLED;
    private static final java.lang.String KEY_VIBRATION_DISABLED;
    static final com.android.server.power.batterysaver.BatterySaverPolicy$Policy OFF_POLICY;
    static final int POLICY_LEVEL_ADAPTIVE;
    static final int POLICY_LEVEL_FULL;
    static final int POLICY_LEVEL_OFF;
    private static final java.lang.String TAG;
    private boolean mAccessibilityEnabled;
    private java.lang.String mAdaptiveDeviceSpecificSettings;
    private com.android.server.power.batterysaver.BatterySaverPolicy$Policy mAdaptivePolicy;
    private java.lang.String mAdaptiveSettings;
    private final com.android.server.power.batterysaver.BatterySavingStats mBatterySavingStats;
    private final android.content.BroadcastReceiver mBroadcastReceiver;
    private boolean mCarModeEnabled;
    private final android.content.ContentResolver mContentResolver;
    private final android.content.Context mContext;
    private com.android.server.power.batterysaver.BatterySaverPolicy$Policy mDefaultAdaptivePolicy;
    private java.lang.String mDeviceSpecificSettings;
    private java.lang.String mDeviceSpecificSettingsSource;
    private com.android.server.power.batterysaver.BatterySaverPolicy$Policy mEffectivePolicyRaw;
    private java.lang.String mEventLogKeys;
    private com.android.server.power.batterysaver.BatterySaverPolicy$Policy mFullPolicy;
    private final android.os.Handler mHandler;
    private final java.util.List mListeners;
    private final java.lang.Object mLock;
    private int mPolicyLevel;
    private java.lang.String mSettings;

    static void <clinit>()
    {
        com.android.server.power.batterysaver.BatterySaverPolicy$Policy $r1, $r4;
        android.util.ArrayMap $r2, $r3, $r5, $r6;

        <com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String TAG> = "BatterySaverPolicy";

        <com.android.server.power.batterysaver.BatterySaverPolicy: int POLICY_LEVEL_OFF> = 0;

        <com.android.server.power.batterysaver.BatterySaverPolicy: int POLICY_LEVEL_FULL> = 2;

        <com.android.server.power.batterysaver.BatterySaverPolicy: int POLICY_LEVEL_ADAPTIVE> = 1;

        <com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String KEY_VIBRATION_DISABLED> = "vibration_disabled";

        <com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String KEY_SOUNDTRIGGER_DISABLED> = "soundtrigger_disabled";

        <com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String KEY_QUICK_DOZE_ENABLED> = "quick_doze_enabled";

        <com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String KEY_OPTIONAL_SENSORS_DISABLED> = "optional_sensors_disabled";

        <com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String KEY_LAUNCH_BOOST_DISABLED> = "launch_boost_disabled";

        <com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String KEY_KEYVALUE_DEFERRED> = "keyvaluebackup_deferred";

        <com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String KEY_GPS_MODE> = "gps_mode";

        <com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String KEY_FULLBACKUP_DEFERRED> = "fullbackup_deferred";

        <com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String KEY_FORCE_BACKGROUND_CHECK> = "force_background_check";

        <com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String KEY_FORCE_ALL_APPS_STANDBY> = "force_all_apps_standby";

        <com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String KEY_ENABLE_NIGHT_MODE> = "enable_night_mode";

        <com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String KEY_CPU_FREQ_NONINTERACTIVE> = "cpufreq-n";

        <com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String KEY_CPU_FREQ_INTERACTIVE> = "cpufreq-i";

        <com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String KEY_AOD_DISABLED> = "aod_disabled";

        <com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String KEY_ANIMATION_DISABLED> = "animation_disabled";

        <com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String KEY_ADVERTISE_IS_ENABLED> = "advertise_is_enabled";

        <com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String KEY_ADJUST_BRIGHTNESS_FACTOR> = "adjust_brightness_factor";

        <com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String KEY_ADJUST_BRIGHTNESS_DISABLED> = "adjust_brightness_disabled";

        <com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String KEY_ACTIVATE_FIREWALL_DISABLED> = "firewall_disabled";

        <com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String KEY_ACTIVATE_DATASAVER_DISABLED> = "datasaver_disabled";

        <com.android.server.power.batterysaver.BatterySaverPolicy: boolean DEBUG> = 0;

        $r1 = new com.android.server.power.batterysaver.BatterySaverPolicy$Policy;

        $r2 = new android.util.ArrayMap;

        specialinvoke $r2.<android.util.ArrayMap: void <init>()>();

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        specialinvoke $r1.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: void <init>(float,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,android.util.ArrayMap,android.util.ArrayMap,boolean,boolean,int)>(1.0F, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, $r2, $r3, 0, 0, 0);

        <com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy OFF_POLICY> = $r1;

        <com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy DEFAULT_ADAPTIVE_POLICY> = $r1;

        $r4 = new com.android.server.power.batterysaver.BatterySaverPolicy$Policy;

        $r5 = new android.util.ArrayMap;

        specialinvoke $r5.<android.util.ArrayMap: void <init>()>();

        $r6 = new android.util.ArrayMap;

        specialinvoke $r6.<android.util.ArrayMap: void <init>()>();

        specialinvoke $r4.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: void <init>(float,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,android.util.ArrayMap,android.util.ArrayMap,boolean,boolean,int)>(0.5F, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, $r5, $r6, 1, 1, 2);

        <com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy DEFAULT_FULL_POLICY> = $r4;

        return;
    }

    public void <init>(java.lang.Object, android.content.Context, com.android.server.power.batterysaver.BatterySavingStats)
    {
        com.android.server.power.batterysaver.BatterySaverPolicy r0;
        java.lang.Object r1;
        android.content.Context r2;
        com.android.server.power.batterysaver.BatterySavingStats r3;
        com.android.server.power.batterysaver.BatterySaverPolicy$Policy r4, $r6, $r7;
        android.os.Handler $r5, $r10;
        com.android.server.power.batterysaver.BatterySaverPolicy$1 $r8;
        java.util.ArrayList $r9;
        android.content.ContentResolver $r11;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverPolicy;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: com.android.server.power.batterysaver.BatterySavingStats;

        $r5 = staticinvoke <com.android.internal.os.BackgroundThread: android.os.Handler getHandler()>();

        specialinvoke r0.<android.database.ContentObserver: void <init>(android.os.Handler)>($r5);

        r4 = <com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy DEFAULT_ADAPTIVE_POLICY>;

        r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy mDefaultAdaptivePolicy> = r4;

        r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy mAdaptivePolicy> = r4;

        $r6 = <com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy DEFAULT_FULL_POLICY>;

        r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy mFullPolicy> = $r6;

        $r7 = <com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy OFF_POLICY>;

        r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy mEffectivePolicyRaw> = $r7;

        r0.<com.android.server.power.batterysaver.BatterySaverPolicy: int mPolicyLevel> = 0;

        $r8 = new com.android.server.power.batterysaver.BatterySaverPolicy$1;

        specialinvoke $r8.<com.android.server.power.batterysaver.BatterySaverPolicy$1: void <init>(com.android.server.power.batterysaver.BatterySaverPolicy)>(r0);

        r0.<com.android.server.power.batterysaver.BatterySaverPolicy: android.content.BroadcastReceiver mBroadcastReceiver> = $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.util.List mListeners> = $r9;

        r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.Object mLock> = r1;

        $r10 = staticinvoke <com.android.internal.os.BackgroundThread: android.os.Handler getHandler()>();

        r0.<com.android.server.power.batterysaver.BatterySaverPolicy: android.os.Handler mHandler> = $r10;

        r0.<com.android.server.power.batterysaver.BatterySaverPolicy: android.content.Context mContext> = r2;

        $r11 = virtualinvoke r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r0.<com.android.server.power.batterysaver.BatterySaverPolicy: android.content.ContentResolver mContentResolver> = $r11;

        r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySavingStats mBatterySavingStats> = r3;

        return;
    }

    private void dumpMap(java.io.PrintWriter, java.lang.String, android.util.ArrayMap)
    {
        com.android.server.power.batterysaver.BatterySaverPolicy r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r5, $r7;
        android.util.ArrayMap r3;
        int i0, i1;
        java.lang.Object $r4, $r6;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverPolicy;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.util.ArrayMap;

        if r3 != null goto label1;

        return;

     label1:
        i0 = virtualinvoke r3.<android.util.ArrayMap: int size()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        $r4 = virtualinvoke r3.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i1);

        $r5 = (java.lang.String) $r4;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": \'");

        $r6 = virtualinvoke r3.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        $r7 = (java.lang.String) $r6;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r7);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("\'");

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    private void dumpPolicyLocked(java.io.PrintWriter, java.lang.String, java.lang.String, com.android.server.power.batterysaver.BatterySaverPolicy$Policy)
    {
        com.android.server.power.batterysaver.BatterySaverPolicy r0;
        java.io.PrintWriter r1;
        com.android.server.power.batterysaver.BatterySaverPolicy$Policy r2;
        java.lang.StringBuilder $r4, $r9, $r13, $r17, $r21, $r25, $r29, $r33, $r37, $r41, $r45, $r49, $r53, $r57, $r61, $r65, $r69, $r73, $r77;
        java.lang.String $r8, $r12, $r16, $r20, $r24, $r28, $r32, $r36, $r40, $r44, $r48, $r52, $r56, $r60, $r64, $r68, $r72, $r76, $r80, r83, r84;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18;
        float $f0;
        int $i0;
        android.util.ArrayMap $r81, $r82;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverPolicy;

        r1 := @parameter0: java.io.PrintWriter;

        r83 := @parameter1: java.lang.String;

        r84 := @parameter2: java.lang.String;

        r2 := @parameter3: com.android.server.power.batterysaver.BatterySaverPolicy$Policy;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r83);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Policy \'");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r84);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r83);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  advertise_is_enabled=");

        $z0 = r2.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean advertiseIsEnabled>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r83);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  vibration_disabled=");

        $z1 = r2.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean disableVibration>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r16);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r83);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  animation_disabled=");

        $z2 = r2.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean disableAnimation>;

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r20);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r83);

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  fullbackup_deferred=");

        $z3 = r2.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean deferFullBackup>;

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r24);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r83);

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  keyvaluebackup_deferred=");

        $z4 = r2.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean deferKeyValueBackup>;

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r28);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r83);

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  firewall_disabled=");

        $z5 = r2.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean enableFirewall>;

        $z6 = $z5 ^ 1;

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r32);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r83);

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  datasaver_disabled=");

        $z7 = r2.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean enableDataSaver>;

        $z8 = $z7 ^ 1;

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z8);

        $r36 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r36);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r83);

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  launch_boost_disabled=");

        $z9 = r2.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean disableLaunchBoost>;

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z9);

        $r40 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r40);

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    adjust_brightness_disabled=");

        $z10 = r2.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean enableAdjustBrightness>;

        $z11 = $z10 ^ 1;

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z11);

        $r44 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r44);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r83);

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  adjust_brightness_factor=");

        $f0 = r2.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: float adjustBrightnessFactor>;

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r48 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r48);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r83);

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  gps_mode=");

        $i0 = r2.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: int locationMode>;

        virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r52 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r52);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r83);

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  force_all_apps_standby=");

        $z12 = r2.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean forceAllAppsStandby>;

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z12);

        $r56 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r56);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r83);

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  force_background_check=");

        $z13 = r2.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean forceBackgroundCheck>;

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z13);

        $r60 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r60);

        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    optional_sensors_disabled=");

        $z14 = r2.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean disableOptionalSensors>;

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z14);

        $r64 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r64);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r83);

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  aod_disabled=");

        $z15 = r2.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean disableAod>;

        virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z15);

        $r68 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r68);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r83);

        $r69 = new java.lang.StringBuilder;

        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  soundtrigger_disabled=");

        $z16 = r2.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean disableSoundTrigger>;

        virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z16);

        $r72 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r72);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r83);

        $r73 = new java.lang.StringBuilder;

        specialinvoke $r73.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  quick_doze_enabled=");

        $z17 = r2.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean enableQuickDoze>;

        virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z17);

        $r76 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r76);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r83);

        $r77 = new java.lang.StringBuilder;

        specialinvoke $r77.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  enable_night_mode=");

        $z18 = r2.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean enableNightMode>;

        virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z18);

        $r80 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r80);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    Interactive File values:\n");

        $r81 = r2.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: android.util.ArrayMap filesForInteractive>;

        specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverPolicy: void dumpMap(java.io.PrintWriter,java.lang.String,android.util.ArrayMap)>(r1, "      ", $r81);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    Noninteractive File values:\n");

        $r82 = r2.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: android.util.ArrayMap filesForNoninteractive>;

        specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverPolicy: void dumpMap(java.io.PrintWriter,java.lang.String,android.util.ArrayMap)>(r1, "      ", $r82);

        return;
    }

    private com.android.server.power.batterysaver.BatterySaverPolicy$Policy getCurrentPolicyLocked()
    {
        com.android.server.power.batterysaver.BatterySaverPolicy r0;
        com.android.server.power.batterysaver.BatterySaverPolicy$Policy $r1;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverPolicy;

        $r1 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy mEffectivePolicyRaw>;

        return $r1;
    }

    private com.android.server.power.batterysaver.BatterySaverPolicy$Policy getCurrentRawPolicyLocked()
    {
        com.android.server.power.batterysaver.BatterySaverPolicy r0;
        int i0;
        com.android.server.power.batterysaver.BatterySaverPolicy$Policy $r1, $r2, $r3;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverPolicy;

        i0 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: int mPolicyLevel>;

        if i0 == 1 goto label2;

        if i0 == 2 goto label1;

        $r3 = <com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy OFF_POLICY>;

        return $r3;

     label1:
        $r2 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy mFullPolicy>;

        return $r2;

     label2:
        $r1 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy mAdaptivePolicy>;

        return $r1;
    }

    private void maybeNotifyListenersOfPolicyChange()
    {
        com.android.server.power.batterysaver.BatterySaverPolicy r0;
        java.lang.Object r1;
        int $i0, $i1;
        java.util.List $r2, $r3;
        com.android.server.power.batterysaver.BatterySaverPolicy$BatterySaverPolicyListener[] $r4, r9;
        java.lang.Object[] $r5;
        com.android.server.power.batterysaver._$$Lambda$BatterySaverPolicy$id74CdVdlbp85kWQRqn_qF_Styw $r6;
        android.os.Handler $r7;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverPolicy;

        r1 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $i0 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: int mPolicyLevel>;

        if $i0 != 0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.util.List mListeners>;

        $r2 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.util.List mListeners>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r4 = newarray (com.android.server.power.batterysaver.BatterySaverPolicy$BatterySaverPolicyListener)[$i1];

        $r5 = interfaceinvoke $r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        r9 = (com.android.server.power.batterysaver.BatterySaverPolicy$BatterySaverPolicyListener[]) $r5;

        exitmonitor r1;

     label4:
        $r7 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: android.os.Handler mHandler>;

        $r6 = new com.android.server.power.batterysaver._$$Lambda$BatterySaverPolicy$id74CdVdlbp85kWQRqn_qF_Styw;

        specialinvoke $r6.<com.android.server.power.batterysaver._$$Lambda$BatterySaverPolicy$id74CdVdlbp85kWQRqn_qF_Styw: void <init>(com.android.server.power.batterysaver.BatterySaverPolicy,com.android.server.power.batterysaver.BatterySaverPolicy$BatterySaverPolicyListener[])>(r0, r9);

        virtualinvoke $r7.<android.os.Handler: boolean post(java.lang.Runnable)>($r6);

        return;

     label5:
        $r8 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    private void refreshSettings()
    {
        com.android.server.power.batterysaver.BatterySaverPolicy r0;
        java.lang.Object r1;
        java.lang.String r2, r3, $r5, r7, $r8, $r9;
        boolean $z0, $z1, $z2;
        android.content.Context $r4;
        int $i0;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverPolicy;

        r1 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        r2 = virtualinvoke r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String getGlobalSetting(java.lang.String)>("battery_saver_constants");

        r3 = virtualinvoke r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String getGlobalSetting(java.lang.String)>("battery_saver_device_specific_constants");

        r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String mDeviceSpecificSettingsSource> = "battery_saver_device_specific_constants";

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z0 != 0 goto label04;

     label02:
        r7 = r3;

     label03:
        $r5 = "null";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z1 == 0 goto label05;

     label04:
        $r4 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: android.content.Context mContext>;

        $i0 = virtualinvoke r0.<com.android.server.power.batterysaver.BatterySaverPolicy: int getDeviceSpecificConfigResId()>();

        r7 = virtualinvoke $r4.<android.content.Context: java.lang.String getString(int)>($i0);

        r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String mDeviceSpecificSettingsSource> = "(overlay)";

     label05:
        $r8 = virtualinvoke r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String getGlobalSetting(java.lang.String)>("battery_saver_adaptive_constants");

        $r9 = virtualinvoke r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String getGlobalSetting(java.lang.String)>("battery_saver_adaptive_device_specific_constants");

        $z2 = specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverPolicy: boolean updateConstantsLocked(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r2, r7, $r8, $r9);

        if $z2 != 0 goto label07;

        exitmonitor r1;

     label06:
        return;

     label07:
        exitmonitor r1;

     label08:
        specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverPolicy: void maybeNotifyListenersOfPolicyChange()>();

        return;

     label09:
        $r6 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    private boolean updateConstantsLocked(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.server.power.batterysaver.BatterySaverPolicy r0;
        java.lang.String $r1, $r4, $r5, $r6, r7, r8, r9, r10, r11, r12, r13, r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z7, z8;
        com.android.server.power.batterysaver.BatterySaverPolicy$Policy $r2, $r3, $r15, r16, $r17, r18, $r19;
        int $i0, $i1;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverPolicy;

        r7 := @parameter0: java.lang.String;

        r8 := @parameter1: java.lang.String;

        r9 := @parameter2: java.lang.String;

        r10 := @parameter3: java.lang.String;

        r11 = staticinvoke <android.text.TextUtils: java.lang.String emptyIfNull(java.lang.String)>(r7);

        r12 = staticinvoke <android.text.TextUtils: java.lang.String emptyIfNull(java.lang.String)>(r8);

        r13 = staticinvoke <android.text.TextUtils: java.lang.String emptyIfNull(java.lang.String)>(r9);

        r14 = staticinvoke <android.text.TextUtils: java.lang.String emptyIfNull(java.lang.String)>(r10);

        $r1 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String mSettings>;

        $z0 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String mDeviceSpecificSettings>;

        $z3 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z3 == 0 goto label1;

        $r5 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String mAdaptiveSettings>;

        $z4 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z4 == 0 goto label1;

        $r6 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String mAdaptiveDeviceSpecificSettings>;

        $z5 = virtualinvoke r14.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z5 == 0 goto label1;

        return 0;

     label1:
        r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String mSettings> = r11;

        r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String mDeviceSpecificSettings> = r12;

        r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String mAdaptiveSettings> = r13;

        r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String mAdaptiveDeviceSpecificSettings> = r14;

        $r15 = <com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy DEFAULT_FULL_POLICY>;

        r16 = staticinvoke <com.android.server.power.batterysaver.BatterySaverPolicy$Policy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy fromSettings(java.lang.String,java.lang.String,com.android.server.power.batterysaver.BatterySaverPolicy$Policy)>(r11, r12, $r15);

        z7 = 0;

        $i0 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: int mPolicyLevel>;

        if $i0 != 2 goto label2;

        z7 = 0;

        $r3 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy mFullPolicy>;

        $z2 = virtualinvoke $r3.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean equals(java.lang.Object)>(r16);

        if $z2 != 0 goto label2;

        z7 = 1;

     label2:
        r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy mFullPolicy> = r16;

        $r17 = <com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy DEFAULT_ADAPTIVE_POLICY>;

        r18 = staticinvoke <com.android.server.power.batterysaver.BatterySaverPolicy$Policy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy fromSettings(java.lang.String,java.lang.String,com.android.server.power.batterysaver.BatterySaverPolicy$Policy)>(r13, r14, $r17);

        r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy mDefaultAdaptivePolicy> = r18;

        z8 = z7;

        $i1 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: int mPolicyLevel>;

        if $i1 != 1 goto label3;

        z8 = z7;

        $r2 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy mAdaptivePolicy>;

        $z1 = virtualinvoke $r2.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean equals(java.lang.Object)>(r18);

        if $z1 != 0 goto label3;

        z8 = 1;

     label3:
        $r19 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy mDefaultAdaptivePolicy>;

        r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy mAdaptivePolicy> = $r19;

        specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverPolicy: void updatePolicyDependenciesLocked()>();

        return z8;
    }

    private void updatePolicyDependenciesLocked()
    {
        com.android.server.power.batterysaver.BatterySaverPolicy r0;
        float f0;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, z28, $z29, z30, $z31, $z32, $z33, $z34;
        com.android.server.power.batterysaver.BatterySaverPolicy$Policy $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, r31, $r32, $r37;
        int $i0, $i1, $i2, i3;
        java.lang.String $r16;
        android.util.ArrayMap $r33, $r34;
        java.lang.StringBuilder $r35;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverPolicy;

        r31 = specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy getCurrentRawPolicyLocked()>();

        virtualinvoke r0.<com.android.server.power.batterysaver.BatterySaverPolicy: void invalidatePowerSaveModeCaches()>();

        $z11 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: boolean mCarModeEnabled>;

        if $z11 == 0 goto label01;

        $i1 = r31.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: int locationMode>;

        if $i1 == 0 goto label01;

        $i2 = r31.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: int locationMode>;

        if $i2 == 3 goto label01;

        i3 = 3;

        goto label02;

     label01:
        i3 = r31.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: int locationMode>;

     label02:
        f0 = r31.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: float adjustBrightnessFactor>;

        z0 = r31.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean advertiseIsEnabled>;

        z1 = r31.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean deferFullBackup>;

        z2 = r31.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean deferKeyValueBackup>;

        z3 = r31.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean disableAnimation>;

        z4 = r31.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean disableAod>;

        z5 = r31.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean disableLaunchBoost>;

        z6 = r31.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean disableOptionalSensors>;

        z7 = r31.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean disableSoundTrigger>;

        $z27 = r31.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean disableVibration>;

        if $z27 == 0 goto label03;

        $z26 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: boolean mAccessibilityEnabled>;

        if $z26 != 0 goto label03;

        z28 = 1;

        goto label04;

     label03:
        z28 = 0;

     label04:
        z8 = r31.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean enableAdjustBrightness>;

        z9 = r31.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean enableDataSaver>;

        z10 = r31.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean enableFirewall>;

        $z29 = r31.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean enableNightMode>;

        if $z29 == 0 goto label05;

        $z25 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: boolean mCarModeEnabled>;

        if $z25 != 0 goto label05;

        z30 = 1;

        goto label06;

     label05:
        z30 = 0;

     label06:
        $r32 = new com.android.server.power.batterysaver.BatterySaverPolicy$Policy;

        $z31 = r31.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean enableQuickDoze>;

        $r33 = r31.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: android.util.ArrayMap filesForInteractive>;

        $r34 = r31.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: android.util.ArrayMap filesForNoninteractive>;

        $z32 = r31.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean forceAllAppsStandby>;

        $z33 = r31.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean forceBackgroundCheck>;

        specialinvoke $r32.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: void <init>(float,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,android.util.ArrayMap,android.util.ArrayMap,boolean,boolean,int)>(f0, z0, z1, z2, z3, z4, z5, z6, z7, z28, z8, z9, z10, z30, $z31, $r33, $r34, $z32, $z33, i3);

        r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy mEffectivePolicyRaw> = $r32;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r37 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy mEffectivePolicyRaw>;

        $z34 = $r37.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean forceAllAppsStandby>;

        if $z34 == 0 goto label07;

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("A");

     label07:
        $r1 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy mEffectivePolicyRaw>;

        $z12 = $r1.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean forceBackgroundCheck>;

        if $z12 == 0 goto label08;

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("B");

     label08:
        $r2 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy mEffectivePolicyRaw>;

        $z13 = $r2.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean disableVibration>;

        if $z13 == 0 goto label09;

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("v");

     label09:
        $r3 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy mEffectivePolicyRaw>;

        $z14 = $r3.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean disableAnimation>;

        if $z14 == 0 goto label10;

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

     label10:
        $r4 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy mEffectivePolicyRaw>;

        $z15 = $r4.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean disableSoundTrigger>;

        if $z15 == 0 goto label11;

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("s");

     label11:
        $r5 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy mEffectivePolicyRaw>;

        $z16 = $r5.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean deferFullBackup>;

        if $z16 == 0 goto label12;

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("F");

     label12:
        $r6 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy mEffectivePolicyRaw>;

        $z17 = $r6.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean deferKeyValueBackup>;

        if $z17 == 0 goto label13;

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("K");

     label13:
        $r7 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy mEffectivePolicyRaw>;

        $z18 = $r7.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean enableFirewall>;

        if $z18 == 0 goto label14;

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("f");

     label14:
        $r8 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy mEffectivePolicyRaw>;

        $z19 = $r8.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean enableDataSaver>;

        if $z19 == 0 goto label15;

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

     label15:
        $r9 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy mEffectivePolicyRaw>;

        $z20 = $r9.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean enableAdjustBrightness>;

        if $z20 == 0 goto label16;

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

     label16:
        $r10 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy mEffectivePolicyRaw>;

        $z21 = $r10.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean disableLaunchBoost>;

        if $z21 == 0 goto label17;

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("l");

     label17:
        $r11 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy mEffectivePolicyRaw>;

        $z22 = $r11.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean disableOptionalSensors>;

        if $z22 == 0 goto label18;

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("S");

     label18:
        $r12 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy mEffectivePolicyRaw>;

        $z23 = $r12.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean disableAod>;

        if $z23 == 0 goto label19;

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("o");

     label19:
        $r13 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy mEffectivePolicyRaw>;

        $z24 = $r13.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean enableQuickDoze>;

        if $z24 == 0 goto label20;

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("q");

     label20:
        $r14 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy mEffectivePolicyRaw>;

        $i0 = $r14.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: int locationMode>;

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r16 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String mEventLogKeys> = $r16;

        return;
    }

    public void addListener(com.android.server.power.batterysaver.BatterySaverPolicy$BatterySaverPolicyListener)
    {
        com.android.server.power.batterysaver.BatterySaverPolicy r0;
        java.lang.Object r1;
        java.util.List $r2;
        java.lang.Throwable $r3;
        com.android.server.power.batterysaver.BatterySaverPolicy$BatterySaverPolicyListener r4;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverPolicy;

        r4 := @parameter0: com.android.server.power.batterysaver.BatterySaverPolicy$BatterySaverPolicyListener;

        r1 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.util.List mListeners>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r4);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void dump(java.io.PrintWriter)
    {
        com.android.server.power.batterysaver.BatterySaverPolicy r0;
        java.lang.Object r1;
        com.android.server.power.batterysaver.BatterySavingStats $r2;
        java.lang.String $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r25, $r28, $r31;
        boolean $z0, $z1;
        int $i0;
        com.android.server.power.batterysaver.BatterySaverPolicy$Policy $r32, $r33, $r34, $r35;
        java.lang.Throwable $r36;
        java.io.PrintWriter r37;
        java.lang.StringBuilder r38, r39, r40, r41, r42, r43, r44, r45;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverPolicy;

        r37 := @parameter0: java.io.PrintWriter;

        r1 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        virtualinvoke r37.<java.io.PrintWriter: void println()>();

        $r2 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySavingStats mBatterySavingStats>;

        virtualinvoke $r2.<com.android.server.power.batterysaver.BatterySavingStats: void dump(java.io.PrintWriter,java.lang.String)>(r37, "");

        virtualinvoke r37.<java.io.PrintWriter: void println()>();

        virtualinvoke r37.<java.io.PrintWriter: void println(java.lang.String)>("Battery saver policy (*NOTE* they only apply when battery saver is ON):");

        virtualinvoke r37.<java.io.PrintWriter: void println(java.lang.String)>("  Settings: battery_saver_constants");

        r38 = new java.lang.StringBuilder;

        specialinvoke r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    value: ");

        $r4 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String mSettings>;

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r37.<java.io.PrintWriter: void println(java.lang.String)>($r6);

        r39 = new java.lang.StringBuilder;

        specialinvoke r39.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Settings: ");

        $r8 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String mDeviceSpecificSettingsSource>;

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r37.<java.io.PrintWriter: void println(java.lang.String)>($r10);

        r40 = new java.lang.StringBuilder;

        specialinvoke r40.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    value: ");

        $r12 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String mDeviceSpecificSettings>;

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r37.<java.io.PrintWriter: void println(java.lang.String)>($r14);

        virtualinvoke r37.<java.io.PrintWriter: void println(java.lang.String)>("  Adaptive Settings: battery_saver_adaptive_constants");

        r41 = new java.lang.StringBuilder;

        specialinvoke r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    value: ");

        $r16 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String mAdaptiveSettings>;

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r37.<java.io.PrintWriter: void println(java.lang.String)>($r18);

        virtualinvoke r37.<java.io.PrintWriter: void println(java.lang.String)>("  Adaptive Device Specific Settings: battery_saver_adaptive_device_specific_constants");

        r42 = new java.lang.StringBuilder;

        specialinvoke r42.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    value: ");

        $r20 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String mAdaptiveDeviceSpecificSettings>;

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r37.<java.io.PrintWriter: void println(java.lang.String)>($r22);

        r43 = new java.lang.StringBuilder;

        specialinvoke r43.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mAccessibilityEnabled=");

        $z0 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: boolean mAccessibilityEnabled>;

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r25 = virtualinvoke r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r37.<java.io.PrintWriter: void println(java.lang.String)>($r25);

        r44 = new java.lang.StringBuilder;

        specialinvoke r44.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCarModeEnabled=");

        $z1 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: boolean mCarModeEnabled>;

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r28 = virtualinvoke r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r37.<java.io.PrintWriter: void println(java.lang.String)>($r28);

        r45 = new java.lang.StringBuilder;

        specialinvoke r45.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mPolicyLevel=");

        $i0 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: int mPolicyLevel>;

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r31 = virtualinvoke r45.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r37.<java.io.PrintWriter: void println(java.lang.String)>($r31);

        $r32 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy mFullPolicy>;

        specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverPolicy: void dumpPolicyLocked(java.io.PrintWriter,java.lang.String,java.lang.String,com.android.server.power.batterysaver.BatterySaverPolicy$Policy)>(r37, "  ", "full", $r32);

        $r33 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy mDefaultAdaptivePolicy>;

        specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverPolicy: void dumpPolicyLocked(java.io.PrintWriter,java.lang.String,java.lang.String,com.android.server.power.batterysaver.BatterySaverPolicy$Policy)>(r37, "  ", "default adaptive", $r33);

        $r34 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy mAdaptivePolicy>;

        specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverPolicy: void dumpPolicyLocked(java.io.PrintWriter,java.lang.String,java.lang.String,com.android.server.power.batterysaver.BatterySaverPolicy$Policy)>(r37, "  ", "current adaptive", $r34);

        $r35 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy mEffectivePolicyRaw>;

        specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverPolicy: void dumpPolicyLocked(java.io.PrintWriter,java.lang.String,java.lang.String,com.android.server.power.batterysaver.BatterySaverPolicy$Policy)>(r37, "  ", "effective", $r35);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r36 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r36;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.os.PowerSaveState getBatterySaverPolicy(int)
    {
        com.android.server.power.batterysaver.BatterySaverPolicy r0;
        int i0, $i1, $i2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, z16, z17;
        android.os.PowerSaveState$Builder $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, r20, r21, $r36, $r37;
        float $f0;
        java.lang.Throwable $r18;
        com.android.server.power.batterysaver.BatterySaverPolicy$Policy r19;
        android.os.PowerSaveState r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r38, r39;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverPolicy;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        r19 = specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy getCurrentPolicyLocked()>();

        r20 = new android.os.PowerSaveState$Builder;

        specialinvoke r20.<android.os.PowerSaveState$Builder: void <init>()>();

        $z0 = r19.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean advertiseIsEnabled>;

        r21 = virtualinvoke r20.<android.os.PowerSaveState$Builder: android.os.PowerSaveState$Builder setGlobalBatterySaverEnabled(boolean)>($z0);

     label02:
        tableswitch(i0)
        {
            case 1: goto label33;
            case 2: goto label31;
            case 3: goto label29;
            case 4: goto label27;
            case 5: goto label25;
            case 6: goto label23;
            case 7: goto label21;
            case 8: goto label19;
            case 9: goto label03;
            case 10: goto label17;
            case 11: goto label15;
            case 12: goto label13;
            case 13: goto label11;
            case 14: goto label09;
            case 15: goto label07;
            case 16: goto label05;
            default: goto label03;
        };

     label03:
        z16 = r19.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean advertiseIsEnabled>;

     label04:
        goto label39;

     label05:
        $z1 = r19.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean enableNightMode>;

        $r2 = virtualinvoke r21.<android.os.PowerSaveState$Builder: android.os.PowerSaveState$Builder setBatterySaverEnabled(boolean)>($z1);

        r22 = virtualinvoke $r2.<android.os.PowerSaveState$Builder: android.os.PowerSaveState build()>();

        exitmonitor r1;

     label06:
        return r22;

     label07:
        $z2 = r19.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean enableQuickDoze>;

        $r3 = virtualinvoke r21.<android.os.PowerSaveState$Builder: android.os.PowerSaveState$Builder setBatterySaverEnabled(boolean)>($z2);

        r23 = virtualinvoke $r3.<android.os.PowerSaveState$Builder: android.os.PowerSaveState build()>();

        exitmonitor r1;

     label08:
        return r23;

     label09:
        $z3 = r19.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean disableAod>;

        $r4 = virtualinvoke r21.<android.os.PowerSaveState$Builder: android.os.PowerSaveState$Builder setBatterySaverEnabled(boolean)>($z3);

        r24 = virtualinvoke $r4.<android.os.PowerSaveState$Builder: android.os.PowerSaveState build()>();

        exitmonitor r1;

     label10:
        return r24;

     label11:
        $z4 = r19.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean disableOptionalSensors>;

        $r5 = virtualinvoke r21.<android.os.PowerSaveState$Builder: android.os.PowerSaveState$Builder setBatterySaverEnabled(boolean)>($z4);

        r25 = virtualinvoke $r5.<android.os.PowerSaveState$Builder: android.os.PowerSaveState build()>();

        exitmonitor r1;

     label12:
        return r25;

     label13:
        $z5 = r19.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean forceBackgroundCheck>;

        $r6 = virtualinvoke r21.<android.os.PowerSaveState$Builder: android.os.PowerSaveState$Builder setBatterySaverEnabled(boolean)>($z5);

        r26 = virtualinvoke $r6.<android.os.PowerSaveState$Builder: android.os.PowerSaveState build()>();

        exitmonitor r1;

     label14:
        return r26;

     label15:
        $z6 = r19.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean forceAllAppsStandby>;

        $r7 = virtualinvoke r21.<android.os.PowerSaveState$Builder: android.os.PowerSaveState$Builder setBatterySaverEnabled(boolean)>($z6);

        r27 = virtualinvoke $r7.<android.os.PowerSaveState$Builder: android.os.PowerSaveState build()>();

        exitmonitor r1;

     label16:
        return r27;

     label17:
        $z7 = r19.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean enableDataSaver>;

        $r8 = virtualinvoke r21.<android.os.PowerSaveState$Builder: android.os.PowerSaveState$Builder setBatterySaverEnabled(boolean)>($z7);

        r28 = virtualinvoke $r8.<android.os.PowerSaveState$Builder: android.os.PowerSaveState build()>();

        exitmonitor r1;

     label18:
        return r28;

     label19:
        $z8 = r19.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean disableSoundTrigger>;

        $r9 = virtualinvoke r21.<android.os.PowerSaveState$Builder: android.os.PowerSaveState$Builder setBatterySaverEnabled(boolean)>($z8);

        r29 = virtualinvoke $r9.<android.os.PowerSaveState$Builder: android.os.PowerSaveState build()>();

        exitmonitor r1;

     label20:
        return r29;

     label21:
        $z9 = r19.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean enableAdjustBrightness>;

        $r10 = virtualinvoke r21.<android.os.PowerSaveState$Builder: android.os.PowerSaveState$Builder setBatterySaverEnabled(boolean)>($z9);

        $f0 = r19.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: float adjustBrightnessFactor>;

        $r11 = virtualinvoke $r10.<android.os.PowerSaveState$Builder: android.os.PowerSaveState$Builder setBrightnessFactor(float)>($f0);

        r30 = virtualinvoke $r11.<android.os.PowerSaveState$Builder: android.os.PowerSaveState build()>();

        exitmonitor r1;

     label22:
        return r30;

     label23:
        $z10 = r19.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean enableFirewall>;

        $r12 = virtualinvoke r21.<android.os.PowerSaveState$Builder: android.os.PowerSaveState$Builder setBatterySaverEnabled(boolean)>($z10);

        r31 = virtualinvoke $r12.<android.os.PowerSaveState$Builder: android.os.PowerSaveState build()>();

        exitmonitor r1;

     label24:
        return r31;

     label25:
        $z11 = r19.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean deferKeyValueBackup>;

        $r13 = virtualinvoke r21.<android.os.PowerSaveState$Builder: android.os.PowerSaveState$Builder setBatterySaverEnabled(boolean)>($z11);

        r32 = virtualinvoke $r13.<android.os.PowerSaveState$Builder: android.os.PowerSaveState build()>();

        exitmonitor r1;

     label26:
        return r32;

     label27:
        $z12 = r19.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean deferFullBackup>;

        $r14 = virtualinvoke r21.<android.os.PowerSaveState$Builder: android.os.PowerSaveState$Builder setBatterySaverEnabled(boolean)>($z12);

        r33 = virtualinvoke $r14.<android.os.PowerSaveState$Builder: android.os.PowerSaveState build()>();

        exitmonitor r1;

     label28:
        return r33;

     label29:
        $z13 = r19.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean disableAnimation>;

        $r15 = virtualinvoke r21.<android.os.PowerSaveState$Builder: android.os.PowerSaveState$Builder setBatterySaverEnabled(boolean)>($z13);

        r34 = virtualinvoke $r15.<android.os.PowerSaveState$Builder: android.os.PowerSaveState build()>();

        exitmonitor r1;

     label30:
        return r34;

     label31:
        $z14 = r19.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean disableVibration>;

        $r16 = virtualinvoke r21.<android.os.PowerSaveState$Builder: android.os.PowerSaveState$Builder setBatterySaverEnabled(boolean)>($z14);

        r35 = virtualinvoke $r16.<android.os.PowerSaveState$Builder: android.os.PowerSaveState build()>();

        exitmonitor r1;

     label32:
        return r35;

     label33:
        $z15 = r19.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean advertiseIsEnabled>;

        if $z15 != 0 goto label36;

        $i1 = r19.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: int locationMode>;

        if $i1 == 0 goto label35;

     label34:
        goto label36;

     label35:
        z17 = 0;

        goto label37;

     label36:
        z17 = 1;

     label37:
        $r36 = virtualinvoke r21.<android.os.PowerSaveState$Builder: android.os.PowerSaveState$Builder setBatterySaverEnabled(boolean)>(z17);

        $i2 = r19.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: int locationMode>;

        $r37 = virtualinvoke $r36.<android.os.PowerSaveState$Builder: android.os.PowerSaveState$Builder setLocationMode(int)>($i2);

        r38 = virtualinvoke $r37.<android.os.PowerSaveState$Builder: android.os.PowerSaveState build()>();

        exitmonitor r1;

     label38:
        return r38;

     label39:
        $r17 = virtualinvoke r21.<android.os.PowerSaveState$Builder: android.os.PowerSaveState$Builder setBatterySaverEnabled(boolean)>(z16);

        r39 = virtualinvoke $r17.<android.os.PowerSaveState$Builder: android.os.PowerSaveState build()>();

        exitmonitor r1;

     label40:
        return r39;

     label41:
        $r18 := @caughtexception;

     label42:
        exitmonitor r1;

     label43:
        throw $r18;

        catch java.lang.Throwable from label01 to label02 with label41;
        catch java.lang.Throwable from label03 to label04 with label41;
        catch java.lang.Throwable from label05 to label06 with label41;
        catch java.lang.Throwable from label07 to label08 with label41;
        catch java.lang.Throwable from label09 to label10 with label41;
        catch java.lang.Throwable from label11 to label12 with label41;
        catch java.lang.Throwable from label13 to label14 with label41;
        catch java.lang.Throwable from label15 to label16 with label41;
        catch java.lang.Throwable from label17 to label18 with label41;
        catch java.lang.Throwable from label19 to label20 with label41;
        catch java.lang.Throwable from label21 to label22 with label41;
        catch java.lang.Throwable from label23 to label24 with label41;
        catch java.lang.Throwable from label25 to label26 with label41;
        catch java.lang.Throwable from label27 to label28 with label41;
        catch java.lang.Throwable from label29 to label30 with label41;
        catch java.lang.Throwable from label31 to label32 with label41;
        catch java.lang.Throwable from label33 to label34 with label41;
        catch java.lang.Throwable from label37 to label38 with label41;
        catch java.lang.Throwable from label39 to label40 with label41;
        catch java.lang.Throwable from label42 to label43 with label41;
    }

    int getDeviceSpecificConfigResId()
    {
        com.android.server.power.batterysaver.BatterySaverPolicy r0;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverPolicy;

        return 17039825;
    }

    public android.util.ArrayMap getFileValues(boolean)
    {
        com.android.server.power.batterysaver.BatterySaverPolicy r0;
        boolean z0;
        java.lang.Object r1;
        com.android.server.power.batterysaver.BatterySaverPolicy$Policy $r2, $r3;
        java.lang.Throwable $r4;
        android.util.ArrayMap r5;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverPolicy;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.Object mLock>;

        entermonitor r1;

        if z0 == 0 goto label3;

     label1:
        $r3 = specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy getCurrentPolicyLocked()>();

        r5 = $r3.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: android.util.ArrayMap filesForInteractive>;

     label2:
        goto label4;

     label3:
        $r2 = specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy getCurrentPolicyLocked()>();

        r5 = $r2.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: android.util.ArrayMap filesForNoninteractive>;

     label4:
        exitmonitor r1;

     label5:
        return r5;

     label6:
        $r4 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    java.lang.String getGlobalSetting(java.lang.String)
    {
        com.android.server.power.batterysaver.BatterySaverPolicy r0;
        java.lang.String r1, $r3;
        android.content.ContentResolver $r2;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverPolicy;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: android.content.ContentResolver mContentResolver>;

        $r3 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r2, r1);

        return $r3;
    }

    public int getGpsMode()
    {
        com.android.server.power.batterysaver.BatterySaverPolicy r0;
        java.lang.Object r1;
        int i0;
        com.android.server.power.batterysaver.BatterySaverPolicy$Policy $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverPolicy;

        r1 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy getCurrentPolicyLocked()>();

        i0 = $r3.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: int locationMode>;

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void invalidatePowerSaveModeCaches()
    {
        com.android.server.power.batterysaver.BatterySaverPolicy r0;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverPolicy;

        staticinvoke <android.os.PowerManager: void invalidatePowerSaveModeCaches()>();

        return;
    }

    public boolean isLaunchBoostDisabled()
    {
        com.android.server.power.batterysaver.BatterySaverPolicy r0;
        java.lang.Object r1;
        boolean z0;
        com.android.server.power.batterysaver.BatterySaverPolicy$Policy $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverPolicy;

        r1 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy getCurrentPolicyLocked()>();

        z0 = $r3.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean disableLaunchBoost>;

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void lambda$maybeNotifyListenersOfPolicyChange$1$BatterySaverPolicy(com.android.server.power.batterysaver.BatterySaverPolicy$BatterySaverPolicyListener[])
    {
        com.android.server.power.batterysaver.BatterySaverPolicy r0;
        com.android.server.power.batterysaver.BatterySaverPolicy$BatterySaverPolicyListener[] r1;
        int i0, i1;
        com.android.server.power.batterysaver.BatterySaverPolicy$BatterySaverPolicyListener $r2;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverPolicy;

        r1 := @parameter0: com.android.server.power.batterysaver.BatterySaverPolicy$BatterySaverPolicyListener[];

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r2 = r1[i1];

        interfaceinvoke $r2.<com.android.server.power.batterysaver.BatterySaverPolicy$BatterySaverPolicyListener: void onBatterySaverPolicyChanged(com.android.server.power.batterysaver.BatterySaverPolicy)>(r0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void lambda$systemReady$0$BatterySaverPolicy(boolean)
    {
        com.android.server.power.batterysaver.BatterySaverPolicy r0;
        boolean z0;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverPolicy;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.android.server.power.batterysaver.BatterySaverPolicy: void setAccessibilityEnabled(boolean)>(z0);

        return;
    }

    public void onChange(boolean, android.net.Uri)
    {
        com.android.server.power.batterysaver.BatterySaverPolicy r0;
        boolean z0;
        android.net.Uri r1;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverPolicy;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.net.Uri;

        specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverPolicy: void refreshSettings()>();

        return;
    }

    boolean resetAdaptivePolicyLocked()
    {
        com.android.server.power.batterysaver.BatterySaverPolicy r0;
        com.android.server.power.batterysaver.BatterySaverPolicy$Policy $r1;
        boolean $z0;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverPolicy;

        $r1 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy mDefaultAdaptivePolicy>;

        $z0 = virtualinvoke r0.<com.android.server.power.batterysaver.BatterySaverPolicy: boolean setAdaptivePolicyLocked(com.android.server.power.batterysaver.BatterySaverPolicy$Policy)>($r1);

        return $z0;
    }

    void setAccessibilityEnabled(boolean)
    {
        com.android.server.power.batterysaver.BatterySaverPolicy r0;
        boolean z0, $z1;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverPolicy;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z1 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: boolean mAccessibilityEnabled>;

        if $z1 == z0 goto label2;

        r0.<com.android.server.power.batterysaver.BatterySaverPolicy: boolean mAccessibilityEnabled> = z0;

        specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverPolicy: void updatePolicyDependenciesLocked()>();

        specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverPolicy: void maybeNotifyListenersOfPolicyChange()>();

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    boolean setAdaptivePolicyLocked(com.android.server.power.batterysaver.BatterySaverPolicy$Policy)
    {
        com.android.server.power.batterysaver.BatterySaverPolicy r0;
        com.android.server.power.batterysaver.BatterySaverPolicy$Policy r1, $r2;
        boolean $z0;
        int $i0;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverPolicy;

        r1 := @parameter0: com.android.server.power.batterysaver.BatterySaverPolicy$Policy;

        if r1 != null goto label1;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("BatterySaverPolicy", "setAdaptivePolicy given null policy");

        return 0;

     label1:
        $r2 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy mAdaptivePolicy>;

        $z0 = virtualinvoke $r2.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        return 0;

     label2:
        r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy mAdaptivePolicy> = r1;

        $i0 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: int mPolicyLevel>;

        if $i0 != 1 goto label3;

        specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverPolicy: void updatePolicyDependenciesLocked()>();

        return 1;

     label3:
        return 0;
    }

    void setCarModeEnabled(boolean)
    {
        com.android.server.power.batterysaver.BatterySaverPolicy r0;
        boolean z0, $z1;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverPolicy;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z1 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: boolean mCarModeEnabled>;

        if $z1 == z0 goto label2;

        r0.<com.android.server.power.batterysaver.BatterySaverPolicy: boolean mCarModeEnabled> = z0;

        specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverPolicy: void updatePolicyDependenciesLocked()>();

        specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverPolicy: void maybeNotifyListenersOfPolicyChange()>();

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    boolean setPolicyLevel(int)
    {
        com.android.server.power.batterysaver.BatterySaverPolicy r0;
        int i0, $i1;
        java.lang.Object r1;
        java.lang.String $r4;
        java.lang.Throwable $r5;
        java.lang.StringBuilder r6;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverPolicy;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $i1 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: int mPolicyLevel>;

        if $i1 != i0 goto label03;

        exitmonitor r1;

     label02:
        return 0;

     label03:
        if i0 == 0 goto label06;

        if i0 == 1 goto label06;

        if i0 == 2 goto label06;

     label04:
        r6 = new java.lang.StringBuilder;

        specialinvoke r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setPolicyLevel invalid level given: ");

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("BatterySaverPolicy", $r4);

        exitmonitor r1;

     label05:
        return 0;

     label06:
        r0.<com.android.server.power.batterysaver.BatterySaverPolicy: int mPolicyLevel> = i0;

     label07:
        specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverPolicy: void updatePolicyDependenciesLocked()>();

        exitmonitor r1;

     label08:
        return 1;

     label09:
        $r5 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    boolean shouldAdvertiseIsEnabled()
    {
        com.android.server.power.batterysaver.BatterySaverPolicy r0;
        java.lang.Object r1;
        boolean z0;
        com.android.server.power.batterysaver.BatterySaverPolicy$Policy $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverPolicy;

        r1 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverPolicy: com.android.server.power.batterysaver.BatterySaverPolicy$Policy getCurrentPolicyLocked()>();

        z0 = $r3.<com.android.server.power.batterysaver.BatterySaverPolicy$Policy: boolean advertiseIsEnabled>;

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void systemReady()
    {
        com.android.server.power.batterysaver.BatterySaverPolicy r0;
        boolean z0, z2;
        java.lang.Object $r1, $r9, $r16, r23, r25;
        android.content.ContentResolver $r2, $r4, $r6, r20;
        android.net.Uri $r3, $r5, $r7, r21;
        android.content.Context $r8, $r13, $r15;
        com.android.server.power.batterysaver._$$Lambda$BatterySaverPolicy$rfw31Sb8JX1OVD2rGHGtCXyfop8 $r10;
        android.content.IntentFilter $r11;
        android.content.BroadcastReceiver $r12;
        android.app.UiModeManager $r17;
        int $i0;
        java.lang.Throwable $r18, $r19;
        android.view.accessibility.AccessibilityManager r22;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverPolicy;

        $r1 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.Object mLock>;

        staticinvoke <com.android.internal.util.ConcurrentUtils: void wtfIfLockHeld(java.lang.String,java.lang.Object)>("BatterySaverPolicy", $r1);

        r20 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: android.content.ContentResolver mContentResolver>;

        r21 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("battery_saver_constants");

        z2 = 0;

        virtualinvoke r20.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>(r21, 0, r0);

        $r2 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: android.content.ContentResolver mContentResolver>;

        $r3 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("battery_saver_device_specific_constants");

        virtualinvoke $r2.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r3, 0, r0);

        $r4 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: android.content.ContentResolver mContentResolver>;

        $r5 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("battery_saver_adaptive_constants");

        virtualinvoke $r4.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r5, 0, r0);

        $r6 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: android.content.ContentResolver mContentResolver>;

        $r7 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("battery_saver_adaptive_device_specific_constants");

        virtualinvoke $r6.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r7, 0, r0);

        $r8 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/view/accessibility/AccessibilityManager;");

        r22 = (android.view.accessibility.AccessibilityManager) $r9;

        $r10 = new com.android.server.power.batterysaver._$$Lambda$BatterySaverPolicy$rfw31Sb8JX1OVD2rGHGtCXyfop8;

        specialinvoke $r10.<com.android.server.power.batterysaver._$$Lambda$BatterySaverPolicy$rfw31Sb8JX1OVD2rGHGtCXyfop8: void <init>(com.android.server.power.batterysaver.BatterySaverPolicy)>(r0);

        virtualinvoke r22.<android.view.accessibility.AccessibilityManager: boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager$AccessibilityStateChangeListener)>($r10);

        z0 = virtualinvoke r22.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        r23 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.Object mLock>;

        entermonitor r23;

     label01:
        r0.<com.android.server.power.batterysaver.BatterySaverPolicy: boolean mAccessibilityEnabled> = z0;

        exitmonitor r23;

     label02:
        $r11 = new android.content.IntentFilter;

        specialinvoke $r11.<android.content.IntentFilter: void <init>(java.lang.String)>("android.app.action.ENTER_CAR_MODE_PRIORITIZED");

        virtualinvoke $r11.<android.content.IntentFilter: void addAction(java.lang.String)>("android.app.action.EXIT_CAR_MODE_PRIORITIZED");

        $r13 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: android.content.Context mContext>;

        $r12 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: android.content.BroadcastReceiver mBroadcastReceiver>;

        virtualinvoke $r13.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r12, $r11);

        $r15 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: android.content.Context mContext>;

        $r16 = virtualinvoke $r15.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/UiModeManager;");

        $r17 = (android.app.UiModeManager) $r16;

        $i0 = virtualinvoke $r17.<android.app.UiModeManager: int getCurrentModeType()>();

        if $i0 != 3 goto label03;

        z2 = 1;

     label03:
        r25 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.Object mLock>;

        entermonitor r25;

     label04:
        r0.<com.android.server.power.batterysaver.BatterySaverPolicy: boolean mCarModeEnabled> = z2;

        exitmonitor r25;

     label05:
        virtualinvoke r0.<com.android.server.power.batterysaver.BatterySaverPolicy: void onChange(boolean,android.net.Uri)>(1, null);

        return;

     label06:
        $r18 := @caughtexception;

     label07:
        exitmonitor r25;

     label08:
        throw $r18;

     label09:
        $r19 := @caughtexception;

     label10:
        exitmonitor r23;

     label11:
        throw $r19;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public java.lang.String toEventLogString()
    {
        com.android.server.power.batterysaver.BatterySaverPolicy r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        java.lang.String r3;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverPolicy;

        r1 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r3 = r0.<com.android.server.power.batterysaver.BatterySaverPolicy: java.lang.String mEventLogKeys>;

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void updateConstantsLocked(java.lang.String, java.lang.String)
    {
        com.android.server.power.batterysaver.BatterySaverPolicy r0;
        java.lang.String r1, r2;

        r0 := @this: com.android.server.power.batterysaver.BatterySaverPolicy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.power.batterysaver.BatterySaverPolicy: boolean updateConstantsLocked(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, "", "");

        return;
    }
}
