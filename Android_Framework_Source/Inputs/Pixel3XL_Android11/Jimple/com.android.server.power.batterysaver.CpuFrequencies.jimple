public class com.android.server.power.batterysaver.CpuFrequencies extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final android.util.ArrayMap mCoreAndFrequencies;
    private final java.lang.Object mLock;

    public void <init>()
    {
        com.android.server.power.batterysaver.CpuFrequencies r0;
        java.lang.Object $r1;
        android.util.ArrayMap $r2;

        r0 := @this: com.android.server.power.batterysaver.CpuFrequencies;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<com.android.server.power.batterysaver.CpuFrequencies: java.lang.Object mLock> = $r1;

        $r2 = new android.util.ArrayMap;

        specialinvoke $r2.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.power.batterysaver.CpuFrequencies: android.util.ArrayMap mCoreAndFrequencies> = $r2;

        return;
    }

    public void addToSysFileMap(java.util.Map)
    {
        com.android.server.power.batterysaver.CpuFrequencies r0;
        java.lang.Object r1, $r5, $r8;
        int i0, i1, i3;
        long l2;
        java.lang.StringBuilder r2;
        android.util.ArrayMap $r3, $r4, $r7;
        java.lang.Integer $r6;
        java.lang.Long $r9;
        java.lang.String $r11, $r14, $r15;
        java.lang.Throwable $r17;
        java.util.Map r18;

        r0 := @this: com.android.server.power.batterysaver.CpuFrequencies;

        r18 := @parameter0: java.util.Map;

        r1 = r0.<com.android.server.power.batterysaver.CpuFrequencies: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.power.batterysaver.CpuFrequencies: android.util.ArrayMap mCoreAndFrequencies>;

        i0 = virtualinvoke $r3.<android.util.ArrayMap: int size()>();

     label02:
        i3 = 0;

     label03:
        if i3 >= i0 goto label06;

     label04:
        $r4 = r0.<com.android.server.power.batterysaver.CpuFrequencies: android.util.ArrayMap mCoreAndFrequencies>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i3);

        $r6 = (java.lang.Integer) $r5;

        i1 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        $r7 = r0.<com.android.server.power.batterysaver.CpuFrequencies: android.util.ArrayMap mCoreAndFrequencies>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i3);

        $r9 = (java.lang.Long) $r8;

        l2 = virtualinvoke $r9.<java.lang.Long: long longValue()>();

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/sys/devices/system/cpu/cpu");

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i1);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/cpufreq/scaling_max_freq");

        $r14 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l2);

        interfaceinvoke r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r15);

     label05:
        i3 = i3 + 1;

        goto label03;

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r17 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r17;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public com.android.server.power.batterysaver.CpuFrequencies parseString(java.lang.String)
    {
        com.android.server.power.batterysaver.CpuFrequencies r0;
        java.lang.Object r1;
        int i0, i1, $i3, $i4, i6;
        long l2;
        android.util.ArrayMap $r2, $r6;
        java.lang.String $r3, $r4, $r5, $r15, r16, r18;
        java.lang.Integer $r7;
        java.lang.Long $r8;
        java.lang.Throwable $r10, $r11;
        java.lang.String[] r17, r19;
        java.lang.IllegalArgumentException r20;
        java.lang.StringBuilder r22;

        r0 := @this: com.android.server.power.batterysaver.CpuFrequencies;

        r16 := @parameter0: java.lang.String;

        r1 = r0.<com.android.server.power.batterysaver.CpuFrequencies: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.power.batterysaver.CpuFrequencies: android.util.ArrayMap mCoreAndFrequencies>;

        virtualinvoke $r2.<android.util.ArrayMap: void clear()>();

     label02:
        r17 = virtualinvoke r16.<java.lang.String: java.lang.String[] split(java.lang.String)>("/");

        i0 = lengthof r17;

     label03:
        i6 = 0;

     label04:
        if i6 >= i0 goto label10;

     label05:
        $r3 = r17[i6];

        r18 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $i3 = virtualinvoke r18.<java.lang.String: int length()>();

        if $i3 != 0 goto label07;

     label06:
        goto label08;

     label07:
        r19 = virtualinvoke r18.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(":", 2);

        $i4 = lengthof r19;

        if $i4 != 2 goto label09;

        $r4 = r19[0];

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        $r5 = r19[1];

        l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r5);

        $r6 = r0.<com.android.server.power.batterysaver.CpuFrequencies: android.util.ArrayMap mCoreAndFrequencies>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r8);

     label08:
        i6 = i6 + 1;

        goto label04;

     label09:
        r20 = new java.lang.IllegalArgumentException;

        specialinvoke r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Wrong format");

        throw r20;

     label10:
        goto label13;

     label11:
        $r11 := @caughtexception;

     label12:
        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid configuration: \'");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r15 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("CpuFrequencies", $r15);

     label13:
        exitmonitor r1;

     label14:
        return r0;

     label15:
        $r10 := @caughtexception;

     label16:
        exitmonitor r1;

     label17:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.IllegalArgumentException from label02 to label03 with label11;
        catch java.lang.Throwable from label02 to label03 with label15;
        catch java.lang.IllegalArgumentException from label05 to label06 with label11;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.IllegalArgumentException from label07 to label08 with label11;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.IllegalArgumentException from label09 to label10 with label11;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public android.util.ArrayMap toSysFileMap()
    {
        com.android.server.power.batterysaver.CpuFrequencies r0;
        android.util.ArrayMap $r2;

        r0 := @this: com.android.server.power.batterysaver.CpuFrequencies;

        $r2 = new android.util.ArrayMap;

        specialinvoke $r2.<android.util.ArrayMap: void <init>()>();

        virtualinvoke r0.<com.android.server.power.batterysaver.CpuFrequencies: void addToSysFileMap(java.util.Map)>($r2);

        return $r2;
    }

    public static void <clinit>()
    {
        <com.android.server.power.batterysaver.CpuFrequencies: java.lang.String TAG> = "CpuFrequencies";

        return;
    }
}
