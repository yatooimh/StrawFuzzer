final class com.android.server.print.RemotePrintSpooler extends java.lang.Object
{
    private static final long BIND_SPOOLER_SERVICE_TIMEOUT;
    private static final boolean DEBUG;
    private static final java.lang.String LOG_TAG;
    private final com.android.server.print.RemotePrintSpooler$PrintSpoolerCallbacks mCallbacks;
    private boolean mCanUnbind;
    private final com.android.server.print.RemotePrintSpooler$ClearCustomPrinterIconCacheCaller mClearCustomPrinterIconCache;
    private final com.android.server.print.RemotePrintSpooler$PrintSpoolerClient mClient;
    private final android.content.Context mContext;
    private final com.android.server.print.RemotePrintSpooler$OnCustomPrinterIconLoadedCaller mCustomPrinterIconLoadedCaller;
    private boolean mDestroyed;
    private final com.android.server.print.RemotePrintSpooler$GetCustomPrinterIconCaller mGetCustomPrinterIconCaller;
    private final com.android.server.print.RemotePrintSpooler$GetPrintJobInfoCaller mGetPrintJobInfoCaller;
    private final com.android.server.print.RemotePrintSpooler$GetPrintJobInfosCaller mGetPrintJobInfosCaller;
    private final android.content.Intent mIntent;
    private boolean mIsBinding;
    private boolean mIsLowPriority;
    private final java.lang.Object mLock;
    private android.print.IPrintSpooler mRemoteInstance;
    private final android.content.ServiceConnection mServiceConnection;
    private final com.android.server.print.RemotePrintSpooler$SetPrintJobStateCaller mSetPrintJobStatusCaller;
    private final com.android.server.print.RemotePrintSpooler$SetPrintJobTagCaller mSetPrintJobTagCaller;
    private final android.os.UserHandle mUserHandle;

    static void <clinit>()
    {
        boolean $z0;
        long l0;

        <com.android.server.print.RemotePrintSpooler: java.lang.String LOG_TAG> = "RemotePrintSpooler";

        <com.android.server.print.RemotePrintSpooler: boolean DEBUG> = 0;

        $z0 = <android.os.Build: boolean IS_ENG>;

        if $z0 == 0 goto label1;

        l0 = 120000L;

        goto label2;

     label1:
        l0 = 10000L;

     label2:
        <com.android.server.print.RemotePrintSpooler: long BIND_SPOOLER_SERVICE_TIMEOUT> = l0;

        return;
    }

    public void <init>(android.content.Context, int, boolean, com.android.server.print.RemotePrintSpooler$PrintSpoolerCallbacks)
    {
        com.android.server.print.RemotePrintSpooler r0;
        int i0;
        boolean z0;
        com.android.server.print.RemotePrintSpooler$PrintSpoolerCallbacks r1;
        java.lang.Object $r2;
        com.android.server.print.RemotePrintSpooler$GetPrintJobInfosCaller $r3;
        com.android.server.print.RemotePrintSpooler$GetPrintJobInfoCaller $r4;
        com.android.server.print.RemotePrintSpooler$SetPrintJobStateCaller $r5;
        com.android.server.print.RemotePrintSpooler$SetPrintJobTagCaller $r6;
        com.android.server.print.RemotePrintSpooler$OnCustomPrinterIconLoadedCaller $r7;
        com.android.server.print.RemotePrintSpooler$ClearCustomPrinterIconCacheCaller $r8;
        com.android.server.print.RemotePrintSpooler$GetCustomPrinterIconCaller $r9;
        com.android.server.print.RemotePrintSpooler$MyServiceConnection $r10;
        android.os.UserHandle $r11;
        com.android.server.print.RemotePrintSpooler$PrintSpoolerClient $r12;
        android.content.Intent $r13;
        android.content.ComponentName $r14;
        android.content.Context r16;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        r16 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r1 := @parameter3: com.android.server.print.RemotePrintSpooler$PrintSpoolerCallbacks;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock> = $r2;

        $r3 = new com.android.server.print.RemotePrintSpooler$GetPrintJobInfosCaller;

        specialinvoke $r3.<com.android.server.print.RemotePrintSpooler$GetPrintJobInfosCaller: void <init>()>();

        r0.<com.android.server.print.RemotePrintSpooler: com.android.server.print.RemotePrintSpooler$GetPrintJobInfosCaller mGetPrintJobInfosCaller> = $r3;

        $r4 = new com.android.server.print.RemotePrintSpooler$GetPrintJobInfoCaller;

        specialinvoke $r4.<com.android.server.print.RemotePrintSpooler$GetPrintJobInfoCaller: void <init>()>();

        r0.<com.android.server.print.RemotePrintSpooler: com.android.server.print.RemotePrintSpooler$GetPrintJobInfoCaller mGetPrintJobInfoCaller> = $r4;

        $r5 = new com.android.server.print.RemotePrintSpooler$SetPrintJobStateCaller;

        specialinvoke $r5.<com.android.server.print.RemotePrintSpooler$SetPrintJobStateCaller: void <init>()>();

        r0.<com.android.server.print.RemotePrintSpooler: com.android.server.print.RemotePrintSpooler$SetPrintJobStateCaller mSetPrintJobStatusCaller> = $r5;

        $r6 = new com.android.server.print.RemotePrintSpooler$SetPrintJobTagCaller;

        specialinvoke $r6.<com.android.server.print.RemotePrintSpooler$SetPrintJobTagCaller: void <init>()>();

        r0.<com.android.server.print.RemotePrintSpooler: com.android.server.print.RemotePrintSpooler$SetPrintJobTagCaller mSetPrintJobTagCaller> = $r6;

        $r7 = new com.android.server.print.RemotePrintSpooler$OnCustomPrinterIconLoadedCaller;

        specialinvoke $r7.<com.android.server.print.RemotePrintSpooler$OnCustomPrinterIconLoadedCaller: void <init>()>();

        r0.<com.android.server.print.RemotePrintSpooler: com.android.server.print.RemotePrintSpooler$OnCustomPrinterIconLoadedCaller mCustomPrinterIconLoadedCaller> = $r7;

        $r8 = new com.android.server.print.RemotePrintSpooler$ClearCustomPrinterIconCacheCaller;

        specialinvoke $r8.<com.android.server.print.RemotePrintSpooler$ClearCustomPrinterIconCacheCaller: void <init>()>();

        r0.<com.android.server.print.RemotePrintSpooler: com.android.server.print.RemotePrintSpooler$ClearCustomPrinterIconCacheCaller mClearCustomPrinterIconCache> = $r8;

        $r9 = new com.android.server.print.RemotePrintSpooler$GetCustomPrinterIconCaller;

        specialinvoke $r9.<com.android.server.print.RemotePrintSpooler$GetCustomPrinterIconCaller: void <init>()>();

        r0.<com.android.server.print.RemotePrintSpooler: com.android.server.print.RemotePrintSpooler$GetCustomPrinterIconCaller mGetCustomPrinterIconCaller> = $r9;

        $r10 = new com.android.server.print.RemotePrintSpooler$MyServiceConnection;

        specialinvoke $r10.<com.android.server.print.RemotePrintSpooler$MyServiceConnection: void <init>(com.android.server.print.RemotePrintSpooler,com.android.server.print.RemotePrintSpooler$1)>(r0, null);

        r0.<com.android.server.print.RemotePrintSpooler: android.content.ServiceConnection mServiceConnection> = $r10;

        r0.<com.android.server.print.RemotePrintSpooler: android.content.Context mContext> = r16;

        $r11 = new android.os.UserHandle;

        specialinvoke $r11.<android.os.UserHandle: void <init>(int)>(i0);

        r0.<com.android.server.print.RemotePrintSpooler: android.os.UserHandle mUserHandle> = $r11;

        r0.<com.android.server.print.RemotePrintSpooler: com.android.server.print.RemotePrintSpooler$PrintSpoolerCallbacks mCallbacks> = r1;

        r0.<com.android.server.print.RemotePrintSpooler: boolean mIsLowPriority> = z0;

        $r12 = new com.android.server.print.RemotePrintSpooler$PrintSpoolerClient;

        specialinvoke $r12.<com.android.server.print.RemotePrintSpooler$PrintSpoolerClient: void <init>(com.android.server.print.RemotePrintSpooler)>(r0);

        r0.<com.android.server.print.RemotePrintSpooler: com.android.server.print.RemotePrintSpooler$PrintSpoolerClient mClient> = $r12;

        $r13 = new android.content.Intent;

        specialinvoke $r13.<android.content.Intent: void <init>()>();

        r0.<com.android.server.print.RemotePrintSpooler: android.content.Intent mIntent> = $r13;

        $r14 = new android.content.ComponentName;

        specialinvoke $r14.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("com.android.printspooler", "com.android.printspooler.model.PrintSpoolerService");

        virtualinvoke $r13.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r14);

        return;
    }

    static java.lang.Object access$100(com.android.server.print.RemotePrintSpooler)
    {
        com.android.server.print.RemotePrintSpooler r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.print.RemotePrintSpooler;

        $r1 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        return $r1;
    }

    static com.android.server.print.RemotePrintSpooler$PrintSpoolerCallbacks access$1300(com.android.server.print.RemotePrintSpooler)
    {
        com.android.server.print.RemotePrintSpooler r0;
        com.android.server.print.RemotePrintSpooler$PrintSpoolerCallbacks $r1;

        r0 := @parameter0: com.android.server.print.RemotePrintSpooler;

        $r1 = r0.<com.android.server.print.RemotePrintSpooler: com.android.server.print.RemotePrintSpooler$PrintSpoolerCallbacks mCallbacks>;

        return $r1;
    }

    static void access$1400(com.android.server.print.RemotePrintSpooler)
    {
        com.android.server.print.RemotePrintSpooler r0;

        r0 := @parameter0: com.android.server.print.RemotePrintSpooler;

        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void onAllPrintJobsHandled()>();

        return;
    }

    static void access$1500(com.android.server.print.RemotePrintSpooler, android.print.PrintJobInfo)
    {
        com.android.server.print.RemotePrintSpooler r0;
        android.print.PrintJobInfo r1;

        r0 := @parameter0: com.android.server.print.RemotePrintSpooler;

        r1 := @parameter1: android.print.PrintJobInfo;

        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void onPrintJobStateChanged(android.print.PrintJobInfo)>(r1);

        return;
    }

    static android.print.IPrintSpooler access$200(com.android.server.print.RemotePrintSpooler)
    {
        com.android.server.print.RemotePrintSpooler r0;
        android.print.IPrintSpooler $r1;

        r0 := @parameter0: com.android.server.print.RemotePrintSpooler;

        $r1 = r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler mRemoteInstance>;

        return $r1;
    }

    static android.print.IPrintSpooler access$202(com.android.server.print.RemotePrintSpooler, android.print.IPrintSpooler)
    {
        com.android.server.print.RemotePrintSpooler r0;
        android.print.IPrintSpooler r1;

        r0 := @parameter0: com.android.server.print.RemotePrintSpooler;

        r1 := @parameter1: android.print.IPrintSpooler;

        r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler mRemoteInstance> = r1;

        return r1;
    }

    static void access$300(com.android.server.print.RemotePrintSpooler)
    {
        com.android.server.print.RemotePrintSpooler r0;

        r0 := @parameter0: com.android.server.print.RemotePrintSpooler;

        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void setClientLocked()>();

        return;
    }

    static void access$400(com.android.server.print.RemotePrintSpooler)
    {
        com.android.server.print.RemotePrintSpooler r0;

        r0 := @parameter0: com.android.server.print.RemotePrintSpooler;

        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void clearClientLocked()>();

        return;
    }

    private void bindLocked() throws java.util.concurrent.TimeoutException, java.lang.InterruptedException
    {
        com.android.server.print.RemotePrintSpooler r0;
        long l0, $l1, $l2, l5, l6;
        boolean $z0, $z1;
        android.print.IPrintSpooler $r1, $r11;
        android.os.UserHandle $r2;
        android.content.ServiceConnection $r3;
        android.content.Intent $r4;
        android.content.Context $r5;
        byte $b3;
        java.lang.Object $r6, $r7, $r8, $r10;
        java.lang.Throwable $r9;
        int i4;
        java.util.concurrent.TimeoutException r12;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

     label01:
        $z0 = r0.<com.android.server.print.RemotePrintSpooler: boolean mIsBinding>;

        if $z0 == 0 goto label02;

        $r8 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r8.<java.lang.Object: void wait()>();

        goto label01;

     label02:
        $r1 = r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler mRemoteInstance>;

        if $r1 == null goto label03;

        return;

     label03:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mIsBinding> = 1;

     label04:
        $z1 = r0.<com.android.server.print.RemotePrintSpooler: boolean mIsLowPriority>;

        if $z1 == 0 goto label06;

     label05:
        i4 = 1;

        goto label07;

     label06:
        i4 = 67108865;

     label07:
        $r5 = r0.<com.android.server.print.RemotePrintSpooler: android.content.Context mContext>;

        $r4 = r0.<com.android.server.print.RemotePrintSpooler: android.content.Intent mIntent>;

        $r3 = r0.<com.android.server.print.RemotePrintSpooler: android.content.ServiceConnection mServiceConnection>;

        $r2 = r0.<com.android.server.print.RemotePrintSpooler: android.os.UserHandle mUserHandle>;

        virtualinvoke $r5.<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>($r4, $r3, i4, $r2);

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label08:
        $r11 = r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler mRemoteInstance>;

        if $r11 == null goto label11;

     label09:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

     label10:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mIsBinding> = 0;

        $r7 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r7.<java.lang.Object: void notifyAll()>();

        return;

     label11:
        l5 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l2 = <com.android.server.print.RemotePrintSpooler: long BIND_SPOOLER_SERVICE_TIMEOUT>;

        $l1 = l5 - l0;

        l6 = $l2 - $l1;

     label12:
        $b3 = l6 cmp 0L;

        if $b3 <= 0 goto label15;

     label13:
        $r6 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r6.<java.lang.Object: void wait(long)>(l6);

     label14:
        goto label08;

     label15:
        r12 = new java.util.concurrent.TimeoutException;

        specialinvoke r12.<java.util.concurrent.TimeoutException: void <init>(java.lang.String)>("Cannot get spooler!");

        throw r12;

     label16:
        $r9 := @caughtexception;

        r0.<com.android.server.print.RemotePrintSpooler: boolean mIsBinding> = 0;

        $r10 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r10.<java.lang.Object: void notifyAll()>();

        throw $r9;

        catch java.lang.Throwable from label04 to label05 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label15 to label16 with label16;
    }

    private void clearClientLocked()
    {
        com.android.server.print.RemotePrintSpooler r0;
        android.print.IPrintSpooler $r2;
        android.os.RemoteException $r3;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

     label1:
        $r2 = r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler mRemoteInstance>;

        interfaceinvoke $r2.<android.print.IPrintSpooler: void setClient(android.print.IPrintSpoolerClient)>(null);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintSpooler", "Error clearing print spooler client", $r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private android.print.IPrintSpooler getRemoteInstanceLazy() throws java.util.concurrent.TimeoutException, java.lang.InterruptedException
    {
        com.android.server.print.RemotePrintSpooler r0;
        java.lang.Object r1;
        android.print.IPrintSpooler $r2, r4, r5;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        r1 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler mRemoteInstance>;

        if $r2 == null goto label3;

        r4 = r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler mRemoteInstance>;

        exitmonitor r1;

     label2:
        return r4;

     label3:
        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void bindLocked()>();

        r5 = r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler mRemoteInstance>;

        exitmonitor r1;

     label4:
        return r5;

     label5:
        $r3 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    private void onAllPrintJobsHandled()
    {
        com.android.server.print.RemotePrintSpooler r0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        r1 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfDestroyedLocked()>();

        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void unbindLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void onPrintJobStateChanged(android.print.PrintJobInfo)
    {
        com.android.server.print.RemotePrintSpooler r0;
        android.print.PrintJobInfo r1;
        com.android.server.print.RemotePrintSpooler$PrintSpoolerCallbacks $r2;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        r1 := @parameter0: android.print.PrintJobInfo;

        $r2 = r0.<com.android.server.print.RemotePrintSpooler: com.android.server.print.RemotePrintSpooler$PrintSpoolerCallbacks mCallbacks>;

        interfaceinvoke $r2.<com.android.server.print.RemotePrintSpooler$PrintSpoolerCallbacks: void onPrintJobStateChanged(android.print.PrintJobInfo)>(r1);

        return;
    }

    private void setClientLocked()
    {
        com.android.server.print.RemotePrintSpooler r0;
        com.android.server.print.RemotePrintSpooler$PrintSpoolerClient $r2;
        android.print.IPrintSpooler $r3;
        android.os.RemoteException $r4;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

     label1:
        $r3 = r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler mRemoteInstance>;

        $r2 = r0.<com.android.server.print.RemotePrintSpooler: com.android.server.print.RemotePrintSpooler$PrintSpoolerClient mClient>;

        interfaceinvoke $r3.<android.print.IPrintSpooler: void setClient(android.print.IPrintSpoolerClient)>($r2);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintSpooler", "Error setting print spooler client", $r4);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void throwIfCalledOnMainThread()
    {
        com.android.server.print.RemotePrintSpooler r0;
        java.lang.Thread $r1, $r4;
        android.content.Context $r2;
        android.os.Looper $r3;
        java.lang.RuntimeException $r5;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r2 = r0.<com.android.server.print.RemotePrintSpooler: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.os.Looper getMainLooper()>();

        $r4 = virtualinvoke $r3.<android.os.Looper: java.lang.Thread getThread()>();

        if $r1 == $r4 goto label1;

        return;

     label1:
        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("Cannot invoke on the main thread");

        throw $r5;
    }

    private void throwIfDestroyedLocked()
    {
        com.android.server.print.RemotePrintSpooler r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        $z0 = r0.<com.android.server.print.RemotePrintSpooler: boolean mDestroyed>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot interact with a destroyed instance.");

        throw $r1;
    }

    private void unbindLocked()
    {
        com.android.server.print.RemotePrintSpooler r0;
        android.print.IPrintSpooler $r2;
        boolean $z0;
        java.lang.Object $r3;
        android.content.ServiceConnection $r4;
        android.content.Context $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        $r2 = r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler mRemoteInstance>;

        if $r2 != null goto label1;

        return;

     label1:
        $z0 = r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind>;

        if $z0 == 0 goto label2;

        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void clearClientLocked()>();

        r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler mRemoteInstance> = null;

        $r5 = r0.<com.android.server.print.RemotePrintSpooler: android.content.Context mContext>;

        $r4 = r0.<com.android.server.print.RemotePrintSpooler: android.content.ServiceConnection mServiceConnection>;

        virtualinvoke $r5.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r4);

        return;

     label2:
        $r3 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r3.<java.lang.Object: void wait()>();

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

     label5:
        goto label1;

        catch java.lang.InterruptedException from label2 to label3 with label4;
    }

    public void clearCustomPrinterIconCache()
    {
        com.android.server.print.RemotePrintSpooler r0;
        com.android.server.print.RemotePrintSpooler$ClearCustomPrinterIconCacheCaller $r1;
        android.print.IPrintSpooler $r2;
        java.lang.Object $r4, $r6, $r10, r13, r14, r18, r20;
        java.lang.Throwable $r5, $r7, $r8, $r9, $r11, $r12;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfCalledOnMainThread()>();

        r13 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r13;

     label01:
        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfDestroyedLocked()>();

        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 0;

        exitmonitor r13;

     label02:
        $r1 = r0.<com.android.server.print.RemotePrintSpooler: com.android.server.print.RemotePrintSpooler$ClearCustomPrinterIconCacheCaller mClearCustomPrinterIconCache>;

        $r2 = specialinvoke r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler getRemoteInstanceLazy()>();

        virtualinvoke $r1.<com.android.server.print.RemotePrintSpooler$ClearCustomPrinterIconCacheCaller: java.lang.Void clearCustomPrinterIconCache(android.print.IPrintSpooler)>($r2);

     label03:
        r14 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r14;

     label04:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r4 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r4.<java.lang.Object: void notifyAll()>();

        exitmonitor r14;

     label05:
        goto label15;

     label06:
        $r12 := @caughtexception;

     label07:
        exitmonitor r14;

     label08:
        throw $r12;

     label09:
        $r5 := @caughtexception;

        goto label19;

     label10:
        $r9 := @caughtexception;

     label11:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintSpooler", "Error clearing custom printer icon cache.", $r9);

     label12:
        r18 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r18;

     label13:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r10 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r10.<java.lang.Object: void notifyAll()>();

        exitmonitor r18;

     label14:
        goto label05;

     label15:
        return;

     label16:
        $r7 := @caughtexception;

     label17:
        exitmonitor r18;

     label18:
        throw $r7;

     label19:
        r20 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r20;

     label20:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r6 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r6.<java.lang.Object: void notifyAll()>();

        exitmonitor r20;

     label21:
        throw $r5;

     label22:
        $r8 := @caughtexception;

     label23:
        exitmonitor r20;

     label24:
        throw $r8;

     label25:
        $r11 := @caughtexception;

     label26:
        exitmonitor r13;

     label27:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label25;
        catch android.os.RemoteException from label02 to label03 with label10;
        catch java.util.concurrent.TimeoutException from label02 to label03 with label10;
        catch java.lang.InterruptedException from label02 to label03 with label10;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label11 to label12 with label09;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label23 to label24 with label22;
        catch java.lang.Throwable from label26 to label27 with label25;
    }

    public final void createPrintJob(android.print.PrintJobInfo)
    {
        com.android.server.print.RemotePrintSpooler r0;
        android.print.IPrintSpooler $r1;
        java.lang.Object $r2, $r5, $r7, r12, r13, r17, r19;
        java.lang.Throwable $r3, $r4, $r6, $r8, $r9, $r10;
        android.print.PrintJobInfo r11;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        r11 := @parameter0: android.print.PrintJobInfo;

        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfCalledOnMainThread()>();

        r12 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r12;

     label01:
        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfDestroyedLocked()>();

        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 0;

        exitmonitor r12;

     label02:
        $r1 = specialinvoke r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler getRemoteInstanceLazy()>();

        interfaceinvoke $r1.<android.print.IPrintSpooler: void createPrintJob(android.print.PrintJobInfo)>(r11);

     label03:
        r13 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r13;

     label04:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r2 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r2.<java.lang.Object: void notifyAll()>();

        exitmonitor r13;

     label05:
        goto label15;

     label06:
        $r10 := @caughtexception;

     label07:
        exitmonitor r13;

     label08:
        throw $r10;

     label09:
        $r6 := @caughtexception;

        goto label19;

     label10:
        $r4 := @caughtexception;

     label11:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintSpooler", "Error creating print job.", $r4);

     label12:
        r17 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r17;

     label13:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r5 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r5.<java.lang.Object: void notifyAll()>();

        exitmonitor r17;

     label14:
        goto label05;

     label15:
        return;

     label16:
        $r9 := @caughtexception;

     label17:
        exitmonitor r17;

     label18:
        throw $r9;

     label19:
        r19 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r19;

     label20:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r7 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r7.<java.lang.Object: void notifyAll()>();

        exitmonitor r19;

     label21:
        throw $r6;

     label22:
        $r8 := @caughtexception;

     label23:
        exitmonitor r19;

     label24:
        throw $r8;

     label25:
        $r3 := @caughtexception;

     label26:
        exitmonitor r12;

     label27:
        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label25;
        catch android.os.RemoteException from label02 to label03 with label10;
        catch java.util.concurrent.TimeoutException from label02 to label03 with label10;
        catch java.lang.InterruptedException from label02 to label03 with label10;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label11 to label12 with label09;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label23 to label24 with label22;
        catch java.lang.Throwable from label26 to label27 with label25;
    }

    public final void destroy()
    {
        com.android.server.print.RemotePrintSpooler r0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfCalledOnMainThread()>();

        r1 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfDestroyedLocked()>();

        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void unbindLocked()>();

        r0.<com.android.server.print.RemotePrintSpooler: boolean mDestroyed> = 1;

        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 0;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void dump(com.android.internal.util.dump.DualDumpOutputStream)
    {
        com.android.server.print.RemotePrintSpooler r0;
        java.lang.Object r1;
        boolean $z0, $z1, z2;
        android.print.IPrintSpooler $r2, $r3, $r7;
        android.os.IBinder $r4, $r8;
        java.lang.String[] $r5, $r9;
        byte[] $r6, $r10;
        java.lang.Throwable $r11, $r12;
        com.android.internal.util.dump.DualDumpOutputStream r13;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        r13 := @parameter0: com.android.internal.util.dump.DualDumpOutputStream;

        r1 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $z0 = r0.<com.android.server.print.RemotePrintSpooler: boolean mDestroyed>;

        virtualinvoke r13.<com.android.internal.util.dump.DualDumpOutputStream: void write(java.lang.String,long,boolean)>("is_destroyed", 1133871366145L, $z0);

        $r2 = r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler mRemoteInstance>;

        if $r2 == null goto label03;

     label02:
        z2 = 1;

        goto label04;

     label03:
        z2 = 0;

     label04:
        virtualinvoke r13.<com.android.internal.util.dump.DualDumpOutputStream: void write(java.lang.String,long,boolean)>("is_bound", 1133871366146L, z2);

        exitmonitor r1;

     label05:
        $z1 = virtualinvoke r13.<com.android.internal.util.dump.DualDumpOutputStream: boolean isProto()>();

        if $z1 == 0 goto label07;

        $r7 = specialinvoke r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler getRemoteInstanceLazy()>();

        $r8 = interfaceinvoke $r7.<android.print.IPrintSpooler: android.os.IBinder asBinder()>();

        $r9 = newarray (java.lang.String)[1];

        $r9[0] = "--proto";

        $r10 = staticinvoke <com.android.internal.os.TransferPipe: byte[] dumpAsync(android.os.IBinder,java.lang.String[])>($r8, $r9);

        virtualinvoke r13.<com.android.internal.util.dump.DualDumpOutputStream: void write(java.lang.String,long,byte[])>(null, 1146756268035L, $r10);

     label06:
        goto label08;

     label07:
        $r3 = specialinvoke r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler getRemoteInstanceLazy()>();

        $r4 = interfaceinvoke $r3.<android.print.IPrintSpooler: android.os.IBinder asBinder()>();

        $r5 = newarray (java.lang.String)[0];

        $r6 = staticinvoke <com.android.internal.os.TransferPipe: byte[] dumpAsync(android.os.IBinder,java.lang.String[])>($r4, $r5);

        virtualinvoke r13.<com.android.internal.util.dump.DualDumpOutputStream: void writeNested(java.lang.String,byte[])>("internal_state", $r6);

     label08:
        goto label10;

     label09:
        $r12 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintSpooler", "Failed to dump remote instance", $r12);

     label10:
        return;

     label11:
        $r11 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.io.IOException from label05 to label06 with label09;
        catch java.util.concurrent.TimeoutException from label05 to label06 with label09;
        catch android.os.RemoteException from label05 to label06 with label09;
        catch java.lang.InterruptedException from label05 to label06 with label09;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.util.concurrent.TimeoutException from label07 to label08 with label09;
        catch android.os.RemoteException from label07 to label08 with label09;
        catch java.lang.InterruptedException from label07 to label08 with label09;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public final android.graphics.drawable.Icon getCustomPrinterIcon(android.print.PrinterId)
    {
        com.android.server.print.RemotePrintSpooler r0;
        com.android.server.print.RemotePrintSpooler$GetCustomPrinterIconCaller $r1;
        android.print.IPrintSpooler $r2;
        java.lang.Object $r3, $r8, $r10, r13, r15, r19, r21;
        java.lang.Throwable $r4, $r5, $r6, $r7, $r9, $r11;
        android.print.PrinterId r12;
        android.graphics.drawable.Icon r14;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        r12 := @parameter0: android.print.PrinterId;

        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfCalledOnMainThread()>();

        r13 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r13;

     label01:
        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfDestroyedLocked()>();

        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 0;

        exitmonitor r13;

     label02:
        $r1 = r0.<com.android.server.print.RemotePrintSpooler: com.android.server.print.RemotePrintSpooler$GetCustomPrinterIconCaller mGetCustomPrinterIconCaller>;

        $r2 = specialinvoke r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler getRemoteInstanceLazy()>();

        r14 = virtualinvoke $r1.<com.android.server.print.RemotePrintSpooler$GetCustomPrinterIconCaller: android.graphics.drawable.Icon getCustomPrinterIcon(android.print.IPrintSpooler,android.print.PrinterId)>($r2, r12);

     label03:
        r15 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r15;

     label04:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r3 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r3.<java.lang.Object: void notifyAll()>();

        exitmonitor r15;

     label05:
        return r14;

     label06:
        $r5 := @caughtexception;

     label07:
        exitmonitor r15;

     label08:
        throw $r5;

     label09:
        $r9 := @caughtexception;

        goto label18;

     label10:
        $r7 := @caughtexception;

     label11:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintSpooler", "Error getting custom printer icon.", $r7);

     label12:
        r19 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r19;

     label13:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r8 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r8.<java.lang.Object: void notifyAll()>();

        exitmonitor r19;

     label14:
        return null;

     label15:
        $r6 := @caughtexception;

     label16:
        exitmonitor r19;

     label17:
        throw $r6;

     label18:
        r21 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r21;

     label19:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r10 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r10.<java.lang.Object: void notifyAll()>();

        exitmonitor r21;

     label20:
        throw $r9;

     label21:
        $r4 := @caughtexception;

     label22:
        exitmonitor r21;

     label23:
        throw $r4;

     label24:
        $r11 := @caughtexception;

     label25:
        exitmonitor r13;

     label26:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label24;
        catch android.os.RemoteException from label02 to label03 with label10;
        catch java.util.concurrent.TimeoutException from label02 to label03 with label10;
        catch java.lang.InterruptedException from label02 to label03 with label10;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label11 to label12 with label09;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label22 to label23 with label21;
        catch java.lang.Throwable from label25 to label26 with label24;
    }

    public final android.print.PrintJobInfo getPrintJobInfo(android.print.PrintJobId, int)
    {
        com.android.server.print.RemotePrintSpooler r0;
        int i0;
        com.android.server.print.RemotePrintSpooler$GetPrintJobInfoCaller $r1;
        android.print.IPrintSpooler $r2;
        java.lang.Object $r3, $r9, $r11, r13, r15, r19, r21;
        java.lang.Throwable $r4, $r5, $r6, $r7, $r8, $r10;
        android.print.PrintJobId r12;
        android.print.PrintJobInfo r14;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        r12 := @parameter0: android.print.PrintJobId;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfCalledOnMainThread()>();

        r13 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r13;

     label01:
        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfDestroyedLocked()>();

        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 0;

        exitmonitor r13;

     label02:
        $r1 = r0.<com.android.server.print.RemotePrintSpooler: com.android.server.print.RemotePrintSpooler$GetPrintJobInfoCaller mGetPrintJobInfoCaller>;

        $r2 = specialinvoke r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler getRemoteInstanceLazy()>();

        r14 = virtualinvoke $r1.<com.android.server.print.RemotePrintSpooler$GetPrintJobInfoCaller: android.print.PrintJobInfo getPrintJobInfo(android.print.IPrintSpooler,android.print.PrintJobId,int)>($r2, r12, i0);

     label03:
        r15 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r15;

     label04:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r3 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r3.<java.lang.Object: void notifyAll()>();

        exitmonitor r15;

     label05:
        return r14;

     label06:
        $r6 := @caughtexception;

     label07:
        exitmonitor r15;

     label08:
        throw $r6;

     label09:
        $r8 := @caughtexception;

        goto label18;

     label10:
        $r10 := @caughtexception;

     label11:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintSpooler", "Error getting print job info.", $r10);

     label12:
        r19 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r19;

     label13:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r11 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r11.<java.lang.Object: void notifyAll()>();

        exitmonitor r19;

     label14:
        return null;

     label15:
        $r5 := @caughtexception;

     label16:
        exitmonitor r19;

     label17:
        throw $r5;

     label18:
        r21 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r21;

     label19:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r9 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r9.<java.lang.Object: void notifyAll()>();

        exitmonitor r21;

     label20:
        throw $r8;

     label21:
        $r7 := @caughtexception;

     label22:
        exitmonitor r21;

     label23:
        throw $r7;

     label24:
        $r4 := @caughtexception;

     label25:
        exitmonitor r13;

     label26:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label24;
        catch android.os.RemoteException from label02 to label03 with label10;
        catch java.util.concurrent.TimeoutException from label02 to label03 with label10;
        catch java.lang.InterruptedException from label02 to label03 with label10;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label11 to label12 with label09;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label22 to label23 with label21;
        catch java.lang.Throwable from label25 to label26 with label24;
    }

    public final java.util.List getPrintJobInfos(android.content.ComponentName, int, int)
    {
        com.android.server.print.RemotePrintSpooler r0;
        int i0, i1;
        com.android.server.print.RemotePrintSpooler$GetPrintJobInfosCaller $r1;
        android.print.IPrintSpooler $r2;
        java.lang.Object $r3, $r9, $r11, r13, r15, r19, r21;
        java.lang.Throwable $r4, $r5, $r6, $r7, $r8, $r10;
        android.content.ComponentName r12;
        java.util.List r14;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        r12 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfCalledOnMainThread()>();

        r13 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r13;

     label01:
        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfDestroyedLocked()>();

        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 0;

        exitmonitor r13;

     label02:
        $r1 = r0.<com.android.server.print.RemotePrintSpooler: com.android.server.print.RemotePrintSpooler$GetPrintJobInfosCaller mGetPrintJobInfosCaller>;

        $r2 = specialinvoke r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler getRemoteInstanceLazy()>();

        r14 = virtualinvoke $r1.<com.android.server.print.RemotePrintSpooler$GetPrintJobInfosCaller: java.util.List getPrintJobInfos(android.print.IPrintSpooler,android.content.ComponentName,int,int)>($r2, r12, i0, i1);

     label03:
        r15 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r15;

     label04:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r3 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r3.<java.lang.Object: void notifyAll()>();

        exitmonitor r15;

     label05:
        return r14;

     label06:
        $r6 := @caughtexception;

     label07:
        exitmonitor r15;

     label08:
        throw $r6;

     label09:
        $r10 := @caughtexception;

        goto label18;

     label10:
        $r8 := @caughtexception;

     label11:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintSpooler", "Error getting print jobs.", $r8);

     label12:
        r19 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r19;

     label13:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r9 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r9.<java.lang.Object: void notifyAll()>();

        exitmonitor r19;

     label14:
        return null;

     label15:
        $r4 := @caughtexception;

     label16:
        exitmonitor r19;

     label17:
        throw $r4;

     label18:
        r21 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r21;

     label19:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r11 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r11.<java.lang.Object: void notifyAll()>();

        exitmonitor r21;

     label20:
        throw $r10;

     label21:
        $r7 := @caughtexception;

     label22:
        exitmonitor r21;

     label23:
        throw $r7;

     label24:
        $r5 := @caughtexception;

     label25:
        exitmonitor r13;

     label26:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label24;
        catch android.os.RemoteException from label02 to label03 with label10;
        catch java.util.concurrent.TimeoutException from label02 to label03 with label10;
        catch java.lang.InterruptedException from label02 to label03 with label10;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label11 to label12 with label09;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label22 to label23 with label21;
        catch java.lang.Throwable from label25 to label26 with label24;
    }

    public void increasePriority()
    {
        com.android.server.print.RemotePrintSpooler r0;
        java.lang.Object r1, $r2;
        boolean z0, $z1;
        java.lang.Throwable $r3, $r4;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        $z1 = r0.<com.android.server.print.RemotePrintSpooler: boolean mIsLowPriority>;

        if $z1 == 0 goto label14;

        r0.<com.android.server.print.RemotePrintSpooler: boolean mIsLowPriority> = 0;

        r1 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfDestroyedLocked()>();

     label02:
        z0 = r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind>;

     label03:
        if z0 != 0 goto label09;

     label04:
        $r2 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r2.<java.lang.Object: void wait()>();

     label05:
        goto label02;

     label06:
        $r3 := @caughtexception;

     label07:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("RemotePrintSpooler", "Interrupted while waiting for operation to complete");

     label08:
        goto label02;

     label09:
        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void unbindLocked()>();

        exitmonitor r1;

     label10:
        goto label14;

     label11:
        $r4 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r4;

     label14:
        return;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.InterruptedException from label04 to label05 with label06;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public final void onCustomPrinterIconLoaded(android.print.PrinterId, android.graphics.drawable.Icon)
    {
        com.android.server.print.RemotePrintSpooler r0;
        java.lang.Object r1, $r5, $r10, $r12, r16, r20, r22;
        com.android.server.print.RemotePrintSpooler$OnCustomPrinterIconLoadedCaller $r2;
        android.print.IPrintSpooler $r3;
        java.lang.Throwable $r6, $r7, $r8, $r9, $r11, $r13;
        android.print.PrinterId r14;
        android.graphics.drawable.Icon r15;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        r14 := @parameter0: android.print.PrinterId;

        r15 := @parameter1: android.graphics.drawable.Icon;

        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfCalledOnMainThread()>();

        r1 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfDestroyedLocked()>();

        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 0;

        exitmonitor r1;

     label02:
        $r2 = r0.<com.android.server.print.RemotePrintSpooler: com.android.server.print.RemotePrintSpooler$OnCustomPrinterIconLoadedCaller mCustomPrinterIconLoadedCaller>;

        $r3 = specialinvoke r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler getRemoteInstanceLazy()>();

        virtualinvoke $r2.<com.android.server.print.RemotePrintSpooler$OnCustomPrinterIconLoadedCaller: java.lang.Void onCustomPrinterIconLoaded(android.print.IPrintSpooler,android.print.PrinterId,android.graphics.drawable.Icon)>($r3, r14, r15);

     label03:
        r16 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r16;

     label04:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r5 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r5.<java.lang.Object: void notifyAll()>();

        exitmonitor r16;

     label05:
        goto label15;

     label06:
        $r6 := @caughtexception;

     label07:
        exitmonitor r16;

     label08:
        throw $r6;

     label09:
        $r11 := @caughtexception;

        goto label19;

     label10:
        $r9 := @caughtexception;

     label11:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintSpooler", "Error loading new custom printer icon.", $r9);

     label12:
        r20 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r20;

     label13:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r10 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r10.<java.lang.Object: void notifyAll()>();

        exitmonitor r20;

     label14:
        goto label05;

     label15:
        return;

     label16:
        $r13 := @caughtexception;

     label17:
        exitmonitor r20;

     label18:
        throw $r13;

     label19:
        r22 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r22;

     label20:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r12 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r12.<java.lang.Object: void notifyAll()>();

        exitmonitor r22;

     label21:
        throw $r11;

     label22:
        $r8 := @caughtexception;

     label23:
        exitmonitor r22;

     label24:
        throw $r8;

     label25:
        $r7 := @caughtexception;

     label26:
        exitmonitor r1;

     label27:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label25;
        catch android.os.RemoteException from label02 to label03 with label10;
        catch java.util.concurrent.TimeoutException from label02 to label03 with label10;
        catch java.lang.InterruptedException from label02 to label03 with label10;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label11 to label12 with label09;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label23 to label24 with label22;
        catch java.lang.Throwable from label26 to label27 with label25;
    }

    public final void pruneApprovedPrintServices(java.util.List)
    {
        com.android.server.print.RemotePrintSpooler r0;
        android.print.IPrintSpooler $r1;
        java.lang.Object $r2, $r6, $r10, r12, r13, r17, r19;
        java.lang.Throwable $r3, $r4, $r5, $r7, $r8, $r9;
        java.util.List r11;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        r11 := @parameter0: java.util.List;

        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfCalledOnMainThread()>();

        r12 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r12;

     label01:
        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfDestroyedLocked()>();

        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 0;

        exitmonitor r12;

     label02:
        $r1 = specialinvoke r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler getRemoteInstanceLazy()>();

        interfaceinvoke $r1.<android.print.IPrintSpooler: void pruneApprovedPrintServices(java.util.List)>(r11);

     label03:
        r13 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r13;

     label04:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r2 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r2.<java.lang.Object: void notifyAll()>();

        exitmonitor r13;

     label05:
        goto label15;

     label06:
        $r4 := @caughtexception;

     label07:
        exitmonitor r13;

     label08:
        throw $r4;

     label09:
        $r5 := @caughtexception;

        goto label19;

     label10:
        $r9 := @caughtexception;

     label11:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintSpooler", "Error pruning approved print services.", $r9);

     label12:
        r17 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r17;

     label13:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r10 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r10.<java.lang.Object: void notifyAll()>();

        exitmonitor r17;

     label14:
        goto label05;

     label15:
        return;

     label16:
        $r7 := @caughtexception;

     label17:
        exitmonitor r17;

     label18:
        throw $r7;

     label19:
        r19 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r19;

     label20:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r6 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r6.<java.lang.Object: void notifyAll()>();

        exitmonitor r19;

     label21:
        throw $r5;

     label22:
        $r8 := @caughtexception;

     label23:
        exitmonitor r19;

     label24:
        throw $r8;

     label25:
        $r3 := @caughtexception;

     label26:
        exitmonitor r12;

     label27:
        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label25;
        catch android.os.RemoteException from label02 to label03 with label10;
        catch java.util.concurrent.TimeoutException from label02 to label03 with label10;
        catch java.lang.InterruptedException from label02 to label03 with label10;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label11 to label12 with label09;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label23 to label24 with label22;
        catch java.lang.Throwable from label26 to label27 with label25;
    }

    public final void removeObsoletePrintJobs()
    {
        com.android.server.print.RemotePrintSpooler r0;
        android.print.IPrintSpooler $r1;
        java.lang.Object $r2, $r8, $r10, r11, r12, r16, r18;
        java.lang.Throwable $r3, $r4, $r5, $r6, $r7, $r9;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfCalledOnMainThread()>();

        r11 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r11;

     label01:
        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfDestroyedLocked()>();

        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 0;

        exitmonitor r11;

     label02:
        $r1 = specialinvoke r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler getRemoteInstanceLazy()>();

        interfaceinvoke $r1.<android.print.IPrintSpooler: void removeObsoletePrintJobs()>();

     label03:
        r12 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r12;

     label04:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r2 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r2.<java.lang.Object: void notifyAll()>();

        exitmonitor r12;

     label05:
        goto label15;

     label06:
        $r4 := @caughtexception;

     label07:
        exitmonitor r12;

     label08:
        throw $r4;

     label09:
        $r7 := @caughtexception;

        goto label19;

     label10:
        $r9 := @caughtexception;

     label11:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintSpooler", "Error removing obsolete print jobs .", $r9);

     label12:
        r16 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r16;

     label13:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r10 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r10.<java.lang.Object: void notifyAll()>();

        exitmonitor r16;

     label14:
        goto label05;

     label15:
        return;

     label16:
        $r6 := @caughtexception;

     label17:
        exitmonitor r16;

     label18:
        throw $r6;

     label19:
        r18 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r18;

     label20:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r8 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r8.<java.lang.Object: void notifyAll()>();

        exitmonitor r18;

     label21:
        throw $r7;

     label22:
        $r5 := @caughtexception;

     label23:
        exitmonitor r18;

     label24:
        throw $r5;

     label25:
        $r3 := @caughtexception;

     label26:
        exitmonitor r11;

     label27:
        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label25;
        catch android.os.RemoteException from label02 to label03 with label10;
        catch java.util.concurrent.TimeoutException from label02 to label03 with label10;
        catch java.lang.InterruptedException from label02 to label03 with label10;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label11 to label12 with label09;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label23 to label24 with label22;
        catch java.lang.Throwable from label26 to label27 with label25;
    }

    public final void setPrintJobCancelling(android.print.PrintJobId, boolean)
    {
        com.android.server.print.RemotePrintSpooler r0;
        boolean z0;
        android.print.IPrintSpooler $r1;
        java.lang.Object $r2, $r6, $r10, r12, r13, r17, r19;
        java.lang.Throwable $r3, $r4, $r5, $r7, $r8, $r9;
        android.print.PrintJobId r11;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        r11 := @parameter0: android.print.PrintJobId;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfCalledOnMainThread()>();

        r12 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r12;

     label01:
        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfDestroyedLocked()>();

        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 0;

        exitmonitor r12;

     label02:
        $r1 = specialinvoke r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler getRemoteInstanceLazy()>();

        interfaceinvoke $r1.<android.print.IPrintSpooler: void setPrintJobCancelling(android.print.PrintJobId,boolean)>(r11, z0);

     label03:
        r13 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r13;

     label04:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r2 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r2.<java.lang.Object: void notifyAll()>();

        exitmonitor r13;

     label05:
        goto label15;

     label06:
        $r4 := @caughtexception;

     label07:
        exitmonitor r13;

     label08:
        throw $r4;

     label09:
        $r9 := @caughtexception;

        goto label19;

     label10:
        $r5 := @caughtexception;

     label11:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintSpooler", "Error setting print job cancelling.", $r5);

     label12:
        r17 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r17;

     label13:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r6 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r6.<java.lang.Object: void notifyAll()>();

        exitmonitor r17;

     label14:
        goto label05;

     label15:
        return;

     label16:
        $r8 := @caughtexception;

     label17:
        exitmonitor r17;

     label18:
        throw $r8;

     label19:
        r19 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r19;

     label20:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r10 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r10.<java.lang.Object: void notifyAll()>();

        exitmonitor r19;

     label21:
        throw $r9;

     label22:
        $r3 := @caughtexception;

     label23:
        exitmonitor r19;

     label24:
        throw $r3;

     label25:
        $r7 := @caughtexception;

     label26:
        exitmonitor r12;

     label27:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label25;
        catch android.os.RemoteException from label02 to label03 with label10;
        catch java.util.concurrent.TimeoutException from label02 to label03 with label10;
        catch java.lang.InterruptedException from label02 to label03 with label10;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label11 to label12 with label09;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label23 to label24 with label22;
        catch java.lang.Throwable from label26 to label27 with label25;
    }

    public final boolean setPrintJobState(android.print.PrintJobId, int, java.lang.String)
    {
        com.android.server.print.RemotePrintSpooler r0;
        int i0;
        java.lang.Object r1, $r4, $r8, $r10, r15, r19, r21;
        boolean z0;
        com.android.server.print.RemotePrintSpooler$SetPrintJobStateCaller $r2;
        android.print.IPrintSpooler $r3;
        java.lang.Throwable $r5, $r6, $r7, $r9, $r11, $r12;
        android.print.PrintJobId r13;
        java.lang.String r14;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        r13 := @parameter0: android.print.PrintJobId;

        i0 := @parameter1: int;

        r14 := @parameter2: java.lang.String;

        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfCalledOnMainThread()>();

        r1 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfDestroyedLocked()>();

        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 0;

        exitmonitor r1;

     label02:
        $r2 = r0.<com.android.server.print.RemotePrintSpooler: com.android.server.print.RemotePrintSpooler$SetPrintJobStateCaller mSetPrintJobStatusCaller>;

        $r3 = specialinvoke r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler getRemoteInstanceLazy()>();

        z0 = virtualinvoke $r2.<com.android.server.print.RemotePrintSpooler$SetPrintJobStateCaller: boolean setPrintJobState(android.print.IPrintSpooler,android.print.PrintJobId,int,java.lang.String)>($r3, r13, i0, r14);

     label03:
        r15 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r15;

     label04:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r4 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r4.<java.lang.Object: void notifyAll()>();

        exitmonitor r15;

     label05:
        return z0;

     label06:
        $r6 := @caughtexception;

     label07:
        exitmonitor r15;

     label08:
        throw $r6;

     label09:
        $r7 := @caughtexception;

        goto label18;

     label10:
        $r9 := @caughtexception;

     label11:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintSpooler", "Error setting print job state.", $r9);

     label12:
        r19 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r19;

     label13:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r10 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r10.<java.lang.Object: void notifyAll()>();

        exitmonitor r19;

     label14:
        return 0;

     label15:
        $r5 := @caughtexception;

     label16:
        exitmonitor r19;

     label17:
        throw $r5;

     label18:
        r21 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r21;

     label19:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r8 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r8.<java.lang.Object: void notifyAll()>();

        exitmonitor r21;

     label20:
        throw $r7;

     label21:
        $r12 := @caughtexception;

     label22:
        exitmonitor r21;

     label23:
        throw $r12;

     label24:
        $r11 := @caughtexception;

     label25:
        exitmonitor r1;

     label26:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label24;
        catch android.os.RemoteException from label02 to label03 with label10;
        catch java.util.concurrent.TimeoutException from label02 to label03 with label10;
        catch java.lang.InterruptedException from label02 to label03 with label10;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label11 to label12 with label09;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label22 to label23 with label21;
        catch java.lang.Throwable from label25 to label26 with label24;
    }

    public final boolean setPrintJobTag(android.print.PrintJobId, java.lang.String)
    {
        com.android.server.print.RemotePrintSpooler r0;
        java.lang.Object r1, $r4, $r9, $r12, r15, r19, r21;
        boolean z0;
        com.android.server.print.RemotePrintSpooler$SetPrintJobTagCaller $r2;
        android.print.IPrintSpooler $r3;
        java.lang.Throwable $r5, $r6, $r7, $r8, $r10, $r11;
        android.print.PrintJobId r13;
        java.lang.String r14;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        r13 := @parameter0: android.print.PrintJobId;

        r14 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfCalledOnMainThread()>();

        r1 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfDestroyedLocked()>();

        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 0;

        exitmonitor r1;

     label02:
        $r2 = r0.<com.android.server.print.RemotePrintSpooler: com.android.server.print.RemotePrintSpooler$SetPrintJobTagCaller mSetPrintJobTagCaller>;

        $r3 = specialinvoke r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler getRemoteInstanceLazy()>();

        z0 = virtualinvoke $r2.<com.android.server.print.RemotePrintSpooler$SetPrintJobTagCaller: boolean setPrintJobTag(android.print.IPrintSpooler,android.print.PrintJobId,java.lang.String)>($r3, r13, r14);

     label03:
        r15 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r15;

     label04:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r4 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r4.<java.lang.Object: void notifyAll()>();

        exitmonitor r15;

     label05:
        return z0;

     label06:
        $r10 := @caughtexception;

     label07:
        exitmonitor r15;

     label08:
        throw $r10;

     label09:
        $r8 := @caughtexception;

        goto label18;

     label10:
        $r11 := @caughtexception;

     label11:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintSpooler", "Error setting print job tag.", $r11);

     label12:
        r19 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r19;

     label13:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r12 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r12.<java.lang.Object: void notifyAll()>();

        exitmonitor r19;

     label14:
        return 0;

     label15:
        $r7 := @caughtexception;

     label16:
        exitmonitor r19;

     label17:
        throw $r7;

     label18:
        r21 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r21;

     label19:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r9 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r9.<java.lang.Object: void notifyAll()>();

        exitmonitor r21;

     label20:
        throw $r8;

     label21:
        $r6 := @caughtexception;

     label22:
        exitmonitor r21;

     label23:
        throw $r6;

     label24:
        $r5 := @caughtexception;

     label25:
        exitmonitor r1;

     label26:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label24;
        catch android.os.RemoteException from label02 to label03 with label10;
        catch java.util.concurrent.TimeoutException from label02 to label03 with label10;
        catch java.lang.InterruptedException from label02 to label03 with label10;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label11 to label12 with label09;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label22 to label23 with label21;
        catch java.lang.Throwable from label25 to label26 with label24;
    }

    public final void setProgress(android.print.PrintJobId, float)
    {
        com.android.server.print.RemotePrintSpooler r0;
        float f0;
        android.print.IPrintSpooler $r1;
        java.lang.Object $r2, $r4, $r6, r12, r13, r17, r19;
        java.lang.Throwable $r3, $r5, $r7, $r8, $r9, $r10;
        android.print.PrintJobId r11;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        r11 := @parameter0: android.print.PrintJobId;

        f0 := @parameter1: float;

        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfCalledOnMainThread()>();

        r12 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r12;

     label01:
        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfDestroyedLocked()>();

        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 0;

        exitmonitor r12;

     label02:
        $r1 = specialinvoke r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler getRemoteInstanceLazy()>();

        interfaceinvoke $r1.<android.print.IPrintSpooler: void setProgress(android.print.PrintJobId,float)>(r11, f0);

     label03:
        r13 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r13;

     label04:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r2 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r2.<java.lang.Object: void notifyAll()>();

        exitmonitor r13;

     label05:
        goto label15;

     label06:
        $r9 := @caughtexception;

     label07:
        exitmonitor r13;

     label08:
        throw $r9;

     label09:
        $r5 := @caughtexception;

        goto label19;

     label10:
        $r3 := @caughtexception;

     label11:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintSpooler", "Error setting progress.", $r3);

     label12:
        r17 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r17;

     label13:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r4 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r4.<java.lang.Object: void notifyAll()>();

        exitmonitor r17;

     label14:
        goto label05;

     label15:
        return;

     label16:
        $r7 := @caughtexception;

     label17:
        exitmonitor r17;

     label18:
        throw $r7;

     label19:
        r19 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r19;

     label20:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r6 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r6.<java.lang.Object: void notifyAll()>();

        exitmonitor r19;

     label21:
        throw $r5;

     label22:
        $r8 := @caughtexception;

     label23:
        exitmonitor r19;

     label24:
        throw $r8;

     label25:
        $r10 := @caughtexception;

     label26:
        exitmonitor r12;

     label27:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label25;
        catch android.os.RemoteException from label02 to label03 with label10;
        catch java.util.concurrent.TimeoutException from label02 to label03 with label10;
        catch java.lang.InterruptedException from label02 to label03 with label10;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label11 to label12 with label09;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label23 to label24 with label22;
        catch java.lang.Throwable from label26 to label27 with label25;
    }

    public final void setStatus(android.print.PrintJobId, int, java.lang.CharSequence)
    {
        com.android.server.print.RemotePrintSpooler r0;
        int i0;
        java.lang.Object r1, $r3, $r7, $r9, r14, r18, r20;
        android.print.IPrintSpooler $r2;
        java.lang.Throwable $r4, $r5, $r6, $r8, $r10, $r11;
        android.print.PrintJobId r12;
        java.lang.CharSequence r13;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        r12 := @parameter0: android.print.PrintJobId;

        i0 := @parameter1: int;

        r13 := @parameter2: java.lang.CharSequence;

        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfCalledOnMainThread()>();

        r1 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfDestroyedLocked()>();

        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 0;

        exitmonitor r1;

     label02:
        $r2 = specialinvoke r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler getRemoteInstanceLazy()>();

        interfaceinvoke $r2.<android.print.IPrintSpooler: void setStatusRes(android.print.PrintJobId,int,java.lang.CharSequence)>(r12, i0, r13);

     label03:
        r14 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r14;

     label04:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r3 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r3.<java.lang.Object: void notifyAll()>();

        exitmonitor r14;

     label05:
        goto label15;

     label06:
        $r10 := @caughtexception;

     label07:
        exitmonitor r14;

     label08:
        throw $r10;

     label09:
        $r6 := @caughtexception;

        goto label19;

     label10:
        $r8 := @caughtexception;

     label11:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintSpooler", "Error setting status.", $r8);

     label12:
        r18 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r18;

     label13:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r9 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r9.<java.lang.Object: void notifyAll()>();

        exitmonitor r18;

     label14:
        goto label05;

     label15:
        return;

     label16:
        $r4 := @caughtexception;

     label17:
        exitmonitor r18;

     label18:
        throw $r4;

     label19:
        r20 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r20;

     label20:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r7 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r7.<java.lang.Object: void notifyAll()>();

        exitmonitor r20;

     label21:
        throw $r6;

     label22:
        $r5 := @caughtexception;

     label23:
        exitmonitor r20;

     label24:
        throw $r5;

     label25:
        $r11 := @caughtexception;

     label26:
        exitmonitor r1;

     label27:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label25;
        catch android.os.RemoteException from label02 to label03 with label10;
        catch java.util.concurrent.TimeoutException from label02 to label03 with label10;
        catch java.lang.InterruptedException from label02 to label03 with label10;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label11 to label12 with label09;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label23 to label24 with label22;
        catch java.lang.Throwable from label26 to label27 with label25;
    }

    public final void setStatus(android.print.PrintJobId, java.lang.CharSequence)
    {
        com.android.server.print.RemotePrintSpooler r0;
        java.lang.Object r1, $r3, $r5, $r10, r14, r18, r20;
        android.print.IPrintSpooler $r2;
        java.lang.Throwable $r4, $r6, $r7, $r8, $r9, $r11;
        android.print.PrintJobId r12;
        java.lang.CharSequence r13;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        r12 := @parameter0: android.print.PrintJobId;

        r13 := @parameter1: java.lang.CharSequence;

        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfCalledOnMainThread()>();

        r1 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfDestroyedLocked()>();

        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 0;

        exitmonitor r1;

     label02:
        $r2 = specialinvoke r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler getRemoteInstanceLazy()>();

        interfaceinvoke $r2.<android.print.IPrintSpooler: void setStatus(android.print.PrintJobId,java.lang.CharSequence)>(r12, r13);

     label03:
        r14 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r14;

     label04:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r3 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r3.<java.lang.Object: void notifyAll()>();

        exitmonitor r14;

     label05:
        goto label15;

     label06:
        $r8 := @caughtexception;

     label07:
        exitmonitor r14;

     label08:
        throw $r8;

     label09:
        $r4 := @caughtexception;

        goto label19;

     label10:
        $r9 := @caughtexception;

     label11:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintSpooler", "Error setting status.", $r9);

     label12:
        r18 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r18;

     label13:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r10 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r10.<java.lang.Object: void notifyAll()>();

        exitmonitor r18;

     label14:
        goto label05;

     label15:
        return;

     label16:
        $r7 := @caughtexception;

     label17:
        exitmonitor r18;

     label18:
        throw $r7;

     label19:
        r20 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r20;

     label20:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r5 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r5.<java.lang.Object: void notifyAll()>();

        exitmonitor r20;

     label21:
        throw $r4;

     label22:
        $r6 := @caughtexception;

     label23:
        exitmonitor r20;

     label24:
        throw $r6;

     label25:
        $r11 := @caughtexception;

     label26:
        exitmonitor r1;

     label27:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label25;
        catch android.os.RemoteException from label02 to label03 with label10;
        catch java.util.concurrent.TimeoutException from label02 to label03 with label10;
        catch java.lang.InterruptedException from label02 to label03 with label10;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label11 to label12 with label09;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label23 to label24 with label22;
        catch java.lang.Throwable from label26 to label27 with label25;
    }

    public final void writePrintJobData(android.os.ParcelFileDescriptor, android.print.PrintJobId)
    {
        com.android.server.print.RemotePrintSpooler r0;
        java.lang.Object r1, $r3, $r7, $r9, r14, r18, r20;
        android.print.IPrintSpooler $r2;
        java.lang.Throwable $r4, $r5, $r6, $r8, $r10, $r11;
        android.os.ParcelFileDescriptor r12;
        android.print.PrintJobId r13;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        r12 := @parameter0: android.os.ParcelFileDescriptor;

        r13 := @parameter1: android.print.PrintJobId;

        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfCalledOnMainThread()>();

        r1 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfDestroyedLocked()>();

        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 0;

        exitmonitor r1;

     label02:
        $r2 = specialinvoke r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler getRemoteInstanceLazy()>();

        interfaceinvoke $r2.<android.print.IPrintSpooler: void writePrintJobData(android.os.ParcelFileDescriptor,android.print.PrintJobId)>(r12, r13);

     label03:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r12);

        r14 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r14;

     label04:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r3 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r3.<java.lang.Object: void notifyAll()>();

        exitmonitor r14;

     label05:
        goto label15;

     label06:
        $r10 := @caughtexception;

     label07:
        exitmonitor r14;

     label08:
        throw $r10;

     label09:
        $r6 := @caughtexception;

        goto label19;

     label10:
        $r8 := @caughtexception;

     label11:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintSpooler", "Error writing print job data.", $r8);

     label12:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r12);

        r18 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r18;

     label13:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r9 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r9.<java.lang.Object: void notifyAll()>();

        exitmonitor r18;

     label14:
        goto label05;

     label15:
        return;

     label16:
        $r11 := @caughtexception;

     label17:
        exitmonitor r18;

     label18:
        throw $r11;

     label19:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r12);

        r20 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r20;

     label20:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r7 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r7.<java.lang.Object: void notifyAll()>();

        exitmonitor r20;

     label21:
        throw $r6;

     label22:
        $r5 := @caughtexception;

     label23:
        exitmonitor r20;

     label24:
        throw $r5;

     label25:
        $r4 := @caughtexception;

     label26:
        exitmonitor r1;

     label27:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label25;
        catch android.os.RemoteException from label02 to label03 with label10;
        catch java.util.concurrent.TimeoutException from label02 to label03 with label10;
        catch java.lang.InterruptedException from label02 to label03 with label10;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label11 to label12 with label09;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label23 to label24 with label22;
        catch java.lang.Throwable from label26 to label27 with label25;
    }
}
