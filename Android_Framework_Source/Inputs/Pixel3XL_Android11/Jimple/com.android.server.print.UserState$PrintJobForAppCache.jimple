final class com.android.server.print.UserState$PrintJobForAppCache extends java.lang.Object
{
    private final android.util.SparseArray mPrintJobsForRunningApp;
    final com.android.server.print.UserState this$0;

    private void <init>(com.android.server.print.UserState)
    {
        com.android.server.print.UserState$PrintJobForAppCache r0;
        com.android.server.print.UserState r1;
        android.util.SparseArray $r2;

        r0 := @this: com.android.server.print.UserState$PrintJobForAppCache;

        r1 := @parameter0: com.android.server.print.UserState;

        r0.<com.android.server.print.UserState$PrintJobForAppCache: com.android.server.print.UserState this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.print.UserState$PrintJobForAppCache: android.util.SparseArray mPrintJobsForRunningApp> = $r2;

        return;
    }

    void <init>(com.android.server.print.UserState, com.android.server.print.UserState$1)
    {
        com.android.server.print.UserState$PrintJobForAppCache r0;
        com.android.server.print.UserState r1;
        com.android.server.print.UserState$1 r2;

        r0 := @this: com.android.server.print.UserState$PrintJobForAppCache;

        r1 := @parameter0: com.android.server.print.UserState;

        r2 := @parameter1: com.android.server.print.UserState$1;

        specialinvoke r0.<com.android.server.print.UserState$PrintJobForAppCache: void <init>(com.android.server.print.UserState)>(r1);

        return;
    }

    static android.util.SparseArray access$1000(com.android.server.print.UserState$PrintJobForAppCache)
    {
        com.android.server.print.UserState$PrintJobForAppCache r0;
        android.util.SparseArray $r1;

        r0 := @parameter0: com.android.server.print.UserState$PrintJobForAppCache;

        $r1 = r0.<com.android.server.print.UserState$PrintJobForAppCache: android.util.SparseArray mPrintJobsForRunningApp>;

        return $r1;
    }

    public void dumpLocked(com.android.internal.util.dump.DualDumpOutputStream)
    {
        com.android.server.print.UserState$PrintJobForAppCache r0;
        com.android.internal.util.dump.DualDumpOutputStream r1;
        int i0, i1, i2, i4, i5;
        java.util.List r2;
        long l3;
        android.util.SparseArray $r3, $r4, $r5;
        java.lang.Object $r6, $r9;
        com.android.server.print.UserState $r7;
        android.content.Context $r8;
        android.print.PrintJobInfo $r10;

        r0 := @this: com.android.server.print.UserState$PrintJobForAppCache;

        r1 := @parameter0: com.android.internal.util.dump.DualDumpOutputStream;

        $r3 = r0.<com.android.server.print.UserState$PrintJobForAppCache: android.util.SparseArray mPrintJobsForRunningApp>;

        i0 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        i4 = 0;

     label1:
        if i4 >= i0 goto label4;

        $r4 = r0.<com.android.server.print.UserState$PrintJobForAppCache: android.util.SparseArray mPrintJobsForRunningApp>;

        i1 = virtualinvoke $r4.<android.util.SparseArray: int keyAt(int)>(i4);

        $r5 = r0.<com.android.server.print.UserState$PrintJobForAppCache: android.util.SparseArray mPrintJobsForRunningApp>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        r2 = (java.util.List) $r6;

        i2 = interfaceinvoke r2.<java.util.List: int size()>();

        i5 = 0;

     label2:
        if i5 >= i2 goto label3;

        l3 = virtualinvoke r1.<com.android.internal.util.dump.DualDumpOutputStream: long start(java.lang.String,long)>("cached_print_jobs", 2246267895813L);

        virtualinvoke r1.<com.android.internal.util.dump.DualDumpOutputStream: void write(java.lang.String,long,int)>("app_id", 1120986464257L, i1);

        $r7 = r0.<com.android.server.print.UserState$PrintJobForAppCache: com.android.server.print.UserState this$0>;

        $r8 = staticinvoke <com.android.server.print.UserState: android.content.Context access$900(com.android.server.print.UserState)>($r7);

        $r9 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i5);

        $r10 = (android.print.PrintJobInfo) $r9;

        staticinvoke <com.android.internal.print.DumpUtils: void writePrintJobInfo(android.content.Context,com.android.internal.util.dump.DualDumpOutputStream,java.lang.String,long,android.print.PrintJobInfo)>($r8, r1, "print_job", 1146756268034L, $r10);

        virtualinvoke r1.<com.android.internal.util.dump.DualDumpOutputStream: void end(long)>(l3);

        i5 = i5 + 1;

        goto label2;

     label3:
        i4 = i4 + 1;

        goto label1;

     label4:
        return;
    }

    public android.print.PrintJobInfo getPrintJob(android.print.PrintJobId, int)
    {
        com.android.server.print.UserState$PrintJobForAppCache r0;
        java.lang.Object r1, $r6, $r7;
        java.util.List r2;
        int i0, i1, i2;
        android.print.PrintJobInfo r3;
        com.android.server.print.UserState $r4;
        android.util.SparseArray $r5;
        android.print.PrintJobId $r8, r10;
        boolean $z0;
        java.lang.Throwable $r9;

        r0 := @this: com.android.server.print.UserState$PrintJobForAppCache;

        r10 := @parameter0: android.print.PrintJobId;

        i1 := @parameter1: int;

        $r4 = r0.<com.android.server.print.UserState$PrintJobForAppCache: com.android.server.print.UserState this$0>;

        r1 = staticinvoke <com.android.server.print.UserState: java.lang.Object access$200(com.android.server.print.UserState)>($r4);

        entermonitor r1;

     label01:
        $r5 = r0.<com.android.server.print.UserState$PrintJobForAppCache: android.util.SparseArray mPrintJobsForRunningApp>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r2 = (java.util.List) $r6;

     label02:
        if r2 != null goto label05;

     label03:
        exitmonitor r1;

     label04:
        return null;

     label05:
        i0 = interfaceinvoke r2.<java.util.List: int size()>();

     label06:
        i2 = 0;

     label07:
        if i2 >= i0 goto label11;

     label08:
        $r7 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i2);

        r3 = (android.print.PrintJobInfo) $r7;

        $r8 = virtualinvoke r3.<android.print.PrintJobInfo: android.print.PrintJobId getId()>();

        $z0 = virtualinvoke $r8.<android.print.PrintJobId: boolean equals(java.lang.Object)>(r10);

        if $z0 == 0 goto label10;

        exitmonitor r1;

     label09:
        return r3;

     label10:
        i2 = i2 + 1;

        goto label07;

     label11:
        exitmonitor r1;

     label12:
        return null;

     label13:
        $r9 := @caughtexception;

     label14:
        exitmonitor r1;

     label15:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public java.util.List getPrintJobs(int)
    {
        com.android.server.print.UserState$PrintJobForAppCache r0;
        java.lang.Object r1, $r4, $r7;
        int i0, i1, i2;
        com.android.server.print.UserState $r2;
        android.util.SparseArray $r3, $r5, $r6;
        java.lang.Throwable $r8;
        java.util.ArrayList r9, r11;
        java.util.List r10, r12, r13;

        r0 := @this: com.android.server.print.UserState$PrintJobForAppCache;

        i1 := @parameter0: int;

        $r2 = r0.<com.android.server.print.UserState$PrintJobForAppCache: com.android.server.print.UserState this$0>;

        r1 = staticinvoke <com.android.server.print.UserState: java.lang.Object access$200(com.android.server.print.UserState)>($r2);

        entermonitor r1;

        r9 = null;

        if i1 != -2 goto label10;

     label01:
        $r5 = r0.<com.android.server.print.UserState$PrintJobForAppCache: android.util.SparseArray mPrintJobsForRunningApp>;

        i0 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

     label02:
        i2 = 0;

        r9 = null;

     label03:
        if i2 >= i0 goto label09;

     label04:
        $r6 = r0.<com.android.server.print.UserState$PrintJobForAppCache: android.util.SparseArray mPrintJobsForRunningApp>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        r10 = (java.util.List) $r7;

     label05:
        r11 = r9;

        if r9 != null goto label07;

     label06:
        r11 = new java.util.ArrayList;

        specialinvoke r11.<java.util.ArrayList: void <init>()>();

     label07:
        interfaceinvoke r11.<java.util.List: boolean addAll(java.util.Collection)>(r10);

     label08:
        i2 = i2 + 1;

        r9 = r11;

        goto label03;

     label09:
        goto label14;

     label10:
        $r3 = r0.<com.android.server.print.UserState$PrintJobForAppCache: android.util.SparseArray mPrintJobsForRunningApp>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r12 = (java.util.List) $r4;

     label11:
        if r12 == null goto label14;

     label12:
        r9 = new java.util.ArrayList;

        specialinvoke r9.<java.util.ArrayList: void <init>()>();

     label13:
        interfaceinvoke r9.<java.util.List: boolean addAll(java.util.Collection)>(r12);

     label14:
        if r9 == null goto label17;

     label15:
        exitmonitor r1;

     label16:
        return r9;

     label17:
        r13 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        exitmonitor r1;

     label18:
        return r13;

     label19:
        $r8 := @caughtexception;

     label20:
        exitmonitor r1;

     label21:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label04 to label05 with label19;
        catch java.lang.Throwable from label06 to label07 with label19;
        catch java.lang.Throwable from label07 to label08 with label19;
        catch java.lang.Throwable from label10 to label11 with label19;
        catch java.lang.Throwable from label12 to label13 with label19;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.lang.Throwable from label15 to label16 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
    }

    public boolean onPrintJobCreated(android.os.IBinder, int, android.print.PrintJobInfo)
    {
        com.android.server.print.UserState$PrintJobForAppCache r0;
        int i0;
        android.print.PrintJobInfo r1;
        java.lang.Object r2, $r5, r12;
        com.android.server.print.UserState $r3;
        android.util.SparseArray $r4, $r6;
        android.os.RemoteException $r7;
        java.lang.Throwable $r8;
        android.os.IBinder r9;
        java.util.List r11, r17;
        com.android.server.print.UserState$PrintJobForAppCache$1 r15;
        java.util.ArrayList r16;

        r0 := @this: com.android.server.print.UserState$PrintJobForAppCache;

        r9 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r1 := @parameter2: android.print.PrintJobInfo;

     label01:
        r15 = new com.android.server.print.UserState$PrintJobForAppCache$1;

        specialinvoke r15.<com.android.server.print.UserState$PrintJobForAppCache$1: void <init>(com.android.server.print.UserState$PrintJobForAppCache,android.os.IBinder,int)>(r0, r9, i0);

        interfaceinvoke r9.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r15, 0);

     label02:
        $r3 = r0.<com.android.server.print.UserState$PrintJobForAppCache: com.android.server.print.UserState this$0>;

        r2 = staticinvoke <com.android.server.print.UserState: java.lang.Object access$200(com.android.server.print.UserState)>($r3);

        entermonitor r2;

     label03:
        $r4 = r0.<com.android.server.print.UserState$PrintJobForAppCache: android.util.SparseArray mPrintJobsForRunningApp>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r11 = (java.util.List) $r5;

     label04:
        r12 = r11;

        if r11 != null goto label07;

     label05:
        r16 = new java.util.ArrayList;

        r12 = r16;

        specialinvoke r16.<java.util.ArrayList: void <init>()>();

     label06:
        $r6 = r0.<com.android.server.print.UserState$PrintJobForAppCache: android.util.SparseArray mPrintJobsForRunningApp>;

        virtualinvoke $r6.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r16);

     label07:
        r17 = (java.util.List) r12;

        interfaceinvoke r17.<java.util.List: boolean add(java.lang.Object)>(r1);

     label08:
        exitmonitor r2;

     label09:
        return 1;

     label10:
        $r8 := @caughtexception;

     label11:
        exitmonitor r2;

     label12:
        throw $r8;

     label13:
        $r7 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void onPrintJobStateChanged(android.print.PrintJobInfo)
    {
        com.android.server.print.UserState$PrintJobForAppCache r0;
        java.lang.Object r1, $r5, $r6;
        java.util.List r2;
        int i0, $i1, i2;
        com.android.server.print.UserState $r3;
        android.util.SparseArray $r4;
        android.print.PrintJobInfo $r7, r12;
        android.print.PrintJobId $r8, $r9;
        boolean $z0;
        java.lang.Throwable $r11;

        r0 := @this: com.android.server.print.UserState$PrintJobForAppCache;

        r12 := @parameter0: android.print.PrintJobInfo;

        $r3 = r0.<com.android.server.print.UserState$PrintJobForAppCache: com.android.server.print.UserState this$0>;

        r1 = staticinvoke <com.android.server.print.UserState: java.lang.Object access$200(com.android.server.print.UserState)>($r3);

        entermonitor r1;

     label01:
        $r4 = r0.<com.android.server.print.UserState$PrintJobForAppCache: android.util.SparseArray mPrintJobsForRunningApp>;

        $i1 = virtualinvoke r12.<android.print.PrintJobInfo: int getAppId()>();

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>($i1);

        r2 = (java.util.List) $r5;

     label02:
        if r2 != null goto label05;

     label03:
        exitmonitor r1;

     label04:
        return;

     label05:
        i0 = interfaceinvoke r2.<java.util.List: int size()>();

     label06:
        i2 = 0;

     label07:
        if i2 >= i0 goto label10;

     label08:
        $r6 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i2);

        $r7 = (android.print.PrintJobInfo) $r6;

        $r8 = virtualinvoke $r7.<android.print.PrintJobInfo: android.print.PrintJobId getId()>();

        $r9 = virtualinvoke r12.<android.print.PrintJobInfo: android.print.PrintJobId getId()>();

        $z0 = virtualinvoke $r8.<android.print.PrintJobId: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label09;

        interfaceinvoke r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i2, r12);

     label09:
        i2 = i2 + 1;

        goto label07;

     label10:
        exitmonitor r1;

     label11:
        return;

     label12:
        $r11 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }
}
