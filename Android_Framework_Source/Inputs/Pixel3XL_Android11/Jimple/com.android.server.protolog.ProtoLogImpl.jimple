public class com.android.server.protolog.ProtoLogImpl extends java.lang.Object
{
    private static final int BUFFER_CAPACITY;
    private static final java.lang.String LOG_FILENAME;
    private static final java.util.TreeMap LOG_GROUPS;
    private static final long MAGIC_NUMBER_VALUE;
    static final java.lang.String PROTOLOG_VERSION;
    private static final java.lang.String TAG;
    private static final java.lang.String VIEWER_CONFIG_FILENAME;
    static java.lang.Runnable sCacheUpdater;
    private static com.android.server.protolog.ProtoLogImpl sServiceInstance;
    private final com.android.internal.util.TraceBuffer mBuffer;
    private final java.io.File mLogFile;
    private boolean mProtoLogEnabled;
    private final java.lang.Object mProtoLogEnabledLock;
    private boolean mProtoLogEnabledLockFree;
    private final com.android.server.protolog.ProtoLogViewerConfigReader mViewerConfig;

    static void <clinit>()
    {
        com.android.server.protolog.'-$$Lambda$ProtoLogImpl$W1-9aFv3AkmuxF_FKhP3IYl2IMA' $r1;
        com.android.server.wm.ProtoLogGroup[] $r2;
        java.util.TreeMap r3;
        java.lang.Runnable r4;

        <com.android.server.protolog.ProtoLogImpl: java.lang.String VIEWER_CONFIG_FILENAME> = "/system/etc/protolog.conf.json.gz";

        <com.android.server.protolog.ProtoLogImpl: java.lang.String TAG> = "ProtoLog";

        <com.android.server.protolog.ProtoLogImpl: java.lang.String PROTOLOG_VERSION> = "1.0.0";

        <com.android.server.protolog.ProtoLogImpl: long MAGIC_NUMBER_VALUE> = 5138409603453637200L;

        <com.android.server.protolog.ProtoLogImpl: java.lang.String LOG_FILENAME> = "/data/misc/wmtrace/wm_log.pb";

        <com.android.server.protolog.ProtoLogImpl: int BUFFER_CAPACITY> = 1048576;

        r3 = new java.util.TreeMap;

        specialinvoke r3.<java.util.TreeMap: void <init>()>();

        <com.android.server.protolog.ProtoLogImpl: java.util.TreeMap LOG_GROUPS> = r3;

        $r1 = <com.android.server.protolog._$$Lambda$ProtoLogImpl$W1_9aFv3AkmuxF_FKhP3IYl2IMA: com.android.server.protolog.'-$$Lambda$ProtoLogImpl$W1-9aFv3AkmuxF_FKhP3IYl2IMA' INSTANCE>;

        r4 = (java.lang.Runnable) $r1;

        <com.android.server.protolog.ProtoLogImpl: java.lang.Runnable sCacheUpdater> = r4;

        $r2 = staticinvoke <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup[] values()>();

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void addLogGroupEnum(com.android.server.protolog.common.IProtoLogGroup[])>($r2);

        <com.android.server.protolog.ProtoLogImpl: com.android.server.protolog.ProtoLogImpl sServiceInstance> = null;

        return;
    }

    void <init>(java.io.File, int, com.android.server.protolog.ProtoLogViewerConfigReader)
    {
        com.android.server.protolog.ProtoLogImpl r0;
        java.io.File r1;
        int i0;
        com.android.server.protolog.ProtoLogViewerConfigReader r2;
        java.lang.Object $r3;
        com.android.internal.util.TraceBuffer $r4;

        r0 := @this: com.android.server.protolog.ProtoLogImpl;

        r1 := @parameter0: java.io.File;

        i0 := @parameter1: int;

        r2 := @parameter2: com.android.server.protolog.ProtoLogViewerConfigReader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<com.android.server.protolog.ProtoLogImpl: java.lang.Object mProtoLogEnabledLock> = $r3;

        r0.<com.android.server.protolog.ProtoLogImpl: java.io.File mLogFile> = r1;

        $r4 = new com.android.internal.util.TraceBuffer;

        specialinvoke $r4.<com.android.internal.util.TraceBuffer: void <init>(int)>(i0);

        r0.<com.android.server.protolog.ProtoLogImpl: com.android.internal.util.TraceBuffer mBuffer> = $r4;

        r0.<com.android.server.protolog.ProtoLogImpl: com.android.server.protolog.ProtoLogViewerConfigReader mViewerConfig> = r2;

        return;
    }

    private static void addLogGroupEnum(com.android.server.protolog.common.IProtoLogGroup[])
    {
        com.android.server.protolog.common.IProtoLogGroup[] r0;
        int i0, i1;
        com.android.server.protolog.common.IProtoLogGroup r1;
        java.util.TreeMap $r2;
        java.lang.String $r3;

        r0 := @parameter0: com.android.server.protolog.common.IProtoLogGroup[];

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r1 = r0[i1];

        $r2 = <com.android.server.protolog.ProtoLogImpl: java.util.TreeMap LOG_GROUPS>;

        $r3 = interfaceinvoke r1.<com.android.server.protolog.common.IProtoLogGroup: java.lang.String name()>();

        virtualinvoke $r2.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public static transient void d(com.android.server.protolog.common.IProtoLogGroup, int, int, java.lang.String, java.lang.Object[])
    {
        com.android.server.protolog.common.IProtoLogGroup r0;
        int i0, i1;
        java.lang.String r1;
        java.lang.Object[] r2;
        com.android.server.protolog.ProtoLogImpl $r3;
        com.android.server.protolog.ProtoLogImpl$LogLevel $r4;

        r0 := @parameter0: com.android.server.protolog.common.IProtoLogGroup;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: java.lang.Object[];

        $r3 = staticinvoke <com.android.server.protolog.ProtoLogImpl: com.android.server.protolog.ProtoLogImpl getSingleInstance()>();

        $r4 = <com.android.server.protolog.ProtoLogImpl$LogLevel: com.android.server.protolog.ProtoLogImpl$LogLevel DEBUG>;

        virtualinvoke $r3.<com.android.server.protolog.ProtoLogImpl: void log(com.android.server.protolog.ProtoLogImpl$LogLevel,com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r4, r0, i0, i1, r1, r2);

        return;
    }

    public static transient void e(com.android.server.protolog.common.IProtoLogGroup, int, int, java.lang.String, java.lang.Object[])
    {
        com.android.server.protolog.common.IProtoLogGroup r0;
        int i0, i1;
        java.lang.String r1;
        java.lang.Object[] r2;
        com.android.server.protolog.ProtoLogImpl $r3;
        com.android.server.protolog.ProtoLogImpl$LogLevel $r4;

        r0 := @parameter0: com.android.server.protolog.common.IProtoLogGroup;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: java.lang.Object[];

        $r3 = staticinvoke <com.android.server.protolog.ProtoLogImpl: com.android.server.protolog.ProtoLogImpl getSingleInstance()>();

        $r4 = <com.android.server.protolog.ProtoLogImpl$LogLevel: com.android.server.protolog.ProtoLogImpl$LogLevel ERROR>;

        virtualinvoke $r3.<com.android.server.protolog.ProtoLogImpl: void log(com.android.server.protolog.ProtoLogImpl$LogLevel,com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r4, r0, i0, i1, r1, r2);

        return;
    }

    public static com.android.server.protolog.ProtoLogImpl getSingleInstance()
    {
        java.io.File r0;
        com.android.server.protolog.ProtoLogViewerConfigReader r1;
        com.android.server.protolog.ProtoLogImpl $r2, r4, r5;
        java.lang.Throwable $r3;

        entermonitor class "Lcom/android/server/protolog/ProtoLogImpl;";

     label1:
        $r2 = <com.android.server.protolog.ProtoLogImpl: com.android.server.protolog.ProtoLogImpl sServiceInstance>;

        if $r2 != null goto label2;

        r4 = new com.android.server.protolog.ProtoLogImpl;

        r0 = new java.io.File;

        specialinvoke r0.<java.io.File: void <init>(java.lang.String)>("/data/misc/wmtrace/wm_log.pb");

        r1 = new com.android.server.protolog.ProtoLogViewerConfigReader;

        specialinvoke r1.<com.android.server.protolog.ProtoLogViewerConfigReader: void <init>()>();

        specialinvoke r4.<com.android.server.protolog.ProtoLogImpl: void <init>(java.io.File,int,com.android.server.protolog.ProtoLogViewerConfigReader)>(r0, 1048576, r1);

        <com.android.server.protolog.ProtoLogImpl: com.android.server.protolog.ProtoLogImpl sServiceInstance> = r4;

     label2:
        r5 = <com.android.server.protolog.ProtoLogImpl: com.android.server.protolog.ProtoLogImpl sServiceInstance>;

     label3:
        exitmonitor class "Lcom/android/server/protolog/ProtoLogImpl;";

        return r5;

     label4:
        $r3 := @caughtexception;

        exitmonitor class "Lcom/android/server/protolog/ProtoLogImpl;";

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public static transient void i(com.android.server.protolog.common.IProtoLogGroup, int, int, java.lang.String, java.lang.Object[])
    {
        com.android.server.protolog.common.IProtoLogGroup r0;
        int i0, i1;
        java.lang.String r1;
        java.lang.Object[] r2;
        com.android.server.protolog.ProtoLogImpl $r3;
        com.android.server.protolog.ProtoLogImpl$LogLevel $r4;

        r0 := @parameter0: com.android.server.protolog.common.IProtoLogGroup;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: java.lang.Object[];

        $r3 = staticinvoke <com.android.server.protolog.ProtoLogImpl: com.android.server.protolog.ProtoLogImpl getSingleInstance()>();

        $r4 = <com.android.server.protolog.ProtoLogImpl$LogLevel: com.android.server.protolog.ProtoLogImpl$LogLevel INFO>;

        virtualinvoke $r3.<com.android.server.protolog.ProtoLogImpl: void log(com.android.server.protolog.ProtoLogImpl$LogLevel,com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r4, r0, i0, i1, r1, r2);

        return;
    }

    public static boolean isEnabled(com.android.server.protolog.common.IProtoLogGroup)
    {
        com.android.server.protolog.common.IProtoLogGroup r0;
        boolean $z0, $z1, $z2, z3;
        com.android.server.protolog.ProtoLogImpl $r1;

        r0 := @parameter0: com.android.server.protolog.common.IProtoLogGroup;

        $z0 = interfaceinvoke r0.<com.android.server.protolog.common.IProtoLogGroup: boolean isLogToLogcat()>();

        if $z0 != 0 goto label2;

        $z1 = interfaceinvoke r0.<com.android.server.protolog.common.IProtoLogGroup: boolean isLogToProto()>();

        if $z1 == 0 goto label1;

        $r1 = staticinvoke <com.android.server.protolog.ProtoLogImpl: com.android.server.protolog.ProtoLogImpl getSingleInstance()>();

        $z2 = virtualinvoke $r1.<com.android.server.protolog.ProtoLogImpl: boolean isProtoEnabled()>();

        if $z2 == 0 goto label1;

        goto label2;

     label1:
        z3 = 0;

        goto label3;

     label2:
        z3 = 1;

     label3:
        return z3;
    }

    static boolean lambda$getStatus$3(com.android.server.protolog.common.IProtoLogGroup)
    {
        com.android.server.protolog.common.IProtoLogGroup r0;
        boolean $z0, $z1, z2;

        r0 := @parameter0: com.android.server.protolog.common.IProtoLogGroup;

        $z0 = interfaceinvoke r0.<com.android.server.protolog.common.IProtoLogGroup: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        $z1 = interfaceinvoke r0.<com.android.server.protolog.common.IProtoLogGroup: boolean isLogToProto()>();

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    static boolean lambda$getStatus$4(com.android.server.protolog.common.IProtoLogGroup)
    {
        com.android.server.protolog.common.IProtoLogGroup r0;
        boolean $z0, $z1, z2;

        r0 := @parameter0: com.android.server.protolog.common.IProtoLogGroup;

        $z0 = interfaceinvoke r0.<com.android.server.protolog.common.IProtoLogGroup: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        $z1 = interfaceinvoke r0.<com.android.server.protolog.common.IProtoLogGroup: boolean isLogToLogcat()>();

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    static long lambda$logToProto$1(java.lang.Long)
    {
        java.lang.Long r0;
        long $l0;

        r0 := @parameter0: java.lang.Long;

        $l0 = virtualinvoke r0.<java.lang.Long: long longValue()>();

        return $l0;
    }

    static double lambda$logToProto$2(java.lang.Double)
    {
        java.lang.Double r0;
        double $d0;

        r0 := @parameter0: java.lang.Double;

        $d0 = virtualinvoke r0.<java.lang.Double: double doubleValue()>();

        return $d0;
    }

    static void lambda$static$0()
    {
        return;
    }

    static void logAndPrintln(java.io.PrintWriter, java.lang.String)
    {
        java.io.PrintWriter r0;
        java.lang.String r1;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.String;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ProtoLog", r1);

        if r0 == null goto label1;

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>(r1);

        virtualinvoke r0.<java.io.PrintWriter: void flush()>();

     label1:
        return;
    }

    private void logToLogcat(java.lang.String, com.android.server.protolog.ProtoLogImpl$LogLevel, int, java.lang.String, java.lang.Object[])
    {
        com.android.server.protolog.ProtoLogImpl r0;
        java.lang.String r1, $r6, r9, r10, r11, r13;
        com.android.server.protolog.ProtoLogImpl$LogLevel r2;
        java.lang.Object[] r3;
        int i0, i1, i2;
        java.lang.StringBuilder $r4, $r5;
        com.android.server.protolog.ProtoLogViewerConfigReader $r7;
        java.lang.Throwable $r8;
        java.lang.Object r16;

        r0 := @this: com.android.server.protolog.ProtoLogImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.server.protolog.ProtoLogImpl$LogLevel;

        i1 := @parameter2: int;

        r9 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.Object[];

        r10 = r9;

        if r9 != null goto label1;

        $r7 = r0.<com.android.server.protolog.ProtoLogImpl: com.android.server.protolog.ProtoLogViewerConfigReader mViewerConfig>;

        r10 = virtualinvoke $r7.<com.android.server.protolog.ProtoLogViewerConfigReader: java.lang.String getViewerString(int)>(i1);

     label1:
        r11 = null;

        if r10 == null goto label5;

     label2:
        r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r10, r3);

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ProtoLog", "Invalid ProtoLog format string.", $r8);

        r11 = null;

     label5:
        r13 = r11;

        if r11 != null goto label8;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UNKNOWN MESSAGE (");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r5 = new java.lang.StringBuilder;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        i0 = lengthof r3;

        i2 = 0;

     label6:
        if i2 >= i0 goto label7;

        r16 = r3[i2];

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16);

        i2 = i2 + 1;

        goto label6;

     label7:
        r13 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label8:
        virtualinvoke r0.<com.android.server.protolog.ProtoLogImpl: void passToLogcat(java.lang.String,com.android.server.protolog.ProtoLogImpl$LogLevel,java.lang.String)>(r1, r2, r13);

        return;

        catch java.util.IllegalFormatConversionException from label2 to label3 with label4;
    }

    private void logToProto(int, int, java.lang.Object[])
    {
        com.android.server.protolog.ProtoLogImpl r0;
        int i0, i1, i2, $i5, $i6, $i7, $i8, $i9, i13, i15, i16, i17;
        java.lang.Object r5, $r8;
        long l3, $l4, $l10, l14;
        boolean $z0, $z1, $z4;
        java.lang.Boolean $r9, $r23, $r24;
        java.util.stream.Stream $r10, $r14;
        com.android.server.protolog.'-$$Lambda$ProtoLogImpl$mcAeBX3AFrWeIaIbVZQdFHsbH1E' $r11;
        java.util.stream.DoubleStream $r12;
        double[] $r13;
        com.android.server.protolog.'-$$Lambda$ProtoLogImpl$u2ST5Fi0HXPt_TWW4vWXOLOmOOU' $r15;
        java.util.stream.LongStream $r16;
        long[] $r17;
        java.lang.String $r18, $r30, $r32;
        java.lang.Number $r19, $r21;
        java.lang.Long $r20;
        double $d0;
        java.lang.Double $r22;
        java.lang.Exception $r25, $r26, $r27, r36;
        java.lang.ClassCastException $r28;
        java.lang.Object[] r33;
        boolean[] r34;
        com.android.internal.util.TraceBuffer $r35;
        android.util.proto.ProtoOutputStream r37;
        java.util.ArrayList r38, r39, r40;
        java.lang.StringBuilder r41;
        java.util.function.ToLongFunction r42;
        java.util.function.ToDoubleFunction r43;

        r0 := @this: com.android.server.protolog.ProtoLogImpl;

        i13 := @parameter0: int;

        i0 := @parameter1: int;

        r33 := @parameter2: java.lang.Object[];

        $z0 = virtualinvoke r0.<com.android.server.protolog.ProtoLogImpl: boolean isProtoEnabled()>();

        if $z0 != 0 goto label01;

        return;

     label01:
        r37 = new android.util.proto.ProtoOutputStream;

        specialinvoke r37.<android.util.proto.ProtoOutputStream: void <init>()>();

        l14 = virtualinvoke r37.<android.util.proto.ProtoOutputStream: long start(long)>(2246267895812L);

     label02:
        virtualinvoke r37.<android.util.proto.ProtoOutputStream: void write(long,int)>(1163936137217L, i13);

        $l4 = staticinvoke <android.os.SystemClock: long elapsedRealtimeNanos()>();

        virtualinvoke r37.<android.util.proto.ProtoOutputStream: void write(long,long)>(1125281431554L, $l4);

     label03:
        if r33 == null goto label30;

     label04:
        r38 = new java.util.ArrayList;

        specialinvoke r38.<java.util.ArrayList: void <init>()>();

        r39 = new java.util.ArrayList;

        specialinvoke r39.<java.util.ArrayList: void <init>()>();

        r40 = new java.util.ArrayList;

        specialinvoke r40.<java.util.ArrayList: void <init>()>();

        i1 = lengthof r33;

     label05:
        i15 = 0;

        i16 = 0;

     label06:
        if i15 >= i1 goto label20;

        r5 = r33[i15];

     label07:
        i2 = staticinvoke <com.android.server.protolog.common.LogDataType: int bitmaskToLogDataType(int,int)>(i0, i16);

     label08:
        if i2 == 0 goto label15;

        if i2 == 1 goto label13;

        if i2 == 2 goto label11;

        if i2 == 3 goto label09;

        goto label16;

     label09:
        $r23 = (java.lang.Boolean) r5;

        $z4 = virtualinvoke $r23.<java.lang.Boolean: boolean booleanValue()>();

        $r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4);

        virtualinvoke r40.<java.util.ArrayList: boolean add(java.lang.Object)>($r24);

     label10:
        goto label16;

     label11:
        $r21 = (java.lang.Number) r5;

        $d0 = virtualinvoke $r21.<java.lang.Number: double doubleValue()>();

        $r22 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        virtualinvoke r39.<java.util.ArrayList: boolean add(java.lang.Object)>($r22);

     label12:
        goto label16;

     label13:
        $r19 = (java.lang.Number) r5;

        $l10 = virtualinvoke $r19.<java.lang.Number: long longValue()>();

        $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l10);

        virtualinvoke r38.<java.util.ArrayList: boolean add(java.lang.Object)>($r20);

     label14:
        goto label16;

     label15:
        $r18 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r37.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(2237677961219L, $r18);

     label16:
        goto label19;

     label17:
        $r28 := @caughtexception;

     label18:
        r41 = new java.lang.StringBuilder;

        specialinvoke r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(INVALID PARAMS_MASK) ");

        $r30 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r37.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(2237677961219L, $r32);

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ProtoLog", "Invalid ProtoLog paramsMask", $r28);

     label19:
        i16 = i16 + 1;

        i15 = i15 + 1;

        goto label06;

     label20:
        l3 = l14;

     label21:
        $i5 = virtualinvoke r38.<java.util.ArrayList: int size()>();

        if $i5 <= 0 goto label22;

        $r14 = virtualinvoke r38.<java.util.ArrayList: java.util.stream.Stream stream()>();

        $r15 = <com.android.server.protolog._$$Lambda$ProtoLogImpl$u2ST5Fi0HXPt_TWW4vWXOLOmOOU: com.android.server.protolog.'-$$Lambda$ProtoLogImpl$u2ST5Fi0HXPt_TWW4vWXOLOmOOU' INSTANCE>;

        r42 = (java.util.function.ToLongFunction) $r15;

        $r16 = interfaceinvoke $r14.<java.util.stream.Stream: java.util.stream.LongStream mapToLong(java.util.function.ToLongFunction)>(r42);

        $r17 = interfaceinvoke $r16.<java.util.stream.LongStream: long[] toArray()>();

        virtualinvoke r37.<android.util.proto.ProtoOutputStream: void writePackedSInt64(long,long[])>(5574867550212L, $r17);

     label22:
        $i6 = virtualinvoke r39.<java.util.ArrayList: int size()>();

        if $i6 <= 0 goto label23;

        $r10 = virtualinvoke r39.<java.util.ArrayList: java.util.stream.Stream stream()>();

        $r11 = <com.android.server.protolog._$$Lambda$ProtoLogImpl$mcAeBX3AFrWeIaIbVZQdFHsbH1E: com.android.server.protolog.'-$$Lambda$ProtoLogImpl$mcAeBX3AFrWeIaIbVZQdFHsbH1E' INSTANCE>;

        r43 = (java.util.function.ToDoubleFunction) $r11;

        $r12 = interfaceinvoke $r10.<java.util.stream.Stream: java.util.stream.DoubleStream mapToDouble(java.util.function.ToDoubleFunction)>(r43);

        $r13 = interfaceinvoke $r12.<java.util.stream.DoubleStream: double[] toArray()>();

        virtualinvoke r37.<android.util.proto.ProtoOutputStream: void writePackedDouble(long,double[])>(5501853106181L, $r13);

     label23:
        l14 = l3;

     label24:
        $i7 = virtualinvoke r40.<java.util.ArrayList: int size()>();

        if $i7 <= 0 goto label30;

        $i8 = virtualinvoke r40.<java.util.ArrayList: int size()>();

        r34 = newarray (boolean)[$i8];

     label25:
        i17 = 0;

     label26:
        $i9 = virtualinvoke r40.<java.util.ArrayList: int size()>();

        if i17 >= $i9 goto label28;

        $r8 = virtualinvoke r40.<java.util.ArrayList: java.lang.Object get(int)>(i17);

        $r9 = (java.lang.Boolean) $r8;

        $z1 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

        r34[i17] = $z1;

     label27:
        i17 = i17 + 1;

        goto label26;

     label28:
        virtualinvoke r37.<android.util.proto.ProtoOutputStream: void writePackedBool(long,boolean[])>(5531917877254L, r34);

     label29:
        l14 = l3;

        goto label30;

     label30:
        virtualinvoke r37.<android.util.proto.ProtoOutputStream: void end(long)>(l14);

     label31:
        $r35 = r0.<com.android.server.protolog.ProtoLogImpl: com.android.internal.util.TraceBuffer mBuffer>;

        virtualinvoke $r35.<com.android.internal.util.TraceBuffer: void add(java.lang.Object)>(r37);

     label32:
        goto label37;

     label33:
        $r27 := @caughtexception;

        r36 = $r27;

        goto label36;

     label34:
        $r25 := @caughtexception;

        r36 = $r25;

        goto label36;

     label35:
        $r26 := @caughtexception;

        r36 = $r26;

     label36:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ProtoLog", "Exception while logging to proto", r36);

     label37:
        return;

        catch java.lang.Exception from label01 to label02 with label35;
        catch java.lang.Exception from label02 to label03 with label34;
        catch java.lang.Exception from label04 to label05 with label34;
        catch java.lang.Exception from label07 to label08 with label34;
        catch java.lang.ClassCastException from label09 to label10 with label17;
        catch java.lang.Exception from label09 to label10 with label34;
        catch java.lang.ClassCastException from label11 to label12 with label17;
        catch java.lang.Exception from label11 to label12 with label34;
        catch java.lang.ClassCastException from label13 to label14 with label17;
        catch java.lang.Exception from label13 to label14 with label34;
        catch java.lang.ClassCastException from label15 to label16 with label17;
        catch java.lang.Exception from label15 to label16 with label34;
        catch java.lang.Exception from label18 to label19 with label34;
        catch java.lang.Exception from label21 to label22 with label34;
        catch java.lang.Exception from label22 to label23 with label34;
        catch java.lang.Exception from label24 to label25 with label34;
        catch java.lang.Exception from label26 to label27 with label34;
        catch java.lang.Exception from label28 to label29 with label34;
        catch java.lang.Exception from label30 to label31 with label34;
        catch java.lang.Exception from label31 to label32 with label33;
    }

    private int setLogging(android.os.ShellCommand, boolean, boolean)
    {
        com.android.server.protolog.ProtoLogImpl r0;
        boolean z0, z1;
        java.lang.String r1, $r8;
        java.lang.Runnable $r2;
        java.util.TreeMap $r3;
        java.lang.Object $r4;
        java.lang.StringBuilder $r5;
        android.os.ShellCommand r9;
        com.android.server.protolog.common.IProtoLogGroup r10;
        java.io.PrintWriter r11;

        r0 := @this: com.android.server.protolog.ProtoLogImpl;

        r9 := @parameter0: android.os.ShellCommand;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

     label1:
        r1 = virtualinvoke r9.<android.os.ShellCommand: java.lang.String getNextArg()>();

        if r1 == null goto label5;

        $r3 = <com.android.server.protolog.ProtoLogImpl: java.util.TreeMap LOG_GROUPS>;

        $r4 = virtualinvoke $r3.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>(r1);

        r10 = (com.android.server.protolog.common.IProtoLogGroup) $r4;

        if r10 == null goto label4;

        if z0 == 0 goto label2;

        interfaceinvoke r10.<com.android.server.protolog.common.IProtoLogGroup: void setLogToLogcat(boolean)>(z1);

        goto label3;

     label2:
        interfaceinvoke r10.<com.android.server.protolog.common.IProtoLogGroup: void setLogToProto(boolean)>(z1);

     label3:
        goto label1;

     label4:
        r11 = virtualinvoke r9.<android.os.ShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No IProtoLogGroup named ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void logAndPrintln(java.io.PrintWriter,java.lang.String)>(r11, $r8);

        return -1;

     label5:
        $r2 = <com.android.server.protolog.ProtoLogImpl: java.lang.Runnable sCacheUpdater>;

        interfaceinvoke $r2.<java.lang.Runnable: void run()>();

        return 0;
    }

    public static void setSingleInstance(com.android.server.protolog.ProtoLogImpl)
    {
        java.lang.Throwable $r0;
        com.android.server.protolog.ProtoLogImpl r1;

        r1 := @parameter0: com.android.server.protolog.ProtoLogImpl;

        entermonitor class "Lcom/android/server/protolog/ProtoLogImpl;";

     label1:
        <com.android.server.protolog.ProtoLogImpl: com.android.server.protolog.ProtoLogImpl sServiceInstance> = r1;

     label2:
        exitmonitor class "Lcom/android/server/protolog/ProtoLogImpl;";

        return;

     label3:
        $r0 := @caughtexception;

        exitmonitor class "Lcom/android/server/protolog/ProtoLogImpl;";

        throw $r0;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private int unknownCommand(java.io.PrintWriter)
    {
        com.android.server.protolog.ProtoLogImpl r0;
        java.io.PrintWriter r1;

        r0 := @this: com.android.server.protolog.ProtoLogImpl;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Unknown command");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Window manager logging options:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  start: Start proto logging");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  stop: Stop proto logging");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  enable [group...]: Enable proto logging for given groups");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  disable [group...]: Disable proto logging for given groups");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  enable-text [group...]: Enable logcat logging for given groups");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  disable-text [group...]: Disable logcat logging for given groups");

        return -1;
    }

    public static transient void v(com.android.server.protolog.common.IProtoLogGroup, int, int, java.lang.String, java.lang.Object[])
    {
        com.android.server.protolog.common.IProtoLogGroup r0;
        int i0, i1;
        java.lang.String r1;
        java.lang.Object[] r2;
        com.android.server.protolog.ProtoLogImpl $r3;
        com.android.server.protolog.ProtoLogImpl$LogLevel $r4;

        r0 := @parameter0: com.android.server.protolog.common.IProtoLogGroup;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: java.lang.Object[];

        $r3 = staticinvoke <com.android.server.protolog.ProtoLogImpl: com.android.server.protolog.ProtoLogImpl getSingleInstance()>();

        $r4 = <com.android.server.protolog.ProtoLogImpl$LogLevel: com.android.server.protolog.ProtoLogImpl$LogLevel VERBOSE>;

        virtualinvoke $r3.<com.android.server.protolog.ProtoLogImpl: void log(com.android.server.protolog.ProtoLogImpl$LogLevel,com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r4, r0, i0, i1, r1, r2);

        return;
    }

    public static transient void w(com.android.server.protolog.common.IProtoLogGroup, int, int, java.lang.String, java.lang.Object[])
    {
        com.android.server.protolog.common.IProtoLogGroup r0;
        int i0, i1;
        java.lang.String r1;
        java.lang.Object[] r2;
        com.android.server.protolog.ProtoLogImpl $r3;
        com.android.server.protolog.ProtoLogImpl$LogLevel $r4;

        r0 := @parameter0: com.android.server.protolog.common.IProtoLogGroup;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: java.lang.Object[];

        $r3 = staticinvoke <com.android.server.protolog.ProtoLogImpl: com.android.server.protolog.ProtoLogImpl getSingleInstance()>();

        $r4 = <com.android.server.protolog.ProtoLogImpl$LogLevel: com.android.server.protolog.ProtoLogImpl$LogLevel WARN>;

        virtualinvoke $r3.<com.android.server.protolog.ProtoLogImpl: void log(com.android.server.protolog.ProtoLogImpl$LogLevel,com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r4, r0, i0, i1, r1, r2);

        return;
    }

    private void writeProtoLogToFileLocked()
    {
        com.android.server.protolog.ProtoLogImpl r0;
        long l0, l1, $l2, $l3;
        java.io.File $r1;
        com.android.internal.util.TraceBuffer $r2;
        java.lang.Throwable $r3;
        android.util.proto.ProtoOutputStream r4;

        r0 := @this: com.android.server.protolog.ProtoLogImpl;

     label1:
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtimeNanos()>();

        l1 = $l2 / 1000000L;

        r4 = new android.util.proto.ProtoOutputStream;

        specialinvoke r4.<android.util.proto.ProtoOutputStream: void <init>()>();

        virtualinvoke r4.<android.util.proto.ProtoOutputStream: void write(long,long)>(1125281431553L, 5138409603453637200L);

        virtualinvoke r4.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333442L, "1.0.0");

        $l3 = l0 - l1;

        virtualinvoke r4.<android.util.proto.ProtoOutputStream: void write(long,long)>(1125281431555L, $l3);

        $r2 = r0.<com.android.server.protolog.ProtoLogImpl: com.android.internal.util.TraceBuffer mBuffer>;

        $r1 = r0.<com.android.server.protolog.ProtoLogImpl: java.io.File mLogFile>;

        virtualinvoke $r2.<com.android.internal.util.TraceBuffer: void writeTraceToFile(java.io.File,java.lang.Object)>($r1, r4);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ProtoLog", "Unable to write buffer to file", $r3);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static transient void wtf(com.android.server.protolog.common.IProtoLogGroup, int, int, java.lang.String, java.lang.Object[])
    {
        com.android.server.protolog.common.IProtoLogGroup r0;
        int i0, i1;
        java.lang.String r1;
        java.lang.Object[] r2;
        com.android.server.protolog.ProtoLogImpl $r3;
        com.android.server.protolog.ProtoLogImpl$LogLevel $r4;

        r0 := @parameter0: com.android.server.protolog.common.IProtoLogGroup;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: java.lang.Object[];

        $r3 = staticinvoke <com.android.server.protolog.ProtoLogImpl: com.android.server.protolog.ProtoLogImpl getSingleInstance()>();

        $r4 = <com.android.server.protolog.ProtoLogImpl$LogLevel: com.android.server.protolog.ProtoLogImpl$LogLevel WTF>;

        virtualinvoke $r3.<com.android.server.protolog.ProtoLogImpl: void log(com.android.server.protolog.ProtoLogImpl$LogLevel,com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r4, r0, i0, i1, r1, r2);

        return;
    }

    public java.lang.String getStatus()
    {
        com.android.server.protolog.ProtoLogImpl r0;
        boolean $z0;
        java.util.TreeMap $r6, $r18;
        java.util.Collection $r7, $r19;
        java.util.stream.Stream $r8, $r10, $r12, $r20, $r22, $r24;
        com.android.server.protolog.'-$$Lambda$ProtoLogImpl$dhk0iBKAK3ywNSTqD4XUL3Oq0hM' $r9;
        com.android.server.protolog.'-$$Lambda$PfxMAktVLMbQMPp_FRkrQxibSKE' $r11, $r23;
        java.util.stream.Collector $r13, $r25;
        java.lang.Object $r14, $r26;
        java.lang.String $r15, $r27, $r32, r33;
        com.android.server.protolog.'-$$Lambda$ProtoLogImpl$G6yKiHAdF7lI4aTCybTMCes5zyI' $r21;
        com.android.server.protolog.ProtoLogViewerConfigReader $r30;
        int $i0;
        java.lang.StringBuilder r34;
        java.util.function.Predicate r35, r37;
        java.util.function.Function r36, r38;

        r0 := @this: com.android.server.protolog.ProtoLogImpl;

        r34 = new java.lang.StringBuilder;

        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ProtoLog status: ");

        $z0 = virtualinvoke r0.<com.android.server.protolog.ProtoLogImpl: boolean isProtoEnabled()>();

        if $z0 == 0 goto label1;

        r33 = "Enabled";

        goto label2;

     label1:
        r33 = "Disabled";

     label2:
        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nEnabled log groups: \n  Proto: ");

        $r6 = <com.android.server.protolog.ProtoLogImpl: java.util.TreeMap LOG_GROUPS>;

        $r7 = virtualinvoke $r6.<java.util.TreeMap: java.util.Collection values()>();

        $r8 = interfaceinvoke $r7.<java.util.Collection: java.util.stream.Stream stream()>();

        $r9 = <com.android.server.protolog._$$Lambda$ProtoLogImpl$dhk0iBKAK3ywNSTqD4XUL3Oq0hM: com.android.server.protolog.'-$$Lambda$ProtoLogImpl$dhk0iBKAK3ywNSTqD4XUL3Oq0hM' INSTANCE>;

        r35 = (java.util.function.Predicate) $r9;

        $r10 = interfaceinvoke $r8.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(r35);

        $r11 = <com.android.server.protolog._$$Lambda$PfxMAktVLMbQMPp_FRkrQxibSKE: com.android.server.protolog.'-$$Lambda$PfxMAktVLMbQMPp_FRkrQxibSKE' INSTANCE>;

        r36 = (java.util.function.Function) $r11;

        $r12 = interfaceinvoke $r10.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(r36);

        $r13 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector joining(java.lang.CharSequence)>(" ");

        $r14 = interfaceinvoke $r12.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r13);

        $r15 = (java.lang.String) $r14;

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  Logcat: ");

        $r18 = <com.android.server.protolog.ProtoLogImpl: java.util.TreeMap LOG_GROUPS>;

        $r19 = virtualinvoke $r18.<java.util.TreeMap: java.util.Collection values()>();

        $r20 = interfaceinvoke $r19.<java.util.Collection: java.util.stream.Stream stream()>();

        $r21 = <com.android.server.protolog._$$Lambda$ProtoLogImpl$G6yKiHAdF7lI4aTCybTMCes5zyI: com.android.server.protolog.'-$$Lambda$ProtoLogImpl$G6yKiHAdF7lI4aTCybTMCes5zyI' INSTANCE>;

        r37 = (java.util.function.Predicate) $r21;

        $r22 = interfaceinvoke $r20.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(r37);

        $r23 = <com.android.server.protolog._$$Lambda$PfxMAktVLMbQMPp_FRkrQxibSKE: com.android.server.protolog.'-$$Lambda$PfxMAktVLMbQMPp_FRkrQxibSKE' INSTANCE>;

        r38 = (java.util.function.Function) $r23;

        $r24 = interfaceinvoke $r22.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(r38);

        $r25 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector joining(java.lang.CharSequence)>(" ");

        $r26 = interfaceinvoke $r24.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r25);

        $r27 = (java.lang.String) $r26;

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nLogging definitions loaded: ");

        $r30 = r0.<com.android.server.protolog.ProtoLogImpl: com.android.server.protolog.ProtoLogViewerConfigReader mViewerConfig>;

        $i0 = virtualinvoke $r30.<com.android.server.protolog.ProtoLogViewerConfigReader: int knownViewerStringsNumber()>();

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r32 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r32;
    }

    public boolean isProtoEnabled()
    {
        com.android.server.protolog.ProtoLogImpl r0;
        boolean $z0;

        r0 := @this: com.android.server.protolog.ProtoLogImpl;

        $z0 = r0.<com.android.server.protolog.ProtoLogImpl: boolean mProtoLogEnabledLockFree>;

        return $z0;
    }

    public void log(com.android.server.protolog.ProtoLogImpl$LogLevel, com.android.server.protolog.common.IProtoLogGroup, int, int, java.lang.String, java.lang.Object[])
    {
        com.android.server.protolog.ProtoLogImpl r0;
        com.android.server.protolog.ProtoLogImpl$LogLevel r1;
        com.android.server.protolog.common.IProtoLogGroup r2;
        int i0, i1;
        java.lang.String r3, $r5;
        java.lang.Object[] r4;
        boolean $z0, $z1;

        r0 := @this: com.android.server.protolog.ProtoLogImpl;

        r1 := @parameter0: com.android.server.protolog.ProtoLogImpl$LogLevel;

        r2 := @parameter1: com.android.server.protolog.common.IProtoLogGroup;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: java.lang.Object[];

        $z0 = interfaceinvoke r2.<com.android.server.protolog.common.IProtoLogGroup: boolean isLogToProto()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.server.protolog.ProtoLogImpl: void logToProto(int,int,java.lang.Object[])>(i0, i1, r4);

     label1:
        $z1 = interfaceinvoke r2.<com.android.server.protolog.common.IProtoLogGroup: boolean isLogToLogcat()>();

        if $z1 == 0 goto label2;

        $r5 = interfaceinvoke r2.<com.android.server.protolog.common.IProtoLogGroup: java.lang.String getTag()>();

        specialinvoke r0.<com.android.server.protolog.ProtoLogImpl: void logToLogcat(java.lang.String,com.android.server.protolog.ProtoLogImpl$LogLevel,int,java.lang.String,java.lang.Object[])>($r5, r1, i0, r3, r4);

     label2:
        return;
    }

    public int onShellCommand(android.os.ShellCommand)
    {
        com.android.server.protolog.ProtoLogImpl r0;
        android.os.ShellCommand r1;
        java.io.PrintWriter r2;
        java.lang.String r3, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        com.android.server.protolog.ProtoLogViewerConfigReader $r4;
        byte b7;

        r0 := @this: com.android.server.protolog.ProtoLogImpl;

        r1 := @parameter0: android.os.ShellCommand;

        r2 = virtualinvoke r1.<android.os.ShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        r3 = virtualinvoke r1.<android.os.ShellCommand: java.lang.String getNextArg()>();

        if r3 != null goto label01;

        $i6 = specialinvoke r0.<com.android.server.protolog.ProtoLogImpl: int unknownCommand(java.io.PrintWriter)>(r2);

        return $i6;

     label01:
        b7 = -1;

        $i0 = virtualinvoke r3.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1475003593: goto label09;
            case -1298848381: goto label08;
            case -1032071950: goto label07;
            case -892481550: goto label06;
            case 3540994: goto label05;
            case 109757538: goto label04;
            case 1671308008: goto label03;
            default: goto label02;
        };

     label02:
        goto label10;

     label03:
        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("disable");

        if $z0 == 0 goto label02;

        b7 = 5;

        goto label10;

     label04:
        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("start");

        if $z1 == 0 goto label02;

        b7 = 0;

        goto label10;

     label05:
        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("stop");

        if $z2 == 0 goto label02;

        b7 = 1;

        goto label10;

     label06:
        $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("status");

        if $z3 == 0 goto label02;

        b7 = 2;

        goto label10;

     label07:
        $z4 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("disable-text");

        if $z4 == 0 goto label02;

        b7 = 6;

        goto label10;

     label08:
        $z5 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("enable");

        if $z5 == 0 goto label02;

        b7 = 3;

        goto label10;

     label09:
        $z6 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("enable-text");

        if $z6 == 0 goto label02;

        b7 = 4;

     label10:
        tableswitch(b7)
        {
            case 0: goto label18;
            case 1: goto label17;
            case 2: goto label16;
            case 3: goto label15;
            case 4: goto label14;
            case 5: goto label13;
            case 6: goto label12;
            default: goto label11;
        };

     label11:
        $i5 = specialinvoke r0.<com.android.server.protolog.ProtoLogImpl: int unknownCommand(java.io.PrintWriter)>(r2);

        return $i5;

     label12:
        $i1 = specialinvoke r0.<com.android.server.protolog.ProtoLogImpl: int setLogging(android.os.ShellCommand,boolean,boolean)>(r1, 1, 0);

        return $i1;

     label13:
        $i2 = specialinvoke r0.<com.android.server.protolog.ProtoLogImpl: int setLogging(android.os.ShellCommand,boolean,boolean)>(r1, 0, 0);

        return $i2;

     label14:
        $r4 = r0.<com.android.server.protolog.ProtoLogImpl: com.android.server.protolog.ProtoLogViewerConfigReader mViewerConfig>;

        virtualinvoke $r4.<com.android.server.protolog.ProtoLogViewerConfigReader: void loadViewerConfig(java.io.PrintWriter,java.lang.String)>(r2, "/system/etc/protolog.conf.json.gz");

        $i3 = specialinvoke r0.<com.android.server.protolog.ProtoLogImpl: int setLogging(android.os.ShellCommand,boolean,boolean)>(r1, 1, 1);

        return $i3;

     label15:
        $i4 = specialinvoke r0.<com.android.server.protolog.ProtoLogImpl: int setLogging(android.os.ShellCommand,boolean,boolean)>(r1, 0, 1);

        return $i4;

     label16:
        $r5 = virtualinvoke r0.<com.android.server.protolog.ProtoLogImpl: java.lang.String getStatus()>();

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void logAndPrintln(java.io.PrintWriter,java.lang.String)>(r2, $r5);

        return 0;

     label17:
        virtualinvoke r0.<com.android.server.protolog.ProtoLogImpl: void stopProtoLog(java.io.PrintWriter,boolean)>(r2, 1);

        return 0;

     label18:
        virtualinvoke r0.<com.android.server.protolog.ProtoLogImpl: void startProtoLog(java.io.PrintWriter)>(r2);

        return 0;
    }

    public void passToLogcat(java.lang.String, com.android.server.protolog.ProtoLogImpl$LogLevel, java.lang.String)
    {
        com.android.server.protolog.ProtoLogImpl r0;
        java.lang.String r1, r3;
        com.android.server.protolog.ProtoLogImpl$LogLevel r2;
        int[] $r4;
        int $i0, $i1;

        r0 := @this: com.android.server.protolog.ProtoLogImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.server.protolog.ProtoLogImpl$LogLevel;

        r3 := @parameter2: java.lang.String;

        $r4 = <com.android.server.protolog.ProtoLogImpl$1: int[] $SwitchMap$com$android$server$protolog$ProtoLogImpl$LogLevel>;

        $i0 = virtualinvoke r2.<com.android.server.protolog.ProtoLogImpl$LogLevel: int ordinal()>();

        $i1 = $r4[$i0];

        tableswitch($i1)
        {
            case 1: goto label7;
            case 2: goto label6;
            case 3: goto label5;
            case 4: goto label4;
            case 5: goto label3;
            case 6: goto label2;
            default: goto label1;
        };

     label1:
        goto label8;

     label2:
        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>(r1, r3);

        goto label8;

     label3:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>(r1, r3);

        goto label8;

     label4:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r1, r3);

        goto label8;

     label5:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r1, r3);

        goto label8;

     label6:
        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r1, r3);

        goto label8;

     label7:
        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>(r1, r3);

     label8:
        return;
    }

    public void startProtoLog(java.io.PrintWriter)
    {
        com.android.server.protolog.ProtoLogImpl r0;
        java.lang.Object r1;
        java.lang.StringBuilder r2;
        boolean $z0;
        java.io.File $r4;
        java.lang.String $r7;
        com.android.internal.util.TraceBuffer $r8;
        java.lang.Runnable $r9;
        java.lang.Throwable $r10;
        java.io.PrintWriter r11;

        r0 := @this: com.android.server.protolog.ProtoLogImpl;

        r11 := @parameter0: java.io.PrintWriter;

        $z0 = virtualinvoke r0.<com.android.server.protolog.ProtoLogImpl: boolean isProtoEnabled()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        r1 = r0.<com.android.server.protolog.ProtoLogImpl: java.lang.Object mProtoLogEnabledLock>;

        entermonitor r1;

     label2:
        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Start logging to ");

        $r4 = r0.<com.android.server.protolog.ProtoLogImpl: java.io.File mLogFile>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r7 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void logAndPrintln(java.io.PrintWriter,java.lang.String)>(r11, $r7);

        $r8 = r0.<com.android.server.protolog.ProtoLogImpl: com.android.internal.util.TraceBuffer mBuffer>;

        virtualinvoke $r8.<com.android.internal.util.TraceBuffer: void resetBuffer()>();

        r0.<com.android.server.protolog.ProtoLogImpl: boolean mProtoLogEnabled> = 1;

        r0.<com.android.server.protolog.ProtoLogImpl: boolean mProtoLogEnabledLockFree> = 1;

        exitmonitor r1;

     label3:
        $r9 = <com.android.server.protolog.ProtoLogImpl: java.lang.Runnable sCacheUpdater>;

        interfaceinvoke $r9.<java.lang.Runnable: void run()>();

        return;

     label4:
        $r10 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r10;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void stopProtoLog(java.io.PrintWriter, boolean)
    {
        com.android.server.protolog.ProtoLogImpl r0;
        boolean z0, $z1, $z2;
        java.lang.Object r1;
        java.io.File $r3, $r9;
        java.lang.String $r6, $r12;
        java.lang.Runnable $r7;
        java.lang.Throwable $r13;
        java.io.PrintWriter r14;
        java.lang.StringBuilder r15, r16;
        java.lang.IllegalStateException r17;

        r0 := @this: com.android.server.protolog.ProtoLogImpl;

        r14 := @parameter0: java.io.PrintWriter;

        z0 := @parameter1: boolean;

        $z1 = virtualinvoke r0.<com.android.server.protolog.ProtoLogImpl: boolean isProtoEnabled()>();

        if $z1 != 0 goto label01;

        return;

     label01:
        r1 = r0.<com.android.server.protolog.ProtoLogImpl: java.lang.Object mProtoLogEnabledLock>;

        entermonitor r1;

     label02:
        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stop logging to ");

        $r3 = r0.<com.android.server.protolog.ProtoLogImpl: java.io.File mLogFile>;

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Waiting for log to flush.");

        $r6 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void logAndPrintln(java.io.PrintWriter,java.lang.String)>(r14, $r6);

        r0.<com.android.server.protolog.ProtoLogImpl: boolean mProtoLogEnabledLockFree> = 0;

        r0.<com.android.server.protolog.ProtoLogImpl: boolean mProtoLogEnabled> = 0;

     label03:
        if z0 == 0 goto label05;

     label04:
        specialinvoke r0.<com.android.server.protolog.ProtoLogImpl: void writeProtoLogToFileLocked()>();

        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Log written to ");

        $r9 = r0.<com.android.server.protolog.ProtoLogImpl: java.io.File mLogFile>;

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r12 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void logAndPrintln(java.io.PrintWriter,java.lang.String)>(r14, $r12);

     label05:
        $z2 = r0.<com.android.server.protolog.ProtoLogImpl: boolean mProtoLogEnabled>;

        if $z2 != 0 goto label07;

        exitmonitor r1;

     label06:
        $r7 = <com.android.server.protolog.ProtoLogImpl: java.lang.Runnable sCacheUpdater>;

        interfaceinvoke $r7.<java.lang.Runnable: void run()>();

        return;

     label07:
        staticinvoke <com.android.server.protolog.ProtoLogImpl: void logAndPrintln(java.io.PrintWriter,java.lang.String)>(r14, "ERROR: logging was re-enabled while waiting for flush.");

        r17 = new java.lang.IllegalStateException;

        specialinvoke r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>("logging enabled while waiting for flush.");

        throw r17;

     label08:
        $r13 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r13;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void writeProtoLogToFile()
    {
        com.android.server.protolog.ProtoLogImpl r0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.protolog.ProtoLogImpl;

        r1 = r0.<com.android.server.protolog.ProtoLogImpl: java.lang.Object mProtoLogEnabledLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.server.protolog.ProtoLogImpl: void writeProtoLogToFileLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
