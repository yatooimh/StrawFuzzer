public class com.android.server.protolog.common.LogDataType extends java.lang.Object
{
    public static final int BOOLEAN;
    public static final int DOUBLE;
    public static final int LONG;
    public static final int STRING;
    private static final int TYPE_MASK;
    private static final int TYPE_WIDTH;

    public void <init>()
    {
        com.android.server.protolog.common.LogDataType r0;

        r0 := @this: com.android.server.protolog.common.LogDataType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int bitmaskToLogDataType(int, int)
    {
        int i0, i1, $i2, $i3, $i4;
        com.android.server.protolog.common.BitmaskConversionException $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 > 16 goto label1;

        $i2 = i1 * 2;

        $i3 = i0 >> $i2;

        $i4 = $i3 & 3;

        return $i4;

     label1:
        $r0 = new com.android.server.protolog.common.BitmaskConversionException;

        specialinvoke $r0.<com.android.server.protolog.common.BitmaskConversionException: void <init>(java.lang.String)>("Max 16 parameters allowed");

        throw $r0;
    }

    public static int logDataTypesToBitMask(java.util.List)
    {
        java.util.List r0;
        int $i0, $i1, $i2, $i3, $i4, i5, i6;
        com.android.server.protolog.common.BitmaskConversionException $r1;
        java.lang.Object $r2;
        java.lang.Integer $r3;

        r0 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 > 16 goto label3;

        i5 = 0;

        i6 = 0;

     label1:
        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        if i6 >= $i1 goto label2;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i6);

        $r3 = (java.lang.Integer) $r2;

        $i2 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $i3 = i6 * 2;

        $i4 = $i2 << $i3;

        i5 = i5 | $i4;

        i6 = i6 + 1;

        goto label1;

     label2:
        return i5;

     label3:
        $r1 = new com.android.server.protolog.common.BitmaskConversionException;

        specialinvoke $r1.<com.android.server.protolog.common.BitmaskConversionException: void <init>(java.lang.String)>("Too many log call parameters - max 16 parameters supported");

        throw $r1;
    }

    public static java.util.List parseFormatString(java.lang.String)
    {
        java.lang.String r0;
        char c0, $c1;
        java.util.ArrayList $r2;
        int $i2, $i3, $i4, i5, $i6;
        com.android.server.protolog.common.InvalidFormatStringException $r3, $r7;
        java.lang.Integer $r4, $r5, $r6, $r8;

        r0 := @parameter0: java.lang.String;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        i5 = 0;

     label01:
        $i6 = virtualinvoke r0.<java.lang.String: int length()>();

        if i5 >= $i6 goto label10;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i5);

        if $c1 != 37 goto label09;

        $i2 = i5 + 1;

        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i2 >= $i3 goto label08;

        $i4 = i5 + 1;

        c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i4);

        if c0 == 37 goto label07;

        if c0 == 98 goto label06;

        if c0 == 111 goto label05;

        if c0 == 115 goto label04;

        if c0 == 120 goto label05;

        tableswitch(c0)
        {
            case 100: goto label05;
            case 101: goto label03;
            case 102: goto label03;
            case 103: goto label03;
            default: goto label02;
        };

     label02:
        $r7 = new com.android.server.protolog.common.InvalidFormatStringException;

        specialinvoke $r7.<com.android.server.protolog.common.InvalidFormatStringException: void <init>(java.lang.String)>("Invalid format string field %${messageString[i + 1]}");

        throw $r7;

     label03:
        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        goto label07;

     label04:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        goto label07;

     label05:
        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        goto label07;

     label06:
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        goto label07;

     label07:
        i5 = i5 + 2;

        goto label01;

     label08:
        $r3 = new com.android.server.protolog.common.InvalidFormatStringException;

        specialinvoke $r3.<com.android.server.protolog.common.InvalidFormatStringException: void <init>(java.lang.String)>("Invalid format string in config");

        throw $r3;

     label09:
        i5 = i5 + 1;

        goto label01;

     label10:
        return $r2;
    }

    public static void <clinit>()
    {
        <com.android.server.protolog.common.LogDataType: int TYPE_WIDTH> = 2;

        <com.android.server.protolog.common.LogDataType: int TYPE_MASK> = 3;

        <com.android.server.protolog.common.LogDataType: int STRING> = 0;

        <com.android.server.protolog.common.LogDataType: int LONG> = 1;

        <com.android.server.protolog.common.LogDataType: int DOUBLE> = 2;

        <com.android.server.protolog.common.LogDataType: int BOOLEAN> = 3;

        return;
    }
}
