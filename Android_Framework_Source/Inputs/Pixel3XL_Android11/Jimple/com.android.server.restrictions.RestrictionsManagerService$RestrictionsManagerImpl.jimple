class com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl extends android.content.IRestrictionsManager$Stub
{
    final android.content.Context mContext;
    private final android.app.admin.IDevicePolicyManager mDpm;
    private final android.os.IUserManager mUm;
    final com.android.server.restrictions.RestrictionsManagerService this$0;

    public void <init>(com.android.server.restrictions.RestrictionsManagerService, android.content.Context)
    {
        com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl r0;
        com.android.server.restrictions.RestrictionsManagerService r1;
        android.content.Context r2;
        android.os.IBinder $r3, $r5;
        android.os.IUserManager $r4;
        android.app.admin.IDevicePolicyManager $r6;

        r0 := @this: com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl;

        r1 := @parameter0: com.android.server.restrictions.RestrictionsManagerService;

        r2 := @parameter1: android.content.Context;

        r0.<com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl: com.android.server.restrictions.RestrictionsManagerService this$0> = r1;

        specialinvoke r0.<android.content.IRestrictionsManager$Stub: void <init>()>();

        r0.<com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl: android.content.Context mContext> = r2;

        $r3 = staticinvoke <com.android.server.restrictions.RestrictionsManagerService: android.os.IBinder access$000(com.android.server.restrictions.RestrictionsManagerService,java.lang.String)>(r1, "user");

        $r4 = (android.os.IUserManager) $r3;

        r0.<com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl: android.os.IUserManager mUm> = $r4;

        $r5 = staticinvoke <com.android.server.restrictions.RestrictionsManagerService: android.os.IBinder access$100(com.android.server.restrictions.RestrictionsManagerService,java.lang.String)>(r1, "device_policy");

        $r6 = (android.app.admin.IDevicePolicyManager) $r5;

        r0.<com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl: android.app.admin.IDevicePolicyManager mDpm> = $r6;

        return;
    }

    private void enforceCallerMatchesPackage(int, java.lang.String, java.lang.String)
    {
        com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl r0;
        int i0;
        java.lang.String r1, $r5, r7;
        android.content.pm.IPackageManager $r2;
        boolean $z0;
        android.os.RemoteException $r6;
        java.lang.String[] r8;
        java.lang.SecurityException r9;
        java.lang.StringBuilder r10;

        r0 := @this: com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

     label1:
        $r2 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r8 = interfaceinvoke $r2.<android.content.pm.IPackageManager: java.lang.String[] getPackagesForUid(int)>(i0);

     label2:
        if r8 == null goto label6;

     label3:
        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>(r8, r7);

        if $z0 == 0 goto label5;

     label4:
        goto label6;

     label5:
        r9 = new java.lang.SecurityException;

        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r9.<java.lang.SecurityException: void <init>(java.lang.String)>($r5);

        throw r9;

     label6:
        goto label8;

     label7:
        $r6 := @caughtexception;

     label8:
        return;

        catch android.os.RemoteException from label1 to label2 with label7;
        catch android.os.RemoteException from label3 to label4 with label7;
        catch android.os.RemoteException from label5 to label6 with label7;
    }

    public android.content.Intent createLocalApprovalIntent() throws android.os.RemoteException
    {
        com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl r0;
        int i0;
        long l1;
        android.content.pm.ResolveInfo r1;
        android.app.admin.IDevicePolicyManager $r2, $r3;
        android.content.pm.IPackageManager $r5;
        android.content.pm.ActivityInfo $r6, $r7, $r8, $r9;
        boolean $z0;
        java.lang.String $r10, $r11, r15;
        java.lang.Throwable $r13;
        android.content.ComponentName r14, r17;
        android.content.Intent r16;
        java.lang.IllegalStateException r18;

        r0 := @this: com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl;

        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r2 = r0.<com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl: android.app.admin.IDevicePolicyManager mDpm>;

        if $r2 == null goto label10;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        $r3 = r0.<com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl: android.app.admin.IDevicePolicyManager mDpm>;

        r14 = interfaceinvoke $r3.<android.app.admin.IDevicePolicyManager: android.content.ComponentName getRestrictionsProvider(int)>(i0);

     label02:
        if r14 == null goto label08;

     label03:
        r15 = virtualinvoke r14.<android.content.ComponentName: java.lang.String getPackageName()>();

        r16 = new android.content.Intent;

        specialinvoke r16.<android.content.Intent: void <init>(java.lang.String)>("android.content.action.REQUEST_LOCAL_APPROVAL");

        virtualinvoke r16.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r15);

        $r5 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r1 = interfaceinvoke $r5.<android.content.pm.IPackageManager: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int,int)>(r16, null, 0, i0);

     label04:
        if r1 == null goto label07;

     label05:
        $r6 = r1.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        if $r6 == null goto label07;

        $r7 = r1.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $z0 = $r7.<android.content.pm.ActivityInfo: boolean exported>;

        if $z0 == 0 goto label07;

        r17 = new android.content.ComponentName;

        $r8 = r1.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r11 = $r8.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r9 = r1.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r10 = $r9.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke r17.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r11, $r10);

        virtualinvoke r16.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r17);

     label06:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return r16;

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label10;

     label08:
        r18 = new java.lang.IllegalStateException;

        specialinvoke r18.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot request permission without a restrictions provider registered");

        throw r18;

     label09:
        $r13 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r13;

     label10:
        return null;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label08 to label09 with label09;
    }

    public android.os.Bundle getApplicationRestrictions(java.lang.String) throws android.os.RemoteException
    {
        com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl r0;
        java.lang.String r1;
        android.os.IUserManager $r2;
        android.os.Bundle $r3;

        r0 := @this: com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl: android.os.IUserManager mUm>;

        $r3 = interfaceinvoke $r2.<android.os.IUserManager: android.os.Bundle getApplicationRestrictions(java.lang.String)>(r1);

        return $r3;
    }

    public boolean hasRestrictionsProvider() throws android.os.RemoteException
    {
        com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl r0;
        int i0;
        long l1;
        android.app.admin.IDevicePolicyManager $r1, r3;
        java.lang.Throwable $r2;
        boolean z0;
        android.content.ComponentName r4;

        r0 := @this: com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl;

        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        r3 = r0.<com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl: android.app.admin.IDevicePolicyManager mDpm>;

        z0 = 0;

        if r3 == null goto label5;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = r0.<com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl: android.app.admin.IDevicePolicyManager mDpm>;

        r4 = interfaceinvoke $r1.<android.app.admin.IDevicePolicyManager: android.content.ComponentName getRestrictionsProvider(int)>(i0);

     label2:
        if r4 == null goto label3;

        z0 = 1;

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return z0;

     label4:
        $r2 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r2;

     label5:
        return 0;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void notifyPermissionResponse(java.lang.String, android.os.PersistableBundle) throws android.os.RemoteException
    {
        com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl r0;
        int i0, i1;
        long l2;
        android.app.admin.IDevicePolicyManager $r1, $r2;
        java.lang.String $r3, r7;
        java.lang.Throwable $r6;
        android.os.PersistableBundle r8;
        android.content.ComponentName r9;
        android.content.Intent r10;
        android.content.Context r11;
        android.os.UserHandle r12;
        java.lang.SecurityException r13;

        r0 := @this: com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl;

        r7 := @parameter0: java.lang.String;

        r8 := @parameter1: android.os.PersistableBundle;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $r1 = r0.<com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl: android.app.admin.IDevicePolicyManager mDpm>;

        if $r1 == null goto label7;

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl: android.app.admin.IDevicePolicyManager mDpm>;

        r9 = interfaceinvoke $r2.<android.app.admin.IDevicePolicyManager: android.content.ComponentName getRestrictionsProvider(int)>(i1);

     label2:
        if r9 == null goto label5;

     label3:
        $r3 = virtualinvoke r9.<android.content.ComponentName: java.lang.String getPackageName()>();

        specialinvoke r0.<com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl: void enforceCallerMatchesPackage(int,java.lang.String,java.lang.String)>(i0, $r3, "Restrictions provider does not match caller ");

        r10 = new android.content.Intent;

        specialinvoke r10.<android.content.Intent: void <init>(java.lang.String)>("android.content.action.PERMISSION_RESPONSE_RECEIVED");

        virtualinvoke r10.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r7);

        virtualinvoke r10.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.content.extra.RESPONSE_BUNDLE", r8);

        r11 = r0.<com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl: android.content.Context mContext>;

        r12 = new android.os.UserHandle;

        specialinvoke r12.<android.os.UserHandle: void <init>(int)>(i1);

        virtualinvoke r11.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r10, r12);

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label7;

     label5:
        r13 = new java.lang.SecurityException;

        specialinvoke r13.<java.lang.SecurityException: void <init>(java.lang.String)>("No restrictions provider registered for user");

        throw r13;

     label6:
        $r6 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r6;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
    }

    public void requestPermission(java.lang.String, java.lang.String, java.lang.String, android.os.PersistableBundle) throws android.os.RemoteException
    {
        com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl r0;
        java.lang.String r1, r13, r14;
        android.os.PersistableBundle r2;
        int i0, i1;
        long l2;
        android.content.ComponentName r3;
        android.content.Intent r4;
        android.app.admin.IDevicePolicyManager $r5, $r6;
        java.lang.Throwable $r12;
        android.content.Context r15;
        android.os.UserHandle r16;
        java.lang.IllegalStateException r17;

        r0 := @this: com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl;

        r13 := @parameter0: java.lang.String;

        r14 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: android.os.PersistableBundle;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $r5 = r0.<com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl: android.app.admin.IDevicePolicyManager mDpm>;

        if $r5 == null goto label7;

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r6 = r0.<com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl: android.app.admin.IDevicePolicyManager mDpm>;

        r3 = interfaceinvoke $r6.<android.app.admin.IDevicePolicyManager: android.content.ComponentName getRestrictionsProvider(int)>(i1);

     label2:
        if r3 == null goto label5;

     label3:
        specialinvoke r0.<com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl: void enforceCallerMatchesPackage(int,java.lang.String,java.lang.String)>(i0, r13, "Package name does not match caller ");

        r4 = new android.content.Intent;

        specialinvoke r4.<android.content.Intent: void <init>(java.lang.String)>("android.content.action.REQUEST_PERMISSION");

        virtualinvoke r4.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r3);

        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.content.extra.PACKAGE_NAME", r13);

        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.content.extra.REQUEST_TYPE", r14);

        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.content.extra.REQUEST_ID", r1);

        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.content.extra.REQUEST_BUNDLE", r2);

        r15 = r0.<com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl: android.content.Context mContext>;

        r16 = new android.os.UserHandle;

        specialinvoke r16.<android.os.UserHandle: void <init>(int)>(i1);

        virtualinvoke r15.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r4, r16);

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label7;

     label5:
        r17 = new java.lang.IllegalStateException;

        specialinvoke r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot request permission without a restrictions provider registered");

        throw r17;

     label6:
        $r12 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r12;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
    }
}
