class com.android.server.role.RoleManagerService$DefaultHomeProvider extends java.lang.Object implements com.android.server.pm.permission.PermissionManagerServiceInternal$DefaultHomeProvider
{
    final com.android.server.role.RoleManagerService this$0;

    private void <init>(com.android.server.role.RoleManagerService)
    {
        com.android.server.role.RoleManagerService$DefaultHomeProvider r0;
        com.android.server.role.RoleManagerService r1;

        r0 := @this: com.android.server.role.RoleManagerService$DefaultHomeProvider;

        r1 := @parameter0: com.android.server.role.RoleManagerService;

        r0.<com.android.server.role.RoleManagerService$DefaultHomeProvider: com.android.server.role.RoleManagerService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(com.android.server.role.RoleManagerService, com.android.server.role.RoleManagerService$1)
    {
        com.android.server.role.RoleManagerService$DefaultHomeProvider r0;
        com.android.server.role.RoleManagerService r1;
        com.android.server.role.RoleManagerService$1 r2;

        r0 := @this: com.android.server.role.RoleManagerService$DefaultHomeProvider;

        r1 := @parameter0: com.android.server.role.RoleManagerService;

        r2 := @parameter1: com.android.server.role.RoleManagerService$1;

        specialinvoke r0.<com.android.server.role.RoleManagerService$DefaultHomeProvider: void <init>(com.android.server.role.RoleManagerService)>(r1);

        return;
    }

    static void lambda$setDefaultHomeAsync$0(java.lang.String, java.util.function.Consumer, android.os.Bundle)
    {
        java.lang.String r0, $r7, r9;
        java.util.function.Consumer r1;
        java.lang.Boolean $r3;
        java.lang.StringBuilder $r4;
        android.os.Bundle r8;
        boolean z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.function.Consumer;

        r8 := @parameter2: android.os.Bundle;

        if r8 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        if z0 != 0 goto label3;

        r9 = staticinvoke <com.android.server.role.RoleManagerService: java.lang.String access$1000()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to set default home: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>(r9, $r7);

     label3:
        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        interfaceinvoke r1.<java.util.function.Consumer: void accept(java.lang.Object)>($r3);

        return;
    }

    public java.lang.String getDefaultHome(int)
    {
        com.android.server.role.RoleManagerService$DefaultHomeProvider r0;
        int i0;
        com.android.server.role.RoleManagerService $r1;
        com.android.server.role.RoleUserState $r2;
        android.util.ArraySet $r3;
        java.lang.Object $r4;
        java.lang.String $r5;

        r0 := @this: com.android.server.role.RoleManagerService$DefaultHomeProvider;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.role.RoleManagerService$DefaultHomeProvider: com.android.server.role.RoleManagerService this$0>;

        $r2 = staticinvoke <com.android.server.role.RoleManagerService: com.android.server.role.RoleUserState access$700(com.android.server.role.RoleManagerService,int)>($r1, i0);

        $r3 = virtualinvoke $r2.<com.android.server.role.RoleUserState: android.util.ArraySet getRoleHolders(java.lang.String)>("android.app.role.HOME");

        $r4 = staticinvoke <com.android.internal.util.CollectionUtils: java.lang.Object firstOrNull(java.util.Collection)>($r3);

        $r5 = (java.lang.String) $r4;

        return $r5;
    }

    public void setDefaultHomeAsync(java.lang.String, int, java.util.function.Consumer)
    {
        com.android.server.role.RoleManagerService$DefaultHomeProvider r0;
        java.lang.String r1;
        int i0;
        android.os.RemoteCallback $r2;
        com.android.server.role._$$Lambda$RoleManagerService$DefaultHomeProvider$9eeqZaqhD2FohE8PZOcBaWBSZu4 $r3;
        com.android.server.role.RoleManagerService $r4, $r6;
        android.app.role.RoleControllerManager $r5, $r7;
        java.util.function.Consumer r8;

        r0 := @this: com.android.server.role.RoleManagerService$DefaultHomeProvider;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r8 := @parameter2: java.util.function.Consumer;

        $r2 = new android.os.RemoteCallback;

        $r3 = new com.android.server.role._$$Lambda$RoleManagerService$DefaultHomeProvider$9eeqZaqhD2FohE8PZOcBaWBSZu4;

        specialinvoke $r3.<com.android.server.role._$$Lambda$RoleManagerService$DefaultHomeProvider$9eeqZaqhD2FohE8PZOcBaWBSZu4: void <init>(java.lang.String,java.util.function.Consumer)>(r1, r8);

        specialinvoke $r2.<android.os.RemoteCallback: void <init>(android.os.RemoteCallback$OnResultListener)>($r3);

        if r1 == null goto label1;

        $r6 = r0.<com.android.server.role.RoleManagerService$DefaultHomeProvider: com.android.server.role.RoleManagerService this$0>;

        $r7 = staticinvoke <com.android.server.role.RoleManagerService: android.app.role.RoleControllerManager access$1100(com.android.server.role.RoleManagerService,int)>($r6, i0);

        virtualinvoke $r7.<android.app.role.RoleControllerManager: void onAddRoleHolder(java.lang.String,java.lang.String,int,android.os.RemoteCallback)>("android.app.role.HOME", r1, 0, $r2);

        goto label2;

     label1:
        $r4 = r0.<com.android.server.role.RoleManagerService$DefaultHomeProvider: com.android.server.role.RoleManagerService this$0>;

        $r5 = staticinvoke <com.android.server.role.RoleManagerService: android.app.role.RoleControllerManager access$1100(com.android.server.role.RoleManagerService,int)>($r4, i0);

        virtualinvoke $r5.<android.app.role.RoleControllerManager: void onClearRoleHolders(java.lang.String,int,android.os.RemoteCallback)>("android.app.role.HOME", 0, $r2);

     label2:
        return;
    }
}
