public class com.android.server.role.RoleManagerService extends com.android.server.SystemService implements com.android.server.role.RoleUserState$Callback
{
    private static final boolean DEBUG;
    private static final long GRANT_DEFAULT_ROLES_INTERVAL_MILLIS;
    private static final java.lang.String LOG_TAG;
    private final android.app.AppOpsManager mAppOpsManager;
    private final android.util.SparseArray mControllers;
    private final android.util.SparseArray mGrantDefaultRolesThrottledRunnables;
    private final com.android.server.role.RoleManagerService$RoleHoldersResolver mLegacyRoleResolver;
    private final android.os.Handler mListenerHandler;
    private final android.util.SparseArray mListeners;
    private final java.lang.Object mLock;
    private final android.os.UserManagerInternal mUserManagerInternal;
    private final android.util.SparseArray mUserStates;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <com.android.server.role.RoleManagerService: long GRANT_DEFAULT_ROLES_INTERVAL_MILLIS> = 1000L;

        <com.android.server.role.RoleManagerService: boolean DEBUG> = 0;

        $r0 = class "Lcom/android/server/role/RoleManagerService;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.server.role.RoleManagerService: java.lang.String LOG_TAG> = $r1;

        return;
    }

    public void <init>(android.content.Context, com.android.server.role.RoleManagerService$RoleHoldersResolver)
    {
        com.android.server.role.RoleManagerService r0;
        com.android.server.role.RoleManagerService$RoleHoldersResolver r1;
        java.lang.Object $r2, $r8, $r10, $r13;
        android.util.SparseArray $r3, $r4, $r5, $r7;
        android.os.Handler $r6;
        android.os.UserManagerInternal $r9;
        android.app.AppOpsManager $r11;
        com.android.server.role.RoleManagerService$Internal $r12;
        com.android.server.role.RoleManagerService$DefaultBrowserProvider $r14;
        com.android.server.role.RoleManagerService$DefaultDialerProvider $r15;
        com.android.server.role.RoleManagerService$DefaultHomeProvider $r16;
        android.content.Context r17;
        com.android.server.pm.permission.PermissionManagerServiceInternal r18;

        r0 := @this: com.android.server.role.RoleManagerService;

        r17 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.server.role.RoleManagerService$RoleHoldersResolver;

        specialinvoke r0.<com.android.server.SystemService: void <init>(android.content.Context)>(r17);

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.server.role.RoleManagerService: java.lang.Object mLock> = $r2;

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.role.RoleManagerService: android.util.SparseArray mUserStates> = $r3;

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.role.RoleManagerService: android.util.SparseArray mControllers> = $r4;

        $r5 = new android.util.SparseArray;

        specialinvoke $r5.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.role.RoleManagerService: android.util.SparseArray mListeners> = $r5;

        $r6 = staticinvoke <com.android.server.FgThread: android.os.Handler getHandler()>();

        r0.<com.android.server.role.RoleManagerService: android.os.Handler mListenerHandler> = $r6;

        $r7 = new android.util.SparseArray;

        specialinvoke $r7.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.role.RoleManagerService: android.util.SparseArray mGrantDefaultRolesThrottledRunnables> = $r7;

        r0.<com.android.server.role.RoleManagerService: com.android.server.role.RoleManagerService$RoleHoldersResolver mLegacyRoleResolver> = r1;

        staticinvoke <android.app.role.RoleControllerManager: void initializeRemoteServiceComponentName(android.content.Context)>(r17);

        $r8 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/os/UserManagerInternal;");

        $r9 = (android.os.UserManagerInternal) $r8;

        r0.<com.android.server.role.RoleManagerService: android.os.UserManagerInternal mUserManagerInternal> = $r9;

        $r10 = virtualinvoke r17.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/AppOpsManager;");

        $r11 = (android.app.AppOpsManager) $r10;

        r0.<com.android.server.role.RoleManagerService: android.app.AppOpsManager mAppOpsManager> = $r11;

        $r12 = new com.android.server.role.RoleManagerService$Internal;

        specialinvoke $r12.<com.android.server.role.RoleManagerService$Internal: void <init>(com.android.server.role.RoleManagerService,com.android.server.role.RoleManagerService$1)>(r0, null);

        staticinvoke <com.android.server.LocalServices: void addService(java.lang.Class,java.lang.Object)>(class "Lcom/android/server/role/RoleManagerInternal;", $r12);

        $r13 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/pm/permission/PermissionManagerServiceInternal;");

        r18 = (com.android.server.pm.permission.PermissionManagerServiceInternal) $r13;

        $r14 = new com.android.server.role.RoleManagerService$DefaultBrowserProvider;

        specialinvoke $r14.<com.android.server.role.RoleManagerService$DefaultBrowserProvider: void <init>(com.android.server.role.RoleManagerService,com.android.server.role.RoleManagerService$1)>(r0, null);

        virtualinvoke r18.<com.android.server.pm.permission.PermissionManagerServiceInternal: void setDefaultBrowserProvider(com.android.server.pm.permission.PermissionManagerServiceInternal$DefaultBrowserProvider)>($r14);

        $r15 = new com.android.server.role.RoleManagerService$DefaultDialerProvider;

        specialinvoke $r15.<com.android.server.role.RoleManagerService$DefaultDialerProvider: void <init>(com.android.server.role.RoleManagerService,com.android.server.role.RoleManagerService$1)>(r0, null);

        virtualinvoke r18.<com.android.server.pm.permission.PermissionManagerServiceInternal: void setDefaultDialerProvider(com.android.server.pm.permission.PermissionManagerServiceInternal$DefaultDialerProvider)>($r15);

        $r16 = new com.android.server.role.RoleManagerService$DefaultHomeProvider;

        specialinvoke $r16.<com.android.server.role.RoleManagerService$DefaultHomeProvider: void <init>(com.android.server.role.RoleManagerService,com.android.server.role.RoleManagerService$1)>(r0, null);

        virtualinvoke r18.<com.android.server.pm.permission.PermissionManagerServiceInternal: void setDefaultHomeProvider(com.android.server.pm.permission.PermissionManagerServiceInternal$DefaultHomeProvider)>($r16);

        specialinvoke r0.<com.android.server.role.RoleManagerService: void registerUserRemovedReceiver()>();

        return;
    }

    static java.lang.String access$1000()
    {
        java.lang.String $r0;

        $r0 = <com.android.server.role.RoleManagerService: java.lang.String LOG_TAG>;

        return $r0;
    }

    static android.app.role.RoleControllerManager access$1100(com.android.server.role.RoleManagerService, int)
    {
        com.android.server.role.RoleManagerService r0;
        int i0;
        android.app.role.RoleControllerManager $r1;

        r0 := @parameter0: com.android.server.role.RoleManagerService;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.server.role.RoleManagerService: android.app.role.RoleControllerManager getOrCreateController(int)>(i0);

        return $r1;
    }

    static android.os.RemoteCallbackList access$1200(com.android.server.role.RoleManagerService, int)
    {
        com.android.server.role.RoleManagerService r0;
        int i0;
        android.os.RemoteCallbackList $r1;

        r0 := @parameter0: com.android.server.role.RoleManagerService;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.server.role.RoleManagerService: android.os.RemoteCallbackList getOrCreateListeners(int)>(i0);

        return $r1;
    }

    static android.os.RemoteCallbackList access$1300(com.android.server.role.RoleManagerService, int)
    {
        com.android.server.role.RoleManagerService r0;
        int i0;
        android.os.RemoteCallbackList $r1;

        r0 := @parameter0: com.android.server.role.RoleManagerService;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.server.role.RoleManagerService: android.os.RemoteCallbackList getListeners(int)>(i0);

        return $r1;
    }

    static void access$400(com.android.server.role.RoleManagerService, int)
    {
        com.android.server.role.RoleManagerService r0;
        int i0;

        r0 := @parameter0: com.android.server.role.RoleManagerService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.role.RoleManagerService: void onRemoveUser(int)>(i0);

        return;
    }

    static void access$600(com.android.server.role.RoleManagerService, int)
    {
        com.android.server.role.RoleManagerService r0;
        int i0;

        r0 := @parameter0: com.android.server.role.RoleManagerService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.role.RoleManagerService: void maybeGrantDefaultRolesAsync(int)>(i0);

        return;
    }

    static com.android.server.role.RoleUserState access$700(com.android.server.role.RoleManagerService, int)
    {
        com.android.server.role.RoleManagerService r0;
        int i0;
        com.android.server.role.RoleUserState $r1;

        r0 := @parameter0: com.android.server.role.RoleManagerService;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.server.role.RoleManagerService: com.android.server.role.RoleUserState getOrCreateUserState(int)>(i0);

        return $r1;
    }

    static android.app.AppOpsManager access$800(com.android.server.role.RoleManagerService)
    {
        com.android.server.role.RoleManagerService r0;
        android.app.AppOpsManager $r1;

        r0 := @parameter0: com.android.server.role.RoleManagerService;

        $r1 = r0.<com.android.server.role.RoleManagerService: android.app.AppOpsManager mAppOpsManager>;

        return $r1;
    }

    static android.os.UserManagerInternal access$900(com.android.server.role.RoleManagerService)
    {
        com.android.server.role.RoleManagerService r0;
        android.os.UserManagerInternal $r1;

        r0 := @parameter0: com.android.server.role.RoleManagerService;

        $r1 = r0.<com.android.server.role.RoleManagerService: android.os.UserManagerInternal mUserManagerInternal>;

        return $r1;
    }

    private static java.lang.String computeComponentStateHash(int)
    {
        int i0;
        android.content.pm.PackageManagerInternal r0;
        java.lang.Object $r2;
        java.io.ByteArrayOutputStream $r3;
        com.android.server.role._$$Lambda$RoleManagerService$D_kb5EPaMwRx7H5Az2cV4ORPgIY $r4;
        java.util.function.Consumer $r5;
        byte[] $r6;
        java.lang.String $r7;

        i0 := @parameter0: int;

        $r2 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/content/pm/PackageManagerInternal;");

        r0 = (android.content.pm.PackageManagerInternal) $r2;

        $r3 = new java.io.ByteArrayOutputStream;

        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>();

        $r4 = new com.android.server.role._$$Lambda$RoleManagerService$D_kb5EPaMwRx7H5Az2cV4ORPgIY;

        specialinvoke $r4.<com.android.server.role._$$Lambda$RoleManagerService$D_kb5EPaMwRx7H5Az2cV4ORPgIY: void <init>(java.io.ByteArrayOutputStream,android.content.pm.PackageManagerInternal,int)>($r3, r0, i0);

        $r5 = staticinvoke <com.android.internal.util.FunctionalUtils: java.util.function.Consumer uncheckExceptions(com.android.internal.util.FunctionalUtils$ThrowingConsumer)>($r4);

        virtualinvoke r0.<android.content.pm.PackageManagerInternal: void forEachInstalledPackage(java.util.function.Consumer,int)>($r5, i0);

        $r6 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r7 = staticinvoke <android.util.PackageUtils: java.lang.String computeSha256Digest(byte[])>($r6);

        return $r7;
    }

    private android.os.RemoteCallbackList getListeners(int)
    {
        com.android.server.role.RoleManagerService r0;
        int i0;
        java.lang.Object r1, $r3;
        android.util.SparseArray $r2;
        java.lang.Throwable $r4;
        android.os.RemoteCallbackList r5;

        r0 := @this: com.android.server.role.RoleManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.role.RoleManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.role.RoleManagerService: android.util.SparseArray mListeners>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (android.os.RemoteCallbackList) $r3;

        exitmonitor r1;

     label2:
        return r5;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private android.app.role.RoleControllerManager getOrCreateController(int)
    {
        com.android.server.role.RoleManagerService r0;
        int i0;
        java.lang.Object r1, $r3;
        android.util.SparseArray $r2, $r7;
        java.lang.String $r4;
        android.os.UserHandle $r5;
        android.os.Handler $r6;
        android.content.pm.PackageManager$NameNotFoundException $r8;
        java.lang.Throwable $r9;
        android.app.role.RoleControllerManager r10, r11;
        android.content.Context r12, r13;
        java.lang.RuntimeException r15;

        r0 := @this: com.android.server.role.RoleManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.role.RoleManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.role.RoleManagerService: android.util.SparseArray mControllers>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r10 = (android.app.role.RoleControllerManager) $r3;

     label02:
        r11 = r10;

        if r10 != null goto label09;

     label03:
        r12 = virtualinvoke r0.<com.android.server.role.RoleManagerService: android.content.Context getContext()>();

     label04:
        $r4 = virtualinvoke r12.<android.content.Context: java.lang.String getPackageName()>();

        $r5 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>(i0);

        r13 = virtualinvoke r12.<android.content.Context: android.content.Context createPackageContextAsUser(java.lang.String,int,android.os.UserHandle)>($r4, 0, $r5);

     label05:
        $r6 = staticinvoke <com.android.server.FgThread: android.os.Handler getHandler()>();

        r11 = staticinvoke <android.app.role.RoleControllerManager: android.app.role.RoleControllerManager createWithInitializedRemoteServiceComponentName(android.os.Handler,android.content.Context)>($r6, r13);

        $r7 = r0.<com.android.server.role.RoleManagerService: android.util.SparseArray mControllers>;

        virtualinvoke $r7.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r11);

     label06:
        goto label09;

     label07:
        $r8 := @caughtexception;

     label08:
        r15 = new java.lang.RuntimeException;

        specialinvoke r15.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r8);

        throw r15;

     label09:
        exitmonitor r1;

     label10:
        return r11;

     label11:
        $r9 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch android.content.pm.PackageManager$NameNotFoundException from label04 to label05 with label07;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    private android.os.RemoteCallbackList getOrCreateListeners(int)
    {
        com.android.server.role.RoleManagerService r0;
        int i0;
        java.lang.Object r1, $r4;
        android.os.RemoteCallbackList r2, r7;
        android.util.SparseArray $r3, $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.role.RoleManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.role.RoleManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.role.RoleManagerService: android.util.SparseArray mListeners>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (android.os.RemoteCallbackList) $r4;

     label2:
        r7 = r2;

        if r2 != null goto label5;

     label3:
        r7 = new android.os.RemoteCallbackList;

        specialinvoke r7.<android.os.RemoteCallbackList: void <init>()>();

     label4:
        $r5 = r0.<com.android.server.role.RoleManagerService: android.util.SparseArray mListeners>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r7);

     label5:
        exitmonitor r1;

     label6:
        return r7;

     label7:
        $r6 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    private com.android.server.role.RoleUserState getOrCreateUserState(int)
    {
        com.android.server.role.RoleManagerService r0;
        int i0;
        java.lang.Object r1, $r4;
        com.android.server.role.RoleUserState r2, r7;
        android.util.SparseArray $r3, $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.role.RoleManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.role.RoleManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.role.RoleManagerService: android.util.SparseArray mUserStates>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.role.RoleUserState) $r4;

     label2:
        r7 = r2;

        if r2 != null goto label5;

     label3:
        r7 = new com.android.server.role.RoleUserState;

        specialinvoke r7.<com.android.server.role.RoleUserState: void <init>(int,com.android.server.role.RoleUserState$Callback)>(i0, r0);

     label4:
        $r5 = r0.<com.android.server.role.RoleManagerService: android.util.SparseArray mUserStates>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r7);

     label5:
        exitmonitor r1;

     label6:
        return r7;

     label7:
        $r6 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public static void lambda$TCTA4I2bhEypguZihxs4ezif6t0(com.android.server.role.RoleManagerService, java.lang.String, int, java.lang.String, java.lang.String)
    {
        com.android.server.role.RoleManagerService r0;
        java.lang.String r1, r2, r3;
        int i0;

        r0 := @parameter0: com.android.server.role.RoleManagerService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        specialinvoke r0.<com.android.server.role.RoleManagerService: void notifyRoleHoldersChanged(java.lang.String,int,java.lang.String,java.lang.String)>(r1, i0, r2, r3);

        return;
    }

    static void lambda$computeComponentStateHash$2(java.io.ByteArrayOutputStream, android.content.pm.PackageManagerInternal, int, com.android.server.pm.parsing.pkg.AndroidPackage) throws java.lang.Exception
    {
        java.io.ByteArrayOutputStream r0;
        com.android.server.pm.parsing.pkg.AndroidPackage r1;
        android.util.ArraySet r2, r19;
        int i0, $i2, i3, i4, i5, i6, i7, i8;
        java.lang.String $r3, $r6, $r7, $r8, $r13, $r16;
        byte[] $r4, $r5, $r11, $r14, $r17;
        long $l1;
        android.content.pm.PackageParser$SigningDetails $r9;
        android.content.pm.Signature $r10;
        java.lang.Object $r12, $r15;
        android.content.pm.PackageManagerInternal r18;
        android.content.pm.Signature[] r20;

        r0 := @parameter0: java.io.ByteArrayOutputStream;

        r18 := @parameter1: android.content.pm.PackageManagerInternal;

        i3 := @parameter2: int;

        r1 := @parameter3: com.android.server.pm.parsing.pkg.AndroidPackage;

        $r3 = interfaceinvoke r1.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getPackageName()>();

        $r4 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r0.<java.io.ByteArrayOutputStream: void write(byte[])>($r4);

        $l1 = interfaceinvoke r1.<com.android.server.pm.parsing.pkg.AndroidPackage: long getLongVersionCode()>();

        $r5 = staticinvoke <com.android.internal.util.BitUtils: byte[] toBytes(long)>($l1);

        virtualinvoke r0.<java.io.ByteArrayOutputStream: void write(byte[])>($r5);

        $r6 = interfaceinvoke r1.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getPackageName()>();

        $i2 = virtualinvoke r18.<android.content.pm.PackageManagerInternal: int getApplicationEnabledState(java.lang.String,int)>($r6, i3);

        virtualinvoke r0.<java.io.ByteArrayOutputStream: void write(int)>($i2);

        $r7 = interfaceinvoke r1.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getPackageName()>();

        r2 = virtualinvoke r18.<android.content.pm.PackageManagerInternal: android.util.ArraySet getEnabledComponents(java.lang.String,int)>($r7, i3);

        i0 = staticinvoke <com.android.internal.util.CollectionUtils: int size(java.util.Collection)>(r2);

        virtualinvoke r0.<java.io.ByteArrayOutputStream: void write(int)>(i0);

        i4 = 0;

     label1:
        if i4 >= i0 goto label2;

        $r15 = virtualinvoke r2.<android.util.ArraySet: java.lang.Object valueAt(int)>(i4);

        $r16 = (java.lang.String) $r15;

        $r17 = virtualinvoke $r16.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r0.<java.io.ByteArrayOutputStream: void write(byte[])>($r17);

        i4 = i4 + 1;

        goto label1;

     label2:
        $r8 = interfaceinvoke r1.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getPackageName()>();

        r19 = virtualinvoke r18.<android.content.pm.PackageManagerInternal: android.util.ArraySet getDisabledComponents(java.lang.String,int)>($r8, i3);

        i5 = staticinvoke <com.android.internal.util.CollectionUtils: int size(java.util.Collection)>(r19);

        i6 = 0;

     label3:
        if i6 >= i5 goto label4;

        $r12 = virtualinvoke r19.<android.util.ArraySet: java.lang.Object valueAt(int)>(i6);

        $r13 = (java.lang.String) $r12;

        $r14 = virtualinvoke $r13.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r0.<java.io.ByteArrayOutputStream: void write(byte[])>($r14);

        i6 = i6 + 1;

        goto label3;

     label4:
        $r9 = interfaceinvoke r1.<com.android.server.pm.parsing.pkg.AndroidPackage: android.content.pm.PackageParser$SigningDetails getSigningDetails()>();

        r20 = $r9.<android.content.pm.PackageParser$SigningDetails: android.content.pm.Signature[] signatures>;

        i7 = lengthof r20;

        i8 = 0;

     label5:
        if i8 >= i7 goto label6;

        $r10 = r20[i8];

        $r11 = virtualinvoke $r10.<android.content.pm.Signature: byte[] toByteArray()>();

        virtualinvoke r0.<java.io.ByteArrayOutputStream: void write(byte[])>($r11);

        i8 = i8 + 1;

        goto label5;

     label6:
        return;
    }

    static void lambda$maybeGrantDefaultRolesInternal$1(com.android.server.role.RoleUserState, java.lang.String, com.android.internal.infra.AndroidFuture, java.lang.Boolean)
    {
        com.android.server.role.RoleUserState r0;
        java.lang.String r1;
        com.android.internal.infra.AndroidFuture r2;
        java.lang.Boolean r3;
        boolean $z0;
        java.lang.RuntimeException $r4;

        r0 := @parameter0: com.android.server.role.RoleUserState;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.android.internal.infra.AndroidFuture;

        r3 := @parameter3: java.lang.Boolean;

        $z0 = virtualinvoke r3.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.server.role.RoleUserState: void setPackagesHash(java.lang.String)>(r1);

        virtualinvoke r2.<com.android.internal.infra.AndroidFuture: boolean complete(java.lang.Object)>(null);

        goto label2;

     label1:
        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>()>();

        virtualinvoke r2.<com.android.internal.infra.AndroidFuture: boolean completeExceptionally(java.lang.Throwable)>($r4);

     label2:
        return;
    }

    private void maybeGrantDefaultRolesAsync(int)
    {
        com.android.server.role.RoleManagerService r0;
        int i0;
        java.lang.Object r1, $r4;
        com.android.server.role._$$Lambda$RoleManagerService$p0uu3WH3gz96_kAWnyu6IUHMtCg r2;
        android.util.SparseArray $r3, $r5;
        java.lang.Throwable $r6;
        com.android.internal.infra.ThrottledRunnable r7, r8;
        android.os.Handler r9;

        r0 := @this: com.android.server.role.RoleManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.role.RoleManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.role.RoleManagerService: android.util.SparseArray mGrantDefaultRolesThrottledRunnables>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r7 = (com.android.internal.infra.ThrottledRunnable) $r4;

     label2:
        r8 = r7;

        if r7 != null goto label5;

     label3:
        r8 = new com.android.internal.infra.ThrottledRunnable;

        r9 = staticinvoke <com.android.server.FgThread: android.os.Handler getHandler()>();

        r2 = new com.android.server.role._$$Lambda$RoleManagerService$p0uu3WH3gz96_kAWnyu6IUHMtCg;

        specialinvoke r2.<com.android.server.role._$$Lambda$RoleManagerService$p0uu3WH3gz96_kAWnyu6IUHMtCg: void <init>(com.android.server.role.RoleManagerService,int)>(r0, i0);

        specialinvoke r8.<com.android.internal.infra.ThrottledRunnable: void <init>(android.os.Handler,long,java.lang.Runnable)>(r9, 1000L, r2);

     label4:
        $r5 = r0.<com.android.server.role.RoleManagerService: android.util.SparseArray mGrantDefaultRolesThrottledRunnables>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r8);

     label5:
        exitmonitor r1;

     label6:
        virtualinvoke r8.<com.android.internal.infra.ThrottledRunnable: void run()>();

        return;

     label7:
        $r6 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    private com.android.internal.infra.AndroidFuture maybeGrantDefaultRolesInternal(int)
    {
        com.android.server.role.RoleManagerService r0;
        int i0;
        com.android.server.role.RoleUserState r1;
        java.lang.String r2, $r3, r9;
        boolean $z0;
        com.android.internal.infra.AndroidFuture $r4, $r8;
        android.app.role.RoleControllerManager $r5;
        java.util.concurrent.Executor $r6;
        com.android.server.role._$$Lambda$RoleManagerService$4FcQsmMH6Dhstzx5gl80tO2TkTw $r7;

        r0 := @this: com.android.server.role.RoleManagerService;

        i0 := @parameter0: int;

        r1 = specialinvoke r0.<com.android.server.role.RoleManagerService: com.android.server.role.RoleUserState getOrCreateUserState(int)>(i0);

        r9 = virtualinvoke r1.<com.android.server.role.RoleUserState: java.lang.String getPackagesHash()>();

        r2 = staticinvoke <com.android.server.role.RoleManagerService: java.lang.String computeComponentStateHash(int)>(i0);

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r9, r2);

        if $z0 == 0 goto label1;

        $r8 = staticinvoke <com.android.internal.infra.AndroidFuture: com.android.internal.infra.AndroidFuture completedFuture(java.lang.Object)>(null);

        return $r8;

     label1:
        specialinvoke r0.<com.android.server.role.RoleManagerService: void maybeMigrateRole(java.lang.String,int)>("android.app.role.ASSISTANT", i0);

        specialinvoke r0.<com.android.server.role.RoleManagerService: void maybeMigrateRole(java.lang.String,int)>("android.app.role.BROWSER", i0);

        specialinvoke r0.<com.android.server.role.RoleManagerService: void maybeMigrateRole(java.lang.String,int)>("android.app.role.DIALER", i0);

        specialinvoke r0.<com.android.server.role.RoleManagerService: void maybeMigrateRole(java.lang.String,int)>("android.app.role.SMS", i0);

        specialinvoke r0.<com.android.server.role.RoleManagerService: void maybeMigrateRole(java.lang.String,int)>("android.app.role.EMERGENCY", i0);

        specialinvoke r0.<com.android.server.role.RoleManagerService: void maybeMigrateRole(java.lang.String,int)>("android.app.role.HOME", i0);

        $r3 = <com.android.server.role.RoleManagerService: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>($r3, "Granting default roles...");

        $r4 = new com.android.internal.infra.AndroidFuture;

        specialinvoke $r4.<com.android.internal.infra.AndroidFuture: void <init>()>();

        $r5 = specialinvoke r0.<com.android.server.role.RoleManagerService: android.app.role.RoleControllerManager getOrCreateController(int)>(i0);

        $r6 = staticinvoke <com.android.server.FgThread: java.util.concurrent.Executor getExecutor()>();

        $r7 = new com.android.server.role._$$Lambda$RoleManagerService$4FcQsmMH6Dhstzx5gl80tO2TkTw;

        specialinvoke $r7.<com.android.server.role._$$Lambda$RoleManagerService$4FcQsmMH6Dhstzx5gl80tO2TkTw: void <init>(com.android.server.role.RoleUserState,java.lang.String,com.android.internal.infra.AndroidFuture)>(r1, r2, $r4);

        virtualinvoke $r5.<android.app.role.RoleControllerManager: void grantDefaultRoles(java.util.concurrent.Executor,java.util.function.Consumer)>($r6, $r7);

        return $r4;
    }

    private void maybeGrantDefaultRolesSync(int)
    {
        com.android.server.role.RoleManagerService r0;
        int i0;
        java.util.concurrent.TimeUnit $r3;
        java.lang.Throwable $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r9, r11;
        com.android.internal.infra.AndroidFuture r10;

        r0 := @this: com.android.server.role.RoleManagerService;

        i0 := @parameter0: int;

        r10 = specialinvoke r0.<com.android.server.role.RoleManagerService: com.android.internal.infra.AndroidFuture maybeGrantDefaultRolesInternal(int)>(i0);

     label1:
        $r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        virtualinvoke r10.<com.android.internal.infra.AndroidFuture: java.lang.Object get(long,java.util.concurrent.TimeUnit)>(30L, $r3);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r11 = <com.android.server.role.RoleManagerService: java.lang.String LOG_TAG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to grant default roles for user ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(r11, $r9, $r5);

     label4:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
        catch java.util.concurrent.ExecutionException from label1 to label2 with label3;
        catch java.util.concurrent.TimeoutException from label1 to label2 with label3;
    }

    private void maybeMigrateRole(java.lang.String, int)
    {
        com.android.server.role.RoleManagerService r0;
        java.lang.String r1, r4, $r12, $r14;
        com.android.server.role.RoleUserState r2;
        java.util.List r3;
        int i0, i2, i3;
        boolean $z0, $z1;
        com.android.server.role.RoleManagerService$RoleHoldersResolver $r6;
        java.lang.StringBuilder $r7;
        java.lang.Object $r13;

        r0 := @this: com.android.server.role.RoleManagerService;

        r1 := @parameter0: java.lang.String;

        i2 := @parameter1: int;

        r2 = specialinvoke r0.<com.android.server.role.RoleManagerService: com.android.server.role.RoleUserState getOrCreateUserState(int)>(i2);

        $z0 = virtualinvoke r2.<com.android.server.role.RoleUserState: boolean isRoleAvailable(java.lang.String)>(r1);

        if $z0 != 0 goto label3;

        $r6 = r0.<com.android.server.role.RoleManagerService: com.android.server.role.RoleManagerService$RoleHoldersResolver mLegacyRoleResolver>;

        r3 = interfaceinvoke $r6.<com.android.server.role.RoleManagerService$RoleHoldersResolver: java.util.List getRoleHolders(java.lang.String,int)>(r1, i2);

        $z1 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        return;

     label1:
        r4 = <com.android.server.role.RoleManagerService: java.lang.String LOG_TAG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Migrating ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", legacy holders: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r4, $r12);

        virtualinvoke r2.<com.android.server.role.RoleUserState: boolean addRoleName(java.lang.String)>(r1);

        i0 = interfaceinvoke r3.<java.util.List: int size()>();

        i3 = 0;

     label2:
        if i3 >= i0 goto label3;

        $r13 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i3);

        $r14 = (java.lang.String) $r13;

        virtualinvoke r2.<com.android.server.role.RoleUserState: boolean addRoleHolder(java.lang.String,java.lang.String)>(r1, $r14);

        i3 = i3 + 1;

        goto label2;

     label3:
        return;
    }

    private void notifyRoleHoldersChanged(java.lang.String, int, java.lang.String, java.lang.String)
    {
        com.android.server.role.RoleManagerService r0;
        java.lang.String r1, r2, r3, $r4;
        int i0;
        boolean $z0;
        android.content.Context $r5;
        android.os.UserHandle $r6;
        android.os.RemoteCallbackList r7, r8;

        r0 := @this: com.android.server.role.RoleManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r7 = specialinvoke r0.<com.android.server.role.RoleManagerService: android.os.RemoteCallbackList getListeners(int)>(i0);

        if r7 == null goto label1;

        specialinvoke r0.<com.android.server.role.RoleManagerService: void notifyRoleHoldersChangedForListeners(android.os.RemoteCallbackList,java.lang.String,int)>(r7, r1, i0);

     label1:
        r8 = specialinvoke r0.<com.android.server.role.RoleManagerService: android.os.RemoteCallbackList getListeners(int)>(-1);

        if r8 == null goto label2;

        specialinvoke r0.<com.android.server.role.RoleManagerService: void notifyRoleHoldersChangedForListeners(android.os.RemoteCallbackList,java.lang.String,int)>(r8, r1, i0);

     label2:
        $r4 = "android.app.role.SMS";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

        $r5 = virtualinvoke r0.<com.android.server.role.RoleManagerService: android.content.Context getContext()>();

        $r6 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>(i0);

        staticinvoke <com.android.internal.telephony.SmsApplication: void broadcastSmsAppChange(android.content.Context,android.os.UserHandle,java.lang.String,java.lang.String)>($r5, $r6, r2, r3);

     label3:
        return;
    }

    private void notifyRoleHoldersChangedForListeners(android.os.RemoteCallbackList, java.lang.String, int)
    {
        com.android.server.role.RoleManagerService r0;
        android.os.RemoteCallbackList r1;
        int i0, i1, i3;
        android.os.IInterface $r2;
        android.os.RemoteException $r3;
        java.lang.String $r4, r6;
        java.lang.Throwable $r5;
        android.app.role.IOnRoleHoldersChangedListener r7;

        r0 := @this: com.android.server.role.RoleManagerService;

        r1 := @parameter0: android.os.RemoteCallbackList;

        r6 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 = virtualinvoke r1.<android.os.RemoteCallbackList: int beginBroadcast()>();

        i3 = 0;

     label1:
        if i3 >= i1 goto label9;

     label2:
        $r2 = virtualinvoke r1.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i3);

        r7 = (android.app.role.IOnRoleHoldersChangedListener) $r2;

     label3:
        interfaceinvoke r7.<android.app.role.IOnRoleHoldersChangedListener: void onRoleHoldersChanged(java.lang.String,int)>(r6, i0);

     label4:
        goto label7;

     label5:
        $r3 := @caughtexception;

     label6:
        $r4 = <com.android.server.role.RoleManagerService: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "Error calling OnRoleHoldersChangedListener", $r3);

     label7:
        i3 = i3 + 1;

        goto label1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.RemoteCallbackList: void finishBroadcast()>();

        throw $r5;

     label9:
        virtualinvoke r1.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

        catch java.lang.Throwable from label2 to label3 with label8;
        catch android.os.RemoteException from label3 to label4 with label5;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    private void onRemoveUser(int)
    {
        com.android.server.role.RoleManagerService r0;
        int i0;
        java.lang.Object r1, $r5, $r8;
        android.os.RemoteCallbackList r2;
        android.util.SparseArray $r3, $r4, $r6, $r7;
        java.lang.Throwable $r9;
        com.android.server.role.RoleUserState r10;

        r0 := @this: com.android.server.role.RoleManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.role.RoleManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.role.RoleManagerService: android.util.SparseArray mGrantDefaultRolesThrottledRunnables>;

        virtualinvoke $r3.<android.util.SparseArray: void remove(int)>(i0);

        $r4 = r0.<com.android.server.role.RoleManagerService: android.util.SparseArray mListeners>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object removeReturnOld(int)>(i0);

        r2 = (android.os.RemoteCallbackList) $r5;

        $r6 = r0.<com.android.server.role.RoleManagerService: android.util.SparseArray mControllers>;

        virtualinvoke $r6.<android.util.SparseArray: void remove(int)>(i0);

        $r7 = r0.<com.android.server.role.RoleManagerService: android.util.SparseArray mUserStates>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object removeReturnOld(int)>(i0);

        r10 = (com.android.server.role.RoleUserState) $r8;

        exitmonitor r1;

     label2:
        if r2 == null goto label3;

        virtualinvoke r2.<android.os.RemoteCallbackList: void kill()>();

     label3:
        if r10 == null goto label4;

        virtualinvoke r10.<com.android.server.role.RoleUserState: void destroy()>();

     label4:
        return;

     label5:
        $r9 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    private void registerUserRemovedReceiver()
    {
        com.android.server.role.RoleManagerService r0;
        android.content.IntentFilter $r2;
        android.content.Context $r3;
        com.android.server.role.RoleManagerService$1 $r4;
        android.os.UserHandle $r5;

        r0 := @this: com.android.server.role.RoleManagerService;

        $r2 = new android.content.IntentFilter;

        specialinvoke $r2.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_REMOVED");

        $r3 = virtualinvoke r0.<com.android.server.role.RoleManagerService: android.content.Context getContext()>();

        $r4 = new com.android.server.role.RoleManagerService$1;

        specialinvoke $r4.<com.android.server.role.RoleManagerService$1: void <init>(com.android.server.role.RoleManagerService)>(r0);

        $r5 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r3.<android.content.Context: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r4, $r5, $r2, null, null);

        return;
    }

    public void lambda$maybeGrantDefaultRolesAsync$0$RoleManagerService(int)
    {
        com.android.server.role.RoleManagerService r0;
        int i0;

        r0 := @this: com.android.server.role.RoleManagerService;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.role.RoleManagerService: com.android.internal.infra.AndroidFuture maybeGrantDefaultRolesInternal(int)>(i0);

        return;
    }

    public void onRoleHoldersChanged(java.lang.String, int, java.lang.String, java.lang.String)
    {
        com.android.server.role.RoleManagerService r0;
        java.lang.String r1, r2, r3;
        int i0;
        android.os.Handler $r4;
        com.android.server.role.'-$$Lambda$RoleManagerService$TCTA4I2bhEypguZihxs4ezif6t0' $r5;
        java.lang.Integer $r6;
        android.os.Message $r7;
        com.android.internal.util.function.QuintConsumer r8;

        r0 := @this: com.android.server.role.RoleManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r4 = r0.<com.android.server.role.RoleManagerService: android.os.Handler mListenerHandler>;

        $r5 = <com.android.server.role._$$Lambda$RoleManagerService$TCTA4I2bhEypguZihxs4ezif6t0: com.android.server.role.'-$$Lambda$RoleManagerService$TCTA4I2bhEypguZihxs4ezif6t0' INSTANCE>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r8 = (com.android.internal.util.function.QuintConsumer) $r5;

        $r7 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(com.android.internal.util.function.QuintConsumer,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r8, r0, r1, $r6, r2, r3);

        virtualinvoke $r4.<android.os.Handler: boolean sendMessage(android.os.Message)>($r7);

        return;
    }

    public void onStart()
    {
        com.android.server.role.RoleManagerService r0;
        com.android.server.role.RoleManagerService$Stub $r2;
        android.content.IntentFilter $r3;
        android.content.Context $r4;
        com.android.server.role.RoleManagerService$2 $r5;
        android.os.UserHandle $r6;

        r0 := @this: com.android.server.role.RoleManagerService;

        $r2 = new com.android.server.role.RoleManagerService$Stub;

        specialinvoke $r2.<com.android.server.role.RoleManagerService$Stub: void <init>(com.android.server.role.RoleManagerService,com.android.server.role.RoleManagerService$1)>(r0, null);

        virtualinvoke r0.<com.android.server.role.RoleManagerService: void publishBinderService(java.lang.String,android.os.IBinder)>("role", $r2);

        $r3 = new android.content.IntentFilter;

        specialinvoke $r3.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r3.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_CHANGED");

        virtualinvoke $r3.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_ADDED");

        virtualinvoke $r3.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_REMOVED");

        virtualinvoke $r3.<android.content.IntentFilter: void addDataScheme(java.lang.String)>("package");

        virtualinvoke $r3.<android.content.IntentFilter: void setPriority(int)>(1000);

        $r4 = virtualinvoke r0.<com.android.server.role.RoleManagerService: android.content.Context getContext()>();

        $r5 = new com.android.server.role.RoleManagerService$2;

        specialinvoke $r5.<com.android.server.role.RoleManagerService$2: void <init>(com.android.server.role.RoleManagerService)>(r0);

        $r6 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r4.<android.content.Context: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r5, $r6, $r3, null, null);

        return;
    }

    public void onStartUser(int)
    {
        com.android.server.role.RoleManagerService r0;
        int i0;

        r0 := @this: com.android.server.role.RoleManagerService;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.role.RoleManagerService: void maybeGrantDefaultRolesSync(int)>(i0);

        return;
    }
}
