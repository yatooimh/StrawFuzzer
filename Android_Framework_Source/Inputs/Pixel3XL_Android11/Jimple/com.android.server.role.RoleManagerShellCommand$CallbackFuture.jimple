class com.android.server.role.RoleManagerShellCommand$CallbackFuture extends java.util.concurrent.CompletableFuture
{
    final com.android.server.role.RoleManagerShellCommand this$0;

    private void <init>(com.android.server.role.RoleManagerShellCommand)
    {
        com.android.server.role.RoleManagerShellCommand$CallbackFuture r0;
        com.android.server.role.RoleManagerShellCommand r1;

        r0 := @this: com.android.server.role.RoleManagerShellCommand$CallbackFuture;

        r1 := @parameter0: com.android.server.role.RoleManagerShellCommand;

        r0.<com.android.server.role.RoleManagerShellCommand$CallbackFuture: com.android.server.role.RoleManagerShellCommand this$0> = r1;

        specialinvoke r0.<java.util.concurrent.CompletableFuture: void <init>()>();

        return;
    }

    void <init>(com.android.server.role.RoleManagerShellCommand, com.android.server.role.RoleManagerShellCommand$1)
    {
        com.android.server.role.RoleManagerShellCommand$CallbackFuture r0;
        com.android.server.role.RoleManagerShellCommand r1;
        com.android.server.role.RoleManagerShellCommand$1 r2;

        r0 := @this: com.android.server.role.RoleManagerShellCommand$CallbackFuture;

        r1 := @parameter0: com.android.server.role.RoleManagerShellCommand;

        r2 := @parameter1: com.android.server.role.RoleManagerShellCommand$1;

        specialinvoke r0.<com.android.server.role.RoleManagerShellCommand$CallbackFuture: void <init>(com.android.server.role.RoleManagerShellCommand)>(r1);

        return;
    }

    public android.os.RemoteCallback createCallback()
    {
        com.android.server.role.RoleManagerShellCommand$CallbackFuture r0;
        android.os.RemoteCallback $r1;
        com.android.server.role._$$Lambda$RoleManagerShellCommand$CallbackFuture$ya02agfKUbaiv_zXc0xWEop421Q $r2;

        r0 := @this: com.android.server.role.RoleManagerShellCommand$CallbackFuture;

        $r1 = new android.os.RemoteCallback;

        $r2 = new com.android.server.role._$$Lambda$RoleManagerShellCommand$CallbackFuture$ya02agfKUbaiv_zXc0xWEop421Q;

        specialinvoke $r2.<com.android.server.role._$$Lambda$RoleManagerShellCommand$CallbackFuture$ya02agfKUbaiv_zXc0xWEop421Q: void <init>(com.android.server.role.RoleManagerShellCommand$CallbackFuture)>(r0);

        specialinvoke $r1.<android.os.RemoteCallback: void <init>(android.os.RemoteCallback$OnResultListener)>($r2);

        return $r1;
    }

    public void lambda$createCallback$0$RoleManagerShellCommand$CallbackFuture(android.os.Bundle)
    {
        com.android.server.role.RoleManagerShellCommand$CallbackFuture r0;
        android.os.Bundle r1;
        java.lang.RuntimeException $r2;
        boolean z2;

        r0 := @this: com.android.server.role.RoleManagerShellCommand$CallbackFuture;

        r1 := @parameter0: android.os.Bundle;

        if r1 == null goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        if z2 == 0 goto label3;

        virtualinvoke r0.<com.android.server.role.RoleManagerShellCommand$CallbackFuture: boolean complete(java.lang.Object)>(null);

        goto label4;

     label3:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Failed");

        virtualinvoke r0.<com.android.server.role.RoleManagerShellCommand$CallbackFuture: boolean completeExceptionally(java.lang.Throwable)>($r2);

     label4:
        return;
    }

    public int waitForResult()
    {
        com.android.server.role.RoleManagerShellCommand$CallbackFuture r0;
        java.io.PrintWriter r2;
        java.util.concurrent.TimeUnit $r4;
        java.lang.Exception $r6;
        com.android.server.role.RoleManagerShellCommand $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r10, $r12;

        r0 := @this: com.android.server.role.RoleManagerShellCommand$CallbackFuture;

     label1:
        $r4 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        virtualinvoke r0.<com.android.server.role.RoleManagerShellCommand$CallbackFuture: java.lang.Object get(long,java.util.concurrent.TimeUnit)>(5L, $r4);

     label2:
        return 0;

     label3:
        $r6 := @caughtexception;

        $r7 = r0.<com.android.server.role.RoleManagerShellCommand$CallbackFuture: com.android.server.role.RoleManagerShellCommand this$0>;

        r2 = virtualinvoke $r7.<com.android.server.role.RoleManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: see logcat for details.\n");

        $r10 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r6);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        return -1;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
