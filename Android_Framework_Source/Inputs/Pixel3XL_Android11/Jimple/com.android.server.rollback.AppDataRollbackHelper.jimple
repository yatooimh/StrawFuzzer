public class com.android.server.rollback.AppDataRollbackHelper extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final com.android.server.pm.ApexManager mApexManager;
    private final com.android.server.pm.Installer mInstaller;

    public void <init>(com.android.server.pm.Installer)
    {
        com.android.server.rollback.AppDataRollbackHelper r0;
        com.android.server.pm.Installer r1;
        com.android.server.pm.ApexManager $r2;

        r0 := @this: com.android.server.rollback.AppDataRollbackHelper;

        r1 := @parameter0: com.android.server.pm.Installer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.rollback.AppDataRollbackHelper: com.android.server.pm.Installer mInstaller> = r1;

        $r2 = staticinvoke <com.android.server.pm.ApexManager: com.android.server.pm.ApexManager getInstance()>();

        r0.<com.android.server.rollback.AppDataRollbackHelper: com.android.server.pm.ApexManager mApexManager> = $r2;

        return;
    }

    void <init>(com.android.server.pm.Installer, com.android.server.pm.ApexManager)
    {
        com.android.server.rollback.AppDataRollbackHelper r0;
        com.android.server.pm.Installer r1;
        com.android.server.pm.ApexManager r2;

        r0 := @this: com.android.server.rollback.AppDataRollbackHelper;

        r1 := @parameter0: com.android.server.pm.Installer;

        r2 := @parameter1: com.android.server.pm.ApexManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.rollback.AppDataRollbackHelper: com.android.server.pm.Installer mInstaller> = r1;

        r0.<com.android.server.rollback.AppDataRollbackHelper: com.android.server.pm.ApexManager mApexManager> = r2;

        return;
    }

    private boolean doRestoreOrWipe(android.content.rollback.PackageRollbackInfo, int, int, int, java.lang.String, int)
    {
        com.android.server.rollback.AppDataRollbackHelper r0;
        android.content.rollback.PackageRollbackInfo r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7;
        boolean $z0;
        com.android.server.pm.Installer $r3, $r5;
        java.lang.String $r4, $r6, $r8, $r12, $r16, r17;
        com.android.server.pm.ApexManager $r7;
        com.android.server.pm.Installer$InstallerException $r9;
        java.lang.StringBuilder $r10;

        r0 := @this: com.android.server.rollback.AppDataRollbackHelper;

        r1 := @parameter0: android.content.rollback.PackageRollbackInfo;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r17 := @parameter4: java.lang.String;

        i3 := @parameter5: int;

        $z0 = virtualinvoke r1.<android.content.rollback.PackageRollbackInfo: boolean isApex()>();

        if $z0 == 0 goto label2;

        $i5 = virtualinvoke r1.<android.content.rollback.PackageRollbackInfo: int getRollbackDataPolicy()>();

        if $i5 == 0 goto label1;

        goto label7;

     label1:
        $i6 = i3 & 2;

        if $i6 == 0 goto label7;

        $r7 = r0.<com.android.server.rollback.AppDataRollbackHelper: com.android.server.pm.ApexManager mApexManager>;

        $r8 = virtualinvoke r1.<android.content.rollback.PackageRollbackInfo: java.lang.String getPackageName()>();

        virtualinvoke $r7.<com.android.server.pm.ApexManager: boolean restoreCeData(int,int,java.lang.String)>(i0, i1, $r8);

        goto label7;

     label2:
        i4 = virtualinvoke r1.<android.content.rollback.PackageRollbackInfo: int getRollbackDataPolicy()>();

     label3:
        if i4 == 0 goto label6;

        if i4 == 1 goto label4;

        goto label7;

     label4:
        $r5 = r0.<com.android.server.rollback.AppDataRollbackHelper: com.android.server.pm.Installer mInstaller>;

        $r6 = virtualinvoke r1.<android.content.rollback.PackageRollbackInfo: java.lang.String getPackageName()>();

        virtualinvoke $r5.<com.android.server.pm.Installer: void clearAppData(java.lang.String,java.lang.String,int,int,long)>(null, $r6, i0, i3, 0L);

     label5:
        goto label7;

     label6:
        $r3 = r0.<com.android.server.rollback.AppDataRollbackHelper: com.android.server.pm.Installer mInstaller>;

        $r4 = virtualinvoke r1.<android.content.rollback.PackageRollbackInfo: java.lang.String getPackageName()>();

        virtualinvoke $r3.<com.android.server.pm.Installer: boolean restoreAppDataSnapshot(java.lang.String,int,java.lang.String,int,int,int)>($r4, i2, r17, i0, i1, i3);

     label7:
        return 1;

     label8:
        $r9 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to restore/wipe app data: ");

        $r12 = virtualinvoke r1.<android.content.rollback.PackageRollbackInfo: java.lang.String getPackageName()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" policy=");

        $i7 = virtualinvoke r1.<android.content.rollback.PackageRollbackInfo: int getRollbackDataPolicy()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r16 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RollbackManager", $r16, $r9);

        return 0;

        catch com.android.server.pm.Installer$InstallerException from label2 to label3 with label8;
        catch com.android.server.pm.Installer$InstallerException from label4 to label5 with label8;
        catch com.android.server.pm.Installer$InstallerException from label6 to label7 with label8;
    }

    private boolean doSnapshot(android.content.rollback.PackageRollbackInfo, int, int, int)
    {
        com.android.server.rollback.AppDataRollbackHelper r0;
        android.content.rollback.PackageRollbackInfo r1;
        int i0, i1, i2, $i3, $i4;
        boolean $z0;
        com.android.server.pm.Installer $r4;
        java.lang.String $r5, $r7, $r11, $r15;
        com.android.server.pm.ApexManager $r6;
        byte $b5;
        com.android.server.pm.Installer$InstallerException $r8;
        java.lang.StringBuilder $r9;
        long l7, l8;

        r0 := @this: com.android.server.rollback.AppDataRollbackHelper;

        r1 := @parameter0: android.content.rollback.PackageRollbackInfo;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $z0 = virtualinvoke r1.<android.content.rollback.PackageRollbackInfo: boolean isApex()>();

        if $z0 == 0 goto label2;

        $i4 = i2 & 2;

        if $i4 == 0 goto label5;

        $r6 = r0.<com.android.server.rollback.AppDataRollbackHelper: com.android.server.pm.ApexManager mApexManager>;

        $r7 = virtualinvoke r1.<android.content.rollback.PackageRollbackInfo: java.lang.String getPackageName()>();

        l7 = virtualinvoke $r6.<com.android.server.pm.ApexManager: long snapshotCeData(int,int,java.lang.String)>(i0, i1, $r7);

        $b5 = l7 cmp 0L;

        if $b5 <= 0 goto label1;

        virtualinvoke r1.<android.content.rollback.PackageRollbackInfo: void putCeSnapshotInode(int,long)>(i0, l7);

        goto label5;

     label1:
        return 0;

     label2:
        $r4 = r0.<com.android.server.rollback.AppDataRollbackHelper: com.android.server.pm.Installer mInstaller>;

        $r5 = virtualinvoke r1.<android.content.rollback.PackageRollbackInfo: java.lang.String getPackageName()>();

        l8 = virtualinvoke $r4.<com.android.server.pm.Installer: long snapshotAppData(java.lang.String,int,int,int)>($r5, i0, i1, i2);

     label3:
        $i3 = i2 & 2;

        if $i3 == 0 goto label5;

     label4:
        virtualinvoke r1.<android.content.rollback.PackageRollbackInfo: void putCeSnapshotInode(int,long)>(i0, l8);

     label5:
        return 1;

     label6:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create app data snapshot for: ");

        $r11 = virtualinvoke r1.<android.content.rollback.PackageRollbackInfo: java.lang.String getPackageName()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", userId: ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RollbackManager", $r15, $r8);

        return 0;

        catch com.android.server.pm.Installer$InstallerException from label2 to label3 with label6;
        catch com.android.server.pm.Installer$InstallerException from label4 to label5 with label6;
    }

    boolean commitPendingBackupAndRestoreForUser(int, com.android.server.rollback.Rollback)
    {
        com.android.server.rollback.AppDataRollbackHelper r0;
        int i0, $i1, $i2, $i3, $i4, i5;
        com.android.server.rollback.Rollback r1;
        java.util.Iterator r2;
        android.content.rollback.PackageRollbackInfo r3;
        android.util.IntArray r4;
        android.content.rollback.PackageRollbackInfo$RestoreInfo r5;
        android.content.rollback.RollbackInfo $r6, $r9, $r11;
        java.util.List $r7;
        boolean $z0, $z1, $z2, z3, z4, z5;
        java.lang.Object $r8;
        java.lang.String $r10;

        r0 := @this: com.android.server.rollback.AppDataRollbackHelper;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.rollback.Rollback;

        z3 = 0;

        $r6 = r1.<com.android.server.rollback.Rollback: android.content.rollback.RollbackInfo info>;

        $r7 = virtualinvoke $r6.<android.content.rollback.RollbackInfo: java.util.List getPackages()>();

        r2 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label9;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.content.rollback.PackageRollbackInfo) $r8;

        r4 = virtualinvoke r3.<android.content.rollback.PackageRollbackInfo: android.util.IntArray getPendingBackups()>();

        if r4 == null goto label2;

        $i4 = virtualinvoke r4.<android.util.IntArray: int indexOf(int)>(i0);

        if $i4 == -1 goto label2;

        z3 = 1;

        z4 = 1;

        goto label3;

     label2:
        z4 = 0;

     label3:
        r5 = virtualinvoke r3.<android.content.rollback.PackageRollbackInfo: android.content.rollback.PackageRollbackInfo$RestoreInfo getRestoreInfo(int)>(i0);

        if r5 == null goto label4;

        z3 = 1;

        z5 = 1;

        goto label5;

     label4:
        z5 = 0;

     label5:
        if z4 == 0 goto label6;

        if z5 == 0 goto label6;

        virtualinvoke r3.<android.content.rollback.PackageRollbackInfo: void removePendingBackup(int)>(i0);

        virtualinvoke r3.<android.content.rollback.PackageRollbackInfo: void removePendingRestoreInfo(int)>(i0);

        goto label8;

     label6:
        if z4 == 0 goto label7;

        i5 = virtualinvoke r4.<android.util.IntArray: int indexOf(int)>(i0);

        $r11 = r1.<com.android.server.rollback.Rollback: android.content.rollback.RollbackInfo info>;

        $i3 = virtualinvoke $r11.<android.content.rollback.RollbackInfo: int getRollbackId()>();

        $z2 = specialinvoke r0.<com.android.server.rollback.AppDataRollbackHelper: boolean doSnapshot(android.content.rollback.PackageRollbackInfo,int,int,int)>(r3, i0, $i3, 2);

        if $z2 == 0 goto label7;

        virtualinvoke r4.<android.util.IntArray: void remove(int)>(i5);

        goto label7;

     label7:
        if z5 == 0 goto label8;

        $r9 = r1.<com.android.server.rollback.Rollback: android.content.rollback.RollbackInfo info>;

        $i1 = virtualinvoke $r9.<android.content.rollback.RollbackInfo: int getRollbackId()>();

        $i2 = r5.<android.content.rollback.PackageRollbackInfo$RestoreInfo: int appId>;

        $r10 = r5.<android.content.rollback.PackageRollbackInfo$RestoreInfo: java.lang.String seInfo>;

        $z1 = specialinvoke r0.<com.android.server.rollback.AppDataRollbackHelper: boolean doRestoreOrWipe(android.content.rollback.PackageRollbackInfo,int,int,int,java.lang.String,int)>(r3, i0, $i1, $i2, $r10, 2);

        if $z1 == 0 goto label8;

        virtualinvoke r3.<android.content.rollback.PackageRollbackInfo: void removeRestoreInfo(android.content.rollback.PackageRollbackInfo$RestoreInfo)>(r5);

     label8:
        goto label1;

     label9:
        return z3;
    }

    public void destroyApexDeSnapshots(int)
    {
        com.android.server.rollback.AppDataRollbackHelper r0;
        int i0;
        com.android.server.pm.ApexManager $r1;

        r0 := @this: com.android.server.rollback.AppDataRollbackHelper;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.rollback.AppDataRollbackHelper: com.android.server.pm.ApexManager mApexManager>;

        virtualinvoke $r1.<com.android.server.pm.ApexManager: boolean destroyDeSnapshots(int)>(i0);

        return;
    }

    public void destroyAppDataSnapshot(int, android.content.rollback.PackageRollbackInfo, int)
    {
        com.android.server.rollback.AppDataRollbackHelper r0;
        int i0, i1;
        android.content.rollback.PackageRollbackInfo r1;
        long l2;
        byte $b3, $b4, b6;
        com.android.server.pm.Installer $r3;
        java.lang.String $r4, $r8, $r10;
        com.android.server.pm.Installer$InstallerException $r5;
        java.lang.StringBuilder $r6;
        android.util.SparseLongArray r11;

        r0 := @this: com.android.server.rollback.AppDataRollbackHelper;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.rollback.PackageRollbackInfo;

        i1 := @parameter2: int;

        b6 = 1;

        r11 = virtualinvoke r1.<android.content.rollback.PackageRollbackInfo: android.util.SparseLongArray getCeSnapshotInodes()>();

        l2 = virtualinvoke r11.<android.util.SparseLongArray: long get(int)>(i1);

        $b3 = l2 cmp 0L;

        if $b3 <= 0 goto label1;

        b6 = 1 | 2;

     label1:
        $r3 = r0.<com.android.server.rollback.AppDataRollbackHelper: com.android.server.pm.Installer mInstaller>;

        $r4 = virtualinvoke r1.<android.content.rollback.PackageRollbackInfo: java.lang.String getPackageName()>();

        virtualinvoke $r3.<com.android.server.pm.Installer: boolean destroyAppDataSnapshot(java.lang.String,int,long,int,int)>($r4, i1, l2, i0, b6);

     label2:
        $b4 = b6 & 2;

        if $b4 == 0 goto label4;

     label3:
        virtualinvoke r11.<android.util.SparseLongArray: void delete(int)>(i1);

     label4:
        goto label6;

     label5:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to delete app data snapshot for ");

        $r8 = virtualinvoke r1.<android.content.rollback.PackageRollbackInfo: java.lang.String getPackageName()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RollbackManager", $r10, $r5);

     label6:
        return;

        catch com.android.server.pm.Installer$InstallerException from label1 to label2 with label5;
        catch com.android.server.pm.Installer$InstallerException from label3 to label4 with label5;
    }

    public boolean isUserCredentialLocked(int)
    {
        com.android.server.rollback.AppDataRollbackHelper r0;
        int i0;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.server.rollback.AppDataRollbackHelper;

        i0 := @parameter0: int;

        $z0 = staticinvoke <android.os.storage.StorageManager: boolean isFileEncryptedNativeOrEmulated()>();

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <android.os.storage.StorageManager: boolean isUserKeyUnlocked(int)>(i0);

        if $z1 != 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public boolean restoreAppData(int, android.content.rollback.PackageRollbackInfo, int, int, java.lang.String)
    {
        com.android.server.rollback.AppDataRollbackHelper r0;
        int i0, i1, i2, $i3, $i4;
        android.content.rollback.PackageRollbackInfo r1;
        java.lang.String r2;
        android.util.IntArray r3;
        java.util.ArrayList r4;
        boolean $z0, z3;
        android.content.rollback.PackageRollbackInfo$RestoreInfo $r5;
        byte b5;

        r0 := @this: com.android.server.rollback.AppDataRollbackHelper;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.rollback.PackageRollbackInfo;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: java.lang.String;

        r3 = virtualinvoke r1.<android.content.rollback.PackageRollbackInfo: android.util.IntArray getPendingBackups()>();

        r4 = virtualinvoke r1.<android.content.rollback.PackageRollbackInfo: java.util.ArrayList getPendingRestores()>();

        if r3 == null goto label1;

        $i3 = virtualinvoke r3.<android.util.IntArray: int indexOf(int)>(i1);

        if $i3 == -1 goto label1;

        $i4 = virtualinvoke r3.<android.util.IntArray: int indexOf(int)>(i1);

        virtualinvoke r3.<android.util.IntArray: void remove(int)>($i4);

        b5 = 1;

        z3 = 1;

        goto label3;

     label1:
        $z0 = virtualinvoke r0.<com.android.server.rollback.AppDataRollbackHelper: boolean isUserCredentialLocked(int)>(i1);

        if $z0 == 0 goto label2;

        $r5 = new android.content.rollback.PackageRollbackInfo$RestoreInfo;

        specialinvoke $r5.<android.content.rollback.PackageRollbackInfo$RestoreInfo: void <init>(int,int,java.lang.String)>(i1, i2, r2);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r5);

        b5 = 1;

        z3 = 1;

        goto label3;

     label2:
        b5 = 1 | 2;

        z3 = 0;

     label3:
        specialinvoke r0.<com.android.server.rollback.AppDataRollbackHelper: boolean doRestoreOrWipe(android.content.rollback.PackageRollbackInfo,int,int,int,java.lang.String,int)>(r1, i1, i0, i2, r2, b5);

        return z3;
    }

    public void snapshotAppData(int, android.content.rollback.PackageRollbackInfo, int[])
    {
        com.android.server.rollback.AppDataRollbackHelper r0;
        int i0, i1, i2, i4;
        android.content.rollback.PackageRollbackInfo r1;
        int[] r2;
        boolean $z0;
        java.lang.StringBuilder $r4;
        java.lang.String $r8;
        byte b5;

        r0 := @this: com.android.server.rollback.AppDataRollbackHelper;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.rollback.PackageRollbackInfo;

        r2 := @parameter2: int[];

        i1 = lengthof r2;

        i4 = 0;

     label1:
        if i4 >= i1 goto label4;

        i2 = r2[i4];

        $z0 = virtualinvoke r0.<com.android.server.rollback.AppDataRollbackHelper: boolean isUserCredentialLocked(int)>(i2);

        if $z0 == 0 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isn\'t unlocked, skipping CE userdata backup.");

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("RollbackManager", $r8);

        b5 = 1;

        virtualinvoke r1.<android.content.rollback.PackageRollbackInfo: void addPendingBackup(int)>(i2);

        goto label3;

     label2:
        b5 = 3;

     label3:
        specialinvoke r0.<com.android.server.rollback.AppDataRollbackHelper: boolean doSnapshot(android.content.rollback.PackageRollbackInfo,int,int,int)>(r1, i2, i0, b5);

        i4 = i4 + 1;

        goto label1;

     label4:
        return;
    }

    public static void <clinit>()
    {
        <com.android.server.rollback.AppDataRollbackHelper: java.lang.String TAG> = "RollbackManager";

        return;
    }
}
