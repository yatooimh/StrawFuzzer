class com.android.server.rollback.Rollback extends java.lang.Object
{
    static final int ROLLBACK_STATE_AVAILABLE;
    static final int ROLLBACK_STATE_COMMITTED;
    static final int ROLLBACK_STATE_DELETED;
    static final int ROLLBACK_STATE_ENABLING;
    private static final java.lang.String TAG;
    public final android.content.rollback.RollbackInfo info;
    private int mApkSessionId;
    private final java.io.File mBackupDir;
    private final android.util.SparseIntArray mExtensionVersions;
    public final java.lang.String mInstallerPackageName;
    private final java.lang.Object mLock;
    private int mNumPackageSessionsWithSuccess;
    private final int[] mPackageSessionIds;
    private boolean mRestoreUserDataInProgress;
    private final int mStagedSessionId;
    private int mState;
    private java.time.Instant mTimestamp;
    public final int mUserId;

    void <init>(int, java.io.File, int, int, java.lang.String)
    {
        com.android.server.rollback.Rollback r0;
        int i0, i1, i2;
        java.io.File r1;
        java.lang.String r2;
        android.util.SparseIntArray $r3;

        r0 := @this: com.android.server.rollback.Rollback;

        i0 := @parameter0: int;

        r1 := @parameter1: java.io.File;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: java.lang.String;

        $r3 = new android.util.SparseIntArray;

        specialinvoke $r3.<android.util.SparseIntArray: void <init>(int)>(0);

        specialinvoke r0.<com.android.server.rollback.Rollback: void <init>(int,java.io.File,int,int,java.lang.String,int[],android.util.SparseIntArray)>(i0, r1, i1, i2, r2, null, $r3);

        return;
    }

    void <init>(int, java.io.File, int, int, java.lang.String, int[], android.util.SparseIntArray)
    {
        com.android.server.rollback.Rollback r0;
        int i0, i1, i2;
        java.io.File r1;
        java.lang.String r2;
        android.util.SparseIntArray r3, $r11;
        java.lang.Object $r5;
        java.util.ArrayList $r6, $r8;
        android.content.rollback.RollbackInfo $r7;
        java.time.Instant $r9;
        int[] r12;
        boolean z0;

        r0 := @this: com.android.server.rollback.Rollback;

        i0 := @parameter0: int;

        r1 := @parameter1: java.io.File;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: java.lang.String;

        r12 := @parameter5: int[];

        r3 := @parameter6: android.util.SparseIntArray;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.rollback.Rollback: int mApkSessionId> = -1;

        r0.<com.android.server.rollback.Rollback: boolean mRestoreUserDataInProgress> = 0;

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        r0.<com.android.server.rollback.Rollback: java.lang.Object mLock> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        if i1 == -1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        $r7 = new android.content.rollback.RollbackInfo;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        specialinvoke $r7.<android.content.rollback.RollbackInfo: void <init>(int,java.util.List,boolean,java.util.List,int)>(i0, $r6, z0, $r8, -1);

        r0.<com.android.server.rollback.Rollback: android.content.rollback.RollbackInfo info> = $r7;

        r0.<com.android.server.rollback.Rollback: int mUserId> = i2;

        r0.<com.android.server.rollback.Rollback: java.lang.String mInstallerPackageName> = r2;

        r0.<com.android.server.rollback.Rollback: java.io.File mBackupDir> = r1;

        r0.<com.android.server.rollback.Rollback: int mStagedSessionId> = i1;

        r0.<com.android.server.rollback.Rollback: int mState> = 0;

        $r9 = staticinvoke <java.time.Instant: java.time.Instant now()>();

        r0.<com.android.server.rollback.Rollback: java.time.Instant mTimestamp> = $r9;

        if r12 == null goto label3;

        goto label4;

     label3:
        r12 = newarray (int)[0];

     label4:
        r0.<com.android.server.rollback.Rollback: int[] mPackageSessionIds> = r12;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r3);

        $r11 = (android.util.SparseIntArray) r3;

        r0.<com.android.server.rollback.Rollback: android.util.SparseIntArray mExtensionVersions> = $r11;

        return;
    }

    void <init>(android.content.rollback.RollbackInfo, java.io.File, java.time.Instant, int, int, int, boolean, int, java.lang.String, android.util.SparseIntArray)
    {
        com.android.server.rollback.Rollback r0;
        android.content.rollback.RollbackInfo r1;
        java.io.File r2;
        java.time.Instant r3;
        int i0, i1, i2, i3;
        boolean z0;
        java.lang.String r4;
        android.util.SparseIntArray r5, $r8;
        java.lang.Object $r6;
        int[] $r9;

        r0 := @this: com.android.server.rollback.Rollback;

        r1 := @parameter0: android.content.rollback.RollbackInfo;

        r2 := @parameter1: java.io.File;

        r3 := @parameter2: java.time.Instant;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        z0 := @parameter6: boolean;

        i3 := @parameter7: int;

        r4 := @parameter8: java.lang.String;

        r5 := @parameter9: android.util.SparseIntArray;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.rollback.Rollback: int mApkSessionId> = -1;

        r0.<com.android.server.rollback.Rollback: boolean mRestoreUserDataInProgress> = 0;

        $r6 = new java.lang.Object;

        specialinvoke $r6.<java.lang.Object: void <init>()>();

        r0.<com.android.server.rollback.Rollback: java.lang.Object mLock> = $r6;

        r0.<com.android.server.rollback.Rollback: android.content.rollback.RollbackInfo info> = r1;

        r0.<com.android.server.rollback.Rollback: int mUserId> = i3;

        r0.<com.android.server.rollback.Rollback: java.lang.String mInstallerPackageName> = r4;

        r0.<com.android.server.rollback.Rollback: java.io.File mBackupDir> = r2;

        r0.<com.android.server.rollback.Rollback: java.time.Instant mTimestamp> = r3;

        r0.<com.android.server.rollback.Rollback: int mStagedSessionId> = i0;

        r0.<com.android.server.rollback.Rollback: int mState> = i1;

        r0.<com.android.server.rollback.Rollback: int mApkSessionId> = i2;

        r0.<com.android.server.rollback.Rollback: boolean mRestoreUserDataInProgress> = z0;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r5);

        $r8 = (android.util.SparseIntArray) r5;

        r0.<com.android.server.rollback.Rollback: android.util.SparseIntArray mExtensionVersions> = $r8;

        $r9 = newarray (int)[0];

        r0.<com.android.server.rollback.Rollback: int[] mPackageSessionIds> = $r9;

        return;
    }

    private boolean containsApex()
    {
        com.android.server.rollback.Rollback r0;
        java.util.Iterator r1;
        android.content.rollback.RollbackInfo $r2;
        java.util.List $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        android.content.rollback.PackageRollbackInfo $r5;

        r0 := @this: com.android.server.rollback.Rollback;

        $r2 = r0.<com.android.server.rollback.Rollback: android.content.rollback.RollbackInfo info>;

        $r3 = virtualinvoke $r2.<android.content.rollback.RollbackInfo: java.util.List getPackages()>();

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (android.content.rollback.PackageRollbackInfo) $r4;

        $z1 = virtualinvoke $r5.<android.content.rollback.PackageRollbackInfo: boolean isApex()>();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    static boolean extensionVersionReductionWouldViolateConstraint(android.util.SparseIntArray, android.content.pm.PackageManagerInternal)
    {
        android.util.SparseIntArray r0, r3;
        android.content.pm.PackageManagerInternal r1;
        java.util.List r2;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        com.android.server.pm.PackageList $r4;
        java.lang.Object $r5;
        java.lang.String $r6;
        com.android.server.pm.parsing.pkg.AndroidPackage $r7;

        r0 := @parameter0: android.util.SparseIntArray;

        r1 := @parameter1: android.content.pm.PackageManagerInternal;

        $i1 = virtualinvoke r0.<android.util.SparseIntArray: int size()>();

        if $i1 != 0 goto label1;

        return 0;

     label1:
        $r4 = virtualinvoke r1.<android.content.pm.PackageManagerInternal: com.android.server.pm.PackageList getPackageList()>();

        r2 = virtualinvoke $r4.<com.android.server.pm.PackageList: java.util.List getPackageNames()>();

        i6 = 0;

     label2:
        $i2 = interfaceinvoke r2.<java.util.List: int size()>();

        if i6 >= $i2 goto label7;

        $r5 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i6);

        $r6 = (java.lang.String) $r5;

        $r7 = virtualinvoke r1.<android.content.pm.PackageManagerInternal: com.android.server.pm.parsing.pkg.AndroidPackage getPackage(java.lang.String)>($r6);

        r3 = interfaceinvoke $r7.<com.android.server.pm.parsing.pkg.AndroidPackage: android.util.SparseIntArray getMinExtensionVersions()>();

        if r3 != null goto label3;

        goto label6;

     label3:
        i7 = 0;

     label4:
        $i3 = virtualinvoke r0.<android.util.SparseIntArray: int size()>();

        if i7 >= $i3 goto label6;

        $i4 = virtualinvoke r0.<android.util.SparseIntArray: int keyAt(int)>(i7);

        i0 = virtualinvoke r3.<android.util.SparseIntArray: int get(int,int)>($i4, -1);

        $i5 = virtualinvoke r0.<android.util.SparseIntArray: int valueAt(int)>(i7);

        if $i5 >= i0 goto label5;

        return 1;

     label5:
        i7 = i7 + 1;

        goto label4;

     label6:
        i6 = i6 + 1;

        goto label2;

     label7:
        return 0;
    }

    static int rollbackStateFromString(java.lang.String) throws java.text.ParseException
    {
        java.lang.String r0, $r6;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r2;
        java.text.ParseException $r5;
        int i0;
        byte b1;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int hashCode()>();

        if i0 == -1491142788 goto label4;

        if i0 == -733902135 goto label3;

        if i0 == 1642196352 goto label2;

     label1:
        goto label5;

     label2:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("enabling");

        if $z2 == 0 goto label1;

        b1 = 0;

        goto label6;

     label3:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("available");

        if $z1 == 0 goto label1;

        b1 = 1;

        goto label6;

     label4:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("committed");

        if $z0 == 0 goto label1;

        b1 = 2;

        goto label6;

     label5:
        b1 = -1;

     label6:
        if b1 == 0 goto label9;

        if b1 == 1 goto label8;

        if b1 != 2 goto label7;

        return 3;

     label7:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid rollback state: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = new java.text.ParseException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.text.ParseException: void <init>(java.lang.String,int)>($r6, 0);

        throw $r5;

     label8:
        return 1;

     label9:
        return 0;
    }

    static java.lang.String rollbackStateToString(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.AssertionError $r4;
        java.lang.String $r5;

        i0 := @parameter0: int;

        if i0 == 0 goto label3;

        if i0 == 1 goto label2;

        if i0 != 3 goto label1;

        return "committed";

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid rollback state: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.AssertionError;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>($r5);

        throw $r4;

     label2:
        return "available";

     label3:
        return "enabling";
    }

    private boolean wasCreatedAtLowerExtensionVersion()
    {
        com.android.server.rollback.Rollback r0;
        android.util.SparseIntArray $r1, $r2, $r3;
        int $i0, $i1, $i2, $i3, i4;

        r0 := @this: com.android.server.rollback.Rollback;

        i4 = 0;

     label1:
        $r1 = r0.<com.android.server.rollback.Rollback: android.util.SparseIntArray mExtensionVersions>;

        $i0 = virtualinvoke $r1.<android.util.SparseIntArray: int size()>();

        if i4 >= $i0 goto label3;

        $r2 = r0.<com.android.server.rollback.Rollback: android.util.SparseIntArray mExtensionVersions>;

        $i1 = virtualinvoke $r2.<android.util.SparseIntArray: int keyAt(int)>(i4);

        $i2 = staticinvoke <android.os.ext.SdkExtensions: int getExtensionVersion(int)>($i1);

        $r3 = r0.<com.android.server.rollback.Rollback: android.util.SparseIntArray mExtensionVersions>;

        $i3 = virtualinvoke $r3.<android.util.SparseIntArray: int valueAt(int)>(i4);

        if $i2 <= $i3 goto label2;

        return 1;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return 0;
    }

    boolean allPackagesEnabled()
    {
        com.android.server.rollback.Rollback r0;
        java.lang.Object r1, $r5;
        android.content.rollback.RollbackInfo $r2;
        java.util.List $r3;
        boolean $z0, $z1, z2;
        int[] $r4;
        int $i0, i1, i2;
        android.content.rollback.PackageRollbackInfo $r6;
        java.lang.Throwable $r7;
        java.util.Iterator r8;

        r0 := @this: com.android.server.rollback.Rollback;

        r1 = r0.<com.android.server.rollback.Rollback: java.lang.Object mLock>;

        entermonitor r1;

        i1 = 0;

     label01:
        $r2 = r0.<com.android.server.rollback.Rollback: android.content.rollback.RollbackInfo info>;

        $r3 = virtualinvoke $r2.<android.content.rollback.RollbackInfo: java.util.List getPackages()>();

        r8 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

     label03:
        i2 = i1;

     label04:
        $r5 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (android.content.rollback.PackageRollbackInfo) $r5;

        $z1 = virtualinvoke $r6.<android.content.rollback.PackageRollbackInfo: boolean isApkInApex()>();

        if $z1 != 0 goto label06;

     label05:
        i2 = i1 + 1;

     label06:
        i1 = i2;

        goto label02;

     label07:
        $r4 = r0.<com.android.server.rollback.Rollback: int[] mPackageSessionIds>;

        $i0 = lengthof $r4;

        if i1 != $i0 goto label09;

     label08:
        z2 = 1;

        goto label10;

     label09:
        z2 = 0;

     label10:
        exitmonitor r1;

     label11:
        return z2;

     label12:
        $r7 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    void commit(android.content.Context, java.util.List, java.lang.String, android.content.IntentSender)
    {
        com.android.server.rollback.Rollback r0;
        android.content.IntentSender r1, $r10;
        java.lang.Object r2, $r11, $r22;
        android.content.pm.PackageManager r3;
        android.content.pm.PackageInstaller r4;
        int i0, i1, i2, $i7, i8;
        android.content.pm.PackageInstaller$Session r5, r47;
        java.io.File r6;
        long l3, $l4, $l5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        android.content.rollback.RollbackInfo $r7, $r9;
        java.util.List $r8, r37;
        java.lang.String $r12, $r14, $r15, $r17, $r20, $r21, $r27, $r29, r38, r46;
        android.content.pm.VersionedPackage $r13;
        android.util.SparseIntArray $r23;
        java.lang.Throwable $r24, $r25, $r31, $r32, $r33, $r34, $r35, r56, r59;
        android.content.pm.PackageManager$NameNotFoundException $r30;
        android.content.Context r36, r41;
        android.content.pm.PackageManagerInternal r39;
        android.os.UserHandle $r40;
        java.util.Iterator r43;
        android.content.rollback.PackageRollbackInfo r44;
        java.io.File[] r48;
        android.os.ParcelFileDescriptor r50;
        android.content.pm.PackageInstaller$SessionParams r60, r61;
        java.lang.StringBuilder r62, r65;
        com.android.server.rollback._$$Lambda$Rollback$EvT1BaUrjWsJaVTizSu77MCfRBs r63;
        com.android.server.rollback.LocalIntentReceiver r64;
        java.io.IOException r66;

        r0 := @this: com.android.server.rollback.Rollback;

        r36 := @parameter0: android.content.Context;

        r37 := @parameter1: java.util.List;

        r38 := @parameter2: java.lang.String;

        r1 := @parameter3: android.content.IntentSender;

        r2 = r0.<com.android.server.rollback.Rollback: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        $z0 = virtualinvoke r0.<com.android.server.rollback.Rollback: boolean isAvailable()>();

        if $z0 != 0 goto label03;

        staticinvoke <com.android.server.rollback.RollbackManagerServiceImpl: void sendFailure(android.content.Context,android.content.IntentSender,int,java.lang.String)>(r36, r1, 2, "Rollback unavailable");

        exitmonitor r2;

     label02:
        return;

     label03:
        $z1 = specialinvoke r0.<com.android.server.rollback.Rollback: boolean containsApex()>();

        if $z1 == 0 goto label05;

        $z6 = specialinvoke r0.<com.android.server.rollback.Rollback: boolean wasCreatedAtLowerExtensionVersion()>();

        if $z6 == 0 goto label05;

        $r22 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/content/pm/PackageManagerInternal;");

        r39 = (android.content.pm.PackageManagerInternal) $r22;

        $r23 = r0.<com.android.server.rollback.Rollback: android.util.SparseIntArray mExtensionVersions>;

        $z7 = staticinvoke <com.android.server.rollback.Rollback: boolean extensionVersionReductionWouldViolateConstraint(android.util.SparseIntArray,android.content.pm.PackageManagerInternal)>($r23, r39);

        if $z7 == 0 goto label05;

        staticinvoke <com.android.server.rollback.RollbackManagerServiceImpl: void sendFailure(android.content.Context,android.content.IntentSender,int,java.lang.String)>(r36, r1, 1, "Rollback may violate a minExtensionVersion constraint");

        exitmonitor r2;

     label04:
        return;

     label05:
        $i7 = r0.<com.android.server.rollback.Rollback: int mUserId>;

        $r40 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>($i7);

        r41 = virtualinvoke r36.<android.content.Context: android.content.Context createPackageContextAsUser(java.lang.String,int,android.os.UserHandle)>(r38, 0, $r40);

     label06:
        r3 = virtualinvoke r41.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

     label07:
        r4 = virtualinvoke r3.<android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>();

        r60 = new android.content.pm.PackageInstaller$SessionParams;

        specialinvoke r60.<android.content.pm.PackageInstaller$SessionParams: void <init>(int)>(1);

        virtualinvoke r60.<android.content.pm.PackageInstaller$SessionParams: void setRequestDowngrade(boolean)>(1);

        virtualinvoke r60.<android.content.pm.PackageInstaller$SessionParams: void setMultiPackage()>();

        $z8 = virtualinvoke r0.<com.android.server.rollback.Rollback: boolean isStaged()>();

        if $z8 == 0 goto label08;

        virtualinvoke r60.<android.content.pm.PackageInstaller$SessionParams: void setStaged()>();

     label08:
        virtualinvoke r60.<android.content.pm.PackageInstaller$SessionParams: void setInstallReason(int)>(5);

        i0 = virtualinvoke r4.<android.content.pm.PackageInstaller: int createSession(android.content.pm.PackageInstaller$SessionParams)>(r60);

        r5 = virtualinvoke r4.<android.content.pm.PackageInstaller: android.content.pm.PackageInstaller$Session openSession(int)>(i0);

        $r7 = r0.<com.android.server.rollback.Rollback: android.content.rollback.RollbackInfo info>;

        $r8 = virtualinvoke $r7.<android.content.rollback.RollbackInfo: java.util.List getPackages()>();

        r43 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z9 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label47;

        $r11 = interfaceinvoke r43.<java.util.Iterator: java.lang.Object next()>();

        r44 = (android.content.rollback.PackageRollbackInfo) $r11;

        $z2 = virtualinvoke r44.<android.content.rollback.PackageRollbackInfo: boolean isApkInApex()>();

        if $z2 == 0 goto label11;

     label10:
        goto label09;

     label11:
        r61 = new android.content.pm.PackageInstaller$SessionParams;

        specialinvoke r61.<android.content.pm.PackageInstaller$SessionParams: void <init>(int)>(1);

        r46 = r0.<com.android.server.rollback.Rollback: java.lang.String mInstallerPackageName>;

     label12:
        $r12 = r0.<com.android.server.rollback.Rollback: java.lang.String mInstallerPackageName>;

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r12);

        if $z3 == 0 goto label14;

     label13:
        $r21 = virtualinvoke r44.<android.content.rollback.PackageRollbackInfo: java.lang.String getPackageName()>();

        r46 = virtualinvoke r3.<android.content.pm.PackageManager: java.lang.String getInstallerPackageName(java.lang.String)>($r21);

     label14:
        if r46 == null goto label16;

     label15:
        virtualinvoke r61.<android.content.pm.PackageInstaller$SessionParams: void setInstallerPackageName(java.lang.String)>(r46);

     label16:
        virtualinvoke r61.<android.content.pm.PackageInstaller$SessionParams: void setRequestDowngrade(boolean)>(1);

     label17:
        $r13 = virtualinvoke r44.<android.content.rollback.PackageRollbackInfo: android.content.pm.VersionedPackage getVersionRolledBackFrom()>();

        $l4 = virtualinvoke $r13.<android.content.pm.VersionedPackage: long getLongVersionCode()>();

        virtualinvoke r61.<android.content.pm.PackageInstaller$SessionParams: void setRequiredInstalledVersionCode(long)>($l4);

        $z4 = virtualinvoke r0.<com.android.server.rollback.Rollback: boolean isStaged()>();

        if $z4 == 0 goto label18;

        virtualinvoke r61.<android.content.pm.PackageInstaller$SessionParams: void setStaged()>();

     label18:
        $z5 = virtualinvoke r44.<android.content.rollback.PackageRollbackInfo: boolean isApex()>();

        if $z5 == 0 goto label19;

        virtualinvoke r61.<android.content.pm.PackageInstaller$SessionParams: void setInstallAsApex()>();

     label19:
        i1 = virtualinvoke r4.<android.content.pm.PackageInstaller: int createSession(android.content.pm.PackageInstaller$SessionParams)>(r61);

        r47 = virtualinvoke r4.<android.content.pm.PackageInstaller: android.content.pm.PackageInstaller$Session openSession(int)>(i1);

     label20:
        $r14 = virtualinvoke r44.<android.content.rollback.PackageRollbackInfo: java.lang.String getPackageName()>();

        r48 = staticinvoke <com.android.server.rollback.RollbackStore: java.io.File[] getPackageCodePaths(com.android.server.rollback.Rollback,java.lang.String)>(r0, $r14);

     label21:
        if r48 != null goto label25;

     label22:
        r62 = new java.lang.StringBuilder;

        specialinvoke r62.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Backup copy of package: ");

        $r17 = virtualinvoke r44.<android.content.rollback.PackageRollbackInfo: java.lang.String getPackageName()>();

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is inaccessible");

        $r20 = virtualinvoke r62.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.rollback.RollbackManagerServiceImpl: void sendFailure(android.content.Context,android.content.IntentSender,int,java.lang.String)>(r36, r1, 1, $r20);

     label23:
        exitmonitor r2;

     label24:
        return;

     label25:
        i2 = lengthof r48;

     label26:
        i8 = 0;

     label27:
        if i8 >= i2 goto label45;

        r6 = r48[i8];

     label28:
        r50 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>(r6, 268435456);

     label29:
        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label30:
        $r15 = virtualinvoke r6.<java.io.File: java.lang.String getName()>();

        $l5 = virtualinvoke r6.<java.io.File: long length()>();

        virtualinvoke r47.<android.content.pm.PackageInstaller$Session: void write(java.lang.String,long,long,android.os.ParcelFileDescriptor)>($r15, 0L, $l5, r50);

     label31:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

     label32:
        if r50 == null goto label34;

     label33:
        virtualinvoke r50.<android.os.ParcelFileDescriptor: void close()>();

     label34:
        i8 = i8 + 1;

        goto label27;

     label35:
        $r31 := @caughtexception;

     label36:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

     label37:
        throw $r31;

     label38:
        $r32 := @caughtexception;

        if r50 == null goto label44;

     label39:
        virtualinvoke r50.<android.os.ParcelFileDescriptor: void close()>();

     label40:
        goto label44;

     label41:
        $r24 := @caughtexception;

     label42:
        virtualinvoke $r32.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r24);

     label43:
        goto label44;

     label44:
        throw $r32;

     label45:
        virtualinvoke r5.<android.content.pm.PackageInstaller$Session: void addChildSessionId(int)>(i1);

     label46:
        goto label09;

     label47:
        r64 = new com.android.server.rollback.LocalIntentReceiver;

        r63 = new com.android.server.rollback._$$Lambda$Rollback$EvT1BaUrjWsJaVTizSu77MCfRBs;

     label48:
        specialinvoke r63.<com.android.server.rollback._$$Lambda$Rollback$EvT1BaUrjWsJaVTizSu77MCfRBs: void <init>(com.android.server.rollback.Rollback,android.content.Context,android.content.IntentSender,java.util.List)>(r0, r36, r1, r37);

        specialinvoke r64.<com.android.server.rollback.LocalIntentReceiver: void <init>(java.util.function.Consumer)>(r63);

        r0.<com.android.server.rollback.Rollback: int mState> = 3;

        $r9 = r0.<com.android.server.rollback.Rollback: android.content.rollback.RollbackInfo info>;

        virtualinvoke $r9.<android.content.rollback.RollbackInfo: void setCommittedSessionId(int)>(i0);

        r0.<com.android.server.rollback.Rollback: boolean mRestoreUserDataInProgress> = 1;

        $r10 = virtualinvoke r64.<com.android.server.rollback.LocalIntentReceiver: android.content.IntentSender getIntentSender()>();

        virtualinvoke r5.<android.content.pm.PackageInstaller$Session: void commit(android.content.IntentSender)>($r10);

     label49:
        goto label53;

     label50:
        $r25 := @caughtexception;

        r56 = $r25;

        goto label52;

     label51:
        $r33 := @caughtexception;

        r56 = $r33;

     label52:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RollbackManager", "Rollback failed", r56);

        r65 = new java.lang.StringBuilder;

        specialinvoke r65.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IOException: ");

        r66 = (java.io.IOException) r56;

        $r27 = virtualinvoke r66.<java.io.IOException: java.lang.String toString()>();

        virtualinvoke r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke r65.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.rollback.RollbackManagerServiceImpl: void sendFailure(android.content.Context,android.content.IntentSender,int,java.lang.String)>(r36, r1, 1, $r29);

     label53:
        exitmonitor r2;

     label54:
        return;

     label55:
        $r30 := @caughtexception;

     label56:
        staticinvoke <com.android.server.rollback.RollbackManagerServiceImpl: void sendFailure(android.content.Context,android.content.IntentSender,int,java.lang.String)>(r36, r1, 1, "Invalid callerPackageName");

        exitmonitor r2;

     label57:
        return;

     label58:
        $r35 := @caughtexception;

        r59 = $r35;

     label59:
        exitmonitor r2;

     label60:
        throw r59;

     label61:
        $r34 := @caughtexception;

        r59 = $r34;

        goto label59;

        catch java.lang.Throwable from label01 to label02 with label58;
        catch java.lang.Throwable from label03 to label04 with label58;
        catch android.content.pm.PackageManager$NameNotFoundException from label05 to label06 with label55;
        catch java.lang.Throwable from label05 to label06 with label58;
        catch java.lang.Throwable from label06 to label07 with label58;
        catch java.io.IOException from label07 to label08 with label51;
        catch java.lang.Throwable from label07 to label08 with label58;
        catch java.io.IOException from label08 to label09 with label51;
        catch java.lang.Throwable from label08 to label09 with label58;
        catch java.io.IOException from label09 to label10 with label51;
        catch java.lang.Throwable from label09 to label10 with label58;
        catch java.io.IOException from label11 to label12 with label51;
        catch java.lang.Throwable from label11 to label12 with label58;
        catch java.io.IOException from label12 to label13 with label51;
        catch java.lang.Throwable from label12 to label13 with label58;
        catch java.io.IOException from label13 to label14 with label51;
        catch java.lang.Throwable from label13 to label14 with label58;
        catch java.io.IOException from label15 to label16 with label51;
        catch java.lang.Throwable from label15 to label16 with label58;
        catch java.io.IOException from label16 to label17 with label51;
        catch java.lang.Throwable from label16 to label17 with label58;
        catch java.io.IOException from label17 to label18 with label51;
        catch java.lang.Throwable from label17 to label18 with label58;
        catch java.io.IOException from label18 to label19 with label51;
        catch java.lang.Throwable from label18 to label19 with label58;
        catch java.io.IOException from label19 to label20 with label51;
        catch java.lang.Throwable from label19 to label20 with label58;
        catch java.io.IOException from label20 to label21 with label51;
        catch java.lang.Throwable from label20 to label21 with label58;
        catch java.io.IOException from label22 to label23 with label51;
        catch java.lang.Throwable from label22 to label23 with label58;
        catch java.lang.Throwable from label23 to label24 with label58;
        catch java.io.IOException from label25 to label26 with label51;
        catch java.lang.Throwable from label25 to label26 with label58;
        catch java.io.IOException from label28 to label29 with label51;
        catch java.lang.Throwable from label28 to label29 with label58;
        catch java.lang.Throwable from label29 to label30 with label38;
        catch java.lang.Throwable from label30 to label31 with label35;
        catch java.lang.Throwable from label31 to label32 with label38;
        catch java.io.IOException from label33 to label34 with label51;
        catch java.lang.Throwable from label33 to label34 with label58;
        catch java.lang.Throwable from label36 to label37 with label38;
        catch java.lang.Throwable from label37 to label38 with label38;
        catch java.lang.Throwable from label39 to label40 with label41;
        catch java.io.IOException from label42 to label43 with label51;
        catch java.lang.Throwable from label42 to label43 with label58;
        catch java.io.IOException from label44 to label45 with label51;
        catch java.lang.Throwable from label44 to label45 with label58;
        catch java.io.IOException from label45 to label46 with label51;
        catch java.lang.Throwable from label45 to label46 with label58;
        catch java.io.IOException from label47 to label48 with label51;
        catch java.lang.Throwable from label47 to label48 with label58;
        catch java.io.IOException from label48 to label49 with label50;
        catch java.lang.Throwable from label48 to label49 with label61;
        catch java.lang.Throwable from label52 to label53 with label61;
        catch java.lang.Throwable from label53 to label54 with label61;
        catch java.lang.Throwable from label56 to label57 with label61;
        catch java.lang.Throwable from label59 to label60 with label61;
    }

    void commitPendingBackupAndRestoreForUser(int, com.android.server.rollback.AppDataRollbackHelper)
    {
        com.android.server.rollback.Rollback r0;
        int i0;
        java.lang.Object r1;
        boolean $z0;
        java.lang.Throwable $r2;
        com.android.server.rollback.AppDataRollbackHelper r3;

        r0 := @this: com.android.server.rollback.Rollback;

        i0 := @parameter0: int;

        r3 := @parameter1: com.android.server.rollback.AppDataRollbackHelper;

        r1 = r0.<com.android.server.rollback.Rollback: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z0 = virtualinvoke r3.<com.android.server.rollback.AppDataRollbackHelper: boolean commitPendingBackupAndRestoreForUser(int,com.android.server.rollback.Rollback)>(i0, r0);

        if $z0 == 0 goto label2;

        staticinvoke <com.android.server.rollback.RollbackStore: void saveRollback(com.android.server.rollback.Rollback)>(r0);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r2 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    boolean containsSessionId(int)
    {
        com.android.server.rollback.Rollback r0;
        int i0, i1, $i2, i3;
        int[] r1;

        r0 := @this: com.android.server.rollback.Rollback;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.rollback.Rollback: int[] mPackageSessionIds>;

        i1 = lengthof r1;

        i3 = 0;

     label1:
        if i3 >= i1 goto label3;

        $i2 = r1[i3];

        if $i2 != i0 goto label2;

        return 1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 0;
    }

    void delete(com.android.server.rollback.AppDataRollbackHelper)
    {
        com.android.server.rollback.Rollback r0;
        java.lang.Object r1, $r8;
        java.util.Iterator r2;
        android.content.rollback.PackageRollbackInfo r3;
        android.util.IntArray r4;
        android.content.rollback.RollbackInfo $r5, $r7, $r9;
        java.util.List $r6;
        boolean $z0, $z1, z2, z3;
        int $i0, $i1, $i2, i3, i4;
        java.lang.Throwable $r10;
        com.android.server.rollback.AppDataRollbackHelper r11;

        r0 := @this: com.android.server.rollback.Rollback;

        r11 := @parameter0: com.android.server.rollback.AppDataRollbackHelper;

        r1 = r0.<com.android.server.rollback.Rollback: java.lang.Object mLock>;

        entermonitor r1;

        z2 = 0;

     label01:
        $r5 = r0.<com.android.server.rollback.Rollback: android.content.rollback.RollbackInfo info>;

        $r6 = virtualinvoke $r5.<android.content.rollback.RollbackInfo: java.util.List getPackages()>();

        r2 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.content.rollback.PackageRollbackInfo) $r8;

        $z1 = virtualinvoke r3.<android.content.rollback.PackageRollbackInfo: boolean isApex()>();

        if $z1 == 0 goto label04;

     label03:
        z3 = 1;

        goto label09;

     label04:
        r4 = virtualinvoke r3.<android.content.rollback.PackageRollbackInfo: android.util.IntArray getSnapshottedUsers()>();

     label05:
        i3 = 0;

     label06:
        z3 = z2;

     label07:
        $i1 = virtualinvoke r4.<android.util.IntArray: int size()>();

        if i3 >= $i1 goto label09;

        i4 = virtualinvoke r4.<android.util.IntArray: int get(int)>(i3);

        $r9 = r0.<com.android.server.rollback.Rollback: android.content.rollback.RollbackInfo info>;

        $i2 = virtualinvoke $r9.<android.content.rollback.RollbackInfo: int getRollbackId()>();

        virtualinvoke r11.<com.android.server.rollback.AppDataRollbackHelper: void destroyAppDataSnapshot(int,android.content.rollback.PackageRollbackInfo,int)>($i2, r3, i4);

     label08:
        i3 = i3 + 1;

        goto label06;

     label09:
        z2 = z3;

        goto label02;

     label10:
        if z2 == 0 goto label12;

     label11:
        $r7 = r0.<com.android.server.rollback.Rollback: android.content.rollback.RollbackInfo info>;

        $i0 = virtualinvoke $r7.<android.content.rollback.RollbackInfo: int getRollbackId()>();

        virtualinvoke r11.<com.android.server.rollback.AppDataRollbackHelper: void destroyApexDeSnapshots(int)>($i0);

     label12:
        staticinvoke <com.android.server.rollback.RollbackStore: void deleteRollback(com.android.server.rollback.Rollback)>(r0);

        r0.<com.android.server.rollback.Rollback: int mState> = 4;

        exitmonitor r1;

     label13:
        return;

     label14:
        $r10 := @caughtexception;

     label15:
        exitmonitor r1;

     label16:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label02 to label03 with label14;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label11 to label12 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    void dump(com.android.internal.util.IndentingPrintWriter)
    {
        com.android.server.rollback.Rollback r0;
        java.lang.Object r1, $r33, $r39;
        android.content.rollback.RollbackInfo $r2, $r16, $r26, $r30;
        int $i0, $i1, $i2, $i3, $i7;
        java.lang.String $r5, $r8, $r10, $r14, $r23, $r32, $r34, $r38, $r40, $r48, $r51;
        java.time.Instant $r12;
        java.util.List $r17, $r27;
        boolean $z0, $z1, $z2;
        android.util.SparseIntArray $r19, $r22;
        long $l4, $l5, $l6;
        android.content.pm.VersionedPackage $r43, $r46, r62;
        java.lang.Throwable $r52;
        com.android.internal.util.IndentingPrintWriter r53;
        java.lang.StringBuilder r54, r55, r56, r57, r60, r63, r64;
        java.util.Iterator r58, r61;
        android.content.rollback.PackageRollbackInfo r59;

        r0 := @this: com.android.server.rollback.Rollback;

        r53 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        r1 = r0.<com.android.server.rollback.Rollback: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        r54 = new java.lang.StringBuilder;

        specialinvoke r54.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<com.android.server.rollback.Rollback: android.content.rollback.RollbackInfo info>;

        $i0 = virtualinvoke $r2.<android.content.rollback.RollbackInfo: int getRollbackId()>();

        virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r5 = virtualinvoke r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r53.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r5);

        virtualinvoke r53.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        r55 = new java.lang.StringBuilder;

        specialinvoke r55.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-state: ");

        $r8 = virtualinvoke r0.<com.android.server.rollback.Rollback: java.lang.String getStateAsString()>();

        virtualinvoke r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke r55.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r53.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r10);

        r56 = new java.lang.StringBuilder;

        specialinvoke r56.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-timestamp: ");

        $r12 = virtualinvoke r0.<com.android.server.rollback.Rollback: java.time.Instant getTimestamp()>();

        virtualinvoke r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke r56.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r53.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r14);

        $i1 = virtualinvoke r0.<com.android.server.rollback.Rollback: int getStagedSessionId()>();

        if $i1 == -1 goto label02;

        r57 = new java.lang.StringBuilder;

        specialinvoke r57.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-stagedSessionId: ");

        $i7 = virtualinvoke r0.<com.android.server.rollback.Rollback: int getStagedSessionId()>();

        virtualinvoke r57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r51 = virtualinvoke r57.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r53.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r51);

     label02:
        virtualinvoke r53.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("-packages:");

        virtualinvoke r53.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        $r16 = r0.<com.android.server.rollback.Rollback: android.content.rollback.RollbackInfo info>;

        $r17 = virtualinvoke $r16.<android.content.rollback.RollbackInfo: java.util.List getPackages()>();

        r58 = interfaceinvoke $r17.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z2 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label05;

        $r39 = interfaceinvoke r58.<java.util.Iterator: java.lang.Object next()>();

        r59 = (android.content.rollback.PackageRollbackInfo) $r39;

        r60 = new java.lang.StringBuilder;

        specialinvoke r60.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke r59.<android.content.rollback.PackageRollbackInfo: java.lang.String getPackageName()>();

        virtualinvoke r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        virtualinvoke r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r43 = virtualinvoke r59.<android.content.rollback.PackageRollbackInfo: android.content.pm.VersionedPackage getVersionRolledBackFrom()>();

        $l5 = virtualinvoke $r43.<android.content.pm.VersionedPackage: long getLongVersionCode()>();

        virtualinvoke r60.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l5);

        virtualinvoke r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r46 = virtualinvoke r59.<android.content.rollback.PackageRollbackInfo: android.content.pm.VersionedPackage getVersionRolledBackTo()>();

        $l6 = virtualinvoke $r46.<android.content.pm.VersionedPackage: long getLongVersionCode()>();

        virtualinvoke r60.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6);

        $r48 = virtualinvoke r60.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r53.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r48);

     label04:
        goto label03;

     label05:
        virtualinvoke r53.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        $z0 = virtualinvoke r0.<com.android.server.rollback.Rollback: boolean isCommitted()>();

        if $z0 == 0 goto label09;

        virtualinvoke r53.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("-causePackages:");

        virtualinvoke r53.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        $r26 = r0.<com.android.server.rollback.Rollback: android.content.rollback.RollbackInfo info>;

        $r27 = virtualinvoke $r26.<android.content.rollback.RollbackInfo: java.util.List getCausePackages()>();

        r61 = interfaceinvoke $r27.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z1 = interfaceinvoke r61.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r33 = interfaceinvoke r61.<java.util.Iterator: java.lang.Object next()>();

        r62 = (android.content.pm.VersionedPackage) $r33;

        r63 = new java.lang.StringBuilder;

        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke r62.<android.content.pm.VersionedPackage: java.lang.String getPackageName()>();

        virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $l4 = virtualinvoke r62.<android.content.pm.VersionedPackage: long getLongVersionCode()>();

        virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r38 = virtualinvoke r63.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r53.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r38);

     label07:
        goto label06;

     label08:
        virtualinvoke r53.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        r64 = new java.lang.StringBuilder;

        specialinvoke r64.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-committedSessionId: ");

        $r30 = r0.<com.android.server.rollback.Rollback: android.content.rollback.RollbackInfo info>;

        $i3 = virtualinvoke $r30.<android.content.rollback.RollbackInfo: int getCommittedSessionId()>();

        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r32 = virtualinvoke r64.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r53.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r32);

     label09:
        $r19 = r0.<com.android.server.rollback.Rollback: android.util.SparseIntArray mExtensionVersions>;

        $i2 = virtualinvoke $r19.<android.util.SparseIntArray: int size()>();

        if $i2 <= 0 goto label10;

        virtualinvoke r53.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("-extensionVersions:");

        virtualinvoke r53.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        $r22 = r0.<com.android.server.rollback.Rollback: android.util.SparseIntArray mExtensionVersions>;

        $r23 = virtualinvoke $r22.<android.util.SparseIntArray: java.lang.String toString()>();

        virtualinvoke r53.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r23);

        virtualinvoke r53.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

     label10:
        virtualinvoke r53.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        exitmonitor r1;

     label11:
        return;

     label12:
        $r52 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r52;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    boolean enableForPackage(java.lang.String, long, long, boolean, java.lang.String, java.lang.String[], int)
    {
        com.android.server.rollback.Rollback r0;
        long l0, l1;
        boolean z0, $z1;
        int i2, i3, i5;
        android.content.rollback.PackageRollbackInfo $r1;
        android.content.pm.VersionedPackage $r2, $r3;
        android.util.IntArray $r4, $r6;
        java.util.ArrayList $r5;
        android.util.SparseLongArray $r7;
        android.content.rollback.RollbackInfo $r8;
        java.util.List $r9;
        java.lang.String $r10, $r16, r17, r18;
        java.lang.Throwable $r11, $r12;
        java.lang.StringBuilder $r13;
        java.lang.String[] r19;
        java.lang.Object r21;

        r0 := @this: com.android.server.rollback.Rollback;

        r17 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        z0 := @parameter3: boolean;

        r18 := @parameter4: java.lang.String;

        r19 := @parameter5: java.lang.String[];

        i2 := @parameter6: int;

     label01:
        staticinvoke <com.android.server.rollback.RollbackStore: void backupPackageCodePath(com.android.server.rollback.Rollback,java.lang.String,java.lang.String)>(r0, r17, r18);

        $z1 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r19);

        if $z1 != 0 goto label06;

        i3 = lengthof r19;

     label02:
        i5 = 0;

     label03:
        if i5 >= i3 goto label06;

     label04:
        $r10 = r19[i5];

        staticinvoke <com.android.server.rollback.RollbackStore: void backupPackageCodePath(com.android.server.rollback.Rollback,java.lang.String,java.lang.String)>(r0, r17, $r10);

     label05:
        i5 = i5 + 1;

        goto label03;

     label06:
        $r1 = new android.content.rollback.PackageRollbackInfo;

        $r2 = new android.content.pm.VersionedPackage;

        specialinvoke $r2.<android.content.pm.VersionedPackage: void <init>(java.lang.String,long)>(r17, l0);

        $r3 = new android.content.pm.VersionedPackage;

        specialinvoke $r3.<android.content.pm.VersionedPackage: void <init>(java.lang.String,long)>(r17, l1);

        $r4 = new android.util.IntArray;

        specialinvoke $r4.<android.util.IntArray: void <init>()>();

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r6 = new android.util.IntArray;

        specialinvoke $r6.<android.util.IntArray: void <init>()>();

        $r7 = new android.util.SparseLongArray;

        specialinvoke $r7.<android.util.SparseLongArray: void <init>()>();

        specialinvoke $r1.<android.content.rollback.PackageRollbackInfo: void <init>(android.content.pm.VersionedPackage,android.content.pm.VersionedPackage,android.util.IntArray,java.util.ArrayList,boolean,boolean,android.util.IntArray,android.util.SparseLongArray,int)>($r2, $r3, $r4, $r5, z0, 0, $r6, $r7, i2);

        r21 = r0.<com.android.server.rollback.Rollback: java.lang.Object mLock>;

        entermonitor r21;

     label07:
        $r8 = r0.<com.android.server.rollback.Rollback: android.content.rollback.RollbackInfo info>;

        $r9 = virtualinvoke $r8.<android.content.rollback.RollbackInfo: java.util.List getPackages()>();

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r1);

        exitmonitor r21;

     label08:
        return 1;

     label09:
        $r11 := @caughtexception;

     label10:
        exitmonitor r21;

     label11:
        throw $r11;

     label12:
        $r12 := @caughtexception;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to copy package for rollback for ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RollbackManager", $r16, $r12);

        return 0;

        catch java.io.IOException from label01 to label02 with label12;
        catch java.io.IOException from label04 to label05 with label12;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    boolean enableForPackageInApex(java.lang.String, long, int)
    {
        com.android.server.rollback.Rollback r0;
        long l0;
        int i1;
        android.content.rollback.PackageRollbackInfo $r1;
        android.content.pm.VersionedPackage $r2, $r3;
        android.util.IntArray $r4, $r6;
        java.util.ArrayList $r5;
        android.util.SparseLongArray $r7;
        android.content.rollback.RollbackInfo $r8;
        java.util.List $r9;
        java.lang.Throwable $r10;
        java.lang.String r11;
        java.lang.Object r13;

        r0 := @this: com.android.server.rollback.Rollback;

        r11 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        $r1 = new android.content.rollback.PackageRollbackInfo;

        $r2 = new android.content.pm.VersionedPackage;

        specialinvoke $r2.<android.content.pm.VersionedPackage: void <init>(java.lang.String,int)>(r11, 0);

        $r3 = new android.content.pm.VersionedPackage;

        specialinvoke $r3.<android.content.pm.VersionedPackage: void <init>(java.lang.String,long)>(r11, l0);

        $r4 = new android.util.IntArray;

        specialinvoke $r4.<android.util.IntArray: void <init>()>();

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r6 = new android.util.IntArray;

        specialinvoke $r6.<android.util.IntArray: void <init>()>();

        $r7 = new android.util.SparseLongArray;

        specialinvoke $r7.<android.util.SparseLongArray: void <init>()>();

        specialinvoke $r1.<android.content.rollback.PackageRollbackInfo: void <init>(android.content.pm.VersionedPackage,android.content.pm.VersionedPackage,android.util.IntArray,java.util.ArrayList,boolean,boolean,android.util.IntArray,android.util.SparseLongArray,int)>($r2, $r3, $r4, $r5, 0, 1, $r6, $r7, i1);

        r13 = r0.<com.android.server.rollback.Rollback: java.lang.Object mLock>;

        entermonitor r13;

     label1:
        $r8 = r0.<com.android.server.rollback.Rollback: android.content.rollback.RollbackInfo info>;

        $r9 = virtualinvoke $r8.<android.content.rollback.RollbackInfo: java.util.List getPackages()>();

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r1);

        exitmonitor r13;

     label2:
        return 1;

     label3:
        $r10 := @caughtexception;

     label4:
        exitmonitor r13;

     label5:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    java.util.List getApexPackageNames()
    {
        com.android.server.rollback.Rollback r0;
        java.lang.Object r1, $r6;
        java.util.ArrayList r2;
        java.util.Iterator r3;
        android.content.rollback.RollbackInfo $r4;
        java.util.List $r5;
        boolean $z0, $z1;
        java.lang.String $r7;
        java.lang.Throwable $r8;
        android.content.rollback.PackageRollbackInfo r9;

        r0 := @this: com.android.server.rollback.Rollback;

        r1 = r0.<com.android.server.rollback.Rollback: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $r4 = r0.<com.android.server.rollback.Rollback: android.content.rollback.RollbackInfo info>;

        $r5 = virtualinvoke $r4.<android.content.rollback.RollbackInfo: java.util.List getPackages()>();

        r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r9 = (android.content.rollback.PackageRollbackInfo) $r6;

        $z1 = virtualinvoke r9.<android.content.rollback.PackageRollbackInfo: boolean isApex()>();

        if $z1 == 0 goto label3;

        $r7 = virtualinvoke r9.<android.content.rollback.PackageRollbackInfo: java.lang.String getPackageName()>();

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r7);

     label3:
        goto label2;

     label4:
        exitmonitor r1;

     label5:
        return r2;

     label6:
        $r8 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    int getApkSessionId()
    {
        com.android.server.rollback.Rollback r0;
        java.lang.Object r1;
        int i0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.rollback.Rollback;

        r1 = r0.<com.android.server.rollback.Rollback: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        i0 = r0.<com.android.server.rollback.Rollback: int mApkSessionId>;

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    java.io.File getBackupDir()
    {
        com.android.server.rollback.Rollback r0;
        java.io.File $r1;

        r0 := @this: com.android.server.rollback.Rollback;

        $r1 = r0.<com.android.server.rollback.Rollback: java.io.File mBackupDir>;

        return $r1;
    }

    android.util.SparseIntArray getExtensionVersions()
    {
        com.android.server.rollback.Rollback r0;
        android.util.SparseIntArray $r1;

        r0 := @this: com.android.server.rollback.Rollback;

        $r1 = r0.<com.android.server.rollback.Rollback: android.util.SparseIntArray mExtensionVersions>;

        return $r1;
    }

    java.lang.String getInstallerPackageName()
    {
        com.android.server.rollback.Rollback r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.rollback.Rollback;

        $r1 = r0.<com.android.server.rollback.Rollback: java.lang.String mInstallerPackageName>;

        return $r1;
    }

    java.util.List getPackageNames()
    {
        com.android.server.rollback.Rollback r0;
        java.lang.Object r1, $r5;
        java.util.Iterator r2;
        android.content.rollback.RollbackInfo $r3;
        java.util.List $r4;
        boolean $z0;
        android.content.rollback.PackageRollbackInfo $r6;
        java.lang.String $r7;
        java.lang.Throwable $r8;
        java.util.ArrayList r9;

        r0 := @this: com.android.server.rollback.Rollback;

        r1 = r0.<com.android.server.rollback.Rollback: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r9 = new java.util.ArrayList;

        specialinvoke r9.<java.util.ArrayList: void <init>()>();

        $r3 = r0.<com.android.server.rollback.Rollback: android.content.rollback.RollbackInfo info>;

        $r4 = virtualinvoke $r3.<android.content.rollback.RollbackInfo: java.util.List getPackages()>();

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (android.content.rollback.PackageRollbackInfo) $r5;

        $r7 = virtualinvoke $r6.<android.content.rollback.PackageRollbackInfo: java.lang.String getPackageName()>();

        interfaceinvoke r9.<java.util.List: boolean add(java.lang.Object)>($r7);

     label3:
        goto label2;

     label4:
        exitmonitor r1;

     label5:
        return r9;

     label6:
        $r8 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    int getStagedSessionId()
    {
        com.android.server.rollback.Rollback r0;
        int $i0;

        r0 := @this: com.android.server.rollback.Rollback;

        $i0 = r0.<com.android.server.rollback.Rollback: int mStagedSessionId>;

        return $i0;
    }

    java.lang.String getStateAsString()
    {
        com.android.server.rollback.Rollback r0;
        java.lang.Object r1;
        int $i0;
        java.lang.Throwable $r2;
        java.lang.String r3;

        r0 := @this: com.android.server.rollback.Rollback;

        r1 = r0.<com.android.server.rollback.Rollback: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $i0 = r0.<com.android.server.rollback.Rollback: int mState>;

        r3 = staticinvoke <com.android.server.rollback.Rollback: java.lang.String rollbackStateToString(int)>($i0);

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    java.time.Instant getTimestamp()
    {
        com.android.server.rollback.Rollback r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        java.time.Instant r3;

        r0 := @this: com.android.server.rollback.Rollback;

        r1 = r0.<com.android.server.rollback.Rollback: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r3 = r0.<com.android.server.rollback.Rollback: java.time.Instant mTimestamp>;

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    int getUserId()
    {
        com.android.server.rollback.Rollback r0;
        int $i0;

        r0 := @this: com.android.server.rollback.Rollback;

        $i0 = r0.<com.android.server.rollback.Rollback: int mUserId>;

        return $i0;
    }

    boolean includesPackage(java.lang.String)
    {
        com.android.server.rollback.Rollback r0;
        java.lang.Object r1, $r5;
        java.util.Iterator r2;
        android.content.rollback.RollbackInfo $r3;
        java.util.List $r4;
        boolean $z0, $z1;
        android.content.rollback.PackageRollbackInfo $r6;
        java.lang.String $r7, r9;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.rollback.Rollback;

        r9 := @parameter0: java.lang.String;

        r1 = r0.<com.android.server.rollback.Rollback: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.rollback.Rollback: android.content.rollback.RollbackInfo info>;

        $r4 = virtualinvoke $r3.<android.content.rollback.RollbackInfo: java.util.List getPackages()>();

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (android.content.rollback.PackageRollbackInfo) $r5;

        $r7 = virtualinvoke $r6.<android.content.rollback.PackageRollbackInfo: java.lang.String getPackageName()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z1 == 0 goto label4;

        exitmonitor r1;

     label3:
        return 1;

     label4:
        goto label2;

     label5:
        exitmonitor r1;

     label6:
        return 0;

     label7:
        $r8 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    boolean includesPackageWithDifferentVersion(java.lang.String, long)
    {
        com.android.server.rollback.Rollback r0;
        long l0, $l1;
        java.lang.Object r1, $r6;
        java.util.Iterator r2;
        android.content.rollback.PackageRollbackInfo r3;
        android.content.rollback.RollbackInfo $r4;
        java.util.List $r5;
        boolean $z0, $z1;
        java.lang.String $r7, r10;
        android.content.pm.VersionedPackage $r8;
        byte $b2;
        java.lang.Throwable $r9;

        r0 := @this: com.android.server.rollback.Rollback;

        r10 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        r1 = r0.<com.android.server.rollback.Rollback: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.rollback.Rollback: android.content.rollback.RollbackInfo info>;

        $r5 = virtualinvoke $r4.<android.content.rollback.RollbackInfo: java.util.List getPackages()>();

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.content.rollback.PackageRollbackInfo) $r6;

        $r7 = virtualinvoke r3.<android.content.rollback.PackageRollbackInfo: java.lang.String getPackageName()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z1 == 0 goto label4;

        $r8 = virtualinvoke r3.<android.content.rollback.PackageRollbackInfo: android.content.pm.VersionedPackage getVersionRolledBackFrom()>();

        $l1 = virtualinvoke $r8.<android.content.pm.VersionedPackage: long getLongVersionCode()>();

        $b2 = $l1 cmp l0;

        if $b2 == 0 goto label4;

        exitmonitor r1;

     label3:
        return 1;

     label4:
        goto label2;

     label5:
        exitmonitor r1;

     label6:
        return 0;

     label7:
        $r9 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    boolean isAvailable()
    {
        com.android.server.rollback.Rollback r0;
        java.lang.Object r1;
        int i0;
        java.lang.Throwable $r3;
        boolean z0;

        r0 := @this: com.android.server.rollback.Rollback;

        r1 = r0.<com.android.server.rollback.Rollback: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        i0 = r0.<com.android.server.rollback.Rollback: int mState>;

     label2:
        z0 = 1;

        if i0 != 1 goto label3;

        goto label4;

     label3:
        z0 = 0;

     label4:
        exitmonitor r1;

     label5:
        return z0;

     label6:
        $r3 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    boolean isCommitted()
    {
        com.android.server.rollback.Rollback r0;
        java.lang.Object r1;
        int $i0;
        java.lang.Throwable $r3;
        boolean z0;

        r0 := @this: com.android.server.rollback.Rollback;

        r1 = r0.<com.android.server.rollback.Rollback: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $i0 = r0.<com.android.server.rollback.Rollback: int mState>;

        if $i0 != 3 goto label3;

     label2:
        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        exitmonitor r1;

     label5:
        return z0;

     label6:
        $r3 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    boolean isDeleted()
    {
        com.android.server.rollback.Rollback r0;
        java.lang.Object r1;
        int $i0;
        java.lang.Throwable $r3;
        boolean z0;

        r0 := @this: com.android.server.rollback.Rollback;

        r1 = r0.<com.android.server.rollback.Rollback: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $i0 = r0.<com.android.server.rollback.Rollback: int mState>;

        if $i0 != 4 goto label3;

     label2:
        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        exitmonitor r1;

     label5:
        return z0;

     label6:
        $r3 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    boolean isEnabling()
    {
        com.android.server.rollback.Rollback r0;
        java.lang.Object r1;
        int $i0;
        java.lang.Throwable $r3;
        boolean z0;

        r0 := @this: com.android.server.rollback.Rollback;

        r1 = r0.<com.android.server.rollback.Rollback: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $i0 = r0.<com.android.server.rollback.Rollback: int mState>;

        if $i0 != 0 goto label3;

     label2:
        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        exitmonitor r1;

     label5:
        return z0;

     label6:
        $r3 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    boolean isRestoreUserDataInProgress()
    {
        com.android.server.rollback.Rollback r0;
        java.lang.Object r1;
        boolean z0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.rollback.Rollback;

        r1 = r0.<com.android.server.rollback.Rollback: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        z0 = r0.<com.android.server.rollback.Rollback: boolean mRestoreUserDataInProgress>;

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    boolean isStaged()
    {
        com.android.server.rollback.Rollback r0;
        android.content.rollback.RollbackInfo $r1;
        boolean $z0;

        r0 := @this: com.android.server.rollback.Rollback;

        $r1 = r0.<com.android.server.rollback.Rollback: android.content.rollback.RollbackInfo info>;

        $z0 = virtualinvoke $r1.<android.content.rollback.RollbackInfo: boolean isStaged()>();

        return $z0;
    }

    public void lambda$commit$0$Rollback(android.content.Context, android.content.IntentSender, java.util.List, android.content.Intent)
    {
        com.android.server.rollback.Rollback r0;
        int $i0;
        boolean $z0, $z2;
        android.content.rollback.RollbackInfo $r1, $r9;
        java.util.List $r2, $r6, r20;
        android.content.Intent $r4, r21, r26;
        android.os.UserManager $r5;
        java.lang.Object $r7, r22, r25;
        android.os.UserHandle $r8;
        java.lang.StringBuilder $r10;
        java.lang.String $r12, $r14;
        java.lang.Throwable $r15, $r16;
        android.content.IntentSender$SendIntentException $r17;
        android.content.Context r18;
        android.content.IntentSender r19;
        java.util.Iterator r29;
        android.content.pm.UserInfo r30;

        r0 := @this: com.android.server.rollback.Rollback;

        r18 := @parameter0: android.content.Context;

        r19 := @parameter1: android.content.IntentSender;

        r20 := @parameter2: java.util.List;

        r21 := @parameter3: android.content.Intent;

        $i0 = virtualinvoke r21.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.content.pm.extra.STATUS", 1);

        if $i0 == 0 goto label06;

        r22 = r0.<com.android.server.rollback.Rollback: java.lang.Object mLock>;

        entermonitor r22;

     label01:
        r0.<com.android.server.rollback.Rollback: int mState> = 1;

        r0.<com.android.server.rollback.Rollback: boolean mRestoreUserDataInProgress> = 0;

        $r9 = r0.<com.android.server.rollback.Rollback: android.content.rollback.RollbackInfo info>;

        virtualinvoke $r9.<android.content.rollback.RollbackInfo: void setCommittedSessionId(int)>(-1);

        exitmonitor r22;

     label02:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Rollback downgrade install failed: ");

        $r12 = virtualinvoke r21.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("android.content.pm.extra.STATUS_MESSAGE");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.rollback.RollbackManagerServiceImpl: void sendFailure(android.content.Context,android.content.IntentSender,int,java.lang.String)>(r18, r19, 3, $r14);

        return;

     label03:
        $r16 := @caughtexception;

     label04:
        exitmonitor r22;

     label05:
        throw $r16;

     label06:
        r25 = r0.<com.android.server.rollback.Rollback: java.lang.Object mLock>;

        entermonitor r25;

     label07:
        $z0 = virtualinvoke r0.<com.android.server.rollback.Rollback: boolean isStaged()>();

        if $z0 != 0 goto label08;

        r0.<com.android.server.rollback.Rollback: boolean mRestoreUserDataInProgress> = 0;

     label08:
        $r1 = r0.<com.android.server.rollback.Rollback: android.content.rollback.RollbackInfo info>;

        $r2 = virtualinvoke $r1.<android.content.rollback.RollbackInfo: java.util.List getCausePackages()>();

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>(r20);

        staticinvoke <com.android.server.rollback.RollbackStore: void deletePackageCodePaths(com.android.server.rollback.Rollback)>(r0);

        staticinvoke <com.android.server.rollback.RollbackStore: void saveRollback(com.android.server.rollback.Rollback)>(r0);

        exitmonitor r25;

     label09:
        r26 = new android.content.Intent;

        specialinvoke r26.<android.content.Intent: void <init>()>();

        virtualinvoke r26.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.content.rollback.extra.STATUS", 0);

        virtualinvoke r19.<android.content.IntentSender: void sendIntent(android.content.Context,int,android.content.Intent,android.content.IntentSender$OnFinished,android.os.Handler)>(r18, 0, r26, null, null);

     label10:
        goto label12;

     label11:
        $r17 := @caughtexception;

     label12:
        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.ROLLBACK_COMMITTED");

        $r5 = staticinvoke <android.os.UserManager: android.os.UserManager get(android.content.Context)>(r18);

        $r6 = virtualinvoke $r5.<android.os.UserManager: java.util.List getUsers(boolean)>(1);

        r29 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label13:
        $z2 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label14;

        $r7 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>();

        r30 = (android.content.pm.UserInfo) $r7;

        $r8 = virtualinvoke r30.<android.content.pm.UserInfo: android.os.UserHandle getUserHandle()>();

        virtualinvoke r18.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>($r4, $r8, "android.permission.MANAGE_ROLLBACKS");

        goto label13;

     label14:
        return;

     label15:
        $r15 := @caughtexception;

     label16:
        exitmonitor r25;

     label17:
        throw $r15;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label04 to label05 with label03;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch android.content.IntentSender$SendIntentException from label09 to label10 with label11;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    void makeAvailable()
    {
        com.android.server.rollback.Rollback r0;
        java.lang.Object r1;
        boolean $z0;
        java.time.Instant $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.rollback.Rollback;

        r1 = r0.<com.android.server.rollback.Rollback: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z0 = virtualinvoke r0.<com.android.server.rollback.Rollback: boolean isDeleted()>();

        if $z0 == 0 goto label3;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("RollbackManager", "Cannot make deleted rollback available.");

        exitmonitor r1;

     label2:
        return;

     label3:
        r0.<com.android.server.rollback.Rollback: int mState> = 1;

        $r3 = staticinvoke <java.time.Instant: java.time.Instant now()>();

        r0.<com.android.server.rollback.Rollback: java.time.Instant mTimestamp> = $r3;

        staticinvoke <com.android.server.rollback.RollbackStore: void saveRollback(com.android.server.rollback.Rollback)>(r0);

        exitmonitor r1;

     label4:
        return;

     label5:
        $r4 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    boolean notifySessionWithSuccess()
    {
        com.android.server.rollback.Rollback r0;
        java.lang.Object r1;
        int[] $r3;
        int $i0, i1, i2;
        java.lang.Throwable $r4;
        boolean z0;

        r0 := @this: com.android.server.rollback.Rollback;

        r1 = r0.<com.android.server.rollback.Rollback: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        i1 = r0.<com.android.server.rollback.Rollback: int mNumPackageSessionsWithSuccess>;

     label02:
        z0 = 1;

        i2 = i1 + 1;

     label03:
        r0.<com.android.server.rollback.Rollback: int mNumPackageSessionsWithSuccess> = i2;

        $r3 = r0.<com.android.server.rollback.Rollback: int[] mPackageSessionIds>;

        $i0 = lengthof $r3;

        if i2 != $i0 goto label05;

     label04:
        goto label06;

     label05:
        z0 = 0;

     label06:
        exitmonitor r1;

     label07:
        return z0;

     label08:
        $r4 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    boolean restoreUserDataForPackageIfInProgress(java.lang.String, int[], int, java.lang.String, com.android.server.rollback.AppDataRollbackHelper)
    {
        com.android.server.rollback.Rollback r0;
        int[] r1;
        int i0, i1, i2, $i3, i4;
        java.lang.String r2, r7, r14;
        com.android.server.rollback.AppDataRollbackHelper r3;
        java.lang.Object r4, $r10;
        java.util.Iterator r5;
        android.content.rollback.PackageRollbackInfo r6;
        android.content.rollback.RollbackInfo $r8, $r11;
        java.util.List $r9;
        boolean $z1, $z2, $z3, z4, z5, z6;
        java.lang.Throwable $r12, $r13, r15;

        r0 := @this: com.android.server.rollback.Rollback;

        r14 := @parameter0: java.lang.String;

        r1 := @parameter1: int[];

        i0 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: com.android.server.rollback.AppDataRollbackHelper;

        r4 = r0.<com.android.server.rollback.Rollback: java.lang.Object mLock>;

        entermonitor r4;

     label01:
        z4 = virtualinvoke r0.<com.android.server.rollback.Rollback: boolean isRestoreUserDataInProgress()>();

     label02:
        i4 = 0;

        if z4 != 0 goto label05;

     label03:
        exitmonitor r4;

     label04:
        return 0;

     label05:
        z5 = 0;

     label06:
        $r8 = r0.<com.android.server.rollback.Rollback: android.content.rollback.RollbackInfo info>;

        $r9 = virtualinvoke $r8.<android.content.rollback.RollbackInfo: java.util.List getPackages()>();

        r5 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label18;

        $r10 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (android.content.rollback.PackageRollbackInfo) $r10;

        r7 = virtualinvoke r6.<android.content.rollback.PackageRollbackInfo: java.lang.String getPackageName()>();

     label08:
        $z2 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>(r14);

        if $z2 == 0 goto label17;

     label09:
        z6 = 0;

     label10:
        i1 = lengthof r1;

     label11:
        if i4 >= i1 goto label14;

        i2 = r1[i4];

     label12:
        $r11 = r0.<com.android.server.rollback.Rollback: android.content.rollback.RollbackInfo info>;

        $i3 = virtualinvoke $r11.<android.content.rollback.RollbackInfo: int getRollbackId()>();

        $z3 = virtualinvoke r3.<com.android.server.rollback.AppDataRollbackHelper: boolean restoreAppData(int,android.content.rollback.PackageRollbackInfo,int,int,java.lang.String)>($i3, r6, i2, i0, r2);

        z6 = z6 | $z3;

     label13:
        i4 = i4 + 1;

        goto label11;

     label14:
        z5 = 1;

        if z6 == 0 goto label18;

     label15:
        staticinvoke <com.android.server.rollback.RollbackStore: void saveRollback(com.android.server.rollback.Rollback)>(r0);

     label16:
        z5 = 1;

        goto label18;

     label17:
        goto label07;

     label18:
        exitmonitor r4;

     label19:
        return z5;

     label20:
        $r12 := @caughtexception;

        r15 = $r12;

     label21:
        exitmonitor r4;

     label22:
        throw r15;

     label23:
        $r13 := @caughtexception;

        r15 = $r13;

        goto label21;

        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Throwable from label03 to label04 with label20;
        catch java.lang.Throwable from label06 to label07 with label20;
        catch java.lang.Throwable from label07 to label08 with label20;
        catch java.lang.Throwable from label08 to label09 with label23;
        catch java.lang.Throwable from label10 to label11 with label23;
        catch java.lang.Throwable from label12 to label13 with label23;
        catch java.lang.Throwable from label15 to label16 with label23;
        catch java.lang.Throwable from label18 to label19 with label23;
        catch java.lang.Throwable from label21 to label22 with label23;
    }

    void saveRollback()
    {
        com.android.server.rollback.Rollback r0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.rollback.Rollback;

        r1 = r0.<com.android.server.rollback.Rollback: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.rollback.RollbackStore: void saveRollback(com.android.server.rollback.Rollback)>(r0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void setApkSessionId(int)
    {
        com.android.server.rollback.Rollback r0;
        int i0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.rollback.Rollback;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.rollback.Rollback: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<com.android.server.rollback.Rollback: int mApkSessionId> = i0;

        staticinvoke <com.android.server.rollback.RollbackStore: void saveRollback(com.android.server.rollback.Rollback)>(r0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void setRestoreUserDataInProgress(boolean)
    {
        com.android.server.rollback.Rollback r0;
        boolean z0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.rollback.Rollback;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.server.rollback.Rollback: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<com.android.server.rollback.Rollback: boolean mRestoreUserDataInProgress> = z0;

        staticinvoke <com.android.server.rollback.RollbackStore: void saveRollback(com.android.server.rollback.Rollback)>(r0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void setTimestamp(java.time.Instant)
    {
        com.android.server.rollback.Rollback r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        java.time.Instant r3;

        r0 := @this: com.android.server.rollback.Rollback;

        r3 := @parameter0: java.time.Instant;

        r1 = r0.<com.android.server.rollback.Rollback: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<com.android.server.rollback.Rollback: java.time.Instant mTimestamp> = r3;

        staticinvoke <com.android.server.rollback.RollbackStore: void saveRollback(com.android.server.rollback.Rollback)>(r0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void snapshotUserData(java.lang.String, int[], com.android.server.rollback.AppDataRollbackHelper)
    {
        com.android.server.rollback.Rollback r0;
        int[] r1;
        com.android.server.rollback.AppDataRollbackHelper r2;
        java.lang.Object r3, $r8;
        java.util.Iterator r4;
        android.content.rollback.PackageRollbackInfo r5;
        boolean $z0, $z1, $z2;
        android.content.rollback.RollbackInfo $r6, $r10;
        java.util.List $r7;
        java.lang.String $r9, r14;
        int $i0, $i1;
        android.util.IntArray $r11, $r12;
        java.lang.Throwable $r13;

        r0 := @this: com.android.server.rollback.Rollback;

        r14 := @parameter0: java.lang.String;

        r1 := @parameter1: int[];

        r2 := @parameter2: com.android.server.rollback.AppDataRollbackHelper;

        r3 = r0.<com.android.server.rollback.Rollback: java.lang.Object mLock>;

        entermonitor r3;

     label01:
        $z0 = virtualinvoke r0.<com.android.server.rollback.Rollback: boolean isEnabling()>();

        if $z0 != 0 goto label03;

        exitmonitor r3;

     label02:
        return;

     label03:
        $r6 = r0.<com.android.server.rollback.Rollback: android.content.rollback.RollbackInfo info>;

        $r7 = virtualinvoke $r6.<android.content.rollback.RollbackInfo: java.util.List getPackages()>();

        r4 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.content.rollback.PackageRollbackInfo) $r8;

        $r9 = virtualinvoke r5.<android.content.rollback.PackageRollbackInfo: java.lang.String getPackageName()>();

        $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r14);

        if $z2 == 0 goto label06;

        $i0 = virtualinvoke r5.<android.content.rollback.PackageRollbackInfo: int getRollbackDataPolicy()>();

        if $i0 != 0 goto label07;

        $r10 = r0.<com.android.server.rollback.Rollback: android.content.rollback.RollbackInfo info>;

        $i1 = virtualinvoke $r10.<android.content.rollback.RollbackInfo: int getRollbackId()>();

        virtualinvoke r2.<com.android.server.rollback.AppDataRollbackHelper: void snapshotAppData(int,android.content.rollback.PackageRollbackInfo,int[])>($i1, r5, r1);

        $r11 = virtualinvoke r5.<android.content.rollback.PackageRollbackInfo: android.util.IntArray getSnapshottedUsers()>();

        $r12 = staticinvoke <android.util.IntArray: android.util.IntArray wrap(int[])>(r1);

        virtualinvoke $r11.<android.util.IntArray: void addAll(android.util.IntArray)>($r12);

        staticinvoke <com.android.server.rollback.RollbackStore: void saveRollback(com.android.server.rollback.Rollback)>(r0);

     label05:
        goto label07;

     label06:
        goto label04;

     label07:
        exitmonitor r3;

     label08:
        return;

     label09:
        $r13 := @caughtexception;

     label10:
        exitmonitor r3;

     label11:
        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public static void <clinit>()
    {
        <com.android.server.rollback.Rollback: java.lang.String TAG> = "RollbackManager";

        <com.android.server.rollback.Rollback: int ROLLBACK_STATE_ENABLING> = 0;

        <com.android.server.rollback.Rollback: int ROLLBACK_STATE_DELETED> = 4;

        <com.android.server.rollback.Rollback: int ROLLBACK_STATE_COMMITTED> = 3;

        <com.android.server.rollback.Rollback: int ROLLBACK_STATE_AVAILABLE> = 1;

        return;
    }
}
