public final class com.android.server.rollback.RollbackPackageHealthObserver extends java.lang.Object implements com.android.server.PackageWatchdog$PackageHealthObserver
{
    private static final java.lang.String NAME;
    private static final java.lang.String TAG;
    private final com.android.server.pm.ApexManager mApexManager;
    private final android.content.Context mContext;
    private final android.os.Handler mHandler;
    private final java.io.File mLastStagedRollbackIdsFile;
    private final java.util.Set mPendingStagedRollbackIds;

    void <init>(android.content.Context)
    {
        com.android.server.rollback.RollbackPackageHealthObserver r0;
        android.util.ArraySet $r1;
        android.os.HandlerThread $r2;
        android.os.Handler $r3;
        java.io.File $r4, $r5, $r6;
        android.content.Context $r7, r10;
        com.android.server.PackageWatchdog $r8;
        com.android.server.pm.ApexManager $r9;

        r0 := @this: com.android.server.rollback.RollbackPackageHealthObserver;

        r10 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.util.ArraySet;

        specialinvoke $r1.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.rollback.RollbackPackageHealthObserver: java.util.Set mPendingStagedRollbackIds> = $r1;

        r0.<com.android.server.rollback.RollbackPackageHealthObserver: android.content.Context mContext> = r10;

        $r2 = new android.os.HandlerThread;

        specialinvoke $r2.<android.os.HandlerThread: void <init>(java.lang.String)>("RollbackPackageHealthObserver");

        virtualinvoke $r2.<android.os.HandlerThread: void start()>();

        $r3 = virtualinvoke $r2.<android.os.HandlerThread: android.os.Handler getThreadHandler()>();

        r0.<com.android.server.rollback.RollbackPackageHealthObserver: android.os.Handler mHandler> = $r3;

        $r4 = new java.io.File;

        $r5 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, "rollback-observer");

        virtualinvoke $r4.<java.io.File: boolean mkdirs()>();

        $r6 = new java.io.File;

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, "last-staged-rollback-ids");

        r0.<com.android.server.rollback.RollbackPackageHealthObserver: java.io.File mLastStagedRollbackIdsFile> = $r6;

        $r7 = r0.<com.android.server.rollback.RollbackPackageHealthObserver: android.content.Context mContext>;

        $r8 = staticinvoke <com.android.server.PackageWatchdog: com.android.server.PackageWatchdog getInstance(android.content.Context)>($r7);

        virtualinvoke $r8.<com.android.server.PackageWatchdog: void registerHealthObserver(com.android.server.PackageWatchdog$PackageHealthObserver)>(r0);

        $r9 = staticinvoke <com.android.server.pm.ApexManager: com.android.server.pm.ApexManager getInstance()>();

        r0.<com.android.server.rollback.RollbackPackageHealthObserver: com.android.server.pm.ApexManager mApexManager> = $r9;

        return;
    }

    static void access$000(com.android.server.rollback.RollbackPackageHealthObserver, android.content.rollback.RollbackManager, int, android.content.BroadcastReceiver, android.content.pm.VersionedPackage)
    {
        com.android.server.rollback.RollbackPackageHealthObserver r0;
        android.content.rollback.RollbackManager r1;
        int i0;
        android.content.BroadcastReceiver r2;
        android.content.pm.VersionedPackage r3;

        r0 := @parameter0: com.android.server.rollback.RollbackPackageHealthObserver;

        r1 := @parameter1: android.content.rollback.RollbackManager;

        i0 := @parameter2: int;

        r2 := @parameter3: android.content.BroadcastReceiver;

        r3 := @parameter4: android.content.pm.VersionedPackage;

        specialinvoke r0.<com.android.server.rollback.RollbackPackageHealthObserver: void handleStagedSessionChange(android.content.rollback.RollbackManager,int,android.content.BroadcastReceiver,android.content.pm.VersionedPackage)>(r1, i0, r2, r3);

        return;
    }

    private android.content.rollback.RollbackInfo getAvailableRollback(android.content.pm.VersionedPackage)
    {
        com.android.server.rollback.RollbackPackageHealthObserver r0;
        android.content.pm.VersionedPackage r1, $r13, $r14;
        java.util.Iterator r2, r4;
        android.content.rollback.RollbackInfo r3;
        android.content.rollback.PackageRollbackInfo r5;
        android.content.Context $r6;
        java.lang.Object $r7, $r10, $r12;
        android.content.rollback.RollbackManager $r8;
        java.util.List $r9, $r11;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String $r15, $r16;

        r0 := @this: com.android.server.rollback.RollbackPackageHealthObserver;

        r1 := @parameter0: android.content.pm.VersionedPackage;

        $r6 = r0.<com.android.server.rollback.RollbackPackageHealthObserver: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/content/rollback/RollbackManager;");

        $r8 = (android.content.rollback.RollbackManager) $r7;

        $r9 = virtualinvoke $r8.<android.content.rollback.RollbackManager: java.util.List getAvailableRollbacks()>();

        r2 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.content.rollback.RollbackInfo) $r10;

        $r11 = virtualinvoke r3.<android.content.rollback.RollbackInfo: java.util.List getPackages()>();

        r4 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.content.rollback.PackageRollbackInfo) $r12;

        $r13 = virtualinvoke r5.<android.content.rollback.PackageRollbackInfo: android.content.pm.VersionedPackage getVersionRolledBackFrom()>();

        $z2 = virtualinvoke $r13.<android.content.pm.VersionedPackage: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label3;

        return r3;

     label3:
        $z3 = virtualinvoke r5.<android.content.rollback.PackageRollbackInfo: boolean isApkInApex()>();

        if $z3 == 0 goto label4;

        $r14 = virtualinvoke r5.<android.content.rollback.PackageRollbackInfo: android.content.pm.VersionedPackage getVersionRolledBackFrom()>();

        $r15 = virtualinvoke $r14.<android.content.pm.VersionedPackage: java.lang.String getPackageName()>();

        $r16 = virtualinvoke r1.<android.content.pm.VersionedPackage: java.lang.String getPackageName()>();

        $z4 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z4 == 0 goto label4;

        return r3;

     label4:
        goto label2;

     label5:
        goto label1;

     label6:
        return null;
    }

    private void handleStagedSessionChange(android.content.rollback.RollbackManager, int, android.content.BroadcastReceiver, android.content.pm.VersionedPackage)
    {
        com.android.server.rollback.RollbackPackageHealthObserver r0;
        int i0, i1, $i2, $i3, i4;
        android.content.BroadcastReceiver r1;
        android.content.pm.VersionedPackage r2;
        android.content.pm.PackageInstaller r3;
        android.content.Context $r4, $r6, $r10, $r11;
        android.content.pm.PackageManager $r5;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Object $r7, $r9;
        android.os.PowerManager $r8;
        android.content.rollback.RollbackManager r12;
        java.util.List r13;
        android.content.rollback.RollbackInfo r14;
        android.content.pm.PackageInstaller$SessionInfo r15;

        r0 := @this: com.android.server.rollback.RollbackPackageHealthObserver;

        r12 := @parameter0: android.content.rollback.RollbackManager;

        i0 := @parameter1: int;

        r1 := @parameter2: android.content.BroadcastReceiver;

        r2 := @parameter3: android.content.pm.VersionedPackage;

        $r4 = r0.<com.android.server.rollback.RollbackPackageHealthObserver: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r3 = virtualinvoke $r5.<android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>();

        r13 = virtualinvoke r12.<android.content.rollback.RollbackManager: java.util.List getRecentlyCommittedRollbacks()>();

        i4 = 0;

     label1:
        $i2 = interfaceinvoke r13.<java.util.List: int size()>();

        if i4 >= $i2 goto label4;

        $r9 = interfaceinvoke r13.<java.util.List: java.lang.Object get(int)>(i4);

        r14 = (android.content.rollback.RollbackInfo) $r9;

        i1 = virtualinvoke r14.<android.content.rollback.RollbackInfo: int getCommittedSessionId()>();

        $i3 = virtualinvoke r14.<android.content.rollback.RollbackInfo: int getRollbackId()>();

        if i0 != $i3 goto label3;

        if i1 == -1 goto label3;

        r15 = virtualinvoke r3.<android.content.pm.PackageInstaller: android.content.pm.PackageInstaller$SessionInfo getSessionInfo(int)>(i1);

        $z1 = virtualinvoke r15.<android.content.pm.PackageInstaller$SessionInfo: boolean isStagedSessionReady()>();

        if $z1 == 0 goto label2;

        $z4 = specialinvoke r0.<com.android.server.rollback.RollbackPackageHealthObserver: boolean markStagedSessionHandled(int)>(i0);

        if $z4 == 0 goto label2;

        $r11 = r0.<com.android.server.rollback.RollbackPackageHealthObserver: android.content.Context mContext>;

        virtualinvoke $r11.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>(r1);

        specialinvoke r0.<com.android.server.rollback.RollbackPackageHealthObserver: void saveStagedRollbackId(int,android.content.pm.VersionedPackage)>(i0, r2);

        staticinvoke <com.android.server.rollback.WatchdogRollbackLogger: void logEvent(android.content.pm.VersionedPackage,int,int,java.lang.String)>(r2, 4, 0, "");

        goto label3;

     label2:
        $z2 = virtualinvoke r15.<android.content.pm.PackageInstaller$SessionInfo: boolean isStagedSessionFailed()>();

        if $z2 == 0 goto label3;

        $z3 = specialinvoke r0.<com.android.server.rollback.RollbackPackageHealthObserver: boolean markStagedSessionHandled(int)>(i0);

        if $z3 == 0 goto label3;

        staticinvoke <com.android.server.rollback.WatchdogRollbackLogger: void logEvent(android.content.pm.VersionedPackage,int,int,java.lang.String)>(r2, 3, 0, "");

        $r10 = r0.<com.android.server.rollback.RollbackPackageHealthObserver: android.content.Context mContext>;

        virtualinvoke $r10.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>(r1);

     label3:
        i4 = i4 + 1;

        goto label1;

     label4:
        $z0 = specialinvoke r0.<com.android.server.rollback.RollbackPackageHealthObserver: boolean isPendingStagedSessionsEmpty()>();

        if $z0 == 0 goto label5;

        $r6 = r0.<com.android.server.rollback.RollbackPackageHealthObserver: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/os/PowerManager;");

        $r8 = (android.os.PowerManager) $r7;

        virtualinvoke $r8.<android.os.PowerManager: void reboot(java.lang.String)>("Rollback staged install");

     label5:
        return;
    }

    private boolean isModule(java.lang.String)
    {
        com.android.server.rollback.RollbackPackageHealthObserver r0;
        java.lang.Object $r1;
        android.content.pm.PackageManagerInternal $r2;
        com.android.server.pm.ApexManager $r3;
        android.content.pm.PackageManager$NameNotFoundException $r4;
        java.lang.String r5, r7, r8;
        com.android.server.pm.parsing.pkg.AndroidPackage r6;
        android.content.Context $r9;
        android.content.pm.PackageManager r10;
        boolean z0;
        android.content.pm.ModuleInfo r11;

        r0 := @this: com.android.server.rollback.RollbackPackageHealthObserver;

        r5 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/content/pm/PackageManagerInternal;");

        $r2 = (android.content.pm.PackageManagerInternal) $r1;

        r6 = virtualinvoke $r2.<android.content.pm.PackageManagerInternal: com.android.server.pm.parsing.pkg.AndroidPackage getPackage(java.lang.String)>(r5);

        r7 = r5;

        if r6 == null goto label1;

        $r3 = r0.<com.android.server.rollback.RollbackPackageHealthObserver: com.android.server.pm.ApexManager mApexManager>;

        r8 = virtualinvoke $r3.<com.android.server.pm.ApexManager: java.lang.String getActiveApexPackageNameContainingPackage(com.android.server.pm.parsing.pkg.AndroidPackage)>(r6);

        r7 = r5;

        if r8 == null goto label1;

        r7 = r8;

     label1:
        $r9 = r0.<com.android.server.rollback.RollbackPackageHealthObserver: android.content.Context mContext>;

        r10 = virtualinvoke $r9.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        z0 = 0;

     label2:
        r11 = virtualinvoke r10.<android.content.pm.PackageManager: android.content.pm.ModuleInfo getModuleInfo(java.lang.String,int)>(r7, 0);

     label3:
        if r11 == null goto label4;

        z0 = 1;

     label4:
        return z0;

     label5:
        $r4 := @caughtexception;

        return 0;

        catch android.content.pm.PackageManager$NameNotFoundException from label2 to label3 with label5;
    }

    private boolean isPendingStagedSessionsEmpty()
    {
        com.android.server.rollback.RollbackPackageHealthObserver r0;
        java.util.Set r1, $r3;
        boolean z0;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.rollback.RollbackPackageHealthObserver;

        r1 = r0.<com.android.server.rollback.RollbackPackageHealthObserver: java.util.Set mPendingStagedRollbackIds>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.rollback.RollbackPackageHealthObserver: java.util.Set mPendingStagedRollbackIds>;

        z0 = interfaceinvoke $r3.<java.util.Set: boolean isEmpty()>();

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    static void lambda$rollbackPackage$2(android.content.rollback.RollbackManager, android.content.rollback.RollbackInfo, android.content.pm.VersionedPackage, com.android.server.rollback.LocalIntentReceiver)
    {
        android.content.rollback.RollbackManager r0;
        android.content.rollback.RollbackInfo r1;
        android.content.pm.VersionedPackage r2;
        com.android.server.rollback.LocalIntentReceiver r3;
        int $i0;
        java.util.List $r4;
        android.content.IntentSender $r5;

        r0 := @parameter0: android.content.rollback.RollbackManager;

        r1 := @parameter1: android.content.rollback.RollbackInfo;

        r2 := @parameter2: android.content.pm.VersionedPackage;

        r3 := @parameter3: com.android.server.rollback.LocalIntentReceiver;

        $i0 = virtualinvoke r1.<android.content.rollback.RollbackInfo: int getRollbackId()>();

        $r4 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r2);

        $r5 = virtualinvoke r3.<com.android.server.rollback.LocalIntentReceiver: android.content.IntentSender getIntentSender()>();

        virtualinvoke r0.<android.content.rollback.RollbackManager: void commitRollback(int,java.util.List,android.content.IntentSender)>($i0, $r4, $r5);

        return;
    }

    private android.content.BroadcastReceiver listenForStagedSessionReady(android.content.rollback.RollbackManager, int, android.content.pm.VersionedPackage)
    {
        com.android.server.rollback.RollbackPackageHealthObserver r0;
        int i0;
        com.android.server.rollback.RollbackPackageHealthObserver$1 $r1;
        android.content.IntentFilter $r2;
        android.content.Context $r3;
        android.content.rollback.RollbackManager r5;
        android.content.pm.VersionedPackage r6;

        r0 := @this: com.android.server.rollback.RollbackPackageHealthObserver;

        r5 := @parameter0: android.content.rollback.RollbackManager;

        i0 := @parameter1: int;

        r6 := @parameter2: android.content.pm.VersionedPackage;

        $r1 = new com.android.server.rollback.RollbackPackageHealthObserver$1;

        specialinvoke $r1.<com.android.server.rollback.RollbackPackageHealthObserver$1: void <init>(com.android.server.rollback.RollbackPackageHealthObserver,android.content.rollback.RollbackManager,int,android.content.pm.VersionedPackage)>(r0, r5, i0, r6);

        $r2 = new android.content.IntentFilter;

        specialinvoke $r2.<android.content.IntentFilter: void <init>(java.lang.String)>("android.content.pm.action.SESSION_UPDATED");

        $r3 = r0.<com.android.server.rollback.RollbackPackageHealthObserver: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r1, $r2);

        return $r1;
    }

    private boolean markStagedSessionHandled(int)
    {
        com.android.server.rollback.RollbackPackageHealthObserver r0;
        int i0;
        java.util.Set r1, $r3;
        boolean z0;
        java.lang.Integer $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.rollback.RollbackPackageHealthObserver;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.rollback.RollbackPackageHealthObserver: java.util.Set mPendingStagedRollbackIds>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.rollback.RollbackPackageHealthObserver: java.util.Set mPendingStagedRollbackIds>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        z0 = interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>($r4);

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void onBootCompleted()
    {
        com.android.server.rollback.RollbackPackageHealthObserver r0;
        android.content.rollback.RollbackManager r1;
        android.util.SparseArray r2;
        android.content.Context $r3, $r6, $r10;
        java.lang.Object $r4, $r7;
        java.util.List $r5, $r9;
        boolean $z0;
        int $i0, i1, $i2;
        java.lang.String $r8;
        com.android.server.PackageWatchdog $r11;

        r0 := @this: com.android.server.rollback.RollbackPackageHealthObserver;

        $r3 = r0.<com.android.server.rollback.RollbackPackageHealthObserver: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/content/rollback/RollbackManager;");

        r1 = (android.content.rollback.RollbackManager) $r4;

        $r5 = virtualinvoke r1.<android.content.rollback.RollbackManager: java.util.List getAvailableRollbacks()>();

        $z0 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r10 = r0.<com.android.server.rollback.RollbackPackageHealthObserver: android.content.Context mContext>;

        $r11 = staticinvoke <com.android.server.PackageWatchdog: com.android.server.PackageWatchdog getInstance(android.content.Context)>($r10);

        virtualinvoke $r11.<com.android.server.PackageWatchdog: void scheduleCheckAndMitigateNativeCrashes()>();

     label1:
        r2 = specialinvoke r0.<com.android.server.rollback.RollbackPackageHealthObserver: android.util.SparseArray popLastStagedRollbackIds()>();

        i1 = 0;

     label2:
        $i2 = virtualinvoke r2.<android.util.SparseArray: int size()>();

        if i1 >= $i2 goto label3;

        $r6 = r0.<com.android.server.rollback.RollbackPackageHealthObserver: android.content.Context mContext>;

        $i0 = virtualinvoke r2.<android.util.SparseArray: int keyAt(int)>(i1);

        $r7 = virtualinvoke r2.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r8 = (java.lang.String) $r7;

        $r9 = virtualinvoke r1.<android.content.rollback.RollbackManager: java.util.List getRecentlyCommittedRollbacks()>();

        staticinvoke <com.android.server.rollback.WatchdogRollbackLogger: void logRollbackStatusOnBoot(android.content.Context,int,java.lang.String,java.util.List)>($r6, $i0, $r8, $r9);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    private android.util.SparseArray popLastStagedRollbackIds()
    {
        com.android.server.rollback.RollbackPackageHealthObserver r0;
        java.io.File $r1, $r2, $r4;
        java.lang.Throwable $r3;
        android.util.SparseArray r5;

        r0 := @this: com.android.server.rollback.RollbackPackageHealthObserver;

     label1:
        $r1 = r0.<com.android.server.rollback.RollbackPackageHealthObserver: java.io.File mLastStagedRollbackIdsFile>;

        r5 = staticinvoke <com.android.server.rollback.RollbackPackageHealthObserver: android.util.SparseArray readStagedRollbackIds(java.io.File)>($r1);

     label2:
        $r2 = r0.<com.android.server.rollback.RollbackPackageHealthObserver: java.io.File mLastStagedRollbackIdsFile>;

        virtualinvoke $r2.<java.io.File: boolean delete()>();

        return r5;

     label3:
        $r3 := @caughtexception;

        $r4 = r0.<com.android.server.rollback.RollbackPackageHealthObserver: java.io.File mLastStagedRollbackIdsFile>;

        virtualinvoke $r4.<java.io.File: boolean delete()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    static android.util.SparseArray readStagedRollbackIds(java.io.File)
    {
        java.io.BufferedReader r1;
        java.lang.String[] r2;
        android.util.SparseArray $r3, $r6;
        java.lang.String $r4, r9, r10, r11;
        int $i0, $i1;
        java.lang.Exception $r5;
        java.io.File r7;
        java.io.FileReader r8;

        r7 := @parameter0: java.io.File;

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

     label01:
        r1 = new java.io.BufferedReader;

        r8 = new java.io.FileReader;

        specialinvoke r8.<java.io.FileReader: void <init>(java.io.File)>(r7);

        specialinvoke r1.<java.io.BufferedReader: void <init>(java.io.Reader)>(r8);

     label02:
        r9 = virtualinvoke r1.<java.io.BufferedReader: java.lang.String readLine()>();

     label03:
        if r9 == null goto label10;

     label04:
        $r4 = virtualinvoke r9.<java.lang.String: java.lang.String trim()>();

        r2 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

     label05:
        r10 = r2[0];

        r11 = "";

     label06:
        $i0 = lengthof r2;

        if $i0 <= 1 goto label08;

     label07:
        r11 = r2[1];

     label08:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r10);

        virtualinvoke $r3.<android.util.SparseArray: void put(int,java.lang.Object)>($i1, r11);

     label09:
        goto label02;

     label10:
        return $r3;

     label11:
        $r5 := @caughtexception;

        $r6 = new android.util.SparseArray;

        specialinvoke $r6.<android.util.SparseArray: void <init>()>();

        return $r6;

        catch java.lang.Exception from label01 to label02 with label11;
        catch java.lang.Exception from label02 to label03 with label11;
        catch java.lang.Exception from label04 to label05 with label11;
        catch java.lang.Exception from label06 to label07 with label11;
        catch java.lang.Exception from label08 to label09 with label11;
    }

    private void rollbackAll()
    {
        com.android.server.rollback.RollbackPackageHealthObserver r0;
        java.util.List r1, $r7;
        android.content.rollback.RollbackInfo r2, r18;
        android.content.Context $r3;
        java.lang.Object $r4, $r6, $r8, $r11;
        android.content.rollback.RollbackManager $r5;
        boolean $z0, $z1, $z2;
        android.content.rollback.PackageRollbackInfo $r9;
        android.content.pm.VersionedPackage $r10;
        java.util.Set $r12, r15;
        int $i1;
        java.lang.Integer $r13;
        java.lang.Throwable $r14;
        java.util.Iterator r16, r17;

        r0 := @this: com.android.server.rollback.RollbackPackageHealthObserver;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("RollbackPackageHealthObserver", "Rolling back all available rollbacks");

        $r3 = r0.<com.android.server.rollback.RollbackPackageHealthObserver: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/content/rollback/RollbackManager;");

        $r5 = (android.content.rollback.RollbackManager) $r4;

        r1 = virtualinvoke $r5.<android.content.rollback.RollbackManager: java.util.List getAvailableRollbacks()>();

        r15 = r0.<com.android.server.rollback.RollbackPackageHealthObserver: java.util.Set mPendingStagedRollbackIds>;

        entermonitor r15;

     label01:
        r16 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r11 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.content.rollback.RollbackInfo) $r11;

        $z2 = virtualinvoke r2.<android.content.rollback.RollbackInfo: boolean isStaged()>();

        if $z2 == 0 goto label03;

        $r12 = r0.<com.android.server.rollback.RollbackPackageHealthObserver: java.util.Set mPendingStagedRollbackIds>;

        $i1 = virtualinvoke r2.<android.content.rollback.RollbackInfo: int getRollbackId()>();

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>($r13);

     label03:
        goto label02;

     label04:
        exitmonitor r15;

     label05:
        r17 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z1 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        $r6 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r18 = (android.content.rollback.RollbackInfo) $r6;

        $r7 = virtualinvoke r18.<android.content.rollback.RollbackInfo: java.util.List getPackages()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(0);

        $r9 = (android.content.rollback.PackageRollbackInfo) $r8;

        $r10 = virtualinvoke $r9.<android.content.rollback.PackageRollbackInfo: android.content.pm.VersionedPackage getVersionRolledBackFrom()>();

        specialinvoke r0.<com.android.server.rollback.RollbackPackageHealthObserver: void rollbackPackage(android.content.rollback.RollbackInfo,android.content.pm.VersionedPackage,int)>(r18, $r10, 1);

        goto label06;

     label07:
        return;

     label08:
        $r14 := @caughtexception;

     label09:
        exitmonitor r15;

     label10:
        throw $r14;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private void rollbackPackage(android.content.rollback.RollbackInfo, android.content.pm.VersionedPackage, int)
    {
        com.android.server.rollback.RollbackPackageHealthObserver r0;
        android.content.rollback.RollbackInfo r1;
        android.content.pm.VersionedPackage r2, r13;
        int i0, i1;
        android.content.rollback.RollbackManager r3;
        android.content.Context $r4, $r11;
        java.lang.Object $r5;
        java.lang.String $r6, r12;
        boolean $z0;
        com.android.server.rollback.LocalIntentReceiver $r7;
        com.android.server.rollback._$$Lambda$RollbackPackageHealthObserver$IamLzWoD8UIw0nYBYf04E_MUT8U $r8;
        com.android.server.rollback._$$Lambda$RollbackPackageHealthObserver$_CTueeoAyZZbpbCYMvJ3rbtIF94 $r9;
        android.os.Handler $r10;

        r0 := @this: com.android.server.rollback.RollbackPackageHealthObserver;

        r1 := @parameter0: android.content.rollback.RollbackInfo;

        r2 := @parameter1: android.content.pm.VersionedPackage;

        i0 := @parameter2: int;

        $r4 = r0.<com.android.server.rollback.RollbackPackageHealthObserver: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/content/rollback/RollbackManager;");

        r3 = (android.content.rollback.RollbackManager) $r5;

        i1 = staticinvoke <com.android.server.rollback.WatchdogRollbackLogger: int mapFailureReasonToMetric(int)>(i0);

        if i0 != 1 goto label1;

        r12 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("sys.init.updatable_crashing_process_name", "");

        goto label2;

     label1:
        r12 = virtualinvoke r2.<android.content.pm.VersionedPackage: java.lang.String getPackageName()>();

     label2:
        $r6 = virtualinvoke r2.<android.content.pm.VersionedPackage: java.lang.String getPackageName()>();

        $z0 = specialinvoke r0.<com.android.server.rollback.RollbackPackageHealthObserver: boolean isModule(java.lang.String)>($r6);

        if $z0 == 0 goto label3;

        $r11 = r0.<com.android.server.rollback.RollbackPackageHealthObserver: android.content.Context mContext>;

        r13 = staticinvoke <com.android.server.rollback.WatchdogRollbackLogger: android.content.pm.VersionedPackage getLogPackage(android.content.Context,android.content.pm.VersionedPackage)>($r11, r2);

        goto label4;

     label3:
        r13 = null;

     label4:
        staticinvoke <com.android.server.rollback.WatchdogRollbackLogger: void logEvent(android.content.pm.VersionedPackage,int,int,java.lang.String)>(r13, 1, i1, r12);

        $r7 = new com.android.server.rollback.LocalIntentReceiver;

        $r8 = new com.android.server.rollback._$$Lambda$RollbackPackageHealthObserver$IamLzWoD8UIw0nYBYf04E_MUT8U;

        specialinvoke $r8.<com.android.server.rollback._$$Lambda$RollbackPackageHealthObserver$IamLzWoD8UIw0nYBYf04E_MUT8U: void <init>(com.android.server.rollback.RollbackPackageHealthObserver,android.content.rollback.RollbackInfo,android.content.rollback.RollbackManager,android.content.pm.VersionedPackage,int,java.lang.String)>(r0, r1, r3, r13, i1, r12);

        specialinvoke $r7.<com.android.server.rollback.LocalIntentReceiver: void <init>(java.util.function.Consumer)>($r8);

        $r10 = r0.<com.android.server.rollback.RollbackPackageHealthObserver: android.os.Handler mHandler>;

        $r9 = new com.android.server.rollback._$$Lambda$RollbackPackageHealthObserver$_CTueeoAyZZbpbCYMvJ3rbtIF94;

        specialinvoke $r9.<com.android.server.rollback._$$Lambda$RollbackPackageHealthObserver$_CTueeoAyZZbpbCYMvJ3rbtIF94: void <init>(android.content.rollback.RollbackManager,android.content.rollback.RollbackInfo,android.content.pm.VersionedPackage,com.android.server.rollback.LocalIntentReceiver)>(r3, r1, r2, $r7);

        virtualinvoke $r10.<android.os.Handler: boolean post(java.lang.Runnable)>($r9);

        return;
    }

    private void saveStagedRollbackId(int, android.content.pm.VersionedPackage)
    {
        com.android.server.rollback.RollbackPackageHealthObserver r0;
        int i0;
        android.content.pm.VersionedPackage r1;
        java.io.File $r2;

        r0 := @this: com.android.server.rollback.RollbackPackageHealthObserver;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.pm.VersionedPackage;

        $r2 = r0.<com.android.server.rollback.RollbackPackageHealthObserver: java.io.File mLastStagedRollbackIdsFile>;

        staticinvoke <com.android.server.rollback.RollbackPackageHealthObserver: void writeStagedRollbackId(java.io.File,int,android.content.pm.VersionedPackage)>($r2, i0, r1);

        return;
    }

    static void writeStagedRollbackId(java.io.File, int, android.content.pm.VersionedPackage)
    {
        java.io.File r0;
        int i0;
        java.io.FileOutputStream r1;
        java.io.PrintWriter r2, $r4, $r5;
        java.lang.String $r3, r9;
        java.lang.Throwable $r7;
        android.content.pm.VersionedPackage r8;

        r0 := @parameter0: java.io.File;

        i0 := @parameter1: int;

        r8 := @parameter2: android.content.pm.VersionedPackage;

     label1:
        r1 = new java.io.FileOutputStream;

        specialinvoke r1.<java.io.FileOutputStream: void <init>(java.io.File,boolean)>(r0, 1);

        r2 = new java.io.PrintWriter;

        specialinvoke r2.<java.io.PrintWriter: void <init>(java.io.OutputStream)>(r1);

     label2:
        if r8 == null goto label5;

     label3:
        r9 = virtualinvoke r8.<android.content.pm.VersionedPackage: java.lang.String getPackageName()>();

     label4:
        goto label6;

     label5:
        r9 = "";

     label6:
        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        $r4 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r3);

        $r5 = virtualinvoke $r4.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(",");

        virtualinvoke $r5.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r9);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        virtualinvoke r2.<java.io.PrintWriter: void flush()>();

        staticinvoke <android.os.FileUtils: boolean sync(java.io.FileOutputStream)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void close()>();

     label7:
        goto label9;

     label8:
        $r7 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RollbackPackageHealthObserver", "Failed to save last staged rollback id", $r7);

        virtualinvoke r0.<java.io.File: boolean delete()>();

     label9:
        return;

        catch java.io.IOException from label1 to label2 with label8;
        catch java.io.IOException from label3 to label4 with label8;
        catch java.io.IOException from label6 to label7 with label8;
    }

    public boolean execute(android.content.pm.VersionedPackage, int)
    {
        com.android.server.rollback.RollbackPackageHealthObserver r0;
        android.content.pm.VersionedPackage r1;
        int i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;
        android.content.rollback.RollbackInfo r6;

        r0 := @this: com.android.server.rollback.RollbackPackageHealthObserver;

        r1 := @parameter0: android.content.pm.VersionedPackage;

        i0 := @parameter1: int;

        if i0 != 1 goto label1;

        specialinvoke r0.<com.android.server.rollback.RollbackPackageHealthObserver: void rollbackAll()>();

        return 1;

     label1:
        r6 = specialinvoke r0.<com.android.server.rollback.RollbackPackageHealthObserver: android.content.rollback.RollbackInfo getAvailableRollback(android.content.pm.VersionedPackage)>(r1);

        if r6 != null goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected rollback but no valid rollback found for ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("RollbackPackageHealthObserver", $r5);

        return 0;

     label2:
        specialinvoke r0.<com.android.server.rollback.RollbackPackageHealthObserver: void rollbackPackage(android.content.rollback.RollbackInfo,android.content.pm.VersionedPackage,int)>(r6, r1, i0);

        return 1;
    }

    public java.lang.String getName()
    {
        com.android.server.rollback.RollbackPackageHealthObserver r0;

        r0 := @this: com.android.server.rollback.RollbackPackageHealthObserver;

        return "rollback-observer";
    }

    public void lambda$onBootCompletedAsync$0$RollbackPackageHealthObserver()
    {
        com.android.server.rollback.RollbackPackageHealthObserver r0;

        r0 := @this: com.android.server.rollback.RollbackPackageHealthObserver;

        specialinvoke r0.<com.android.server.rollback.RollbackPackageHealthObserver: void onBootCompleted()>();

        return;
    }

    public void lambda$rollbackPackage$1$RollbackPackageHealthObserver(android.content.rollback.RollbackInfo, android.content.rollback.RollbackManager, android.content.pm.VersionedPackage, int, java.lang.String, android.content.Intent)
    {
        com.android.server.rollback.RollbackPackageHealthObserver r0;
        android.content.pm.VersionedPackage r1;
        java.lang.String r2;
        android.content.Intent r3;
        int $i0, $i1, i2, i3;
        boolean $z0, $z2;
        java.util.Set $r4, r10;
        java.lang.Integer $r5;
        android.content.BroadcastReceiver $r6;
        java.lang.Throwable $r7;
        android.content.rollback.RollbackInfo r8;
        android.content.rollback.RollbackManager r9;

        r0 := @this: com.android.server.rollback.RollbackPackageHealthObserver;

        r8 := @parameter0: android.content.rollback.RollbackInfo;

        r9 := @parameter1: android.content.rollback.RollbackManager;

        r1 := @parameter2: android.content.pm.VersionedPackage;

        i2 := @parameter3: int;

        r2 := @parameter4: java.lang.String;

        r3 := @parameter5: android.content.Intent;

        $i0 = virtualinvoke r3.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.content.rollback.extra.STATUS", 1);

        if $i0 != 0 goto label7;

        $z2 = virtualinvoke r8.<android.content.rollback.RollbackInfo: boolean isStaged()>();

        if $z2 == 0 goto label6;

        i3 = virtualinvoke r8.<android.content.rollback.RollbackInfo: int getRollbackId()>();

        r10 = r0.<com.android.server.rollback.RollbackPackageHealthObserver: java.util.Set mPendingStagedRollbackIds>;

        entermonitor r10;

     label1:
        $r4 = r0.<com.android.server.rollback.RollbackPackageHealthObserver: java.util.Set mPendingStagedRollbackIds>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r5);

        exitmonitor r10;

     label2:
        $r6 = specialinvoke r0.<com.android.server.rollback.RollbackPackageHealthObserver: android.content.BroadcastReceiver listenForStagedSessionReady(android.content.rollback.RollbackManager,int,android.content.pm.VersionedPackage)>(r9, i3, r1);

        specialinvoke r0.<com.android.server.rollback.RollbackPackageHealthObserver: void handleStagedSessionChange(android.content.rollback.RollbackManager,int,android.content.BroadcastReceiver,android.content.pm.VersionedPackage)>(r9, i3, $r6, r1);

        goto label9;

     label3:
        $r7 := @caughtexception;

     label4:
        exitmonitor r10;

     label5:
        throw $r7;

     label6:
        staticinvoke <com.android.server.rollback.WatchdogRollbackLogger: void logEvent(android.content.pm.VersionedPackage,int,int,java.lang.String)>(r1, 2, i2, r2);

        goto label9;

     label7:
        $z0 = virtualinvoke r8.<android.content.rollback.RollbackInfo: boolean isStaged()>();

        if $z0 == 0 goto label8;

        $i1 = virtualinvoke r8.<android.content.rollback.RollbackInfo: int getRollbackId()>();

        specialinvoke r0.<com.android.server.rollback.RollbackPackageHealthObserver: boolean markStagedSessionHandled(int)>($i1);

     label8:
        staticinvoke <com.android.server.rollback.WatchdogRollbackLogger: void logEvent(android.content.pm.VersionedPackage,int,int,java.lang.String)>(r1, 3, i2, r2);

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onBootCompletedAsync()
    {
        com.android.server.rollback.RollbackPackageHealthObserver r0;
        com.android.server.rollback._$$Lambda$RollbackPackageHealthObserver$pi_OhdsKzJHdXoHHtYauaWDdX5A $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.server.rollback.RollbackPackageHealthObserver;

        $r2 = r0.<com.android.server.rollback.RollbackPackageHealthObserver: android.os.Handler mHandler>;

        $r1 = new com.android.server.rollback._$$Lambda$RollbackPackageHealthObserver$pi_OhdsKzJHdXoHHtYauaWDdX5A;

        specialinvoke $r1.<com.android.server.rollback._$$Lambda$RollbackPackageHealthObserver$pi_OhdsKzJHdXoHHtYauaWDdX5A: void <init>(com.android.server.rollback.RollbackPackageHealthObserver)>(r0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    public int onHealthCheckFailed(android.content.pm.VersionedPackage, int)
    {
        com.android.server.rollback.RollbackPackageHealthObserver r0;
        android.content.pm.VersionedPackage r1;
        int i0;
        android.content.rollback.RollbackInfo $r2;
        android.content.Context $r3;
        java.lang.Object $r4;
        android.content.rollback.RollbackManager $r5;
        java.util.List $r6;
        boolean $z0;

        r0 := @this: com.android.server.rollback.RollbackPackageHealthObserver;

        r1 := @parameter0: android.content.pm.VersionedPackage;

        i0 := @parameter1: int;

        if i0 != 1 goto label1;

        $r3 = r0.<com.android.server.rollback.RollbackPackageHealthObserver: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/content/rollback/RollbackManager;");

        $r5 = (android.content.rollback.RollbackManager) $r4;

        $r6 = virtualinvoke $r5.<android.content.rollback.RollbackManager: java.util.List getAvailableRollbacks()>();

        $z0 = interfaceinvoke $r6.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        return 3;

     label1:
        $r2 = specialinvoke r0.<com.android.server.rollback.RollbackPackageHealthObserver: android.content.rollback.RollbackInfo getAvailableRollback(android.content.pm.VersionedPackage)>(r1);

        if $r2 != null goto label2;

        return 0;

     label2:
        return 3;
    }

    public void startObservingHealth(java.util.List, long)
    {
        com.android.server.rollback.RollbackPackageHealthObserver r0;
        java.util.List r1;
        long l0;
        android.content.Context $r2;
        com.android.server.PackageWatchdog $r3;

        r0 := @this: com.android.server.rollback.RollbackPackageHealthObserver;

        r1 := @parameter0: java.util.List;

        l0 := @parameter1: long;

        $r2 = r0.<com.android.server.rollback.RollbackPackageHealthObserver: android.content.Context mContext>;

        $r3 = staticinvoke <com.android.server.PackageWatchdog: com.android.server.PackageWatchdog getInstance(android.content.Context)>($r2);

        virtualinvoke $r3.<com.android.server.PackageWatchdog: void startObservingHealth(com.android.server.PackageWatchdog$PackageHealthObserver,java.util.List,long)>(r0, r1, l0);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.rollback.RollbackPackageHealthObserver: java.lang.String TAG> = "RollbackPackageHealthObserver";

        <com.android.server.rollback.RollbackPackageHealthObserver: java.lang.String NAME> = "rollback-observer";

        return;
    }
}
