class com.android.server.rollback.RollbackStore extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final java.io.File mRollbackDataDir;

    void <init>(java.io.File)
    {
        com.android.server.rollback.RollbackStore r0;
        java.io.File r1;

        r0 := @this: com.android.server.rollback.RollbackStore;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.rollback.RollbackStore: java.io.File mRollbackDataDir> = r1;

        return;
    }

    static void backupPackageCodePath(com.android.server.rollback.Rollback, java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, $r5, r11;
        java.io.File $r1, $r2, $r3, $r4;
        java.nio.file.Path $r6, $r7;
        java.nio.file.CopyOption[] $r8;
        com.android.server.rollback.Rollback r10;

        r10 := @parameter0: com.android.server.rollback.Rollback;

        r0 := @parameter1: java.lang.String;

        r11 := @parameter2: java.lang.String;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>(r11);

        $r2 = new java.io.File;

        $r3 = virtualinvoke r10.<com.android.server.rollback.Rollback: java.io.File getBackupDir()>();

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, r0);

        virtualinvoke $r2.<java.io.File: boolean mkdirs()>();

        $r4 = new java.io.File;

        $r5 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, $r5);

        $r6 = virtualinvoke $r1.<java.io.File: java.nio.file.Path toPath()>();

        $r7 = virtualinvoke $r4.<java.io.File: java.nio.file.Path toPath()>();

        $r8 = newarray (java.nio.file.CopyOption)[0];

        staticinvoke <java.nio.file.Files: java.nio.file.Path copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>($r6, $r7, $r8);

        return;
    }

    private static android.util.SparseLongArray ceSnapshotInodesFromJson(org.json.JSONArray) throws org.json.JSONException
    {
        org.json.JSONArray r0;
        org.json.JSONObject r2;
        android.util.SparseLongArray $r3;
        int $i0, $i1, $i2, i4;
        long $l3;

        r0 := @parameter0: org.json.JSONArray;

        $r3 = new android.util.SparseLongArray;

        $i0 = virtualinvoke r0.<org.json.JSONArray: int length()>();

        specialinvoke $r3.<android.util.SparseLongArray: void <init>(int)>($i0);

        i4 = 0;

     label1:
        $i1 = virtualinvoke r0.<org.json.JSONArray: int length()>();

        if i4 >= $i1 goto label2;

        r2 = virtualinvoke r0.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i4);

        $i2 = virtualinvoke r2.<org.json.JSONObject: int getInt(java.lang.String)>("userId");

        $l3 = virtualinvoke r2.<org.json.JSONObject: long getLong(java.lang.String)>("ceSnapshotInode");

        virtualinvoke $r3.<android.util.SparseLongArray: void append(int,long)>($i2, $l3);

        i4 = i4 + 1;

        goto label1;

     label2:
        return $r3;
    }

    private static org.json.JSONArray ceSnapshotInodesToJson(android.util.SparseLongArray) throws org.json.JSONException
    {
        android.util.SparseLongArray r0;
        org.json.JSONArray $r3;
        int $i0, $i1, i3;
        org.json.JSONObject $r4;
        long $l2;

        r0 := @parameter0: android.util.SparseLongArray;

        $r3 = new org.json.JSONArray;

        specialinvoke $r3.<org.json.JSONArray: void <init>()>();

        i3 = 0;

     label1:
        $i0 = virtualinvoke r0.<android.util.SparseLongArray: int size()>();

        if i3 >= $i0 goto label2;

        $r4 = new org.json.JSONObject;

        specialinvoke $r4.<org.json.JSONObject: void <init>()>();

        $i1 = virtualinvoke r0.<android.util.SparseLongArray: int keyAt(int)>(i3);

        virtualinvoke $r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("userId", $i1);

        $l2 = virtualinvoke r0.<android.util.SparseLongArray: long valueAt(int)>(i3);

        virtualinvoke $r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>("ceSnapshotInode", $l2);

        virtualinvoke $r3.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r4);

        i3 = i3 + 1;

        goto label1;

     label2:
        return $r3;
    }

    private static android.util.IntArray convertToIntArray(org.json.JSONArray) throws org.json.JSONException
    {
        org.json.JSONArray r0;
        int[] r1;
        int $i0, $i1, $i2, $i3, i4;
        android.util.IntArray $r2, $r3;

        r0 := @parameter0: org.json.JSONArray;

        $i0 = virtualinvoke r0.<org.json.JSONArray: int length()>();

        if $i0 != 0 goto label1;

        $r3 = new android.util.IntArray;

        specialinvoke $r3.<android.util.IntArray: void <init>()>();

        return $r3;

     label1:
        $i1 = virtualinvoke r0.<org.json.JSONArray: int length()>();

        r1 = newarray (int)[$i1];

        i4 = 0;

     label2:
        $i2 = lengthof r1;

        if i4 >= $i2 goto label3;

        $i3 = virtualinvoke r0.<org.json.JSONArray: int getInt(int)>(i4);

        r1[i4] = $i3;

        i4 = i4 + 1;

        goto label2;

     label3:
        $r2 = staticinvoke <android.util.IntArray: android.util.IntArray wrap(int[])>(r1);

        return $r2;
    }

    private static org.json.JSONArray convertToJsonArray(android.util.IntArray)
    {
        android.util.IntArray r0;
        org.json.JSONArray $r2;
        int $i0, $i1, i2;

        r0 := @parameter0: android.util.IntArray;

        $r2 = new org.json.JSONArray;

        specialinvoke $r2.<org.json.JSONArray: void <init>()>();

        i2 = 0;

     label1:
        $i0 = virtualinvoke r0.<android.util.IntArray: int size()>();

        if i2 >= $i0 goto label2;

        $i1 = virtualinvoke r0.<android.util.IntArray: int get(int)>(i2);

        virtualinvoke $r2.<org.json.JSONArray: org.json.JSONArray put(int)>($i1);

        i2 = i2 + 1;

        goto label1;

     label2:
        return $r2;
    }

    private static org.json.JSONArray convertToJsonArray(java.util.List) throws org.json.JSONException
    {
        android.content.rollback.PackageRollbackInfo$RestoreInfo r1;
        org.json.JSONArray $r3;
        boolean $z0;
        java.lang.Object $r4;
        org.json.JSONObject $r5;
        int $i0, $i1;
        java.lang.String $r8;
        java.util.List r11;
        java.util.Iterator r12;

        r11 := @parameter0: java.util.List;

        $r3 = new org.json.JSONArray;

        specialinvoke $r3.<org.json.JSONArray: void <init>()>();

        r12 = interfaceinvoke r11.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r1 = (android.content.rollback.PackageRollbackInfo$RestoreInfo) $r4;

        $r5 = new org.json.JSONObject;

        specialinvoke $r5.<org.json.JSONObject: void <init>()>();

        $i0 = r1.<android.content.rollback.PackageRollbackInfo$RestoreInfo: int userId>;

        virtualinvoke $r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("userId", $i0);

        $i1 = r1.<android.content.rollback.PackageRollbackInfo$RestoreInfo: int appId>;

        virtualinvoke $r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("appId", $i1);

        $r8 = r1.<android.content.rollback.PackageRollbackInfo$RestoreInfo: java.lang.String seInfo>;

        virtualinvoke $r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("seInfo", $r8);

        virtualinvoke $r3.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r5);

        goto label1;

     label2:
        return $r3;
    }

    private static java.util.ArrayList convertToRestoreInfoArray(org.json.JSONArray) throws org.json.JSONException
    {
        org.json.JSONArray r0;
        org.json.JSONObject r2;
        java.util.ArrayList $r3;
        int $i0, $i1, $i2, i3;
        android.content.rollback.PackageRollbackInfo$RestoreInfo $r4;
        java.lang.String $r5;

        r0 := @parameter0: org.json.JSONArray;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        i3 = 0;

     label1:
        $i0 = virtualinvoke r0.<org.json.JSONArray: int length()>();

        if i3 >= $i0 goto label2;

        r2 = virtualinvoke r0.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i3);

        $r4 = new android.content.rollback.PackageRollbackInfo$RestoreInfo;

        $i1 = virtualinvoke r2.<org.json.JSONObject: int getInt(java.lang.String)>("userId");

        $i2 = virtualinvoke r2.<org.json.JSONObject: int getInt(java.lang.String)>("appId");

        $r5 = virtualinvoke r2.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("seInfo");

        specialinvoke $r4.<android.content.rollback.PackageRollbackInfo$RestoreInfo: void <init>(int,int,java.lang.String)>($i1, $i2, $r5);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        i3 = i3 + 1;

        goto label1;

     label2:
        return $r3;
    }

    static void deletePackageCodePaths(com.android.server.rollback.Rollback)
    {
        com.android.server.rollback.Rollback r0;
        java.util.Iterator r1;
        android.content.rollback.PackageRollbackInfo r2;
        android.content.rollback.RollbackInfo $r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.io.File $r6, $r7;
        java.lang.String $r8;

        r0 := @parameter0: com.android.server.rollback.Rollback;

        $r3 = r0.<com.android.server.rollback.Rollback: android.content.rollback.RollbackInfo info>;

        $r4 = virtualinvoke $r3.<android.content.rollback.RollbackInfo: java.util.List getPackages()>();

        r1 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.content.rollback.PackageRollbackInfo) $r5;

        $r6 = new java.io.File;

        $r7 = virtualinvoke r0.<com.android.server.rollback.Rollback: java.io.File getBackupDir()>();

        $r8 = virtualinvoke r2.<android.content.rollback.PackageRollbackInfo: java.lang.String getPackageName()>();

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, $r8);

        staticinvoke <com.android.server.rollback.RollbackStore: void removeFile(java.io.File)>($r6);

        goto label1;

     label2:
        return;
    }

    static void deleteRollback(com.android.server.rollback.Rollback)
    {
        com.android.server.rollback.Rollback r0;
        java.io.File $r1;

        r0 := @parameter0: com.android.server.rollback.Rollback;

        $r1 = virtualinvoke r0.<com.android.server.rollback.Rollback: java.io.File getBackupDir()>();

        staticinvoke <com.android.server.rollback.RollbackStore: void removeFile(java.io.File)>($r1);

        return;
    }

    private static android.util.SparseIntArray extensionVersionsFromJson(org.json.JSONArray) throws org.json.JSONException
    {
        org.json.JSONArray r0;
        org.json.JSONObject r2;
        android.util.SparseIntArray $r3, $r4;
        int $i0, $i1, $i2, $i3, i4;

        r0 := @parameter0: org.json.JSONArray;

        if r0 != null goto label1;

        $r4 = new android.util.SparseIntArray;

        specialinvoke $r4.<android.util.SparseIntArray: void <init>(int)>(0);

        return $r4;

     label1:
        $r3 = new android.util.SparseIntArray;

        $i0 = virtualinvoke r0.<org.json.JSONArray: int length()>();

        specialinvoke $r3.<android.util.SparseIntArray: void <init>(int)>($i0);

        i4 = 0;

     label2:
        $i1 = virtualinvoke r0.<org.json.JSONArray: int length()>();

        if i4 >= $i1 goto label3;

        r2 = virtualinvoke r0.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i4);

        $i2 = virtualinvoke r2.<org.json.JSONObject: int getInt(java.lang.String)>("sdkVersion");

        $i3 = virtualinvoke r2.<org.json.JSONObject: int getInt(java.lang.String)>("extensionVersion");

        virtualinvoke $r3.<android.util.SparseIntArray: void append(int,int)>($i2, $i3);

        i4 = i4 + 1;

        goto label2;

     label3:
        return $r3;
    }

    private static org.json.JSONArray extensionVersionsToJson(android.util.SparseIntArray) throws org.json.JSONException
    {
        android.util.SparseIntArray r0;
        org.json.JSONArray $r3;
        int $i0, $i1, $i2, i3;
        org.json.JSONObject $r4;

        r0 := @parameter0: android.util.SparseIntArray;

        $r3 = new org.json.JSONArray;

        specialinvoke $r3.<org.json.JSONArray: void <init>()>();

        i3 = 0;

     label1:
        $i0 = virtualinvoke r0.<android.util.SparseIntArray: int size()>();

        if i3 >= $i0 goto label2;

        $r4 = new org.json.JSONObject;

        specialinvoke $r4.<org.json.JSONObject: void <init>()>();

        $i1 = virtualinvoke r0.<android.util.SparseIntArray: int keyAt(int)>(i3);

        virtualinvoke $r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("sdkVersion", $i1);

        $i2 = virtualinvoke r0.<android.util.SparseIntArray: int valueAt(int)>(i3);

        virtualinvoke $r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("extensionVersion", $i2);

        virtualinvoke $r3.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r4);

        i3 = i3 + 1;

        goto label1;

     label2:
        return $r3;
    }

    static java.io.File[] getPackageCodePaths(com.android.server.rollback.Rollback, java.lang.String)
    {
        java.lang.String r0;
        java.io.File $r1, $r2;
        int $i0;
        com.android.server.rollback.Rollback r3;
        java.io.File[] r4;

        r3 := @parameter0: com.android.server.rollback.Rollback;

        r0 := @parameter1: java.lang.String;

        $r1 = new java.io.File;

        $r2 = virtualinvoke r3.<com.android.server.rollback.Rollback: java.io.File getBackupDir()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, r0);

        r4 = virtualinvoke $r1.<java.io.File: java.io.File[] listFiles()>();

        if r4 == null goto label2;

        $i0 = lengthof r4;

        if $i0 != 0 goto label1;

        goto label2;

     label1:
        return r4;

     label2:
        return null;
    }

    private static com.android.server.rollback.Rollback loadRollback(java.io.File) throws java.io.IOException
    {
        java.io.File r0, r6;
        org.json.JSONObject r1;
        java.lang.String $r2, $r3;
        java.lang.Throwable $r4;
        java.io.IOException $r5;
        com.android.server.rollback.Rollback r7;

        r6 := @parameter0: java.io.File;

     label1:
        r0 = new java.io.File;

        specialinvoke r0.<java.io.File: void <init>(java.io.File,java.lang.String)>(r6, "rollback.json");

        r1 = new org.json.JSONObject;

        $r2 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $r3 = staticinvoke <libcore.io.IoUtils: java.lang.String readFileAsString(java.lang.String)>($r2);

        specialinvoke r1.<org.json.JSONObject: void <init>(java.lang.String)>($r3);

        r7 = staticinvoke <com.android.server.rollback.RollbackStore: com.android.server.rollback.Rollback rollbackFromJson(org.json.JSONObject,java.io.File)>(r1, r6);

     label2:
        return r7;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch org.json.JSONException from label1 to label2 with label3;
        catch java.time.format.DateTimeParseException from label1 to label2 with label3;
        catch java.text.ParseException from label1 to label2 with label3;
    }

    private static android.content.rollback.PackageRollbackInfo packageRollbackInfoFromJson(org.json.JSONObject) throws org.json.JSONException
    {
        org.json.JSONObject r0, $r6, $r7;
        android.content.pm.VersionedPackage r1, r2;
        android.util.IntArray r3, r5;
        java.util.ArrayList r4;
        boolean z0, z1;
        org.json.JSONArray $r8, $r9, $r10, $r12;
        android.content.rollback.PackageRollbackInfo $r11;
        android.util.SparseLongArray $r13;
        int $i0;

        r0 := @parameter0: org.json.JSONObject;

        $r6 = virtualinvoke r0.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("versionRolledBackFrom");

        r1 = staticinvoke <com.android.server.rollback.RollbackStore: android.content.pm.VersionedPackage versionedPackageFromJson(org.json.JSONObject)>($r6);

        $r7 = virtualinvoke r0.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("versionRolledBackTo");

        r2 = staticinvoke <com.android.server.rollback.RollbackStore: android.content.pm.VersionedPackage versionedPackageFromJson(org.json.JSONObject)>($r7);

        $r8 = virtualinvoke r0.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("pendingBackups");

        r3 = staticinvoke <com.android.server.rollback.RollbackStore: android.util.IntArray convertToIntArray(org.json.JSONArray)>($r8);

        $r9 = virtualinvoke r0.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("pendingRestores");

        r4 = staticinvoke <com.android.server.rollback.RollbackStore: java.util.ArrayList convertToRestoreInfoArray(org.json.JSONArray)>($r9);

        z0 = virtualinvoke r0.<org.json.JSONObject: boolean getBoolean(java.lang.String)>("isApex");

        z1 = virtualinvoke r0.<org.json.JSONObject: boolean getBoolean(java.lang.String)>("isApkInApex");

        $r10 = virtualinvoke r0.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("installedUsers");

        r5 = staticinvoke <com.android.server.rollback.RollbackStore: android.util.IntArray convertToIntArray(org.json.JSONArray)>($r10);

        $r11 = new android.content.rollback.PackageRollbackInfo;

        $r12 = virtualinvoke r0.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("ceSnapshotInodes");

        $r13 = staticinvoke <com.android.server.rollback.RollbackStore: android.util.SparseLongArray ceSnapshotInodesFromJson(org.json.JSONArray)>($r12);

        $i0 = virtualinvoke r0.<org.json.JSONObject: int optInt(java.lang.String,int)>("rollbackDataPolicy", 0);

        specialinvoke $r11.<android.content.rollback.PackageRollbackInfo: void <init>(android.content.pm.VersionedPackage,android.content.pm.VersionedPackage,android.util.IntArray,java.util.ArrayList,boolean,boolean,android.util.IntArray,android.util.SparseLongArray,int)>(r1, r2, r3, r4, z0, z1, r5, $r13, $i0);

        return $r11;
    }

    private static java.util.List packageRollbackInfosFromJson(org.json.JSONArray) throws org.json.JSONException
    {
        org.json.JSONArray r0;
        java.util.ArrayList $r2;
        int $i0, i1;
        org.json.JSONObject $r3;
        android.content.rollback.PackageRollbackInfo $r4;

        r0 := @parameter0: org.json.JSONArray;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<org.json.JSONArray: int length()>();

        if i1 >= $i0 goto label2;

        $r3 = virtualinvoke r0.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i1);

        $r4 = staticinvoke <com.android.server.rollback.RollbackStore: android.content.rollback.PackageRollbackInfo packageRollbackInfoFromJson(org.json.JSONObject)>($r3);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r2;
    }

    private static void removeFile(java.io.File)
    {
        java.io.File r0, $r2;
        java.io.File[] r1;
        int i0, i1;
        boolean $z0, $z1;

        r0 := @parameter0: java.io.File;

        $z0 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label2;

        r1 = virtualinvoke r0.<java.io.File: java.io.File[] listFiles()>();

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r2 = r1[i1];

        staticinvoke <com.android.server.rollback.RollbackStore: void removeFile(java.io.File)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        $z1 = virtualinvoke r0.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label3;

        virtualinvoke r0.<java.io.File: boolean delete()>();

     label3:
        return;
    }

    static com.android.server.rollback.Rollback rollbackFromJson(org.json.JSONObject, java.io.File) throws org.json.JSONException, java.text.ParseException
    {
        org.json.JSONObject r0, $r3;
        java.io.File r1;
        com.android.server.rollback.Rollback $r2;
        android.content.rollback.RollbackInfo $r4;
        java.lang.String $r5, $r7, $r8;
        java.time.Instant $r6;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        org.json.JSONArray $r9;
        android.util.SparseIntArray $r10;

        r0 := @parameter0: org.json.JSONObject;

        r1 := @parameter1: java.io.File;

        $r2 = new com.android.server.rollback.Rollback;

        $r3 = virtualinvoke r0.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("info");

        $r4 = staticinvoke <com.android.server.rollback.RollbackStore: android.content.rollback.RollbackInfo rollbackInfoFromJson(org.json.JSONObject)>($r3);

        $r5 = virtualinvoke r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("timestamp");

        $r6 = staticinvoke <java.time.Instant: java.time.Instant parse(java.lang.CharSequence)>($r5);

        $i0 = virtualinvoke r0.<org.json.JSONObject: int getInt(java.lang.String)>("stagedSessionId");

        $r7 = virtualinvoke r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("state");

        $i1 = staticinvoke <com.android.server.rollback.Rollback: int rollbackStateFromString(java.lang.String)>($r7);

        $i2 = virtualinvoke r0.<org.json.JSONObject: int getInt(java.lang.String)>("apkSessionId");

        $z0 = virtualinvoke r0.<org.json.JSONObject: boolean getBoolean(java.lang.String)>("restoreUserDataInProgress");

        $i3 = virtualinvoke r0.<org.json.JSONObject: int optInt(java.lang.String,int)>("userId", 0);

        $r8 = virtualinvoke r0.<org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>("installerPackageName", "");

        $r9 = virtualinvoke r0.<org.json.JSONObject: org.json.JSONArray optJSONArray(java.lang.String)>("extensionVersions");

        $r10 = staticinvoke <com.android.server.rollback.RollbackStore: android.util.SparseIntArray extensionVersionsFromJson(org.json.JSONArray)>($r9);

        specialinvoke $r2.<com.android.server.rollback.Rollback: void <init>(android.content.rollback.RollbackInfo,java.io.File,java.time.Instant,int,int,int,boolean,int,java.lang.String,android.util.SparseIntArray)>($r4, r1, $r6, $i0, $i1, $i2, $z0, $i3, $r8, $r10);

        return $r2;
    }

    private static android.content.rollback.RollbackInfo rollbackInfoFromJson(org.json.JSONObject) throws org.json.JSONException
    {
        org.json.JSONObject r0;
        android.content.rollback.RollbackInfo $r1;
        int $i0, $i1;
        org.json.JSONArray $r2, $r4;
        java.util.List $r3, $r5;
        boolean $z0;

        r0 := @parameter0: org.json.JSONObject;

        $r1 = new android.content.rollback.RollbackInfo;

        $i0 = virtualinvoke r0.<org.json.JSONObject: int getInt(java.lang.String)>("rollbackId");

        $r2 = virtualinvoke r0.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("packages");

        $r3 = staticinvoke <com.android.server.rollback.RollbackStore: java.util.List packageRollbackInfosFromJson(org.json.JSONArray)>($r2);

        $z0 = virtualinvoke r0.<org.json.JSONObject: boolean getBoolean(java.lang.String)>("isStaged");

        $r4 = virtualinvoke r0.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("causePackages");

        $r5 = staticinvoke <com.android.server.rollback.RollbackStore: java.util.List versionedPackagesFromJson(org.json.JSONArray)>($r4);

        $i1 = virtualinvoke r0.<org.json.JSONObject: int getInt(java.lang.String)>("committedSessionId");

        specialinvoke $r1.<android.content.rollback.RollbackInfo: void <init>(int,java.util.List,boolean,java.util.List,int)>($i0, $r3, $z0, $r5, $i1);

        return $r1;
    }

    private static org.json.JSONObject rollbackInfoToJson(android.content.rollback.RollbackInfo) throws org.json.JSONException
    {
        android.content.rollback.RollbackInfo r0;
        org.json.JSONObject $r2;
        int $i0, $i1;
        java.util.List $r4, $r8;
        org.json.JSONArray $r5, $r9;
        boolean $z0;

        r0 := @parameter0: android.content.rollback.RollbackInfo;

        $r2 = new org.json.JSONObject;

        specialinvoke $r2.<org.json.JSONObject: void <init>()>();

        $i0 = virtualinvoke r0.<android.content.rollback.RollbackInfo: int getRollbackId()>();

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("rollbackId", $i0);

        $r4 = virtualinvoke r0.<android.content.rollback.RollbackInfo: java.util.List getPackages()>();

        $r5 = staticinvoke <com.android.server.rollback.RollbackStore: org.json.JSONArray toJson(java.util.List)>($r4);

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("packages", $r5);

        $z0 = virtualinvoke r0.<android.content.rollback.RollbackInfo: boolean isStaged()>();

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>("isStaged", $z0);

        $r8 = virtualinvoke r0.<android.content.rollback.RollbackInfo: java.util.List getCausePackages()>();

        $r9 = staticinvoke <com.android.server.rollback.RollbackStore: org.json.JSONArray versionedPackagesToJson(java.util.List)>($r8);

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("causePackages", $r9);

        $i1 = virtualinvoke r0.<android.content.rollback.RollbackInfo: int getCommittedSessionId()>();

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("committedSessionId", $i1);

        return $r2;
    }

    static void saveRollback(com.android.server.rollback.Rollback)
    {
        com.android.server.rollback.Rollback r0;
        java.io.PrintWriter r1;
        android.content.rollback.RollbackInfo $r2, $r24;
        org.json.JSONObject $r3, r27;
        java.time.Instant $r5;
        java.lang.String $r6, $r9, $r14, $r20, $r26;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        android.util.SparseIntArray $r16;
        org.json.JSONArray $r17;
        java.io.File $r19, r28;
        java.lang.Throwable $r21;
        java.lang.StringBuilder $r22;

        r0 := @parameter0: com.android.server.rollback.Rollback;

     label1:
        r27 = new org.json.JSONObject;

        specialinvoke r27.<org.json.JSONObject: void <init>()>();

        $r2 = r0.<com.android.server.rollback.Rollback: android.content.rollback.RollbackInfo info>;

        $r3 = staticinvoke <com.android.server.rollback.RollbackStore: org.json.JSONObject rollbackInfoToJson(android.content.rollback.RollbackInfo)>($r2);

        virtualinvoke r27.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("info", $r3);

        $r5 = virtualinvoke r0.<com.android.server.rollback.Rollback: java.time.Instant getTimestamp()>();

        $r6 = virtualinvoke $r5.<java.time.Instant: java.lang.String toString()>();

        virtualinvoke r27.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("timestamp", $r6);

        $i0 = virtualinvoke r0.<com.android.server.rollback.Rollback: int getStagedSessionId()>();

        virtualinvoke r27.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("stagedSessionId", $i0);

        $r9 = virtualinvoke r0.<com.android.server.rollback.Rollback: java.lang.String getStateAsString()>();

        virtualinvoke r27.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("state", $r9);

        $i1 = virtualinvoke r0.<com.android.server.rollback.Rollback: int getApkSessionId()>();

        virtualinvoke r27.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("apkSessionId", $i1);

        $z0 = virtualinvoke r0.<com.android.server.rollback.Rollback: boolean isRestoreUserDataInProgress()>();

        virtualinvoke r27.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>("restoreUserDataInProgress", $z0);

        $i2 = virtualinvoke r0.<com.android.server.rollback.Rollback: int getUserId()>();

        virtualinvoke r27.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("userId", $i2);

        $r14 = virtualinvoke r0.<com.android.server.rollback.Rollback: java.lang.String getInstallerPackageName()>();

        virtualinvoke r27.<org.json.JSONObject: org.json.JSONObject putOpt(java.lang.String,java.lang.Object)>("installerPackageName", $r14);

        $r16 = virtualinvoke r0.<com.android.server.rollback.Rollback: android.util.SparseIntArray getExtensionVersions()>();

        $r17 = staticinvoke <com.android.server.rollback.RollbackStore: org.json.JSONArray extensionVersionsToJson(android.util.SparseIntArray)>($r16);

        virtualinvoke r27.<org.json.JSONObject: org.json.JSONObject putOpt(java.lang.String,java.lang.Object)>("extensionVersions", $r17);

        r1 = new java.io.PrintWriter;

        r28 = new java.io.File;

        $r19 = virtualinvoke r0.<com.android.server.rollback.Rollback: java.io.File getBackupDir()>();

        specialinvoke r28.<java.io.File: void <init>(java.io.File,java.lang.String)>($r19, "rollback.json");

        specialinvoke r1.<java.io.PrintWriter: void <init>(java.io.File)>(r28);

        $r20 = virtualinvoke r27.<org.json.JSONObject: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r20);

        virtualinvoke r1.<java.io.PrintWriter: void close()>();

     label2:
        goto label4;

     label3:
        $r21 := @caughtexception;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to save rollback for: ");

        $r24 = r0.<com.android.server.rollback.Rollback: android.content.rollback.RollbackInfo info>;

        $i3 = virtualinvoke $r24.<android.content.rollback.RollbackInfo: int getRollbackId()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RollbackManager", $r26, $r21);

     label4:
        return;

        catch org.json.JSONException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label3;
    }

    private static org.json.JSONArray toJson(java.util.List) throws org.json.JSONException
    {
        org.json.JSONArray $r1;
        boolean $z0;
        java.lang.Object $r2;
        android.content.rollback.PackageRollbackInfo $r3;
        org.json.JSONObject $r4;
        java.util.List r6;
        java.util.Iterator r7;

        r6 := @parameter0: java.util.List;

        $r1 = new org.json.JSONArray;

        specialinvoke $r1.<org.json.JSONArray: void <init>()>();

        r7 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (android.content.rollback.PackageRollbackInfo) $r2;

        $r4 = staticinvoke <com.android.server.rollback.RollbackStore: org.json.JSONObject toJson(android.content.rollback.PackageRollbackInfo)>($r3);

        virtualinvoke $r1.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r4);

        goto label1;

     label2:
        return $r1;
    }

    private static org.json.JSONObject toJson(android.content.pm.VersionedPackage) throws org.json.JSONException
    {
        android.content.pm.VersionedPackage r0;
        org.json.JSONObject $r2;
        java.lang.String $r3;
        long $l0;

        r0 := @parameter0: android.content.pm.VersionedPackage;

        $r2 = new org.json.JSONObject;

        specialinvoke $r2.<org.json.JSONObject: void <init>()>();

        $r3 = virtualinvoke r0.<android.content.pm.VersionedPackage: java.lang.String getPackageName()>();

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("packageName", $r3);

        $l0 = virtualinvoke r0.<android.content.pm.VersionedPackage: long getLongVersionCode()>();

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>("longVersionCode", $l0);

        return $r2;
    }

    private static org.json.JSONObject toJson(android.content.rollback.PackageRollbackInfo) throws org.json.JSONException
    {
        android.content.rollback.PackageRollbackInfo r0;
        android.util.IntArray r2, r4;
        java.util.ArrayList r3;
        org.json.JSONObject $r5, $r7, $r10;
        android.content.pm.VersionedPackage $r6, $r9;
        org.json.JSONArray $r12, $r14, $r18, $r21;
        boolean $z0, $z1;
        android.util.SparseLongArray $r20;
        int $i0;

        r0 := @parameter0: android.content.rollback.PackageRollbackInfo;

        $r5 = new org.json.JSONObject;

        specialinvoke $r5.<org.json.JSONObject: void <init>()>();

        $r6 = virtualinvoke r0.<android.content.rollback.PackageRollbackInfo: android.content.pm.VersionedPackage getVersionRolledBackFrom()>();

        $r7 = staticinvoke <com.android.server.rollback.RollbackStore: org.json.JSONObject toJson(android.content.pm.VersionedPackage)>($r6);

        virtualinvoke $r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("versionRolledBackFrom", $r7);

        $r9 = virtualinvoke r0.<android.content.rollback.PackageRollbackInfo: android.content.pm.VersionedPackage getVersionRolledBackTo()>();

        $r10 = staticinvoke <com.android.server.rollback.RollbackStore: org.json.JSONObject toJson(android.content.pm.VersionedPackage)>($r9);

        virtualinvoke $r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("versionRolledBackTo", $r10);

        r2 = virtualinvoke r0.<android.content.rollback.PackageRollbackInfo: android.util.IntArray getPendingBackups()>();

        r3 = virtualinvoke r0.<android.content.rollback.PackageRollbackInfo: java.util.ArrayList getPendingRestores()>();

        r4 = virtualinvoke r0.<android.content.rollback.PackageRollbackInfo: android.util.IntArray getSnapshottedUsers()>();

        $r12 = staticinvoke <com.android.server.rollback.RollbackStore: org.json.JSONArray convertToJsonArray(android.util.IntArray)>(r2);

        virtualinvoke $r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("pendingBackups", $r12);

        $r14 = staticinvoke <com.android.server.rollback.RollbackStore: org.json.JSONArray convertToJsonArray(java.util.List)>(r3);

        virtualinvoke $r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("pendingRestores", $r14);

        $z0 = virtualinvoke r0.<android.content.rollback.PackageRollbackInfo: boolean isApex()>();

        virtualinvoke $r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>("isApex", $z0);

        $z1 = virtualinvoke r0.<android.content.rollback.PackageRollbackInfo: boolean isApkInApex()>();

        virtualinvoke $r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>("isApkInApex", $z1);

        $r18 = staticinvoke <com.android.server.rollback.RollbackStore: org.json.JSONArray convertToJsonArray(android.util.IntArray)>(r4);

        virtualinvoke $r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("installedUsers", $r18);

        $r20 = virtualinvoke r0.<android.content.rollback.PackageRollbackInfo: android.util.SparseLongArray getCeSnapshotInodes()>();

        $r21 = staticinvoke <com.android.server.rollback.RollbackStore: org.json.JSONArray ceSnapshotInodesToJson(android.util.SparseLongArray)>($r20);

        virtualinvoke $r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("ceSnapshotInodes", $r21);

        $i0 = virtualinvoke r0.<android.content.rollback.PackageRollbackInfo: int getRollbackDataPolicy()>();

        virtualinvoke $r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("rollbackDataPolicy", $i0);

        return $r5;
    }

    private static android.content.pm.VersionedPackage versionedPackageFromJson(org.json.JSONObject) throws org.json.JSONException
    {
        org.json.JSONObject r0;
        android.content.pm.VersionedPackage $r1;
        java.lang.String $r2;
        long $l0;

        r0 := @parameter0: org.json.JSONObject;

        $r1 = new android.content.pm.VersionedPackage;

        $r2 = virtualinvoke r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("packageName");

        $l0 = virtualinvoke r0.<org.json.JSONObject: long getLong(java.lang.String)>("longVersionCode");

        specialinvoke $r1.<android.content.pm.VersionedPackage: void <init>(java.lang.String,long)>($r2, $l0);

        return $r1;
    }

    private static java.util.List versionedPackagesFromJson(org.json.JSONArray) throws org.json.JSONException
    {
        org.json.JSONArray r0;
        java.util.ArrayList $r2;
        int $i0, i1;
        org.json.JSONObject $r3;
        android.content.pm.VersionedPackage $r4;

        r0 := @parameter0: org.json.JSONArray;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<org.json.JSONArray: int length()>();

        if i1 >= $i0 goto label2;

        $r3 = virtualinvoke r0.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i1);

        $r4 = staticinvoke <com.android.server.rollback.RollbackStore: android.content.pm.VersionedPackage versionedPackageFromJson(org.json.JSONObject)>($r3);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r2;
    }

    private static org.json.JSONArray versionedPackagesToJson(java.util.List) throws org.json.JSONException
    {
        org.json.JSONArray $r1;
        boolean $z0;
        java.lang.Object $r2;
        android.content.pm.VersionedPackage $r3;
        org.json.JSONObject $r4;
        java.util.List r6;
        java.util.Iterator r7;

        r6 := @parameter0: java.util.List;

        $r1 = new org.json.JSONArray;

        specialinvoke $r1.<org.json.JSONArray: void <init>()>();

        r7 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (android.content.pm.VersionedPackage) $r2;

        $r4 = staticinvoke <com.android.server.rollback.RollbackStore: org.json.JSONObject toJson(android.content.pm.VersionedPackage)>($r3);

        virtualinvoke $r1.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r4);

        goto label1;

     label2:
        return $r1;
    }

    com.android.server.rollback.Rollback createNonStagedRollback(int, int, java.lang.String, int[], android.util.SparseIntArray)
    {
        com.android.server.rollback.RollbackStore r0;
        int i0, i1;
        java.lang.String r1, $r7;
        int[] r2;
        android.util.SparseIntArray r3;
        com.android.server.rollback.Rollback $r4;
        java.io.File $r5, $r6;

        r0 := @this: com.android.server.rollback.RollbackStore;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: int[];

        r3 := @parameter4: android.util.SparseIntArray;

        $r4 = new com.android.server.rollback.Rollback;

        $r5 = new java.io.File;

        $r6 = r0.<com.android.server.rollback.RollbackStore: java.io.File mRollbackDataDir>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, $r7);

        specialinvoke $r4.<com.android.server.rollback.Rollback: void <init>(int,java.io.File,int,int,java.lang.String,int[],android.util.SparseIntArray)>(i0, $r5, -1, i1, r1, r2, r3);

        return $r4;
    }

    com.android.server.rollback.Rollback createStagedRollback(int, int, int, java.lang.String, int[], android.util.SparseIntArray)
    {
        com.android.server.rollback.RollbackStore r0;
        int i0, i1, i2;
        java.lang.String r1, $r7;
        int[] r2;
        android.util.SparseIntArray r3;
        com.android.server.rollback.Rollback $r4;
        java.io.File $r5, $r6;

        r0 := @this: com.android.server.rollback.RollbackStore;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: int[];

        r3 := @parameter5: android.util.SparseIntArray;

        $r4 = new com.android.server.rollback.Rollback;

        $r5 = new java.io.File;

        $r6 = r0.<com.android.server.rollback.RollbackStore: java.io.File mRollbackDataDir>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, $r7);

        specialinvoke $r4.<com.android.server.rollback.Rollback: void <init>(int,java.io.File,int,int,java.lang.String,int[],android.util.SparseIntArray)>(i0, $r5, i1, i2, r1, r2, r3);

        return $r4;
    }

    java.util.List loadRollbacks()
    {
        com.android.server.rollback.RollbackStore r0;
        java.io.File[] r2;
        int i0, i2;
        java.io.File r3, $r7, $r8;
        java.util.ArrayList $r6;
        boolean $z1;
        com.android.server.rollback.Rollback $r9;
        java.lang.Throwable $r10;
        java.lang.StringBuilder $r11;
        java.lang.String $r14;

        r0 := @this: com.android.server.rollback.RollbackStore;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $r7 = r0.<com.android.server.rollback.RollbackStore: java.io.File mRollbackDataDir>;

        virtualinvoke $r7.<java.io.File: boolean mkdirs()>();

        $r8 = r0.<com.android.server.rollback.RollbackStore: java.io.File mRollbackDataDir>;

        r2 = virtualinvoke $r8.<java.io.File: java.io.File[] listFiles()>();

        i0 = lengthof r2;

        i2 = 0;

     label1:
        if i2 >= i0 goto label6;

        r3 = r2[i2];

        $z1 = virtualinvoke r3.<java.io.File: boolean isDirectory()>();

        if $z1 == 0 goto label5;

     label2:
        $r9 = staticinvoke <com.android.server.rollback.RollbackStore: com.android.server.rollback.Rollback loadRollback(java.io.File)>(r3);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r9);

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to read rollback at ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RollbackManager", $r14, $r10);

        staticinvoke <com.android.server.rollback.RollbackStore: void removeFile(java.io.File)>(r3);

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        return $r6;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public static void <clinit>()
    {
        <com.android.server.rollback.RollbackStore: java.lang.String TAG> = "RollbackManager";

        return;
    }
}
