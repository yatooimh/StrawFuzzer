public final class com.android.server.rollback.WatchdogRollbackLogger extends java.lang.Object
{
    private static final java.lang.String LOGGING_PARENT_KEY;
    private static final java.lang.String TAG;

    private void <init>()
    {
        com.android.server.rollback.WatchdogRollbackLogger r0;

        r0 := @this: com.android.server.rollback.WatchdogRollbackLogger;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static android.content.pm.VersionedPackage getLogPackage(android.content.Context, android.content.pm.VersionedPackage)
    {
        java.lang.String $r0, r7;
        android.content.pm.VersionedPackage $r1, r6;
        android.content.pm.PackageManager $r2;
        android.content.pm.PackageInfo $r3;
        long $l0;
        android.content.pm.PackageManager$NameNotFoundException $r4;
        android.content.Context r5;

        r5 := @parameter0: android.content.Context;

        r6 := @parameter1: android.content.pm.VersionedPackage;

        $r0 = virtualinvoke r6.<android.content.pm.VersionedPackage: java.lang.String getPackageName()>();

        r7 = staticinvoke <com.android.server.rollback.WatchdogRollbackLogger: java.lang.String getLoggingParentName(android.content.Context,java.lang.String)>(r5, $r0);

        if r7 != null goto label1;

        return null;

     label1:
        $r1 = new android.content.pm.VersionedPackage;

        $r2 = virtualinvoke r5.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r7, 0);

        $l0 = virtualinvoke $r3.<android.content.pm.PackageInfo: long getLongVersionCode()>();

        specialinvoke $r1.<android.content.pm.VersionedPackage: void <init>(java.lang.String,long)>(r7, $l0);

     label2:
        return $r1;

     label3:
        $r4 := @caughtexception;

        return null;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    private static java.util.Set getLogPackages(android.content.Context, java.util.List)
    {
        android.content.Context r0;
        android.util.ArraySet $r2;
        boolean $z0;
        android.content.pm.VersionedPackage $r3, $r6;
        java.lang.Object $r4;
        java.lang.String $r5;
        java.util.List r7;
        java.util.Iterator r8;

        r0 := @parameter0: android.content.Context;

        r7 := @parameter1: java.util.List;

        $r2 = new android.util.ArraySet;

        specialinvoke $r2.<android.util.ArraySet: void <init>()>();

        r8 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = new android.content.pm.VersionedPackage;

        $r4 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.String) $r4;

        specialinvoke $r3.<android.content.pm.VersionedPackage: void <init>(java.lang.String,int)>($r5, 0);

        $r6 = staticinvoke <com.android.server.rollback.WatchdogRollbackLogger: android.content.pm.VersionedPackage getLogPackage(android.content.Context,android.content.pm.VersionedPackage)>(r0, $r3);

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r6);

        goto label1;

     label2:
        return $r2;
    }

    private static java.lang.String getLoggingParentName(android.content.Context, java.lang.String)
    {
        java.lang.String r0, $r9, r13;
        android.content.pm.PackageInfo $r2;
        android.os.Bundle $r3, $r4;
        java.lang.Exception $r5;
        java.lang.StringBuilder $r6;
        android.content.Context r10;
        android.content.pm.PackageManager r11;
        android.content.pm.ApplicationInfo r12;

        r10 := @parameter0: android.content.Context;

        r0 := @parameter1: java.lang.String;

        r11 = virtualinvoke r10.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

     label1:
        $r2 = virtualinvoke r11.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r0, 1073741952);

        r12 = $r2.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r3 = r12.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

        if $r3 != null goto label3;

     label2:
        return null;

     label3:
        $r4 = r12.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

        r13 = virtualinvoke $r4.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.content.pm.LOGGING_PARENT");

     label4:
        return r13;

     label5:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to discover logging parent package: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WatchdogRollbackLogger", $r9, $r5);

        return null;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static void logApexdRevert(android.content.Context, java.util.List, java.lang.String)
    {
        java.util.List r0;
        java.lang.String r1;
        java.util.Set $r2;
        boolean $z0;
        java.lang.Object $r3;
        android.content.pm.VersionedPackage $r4;
        android.content.Context r5;
        java.util.Iterator r6;

        r5 := @parameter0: android.content.Context;

        r0 := @parameter1: java.util.List;

        r1 := @parameter2: java.lang.String;

        $r2 = staticinvoke <com.android.server.rollback.WatchdogRollbackLogger: java.util.Set getLogPackages(android.content.Context,java.util.List)>(r5, r0);

        r6 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (android.content.pm.VersionedPackage) $r3;

        staticinvoke <com.android.server.rollback.WatchdogRollbackLogger: void logEvent(android.content.pm.VersionedPackage,int,int,java.lang.String)>($r4, 2, 5, r1);

        goto label1;

     label2:
        return;
    }

    public static void logEvent(android.content.pm.VersionedPackage, int, int, java.lang.String)
    {
        android.content.pm.VersionedPackage r0;
        int i0, i1, $i3;
        java.lang.String r1, $r5, $r10, $r14, $r16;
        java.lang.StringBuilder $r3;
        byte[] $r15, $r17;

        r0 := @parameter0: android.content.pm.VersionedPackage;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Watchdog event occurred with type: ");

        $r5 = staticinvoke <com.android.server.rollback.WatchdogRollbackLogger: java.lang.String rollbackTypeToString(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" logPackage: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rollbackReason: ");

        $r10 = staticinvoke <com.android.server.rollback.WatchdogRollbackLogger: java.lang.String rollbackReasonToString(int)>(i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failedPackageName: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("WatchdogRollbackLogger", $r14);

        if r0 == null goto label1;

        $r16 = virtualinvoke r0.<android.content.pm.VersionedPackage: java.lang.String getPackageName()>();

        $i3 = virtualinvoke r0.<android.content.pm.VersionedPackage: int getVersionCode()>();

        $r17 = newarray (byte)[0];

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,int,int,java.lang.String,byte[])>(147, i0, $r16, $i3, i1, r1, $r17);

        goto label2;

     label1:
        $r15 = newarray (byte)[0];

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,int,int,java.lang.String,byte[])>(147, i0, "", 0, i1, r1, $r15);

     label2:
        return;
    }

    static void logRollbackStatusOnBoot(android.content.Context, int, java.lang.String, java.util.List)
    {
        java.lang.String r0, $r5, $r8, $r10;
        android.content.pm.PackageInstaller r1;
        java.util.Iterator r2, r14;
        android.content.pm.PackageManager $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.StringBuilder $r4, $r9;
        java.util.List $r6, r13;
        java.lang.Object $r7, $r11;
        int $i0, i1, i2;
        android.content.Context r12;
        android.content.rollback.RollbackInfo r15;
        android.content.pm.VersionedPackage r17;
        android.content.rollback.PackageRollbackInfo r18;
        android.content.pm.PackageInstaller$SessionInfo r19;

        r12 := @parameter0: android.content.Context;

        i1 := @parameter1: int;

        r0 := @parameter2: java.lang.String;

        r13 := @parameter3: java.util.List;

        $r3 = virtualinvoke r12.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r1 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>();

        r14 = interfaceinvoke r13.<java.util.List: java.util.Iterator iterator()>();

     label01:
        r15 = null;

        $z0 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r11 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r15 = (android.content.rollback.RollbackInfo) $r11;

        $i0 = virtualinvoke r15.<android.content.rollback.RollbackInfo: int getRollbackId()>();

        if i1 != $i0 goto label02;

        goto label03;

     label02:
        goto label01;

     label03:
        if r15 != null goto label04;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rollback info not found for last staged rollback: ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("WatchdogRollbackLogger", $r10);

        return;

     label04:
        r17 = null;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z1 != 0 goto label07;

        $r6 = virtualinvoke r15.<android.content.rollback.RollbackInfo: java.util.List getPackages()>();

        r2 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label05:
        r17 = null;

        $z4 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label07;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r18 = (android.content.rollback.PackageRollbackInfo) $r7;

        $r8 = virtualinvoke r18.<android.content.rollback.PackageRollbackInfo: java.lang.String getPackageName()>();

        $z5 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z5 == 0 goto label06;

        r17 = virtualinvoke r18.<android.content.rollback.PackageRollbackInfo: android.content.pm.VersionedPackage getVersionRolledBackFrom()>();

        goto label07;

     label06:
        goto label05;

     label07:
        i2 = virtualinvoke r15.<android.content.rollback.RollbackInfo: int getCommittedSessionId()>();

        r19 = virtualinvoke r1.<android.content.pm.PackageInstaller: android.content.pm.PackageInstaller$SessionInfo getSessionInfo(int)>(i2);

        if r19 != null goto label08;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("On boot completed, could not load session id ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("WatchdogRollbackLogger", $r5);

        return;

     label08:
        $z2 = virtualinvoke r19.<android.content.pm.PackageInstaller$SessionInfo: boolean isStagedSessionApplied()>();

        if $z2 == 0 goto label09;

        staticinvoke <com.android.server.rollback.WatchdogRollbackLogger: void logEvent(android.content.pm.VersionedPackage,int,int,java.lang.String)>(r17, 2, 0, "");

        goto label10;

     label09:
        $z3 = virtualinvoke r19.<android.content.pm.PackageInstaller$SessionInfo: boolean isStagedSessionFailed()>();

        if $z3 == 0 goto label10;

        staticinvoke <com.android.server.rollback.WatchdogRollbackLogger: void logEvent(android.content.pm.VersionedPackage,int,int,java.lang.String)>(r17, 3, 0, "");

     label10:
        return;
    }

    static int mapFailureReasonToMetric(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 1 goto label4;

        if i0 == 2 goto label3;

        if i0 == 3 goto label2;

        if i0 == 4 goto label1;

        return 0;

     label1:
        return 4;

     label2:
        return 3;

     label3:
        return 2;

     label4:
        return 1;
    }

    private static java.lang.String rollbackReasonToString(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 1 goto label5;

        if i0 == 2 goto label4;

        if i0 == 3 goto label3;

        if i0 == 4 goto label2;

        if i0 == 5 goto label1;

        return "UNKNOWN";

     label1:
        return "REASON_NATIVE_CRASH_DURING_BOOT";

     label2:
        return "REASON_APP_NOT_RESPONDING";

     label3:
        return "REASON_APP_CRASH";

     label4:
        return "REASON_EXPLICIT_HEALTH_CHECK";

     label5:
        return "REASON_NATIVE_CRASH";
    }

    private static java.lang.String rollbackTypeToString(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 1 goto label4;

        if i0 == 2 goto label3;

        if i0 == 3 goto label2;

        if i0 == 4 goto label1;

        return "UNKNOWN";

     label1:
        return "ROLLBACK_BOOT_TRIGGERED";

     label2:
        return "ROLLBACK_FAILURE";

     label3:
        return "ROLLBACK_SUCCESS";

     label4:
        return "ROLLBACK_INITIATE";
    }

    public static void <clinit>()
    {
        <com.android.server.rollback.WatchdogRollbackLogger: java.lang.String TAG> = "WatchdogRollbackLogger";

        <com.android.server.rollback.WatchdogRollbackLogger: java.lang.String LOGGING_PARENT_KEY> = "android.content.pm.LOGGING_PARENT";

        return;
    }
}
