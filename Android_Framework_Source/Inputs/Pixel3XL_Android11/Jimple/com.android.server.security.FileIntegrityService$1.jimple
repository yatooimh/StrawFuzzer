class com.android.server.security.FileIntegrityService$1 extends android.security.IFileIntegrityService$Stub
{
    final com.android.server.security.FileIntegrityService this$0;

    void <init>(com.android.server.security.FileIntegrityService)
    {
        com.android.server.security.FileIntegrityService$1 r0;
        com.android.server.security.FileIntegrityService r1;

        r0 := @this: com.android.server.security.FileIntegrityService$1;

        r1 := @parameter0: com.android.server.security.FileIntegrityService;

        r0.<com.android.server.security.FileIntegrityService$1: com.android.server.security.FileIntegrityService this$0> = r1;

        specialinvoke r0.<android.security.IFileIntegrityService$Stub: void <init>()>();

        return;
    }

    private void checkCallerPermission(java.lang.String)
    {
        com.android.server.security.FileIntegrityService$1 r0;
        java.lang.String r1, $r11;
        int i0, i1, $i2, $i3, $i4;
        java.lang.Object $r3, $r16;
        android.content.pm.PackageManagerInternal $r4;
        java.lang.StringBuilder $r5;
        java.lang.SecurityException $r10, $r18;
        com.android.server.security.FileIntegrityService $r12, $r14;
        android.content.Context $r13, $r15;
        android.app.AppOpsManager $r17;

        r0 := @this: com.android.server.security.FileIntegrityService$1;

        r1 := @parameter0: java.lang.String;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $r3 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/content/pm/PackageManagerInternal;");

        $r4 = (android.content.pm.PackageManagerInternal) $r3;

        $i2 = virtualinvoke $r4.<android.content.pm.PackageManagerInternal: int getPackageUid(java.lang.String,int,int)>(r1, 0, i1);

        if i0 != $i2 goto label3;

        $r12 = r0.<com.android.server.security.FileIntegrityService$1: com.android.server.security.FileIntegrityService this$0>;

        $r13 = virtualinvoke $r12.<com.android.server.security.FileIntegrityService: android.content.Context getContext()>();

        $i3 = virtualinvoke $r13.<android.content.Context: int checkCallingPermission(java.lang.String)>("android.permission.INSTALL_PACKAGES");

        if $i3 != 0 goto label1;

        return;

     label1:
        $r14 = r0.<com.android.server.security.FileIntegrityService$1: com.android.server.security.FileIntegrityService this$0>;

        $r15 = virtualinvoke $r14.<com.android.server.security.FileIntegrityService: android.content.Context getContext()>();

        $r16 = virtualinvoke $r15.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/AppOpsManager;");

        $r17 = (android.app.AppOpsManager) $r16;

        $i4 = virtualinvoke $r17.<android.app.AppOpsManager: int checkOpNoThrow(int,int,java.lang.String)>(66, i0, r1);

        if $i4 != 0 goto label2;

        return;

     label2:
        $r18 = new java.lang.SecurityException;

        specialinvoke $r18.<java.lang.SecurityException: void <init>(java.lang.String)>("Caller should have INSTALL_PACKAGES or REQUEST_INSTALL_PACKAGES");

        throw $r18;

     label3:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling uid ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not own package ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = new java.lang.SecurityException;

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.SecurityException: void <init>(java.lang.String)>($r11);

        throw $r10;
    }

    public boolean isApkVeritySupported()
    {
        com.android.server.security.FileIntegrityService$1 r0;
        int i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.security.FileIntegrityService$1;

        i0 = <android.os.Build$VERSION: int FIRST_SDK_INT>;

        z0 = 0;

        if i0 >= 30 goto label1;

        $i1 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("ro.apk_verity.mode", 0);

        if $i1 != 2 goto label2;

     label1:
        z0 = 1;

     label2:
        return z0;
    }

    public boolean isAppSourceCertificateTrusted(byte[], java.lang.String)
    {
        com.android.server.security.FileIntegrityService$1 r0;
        boolean z0, $z1;
        com.android.server.security.FileIntegrityService $r1;
        java.util.Collection $r2;
        java.security.cert.X509Certificate $r3;
        java.lang.Throwable $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r8, r10;
        byte[] r9;

        r0 := @this: com.android.server.security.FileIntegrityService$1;

        r9 := @parameter0: byte[];

        r10 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.security.FileIntegrityService$1: void checkCallerPermission(java.lang.String)>(r10);

     label1:
        $z1 = virtualinvoke r0.<com.android.server.security.FileIntegrityService$1: boolean isApkVeritySupported()>();

        if $z1 != 0 goto label3;

     label2:
        return 0;

     label3:
        if r9 != null goto label6;

     label4:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("FileIntegrityService", "Received a null certificate");

     label5:
        return 0;

     label6:
        $r1 = r0.<com.android.server.security.FileIntegrityService$1: com.android.server.security.FileIntegrityService this$0>;

        $r2 = staticinvoke <com.android.server.security.FileIntegrityService: java.util.Collection access$100(com.android.server.security.FileIntegrityService)>($r1);

        $r3 = staticinvoke <com.android.server.security.FileIntegrityService: java.security.cert.X509Certificate access$000(byte[])>(r9);

        z0 = interfaceinvoke $r2.<java.util.Collection: boolean contains(java.lang.Object)>($r3);

     label7:
        return z0;

     label8:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to convert the certificate: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("FileIntegrityService", $r8);

        return 0;

        catch java.security.cert.CertificateException from label1 to label2 with label8;
        catch java.security.cert.CertificateException from label4 to label5 with label8;
        catch java.security.cert.CertificateException from label6 to label7 with label8;
    }
}
