public class com.android.server.security.KeyAttestationApplicationIdProviderService extends android.security.keymaster.IKeyAttestationApplicationIdProvider$Stub
{
    private android.content.pm.PackageManager mPackageManager;

    public void <init>(android.content.Context)
    {
        com.android.server.security.KeyAttestationApplicationIdProviderService r0;
        android.content.Context r1;
        android.content.pm.PackageManager $r2;

        r0 := @this: com.android.server.security.KeyAttestationApplicationIdProviderService;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.security.keymaster.IKeyAttestationApplicationIdProvider$Stub: void <init>()>();

        $r2 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r0.<com.android.server.security.KeyAttestationApplicationIdProviderService: android.content.pm.PackageManager mPackageManager> = $r2;

        return;
    }

    public android.security.keymaster.KeyAttestationApplicationId getKeyAttestationApplicationId(int) throws android.os.RemoteException
    {
        com.android.server.security.KeyAttestationApplicationIdProviderService r0;
        long l0, $l3;
        android.security.keymaster.KeyAttestationPackageInfo[] r1;
        android.content.pm.PackageManager $r2, $r5;
        int $i1, $i2, i4, i5, i6, i7;
        android.security.keymaster.KeyAttestationApplicationId $r3;
        java.lang.String $r4, $r7, $r12;
        android.security.keymaster.KeyAttestationPackageInfo $r6;
        android.content.pm.Signature[] $r8;
        java.lang.SecurityException $r9;
        java.lang.Throwable $r10;
        android.content.pm.PackageManager$NameNotFoundException $r11;
        java.lang.String[] r13;
        android.content.pm.PackageInfo r14;
        android.os.RemoteException r15, r18;

        r0 := @this: com.android.server.security.KeyAttestationApplicationIdProviderService;

        i4 := @parameter0: int;

        i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i5 == 1017 goto label02;

        if i5 != 1076 goto label01;

        goto label02;

     label01:
        $r9 = new java.lang.SecurityException;

        specialinvoke $r9.<java.lang.SecurityException: void <init>(java.lang.String)>("This service can only be used by Keystore or Credstore");

        throw $r9;

     label02:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label03:
        $r2 = r0.<com.android.server.security.KeyAttestationApplicationIdProviderService: android.content.pm.PackageManager mPackageManager>;

        r13 = virtualinvoke $r2.<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>(i4);

     label04:
        if r13 == null goto label10;

     label05:
        i6 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i4);

        $i1 = lengthof r13;

        r1 = newarray (android.security.keymaster.KeyAttestationPackageInfo)[$i1];

     label06:
        i7 = 0;

     label07:
        $i2 = lengthof r13;

        if i7 >= $i2 goto label09;

        $r5 = r0.<com.android.server.security.KeyAttestationApplicationIdProviderService: android.content.pm.PackageManager mPackageManager>;

        $r4 = r13[i7];

        r14 = virtualinvoke $r5.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfoAsUser(java.lang.String,int,int)>($r4, 64, i6);

        $r6 = new android.security.keymaster.KeyAttestationPackageInfo;

        $r7 = r13[i7];

        $l3 = virtualinvoke r14.<android.content.pm.PackageInfo: long getLongVersionCode()>();

        $r8 = r14.<android.content.pm.PackageInfo: android.content.pm.Signature[] signatures>;

        specialinvoke $r6.<android.security.keymaster.KeyAttestationPackageInfo: void <init>(java.lang.String,long,android.content.pm.Signature[])>($r7, $l3, $r8);

        r1[i7] = $r6;

     label08:
        i7 = i7 + 1;

        goto label07;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        $r3 = new android.security.keymaster.KeyAttestationApplicationId;

        specialinvoke $r3.<android.security.keymaster.KeyAttestationApplicationId: void <init>(android.security.keymaster.KeyAttestationPackageInfo[])>(r1);

        return $r3;

     label10:
        r15 = new android.os.RemoteException;

        specialinvoke r15.<android.os.RemoteException: void <init>(java.lang.String)>("No packages for uid");

        throw r15;

     label11:
        $r10 := @caughtexception;

        goto label14;

     label12:
        $r11 := @caughtexception;

     label13:
        r18 = new android.os.RemoteException;

        $r12 = virtualinvoke $r11.<android.content.pm.PackageManager$NameNotFoundException: java.lang.String getMessage()>();

        specialinvoke r18.<android.os.RemoteException: void <init>(java.lang.String)>($r12);

        throw r18;

     label14:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r10;

        catch android.content.pm.PackageManager$NameNotFoundException from label03 to label04 with label12;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch android.content.pm.PackageManager$NameNotFoundException from label05 to label06 with label12;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch android.content.pm.PackageManager$NameNotFoundException from label07 to label08 with label12;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch android.content.pm.PackageManager$NameNotFoundException from label10 to label11 with label12;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label13 to label14 with label11;
    }
}
