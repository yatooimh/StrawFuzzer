class com.android.server.security.VerityUtils$TrackedShmBufferFactory extends java.lang.Object implements android.util.apk.ByteBufferFactory
{
    private java.nio.ByteBuffer mBuffer;
    private android.os.SharedMemory mShm;

    private void <init>()
    {
        com.android.server.security.VerityUtils$TrackedShmBufferFactory r0;

        r0 := @this: com.android.server.security.VerityUtils$TrackedShmBufferFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(com.android.server.security.VerityUtils$1)
    {
        com.android.server.security.VerityUtils$TrackedShmBufferFactory r0;
        com.android.server.security.VerityUtils$1 r1;

        r0 := @this: com.android.server.security.VerityUtils$TrackedShmBufferFactory;

        r1 := @parameter0: com.android.server.security.VerityUtils$1;

        specialinvoke r0.<com.android.server.security.VerityUtils$TrackedShmBufferFactory: void <init>()>();

        return;
    }

    public java.nio.ByteBuffer create(int)
    {
        com.android.server.security.VerityUtils$TrackedShmBufferFactory r0;
        int i0, $i1, $i2, $i3;
        java.nio.ByteBuffer $r1, r6;
        boolean $z0;
        android.os.SharedMemory $r2, r5;
        java.lang.Throwable $r3;
        java.lang.SecurityException $r4, r7;
        java.lang.IllegalStateException r8;

        r0 := @this: com.android.server.security.VerityUtils$TrackedShmBufferFactory;

        i0 := @parameter0: int;

     label1:
        $r1 = r0.<com.android.server.security.VerityUtils$TrackedShmBufferFactory: java.nio.ByteBuffer mBuffer>;

        if $r1 != null goto label4;

        r5 = staticinvoke <android.os.SharedMemory: android.os.SharedMemory create(java.lang.String,int)>("apkverity", i0);

        r0.<com.android.server.security.VerityUtils$TrackedShmBufferFactory: android.os.SharedMemory mShm> = r5;

        $i2 = <android.system.OsConstants: int PROT_READ>;

        $i1 = <android.system.OsConstants: int PROT_WRITE>;

        $i3 = $i2 | $i1;

        $z0 = virtualinvoke r5.<android.os.SharedMemory: boolean setProtect(int)>($i3);

        if $z0 == 0 goto label3;

        $r2 = r0.<com.android.server.security.VerityUtils$TrackedShmBufferFactory: android.os.SharedMemory mShm>;

        r6 = virtualinvoke $r2.<android.os.SharedMemory: java.nio.ByteBuffer mapReadWrite()>();

        r0.<com.android.server.security.VerityUtils$TrackedShmBufferFactory: java.nio.ByteBuffer mBuffer> = r6;

     label2:
        return r6;

     label3:
        r7 = new java.lang.SecurityException;

        specialinvoke r7.<java.lang.SecurityException: void <init>(java.lang.String)>("Failed to set protection");

        throw r7;

     label4:
        r8 = new java.lang.IllegalStateException;

        specialinvoke r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Multiple instantiation from this factory");

        throw r8;

     label5:
        $r3 := @caughtexception;

        $r4 = new java.lang.SecurityException;

        specialinvoke $r4.<java.lang.SecurityException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to set protection", $r3);

        throw $r4;

        catch android.system.ErrnoException from label1 to label2 with label5;
        catch android.system.ErrnoException from label3 to label4 with label5;
        catch android.system.ErrnoException from label4 to label5 with label5;
    }

    public int getBufferLimit()
    {
        com.android.server.security.VerityUtils$TrackedShmBufferFactory r0;
        java.nio.ByteBuffer r1;
        int i0;

        r0 := @this: com.android.server.security.VerityUtils$TrackedShmBufferFactory;

        r1 = r0.<com.android.server.security.VerityUtils$TrackedShmBufferFactory: java.nio.ByteBuffer mBuffer>;

        if r1 != null goto label1;

        i0 = -1;

        goto label2;

     label1:
        i0 = virtualinvoke r1.<java.nio.ByteBuffer: int limit()>();

     label2:
        return i0;
    }

    public android.os.SharedMemory releaseSharedMemory()
    {
        com.android.server.security.VerityUtils$TrackedShmBufferFactory r0;
        java.nio.ByteBuffer r1;
        android.os.SharedMemory r2;

        r0 := @this: com.android.server.security.VerityUtils$TrackedShmBufferFactory;

        r1 = r0.<com.android.server.security.VerityUtils$TrackedShmBufferFactory: java.nio.ByteBuffer mBuffer>;

        if r1 == null goto label1;

        staticinvoke <android.os.SharedMemory: void unmap(java.nio.ByteBuffer)>(r1);

        r0.<com.android.server.security.VerityUtils$TrackedShmBufferFactory: java.nio.ByteBuffer mBuffer> = null;

     label1:
        r2 = r0.<com.android.server.security.VerityUtils$TrackedShmBufferFactory: android.os.SharedMemory mShm>;

        r0.<com.android.server.security.VerityUtils$TrackedShmBufferFactory: android.os.SharedMemory mShm> = null;

        return r2;
    }
}
