public abstract class com.android.server.security.VerityUtils extends java.lang.Object
{
    private static final boolean DEBUG;
    public static final java.lang.String FSVERITY_SIGNATURE_FILE_EXTENSION;
    private static final int MAX_SIGNATURE_FILE_SIZE_BYTES;
    private static final java.lang.String TAG;

    public void <init>()
    {
        com.android.server.security.VerityUtils r0;

        r0 := @this: com.android.server.security.VerityUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.String bytesToString(byte[])
    {
        byte[] r0;
        java.lang.String $r1;

        r0 := @parameter0: byte[];

        $r1 = staticinvoke <libcore.util.HexEncoding: java.lang.String encodeToString(byte[])>(r0);

        return $r1;
    }

    private static native int enableFsverityNative(java.lang.String, byte[]);

    public static byte[] generateApkVerityRootHash(java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.DigestException, java.io.IOException
    {
        java.lang.String r0;
        byte[] $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <android.util.apk.ApkSignatureVerifier: byte[] generateApkVerityRootHash(java.lang.String)>(r0);

        return $r1;
    }

    public static com.android.server.security.VerityUtils$SetupResult generateApkVeritySetupData(java.lang.String)
    {
        int i0;
        java.lang.Object $r0, $r1;
        java.lang.Integer $r2;
        boolean $z0;
        java.io.FileDescriptor $r3, r14;
        java.lang.Throwable $r5, $r6;
        java.lang.String r7;
        android.os.SharedMemory r8, r9, r13;
        byte[] r10;
        com.android.server.security.VerityUtils$SetupResult r11, r15, r16, r19;
        android.util.Pair r12;

        r7 := @parameter0: java.lang.String;

        r8 = null;

        r9 = null;

     label01:
        r10 = staticinvoke <android.util.apk.ApkSignatureVerifier: byte[] getVerityRootHash(java.lang.String)>(r7);

     label02:
        if r10 != null goto label06;

        r8 = null;

        r9 = null;

     label03:
        r11 = staticinvoke <com.android.server.security.VerityUtils$SetupResult: com.android.server.security.VerityUtils$SetupResult skipped()>();

     label04:
        goto label05;

     label05:
        return r11;

     label06:
        r8 = null;

        r9 = null;

     label07:
        r12 = staticinvoke <com.android.server.security.VerityUtils: android.util.Pair generateFsVerityIntoSharedMemory(java.lang.String,byte[])>(r7, r10);

     label08:
        r8 = null;

        r9 = null;

     label09:
        $r0 = r12.<android.util.Pair: java.lang.Object first>;

        r13 = (android.os.SharedMemory) $r0;

     label10:
        r8 = r13;

        r9 = r13;

     label11:
        $r1 = r12.<android.util.Pair: java.lang.Object second>;

        $r2 = (java.lang.Integer) $r1;

        i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

     label12:
        r8 = r13;

        r9 = r13;

     label13:
        r14 = virtualinvoke r13.<android.os.SharedMemory: java.io.FileDescriptor getFileDescriptor()>();

     label14:
        if r14 == null goto label21;

        r8 = r13;

        r9 = r13;

     label15:
        $z0 = virtualinvoke r14.<java.io.FileDescriptor: boolean valid()>();

        if $z0 != 0 goto label17;

     label16:
        goto label21;

     label17:
        r8 = r13;

        r9 = r13;

     label18:
        $r3 = staticinvoke <android.system.Os: java.io.FileDescriptor dup(java.io.FileDescriptor)>(r14);

        r15 = staticinvoke <com.android.server.security.VerityUtils$SetupResult: com.android.server.security.VerityUtils$SetupResult ok(java.io.FileDescriptor,int)>($r3, i0);

     label19:
        if r13 == null goto label20;

        virtualinvoke r13.<android.os.SharedMemory: void close()>();

     label20:
        return r15;

     label21:
        r8 = r13;

        r9 = r13;

     label22:
        r16 = staticinvoke <com.android.server.security.VerityUtils$SetupResult: com.android.server.security.VerityUtils$SetupResult failed()>();

     label23:
        if r13 == null goto label24;

        virtualinvoke r13.<android.os.SharedMemory: void close()>();

     label24:
        return r16;

     label25:
        $r5 := @caughtexception;

        goto label32;

     label26:
        $r6 := @caughtexception;

        r8 = r9;

     label27:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("VerityUtils", "Failed to set up apk verity: ", $r6);

     label28:
        r8 = r9;

     label29:
        r19 = staticinvoke <com.android.server.security.VerityUtils$SetupResult: com.android.server.security.VerityUtils$SetupResult failed()>();

     label30:
        if r9 == null goto label31;

        virtualinvoke r9.<android.os.SharedMemory: void close()>();

     label31:
        return r19;

     label32:
        if r8 == null goto label33;

        virtualinvoke r8.<android.os.SharedMemory: void close()>();

     label33:
        throw $r5;

        catch java.io.IOException from label01 to label02 with label26;
        catch java.lang.SecurityException from label01 to label02 with label26;
        catch java.security.DigestException from label01 to label02 with label26;
        catch java.security.NoSuchAlgorithmException from label01 to label02 with label26;
        catch android.util.apk.SignatureNotFoundException from label01 to label02 with label26;
        catch android.system.ErrnoException from label01 to label02 with label26;
        catch java.lang.Throwable from label01 to label02 with label25;
        catch java.io.IOException from label03 to label04 with label26;
        catch java.lang.SecurityException from label03 to label04 with label26;
        catch java.security.DigestException from label03 to label04 with label26;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label26;
        catch android.util.apk.SignatureNotFoundException from label03 to label04 with label26;
        catch android.system.ErrnoException from label03 to label04 with label26;
        catch java.lang.Throwable from label03 to label04 with label25;
        catch java.io.IOException from label07 to label08 with label26;
        catch java.lang.SecurityException from label07 to label08 with label26;
        catch java.security.DigestException from label07 to label08 with label26;
        catch java.security.NoSuchAlgorithmException from label07 to label08 with label26;
        catch android.util.apk.SignatureNotFoundException from label07 to label08 with label26;
        catch android.system.ErrnoException from label07 to label08 with label26;
        catch java.lang.Throwable from label07 to label08 with label25;
        catch java.io.IOException from label09 to label10 with label26;
        catch java.lang.SecurityException from label09 to label10 with label26;
        catch java.security.DigestException from label09 to label10 with label26;
        catch java.security.NoSuchAlgorithmException from label09 to label10 with label26;
        catch android.util.apk.SignatureNotFoundException from label09 to label10 with label26;
        catch android.system.ErrnoException from label09 to label10 with label26;
        catch java.lang.Throwable from label09 to label10 with label25;
        catch java.io.IOException from label11 to label12 with label26;
        catch java.lang.SecurityException from label11 to label12 with label26;
        catch java.security.DigestException from label11 to label12 with label26;
        catch java.security.NoSuchAlgorithmException from label11 to label12 with label26;
        catch android.util.apk.SignatureNotFoundException from label11 to label12 with label26;
        catch android.system.ErrnoException from label11 to label12 with label26;
        catch java.lang.Throwable from label11 to label12 with label25;
        catch java.io.IOException from label13 to label14 with label26;
        catch java.lang.SecurityException from label13 to label14 with label26;
        catch java.security.DigestException from label13 to label14 with label26;
        catch java.security.NoSuchAlgorithmException from label13 to label14 with label26;
        catch android.util.apk.SignatureNotFoundException from label13 to label14 with label26;
        catch android.system.ErrnoException from label13 to label14 with label26;
        catch java.lang.Throwable from label13 to label14 with label25;
        catch java.io.IOException from label15 to label16 with label26;
        catch java.lang.SecurityException from label15 to label16 with label26;
        catch java.security.DigestException from label15 to label16 with label26;
        catch java.security.NoSuchAlgorithmException from label15 to label16 with label26;
        catch android.util.apk.SignatureNotFoundException from label15 to label16 with label26;
        catch android.system.ErrnoException from label15 to label16 with label26;
        catch java.lang.Throwable from label15 to label16 with label25;
        catch java.io.IOException from label18 to label19 with label26;
        catch java.lang.SecurityException from label18 to label19 with label26;
        catch java.security.DigestException from label18 to label19 with label26;
        catch java.security.NoSuchAlgorithmException from label18 to label19 with label26;
        catch android.util.apk.SignatureNotFoundException from label18 to label19 with label26;
        catch android.system.ErrnoException from label18 to label19 with label26;
        catch java.lang.Throwable from label18 to label19 with label25;
        catch java.io.IOException from label22 to label23 with label26;
        catch java.lang.SecurityException from label22 to label23 with label26;
        catch java.security.DigestException from label22 to label23 with label26;
        catch java.security.NoSuchAlgorithmException from label22 to label23 with label26;
        catch android.util.apk.SignatureNotFoundException from label22 to label23 with label26;
        catch android.system.ErrnoException from label22 to label23 with label26;
        catch java.lang.Throwable from label22 to label23 with label25;
        catch java.lang.Throwable from label27 to label28 with label25;
        catch java.lang.Throwable from label29 to label30 with label25;
    }

    private static android.util.Pair generateFsVerityIntoSharedMemory(java.lang.String, byte[]) throws java.io.IOException, java.security.DigestException, java.security.NoSuchAlgorithmException, android.util.apk.SignatureNotFoundException
    {
        byte[] r0, r17;
        int i0, $i1;
        com.android.server.security.VerityUtils$TrackedShmBufferFactory $r1;
        boolean $z0, $z1;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r7, $r10, r15;
        java.lang.SecurityException $r9, $r12;
        java.lang.IllegalStateException $r11;
        java.lang.Integer $r13;
        android.util.Pair $r14;
        android.os.SharedMemory r18;

        r15 := @parameter0: java.lang.String;

        r0 := @parameter1: byte[];

        $r1 = new com.android.server.security.VerityUtils$TrackedShmBufferFactory;

        specialinvoke $r1.<com.android.server.security.VerityUtils$TrackedShmBufferFactory: void <init>(com.android.server.security.VerityUtils$1)>(null);

        r17 = staticinvoke <android.util.apk.ApkSignatureVerifier: byte[] generateApkVerity(java.lang.String,android.util.apk.ByteBufferFactory)>(r15, $r1);

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r0, r17);

        if $z0 == 0 goto label3;

        i0 = virtualinvoke $r1.<com.android.server.security.VerityUtils$TrackedShmBufferFactory: int getBufferLimit()>();

        r18 = virtualinvoke $r1.<com.android.server.security.VerityUtils$TrackedShmBufferFactory: android.os.SharedMemory releaseSharedMemory()>();

        if r18 == null goto label2;

        $i1 = <android.system.OsConstants: int PROT_READ>;

        $z1 = virtualinvoke r18.<android.os.SharedMemory: boolean setProtect(int)>($i1);

        if $z1 == 0 goto label1;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r14 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>(r18, $r13);

        return $r14;

     label1:
        $r12 = new java.lang.SecurityException;

        specialinvoke $r12.<java.lang.SecurityException: void <init>(java.lang.String)>("Failed to set up shared memory correctly");

        throw $r12;

     label2:
        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Failed to generate verity tree into shared memory");

        throw $r11;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("verity hash mismatch: ");

        $r4 = staticinvoke <com.android.server.security.VerityUtils: java.lang.String bytesToString(byte[])>(r17);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" != ");

        $r7 = staticinvoke <com.android.server.security.VerityUtils: java.lang.String bytesToString(byte[])>(r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = new java.lang.SecurityException;

        $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.SecurityException: void <init>(java.lang.String)>($r10);

        throw $r9;
    }

    public static java.lang.String getFsveritySignatureFilePath(java.lang.String)
    {
        java.lang.String r0, $r5;
        java.lang.StringBuilder $r2;

        r0 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".fsv_sig");

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static byte[] getVerityRootHash(java.lang.String) throws java.io.IOException, android.util.apk.SignatureNotFoundException
    {
        java.lang.String r0;
        byte[] $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <android.util.apk.ApkSignatureVerifier: byte[] getVerityRootHash(java.lang.String)>(r0);

        return $r1;
    }

    public static boolean hasFsverity(java.lang.String)
    {
        java.lang.String r0, $r7;
        int i0, $i1;
        java.lang.StringBuilder $r2;
        boolean z0;

        r0 := @parameter0: java.lang.String;

        i0 = staticinvoke <com.android.server.security.VerityUtils: int statxForFsverityNative(java.lang.String)>(r0);

        z0 = 0;

        if i0 >= 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to check whether fs-verity is enabled, errno ");

        $i1 = neg i0;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("VerityUtils", $r7);

        return 0;

     label1:
        if i0 != 1 goto label2;

        z0 = 1;

     label2:
        return z0;
    }

    public static boolean isFsveritySignatureFile(java.io.File)
    {
        java.io.File r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @parameter0: java.io.File;

        $r1 = virtualinvoke r0.<java.io.File: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>(".fsv_sig");

        return $z0;
    }

    public static void setUpFsverity(java.lang.String, java.lang.String) throws java.io.IOException
    {
        int i0;
        java.lang.String[] $r0, $r7;
        java.nio.file.Path $r1, $r8;
        long $l1;
        byte $b2;
        java.lang.StringBuilder $r2, $r10;
        java.lang.SecurityException $r5;
        java.lang.String $r6, $r14, $r17, r18, r19;
        byte[] $r9;
        java.io.IOException $r16;

        r18 := @parameter0: java.lang.String;

        r19 := @parameter1: java.lang.String;

        $r0 = newarray (java.lang.String)[0];

        $r1 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>(r19, $r0);

        $l1 = staticinvoke <java.nio.file.Files: long size(java.nio.file.Path)>($r1);

        $b2 = $l1 cmp 8192L;

        if $b2 > 0 goto label2;

        $r7 = newarray (java.lang.String)[0];

        $r8 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>(r19, $r7);

        $r9 = staticinvoke <java.nio.file.Files: byte[] readAllBytes(java.nio.file.Path)>($r8);

        i0 = staticinvoke <com.android.server.security.VerityUtils: int enableFsverityNative(java.lang.String,byte[])>(r18, $r9);

        if i0 != 0 goto label1;

        return;

     label1:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to enable fs-verity on ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r14 = staticinvoke <android.system.Os: java.lang.String strerror(int)>(i0);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = new java.io.IOException;

        $r17 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.io.IOException: void <init>(java.lang.String)>($r17);

        throw $r16;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Signature file is unexpectedly large: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r5 = new java.lang.SecurityException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.SecurityException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    private static native int statxForFsverityNative(java.lang.String);

    public static void <clinit>()
    {
        <com.android.server.security.VerityUtils: java.lang.String TAG> = "VerityUtils";

        <com.android.server.security.VerityUtils: int MAX_SIGNATURE_FILE_SIZE_BYTES> = 8192;

        <com.android.server.security.VerityUtils: java.lang.String FSVERITY_SIGNATURE_FILE_EXTENSION> = ".fsv_sig";

        <com.android.server.security.VerityUtils: boolean DEBUG> = 0;

        return;
    }
}
