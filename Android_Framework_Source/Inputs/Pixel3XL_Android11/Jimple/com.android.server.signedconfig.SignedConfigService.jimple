public class com.android.server.signedconfig.SignedConfigService extends java.lang.Object
{
    private static final boolean DBG;
    private static final java.lang.String KEY_GLOBAL_SETTINGS;
    private static final java.lang.String KEY_GLOBAL_SETTINGS_SIGNATURE;
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private final android.content.pm.PackageManagerInternal mPacMan;

    public void <init>(android.content.Context)
    {
        com.android.server.signedconfig.SignedConfigService r0;
        android.content.Context r1;
        java.lang.Object $r2;
        android.content.pm.PackageManagerInternal $r3;

        r0 := @this: com.android.server.signedconfig.SignedConfigService;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.signedconfig.SignedConfigService: android.content.Context mContext> = r1;

        $r2 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/content/pm/PackageManagerInternal;");

        $r3 = (android.content.pm.PackageManagerInternal) $r2;

        r0.<com.android.server.signedconfig.SignedConfigService: android.content.pm.PackageManagerInternal mPacMan> = $r3;

        return;
    }

    public static void registerUpdateReceiver(android.content.Context)
    {
        android.content.Context r0;
        android.content.IntentFilter $r2;
        com.android.server.signedconfig.SignedConfigService$UpdateReceiver $r3;

        r0 := @parameter0: android.content.Context;

        $r2 = new android.content.IntentFilter;

        specialinvoke $r2.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_ADDED");

        virtualinvoke $r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_REPLACED");

        virtualinvoke $r2.<android.content.IntentFilter: void addDataScheme(java.lang.String)>("package");

        $r3 = new com.android.server.signedconfig.SignedConfigService$UpdateReceiver;

        specialinvoke $r3.<com.android.server.signedconfig.SignedConfigService$UpdateReceiver: void <init>(com.android.server.signedconfig.SignedConfigService$1)>(null);

        virtualinvoke r0.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r3, $r2);

        return;
    }

    void handlePackageBroadcast(android.content.Intent)
    {
        com.android.server.signedconfig.SignedConfigService r0;
        int i0;
        java.lang.String r1, $r16, $r21, r24, r29, r30;
        android.content.Context $r2, $r10;
        android.os.UserHandle $r3;
        android.content.pm.PackageManagerInternal $r4;
        android.content.pm.ApplicationInfo $r5;
        boolean $z0, $z1;
        com.android.server.signedconfig.SignedConfigEvent $r6;
        java.util.Base64$Decoder $r7;
        byte[] $r8;
        java.nio.charset.Charset $r9;
        java.lang.StringBuilder $r11, r33;
        java.lang.Throwable $r17, $r18;
        android.content.Intent r22;
        android.net.Uri r23;
        android.content.pm.PackageInfo r25;
        android.os.Bundle r27;
        com.android.server.signedconfig.GlobalSettingsConfigApplicator r31;

        r0 := @this: com.android.server.signedconfig.SignedConfigService;

        r22 := @parameter0: android.content.Intent;

        r23 = virtualinvoke r22.<android.content.Intent: android.net.Uri getData()>();

        if r23 != null goto label01;

        r24 = null;

        goto label02;

     label01:
        r24 = virtualinvoke r23.<android.net.Uri: java.lang.String getSchemeSpecificPart()>();

     label02:
        if r24 != null goto label03;

        return;

     label03:
        $r2 = r0.<com.android.server.signedconfig.SignedConfigService: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.os.UserHandle getUser()>();

        i0 = virtualinvoke $r3.<android.os.UserHandle: int getIdentifier()>();

        $r4 = r0.<com.android.server.signedconfig.SignedConfigService: android.content.pm.PackageManagerInternal mPacMan>;

        r25 = virtualinvoke $r4.<android.content.pm.PackageManagerInternal: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int,int)>(r24, 128, 1000, i0);

        if r25 != null goto label04;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got null PackageInfo for ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; user ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r16 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SignedConfig", $r16);

        return;

     label04:
        $r5 = r25.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r27 = $r5.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

        if r27 != null goto label05;

        return;

     label05:
        $z0 = virtualinvoke r27.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.settings.global");

        if $z0 == 0 goto label14;

        $z1 = virtualinvoke r27.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.settings.global.signature");

        if $z1 == 0 goto label14;

        $r6 = new com.android.server.signedconfig.SignedConfigEvent;

        specialinvoke $r6.<com.android.server.signedconfig.SignedConfigEvent: void <init>()>();

     label06:
        $r6.<com.android.server.signedconfig.SignedConfigEvent: int type> = 1;

        $r6.<com.android.server.signedconfig.SignedConfigEvent: java.lang.String fromPackage> = r24;

        r29 = virtualinvoke r27.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.settings.global");

        r1 = virtualinvoke r27.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.settings.global.signature");

     label07:
        r30 = new java.lang.String;

        $r7 = staticinvoke <java.util.Base64: java.util.Base64$Decoder getDecoder()>();

        $r8 = virtualinvoke $r7.<java.util.Base64$Decoder: byte[] decode(java.lang.String)>(r29);

        $r9 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        specialinvoke r30.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r8, $r9);

     label08:
        r31 = new com.android.server.signedconfig.GlobalSettingsConfigApplicator;

        $r10 = r0.<com.android.server.signedconfig.SignedConfigService: android.content.Context mContext>;

        specialinvoke r31.<com.android.server.signedconfig.GlobalSettingsConfigApplicator: void <init>(android.content.Context,java.lang.String,com.android.server.signedconfig.SignedConfigEvent)>($r10, r24, $r6);

        virtualinvoke r31.<com.android.server.signedconfig.GlobalSettingsConfigApplicator: void applyConfig(java.lang.String,java.lang.String)>(r30, r1);

     label09:
        virtualinvoke $r6.<com.android.server.signedconfig.SignedConfigEvent: void send()>();

        goto label14;

     label10:
        $r18 := @caughtexception;

     label11:
        r33 = new java.lang.StringBuilder;

        specialinvoke r33.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to base64 decode global settings config from ");

        virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        $r21 = virtualinvoke r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SignedConfig", $r21);

        $r6.<com.android.server.signedconfig.SignedConfigEvent: int status> = 2;

     label12:
        virtualinvoke $r6.<com.android.server.signedconfig.SignedConfigEvent: void send()>();

        return;

     label13:
        $r17 := @caughtexception;

        virtualinvoke $r6.<com.android.server.signedconfig.SignedConfigEvent: void send()>();

        throw $r17;

     label14:
        return;

        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.IllegalArgumentException from label07 to label08 with label10;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    public static void <clinit>()
    {
        <com.android.server.signedconfig.SignedConfigService: java.lang.String TAG> = "SignedConfig";

        <com.android.server.signedconfig.SignedConfigService: java.lang.String KEY_GLOBAL_SETTINGS_SIGNATURE> = "android.settings.global.signature";

        <com.android.server.signedconfig.SignedConfigService: java.lang.String KEY_GLOBAL_SETTINGS> = "android.settings.global";

        <com.android.server.signedconfig.SignedConfigService: boolean DBG> = 0;

        return;
    }
}
