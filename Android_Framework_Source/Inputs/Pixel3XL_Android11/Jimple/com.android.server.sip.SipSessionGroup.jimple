class com.android.server.sip.SipSessionGroup extends java.lang.Object implements javax.sip.SipListener
{
    private static final java.lang.String ANONYMOUS;
    private static final int CANCEL_CALL_TIMER;
    private static final boolean DBG;
    private static final boolean DBG_PING;
    private static final java.util.EventObject DEREGISTER;
    private static final java.util.EventObject END_CALL;
    private static final int END_CALL_TIMER;
    private static final int EXPIRY_TIME;
    private static final int INCALL_KEEPALIVE_INTERVAL;
    private static final int KEEPALIVE_TIMEOUT;
    private static final java.lang.String TAG;
    private static final java.lang.String THREAD_POOL_SIZE;
    private static final long WAKE_LOCK_HOLDING_TIME;
    private com.android.server.sip.SipSessionGroup$SipSessionImpl mCallReceiverSession;
    private java.lang.String mExternalIp;
    private int mExternalPort;
    private java.lang.String mLocalIp;
    private final android.net.sip.SipProfile mLocalProfile;
    private final java.lang.String mPassword;
    private java.util.Map mSessionMap;
    private com.android.server.sip.SipHelper mSipHelper;
    private javax.sip.SipStack mSipStack;
    private com.android.server.sip.SipWakeLock mWakeLock;
    private com.android.server.sip.SipWakeupTimer mWakeupTimer;

    static void <clinit>()
    {
        java.util.EventObject $r0, $r1;

        <com.android.server.sip.SipSessionGroup: long WAKE_LOCK_HOLDING_TIME> = 500L;

        <com.android.server.sip.SipSessionGroup: java.lang.String THREAD_POOL_SIZE> = "1";

        <com.android.server.sip.SipSessionGroup: java.lang.String TAG> = "SipSession";

        <com.android.server.sip.SipSessionGroup: int KEEPALIVE_TIMEOUT> = 5;

        <com.android.server.sip.SipSessionGroup: int INCALL_KEEPALIVE_INTERVAL> = 10;

        <com.android.server.sip.SipSessionGroup: int EXPIRY_TIME> = 3600;

        <com.android.server.sip.SipSessionGroup: int END_CALL_TIMER> = 3;

        <com.android.server.sip.SipSessionGroup: boolean DBG_PING> = 0;

        <com.android.server.sip.SipSessionGroup: boolean DBG> = 0;

        <com.android.server.sip.SipSessionGroup: int CANCEL_CALL_TIMER> = 3;

        <com.android.server.sip.SipSessionGroup: java.lang.String ANONYMOUS> = "anonymous";

        $r0 = new java.util.EventObject;

        specialinvoke $r0.<java.util.EventObject: void <init>(java.lang.Object)>("Deregister");

        <com.android.server.sip.SipSessionGroup: java.util.EventObject DEREGISTER> = $r0;

        $r1 = new java.util.EventObject;

        specialinvoke $r1.<java.util.EventObject: void <init>(java.lang.Object)>("End call");

        <com.android.server.sip.SipSessionGroup: java.util.EventObject END_CALL> = $r1;

        return;
    }

    public void <init>(android.net.sip.SipProfile, java.lang.String, com.android.server.sip.SipWakeupTimer, com.android.server.sip.SipWakeLock) throws javax.sip.SipException
    {
        com.android.server.sip.SipSessionGroup r0;
        android.net.sip.SipProfile r1;
        java.lang.String r2;
        com.android.server.sip.SipWakeupTimer r3;
        com.android.server.sip.SipWakeLock r4;
        java.util.HashMap $r5;

        r0 := @this: com.android.server.sip.SipSessionGroup;

        r1 := @parameter0: android.net.sip.SipProfile;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.android.server.sip.SipWakeupTimer;

        r4 := @parameter3: com.android.server.sip.SipWakeLock;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.sip.SipSessionGroup: java.util.Map mSessionMap> = $r5;

        r0.<com.android.server.sip.SipSessionGroup: android.net.sip.SipProfile mLocalProfile> = r1;

        r0.<com.android.server.sip.SipSessionGroup: java.lang.String mPassword> = r2;

        r0.<com.android.server.sip.SipSessionGroup: com.android.server.sip.SipWakeupTimer mWakeupTimer> = r3;

        r0.<com.android.server.sip.SipSessionGroup: com.android.server.sip.SipWakeLock mWakeLock> = r4;

        virtualinvoke r0.<com.android.server.sip.SipSessionGroup: void reset()>();

        return;
    }

    static void access$1200(com.android.server.sip.SipSessionGroup, java.lang.String, java.lang.Throwable)
    {
        com.android.server.sip.SipSessionGroup r0;
        java.lang.String r1;
        java.lang.Throwable r2;

        r0 := @parameter0: com.android.server.sip.SipSessionGroup;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Throwable;

        specialinvoke r0.<com.android.server.sip.SipSessionGroup: void loge(java.lang.String,java.lang.Throwable)>(r1, r2);

        return;
    }

    static void access$1300(com.android.server.sip.SipSessionGroup, com.android.server.sip.SipSessionGroup$SipSessionImpl)
    {
        com.android.server.sip.SipSessionGroup r0;
        com.android.server.sip.SipSessionGroup$SipSessionImpl r1;

        r0 := @parameter0: com.android.server.sip.SipSessionGroup;

        r1 := @parameter1: com.android.server.sip.SipSessionGroup$SipSessionImpl;

        specialinvoke r0.<com.android.server.sip.SipSessionGroup: void removeSipSession(com.android.server.sip.SipSessionGroup$SipSessionImpl)>(r1);

        return;
    }

    static java.lang.String access$1400(com.android.server.sip.SipSessionGroup)
    {
        com.android.server.sip.SipSessionGroup r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.server.sip.SipSessionGroup;

        $r1 = r0.<com.android.server.sip.SipSessionGroup: java.lang.String mLocalIp>;

        return $r1;
    }

    static android.net.sip.SipProfile access$1500(com.android.server.sip.SipSessionGroup)
    {
        com.android.server.sip.SipSessionGroup r0;
        android.net.sip.SipProfile $r1;

        r0 := @parameter0: com.android.server.sip.SipSessionGroup;

        $r1 = r0.<com.android.server.sip.SipSessionGroup: android.net.sip.SipProfile mLocalProfile>;

        return $r1;
    }

    static java.lang.Throwable access$1700(com.android.server.sip.SipSessionGroup, java.lang.Throwable)
    {
        com.android.server.sip.SipSessionGroup r0;
        java.lang.Throwable r1, $r2;

        r0 := @parameter0: com.android.server.sip.SipSessionGroup;

        r1 := @parameter1: java.lang.Throwable;

        $r2 = specialinvoke r0.<com.android.server.sip.SipSessionGroup: java.lang.Throwable getRootCause(java.lang.Throwable)>(r1);

        return $r2;
    }

    static java.util.EventObject access$1800()
    {
        java.util.EventObject $r0;

        $r0 = <com.android.server.sip.SipSessionGroup: java.util.EventObject END_CALL>;

        return $r0;
    }

    static java.util.EventObject access$1900()
    {
        java.util.EventObject $r0;

        $r0 = <com.android.server.sip.SipSessionGroup: java.util.EventObject DEREGISTER>;

        return $r0;
    }

    static java.util.Map access$200(com.android.server.sip.SipSessionGroup)
    {
        com.android.server.sip.SipSessionGroup r0;
        java.util.Map $r1;

        r0 := @parameter0: com.android.server.sip.SipSessionGroup;

        $r1 = r0.<com.android.server.sip.SipSessionGroup: java.util.Map mSessionMap>;

        return $r1;
    }

    static boolean access$2000(java.util.EventObject)
    {
        java.util.EventObject r0;
        boolean $z0;

        r0 := @parameter0: java.util.EventObject;

        $z0 = staticinvoke <com.android.server.sip.SipSessionGroup: boolean isLoggable(java.util.EventObject)>(r0);

        return $z0;
    }

    static void access$2100(com.android.server.sip.SipSessionGroup, javax.sip.ResponseEvent)
    {
        com.android.server.sip.SipSessionGroup r0;
        javax.sip.ResponseEvent r1;

        r0 := @parameter0: com.android.server.sip.SipSessionGroup;

        r1 := @parameter1: javax.sip.ResponseEvent;

        specialinvoke r0.<com.android.server.sip.SipSessionGroup: void extractExternalAddress(javax.sip.ResponseEvent)>(r1);

        return;
    }

    static boolean access$2200(java.lang.String, java.util.EventObject)
    {
        java.lang.String r0;
        java.util.EventObject r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.EventObject;

        $z0 = staticinvoke <com.android.server.sip.SipSessionGroup: boolean expectResponse(java.lang.String,java.util.EventObject)>(r0, r1);

        return $z0;
    }

    static java.lang.String access$2300(com.android.server.sip.SipSessionGroup)
    {
        com.android.server.sip.SipSessionGroup r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.server.sip.SipSessionGroup;

        $r1 = r0.<com.android.server.sip.SipSessionGroup: java.lang.String mPassword>;

        return $r1;
    }

    static java.lang.String access$2400(com.android.server.sip.SipSessionGroup)
    {
        com.android.server.sip.SipSessionGroup r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.server.sip.SipSessionGroup;

        $r1 = r0.<com.android.server.sip.SipSessionGroup: java.lang.String mExternalIp>;

        return $r1;
    }

    static int access$2500(com.android.server.sip.SipSessionGroup)
    {
        com.android.server.sip.SipSessionGroup r0;
        int $i0;

        r0 := @parameter0: com.android.server.sip.SipSessionGroup;

        $i0 = r0.<com.android.server.sip.SipSessionGroup: int mExternalPort>;

        return $i0;
    }

    static java.lang.String access$2600(com.android.server.sip.SipSessionGroup, javax.sip.message.Message)
    {
        com.android.server.sip.SipSessionGroup r0;
        javax.sip.message.Message r1;
        java.lang.String $r2;

        r0 := @parameter0: com.android.server.sip.SipSessionGroup;

        r1 := @parameter1: javax.sip.message.Message;

        $r2 = specialinvoke r0.<com.android.server.sip.SipSessionGroup: java.lang.String extractContent(javax.sip.message.Message)>(r1);

        return $r2;
    }

    static android.net.sip.SipProfile access$2700(javax.sip.header.HeaderAddress) throws javax.sip.SipException
    {
        javax.sip.header.HeaderAddress r0;
        android.net.sip.SipProfile $r1;

        r0 := @parameter0: javax.sip.header.HeaderAddress;

        $r1 = staticinvoke <com.android.server.sip.SipSessionGroup: android.net.sip.SipProfile createPeerProfile(javax.sip.header.HeaderAddress)>(r0);

        return $r1;
    }

    static com.android.server.sip.SipWakeupTimer access$2800(com.android.server.sip.SipSessionGroup)
    {
        com.android.server.sip.SipSessionGroup r0;
        com.android.server.sip.SipWakeupTimer $r1;

        r0 := @parameter0: com.android.server.sip.SipSessionGroup;

        $r1 = r0.<com.android.server.sip.SipSessionGroup: com.android.server.sip.SipWakeupTimer mWakeupTimer>;

        return $r1;
    }

    static com.android.server.sip.SipHelper access$300(com.android.server.sip.SipSessionGroup)
    {
        com.android.server.sip.SipSessionGroup r0;
        com.android.server.sip.SipHelper $r1;

        r0 := @parameter0: com.android.server.sip.SipSessionGroup;

        $r1 = r0.<com.android.server.sip.SipSessionGroup: com.android.server.sip.SipHelper mSipHelper>;

        return $r1;
    }

    static com.android.server.sip.SipSessionGroup$SipSessionImpl access$400(com.android.server.sip.SipSessionGroup, javax.sip.RequestEvent, android.net.sip.ISipSessionListener, javax.sip.ServerTransaction, int) throws javax.sip.SipException
    {
        com.android.server.sip.SipSessionGroup r0;
        javax.sip.RequestEvent r1;
        android.net.sip.ISipSessionListener r2;
        javax.sip.ServerTransaction r3;
        int i0;
        com.android.server.sip.SipSessionGroup$SipSessionImpl $r4;

        r0 := @parameter0: com.android.server.sip.SipSessionGroup;

        r1 := @parameter1: javax.sip.RequestEvent;

        r2 := @parameter2: android.net.sip.ISipSessionListener;

        r3 := @parameter3: javax.sip.ServerTransaction;

        i0 := @parameter4: int;

        $r4 = specialinvoke r0.<com.android.server.sip.SipSessionGroup: com.android.server.sip.SipSessionGroup$SipSessionImpl createNewSession(javax.sip.RequestEvent,android.net.sip.ISipSessionListener,javax.sip.ServerTransaction,int)>(r1, r2, r3, i0);

        return $r4;
    }

    static void access$500(com.android.server.sip.SipSessionGroup, com.android.server.sip.SipSessionGroup$SipSessionImpl)
    {
        com.android.server.sip.SipSessionGroup r0;
        com.android.server.sip.SipSessionGroup$SipSessionImpl r1;

        r0 := @parameter0: com.android.server.sip.SipSessionGroup;

        r1 := @parameter1: com.android.server.sip.SipSessionGroup$SipSessionImpl;

        specialinvoke r0.<com.android.server.sip.SipSessionGroup: void addSipSession(com.android.server.sip.SipSessionGroup$SipSessionImpl)>(r1);

        return;
    }

    static boolean access$600(com.android.server.sip.SipSessionGroup$SipSessionImpl, java.util.EventObject)
    {
        com.android.server.sip.SipSessionGroup$SipSessionImpl r0;
        java.util.EventObject r1;
        boolean $z0;

        r0 := @parameter0: com.android.server.sip.SipSessionGroup$SipSessionImpl;

        r1 := @parameter1: java.util.EventObject;

        $z0 = staticinvoke <com.android.server.sip.SipSessionGroup: boolean isLoggable(com.android.server.sip.SipSessionGroup$SipSessionImpl,java.util.EventObject)>(r0, r1);

        return $z0;
    }

    static java.lang.String access$700(java.util.EventObject)
    {
        java.util.EventObject r0;
        java.lang.String $r1;

        r0 := @parameter0: java.util.EventObject;

        $r1 = staticinvoke <com.android.server.sip.SipSessionGroup: java.lang.String logEvt(java.util.EventObject)>(r0);

        return $r1;
    }

    static boolean access$800(java.lang.String, java.util.EventObject)
    {
        java.lang.String r0;
        java.util.EventObject r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.EventObject;

        $z0 = staticinvoke <com.android.server.sip.SipSessionGroup: boolean isRequestEvent(java.lang.String,java.util.EventObject)>(r0, r1);

        return $z0;
    }

    private void addSipSession(com.android.server.sip.SipSessionGroup$SipSessionImpl)
    {
        com.android.server.sip.SipSessionGroup r0;
        java.util.Map $r1, $r3;
        boolean $z0, $z1;
        java.util.Set $r4;
        java.lang.Object $r5;
        java.lang.Throwable $r6;
        com.android.server.sip.SipSessionGroup$SipSessionImpl r7;
        java.lang.String r8, r10;
        java.util.Iterator r9;

        r0 := @this: com.android.server.sip.SipSessionGroup;

        r7 := @parameter0: com.android.server.sip.SipSessionGroup$SipSessionImpl;

        entermonitor r0;

     label1:
        specialinvoke r0.<com.android.server.sip.SipSessionGroup: void removeSipSession(com.android.server.sip.SipSessionGroup$SipSessionImpl)>(r7);

        r8 = virtualinvoke r7.<com.android.server.sip.SipSessionGroup$SipSessionImpl: java.lang.String getCallId()>();

        $r1 = r0.<com.android.server.sip.SipSessionGroup: java.util.Map mSessionMap>;

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, r7);

        $z0 = staticinvoke <com.android.server.sip.SipSessionGroup: boolean isLoggable(com.android.server.sip.SipSessionGroup$SipSessionImpl)>(r7);

        if $z0 == 0 goto label4;

        $r3 = r0.<com.android.server.sip.SipSessionGroup: java.util.Map mSessionMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set keySet()>();

        r9 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r5 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.String) $r5;

     label3:
        goto label2;

     label4:
        exitmonitor r0;

        return;

     label5:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
    }

    private com.android.server.sip.SipSessionGroup$SipSessionImpl createNewSession(javax.sip.RequestEvent, android.net.sip.ISipSessionListener, javax.sip.ServerTransaction, int) throws javax.sip.SipException
    {
        com.android.server.sip.SipSessionGroup r0;
        javax.sip.RequestEvent r1;
        javax.sip.ServerTransaction r2, $r4;
        int i0;
        com.android.server.sip.SipSessionGroup$SipSessionImpl $r3;
        javax.sip.Dialog $r5;
        javax.sip.message.Request $r6, $r10;
        javax.sip.header.Header $r7;
        javax.sip.header.HeaderAddress $r8;
        android.net.sip.SipProfile $r9;
        java.lang.String $r11;
        android.net.sip.ISipSessionListener r12;

        r0 := @this: com.android.server.sip.SipSessionGroup;

        r1 := @parameter0: javax.sip.RequestEvent;

        r12 := @parameter1: android.net.sip.ISipSessionListener;

        r2 := @parameter2: javax.sip.ServerTransaction;

        i0 := @parameter3: int;

        $r3 = new com.android.server.sip.SipSessionGroup$SipSessionImpl;

        specialinvoke $r3.<com.android.server.sip.SipSessionGroup$SipSessionImpl: void <init>(com.android.server.sip.SipSessionGroup,android.net.sip.ISipSessionListener)>(r0, r12);

        $r3.<com.android.server.sip.SipSessionGroup$SipSessionImpl: javax.sip.ServerTransaction mServerTransaction> = r2;

        $r3.<com.android.server.sip.SipSessionGroup$SipSessionImpl: int mState> = i0;

        $r4 = $r3.<com.android.server.sip.SipSessionGroup$SipSessionImpl: javax.sip.ServerTransaction mServerTransaction>;

        $r5 = interfaceinvoke $r4.<javax.sip.ServerTransaction: javax.sip.Dialog getDialog()>();

        $r3.<com.android.server.sip.SipSessionGroup$SipSessionImpl: javax.sip.Dialog mDialog> = $r5;

        $r3.<com.android.server.sip.SipSessionGroup$SipSessionImpl: javax.sip.RequestEvent mInviteReceived> = r1;

        $r6 = virtualinvoke r1.<javax.sip.RequestEvent: javax.sip.message.Request getRequest()>();

        $r7 = interfaceinvoke $r6.<javax.sip.message.Request: javax.sip.header.Header getHeader(java.lang.String)>("From");

        $r8 = (javax.sip.header.HeaderAddress) $r7;

        $r9 = staticinvoke <com.android.server.sip.SipSessionGroup: android.net.sip.SipProfile createPeerProfile(javax.sip.header.HeaderAddress)>($r8);

        $r3.<com.android.server.sip.SipSessionGroup$SipSessionImpl: android.net.sip.SipProfile mPeerProfile> = $r9;

        $r10 = virtualinvoke r1.<javax.sip.RequestEvent: javax.sip.message.Request getRequest()>();

        $r11 = specialinvoke r0.<com.android.server.sip.SipSessionGroup: java.lang.String extractContent(javax.sip.message.Message)>($r10);

        $r3.<com.android.server.sip.SipSessionGroup$SipSessionImpl: java.lang.String mPeerSessionDescription> = $r11;

        return $r3;
    }

    private static android.net.sip.SipProfile createPeerProfile(javax.sip.header.HeaderAddress) throws javax.sip.SipException
    {
        javax.sip.address.Address r0;
        javax.sip.address.SipURI r1;
        int i0;
        javax.sip.address.URI $r2;
        java.lang.String $r3, $r4, r11, r12;
        java.lang.Throwable $r6, $r8;
        javax.sip.SipException $r7, $r9;
        javax.sip.header.HeaderAddress r10;
        android.net.sip.SipProfile$Builder r13, r14;
        android.net.sip.SipProfile r15;

        r10 := @parameter0: javax.sip.header.HeaderAddress;

     label1:
        r0 = interfaceinvoke r10.<javax.sip.header.HeaderAddress: javax.sip.address.Address getAddress()>();

        $r2 = interfaceinvoke r0.<javax.sip.address.Address: javax.sip.address.URI getURI()>();

        r1 = (javax.sip.address.SipURI) $r2;

        r11 = interfaceinvoke r1.<javax.sip.address.SipURI: java.lang.String getUser()>();

     label2:
        r12 = r11;

        if r11 != null goto label3;

        r12 = "anonymous";

     label3:
        i0 = interfaceinvoke r1.<javax.sip.address.SipURI: int getPort()>();

        r13 = new android.net.sip.SipProfile$Builder;

        $r3 = interfaceinvoke r1.<javax.sip.address.SipURI: java.lang.String getHost()>();

        specialinvoke r13.<android.net.sip.SipProfile$Builder: void <init>(java.lang.String,java.lang.String)>(r12, $r3);

        $r4 = interfaceinvoke r0.<javax.sip.address.Address: java.lang.String getDisplayName()>();

        r14 = virtualinvoke r13.<android.net.sip.SipProfile$Builder: android.net.sip.SipProfile$Builder setDisplayName(java.lang.String)>($r4);

     label4:
        if i0 <= 0 goto label6;

     label5:
        virtualinvoke r14.<android.net.sip.SipProfile$Builder: android.net.sip.SipProfile$Builder setPort(int)>(i0);

     label6:
        r15 = virtualinvoke r14.<android.net.sip.SipProfile$Builder: android.net.sip.SipProfile build()>();

     label7:
        return r15;

     label8:
        $r6 := @caughtexception;

        $r7 = new javax.sip.SipException;

        specialinvoke $r7.<javax.sip.SipException: void <init>(java.lang.String,java.lang.Throwable)>("createPeerProfile()", $r6);

        throw $r7;

     label9:
        $r8 := @caughtexception;

        $r9 = new javax.sip.SipException;

        specialinvoke $r9.<javax.sip.SipException: void <init>(java.lang.String,java.lang.Throwable)>("createPeerProfile()", $r8);

        throw $r9;

        catch java.lang.IllegalArgumentException from label1 to label2 with label9;
        catch java.text.ParseException from label1 to label2 with label8;
        catch java.lang.IllegalArgumentException from label3 to label4 with label9;
        catch java.text.ParseException from label3 to label4 with label8;
        catch java.lang.IllegalArgumentException from label5 to label6 with label9;
        catch java.text.ParseException from label5 to label6 with label8;
        catch java.lang.IllegalArgumentException from label6 to label7 with label9;
        catch java.text.ParseException from label6 to label7 with label8;
    }

    private static boolean expectResponse(java.lang.String, java.util.EventObject)
    {
        java.lang.String r0, $r4;
        java.util.EventObject r1;
        boolean $z0, $z1;
        javax.sip.ResponseEvent $r2;
        javax.sip.message.Response $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.EventObject;

        $z0 = r1 instanceof javax.sip.ResponseEvent;

        if $z0 == 0 goto label1;

        $r2 = (javax.sip.ResponseEvent) r1;

        $r3 = virtualinvoke $r2.<javax.sip.ResponseEvent: javax.sip.message.Response getResponse()>();

        $r4 = staticinvoke <com.android.server.sip.SipSessionGroup: java.lang.String getCseqMethod(javax.sip.message.Message)>($r3);

        $z1 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4);

        return $z1;

     label1:
        return 0;
    }

    private java.lang.String extractContent(javax.sip.message.Message)
    {
        com.android.server.sip.SipSessionGroup r0;
        byte[] r1;
        boolean $z0;
        java.lang.String $r2, $r4;
        gov.nist.javax.sip.message.SIPMessage $r3;
        java.lang.Throwable $r5;
        javax.sip.message.Message r6;

        r0 := @this: com.android.server.sip.SipSessionGroup;

        r6 := @parameter0: javax.sip.message.Message;

        r1 = interfaceinvoke r6.<javax.sip.message.Message: byte[] getRawContent()>();

        if r1 == null goto label5;

     label1:
        $z0 = r6 instanceof gov.nist.javax.sip.message.SIPMessage;

        if $z0 == 0 goto label2;

        $r3 = (gov.nist.javax.sip.message.SIPMessage) r6;

        $r4 = virtualinvoke $r3.<gov.nist.javax.sip.message.SIPMessage: java.lang.String getMessageContent()>();

        return $r4;

     label2:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.lang.String)>(r1, "UTF-8");

     label3:
        return $r2;

     label4:
        $r5 := @caughtexception;

     label5:
        return null;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label4;
        catch java.io.UnsupportedEncodingException from label2 to label3 with label4;
    }

    private void extractExternalAddress(javax.sip.ResponseEvent)
    {
        com.android.server.sip.SipSessionGroup r0;
        int i0;
        javax.sip.message.Response $r1;
        javax.sip.header.Header $r2;
        javax.sip.ResponseEvent r3;
        javax.sip.header.ViaHeader r4;
        java.lang.String r5;

        r0 := @this: com.android.server.sip.SipSessionGroup;

        r3 := @parameter0: javax.sip.ResponseEvent;

        $r1 = virtualinvoke r3.<javax.sip.ResponseEvent: javax.sip.message.Response getResponse()>();

        $r2 = interfaceinvoke $r1.<javax.sip.message.Response: javax.sip.header.Header getHeader(java.lang.String)>("Via");

        r4 = (javax.sip.header.ViaHeader) $r2;

        if r4 != null goto label1;

        return;

     label1:
        i0 = interfaceinvoke r4.<javax.sip.header.ViaHeader: int getRPort()>();

        r5 = interfaceinvoke r4.<javax.sip.header.ViaHeader: java.lang.String getReceived()>();

        if i0 <= 0 goto label2;

        if r5 == null goto label2;

        r0.<com.android.server.sip.SipSessionGroup: java.lang.String mExternalIp> = r5;

        r0.<com.android.server.sip.SipSessionGroup: int mExternalPort> = i0;

     label2:
        return;
    }

    private static java.lang.String getCseqMethod(javax.sip.message.Message)
    {
        javax.sip.message.Message r0;
        javax.sip.header.Header $r1;
        javax.sip.header.CSeqHeader $r2;
        java.lang.String $r3;

        r0 := @parameter0: javax.sip.message.Message;

        $r1 = interfaceinvoke r0.<javax.sip.message.Message: javax.sip.header.Header getHeader(java.lang.String)>("CSeq");

        $r2 = (javax.sip.header.CSeqHeader) $r1;

        $r3 = interfaceinvoke $r2.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        return $r3;
    }

    private java.lang.Throwable getRootCause(java.lang.Throwable)
    {
        com.android.server.sip.SipSessionGroup r0;
        java.lang.Throwable r1, r2, r3, r4;

        r0 := @this: com.android.server.sip.SipSessionGroup;

        r2 := @parameter0: java.lang.Throwable;

        r1 = virtualinvoke r2.<java.lang.Throwable: java.lang.Throwable getCause()>();

        r3 = r2;

        r4 = r1;

     label1:
        if r4 == null goto label2;

        r3 = r4;

        r4 = virtualinvoke r4.<java.lang.Throwable: java.lang.Throwable getCause()>();

        goto label1;

     label2:
        return r3;
    }

    private com.android.server.sip.SipSessionGroup$SipSessionImpl getSipSession(java.util.EventObject)
    {
        com.android.server.sip.SipSessionGroup r0;
        java.util.Iterator r1;
        java.lang.String r2, r10;
        java.util.Map $r3, $r5;
        java.lang.Object $r4, $r7;
        boolean $z0, $z1;
        java.util.Set $r6;
        java.lang.Throwable $r8;
        java.util.EventObject r9;
        com.android.server.sip.SipSessionGroup$SipSessionImpl r11;

        r0 := @this: com.android.server.sip.SipSessionGroup;

        r9 := @parameter0: java.util.EventObject;

        entermonitor r0;

     label1:
        r10 = staticinvoke <com.android.server.sip.SipHelper: java.lang.String getCallId(java.util.EventObject)>(r9);

        $r3 = r0.<com.android.server.sip.SipSessionGroup: java.util.Map mSessionMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10);

        r11 = (com.android.server.sip.SipSessionGroup$SipSessionImpl) $r4;

     label2:
        if r11 == null goto label6;

     label3:
        $z0 = staticinvoke <com.android.server.sip.SipSessionGroup: boolean isLoggable(com.android.server.sip.SipSessionGroup$SipSessionImpl)>(r11);

        if $z0 == 0 goto label6;

        $r5 = r0.<com.android.server.sip.SipSessionGroup: java.util.Map mSessionMap>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set keySet()>();

        r1 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r7 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.lang.String) $r7;

     label5:
        goto label4;

     label6:
        if r11 == null goto label7;

        goto label8;

     label7:
        r11 = r0.<com.android.server.sip.SipSessionGroup: com.android.server.sip.SipSessionGroup$SipSessionImpl mCallReceiverSession>;

     label8:
        exitmonitor r0;

        return r11;

     label9:
        $r8 := @caughtexception;

        exitmonitor r0;

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label4 to label5 with label9;
        catch java.lang.Throwable from label7 to label8 with label9;
    }

    private java.lang.String getStackName()
    {
        com.android.server.sip.SipSessionGroup r0;
        java.lang.StringBuilder $r2;
        long $l0;
        java.lang.String $r5;

        r0 := @this: com.android.server.sip.SipSessionGroup;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stack");

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    private static boolean isLoggable(com.android.server.sip.SipSessionGroup$SipSessionImpl)
    {
        com.android.server.sip.SipSessionGroup$SipSessionImpl r0;
        int i0;

        r0 := @parameter0: com.android.server.sip.SipSessionGroup$SipSessionImpl;

        if r0 == null goto label1;

        i0 = r0.<com.android.server.sip.SipSessionGroup$SipSessionImpl: int mState>;

     label1:
        return 0;
    }

    private static boolean isLoggable(com.android.server.sip.SipSessionGroup$SipSessionImpl, java.util.EventObject)
    {
        com.android.server.sip.SipSessionGroup$SipSessionImpl r0;
        java.util.EventObject r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        javax.sip.ResponseEvent $r2;
        java.lang.String $r3;
        javax.sip.message.Response $r4;
        javax.sip.header.Header $r5;

        r0 := @parameter0: com.android.server.sip.SipSessionGroup$SipSessionImpl;

        r1 := @parameter1: java.util.EventObject;

        $z0 = staticinvoke <com.android.server.sip.SipSessionGroup: boolean isLoggable(com.android.server.sip.SipSessionGroup$SipSessionImpl)>(r0);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $z1 = r1 instanceof javax.sip.ResponseEvent;

        if $z1 == 0 goto label4;

        $r3 = "OPTIONS";

        $r2 = (javax.sip.ResponseEvent) r1;

        $r4 = virtualinvoke $r2.<javax.sip.ResponseEvent: javax.sip.message.Response getResponse()>();

        $r5 = interfaceinvoke $r4.<javax.sip.message.Response: javax.sip.header.Header getHeader(java.lang.String)>("CSeq");

        $z4 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z4 == 0 goto label3;

        return 0;

     label3:
        return 0;

     label4:
        $z2 = r1 instanceof javax.sip.RequestEvent;

        if $z2 == 0 goto label6;

        $z3 = staticinvoke <com.android.server.sip.SipSessionGroup: boolean isRequestEvent(java.lang.String,java.util.EventObject)>("OPTIONS", r1);

        if $z3 == 0 goto label5;

        return 0;

     label5:
        return 0;

     label6:
        return 0;
    }

    private static boolean isLoggable(java.util.EventObject)
    {
        java.util.EventObject r0;
        boolean $z0;

        r0 := @parameter0: java.util.EventObject;

        $z0 = staticinvoke <com.android.server.sip.SipSessionGroup: boolean isLoggable(com.android.server.sip.SipSessionGroup$SipSessionImpl,java.util.EventObject)>(null, r0);

        return $z0;
    }

    private static boolean isRequestEvent(java.lang.String, java.util.EventObject)
    {
        java.util.EventObject r0;
        boolean z0, $z1;
        javax.sip.RequestEvent $r1;
        javax.sip.message.Request $r2;
        java.lang.String $r3, r5;
        java.lang.Throwable $r4;

        r5 := @parameter0: java.lang.String;

        r0 := @parameter1: java.util.EventObject;

     label1:
        $z1 = r0 instanceof javax.sip.RequestEvent;

        if $z1 == 0 goto label3;

        $r1 = (javax.sip.RequestEvent) r0;

        $r2 = virtualinvoke $r1.<javax.sip.RequestEvent: javax.sip.message.Request getRequest()>();

        $r3 = interfaceinvoke $r2.<javax.sip.message.Request: java.lang.String getMethod()>();

        z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r3);

     label2:
        return z0;

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

     label5:
        return 0;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    private void log(java.lang.String)
    {
        com.android.server.sip.SipSessionGroup r0;
        java.lang.String r1;

        r0 := @this: com.android.server.sip.SipSessionGroup;

        r1 := @parameter0: java.lang.String;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("SipSession", r1);

        return;
    }

    private static java.lang.String logEvt(java.util.EventObject)
    {
        java.util.EventObject r0;
        boolean $z0, $z1;
        java.lang.String $r1, $r4, $r7;
        javax.sip.ResponseEvent $r2;
        javax.sip.message.Response $r3;
        javax.sip.RequestEvent $r5;
        javax.sip.message.Request $r6;

        r0 := @parameter0: java.util.EventObject;

        $z0 = r0 instanceof javax.sip.RequestEvent;

        if $z0 == 0 goto label1;

        $r5 = (javax.sip.RequestEvent) r0;

        $r6 = virtualinvoke $r5.<javax.sip.RequestEvent: javax.sip.message.Request getRequest()>();

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        return $r7;

     label1:
        $z1 = r0 instanceof javax.sip.ResponseEvent;

        if $z1 == 0 goto label2;

        $r2 = (javax.sip.ResponseEvent) r0;

        $r3 = virtualinvoke $r2.<javax.sip.ResponseEvent: javax.sip.message.Response getResponse()>();

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        return $r4;

     label2:
        $r1 = virtualinvoke r0.<java.util.EventObject: java.lang.String toString()>();

        return $r1;
    }

    private void loge(java.lang.String, java.lang.Throwable)
    {
        com.android.server.sip.SipSessionGroup r0;
        java.lang.String r1;
        java.lang.Throwable r2;

        r0 := @this: com.android.server.sip.SipSessionGroup;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SipSession", r1, r2);

        return;
    }

    private void process(java.util.EventObject)
    {
        com.android.server.sip.SipSessionGroup r0;
        com.android.server.sip.SipSessionGroup$SipSessionImpl r1;
        boolean z0, $z1, z2;
        java.lang.StringBuilder r2, r14;
        int $i0;
        java.lang.String $r4, $r6, $r10;
        java.lang.Throwable $r7, $r11, $r12;
        java.util.EventObject r13;

        r0 := @this: com.android.server.sip.SipSessionGroup;

        r13 := @parameter0: java.util.EventObject;

        entermonitor r0;

     label01:
        r1 = specialinvoke r0.<com.android.server.sip.SipSessionGroup: com.android.server.sip.SipSessionGroup$SipSessionImpl getSipSession(java.util.EventObject)>(r13);

     label02:
        z0 = staticinvoke <com.android.server.sip.SipSessionGroup: boolean isLoggable(com.android.server.sip.SipSessionGroup$SipSessionImpl,java.util.EventObject)>(r1, r13);

     label03:
        if r1 == null goto label06;

     label04:
        $z1 = virtualinvoke r1.<com.android.server.sip.SipSessionGroup$SipSessionImpl: boolean process(java.util.EventObject)>(r13);

        if $z1 == 0 goto label06;

     label05:
        z2 = 1;

        goto label07;

     label06:
        z2 = 0;

     label07:
        if z0 == 0 goto label09;

        if z2 == 0 goto label09;

     label08:
        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("process: event new state after: ");

        $i0 = r1.<com.android.server.sip.SipSessionGroup$SipSessionImpl: int mState>;

        $r4 = staticinvoke <android.net.sip.SipSession$State: java.lang.String toString(int)>($i0);

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.sip.SipSessionGroup: void log(java.lang.String)>($r6);

     label09:
        goto label12;

     label10:
        $r7 := @caughtexception;

     label11:
        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("process: error event=");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r13);

        $r10 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = specialinvoke r0.<com.android.server.sip.SipSessionGroup: java.lang.Throwable getRootCause(java.lang.Throwable)>($r7);

        specialinvoke r0.<com.android.server.sip.SipSessionGroup: void loge(java.lang.String,java.lang.Throwable)>($r10, $r11);

        staticinvoke <com.android.server.sip.SipSessionGroup$SipSessionImpl: void access$100(com.android.server.sip.SipSessionGroup$SipSessionImpl,java.lang.Throwable)>(r1, $r7);

     label12:
        exitmonitor r0;

        return;

     label13:
        $r12 := @caughtexception;

        exitmonitor r0;

        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    private void removeSipSession(com.android.server.sip.SipSessionGroup$SipSessionImpl)
    {
        com.android.server.sip.SipSessionGroup r0;
        java.util.Map $r1, $r3, $r6, $r8, $r13;
        java.lang.Object $r2, $r5, $r10, $r11, $r12;
        boolean $z0, $z1, $z2;
        java.util.Set $r4, $r9;
        java.lang.Throwable $r15;
        com.android.server.sip.SipSessionGroup$SipSessionImpl r16, r17, r19;
        java.lang.String r18, r22, r24;
        java.util.Iterator r20, r23;
        java.util.Map$Entry r21;

        r0 := @this: com.android.server.sip.SipSessionGroup;

        r16 := @parameter0: com.android.server.sip.SipSessionGroup$SipSessionImpl;

        entermonitor r0;

     label01:
        r17 = r0.<com.android.server.sip.SipSessionGroup: com.android.server.sip.SipSessionGroup$SipSessionImpl mCallReceiverSession>;

     label02:
        if r16 != r17 goto label03;

        exitmonitor r0;

        return;

     label03:
        r18 = virtualinvoke r16.<com.android.server.sip.SipSessionGroup$SipSessionImpl: java.lang.String getCallId()>();

        $r1 = r0.<com.android.server.sip.SipSessionGroup: java.util.Map mSessionMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r18);

        r19 = (com.android.server.sip.SipSessionGroup$SipSessionImpl) $r2;

     label04:
        if r19 == null goto label08;

        if r19 == r16 goto label08;

     label05:
        $r6 = r0.<com.android.server.sip.SipSessionGroup: java.util.Map mSessionMap>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r18, r19);

        $r8 = r0.<com.android.server.sip.SipSessionGroup: java.util.Map mSessionMap>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Set entrySet()>();

        r20 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z2 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label08;

        $r10 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();

        r21 = (java.util.Map$Entry) $r10;

        $r11 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r11 != r19 goto label07;

        $r12 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getKey()>();

        r22 = (java.lang.String) $r12;

        $r13 = r0.<com.android.server.sip.SipSessionGroup: java.util.Map mSessionMap>;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r22);

     label07:
        goto label06;

     label08:
        if r19 == null goto label12;

     label09:
        $z0 = staticinvoke <com.android.server.sip.SipSessionGroup: boolean isLoggable(com.android.server.sip.SipSessionGroup$SipSessionImpl)>(r19);

        if $z0 == 0 goto label12;

        $r3 = r0.<com.android.server.sip.SipSessionGroup: java.util.Map mSessionMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set keySet()>();

        r23 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label10:
        $z1 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label12;

        $r5 = interfaceinvoke r23.<java.util.Iterator: java.lang.Object next()>();

        r24 = (java.lang.String) $r5;

     label11:
        goto label10;

     label12:
        exitmonitor r0;

        return;

     label13:
        $r15 := @caughtexception;

        exitmonitor r0;

        throw $r15;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }

    public void close()
    {
        com.android.server.sip.SipSessionGroup r0;
        java.util.Map $r2;
        javax.sip.SipStack $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.sip.SipSessionGroup;

        entermonitor r0;

     label1:
        virtualinvoke r0.<com.android.server.sip.SipSessionGroup: void onConnectivityChanged()>();

        $r2 = r0.<com.android.server.sip.SipSessionGroup: java.util.Map mSessionMap>;

        interfaceinvoke $r2.<java.util.Map: void clear()>();

        virtualinvoke r0.<com.android.server.sip.SipSessionGroup: void closeToNotReceiveCalls()>();

        $r3 = r0.<com.android.server.sip.SipSessionGroup: javax.sip.SipStack mSipStack>;

        if $r3 == null goto label2;

        $r4 = r0.<com.android.server.sip.SipSessionGroup: javax.sip.SipStack mSipStack>;

        interfaceinvoke $r4.<javax.sip.SipStack: void stop()>();

        r0.<com.android.server.sip.SipSessionGroup: javax.sip.SipStack mSipStack> = null;

        r0.<com.android.server.sip.SipSessionGroup: com.android.server.sip.SipHelper mSipHelper> = null;

     label2:
        virtualinvoke r0.<com.android.server.sip.SipSessionGroup: void resetExternalAddress()>();

     label3:
        exitmonitor r0;

        return;

     label4:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public void closeToNotReceiveCalls()
    {
        com.android.server.sip.SipSessionGroup r0;
        java.lang.Throwable $r2;

        r0 := @this: com.android.server.sip.SipSessionGroup;

        entermonitor r0;

     label1:
        r0.<com.android.server.sip.SipSessionGroup: com.android.server.sip.SipSessionGroup$SipSessionImpl mCallReceiverSession> = null;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    boolean containsSession(java.lang.String)
    {
        com.android.server.sip.SipSessionGroup r0;
        boolean z0;
        java.util.Map $r1;
        java.lang.Throwable $r2;
        java.lang.String r3;

        r0 := @this: com.android.server.sip.SipSessionGroup;

        r3 := @parameter0: java.lang.String;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.server.sip.SipSessionGroup: java.util.Map mSessionMap>;

        z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>(r3);

     label2:
        exitmonitor r0;

        return z0;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.net.sip.ISipSession createSession(android.net.sip.ISipSessionListener)
    {
        com.android.server.sip.SipSessionGroup r0;
        boolean $z0;
        com.android.server.sip.SipSessionGroup$SipSessionImpl $r1, r3;
        android.net.sip.ISipSessionListener r2;

        r0 := @this: com.android.server.sip.SipSessionGroup;

        r2 := @parameter0: android.net.sip.ISipSessionListener;

        $z0 = virtualinvoke r0.<com.android.server.sip.SipSessionGroup: boolean isClosed()>();

        if $z0 == 0 goto label1;

        r3 = null;

        goto label2;

     label1:
        $r1 = new com.android.server.sip.SipSessionGroup$SipSessionImpl;

        specialinvoke $r1.<com.android.server.sip.SipSessionGroup$SipSessionImpl: void <init>(com.android.server.sip.SipSessionGroup,android.net.sip.ISipSessionListener)>(r0, r2);

        r3 = $r1;

     label2:
        return r3;
    }

    public android.net.sip.SipProfile getLocalProfile()
    {
        com.android.server.sip.SipSessionGroup r0;
        android.net.sip.SipProfile $r1;

        r0 := @this: com.android.server.sip.SipSessionGroup;

        $r1 = r0.<com.android.server.sip.SipSessionGroup: android.net.sip.SipProfile mLocalProfile>;

        return $r1;
    }

    public java.lang.String getLocalProfileUri()
    {
        com.android.server.sip.SipSessionGroup r0;
        android.net.sip.SipProfile $r1;
        java.lang.String $r2;

        r0 := @this: com.android.server.sip.SipSessionGroup;

        $r1 = r0.<com.android.server.sip.SipSessionGroup: android.net.sip.SipProfile mLocalProfile>;

        $r2 = virtualinvoke $r1.<android.net.sip.SipProfile: java.lang.String getUriString()>();

        return $r2;
    }

    public boolean isClosed()
    {
        com.android.server.sip.SipSessionGroup r0;
        java.lang.Throwable $r1;
        javax.sip.SipStack r2;
        boolean z0;

        r0 := @this: com.android.server.sip.SipSessionGroup;

        entermonitor r0;

     label1:
        r2 = r0.<com.android.server.sip.SipSessionGroup: javax.sip.SipStack mSipStack>;

     label2:
        if r2 != null goto label3;

        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        exitmonitor r0;

        return z0;

     label5:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    void onConnectivityChanged()
    {
        com.android.server.sip.SipSessionGroup r0;
        int i0, $i1, i2;
        java.util.Map $r1, $r3;
        java.util.Collection $r2;
        com.android.server.sip.SipSessionGroup$SipSessionImpl[] $r4, r8;
        java.lang.Object[] $r5;
        com.android.server.sip.SipSessionGroup$SipSessionImpl $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.server.sip.SipSessionGroup;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.server.sip.SipSessionGroup: java.util.Map mSessionMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = r0.<com.android.server.sip.SipSessionGroup: java.util.Map mSessionMap>;

        $i1 = interfaceinvoke $r3.<java.util.Map: int size()>();

        $r4 = newarray (com.android.server.sip.SipSessionGroup$SipSessionImpl)[$i1];

        $r5 = interfaceinvoke $r2.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        r8 = (com.android.server.sip.SipSessionGroup$SipSessionImpl[]) $r5;

        i0 = lengthof r8;

     label2:
        i2 = 0;

     label3:
        if i2 >= i0 goto label6;

     label4:
        $r6 = r8[i2];

        staticinvoke <com.android.server.sip.SipSessionGroup$SipSessionImpl: void access$000(com.android.server.sip.SipSessionGroup$SipSessionImpl,int,java.lang.String)>($r6, -10, "data connection lost");

     label5:
        i2 = i2 + 1;

        goto label3;

     label6:
        exitmonitor r0;

        return;

     label7:
        $r7 := @caughtexception;

        exitmonitor r0;

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public void openToReceiveCalls(android.net.sip.ISipSessionListener)
    {
        com.android.server.sip.SipSessionGroup r0;
        com.android.server.sip.SipSessionGroup$SipSessionCallReceiverImpl r1;
        com.android.server.sip.SipSessionGroup$SipSessionImpl $r2, $r3;
        java.lang.Throwable $r4;
        android.net.sip.ISipSessionListener r5;

        r0 := @this: com.android.server.sip.SipSessionGroup;

        r5 := @parameter0: android.net.sip.ISipSessionListener;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.sip.SipSessionGroup: com.android.server.sip.SipSessionGroup$SipSessionImpl mCallReceiverSession>;

        if $r2 != null goto label3;

        r1 = new com.android.server.sip.SipSessionGroup$SipSessionCallReceiverImpl;

        specialinvoke r1.<com.android.server.sip.SipSessionGroup$SipSessionCallReceiverImpl: void <init>(com.android.server.sip.SipSessionGroup,android.net.sip.ISipSessionListener)>(r0, r5);

        r0.<com.android.server.sip.SipSessionGroup: com.android.server.sip.SipSessionGroup$SipSessionImpl mCallReceiverSession> = r1;

     label2:
        goto label4;

     label3:
        $r3 = r0.<com.android.server.sip.SipSessionGroup: com.android.server.sip.SipSessionGroup$SipSessionImpl mCallReceiverSession>;

        virtualinvoke $r3.<com.android.server.sip.SipSessionGroup$SipSessionImpl: void setListener(android.net.sip.ISipSessionListener)>(r5);

     label4:
        exitmonitor r0;

        return;

     label5:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void processDialogTerminated(javax.sip.DialogTerminatedEvent)
    {
        com.android.server.sip.SipSessionGroup r0;
        javax.sip.DialogTerminatedEvent r1;

        r0 := @this: com.android.server.sip.SipSessionGroup;

        r1 := @parameter0: javax.sip.DialogTerminatedEvent;

        specialinvoke r0.<com.android.server.sip.SipSessionGroup: void process(java.util.EventObject)>(r1);

        return;
    }

    public void processIOException(javax.sip.IOExceptionEvent)
    {
        com.android.server.sip.SipSessionGroup r0;
        javax.sip.IOExceptionEvent r1;

        r0 := @this: com.android.server.sip.SipSessionGroup;

        r1 := @parameter0: javax.sip.IOExceptionEvent;

        specialinvoke r0.<com.android.server.sip.SipSessionGroup: void process(java.util.EventObject)>(r1);

        return;
    }

    public void processRequest(javax.sip.RequestEvent)
    {
        com.android.server.sip.SipSessionGroup r0;
        javax.sip.RequestEvent r1;
        boolean $z0;
        com.android.server.sip.SipWakeLock $r2;

        r0 := @this: com.android.server.sip.SipSessionGroup;

        r1 := @parameter0: javax.sip.RequestEvent;

        $z0 = staticinvoke <com.android.server.sip.SipSessionGroup: boolean isRequestEvent(java.lang.String,java.util.EventObject)>("INVITE", r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.server.sip.SipSessionGroup: com.android.server.sip.SipWakeLock mWakeLock>;

        virtualinvoke $r2.<com.android.server.sip.SipWakeLock: void acquire(long)>(500L);

     label1:
        specialinvoke r0.<com.android.server.sip.SipSessionGroup: void process(java.util.EventObject)>(r1);

        return;
    }

    public void processResponse(javax.sip.ResponseEvent)
    {
        com.android.server.sip.SipSessionGroup r0;
        javax.sip.ResponseEvent r1;

        r0 := @this: com.android.server.sip.SipSessionGroup;

        r1 := @parameter0: javax.sip.ResponseEvent;

        specialinvoke r0.<com.android.server.sip.SipSessionGroup: void process(java.util.EventObject)>(r1);

        return;
    }

    public void processTimeout(javax.sip.TimeoutEvent)
    {
        com.android.server.sip.SipSessionGroup r0;
        javax.sip.TimeoutEvent r1;

        r0 := @this: com.android.server.sip.SipSessionGroup;

        r1 := @parameter0: javax.sip.TimeoutEvent;

        specialinvoke r0.<com.android.server.sip.SipSessionGroup: void process(java.util.EventObject)>(r1);

        return;
    }

    public void processTransactionTerminated(javax.sip.TransactionTerminatedEvent)
    {
        com.android.server.sip.SipSessionGroup r0;
        javax.sip.TransactionTerminatedEvent r1;

        r0 := @this: com.android.server.sip.SipSessionGroup;

        r1 := @parameter0: javax.sip.TransactionTerminatedEvent;

        specialinvoke r0.<com.android.server.sip.SipSessionGroup: void process(java.util.EventObject)>(r1);

        return;
    }

    void reset() throws javax.sip.SipException
    {
        com.android.server.sip.SipSessionGroup r0;
        java.util.Properties r1;
        java.lang.String r2, $r9, $r15, r20, r22, r23, r25;
        int i0, $i1, $i2, i3, i4, i5, i6;
        java.net.InetAddress r3, $r14;
        java.net.DatagramSocket r4;
        android.net.sip.SipProfile $r5, $r6, $r7, $r8;
        boolean $z0, $z1, $z2, $z3;
        javax.sip.SipFactory $r10;
        javax.sip.ListeningPoint $r11;
        javax.sip.SipStack $r12, $r13, r26;
        java.lang.Throwable $r16, $r17;
        java.lang.Exception $r18, $r19;
        java.lang.StringBuilder r21;
        java.net.InetAddress[] r24;
        javax.sip.SipProvider r27;
        com.android.server.sip.SipHelper r28;
        javax.sip.SipException r30;

        r0 := @this: com.android.server.sip.SipSessionGroup;

        entermonitor r0;

     label01:
        r1 = new java.util.Properties;

        specialinvoke r1.<java.util.Properties: void <init>()>();

        $r5 = r0.<com.android.server.sip.SipSessionGroup: android.net.sip.SipProfile mLocalProfile>;

        r2 = virtualinvoke $r5.<android.net.sip.SipProfile: java.lang.String getProtocol()>();

        $r6 = r0.<com.android.server.sip.SipSessionGroup: android.net.sip.SipProfile mLocalProfile>;

        i3 = virtualinvoke $r6.<android.net.sip.SipProfile: int getPort()>();

        $r7 = r0.<com.android.server.sip.SipSessionGroup: android.net.sip.SipProfile mLocalProfile>;

        r20 = virtualinvoke $r7.<android.net.sip.SipProfile: java.lang.String getProxyAddress()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r20);

        if $z0 != 0 goto label03;

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r15 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("javax.sip.OUTBOUND_PROXY", $r15);

     label02:
        goto label04;

     label03:
        $r8 = r0.<com.android.server.sip.SipSessionGroup: android.net.sip.SipProfile mLocalProfile>;

        r20 = virtualinvoke $r8.<android.net.sip.SipProfile: java.lang.String getSipDomain()>();

     label04:
        r22 = r20;

     label05:
        $z1 = virtualinvoke r20.<java.lang.String: boolean startsWith(java.lang.String)>("[");

        if $z1 == 0 goto label08;

     label06:
        r22 = r20;

     label07:
        $z3 = virtualinvoke r20.<java.lang.String: boolean endsWith(java.lang.String)>("]");

        if $z3 == 0 goto label08;

        $i1 = virtualinvoke r20.<java.lang.String: int length()>();

        $i2 = $i1 - 1;

        r22 = virtualinvoke r20.<java.lang.String: java.lang.String substring(int,int)>(1, $i2);

     label08:
        i4 = i3;

        r23 = null;

     label09:
        r24 = staticinvoke <java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>(r22);

     label10:
        i4 = i3;

        r23 = null;

     label11:
        i0 = lengthof r24;

     label12:
        i5 = 0;

     label13:
        i4 = i3;

        r23 = null;

        if i5 >= i0 goto label31;

        r3 = r24[i5];

        i4 = i3;

        r23 = null;

     label14:
        r4 = new java.net.DatagramSocket;

     label15:
        i4 = i3;

        r23 = null;

     label16:
        specialinvoke r4.<java.net.DatagramSocket: void <init>()>();

     label17:
        i4 = i3;

        r23 = null;

     label18:
        virtualinvoke r4.<java.net.DatagramSocket: void connect(java.net.InetAddress,int)>(r3, i3);

     label19:
        i4 = i3;

        r23 = null;

     label20:
        $z2 = virtualinvoke r4.<java.net.DatagramSocket: boolean isConnected()>();

        if $z2 == 0 goto label28;

     label21:
        i4 = i3;

        r23 = null;

     label22:
        $r14 = virtualinvoke r4.<java.net.DatagramSocket: java.net.InetAddress getLocalAddress()>();

        r25 = virtualinvoke $r14.<java.net.InetAddress: java.lang.String getHostAddress()>();

     label23:
        i4 = i3;

        r23 = r25;

     label24:
        i6 = virtualinvoke r4.<java.net.DatagramSocket: int getLocalPort()>();

     label25:
        i4 = i6;

        r23 = r25;

     label26:
        virtualinvoke r4.<java.net.DatagramSocket: void close()>();

     label27:
        i4 = i6;

        r23 = r25;

        goto label31;

     label28:
        i4 = i3;

        r23 = null;

     label29:
        virtualinvoke r4.<java.net.DatagramSocket: void close()>();

     label30:
        i5 = i5 + 1;

        goto label13;

     label31:
        goto label33;

     label32:
        $r19 := @caughtexception;

     label33:
        if r23 != null goto label34;

        exitmonitor r0;

        return;

     label34:
        virtualinvoke r0.<com.android.server.sip.SipSessionGroup: void close()>();

        r0.<com.android.server.sip.SipSessionGroup: java.lang.String mLocalIp> = r23;

        $r9 = specialinvoke r0.<com.android.server.sip.SipSessionGroup: java.lang.String getStackName()>();

        virtualinvoke r1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("javax.sip.STACK_NAME", $r9);

        virtualinvoke r1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("gov.nist.javax.sip.THREAD_POOL_SIZE", "1");

        $r10 = staticinvoke <javax.sip.SipFactory: javax.sip.SipFactory getInstance()>();

        r26 = virtualinvoke $r10.<javax.sip.SipFactory: javax.sip.SipStack createSipStack(java.util.Properties)>(r1);

        r0.<com.android.server.sip.SipSessionGroup: javax.sip.SipStack mSipStack> = r26;

     label35:
        $r11 = interfaceinvoke r26.<javax.sip.SipStack: javax.sip.ListeningPoint createListeningPoint(java.lang.String,int,java.lang.String)>(r23, i4, r2);

        r27 = interfaceinvoke r26.<javax.sip.SipStack: javax.sip.SipProvider createSipProvider(javax.sip.ListeningPoint)>($r11);

        interfaceinvoke r27.<javax.sip.SipProvider: void addSipListener(javax.sip.SipListener)>(r0);

        r28 = new com.android.server.sip.SipHelper;

        $r12 = r0.<com.android.server.sip.SipSessionGroup: javax.sip.SipStack mSipStack>;

        specialinvoke r28.<com.android.server.sip.SipHelper: void <init>(javax.sip.SipStack,javax.sip.SipProvider)>($r12, r27);

        r0.<com.android.server.sip.SipSessionGroup: com.android.server.sip.SipHelper mSipHelper> = r28;

     label36:
        $r13 = r0.<com.android.server.sip.SipSessionGroup: javax.sip.SipStack mSipStack>;

        interfaceinvoke $r13.<javax.sip.SipStack: void start()>();

     label37:
        exitmonitor r0;

        return;

     label38:
        $r18 := @caughtexception;

     label39:
        r30 = new javax.sip.SipException;

        specialinvoke r30.<javax.sip.SipException: void <init>(java.lang.String,java.lang.Throwable)>("failed to initialize SIP stack", $r18);

        throw r30;

     label40:
        $r16 := @caughtexception;

     label41:
        throw $r16;

     label42:
        $r17 := @caughtexception;

        exitmonitor r0;

        throw $r17;

        catch java.lang.Throwable from label01 to label02 with label42;
        catch java.lang.Throwable from label03 to label04 with label42;
        catch java.lang.Throwable from label05 to label06 with label42;
        catch java.lang.Throwable from label07 to label08 with label42;
        catch java.lang.Exception from label09 to label10 with label32;
        catch java.lang.Throwable from label09 to label10 with label42;
        catch java.lang.Exception from label11 to label12 with label32;
        catch java.lang.Throwable from label11 to label12 with label42;
        catch java.lang.Exception from label14 to label15 with label32;
        catch java.lang.Throwable from label14 to label15 with label42;
        catch java.lang.Exception from label16 to label17 with label32;
        catch java.lang.Throwable from label16 to label17 with label42;
        catch java.lang.Exception from label18 to label19 with label32;
        catch java.lang.Throwable from label18 to label19 with label42;
        catch java.lang.Exception from label20 to label21 with label32;
        catch java.lang.Throwable from label20 to label21 with label42;
        catch java.lang.Exception from label22 to label23 with label32;
        catch java.lang.Throwable from label22 to label23 with label42;
        catch java.lang.Exception from label24 to label25 with label32;
        catch java.lang.Throwable from label24 to label25 with label42;
        catch java.lang.Exception from label26 to label27 with label32;
        catch java.lang.Throwable from label26 to label27 with label42;
        catch java.lang.Exception from label29 to label30 with label32;
        catch java.lang.Throwable from label29 to label30 with label42;
        catch java.lang.Throwable from label34 to label35 with label42;
        catch javax.sip.SipException from label35 to label36 with label40;
        catch java.lang.Exception from label35 to label36 with label38;
        catch java.lang.Throwable from label35 to label36 with label42;
        catch java.lang.Throwable from label36 to label37 with label42;
        catch java.lang.Throwable from label39 to label40 with label42;
        catch java.lang.Throwable from label41 to label42 with label42;
    }

    void resetExternalAddress()
    {
        com.android.server.sip.SipSessionGroup r0;
        java.lang.Throwable $r2;

        r0 := @this: com.android.server.sip.SipSessionGroup;

        entermonitor r0;

     label1:
        r0.<com.android.server.sip.SipSessionGroup: java.lang.String mExternalIp> = null;

        r0.<com.android.server.sip.SipSessionGroup: int mExternalPort> = 0;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void setWakeupTimer(com.android.server.sip.SipWakeupTimer)
    {
        com.android.server.sip.SipSessionGroup r0;
        com.android.server.sip.SipWakeupTimer r1;

        r0 := @this: com.android.server.sip.SipSessionGroup;

        r1 := @parameter0: com.android.server.sip.SipWakeupTimer;

        r0.<com.android.server.sip.SipSessionGroup: com.android.server.sip.SipWakeupTimer mWakeupTimer> = r1;

        return;
    }
}
