public class com.android.server.slice.SliceClientPermissions$SliceAuthority extends java.lang.Object implements com.android.server.slice.DirtyTracker$Persistable
{
    public static final java.lang.String DELIMITER;
    private final java.lang.String mAuthority;
    private final android.util.ArraySet mPaths;
    private final com.android.server.slice.SlicePermissionManager$PkgUser mPkg;
    private final com.android.server.slice.DirtyTracker mTracker;

    public void <init>(java.lang.String, com.android.server.slice.SlicePermissionManager$PkgUser, com.android.server.slice.DirtyTracker)
    {
        com.android.server.slice.SliceClientPermissions$SliceAuthority r0;
        java.lang.String r1;
        com.android.server.slice.SlicePermissionManager$PkgUser r2;
        com.android.server.slice.DirtyTracker r3;
        android.util.ArraySet $r4;

        r0 := @this: com.android.server.slice.SliceClientPermissions$SliceAuthority;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.server.slice.SlicePermissionManager$PkgUser;

        r3 := @parameter2: com.android.server.slice.DirtyTracker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new android.util.ArraySet;

        specialinvoke $r4.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.slice.SliceClientPermissions$SliceAuthority: android.util.ArraySet mPaths> = $r4;

        r0.<com.android.server.slice.SliceClientPermissions$SliceAuthority: java.lang.String mAuthority> = r1;

        r0.<com.android.server.slice.SliceClientPermissions$SliceAuthority: com.android.server.slice.SlicePermissionManager$PkgUser mPkg> = r2;

        r0.<com.android.server.slice.SliceClientPermissions$SliceAuthority: com.android.server.slice.DirtyTracker mTracker> = r3;

        return;
    }

    static java.lang.String access$000(com.android.server.slice.SliceClientPermissions$SliceAuthority)
    {
        com.android.server.slice.SliceClientPermissions$SliceAuthority r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.server.slice.SliceClientPermissions$SliceAuthority;

        $r1 = r0.<com.android.server.slice.SliceClientPermissions$SliceAuthority: java.lang.String mAuthority>;

        return $r1;
    }

    static com.android.server.slice.SlicePermissionManager$PkgUser access$100(com.android.server.slice.SliceClientPermissions$SliceAuthority)
    {
        com.android.server.slice.SliceClientPermissions$SliceAuthority r0;
        com.android.server.slice.SlicePermissionManager$PkgUser $r1;

        r0 := @parameter0: com.android.server.slice.SliceClientPermissions$SliceAuthority;

        $r1 = r0.<com.android.server.slice.SliceClientPermissions$SliceAuthority: com.android.server.slice.SlicePermissionManager$PkgUser mPkg>;

        return $r1;
    }

    private java.lang.String[] decodeSegments(java.lang.String)
    {
        com.android.server.slice.SliceClientPermissions$SliceAuthority r0;
        int $i0, i1;
        java.lang.String $r1, $r2, r3;
        java.lang.String[] r4;

        r0 := @this: com.android.server.slice.SliceClientPermissions$SliceAuthority;

        r3 := @parameter0: java.lang.String;

        r4 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("/", -1);

        i1 = 0;

     label1:
        $i0 = lengthof r4;

        if i1 >= $i0 goto label2;

        $r1 = r4[i1];

        $r2 = staticinvoke <android.net.Uri: java.lang.String decode(java.lang.String)>($r1);

        r4[i1] = $r2;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r4;
    }

    private java.lang.String encodeSegments(java.lang.String[])
    {
        com.android.server.slice.SliceClientPermissions$SliceAuthority r0;
        java.lang.String[] r1, r2;
        int $i0, $i1, i2;
        java.lang.String $r3, $r4, $r5;

        r0 := @this: com.android.server.slice.SliceClientPermissions$SliceAuthority;

        r1 := @parameter0: java.lang.String[];

        $i0 = lengthof r1;

        r2 = newarray (java.lang.String)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r1;

        if i2 >= $i1 goto label2;

        $r4 = r1[i2];

        $r5 = staticinvoke <android.net.Uri: java.lang.String encode(java.lang.String)>($r4);

        r2[i2] = $r5;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r3 = staticinvoke <android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Object[])>("/", r2);

        return $r3;
    }

    private boolean isPathPrefixMatch(java.lang.String[], java.lang.String[])
    {
        com.android.server.slice.SliceClientPermissions$SliceAuthority r0;
        java.lang.String[] r1, r2;
        int i0, $i1, i2;
        java.lang.String $r3, $r4;
        boolean $z0;

        r0 := @this: com.android.server.slice.SliceClientPermissions$SliceAuthority;

        r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: java.lang.String[];

        i0 = lengthof r1;

        $i1 = lengthof r2;

        if $i1 >= i0 goto label1;

        return 0;

     label1:
        i2 = 0;

     label2:
        if i2 >= i0 goto label4;

        $r4 = r2[i2];

        $r3 = r1[i2];

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        return 1;
    }

    static java.lang.String lambda$equals$0(java.lang.String[])
    {
        java.lang.String[] r0;
        java.lang.String $r1;

        r0 := @parameter0: java.lang.String[];

        $r1 = staticinvoke <android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Object[])>(",", r0);

        return $r1;
    }

    static java.lang.String lambda$equals$1(java.lang.String[])
    {
        java.lang.String[] r0;
        java.lang.String $r1;

        r0 := @parameter0: java.lang.String[];

        $r1 = staticinvoke <android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Object[])>(",", r0);

        return $r1;
    }

    static java.lang.String lambda$pathToString$2(java.lang.String[])
    {
        java.lang.String[] r0;
        java.lang.String $r1;

        r0 := @parameter0: java.lang.String[];

        $r1 = staticinvoke <android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Object[])>("/", r0);

        return $r1;
    }

    private java.lang.String pathToString(android.util.ArraySet)
    {
        com.android.server.slice.SliceClientPermissions$SliceAuthority r0;
        android.util.ArraySet r1;
        java.util.stream.Stream $r2, $r4;
        com.android.server.slice.'-$$Lambda$SliceClientPermissions$SliceAuthority$lvjy01xuWTQLCsbGw02qqI7DYDM' $r3;
        java.util.stream.Collector $r5;
        java.lang.Object $r6;
        java.lang.Iterable $r7;
        java.lang.String $r8;
        java.util.function.Function r9;

        r0 := @this: com.android.server.slice.SliceClientPermissions$SliceAuthority;

        r1 := @parameter0: android.util.ArraySet;

        $r2 = virtualinvoke r1.<android.util.ArraySet: java.util.stream.Stream stream()>();

        $r3 = <com.android.server.slice._$$Lambda$SliceClientPermissions$SliceAuthority$lvjy01xuWTQLCsbGw02qqI7DYDM: com.android.server.slice.'-$$Lambda$SliceClientPermissions$SliceAuthority$lvjy01xuWTQLCsbGw02qqI7DYDM' INSTANCE>;

        r9 = (java.util.function.Function) $r3;

        $r4 = interfaceinvoke $r2.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(r9);

        $r5 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();

        $r6 = interfaceinvoke $r4.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r5);

        $r7 = (java.lang.Iterable) $r6;

        $r8 = staticinvoke <android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(", ", $r7);

        return $r8;
    }

    void addPath(java.util.List)
    {
        com.android.server.slice.SliceClientPermissions$SliceAuthority r0;
        java.lang.String[] r1, $r2, r12;
        int $i0, $i1, i2;
        java.lang.Object[] $r3;
        android.util.ArraySet $r4, $r5, $r7, $r9;
        com.android.server.slice.DirtyTracker $r6;
        java.lang.Object $r8;
        boolean $z1, $z2;
        java.util.List r11;

        r0 := @this: com.android.server.slice.SliceClientPermissions$SliceAuthority;

        r11 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r11.<java.util.List: int size()>();

        $r2 = newarray (java.lang.String)[$i0];

        $r3 = interfaceinvoke r11.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        r12 = (java.lang.String[]) $r3;

        $r4 = r0.<com.android.server.slice.SliceClientPermissions$SliceAuthority: android.util.ArraySet mPaths>;

        $i1 = virtualinvoke $r4.<android.util.ArraySet: int size()>();

        i2 = $i1 - 1;

     label1:
        if i2 < 0 goto label4;

        $r7 = r0.<com.android.server.slice.SliceClientPermissions$SliceAuthority: android.util.ArraySet mPaths>;

        $r8 = virtualinvoke $r7.<android.util.ArraySet: java.lang.Object valueAt(int)>(i2);

        r1 = (java.lang.String[]) $r8;

        $z1 = specialinvoke r0.<com.android.server.slice.SliceClientPermissions$SliceAuthority: boolean isPathPrefixMatch(java.lang.String[],java.lang.String[])>(r1, r12);

        if $z1 == 0 goto label2;

        return;

     label2:
        $z2 = specialinvoke r0.<com.android.server.slice.SliceClientPermissions$SliceAuthority: boolean isPathPrefixMatch(java.lang.String[],java.lang.String[])>(r12, r1);

        if $z2 == 0 goto label3;

        $r9 = r0.<com.android.server.slice.SliceClientPermissions$SliceAuthority: android.util.ArraySet mPaths>;

        virtualinvoke $r9.<android.util.ArraySet: java.lang.Object removeAt(int)>(i2);

     label3:
        i2 = i2 + -1;

        goto label1;

     label4:
        $r5 = r0.<com.android.server.slice.SliceClientPermissions$SliceAuthority: android.util.ArraySet mPaths>;

        virtualinvoke $r5.<android.util.ArraySet: boolean add(java.lang.Object)>(r12);

        $r6 = r0.<com.android.server.slice.SliceClientPermissions$SliceAuthority: com.android.server.slice.DirtyTracker mTracker>;

        interfaceinvoke $r6.<com.android.server.slice.DirtyTracker: void onPersistableDirty(com.android.server.slice.DirtyTracker$Persistable)>(r0);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        com.android.server.slice.SliceClientPermissions$SliceAuthority r0, r24;
        boolean z0, $z1, $z2, $z3, z4;
        java.lang.String[] r2, r26;
        android.util.ArraySet $r3, $r4, $r6, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        com.android.server.slice.'-$$Lambda$SliceClientPermissions$SliceAuthority$gfIfSC_15op1dWInvxEKC7DlOkg' $r9;
        java.util.Comparator $r10, $r12;
        com.android.server.slice.'-$$Lambda$SliceClientPermissions$SliceAuthority$czFcrdPWpaFU7_jx7xCl0wMHBps' $r11;
        java.lang.String $r13, $r14, $r19, $r20;
        com.android.server.slice.SlicePermissionManager$PkgUser $r15, $r16;
        java.lang.Object $r17, $r18, r21;
        java.lang.Class r22, r23;
        java.util.ArrayList r27, r28;
        java.util.function.Function r29, r30;

        r0 := @this: com.android.server.slice.SliceClientPermissions$SliceAuthority;

        r21 := @parameter0: java.lang.Object;

        r22 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if r21 == null goto label01;

        r23 = virtualinvoke r21.<java.lang.Object: java.lang.Class getClass()>();

        goto label02;

     label01:
        r23 = null;

     label02:
        z0 = virtualinvoke r22.<java.lang.Object: boolean equals(java.lang.Object)>(r23);

        z4 = 0;

        if z0 != 0 goto label03;

        return 0;

     label03:
        r24 = (com.android.server.slice.SliceClientPermissions$SliceAuthority) r21;

        $r3 = r0.<com.android.server.slice.SliceClientPermissions$SliceAuthority: android.util.ArraySet mPaths>;

        $i0 = virtualinvoke $r3.<android.util.ArraySet: int size()>();

        $r4 = r24.<com.android.server.slice.SliceClientPermissions$SliceAuthority: android.util.ArraySet mPaths>;

        $i1 = virtualinvoke $r4.<android.util.ArraySet: int size()>();

        if $i0 == $i1 goto label04;

        return 0;

     label04:
        r27 = new java.util.ArrayList;

        $r6 = r0.<com.android.server.slice.SliceClientPermissions$SliceAuthority: android.util.ArraySet mPaths>;

        specialinvoke r27.<java.util.ArrayList: void <init>(java.util.Collection)>($r6);

        r28 = new java.util.ArrayList;

        $r8 = r24.<com.android.server.slice.SliceClientPermissions$SliceAuthority: android.util.ArraySet mPaths>;

        specialinvoke r28.<java.util.ArrayList: void <init>(java.util.Collection)>($r8);

        $r9 = <com.android.server.slice._$$Lambda$SliceClientPermissions$SliceAuthority$gfIfSC_15op1dWInvxEKC7DlOkg: com.android.server.slice.'-$$Lambda$SliceClientPermissions$SliceAuthority$gfIfSC_15op1dWInvxEKC7DlOkg' INSTANCE>;

        r29 = (java.util.function.Function) $r9;

        $r10 = staticinvoke <java.util.Comparator: java.util.Comparator comparing(java.util.function.Function)>(r29);

        virtualinvoke r27.<java.util.ArrayList: void sort(java.util.Comparator)>($r10);

        $r11 = <com.android.server.slice._$$Lambda$SliceClientPermissions$SliceAuthority$czFcrdPWpaFU7_jx7xCl0wMHBps: com.android.server.slice.'-$$Lambda$SliceClientPermissions$SliceAuthority$czFcrdPWpaFU7_jx7xCl0wMHBps' INSTANCE>;

        r30 = (java.util.function.Function) $r11;

        $r12 = staticinvoke <java.util.Comparator: java.util.Comparator comparing(java.util.function.Function)>(r30);

        virtualinvoke r28.<java.util.ArrayList: void sort(java.util.Comparator)>($r12);

        i6 = 0;

     label05:
        $i2 = virtualinvoke r27.<java.util.ArrayList: int size()>();

        if i6 >= $i2 goto label10;

        $r17 = virtualinvoke r27.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        r26 = (java.lang.String[]) $r17;

        $r18 = virtualinvoke r28.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        r2 = (java.lang.String[]) $r18;

        $i4 = lengthof r26;

        $i3 = lengthof r2;

        if $i4 == $i3 goto label06;

        return 0;

     label06:
        i7 = 0;

     label07:
        $i5 = lengthof r26;

        if i7 >= $i5 goto label09;

        $r20 = r26[i7];

        $r19 = r2[i7];

        $z3 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r20, $r19);

        if $z3 != 0 goto label08;

        return 0;

     label08:
        i7 = i7 + 1;

        goto label07;

     label09:
        i6 = i6 + 1;

        goto label05;

     label10:
        $r14 = r0.<com.android.server.slice.SliceClientPermissions$SliceAuthority: java.lang.String mAuthority>;

        $r13 = r24.<com.android.server.slice.SliceClientPermissions$SliceAuthority: java.lang.String mAuthority>;

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r14, $r13);

        if $z1 == 0 goto label11;

        $r16 = r0.<com.android.server.slice.SliceClientPermissions$SliceAuthority: com.android.server.slice.SlicePermissionManager$PkgUser mPkg>;

        $r15 = r24.<com.android.server.slice.SliceClientPermissions$SliceAuthority: com.android.server.slice.SlicePermissionManager$PkgUser mPkg>;

        $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r16, $r15);

        if $z2 == 0 goto label11;

        z4 = 1;

        goto label11;

     label11:
        return z4;
    }

    public java.lang.String getAuthority()
    {
        com.android.server.slice.SliceClientPermissions$SliceAuthority r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.slice.SliceClientPermissions$SliceAuthority;

        $r1 = r0.<com.android.server.slice.SliceClientPermissions$SliceAuthority: java.lang.String mAuthority>;

        return $r1;
    }

    public java.lang.String getFileName()
    {
        com.android.server.slice.SliceClientPermissions$SliceAuthority r0;

        r0 := @this: com.android.server.slice.SliceClientPermissions$SliceAuthority;

        return null;
    }

    public java.util.Collection getPaths()
    {
        com.android.server.slice.SliceClientPermissions$SliceAuthority r0;
        android.util.ArraySet $r1, $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.slice.SliceClientPermissions$SliceAuthority;

        entermonitor r0;

     label1:
        $r1 = new android.util.ArraySet;

        $r2 = r0.<com.android.server.slice.SliceClientPermissions$SliceAuthority: android.util.ArraySet mPaths>;

        specialinvoke $r1.<android.util.ArraySet: void <init>(android.util.ArraySet)>($r2);

     label2:
        exitmonitor r0;

        return $r1;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public com.android.server.slice.SlicePermissionManager$PkgUser getPkg()
    {
        com.android.server.slice.SliceClientPermissions$SliceAuthority r0;
        com.android.server.slice.SlicePermissionManager$PkgUser $r1;

        r0 := @this: com.android.server.slice.SliceClientPermissions$SliceAuthority;

        $r1 = r0.<com.android.server.slice.SliceClientPermissions$SliceAuthority: com.android.server.slice.SlicePermissionManager$PkgUser mPkg>;

        return $r1;
    }

    public boolean hasPermission(java.util.List)
    {
        com.android.server.slice.SliceClientPermissions$SliceAuthority r0;
        java.util.List r1;
        java.util.Iterator r2;
        android.util.ArraySet $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        java.lang.String[] $r5, $r6, $r8;
        int $i0;
        java.lang.Object[] $r7;

        r0 := @this: com.android.server.slice.SliceClientPermissions$SliceAuthority;

        r1 := @parameter0: java.util.List;

        $r3 = r0.<com.android.server.slice.SliceClientPermissions$SliceAuthority: android.util.ArraySet mPaths>;

        r2 = virtualinvoke $r3.<android.util.ArraySet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.String[]) $r4;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $r6 = newarray (java.lang.String)[$i0];

        $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        $r8 = (java.lang.String[]) $r7;

        $z1 = specialinvoke r0.<com.android.server.slice.SliceClientPermissions$SliceAuthority: boolean isPathPrefixMatch(java.lang.String[],java.lang.String[])>($r5, $r8);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public void readFrom(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.slice.SliceClientPermissions$SliceAuthority r0;
        int i0, $i2, $i3;
        java.lang.String $r1, $r2, $r4;
        boolean $z0;
        android.util.ArraySet $r3;
        java.lang.String[] $r5;
        java.lang.Throwable $r6;
        org.xmlpull.v1.XmlPullParser r7;

        r0 := @this: com.android.server.slice.SliceClientPermissions$SliceAuthority;

        r7 := @parameter0: org.xmlpull.v1.XmlPullParser;

        entermonitor r0;

     label1:
        interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: int next()>();

        i0 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label2:
        $i2 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 < i0 goto label5;

        $i3 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i3 != 2 goto label3;

        $r1 = "path";

        $r2 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label3;

        $r3 = r0.<com.android.server.slice.SliceClientPermissions$SliceAuthority: android.util.ArraySet mPaths>;

        $r4 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: java.lang.String nextText()>();

        $r5 = specialinvoke r0.<com.android.server.slice.SliceClientPermissions$SliceAuthority: java.lang.String[] decodeSegments(java.lang.String)>($r4);

        virtualinvoke $r3.<android.util.ArraySet: boolean add(java.lang.Object)>($r5);

     label3:
        interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: int next()>();

     label4:
        goto label2;

     label5:
        exitmonitor r0;

        return;

     label6:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
    }

    void removePath(java.util.List)
    {
        com.android.server.slice.SliceClientPermissions$SliceAuthority r0;
        int $i0, $i1, i2;
        java.lang.String[] $r1, $r7, r11;
        java.lang.Object[] $r2;
        android.util.ArraySet $r3, $r5, $r8;
        com.android.server.slice.DirtyTracker $r4;
        java.lang.Object $r6;
        boolean $z0, z1;
        java.util.List r10;

        r0 := @this: com.android.server.slice.SliceClientPermissions$SliceAuthority;

        r10 := @parameter0: java.util.List;

        z1 = 0;

        $i0 = interfaceinvoke r10.<java.util.List: int size()>();

        $r1 = newarray (java.lang.String)[$i0];

        $r2 = interfaceinvoke r10.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r1);

        r11 = (java.lang.String[]) $r2;

        $r3 = r0.<com.android.server.slice.SliceClientPermissions$SliceAuthority: android.util.ArraySet mPaths>;

        $i1 = virtualinvoke $r3.<android.util.ArraySet: int size()>();

        i2 = $i1 - 1;

     label1:
        if i2 < 0 goto label3;

        $r5 = r0.<com.android.server.slice.SliceClientPermissions$SliceAuthority: android.util.ArraySet mPaths>;

        $r6 = virtualinvoke $r5.<android.util.ArraySet: java.lang.Object valueAt(int)>(i2);

        $r7 = (java.lang.String[]) $r6;

        $z0 = specialinvoke r0.<com.android.server.slice.SliceClientPermissions$SliceAuthority: boolean isPathPrefixMatch(java.lang.String[],java.lang.String[])>(r11, $r7);

        if $z0 == 0 goto label2;

        z1 = 1;

        $r8 = r0.<com.android.server.slice.SliceClientPermissions$SliceAuthority: android.util.ArraySet mPaths>;

        virtualinvoke $r8.<android.util.ArraySet: java.lang.Object removeAt(int)>(i2);

     label2:
        i2 = i2 + -1;

        goto label1;

     label3:
        if z1 == 0 goto label4;

        $r4 = r0.<com.android.server.slice.SliceClientPermissions$SliceAuthority: com.android.server.slice.DirtyTracker mTracker>;

        interfaceinvoke $r4.<com.android.server.slice.DirtyTracker: void onPersistableDirty(com.android.server.slice.DirtyTracker$Persistable)>(r0);

     label4:
        return;
    }

    public java.lang.String toString()
    {
        com.android.server.slice.SliceClientPermissions$SliceAuthority r0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r4, $r6, $r7;
        com.android.server.slice.SlicePermissionManager$PkgUser $r3;
        android.util.ArraySet $r5;

        r0 := @this: com.android.server.slice.SliceClientPermissions$SliceAuthority;

        $r1 = newarray (java.lang.Object)[3];

        $r2 = r0.<com.android.server.slice.SliceClientPermissions$SliceAuthority: java.lang.String mAuthority>;

        $r1[0] = $r2;

        $r3 = r0.<com.android.server.slice.SliceClientPermissions$SliceAuthority: com.android.server.slice.SlicePermissionManager$PkgUser mPkg>;

        $r4 = virtualinvoke $r3.<com.android.server.slice.SlicePermissionManager$PkgUser: java.lang.String toString()>();

        $r1[1] = $r4;

        $r5 = r0.<com.android.server.slice.SliceClientPermissions$SliceAuthority: android.util.ArraySet mPaths>;

        $r6 = specialinvoke r0.<com.android.server.slice.SliceClientPermissions$SliceAuthority: java.lang.String pathToString(android.util.ArraySet)>($r5);

        $r1[2] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("(%s, %s: %s)", $r1);

        return $r7;
    }

    public void writeTo(org.xmlpull.v1.XmlSerializer) throws java.io.IOException
    {
        com.android.server.slice.SliceClientPermissions$SliceAuthority r0;
        int i0, i1;
        java.lang.String[] r1;
        android.util.ArraySet $r2, $r3;
        java.lang.Object $r4;
        java.lang.String $r5, $r7, $r9;
        java.lang.Throwable $r11;
        org.xmlpull.v1.XmlSerializer r12;

        r0 := @this: com.android.server.slice.SliceClientPermissions$SliceAuthority;

        r12 := @parameter0: org.xmlpull.v1.XmlSerializer;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.slice.SliceClientPermissions$SliceAuthority: android.util.ArraySet mPaths>;

        i0 = virtualinvoke $r2.<android.util.ArraySet: int size()>();

     label2:
        i1 = 0;

     label3:
        if i1 >= i0 goto label8;

     label4:
        $r3 = r0.<com.android.server.slice.SliceClientPermissions$SliceAuthority: android.util.ArraySet mPaths>;

        $r4 = virtualinvoke $r3.<android.util.ArraySet: java.lang.Object valueAt(int)>(i1);

        r1 = (java.lang.String[]) $r4;

     label5:
        if r1 == null goto label7;

     label6:
        $r5 = staticinvoke <com.android.server.slice.SliceClientPermissions: java.lang.String access$200()>();

        interfaceinvoke r12.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>($r5, "path");

        $r7 = specialinvoke r0.<com.android.server.slice.SliceClientPermissions$SliceAuthority: java.lang.String encodeSegments(java.lang.String[])>(r1);

        interfaceinvoke r12.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r7);

        $r9 = staticinvoke <com.android.server.slice.SliceClientPermissions: java.lang.String access$200()>();

        interfaceinvoke r12.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>($r9, "path");

     label7:
        i1 = i1 + 1;

        goto label3;

     label8:
        exitmonitor r0;

        return;

     label9:
        $r11 := @caughtexception;

        exitmonitor r0;

        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label4 to label5 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public static void <clinit>()
    {
        <com.android.server.slice.SliceClientPermissions$SliceAuthority: java.lang.String DELIMITER> = "/";

        return;
    }
}
