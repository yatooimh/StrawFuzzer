public class com.android.server.slice.SliceClientPermissions extends java.lang.Object implements com.android.server.slice.DirtyTracker, com.android.server.slice.DirtyTracker$Persistable
{
    private static final java.lang.String ATTR_AUTHORITY;
    private static final java.lang.String ATTR_FULL_ACCESS;
    private static final java.lang.String ATTR_PKG;
    private static final java.lang.String NAMESPACE;
    private static final java.lang.String TAG;
    private static final java.lang.String TAG_AUTHORITY;
    static final java.lang.String TAG_CLIENT;
    private static final java.lang.String TAG_PATH;
    private final android.util.ArrayMap mAuths;
    private boolean mHasFullAccess;
    private final com.android.server.slice.SlicePermissionManager$PkgUser mPkg;
    private final com.android.server.slice.DirtyTracker mTracker;

    static void <clinit>()
    {
        <com.android.server.slice.SliceClientPermissions: java.lang.String TAG_PATH> = "path";

        <com.android.server.slice.SliceClientPermissions: java.lang.String TAG_CLIENT> = "client";

        <com.android.server.slice.SliceClientPermissions: java.lang.String TAG_AUTHORITY> = "authority";

        <com.android.server.slice.SliceClientPermissions: java.lang.String TAG> = "SliceClientPermissions";

        <com.android.server.slice.SliceClientPermissions: java.lang.String ATTR_PKG> = "pkg";

        <com.android.server.slice.SliceClientPermissions: java.lang.String ATTR_FULL_ACCESS> = "fullAccess";

        <com.android.server.slice.SliceClientPermissions: java.lang.String ATTR_AUTHORITY> = "authority";

        <com.android.server.slice.SliceClientPermissions: java.lang.String NAMESPACE> = null;

        return;
    }

    public void <init>(com.android.server.slice.SlicePermissionManager$PkgUser, com.android.server.slice.DirtyTracker)
    {
        com.android.server.slice.SliceClientPermissions r0;
        com.android.server.slice.SlicePermissionManager$PkgUser r1;
        com.android.server.slice.DirtyTracker r2;
        android.util.ArrayMap $r3;

        r0 := @this: com.android.server.slice.SliceClientPermissions;

        r1 := @parameter0: com.android.server.slice.SlicePermissionManager$PkgUser;

        r2 := @parameter1: com.android.server.slice.DirtyTracker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.slice.SliceClientPermissions: android.util.ArrayMap mAuths> = $r3;

        r0.<com.android.server.slice.SliceClientPermissions: com.android.server.slice.SlicePermissionManager$PkgUser mPkg> = r1;

        r0.<com.android.server.slice.SliceClientPermissions: com.android.server.slice.DirtyTracker mTracker> = r2;

        return;
    }

    static java.lang.String access$200()
    {
        java.lang.String $r0;

        $r0 = <com.android.server.slice.SliceClientPermissions: java.lang.String NAMESPACE>;

        return $r0;
    }

    public static com.android.server.slice.SliceClientPermissions createFrom(org.xmlpull.v1.XmlPullParser, com.android.server.slice.DirtyTracker) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        int i0, $i1, $i2, $i4, $i6, $i7, $i9, $i11;
        android.util.ArrayMap r2;
        java.lang.String $r5, $r6, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, r22, r23;
        boolean $z0, $z1, z2;
        java.lang.Throwable $r20, r33;
        com.android.server.slice.DirtyTracker r21;
        com.android.server.slice.SlicePermissionManager$PkgUser r27, r29, r31;
        com.android.server.slice.SliceClientPermissions r28;
        com.android.server.slice.SliceClientPermissions$SliceAuthority r30;
        org.xmlpull.v1.XmlPullParserException r32;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r21 := @parameter1: com.android.server.slice.DirtyTracker;

     label01:
        $i1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i1 != 2 goto label13;

        $r5 = "client";

        $r6 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label02;

        goto label13;

     label02:
        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        r28 = new com.android.server.slice.SliceClientPermissions;

        r27 = new com.android.server.slice.SlicePermissionManager$PkgUser;

        $r9 = <com.android.server.slice.SliceClientPermissions: java.lang.String NAMESPACE>;

        $r10 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>($r9, "pkg");

        specialinvoke r27.<com.android.server.slice.SlicePermissionManager$PkgUser: void <init>(java.lang.String)>($r10);

        specialinvoke r28.<com.android.server.slice.SliceClientPermissions: void <init>(com.android.server.slice.SlicePermissionManager$PkgUser,com.android.server.slice.DirtyTracker)>(r27, r21);

        $r11 = <com.android.server.slice.SliceClientPermissions: java.lang.String NAMESPACE>;

        r22 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>($r11, "fullAccess");

        r23 = r22;

        if r22 != null goto label03;

        r23 = "0";

     label03:
        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r23);

        if $i4 == 0 goto label04;

        z2 = 1;

        goto label05;

     label04:
        z2 = 0;

     label05:
        r28.<com.android.server.slice.SliceClientPermissions: boolean mHasFullAccess> = z2;

        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

     label06:
        $i11 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i11 <= i0 goto label12;

        $i6 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i6 != 1 goto label07;

        return r28;

     label07:
        $i7 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i7 != 2 goto label11;

        $r12 = "authority";

        $r13 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z1 == 0 goto label11;

     label08:
        r29 = new com.android.server.slice.SlicePermissionManager$PkgUser;

        $r14 = <com.android.server.slice.SliceClientPermissions: java.lang.String NAMESPACE>;

        $r15 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>($r14, "pkg");

        specialinvoke r29.<com.android.server.slice.SlicePermissionManager$PkgUser: void <init>(java.lang.String)>($r15);

        r30 = new com.android.server.slice.SliceClientPermissions$SliceAuthority;

        $r16 = <com.android.server.slice.SliceClientPermissions: java.lang.String NAMESPACE>;

        $r17 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>($r16, "authority");

        specialinvoke r30.<com.android.server.slice.SliceClientPermissions$SliceAuthority: void <init>(java.lang.String,com.android.server.slice.SlicePermissionManager$PkgUser,com.android.server.slice.DirtyTracker)>($r17, r29, r28);

        virtualinvoke r30.<com.android.server.slice.SliceClientPermissions$SliceAuthority: void readFrom(org.xmlpull.v1.XmlPullParser)>(r0);

        r2 = r28.<com.android.server.slice.SliceClientPermissions: android.util.ArrayMap mAuths>;

        r31 = new com.android.server.slice.SlicePermissionManager$PkgUser;

        $r18 = virtualinvoke r30.<com.android.server.slice.SliceClientPermissions$SliceAuthority: java.lang.String getAuthority()>();

        $i9 = virtualinvoke r29.<com.android.server.slice.SlicePermissionManager$PkgUser: int getUserId()>();

        specialinvoke r31.<com.android.server.slice.SlicePermissionManager$PkgUser: void <init>(java.lang.String,int)>($r18, $i9);

        virtualinvoke r2.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r31, r30);

     label09:
        goto label11;

     label10:
        $r20 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SliceClientPermissions", "Couldn\'t read PkgUser", $r20);

     label11:
        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label06;

     label12:
        return r28;

     label13:
        $i2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i2 == 1 goto label14;

        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label01;

     label14:
        r32 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r32.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Can\'t find client tag in xml");

        r33 = (java.lang.Throwable) r32;

        throw r33;

        catch java.lang.IllegalArgumentException from label08 to label09 with label10;
    }

    public static java.lang.String getFileName(com.android.server.slice.SlicePermissionManager$PkgUser)
    {
        com.android.server.slice.SlicePermissionManager$PkgUser r0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r3;

        r0 := @parameter0: com.android.server.slice.SlicePermissionManager$PkgUser;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = virtualinvoke r0.<com.android.server.slice.SlicePermissionManager$PkgUser: java.lang.String toString()>();

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("client_%s", $r1);

        return $r3;
    }

    public void clear()
    {
        com.android.server.slice.SliceClientPermissions r0;
        boolean $z0, $z1;
        android.util.ArrayMap $r1, $r2;

        r0 := @this: com.android.server.slice.SliceClientPermissions;

        $z0 = r0.<com.android.server.slice.SliceClientPermissions: boolean mHasFullAccess>;

        if $z0 != 0 goto label1;

        $r2 = r0.<com.android.server.slice.SliceClientPermissions: android.util.ArrayMap mAuths>;

        $z1 = virtualinvoke $r2.<android.util.ArrayMap: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        return;

     label1:
        r0.<com.android.server.slice.SliceClientPermissions: boolean mHasFullAccess> = 0;

        $r1 = r0.<com.android.server.slice.SliceClientPermissions: android.util.ArrayMap mAuths>;

        virtualinvoke $r1.<android.util.ArrayMap: void clear()>();

        virtualinvoke r0.<com.android.server.slice.SliceClientPermissions: void onPersistableDirty(com.android.server.slice.DirtyTracker$Persistable)>(r0);

        return;
    }

    public java.util.Collection getAuthorities()
    {
        com.android.server.slice.SliceClientPermissions r0;
        java.util.ArrayList $r1;
        android.util.ArrayMap $r2;
        java.util.Collection $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.slice.SliceClientPermissions;

        entermonitor r0;

     label1:
        $r1 = new java.util.ArrayList;

        $r2 = r0.<com.android.server.slice.SliceClientPermissions: android.util.ArrayMap mAuths>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.util.Collection values()>();

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

     label2:
        exitmonitor r0;

        return $r1;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public com.android.server.slice.SliceClientPermissions$SliceAuthority getAuthority(com.android.server.slice.SlicePermissionManager$PkgUser)
    {
        com.android.server.slice.SliceClientPermissions r0;
        android.util.ArrayMap $r1;
        java.lang.Object $r2;
        java.lang.Throwable $r3;
        com.android.server.slice.SlicePermissionManager$PkgUser r4;
        com.android.server.slice.SliceClientPermissions$SliceAuthority r5;

        r0 := @this: com.android.server.slice.SliceClientPermissions;

        r4 := @parameter0: com.android.server.slice.SlicePermissionManager$PkgUser;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.server.slice.SliceClientPermissions: android.util.ArrayMap mAuths>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (com.android.server.slice.SliceClientPermissions$SliceAuthority) $r2;

     label2:
        exitmonitor r0;

        return r5;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.String getFileName()
    {
        com.android.server.slice.SliceClientPermissions r0;
        com.android.server.slice.SlicePermissionManager$PkgUser $r1;
        java.lang.String $r2;

        r0 := @this: com.android.server.slice.SliceClientPermissions;

        $r1 = r0.<com.android.server.slice.SliceClientPermissions: com.android.server.slice.SlicePermissionManager$PkgUser mPkg>;

        $r2 = staticinvoke <com.android.server.slice.SliceClientPermissions: java.lang.String getFileName(com.android.server.slice.SlicePermissionManager$PkgUser)>($r1);

        return $r2;
    }

    public com.android.server.slice.SliceClientPermissions$SliceAuthority getOrCreateAuthority(com.android.server.slice.SlicePermissionManager$PkgUser, com.android.server.slice.SlicePermissionManager$PkgUser)
    {
        com.android.server.slice.SliceClientPermissions r0;
        com.android.server.slice.SlicePermissionManager$PkgUser r1, r9;
        com.android.server.slice.SliceClientPermissions$SliceAuthority r2, r10;
        android.util.ArrayMap $r3, $r6;
        java.lang.Object $r4;
        java.lang.String $r5;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.slice.SliceClientPermissions;

        r9 := @parameter0: com.android.server.slice.SlicePermissionManager$PkgUser;

        r1 := @parameter1: com.android.server.slice.SlicePermissionManager$PkgUser;

        entermonitor r0;

     label1:
        $r3 = r0.<com.android.server.slice.SliceClientPermissions: android.util.ArrayMap mAuths>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r9);

        r2 = (com.android.server.slice.SliceClientPermissions$SliceAuthority) $r4;

     label2:
        r10 = r2;

        if r2 != null goto label5;

     label3:
        r10 = new com.android.server.slice.SliceClientPermissions$SliceAuthority;

        $r5 = virtualinvoke r9.<com.android.server.slice.SlicePermissionManager$PkgUser: java.lang.String getPkg()>();

        specialinvoke r10.<com.android.server.slice.SliceClientPermissions$SliceAuthority: void <init>(java.lang.String,com.android.server.slice.SlicePermissionManager$PkgUser,com.android.server.slice.DirtyTracker)>($r5, r1, r0);

     label4:
        $r6 = r0.<com.android.server.slice.SliceClientPermissions: android.util.ArrayMap mAuths>;

        virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, r10);

        virtualinvoke r0.<com.android.server.slice.SliceClientPermissions: void onPersistableDirty(com.android.server.slice.DirtyTracker$Persistable)>(r10);

     label5:
        exitmonitor r0;

        return r10;

     label6:
        $r8 := @caughtexception;

        exitmonitor r0;

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public com.android.server.slice.SlicePermissionManager$PkgUser getPkg()
    {
        com.android.server.slice.SliceClientPermissions r0;
        com.android.server.slice.SlicePermissionManager$PkgUser $r1;

        r0 := @this: com.android.server.slice.SliceClientPermissions;

        $r1 = r0.<com.android.server.slice.SliceClientPermissions: com.android.server.slice.SlicePermissionManager$PkgUser mPkg>;

        return $r1;
    }

    public void grantUri(android.net.Uri, com.android.server.slice.SlicePermissionManager$PkgUser)
    {
        com.android.server.slice.SliceClientPermissions r0;
        android.net.Uri r1;
        com.android.server.slice.SlicePermissionManager$PkgUser r2, $r3;
        java.lang.String $r4;
        int $i0;
        com.android.server.slice.SliceClientPermissions$SliceAuthority $r5;
        java.util.List $r6;

        r0 := @this: com.android.server.slice.SliceClientPermissions;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: com.android.server.slice.SlicePermissionManager$PkgUser;

        $r3 = new com.android.server.slice.SlicePermissionManager$PkgUser;

        $r4 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        $i0 = virtualinvoke r2.<com.android.server.slice.SlicePermissionManager$PkgUser: int getUserId()>();

        specialinvoke $r3.<com.android.server.slice.SlicePermissionManager$PkgUser: void <init>(java.lang.String,int)>($r4, $i0);

        $r5 = virtualinvoke r0.<com.android.server.slice.SliceClientPermissions: com.android.server.slice.SliceClientPermissions$SliceAuthority getOrCreateAuthority(com.android.server.slice.SlicePermissionManager$PkgUser,com.android.server.slice.SlicePermissionManager$PkgUser)>($r3, r2);

        $r6 = virtualinvoke r1.<android.net.Uri: java.util.List getPathSegments()>();

        virtualinvoke $r5.<com.android.server.slice.SliceClientPermissions$SliceAuthority: void addPath(java.util.List)>($r6);

        return;
    }

    public boolean hasFullAccess()
    {
        com.android.server.slice.SliceClientPermissions r0;
        boolean $z0;

        r0 := @this: com.android.server.slice.SliceClientPermissions;

        $z0 = r0.<com.android.server.slice.SliceClientPermissions: boolean mHasFullAccess>;

        return $z0;
    }

    public boolean hasPermission(android.net.Uri, int)
    {
        com.android.server.slice.SliceClientPermissions r0;
        int i0;
        boolean z1, z2, z3;
        java.lang.String $r1, $r2;
        java.util.List $r3;
        java.lang.Throwable $r4;
        android.net.Uri r5;
        com.android.server.slice.SlicePermissionManager$PkgUser r6;
        com.android.server.slice.SliceClientPermissions$SliceAuthority r7;

        r0 := @this: com.android.server.slice.SliceClientPermissions;

        r5 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        entermonitor r0;

     label1:
        $r1 = virtualinvoke r5.<android.net.Uri: java.lang.String getScheme()>();

        z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>("content", $r1);

     label2:
        if z2 != 0 goto label3;

        exitmonitor r0;

        return 0;

     label3:
        r6 = new com.android.server.slice.SlicePermissionManager$PkgUser;

        $r2 = virtualinvoke r5.<android.net.Uri: java.lang.String getAuthority()>();

        specialinvoke r6.<com.android.server.slice.SlicePermissionManager$PkgUser: void <init>(java.lang.String,int)>($r2, i0);

        r7 = virtualinvoke r0.<com.android.server.slice.SliceClientPermissions: com.android.server.slice.SliceClientPermissions$SliceAuthority getAuthority(com.android.server.slice.SlicePermissionManager$PkgUser)>(r6);

     label4:
        z3 = 0;

        if r7 == null goto label7;

     label5:
        $r3 = virtualinvoke r5.<android.net.Uri: java.util.List getPathSegments()>();

        z1 = virtualinvoke r7.<com.android.server.slice.SliceClientPermissions$SliceAuthority: boolean hasPermission(java.util.List)>($r3);

     label6:
        z3 = 0;

        if z1 == 0 goto label7;

        z3 = 1;

     label7:
        exitmonitor r0;

        return z3;

     label8:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void onPersistableDirty(com.android.server.slice.DirtyTracker$Persistable)
    {
        com.android.server.slice.SliceClientPermissions r0;
        com.android.server.slice.DirtyTracker$Persistable r1;
        com.android.server.slice.DirtyTracker $r2;

        r0 := @this: com.android.server.slice.SliceClientPermissions;

        r1 := @parameter0: com.android.server.slice.DirtyTracker$Persistable;

        $r2 = r0.<com.android.server.slice.SliceClientPermissions: com.android.server.slice.DirtyTracker mTracker>;

        interfaceinvoke $r2.<com.android.server.slice.DirtyTracker: void onPersistableDirty(com.android.server.slice.DirtyTracker$Persistable)>(r0);

        return;
    }

    public void removeAuthority(java.lang.String, int)
    {
        com.android.server.slice.SliceClientPermissions r0;
        java.lang.String r1;
        int i0;
        com.android.server.slice.SlicePermissionManager$PkgUser $r2;
        android.util.ArrayMap $r3;
        java.lang.Object $r4;
        com.android.server.slice.DirtyTracker $r5;

        r0 := @this: com.android.server.slice.SliceClientPermissions;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.server.slice.SliceClientPermissions: android.util.ArrayMap mAuths>;

        $r2 = new com.android.server.slice.SlicePermissionManager$PkgUser;

        specialinvoke $r2.<com.android.server.slice.SlicePermissionManager$PkgUser: void <init>(java.lang.String,int)>(r1, i0);

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r2);

        if $r4 == null goto label1;

        $r5 = r0.<com.android.server.slice.SliceClientPermissions: com.android.server.slice.DirtyTracker mTracker>;

        interfaceinvoke $r5.<com.android.server.slice.DirtyTracker: void onPersistableDirty(com.android.server.slice.DirtyTracker$Persistable)>(r0);

     label1:
        return;
    }

    public void revokeUri(android.net.Uri, com.android.server.slice.SlicePermissionManager$PkgUser)
    {
        com.android.server.slice.SliceClientPermissions r0;
        android.net.Uri r1;
        com.android.server.slice.SlicePermissionManager$PkgUser r2, $r3;
        java.lang.String $r4;
        int $i0;
        com.android.server.slice.SliceClientPermissions$SliceAuthority $r5;
        java.util.List $r6;

        r0 := @this: com.android.server.slice.SliceClientPermissions;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: com.android.server.slice.SlicePermissionManager$PkgUser;

        $r3 = new com.android.server.slice.SlicePermissionManager$PkgUser;

        $r4 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        $i0 = virtualinvoke r2.<com.android.server.slice.SlicePermissionManager$PkgUser: int getUserId()>();

        specialinvoke $r3.<com.android.server.slice.SlicePermissionManager$PkgUser: void <init>(java.lang.String,int)>($r4, $i0);

        $r5 = virtualinvoke r0.<com.android.server.slice.SliceClientPermissions: com.android.server.slice.SliceClientPermissions$SliceAuthority getOrCreateAuthority(com.android.server.slice.SlicePermissionManager$PkgUser,com.android.server.slice.SlicePermissionManager$PkgUser)>($r3, r2);

        $r6 = virtualinvoke r1.<android.net.Uri: java.util.List getPathSegments()>();

        virtualinvoke $r5.<com.android.server.slice.SliceClientPermissions$SliceAuthority: void removePath(java.util.List)>($r6);

        return;
    }

    public void setHasFullAccess(boolean)
    {
        com.android.server.slice.SliceClientPermissions r0;
        boolean z0, $z1;
        com.android.server.slice.DirtyTracker $r1;

        r0 := @this: com.android.server.slice.SliceClientPermissions;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.slice.SliceClientPermissions: boolean mHasFullAccess>;

        if $z1 != z0 goto label1;

        return;

     label1:
        r0.<com.android.server.slice.SliceClientPermissions: boolean mHasFullAccess> = z0;

        $r1 = r0.<com.android.server.slice.SliceClientPermissions: com.android.server.slice.DirtyTracker mTracker>;

        interfaceinvoke $r1.<com.android.server.slice.DirtyTracker: void onPersistableDirty(com.android.server.slice.DirtyTracker$Persistable)>(r0);

        return;
    }

    public void writeTo(org.xmlpull.v1.XmlSerializer) throws java.io.IOException
    {
        com.android.server.slice.SliceClientPermissions r0;
        java.lang.String r1, $r2, $r5, $r6, $r10, $r12, $r15, $r18, $r21, $r25, $r30, r34;
        int i0, i1;
        com.android.server.slice.SlicePermissionManager$PkgUser $r4, $r24;
        boolean $z0;
        android.util.ArrayMap $r9, $r14, $r20, $r27;
        java.lang.Object $r16, $r22, $r28;
        com.android.server.slice.SliceClientPermissions$SliceAuthority $r17, $r23, $r29;
        java.lang.Throwable $r32;
        org.xmlpull.v1.XmlSerializer r33;

        r0 := @this: com.android.server.slice.SliceClientPermissions;

        r33 := @parameter0: org.xmlpull.v1.XmlSerializer;

        entermonitor r0;

     label01:
        $r2 = <com.android.server.slice.SliceClientPermissions: java.lang.String NAMESPACE>;

        interfaceinvoke r33.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>($r2, "client");

        $r5 = <com.android.server.slice.SliceClientPermissions: java.lang.String NAMESPACE>;

        $r4 = r0.<com.android.server.slice.SliceClientPermissions: com.android.server.slice.SlicePermissionManager$PkgUser mPkg>;

        $r6 = virtualinvoke $r4.<com.android.server.slice.SlicePermissionManager$PkgUser: java.lang.String toString()>();

        interfaceinvoke r33.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($r5, "pkg", $r6);

        r1 = <com.android.server.slice.SliceClientPermissions: java.lang.String NAMESPACE>;

        $z0 = r0.<com.android.server.slice.SliceClientPermissions: boolean mHasFullAccess>;

        if $z0 == 0 goto label03;

     label02:
        r34 = "1";

        goto label04;

     label03:
        r34 = "0";

     label04:
        interfaceinvoke r33.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(r1, "fullAccess", r34);

        $r9 = r0.<com.android.server.slice.SliceClientPermissions: android.util.ArrayMap mAuths>;

        i0 = virtualinvoke $r9.<android.util.ArrayMap: int size()>();

     label05:
        i1 = 0;

     label06:
        if i1 >= i0 goto label09;

     label07:
        $r12 = <com.android.server.slice.SliceClientPermissions: java.lang.String NAMESPACE>;

        interfaceinvoke r33.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>($r12, "authority");

        $r15 = <com.android.server.slice.SliceClientPermissions: java.lang.String NAMESPACE>;

        $r14 = r0.<com.android.server.slice.SliceClientPermissions: android.util.ArrayMap mAuths>;

        $r16 = virtualinvoke $r14.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        $r17 = (com.android.server.slice.SliceClientPermissions$SliceAuthority) $r16;

        $r18 = staticinvoke <com.android.server.slice.SliceClientPermissions$SliceAuthority: java.lang.String access$000(com.android.server.slice.SliceClientPermissions$SliceAuthority)>($r17);

        interfaceinvoke r33.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($r15, "authority", $r18);

        $r21 = <com.android.server.slice.SliceClientPermissions: java.lang.String NAMESPACE>;

        $r20 = r0.<com.android.server.slice.SliceClientPermissions: android.util.ArrayMap mAuths>;

        $r22 = virtualinvoke $r20.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        $r23 = (com.android.server.slice.SliceClientPermissions$SliceAuthority) $r22;

        $r24 = staticinvoke <com.android.server.slice.SliceClientPermissions$SliceAuthority: com.android.server.slice.SlicePermissionManager$PkgUser access$100(com.android.server.slice.SliceClientPermissions$SliceAuthority)>($r23);

        $r25 = virtualinvoke $r24.<com.android.server.slice.SlicePermissionManager$PkgUser: java.lang.String toString()>();

        interfaceinvoke r33.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($r21, "pkg", $r25);

        $r27 = r0.<com.android.server.slice.SliceClientPermissions: android.util.ArrayMap mAuths>;

        $r28 = virtualinvoke $r27.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        $r29 = (com.android.server.slice.SliceClientPermissions$SliceAuthority) $r28;

        virtualinvoke $r29.<com.android.server.slice.SliceClientPermissions$SliceAuthority: void writeTo(org.xmlpull.v1.XmlSerializer)>(r33);

        $r30 = <com.android.server.slice.SliceClientPermissions: java.lang.String NAMESPACE>;

        interfaceinvoke r33.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>($r30, "authority");

     label08:
        i1 = i1 + 1;

        goto label06;

     label09:
        $r10 = <com.android.server.slice.SliceClientPermissions: java.lang.String NAMESPACE>;

        interfaceinvoke r33.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>($r10, "client");

     label10:
        exitmonitor r0;

        return;

     label11:
        $r32 := @caughtexception;

        exitmonitor r0;

        throw $r32;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }
}
