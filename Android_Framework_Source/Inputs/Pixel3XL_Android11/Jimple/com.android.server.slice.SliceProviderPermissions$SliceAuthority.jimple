public class com.android.server.slice.SliceProviderPermissions$SliceAuthority extends java.lang.Object implements com.android.server.slice.DirtyTracker$Persistable
{
    private final java.lang.String mAuthority;
    private final android.util.ArraySet mPkgs;
    private final com.android.server.slice.DirtyTracker mTracker;

    public void <init>(java.lang.String, com.android.server.slice.DirtyTracker)
    {
        com.android.server.slice.SliceProviderPermissions$SliceAuthority r0;
        java.lang.String r1;
        com.android.server.slice.DirtyTracker r2;
        android.util.ArraySet $r3;

        r0 := @this: com.android.server.slice.SliceProviderPermissions$SliceAuthority;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.server.slice.DirtyTracker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.util.ArraySet;

        specialinvoke $r3.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.slice.SliceProviderPermissions$SliceAuthority: android.util.ArraySet mPkgs> = $r3;

        r0.<com.android.server.slice.SliceProviderPermissions$SliceAuthority: java.lang.String mAuthority> = r1;

        r0.<com.android.server.slice.SliceProviderPermissions$SliceAuthority: com.android.server.slice.DirtyTracker mTracker> = r2;

        return;
    }

    static java.lang.String access$000(com.android.server.slice.SliceProviderPermissions$SliceAuthority)
    {
        com.android.server.slice.SliceProviderPermissions$SliceAuthority r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.server.slice.SliceProviderPermissions$SliceAuthority;

        $r1 = r0.<com.android.server.slice.SliceProviderPermissions$SliceAuthority: java.lang.String mAuthority>;

        return $r1;
    }

    public void addPkg(com.android.server.slice.SlicePermissionManager$PkgUser)
    {
        com.android.server.slice.SliceProviderPermissions$SliceAuthority r0;
        android.util.ArraySet $r1;
        boolean $z0;
        com.android.server.slice.DirtyTracker $r2;
        java.lang.Throwable $r3;
        com.android.server.slice.SlicePermissionManager$PkgUser r4;

        r0 := @this: com.android.server.slice.SliceProviderPermissions$SliceAuthority;

        r4 := @parameter0: com.android.server.slice.SlicePermissionManager$PkgUser;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.server.slice.SliceProviderPermissions$SliceAuthority: android.util.ArraySet mPkgs>;

        $z0 = virtualinvoke $r1.<android.util.ArraySet: boolean add(java.lang.Object)>(r4);

        if $z0 == 0 goto label2;

        $r2 = r0.<com.android.server.slice.SliceProviderPermissions$SliceAuthority: com.android.server.slice.DirtyTracker mTracker>;

        interfaceinvoke $r2.<com.android.server.slice.DirtyTracker: void onPersistableDirty(com.android.server.slice.DirtyTracker$Persistable)>(r0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean equals(java.lang.Object)
    {
        com.android.server.slice.SliceProviderPermissions$SliceAuthority r0, r8;
        java.lang.Class r1, r7;
        boolean z0, $z1, $z2, z3;
        java.lang.String $r2, $r3;
        android.util.ArraySet $r4, $r5;
        java.lang.Object r6;

        r0 := @this: com.android.server.slice.SliceProviderPermissions$SliceAuthority;

        r6 := @parameter0: java.lang.Object;

        r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if r6 == null goto label1;

        r7 = virtualinvoke r6.<java.lang.Object: java.lang.Class getClass()>();

        goto label2;

     label1:
        r7 = null;

     label2:
        z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(r7);

        z3 = 0;

        if z0 != 0 goto label3;

        return 0;

     label3:
        r8 = (com.android.server.slice.SliceProviderPermissions$SliceAuthority) r6;

        $r3 = r0.<com.android.server.slice.SliceProviderPermissions$SliceAuthority: java.lang.String mAuthority>;

        $r2 = r8.<com.android.server.slice.SliceProviderPermissions$SliceAuthority: java.lang.String mAuthority>;

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r3, $r2);

        if $z1 == 0 goto label4;

        $r5 = r0.<com.android.server.slice.SliceProviderPermissions$SliceAuthority: android.util.ArraySet mPkgs>;

        $r4 = r8.<com.android.server.slice.SliceProviderPermissions$SliceAuthority: android.util.ArraySet mPkgs>;

        $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r5, $r4);

        if $z2 == 0 goto label4;

        z3 = 1;

        goto label4;

     label4:
        return z3;
    }

    public java.lang.String getAuthority()
    {
        com.android.server.slice.SliceProviderPermissions$SliceAuthority r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.slice.SliceProviderPermissions$SliceAuthority;

        $r1 = r0.<com.android.server.slice.SliceProviderPermissions$SliceAuthority: java.lang.String mAuthority>;

        return $r1;
    }

    public java.lang.String getFileName()
    {
        com.android.server.slice.SliceProviderPermissions$SliceAuthority r0;

        r0 := @this: com.android.server.slice.SliceProviderPermissions$SliceAuthority;

        return null;
    }

    public java.util.Collection getPkgs()
    {
        com.android.server.slice.SliceProviderPermissions$SliceAuthority r0;
        android.util.ArraySet $r1, $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.slice.SliceProviderPermissions$SliceAuthority;

        entermonitor r0;

     label1:
        $r1 = new android.util.ArraySet;

        $r2 = r0.<com.android.server.slice.SliceProviderPermissions$SliceAuthority: android.util.ArraySet mPkgs>;

        specialinvoke $r1.<android.util.ArraySet: void <init>(android.util.ArraySet)>($r2);

     label2:
        exitmonitor r0;

        return $r1;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void readFrom(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.slice.SliceProviderPermissions$SliceAuthority r0;
        int i0, $i2, $i3;
        android.util.ArraySet r1;
        com.android.server.slice.SlicePermissionManager$PkgUser r2;
        java.lang.String $r3, $r4, $r5;
        boolean $z0;
        java.lang.Throwable $r6;
        org.xmlpull.v1.XmlPullParser r7;

        r0 := @this: com.android.server.slice.SliceProviderPermissions$SliceAuthority;

        r7 := @parameter0: org.xmlpull.v1.XmlPullParser;

        entermonitor r0;

     label1:
        interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: int next()>();

        i0 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label2:
        $i2 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 < i0 goto label5;

        $i3 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i3 != 2 goto label3;

        $r3 = "pkg";

        $r4 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        r1 = r0.<com.android.server.slice.SliceProviderPermissions$SliceAuthority: android.util.ArraySet mPkgs>;

        r2 = new com.android.server.slice.SlicePermissionManager$PkgUser;

        $r5 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: java.lang.String nextText()>();

        specialinvoke r2.<com.android.server.slice.SlicePermissionManager$PkgUser: void <init>(java.lang.String)>($r5);

        virtualinvoke r1.<android.util.ArraySet: boolean add(java.lang.Object)>(r2);

     label3:
        interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: int next()>();

     label4:
        goto label2;

     label5:
        exitmonitor r0;

        return;

     label6:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
    }

    public void removePkg(com.android.server.slice.SlicePermissionManager$PkgUser)
    {
        com.android.server.slice.SliceProviderPermissions$SliceAuthority r0;
        android.util.ArraySet $r1;
        boolean $z0;
        com.android.server.slice.DirtyTracker $r2;
        java.lang.Throwable $r3;
        com.android.server.slice.SlicePermissionManager$PkgUser r4;

        r0 := @this: com.android.server.slice.SliceProviderPermissions$SliceAuthority;

        r4 := @parameter0: com.android.server.slice.SlicePermissionManager$PkgUser;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.server.slice.SliceProviderPermissions$SliceAuthority: android.util.ArraySet mPkgs>;

        $z0 = virtualinvoke $r1.<android.util.ArraySet: boolean remove(java.lang.Object)>(r4);

        if $z0 == 0 goto label2;

        $r2 = r0.<com.android.server.slice.SliceProviderPermissions$SliceAuthority: com.android.server.slice.DirtyTracker mTracker>;

        interfaceinvoke $r2.<com.android.server.slice.DirtyTracker: void onPersistableDirty(com.android.server.slice.DirtyTracker$Persistable)>(r0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.String toString()
    {
        com.android.server.slice.SliceProviderPermissions$SliceAuthority r0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r4, $r5;
        android.util.ArraySet $r3;

        r0 := @this: com.android.server.slice.SliceProviderPermissions$SliceAuthority;

        $r1 = newarray (java.lang.Object)[2];

        $r2 = r0.<com.android.server.slice.SliceProviderPermissions$SliceAuthority: java.lang.String mAuthority>;

        $r1[0] = $r2;

        $r3 = r0.<com.android.server.slice.SliceProviderPermissions$SliceAuthority: android.util.ArraySet mPkgs>;

        $r4 = virtualinvoke $r3.<android.util.ArraySet: java.lang.String toString()>();

        $r1[1] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("(%s: %s)", $r1);

        return $r5;
    }

    public void writeTo(org.xmlpull.v1.XmlSerializer) throws java.io.IOException
    {
        com.android.server.slice.SliceProviderPermissions$SliceAuthority r0;
        int i0, i1;
        android.util.ArraySet $r1, $r4;
        java.lang.String $r2, $r7, $r9;
        java.lang.Object $r5;
        com.android.server.slice.SlicePermissionManager$PkgUser $r6;
        java.lang.Throwable $r11;
        org.xmlpull.v1.XmlSerializer r12;

        r0 := @this: com.android.server.slice.SliceProviderPermissions$SliceAuthority;

        r12 := @parameter0: org.xmlpull.v1.XmlSerializer;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.server.slice.SliceProviderPermissions$SliceAuthority: android.util.ArraySet mPkgs>;

        i0 = virtualinvoke $r1.<android.util.ArraySet: int size()>();

     label2:
        i1 = 0;

     label3:
        if i1 >= i0 goto label6;

     label4:
        $r2 = staticinvoke <com.android.server.slice.SliceProviderPermissions: java.lang.String access$100()>();

        interfaceinvoke r12.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>($r2, "pkg");

        $r4 = r0.<com.android.server.slice.SliceProviderPermissions$SliceAuthority: android.util.ArraySet mPkgs>;

        $r5 = virtualinvoke $r4.<android.util.ArraySet: java.lang.Object valueAt(int)>(i1);

        $r6 = (com.android.server.slice.SlicePermissionManager$PkgUser) $r5;

        $r7 = virtualinvoke $r6.<com.android.server.slice.SlicePermissionManager$PkgUser: java.lang.String toString()>();

        interfaceinvoke r12.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r7);

        $r9 = staticinvoke <com.android.server.slice.SliceProviderPermissions: java.lang.String access$100()>();

        interfaceinvoke r12.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>($r9, "pkg");

     label5:
        i1 = i1 + 1;

        goto label3;

     label6:
        exitmonitor r0;

        return;

     label7:
        $r11 := @caughtexception;

        exitmonitor r0;

        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }
}
