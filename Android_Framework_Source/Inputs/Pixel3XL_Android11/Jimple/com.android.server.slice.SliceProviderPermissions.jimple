public class com.android.server.slice.SliceProviderPermissions extends java.lang.Object implements com.android.server.slice.DirtyTracker, com.android.server.slice.DirtyTracker$Persistable
{
    private static final java.lang.String ATTR_AUTHORITY;
    private static final java.lang.String ATTR_PKG;
    private static final java.lang.String NAMESPACE;
    private static final java.lang.String TAG;
    private static final java.lang.String TAG_AUTHORITY;
    private static final java.lang.String TAG_PKG;
    static final java.lang.String TAG_PROVIDER;
    private final android.util.ArrayMap mAuths;
    private final com.android.server.slice.SlicePermissionManager$PkgUser mPkg;
    private final com.android.server.slice.DirtyTracker mTracker;

    static void <clinit>()
    {
        <com.android.server.slice.SliceProviderPermissions: java.lang.String TAG_PROVIDER> = "provider";

        <com.android.server.slice.SliceProviderPermissions: java.lang.String TAG_PKG> = "pkg";

        <com.android.server.slice.SliceProviderPermissions: java.lang.String TAG_AUTHORITY> = "authority";

        <com.android.server.slice.SliceProviderPermissions: java.lang.String TAG> = "SliceProviderPermissions";

        <com.android.server.slice.SliceProviderPermissions: java.lang.String ATTR_PKG> = "pkg";

        <com.android.server.slice.SliceProviderPermissions: java.lang.String ATTR_AUTHORITY> = "authority";

        <com.android.server.slice.SliceProviderPermissions: java.lang.String NAMESPACE> = null;

        return;
    }

    public void <init>(com.android.server.slice.SlicePermissionManager$PkgUser, com.android.server.slice.DirtyTracker)
    {
        com.android.server.slice.SliceProviderPermissions r0;
        com.android.server.slice.SlicePermissionManager$PkgUser r1;
        com.android.server.slice.DirtyTracker r2;
        android.util.ArrayMap $r3;

        r0 := @this: com.android.server.slice.SliceProviderPermissions;

        r1 := @parameter0: com.android.server.slice.SlicePermissionManager$PkgUser;

        r2 := @parameter1: com.android.server.slice.DirtyTracker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.slice.SliceProviderPermissions: android.util.ArrayMap mAuths> = $r3;

        r0.<com.android.server.slice.SliceProviderPermissions: com.android.server.slice.SlicePermissionManager$PkgUser mPkg> = r1;

        r0.<com.android.server.slice.SliceProviderPermissions: com.android.server.slice.DirtyTracker mTracker> = r2;

        return;
    }

    static java.lang.String access$100()
    {
        java.lang.String $r0;

        $r0 = <com.android.server.slice.SliceProviderPermissions: java.lang.String NAMESPACE>;

        return $r0;
    }

    public static com.android.server.slice.SliceProviderPermissions createFrom(org.xmlpull.v1.XmlPullParser, com.android.server.slice.DirtyTracker) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        int i0, $i1, $i4, $i5;
        java.lang.String $r1, $r2, $r5, $r6, $r7, $r8, $r9, $r10, $r12;
        boolean $z0, $z1;
        com.android.server.slice.SliceProviderPermissions $r3;
        com.android.server.slice.SlicePermissionManager$PkgUser $r4;
        android.util.ArrayMap $r11;
        java.lang.Throwable $r14;
        com.android.server.slice.DirtyTracker r15;
        com.android.server.slice.SliceProviderPermissions$SliceAuthority r17;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r15 := @parameter1: com.android.server.slice.DirtyTracker;

     label1:
        $i1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i1 != 2 goto label9;

        $r1 = "provider";

        $r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label2;

        goto label9;

     label2:
        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        $r3 = new com.android.server.slice.SliceProviderPermissions;

        $r4 = new com.android.server.slice.SlicePermissionManager$PkgUser;

        $r5 = <com.android.server.slice.SliceProviderPermissions: java.lang.String NAMESPACE>;

        $r6 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>($r5, "pkg");

        specialinvoke $r4.<com.android.server.slice.SlicePermissionManager$PkgUser: void <init>(java.lang.String)>($r6);

        specialinvoke $r3.<com.android.server.slice.SliceProviderPermissions: void <init>(com.android.server.slice.SlicePermissionManager$PkgUser,com.android.server.slice.DirtyTracker)>($r4, r15);

        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

     label3:
        $i4 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i4 <= i0 goto label8;

        $i5 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i5 != 2 goto label7;

        $r7 = "authority";

        $r8 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label7;

     label4:
        r17 = new com.android.server.slice.SliceProviderPermissions$SliceAuthority;

        $r9 = <com.android.server.slice.SliceProviderPermissions: java.lang.String NAMESPACE>;

        $r10 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>($r9, "authority");

        specialinvoke r17.<com.android.server.slice.SliceProviderPermissions$SliceAuthority: void <init>(java.lang.String,com.android.server.slice.DirtyTracker)>($r10, $r3);

        virtualinvoke r17.<com.android.server.slice.SliceProviderPermissions$SliceAuthority: void readFrom(org.xmlpull.v1.XmlPullParser)>(r0);

        $r11 = $r3.<com.android.server.slice.SliceProviderPermissions: android.util.ArrayMap mAuths>;

        $r12 = virtualinvoke r17.<com.android.server.slice.SliceProviderPermissions$SliceAuthority: java.lang.String getAuthority()>();

        virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, r17);

     label5:
        goto label7;

     label6:
        $r14 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SliceProviderPermissions", "Couldn\'t read PkgUser", $r14);

     label7:
        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label3;

     label8:
        return $r3;

     label9:
        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label1;

        catch java.lang.IllegalArgumentException from label4 to label5 with label6;
    }

    public static java.lang.String getFileName(com.android.server.slice.SlicePermissionManager$PkgUser)
    {
        com.android.server.slice.SlicePermissionManager$PkgUser r0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r3;

        r0 := @parameter0: com.android.server.slice.SlicePermissionManager$PkgUser;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = virtualinvoke r0.<com.android.server.slice.SlicePermissionManager$PkgUser: java.lang.String toString()>();

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("provider_%s", $r1);

        return $r3;
    }

    public java.util.Collection getAuthorities()
    {
        com.android.server.slice.SliceProviderPermissions r0;
        java.util.ArrayList $r1;
        android.util.ArrayMap $r2;
        java.util.Collection $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.slice.SliceProviderPermissions;

        entermonitor r0;

     label1:
        $r1 = new java.util.ArrayList;

        $r2 = r0.<com.android.server.slice.SliceProviderPermissions: android.util.ArrayMap mAuths>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.util.Collection values()>();

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

     label2:
        exitmonitor r0;

        return $r1;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.String getFileName()
    {
        com.android.server.slice.SliceProviderPermissions r0;
        com.android.server.slice.SlicePermissionManager$PkgUser $r1;
        java.lang.String $r2;

        r0 := @this: com.android.server.slice.SliceProviderPermissions;

        $r1 = r0.<com.android.server.slice.SliceProviderPermissions: com.android.server.slice.SlicePermissionManager$PkgUser mPkg>;

        $r2 = staticinvoke <com.android.server.slice.SliceProviderPermissions: java.lang.String getFileName(com.android.server.slice.SlicePermissionManager$PkgUser)>($r1);

        return $r2;
    }

    public com.android.server.slice.SliceProviderPermissions$SliceAuthority getOrCreateAuthority(java.lang.String)
    {
        com.android.server.slice.SliceProviderPermissions r0;
        com.android.server.slice.SliceProviderPermissions$SliceAuthority r1, r8;
        android.util.ArrayMap $r2, $r4;
        java.lang.Object $r3;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: com.android.server.slice.SliceProviderPermissions;

        r7 := @parameter0: java.lang.String;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.slice.SliceProviderPermissions: android.util.ArrayMap mAuths>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r7);

        r1 = (com.android.server.slice.SliceProviderPermissions$SliceAuthority) $r3;

     label2:
        r8 = r1;

        if r1 != null goto label5;

     label3:
        r8 = new com.android.server.slice.SliceProviderPermissions$SliceAuthority;

        specialinvoke r8.<com.android.server.slice.SliceProviderPermissions$SliceAuthority: void <init>(java.lang.String,com.android.server.slice.DirtyTracker)>(r7, r0);

     label4:
        $r4 = r0.<com.android.server.slice.SliceProviderPermissions: android.util.ArrayMap mAuths>;

        virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r8);

        virtualinvoke r0.<com.android.server.slice.SliceProviderPermissions: void onPersistableDirty(com.android.server.slice.DirtyTracker$Persistable)>(r8);

     label5:
        exitmonitor r0;

        return r8;

     label6:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public com.android.server.slice.SlicePermissionManager$PkgUser getPkg()
    {
        com.android.server.slice.SliceProviderPermissions r0;
        com.android.server.slice.SlicePermissionManager$PkgUser $r1;

        r0 := @this: com.android.server.slice.SliceProviderPermissions;

        $r1 = r0.<com.android.server.slice.SliceProviderPermissions: com.android.server.slice.SlicePermissionManager$PkgUser mPkg>;

        return $r1;
    }

    public void onPersistableDirty(com.android.server.slice.DirtyTracker$Persistable)
    {
        com.android.server.slice.SliceProviderPermissions r0;
        com.android.server.slice.DirtyTracker$Persistable r1;
        com.android.server.slice.DirtyTracker $r2;

        r0 := @this: com.android.server.slice.SliceProviderPermissions;

        r1 := @parameter0: com.android.server.slice.DirtyTracker$Persistable;

        $r2 = r0.<com.android.server.slice.SliceProviderPermissions: com.android.server.slice.DirtyTracker mTracker>;

        interfaceinvoke $r2.<com.android.server.slice.DirtyTracker: void onPersistableDirty(com.android.server.slice.DirtyTracker$Persistable)>(r0);

        return;
    }

    public void writeTo(org.xmlpull.v1.XmlSerializer) throws java.io.IOException
    {
        com.android.server.slice.SliceProviderPermissions r0;
        int i0, i1;
        java.lang.String $r1, $r4, $r5, $r8, $r10, $r13, $r16, $r21;
        com.android.server.slice.SlicePermissionManager$PkgUser $r3;
        android.util.ArrayMap $r7, $r12, $r18;
        java.lang.Object $r14, $r19;
        com.android.server.slice.SliceProviderPermissions$SliceAuthority $r15, $r20;
        java.lang.Throwable $r23;
        org.xmlpull.v1.XmlSerializer r24;

        r0 := @this: com.android.server.slice.SliceProviderPermissions;

        r24 := @parameter0: org.xmlpull.v1.XmlSerializer;

        entermonitor r0;

     label1:
        $r1 = <com.android.server.slice.SliceProviderPermissions: java.lang.String NAMESPACE>;

        interfaceinvoke r24.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>($r1, "provider");

        $r4 = <com.android.server.slice.SliceProviderPermissions: java.lang.String NAMESPACE>;

        $r3 = r0.<com.android.server.slice.SliceProviderPermissions: com.android.server.slice.SlicePermissionManager$PkgUser mPkg>;

        $r5 = virtualinvoke $r3.<com.android.server.slice.SlicePermissionManager$PkgUser: java.lang.String toString()>();

        interfaceinvoke r24.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($r4, "pkg", $r5);

        $r7 = r0.<com.android.server.slice.SliceProviderPermissions: android.util.ArrayMap mAuths>;

        i0 = virtualinvoke $r7.<android.util.ArrayMap: int size()>();

     label2:
        i1 = 0;

     label3:
        if i1 >= i0 goto label6;

     label4:
        $r10 = <com.android.server.slice.SliceProviderPermissions: java.lang.String NAMESPACE>;

        interfaceinvoke r24.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>($r10, "authority");

        $r13 = <com.android.server.slice.SliceProviderPermissions: java.lang.String NAMESPACE>;

        $r12 = r0.<com.android.server.slice.SliceProviderPermissions: android.util.ArrayMap mAuths>;

        $r14 = virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        $r15 = (com.android.server.slice.SliceProviderPermissions$SliceAuthority) $r14;

        $r16 = staticinvoke <com.android.server.slice.SliceProviderPermissions$SliceAuthority: java.lang.String access$000(com.android.server.slice.SliceProviderPermissions$SliceAuthority)>($r15);

        interfaceinvoke r24.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($r13, "authority", $r16);

        $r18 = r0.<com.android.server.slice.SliceProviderPermissions: android.util.ArrayMap mAuths>;

        $r19 = virtualinvoke $r18.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        $r20 = (com.android.server.slice.SliceProviderPermissions$SliceAuthority) $r19;

        virtualinvoke $r20.<com.android.server.slice.SliceProviderPermissions$SliceAuthority: void writeTo(org.xmlpull.v1.XmlSerializer)>(r24);

        $r21 = <com.android.server.slice.SliceProviderPermissions: java.lang.String NAMESPACE>;

        interfaceinvoke r24.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>($r21, "authority");

     label5:
        i1 = i1 + 1;

        goto label3;

     label6:
        $r8 = <com.android.server.slice.SliceProviderPermissions: java.lang.String NAMESPACE>;

        interfaceinvoke r24.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>($r8, "provider");

     label7:
        exitmonitor r0;

        return;

     label8:
        $r23 := @caughtexception;

        exitmonitor r0;

        throw $r23;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }
}
