public class com.android.server.slice.SliceShellCommand extends android.os.ShellCommand
{
    private final com.android.server.slice.SliceManagerService mService;

    public void <init>(com.android.server.slice.SliceManagerService)
    {
        com.android.server.slice.SliceShellCommand r0;
        com.android.server.slice.SliceManagerService r1;

        r0 := @this: com.android.server.slice.SliceShellCommand;

        r1 := @parameter0: com.android.server.slice.SliceManagerService;

        specialinvoke r0.<android.os.ShellCommand: void <init>()>();

        r0.<com.android.server.slice.SliceShellCommand: com.android.server.slice.SliceManagerService mService> = r1;

        return;
    }

    private int runGetPermissions(java.lang.String)
    {
        com.android.server.slice.SliceShellCommand r0;
        long l0;
        int i1, $i2, $i3, $i4, i5;
        com.android.server.slice.SliceManagerService $r1, $r31;
        android.net.Uri$Builder $r2, $r3, r21;
        java.lang.String $r4, $r6, $r11, $r12, $r16, r19, r33;
        android.content.ContentResolver $r5, $r7;
        boolean $z0, $z1, $z3;
        android.content.pm.PackageManager $r8;
        java.util.List $r9;
        java.lang.Object $r10;
        java.io.PrintWriter $r13, $r17, r23, r27;
        java.lang.Throwable $r18;
        android.content.Context r20;
        android.net.Uri r22;
        java.lang.StringBuilder r24;
        android.os.Bundle r25;
        java.lang.String[] r26, r32;
        android.util.ArraySet r28;
        java.util.Iterator r29;
        android.content.pm.PackageInfo r30;

        r0 := @this: com.android.server.slice.SliceShellCommand;

        r19 := @parameter0: java.lang.String;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i2 == 2000 goto label01;

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i4 == 0 goto label01;

        $r17 = virtualinvoke r0.<com.android.server.slice.SliceShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        virtualinvoke $r17.<java.io.PrintWriter: void println(java.lang.String)>("Only shell can get permissions");

        return -1;

     label01:
        $r1 = r0.<com.android.server.slice.SliceShellCommand: com.android.server.slice.SliceManagerService mService>;

        r20 = virtualinvoke $r1.<com.android.server.slice.SliceManagerService: android.content.Context getContext()>();

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        r21 = new android.net.Uri$Builder;

        specialinvoke r21.<android.net.Uri$Builder: void <init>()>();

        $r2 = virtualinvoke r21.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("content");

        $r3 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>(r19);

        r22 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri build()>();

        $r4 = "vnd.android.slice";

        $r5 = virtualinvoke r20.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r6 = virtualinvoke $r5.<android.content.ContentResolver: java.lang.String getType(android.net.Uri)>(r22);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label04;

        r23 = virtualinvoke r0.<com.android.server.slice.SliceShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a slice provider");

        $r16 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r23.<java.io.PrintWriter: void println(java.lang.String)>($r16);

     label03:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return -1;

     label04:
        $r7 = virtualinvoke r20.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r25 = virtualinvoke $r7.<android.content.ContentResolver: android.os.Bundle call(android.net.Uri,java.lang.String,java.lang.String,android.os.Bundle)>(r22, "get_permissions", null, null);

     label05:
        if r25 != null goto label08;

     label06:
        $r13 = virtualinvoke r0.<com.android.server.slice.SliceShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        virtualinvoke $r13.<java.io.PrintWriter: void println(java.lang.String)>("An error occurred getting permissions");

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return -1;

     label08:
        r26 = virtualinvoke r25.<android.os.Bundle: java.lang.String[] getStringArray(java.lang.String)>("result");

        r27 = virtualinvoke r0.<com.android.server.slice.SliceShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        r28 = new android.util.ArraySet;

        specialinvoke r28.<android.util.ArraySet: void <init>()>();

     label09:
        if r26 == null goto label14;

     label10:
        $i3 = lengthof r26;

        if $i3 == 0 goto label14;

     label11:
        $r8 = virtualinvoke r20.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r9 = virtualinvoke $r8.<android.content.pm.PackageManager: java.util.List getPackagesHoldingPermissions(java.lang.String[],int)>(r26, 0);

        r29 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $z3 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label14;

        $r10 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>();

        r30 = (android.content.pm.PackageInfo) $r10;

        $r11 = r30.<android.content.pm.PackageInfo: java.lang.String packageName>;

        virtualinvoke r27.<java.io.PrintWriter: void println(java.lang.String)>($r11);

        $r12 = r30.<android.content.pm.PackageInfo: java.lang.String packageName>;

        interfaceinvoke r28.<java.util.Set: boolean add(java.lang.Object)>($r12);

     label13:
        goto label12;

     label14:
        $r31 = r0.<com.android.server.slice.SliceShellCommand: com.android.server.slice.SliceManagerService mService>;

        r32 = virtualinvoke $r31.<com.android.server.slice.SliceManagerService: java.lang.String[] getAllPackagesGranted(java.lang.String)>(r19);

        i1 = lengthof r32;

     label15:
        i5 = 0;

     label16:
        if i5 >= i1 goto label19;

        r33 = r32[i5];

     label17:
        $z1 = interfaceinvoke r28.<java.util.Set: boolean contains(java.lang.Object)>(r33);

        if $z1 != 0 goto label18;

        virtualinvoke r27.<java.io.PrintWriter: void println(java.lang.String)>(r33);

        interfaceinvoke r28.<java.util.Set: boolean add(java.lang.Object)>(r33);

     label18:
        i5 = i5 + 1;

        goto label16;

     label19:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 0;

     label20:
        $r18 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r18;

        catch java.lang.Throwable from label02 to label03 with label20;
        catch java.lang.Throwable from label04 to label05 with label20;
        catch java.lang.Throwable from label06 to label07 with label20;
        catch java.lang.Throwable from label08 to label09 with label20;
        catch java.lang.Throwable from label10 to label11 with label20;
        catch java.lang.Throwable from label11 to label12 with label20;
        catch java.lang.Throwable from label12 to label13 with label20;
        catch java.lang.Throwable from label14 to label15 with label20;
        catch java.lang.Throwable from label17 to label18 with label20;
    }

    public int onCommand(java.lang.String)
    {
        com.android.server.slice.SliceShellCommand r0;
        java.lang.String r1, $r2;
        int $i0, $i1, $i2;
        boolean $z0;
        byte b3;

        r0 := @this: com.android.server.slice.SliceShellCommand;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $i2 = virtualinvoke r0.<com.android.server.slice.SliceShellCommand: int handleDefaultCommands(java.lang.String)>(r1);

        return $i2;

     label1:
        b3 = -1;

        $i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        if $i0 == -185318259 goto label3;

     label2:
        goto label4;

     label3:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("get-permissions");

        if $z0 == 0 goto label2;

        b3 = 0;

     label4:
        if b3 == 0 goto label5;

        return 0;

     label5:
        $r2 = virtualinvoke r0.<com.android.server.slice.SliceShellCommand: java.lang.String getNextArgRequired()>();

        $i1 = specialinvoke r0.<com.android.server.slice.SliceShellCommand: int runGetPermissions(java.lang.String)>($r2);

        return $i1;
    }

    public void onHelp()
    {
        com.android.server.slice.SliceShellCommand r0;
        java.io.PrintWriter r1;

        r0 := @this: com.android.server.slice.SliceShellCommand;

        r1 = virtualinvoke r0.<com.android.server.slice.SliceShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Status bar commands:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  help");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Print this help text.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  get-permissions <authority>");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    List the pkgs that have permission to an authority.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        return;
    }
}
