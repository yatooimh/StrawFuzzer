public class com.android.server.soundtrigger.SoundTriggerHelper extends java.lang.Object implements android.hardware.soundtrigger.SoundTrigger$StatusListener
{
    private static final int CALL_INACTIVE_MSG_DELAY_MS;
    static final boolean DBG;
    private static final int INVALID_VALUE;
    private static final int MSG_CALL_STATE_CHANGED;
    public static final int STATUS_ERROR;
    public static final int STATUS_OK;
    static final java.lang.String TAG;
    private boolean mCallActive;
    private final android.content.Context mContext;
    private final android.os.Handler mHandler;
    private boolean mIsPowerSaveMode;
    private java.util.HashMap mKeyphraseUuidMap;
    private final java.lang.Object mLock;
    private final java.util.HashMap mModelDataMap;
    private android.hardware.soundtrigger.SoundTriggerModule mModule;
    final android.hardware.soundtrigger.SoundTrigger$ModuleProperties mModuleProperties;
    private final android.telephony.PhoneStateListener mPhoneStateListener;
    private final android.os.PowerManager mPowerManager;
    private com.android.server.soundtrigger.SoundTriggerHelper$PowerSaveModeListener mPowerSaveModeListener;
    private boolean mRecognitionRequested;
    private boolean mServiceDisabled;
    private final android.telephony.TelephonyManager mTelephonyManager;

    void <init>(android.content.Context)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        int i0, $i1, $i3;
        java.lang.Object $r1, $r3, $r5, $r17;
        java.util.ArrayList $r2;
        android.telephony.TelephonyManager $r4;
        android.os.PowerManager $r6;
        java.util.HashMap $r7, $r8;
        com.android.server.soundtrigger.SoundTriggerHelper$MyCallStateListener $r9;
        java.lang.StringBuilder $r10;
        java.lang.String $r15;
        com.android.server.soundtrigger.SoundTriggerHelper$1 $r16;
        android.hardware.soundtrigger.SoundTrigger$ModuleProperties $r18;
        android.content.Context r19;
        android.os.Looper r22, r23;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        r19 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.lang.Object mLock> = $r1;

        r0.<com.android.server.soundtrigger.SoundTriggerHelper: boolean mCallActive> = 0;

        r0.<com.android.server.soundtrigger.SoundTriggerHelper: boolean mIsPowerSaveMode> = 0;

        r0.<com.android.server.soundtrigger.SoundTriggerHelper: boolean mServiceDisabled> = 0;

        r0.<com.android.server.soundtrigger.SoundTriggerHelper: boolean mRecognitionRequested> = 0;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        i0 = staticinvoke <android.hardware.soundtrigger.SoundTrigger: int listModules(java.util.ArrayList)>($r2);

        r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.content.Context mContext> = r19;

        $r3 = virtualinvoke r19.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r4 = (android.telephony.TelephonyManager) $r3;

        r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.telephony.TelephonyManager mTelephonyManager> = $r4;

        $r5 = virtualinvoke r19.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        $r6 = (android.os.PowerManager) $r5;

        r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.os.PowerManager mPowerManager> = $r6;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.util.HashMap mModelDataMap> = $r7;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.util.HashMap mKeyphraseUuidMap> = $r8;

        $r9 = new com.android.server.soundtrigger.SoundTriggerHelper$MyCallStateListener;

        specialinvoke $r9.<com.android.server.soundtrigger.SoundTriggerHelper$MyCallStateListener: void <init>(com.android.server.soundtrigger.SoundTriggerHelper)>(r0);

        r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.telephony.PhoneStateListener mPhoneStateListener> = $r9;

        if i0 != 0 goto label2;

        $i3 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i3 != 0 goto label1;

        goto label2;

     label1:
        $r17 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r18 = (android.hardware.soundtrigger.SoundTrigger$ModuleProperties) $r17;

        r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTrigger$ModuleProperties mModuleProperties> = $r18;

        goto label3;

     label2:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("listModules status=");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", # of modules=");

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r15 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", $r15);

        r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTrigger$ModuleProperties mModuleProperties> = null;

        r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTriggerModule mModule> = null;

     label3:
        r22 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        r23 = r22;

        if r22 != null goto label4;

        r23 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

     label4:
        if r23 == null goto label5;

        $r16 = new com.android.server.soundtrigger.SoundTriggerHelper$1;

        specialinvoke $r16.<com.android.server.soundtrigger.SoundTriggerHelper$1: void <init>(com.android.server.soundtrigger.SoundTriggerHelper,android.os.Looper)>(r0, r23);

        r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.os.Handler mHandler> = $r16;

        goto label6;

     label5:
        r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.os.Handler mHandler> = null;

     label6:
        return;
    }

    static java.lang.Object access$000(com.android.server.soundtrigger.SoundTriggerHelper)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.soundtrigger.SoundTriggerHelper;

        $r1 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.lang.Object mLock>;

        return $r1;
    }

    static void access$100(com.android.server.soundtrigger.SoundTriggerHelper, boolean)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        boolean z0;

        r0 := @parameter0: com.android.server.soundtrigger.SoundTriggerHelper;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: void onCallStateChangedLocked(boolean)>(z0);

        return;
    }

    static android.os.Handler access$200(com.android.server.soundtrigger.SoundTriggerHelper)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.soundtrigger.SoundTriggerHelper;

        $r1 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.os.Handler mHandler>;

        return $r1;
    }

    static android.os.PowerManager access$300(com.android.server.soundtrigger.SoundTriggerHelper)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        android.os.PowerManager $r1;

        r0 := @parameter0: com.android.server.soundtrigger.SoundTriggerHelper;

        $r1 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.os.PowerManager mPowerManager>;

        return $r1;
    }

    static void access$400(com.android.server.soundtrigger.SoundTriggerHelper, boolean)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        boolean z0;

        r0 := @parameter0: com.android.server.soundtrigger.SoundTriggerHelper;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: void onPowerSaveModeChangedLocked(boolean)>(z0);

        return;
    }

    private int cleanUpExistingKeyphraseModelLocked(com.android.server.soundtrigger.SoundTriggerHelper$ModelData)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        com.android.server.soundtrigger.SoundTriggerHelper$ModelData r1;
        int i0;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r7;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        r1 := @parameter0: com.android.server.soundtrigger.SoundTriggerHelper$ModelData;

        i0 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: int tryStopAndUnloadLocked(com.android.server.soundtrigger.SoundTriggerHelper$ModelData,boolean,boolean)>(r1, 1, 1);

        if i0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to stop or unload previous model: ");

        $r5 = virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: java.lang.String toString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", $r7);

     label1:
        return i0;
    }

    private boolean computeRecognitionRequestedLocked()
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        java.util.Iterator r1;
        android.hardware.soundtrigger.SoundTrigger$ModuleProperties $r2;
        android.hardware.soundtrigger.SoundTriggerModule $r3;
        java.util.HashMap $r4;
        java.util.Collection $r5;
        boolean $z0, $z1;
        java.lang.Object $r6;
        com.android.server.soundtrigger.SoundTriggerHelper$ModelData $r7;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        $r2 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTrigger$ModuleProperties mModuleProperties>;

        if $r2 == null goto label5;

        $r3 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTriggerModule mModule>;

        if $r3 != null goto label1;

        goto label5;

     label1:
        $r4 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.util.HashMap mModelDataMap>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (com.android.server.soundtrigger.SoundTriggerHelper$ModelData) $r6;

        $z1 = virtualinvoke $r7.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: boolean isRequested()>();

        if $z1 == 0 goto label3;

        r0.<com.android.server.soundtrigger.SoundTriggerHelper: boolean mRecognitionRequested> = 1;

        return 1;

     label3:
        goto label2;

     label4:
        r0.<com.android.server.soundtrigger.SoundTriggerHelper: boolean mRecognitionRequested> = 0;

        return 0;

     label5:
        r0.<com.android.server.soundtrigger.SoundTriggerHelper: boolean mRecognitionRequested> = 0;

        return 0;
    }

    private com.android.server.soundtrigger.SoundTriggerHelper$ModelData createKeyphraseModelDataLocked(java.util.UUID, int)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        java.util.UUID r1;
        int i0;
        com.android.server.soundtrigger.SoundTriggerHelper$ModelData r2;
        java.util.HashMap $r3, $r6, $r8, $r11;
        java.lang.Integer $r4, $r9;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        r1 := @parameter0: java.util.UUID;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.util.HashMap mKeyphraseUuidMap>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r4);

        $r6 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.util.HashMap mModelDataMap>;

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        $r8 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.util.HashMap mKeyphraseUuidMap>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, r1);

        r2 = staticinvoke <com.android.server.soundtrigger.SoundTriggerHelper$ModelData: com.android.server.soundtrigger.SoundTriggerHelper$ModelData createKeyphraseModelData(java.util.UUID)>(r1);

        $r11 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.util.HashMap mModelDataMap>;

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return r2;
    }

    private void dumpModelStateLocked()
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        java.util.Iterator r1;
        com.android.server.soundtrigger.SoundTriggerHelper$ModelData r2;
        java.util.HashMap $r3, $r6;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5, $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r10, $r12;
        java.util.UUID r13;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        $r3 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.util.HashMap mModelDataMap>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Set keySet()>();

        r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r13 = (java.util.UUID) $r5;

        $r6 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.util.HashMap mModelDataMap>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r13);

        r2 = (com.android.server.soundtrigger.SoundTriggerHelper$ModelData) $r7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Model :");

        $r10 = virtualinvoke r2.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: java.lang.String toString()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SoundTriggerHelper", $r12);

        goto label1;

     label2:
        return;
    }

    private void forceStopAndUnloadModelLocked(com.android.server.soundtrigger.SoundTriggerHelper$ModelData, java.lang.Exception)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        com.android.server.soundtrigger.SoundTriggerHelper$ModelData r1;
        java.lang.Exception r2;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        r1 := @parameter0: com.android.server.soundtrigger.SoundTriggerHelper$ModelData;

        r2 := @parameter1: java.lang.Exception;

        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: void forceStopAndUnloadModelLocked(com.android.server.soundtrigger.SoundTriggerHelper$ModelData,java.lang.Exception,java.util.Iterator)>(r1, r2, null);

        return;
    }

    private void forceStopAndUnloadModelLocked(com.android.server.soundtrigger.SoundTriggerHelper$ModelData, java.lang.Exception, java.util.Iterator)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        com.android.server.soundtrigger.SoundTriggerHelper$ModelData r1;
        java.util.Iterator r2, r35;
        android.hardware.soundtrigger.SoundTriggerModule $r3, $r8, $r26;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r4, $r9, $r22, $r27;
        int $i0, $i2, $i3, $i4, $i6, $i8, $i9, $i10;
        java.lang.String $r7, $r12, $r25, $r30;
        java.util.HashMap $r13, $r16;
        java.util.UUID $r14, $r21;
        java.util.Set $r17;
        java.lang.Object $r18, $r20;
        java.util.Map$Entry $r19;
        java.lang.Exception r31;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        r1 := @parameter0: com.android.server.soundtrigger.SoundTriggerHelper$ModelData;

        r31 := @parameter1: java.lang.Exception;

        r2 := @parameter2: java.util.Iterator;

        if r31 == null goto label01;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SoundTriggerHelper", "forceStopAndUnloadModel", r31);

     label01:
        $r3 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTriggerModule mModule>;

        if $r3 != null goto label02;

        return;

     label02:
        $z0 = virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: boolean isModelStarted()>();

        if $z0 == 0 goto label04;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stopping previously started dangling model ");

        $i6 = virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: int getHandle()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("SoundTriggerHelper", $r25);

        $r26 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTriggerModule mModule>;

        $i8 = virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: int getHandle()>();

        $i9 = virtualinvoke $r26.<android.hardware.soundtrigger.SoundTriggerModule: int stopRecognition(int)>($i8);

        if $i9 == 0 goto label03;

        virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: void setStopped()>();

        virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: void setRequested(boolean)>(0);

        goto label04;

     label03:
        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to stop model ");

        $i10 = virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: int getHandle()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SoundTriggerHelper", $r30);

     label04:
        $z2 = virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: boolean isModelLoaded()>();

        if $z2 == 0 goto label11;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unloading previously loaded dangling model ");

        $i0 = virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: int getHandle()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("SoundTriggerHelper", $r7);

        $r8 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTriggerModule mModule>;

        $i2 = virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: int getHandle()>();

        $i3 = virtualinvoke $r8.<android.hardware.soundtrigger.SoundTriggerModule: int unloadSoundModel(int)>($i2);

        if $i3 != 0 goto label10;

        if r2 == null goto label05;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

        goto label06;

     label05:
        $r13 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.util.HashMap mModelDataMap>;

        $r14 = virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: java.util.UUID getModelId()>();

        virtualinvoke $r13.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r14);

     label06:
        $r16 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.util.HashMap mKeyphraseUuidMap>;

        $r17 = virtualinvoke $r16.<java.util.HashMap: java.util.Set entrySet()>();

        r35 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>();

     label07:
        $z3 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label09;

        $r18 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>();

        $r19 = (java.util.Map$Entry) $r18;

        $r20 = interfaceinvoke $r19.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r21 = virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: java.util.UUID getModelId()>();

        $z1 = virtualinvoke $r20.<java.lang.Object: boolean equals(java.lang.Object)>($r21);

        if $z1 == 0 goto label08;

        interfaceinvoke r35.<java.util.Iterator: void remove()>();

     label08:
        goto label07;

     label09:
        virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: void clearState()>();

        goto label11;

     label10:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to unload model ");

        $i4 = virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: int getHandle()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SoundTriggerHelper", $r12);

     label11:
        return;
    }

    private int getKeyphraseIdFromEvent(android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionEvent)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        int $i1, $i2;
        android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionExtra $r1;
        android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionEvent r2;
        android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionExtra[] r3;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        r2 := @parameter0: android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionEvent;

        if r2 != null goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", "Null RecognitionEvent received.");

        return -2147483648;

     label1:
        r3 = r2.<android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionEvent: android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionExtra[] keyphraseExtras>;

        if r3 == null goto label3;

        $i1 = lengthof r3;

        if $i1 != 0 goto label2;

        goto label3;

     label2:
        $r1 = r3[0];

        $i2 = $r1.<android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionExtra: int id>;

        return $i2;

     label3:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", "Invalid keyphrase recognition event!");

        return -2147483648;
    }

    private com.android.server.soundtrigger.SoundTriggerHelper$ModelData getKeyphraseModelDataLocked(int)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        int i0;
        java.util.UUID r1;
        java.util.HashMap $r2, $r5;
        java.lang.Integer $r3;
        java.lang.Object $r4, $r6;
        com.android.server.soundtrigger.SoundTriggerHelper$ModelData $r7;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.util.HashMap mKeyphraseUuidMap>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        r1 = (java.util.UUID) $r4;

        if r1 != null goto label1;

        return null;

     label1:
        $r5 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.util.HashMap mModelDataMap>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r7 = (com.android.server.soundtrigger.SoundTriggerHelper$ModelData) $r6;

        return $r7;
    }

    private com.android.server.soundtrigger.SoundTriggerHelper$ModelData getModelDataForLocked(int)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        int i0, $i1;
        java.util.Iterator r1;
        com.android.server.soundtrigger.SoundTriggerHelper$ModelData r2;
        java.util.HashMap $r3;
        java.util.Collection $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.util.HashMap mModelDataMap>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.server.soundtrigger.SoundTriggerHelper$ModelData) $r5;

        $i1 = virtualinvoke r2.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: int getHandle()>();

        if $i1 != i0 goto label2;

        return r2;

     label2:
        goto label1;

     label3:
        return null;
    }

    private com.android.server.soundtrigger.SoundTriggerHelper$ModelData getOrCreateGenericModelDataLocked(java.util.UUID)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        java.util.HashMap $r1, $r3;
        java.lang.Object $r2;
        boolean $z0;
        java.util.UUID r5;
        com.android.server.soundtrigger.SoundTriggerHelper$ModelData r6, r7, r8;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        r5 := @parameter0: java.util.UUID;

        $r1 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.util.HashMap mModelDataMap>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r5);

        r6 = (com.android.server.soundtrigger.SoundTriggerHelper$ModelData) $r2;

        if r6 != null goto label1;

        r7 = staticinvoke <com.android.server.soundtrigger.SoundTriggerHelper$ModelData: com.android.server.soundtrigger.SoundTriggerHelper$ModelData createGenericModelData(java.util.UUID)>(r5);

        $r3 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.util.HashMap mModelDataMap>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r7);

        r8 = r7;

        goto label2;

     label1:
        r8 = r6;

        $z0 = virtualinvoke r6.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: boolean isGenericModel()>();

        if $z0 != 0 goto label2;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SoundTriggerHelper", "UUID already used for non-generic model.");

        return null;

     label2:
        return r8;
    }

    private int getParameterLocked(com.android.server.soundtrigger.SoundTriggerHelper$ModelData, int)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        com.android.server.soundtrigger.SoundTriggerHelper$ModelData r1;
        int i0, $i1, $i2;
        android.content.Context $r3;
        android.hardware.soundtrigger.SoundTriggerModule $r4, $r12;
        java.lang.UnsupportedOperationException $r5, $r10;
        java.lang.IllegalArgumentException $r6;
        boolean $z0;
        java.lang.StringBuilder $r7;
        java.lang.String $r11;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        r1 := @parameter0: com.android.server.soundtrigger.SoundTriggerHelper$ModelData;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.content.Context mContext>;

        staticinvoke <com.android.internal.logging.MetricsLogger: void count(android.content.Context,java.lang.String,int)>($r3, "sth_get_parameter", 1);

        $r4 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTriggerModule mModule>;

        if $r4 == null goto label3;

        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: boolean isModelLoaded()>();

        if $z0 == 0 goto label1;

        $r12 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTriggerModule mModule>;

        $i1 = virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: int getHandle()>();

        $i2 = virtualinvoke $r12.<android.hardware.soundtrigger.SoundTriggerModule: int getParameter(int,int)>($i1, i0);

        return $i2;

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Given model is not loaded:");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = new java.lang.UnsupportedOperationException;

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label2:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid model id");

        throw $r6;

     label3:
        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("SoundTriggerModule not initialized");

        throw $r5;
    }

    private void initializeTelephonyAndPowerStateListeners()
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        long l0;
        com.android.server.soundtrigger.SoundTriggerHelper$PowerSaveModeListener r1, $r6;
        android.content.Context r2;
        boolean $z0, $z1, z2;
        android.telephony.TelephonyManager $r3, $r5;
        int $i1;
        android.telephony.PhoneStateListener $r4;
        android.os.PowerManager $r7;
        android.os.PowerSaveState $r8;
        java.lang.Throwable $r10;
        android.content.IntentFilter r11;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        $z0 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: boolean mRecognitionRequested>;

        if $z0 == 0 goto label1;

        return;

     label1:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r3 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.telephony.TelephonyManager mTelephonyManager>;

        $i1 = virtualinvoke $r3.<android.telephony.TelephonyManager: int getCallState()>();

        if $i1 != 2 goto label4;

     label3:
        z2 = 1;

        goto label5;

     label4:
        z2 = 0;

     label5:
        r0.<com.android.server.soundtrigger.SoundTriggerHelper: boolean mCallActive> = z2;

        $r5 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.telephony.TelephonyManager mTelephonyManager>;

        $r4 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.telephony.PhoneStateListener mPhoneStateListener>;

        virtualinvoke $r5.<android.telephony.TelephonyManager: void listen(android.telephony.PhoneStateListener,int)>($r4, 32);

        $r6 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: com.android.server.soundtrigger.SoundTriggerHelper$PowerSaveModeListener mPowerSaveModeListener>;

        if $r6 != null goto label6;

        r1 = new com.android.server.soundtrigger.SoundTriggerHelper$PowerSaveModeListener;

        specialinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$PowerSaveModeListener: void <init>(com.android.server.soundtrigger.SoundTriggerHelper)>(r0);

        r0.<com.android.server.soundtrigger.SoundTriggerHelper: com.android.server.soundtrigger.SoundTriggerHelper$PowerSaveModeListener mPowerSaveModeListener> = r1;

        r2 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.content.Context mContext>;

        r11 = new android.content.IntentFilter;

        specialinvoke r11.<android.content.IntentFilter: void <init>(java.lang.String)>("android.os.action.POWER_SAVE_MODE_CHANGED");

        virtualinvoke r2.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>(r1, r11);

     label6:
        $r7 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.os.PowerManager mPowerManager>;

        $r8 = virtualinvoke $r7.<android.os.PowerManager: android.os.PowerSaveState getPowerSaveState(int)>(8);

        $z1 = $r8.<android.os.PowerSaveState: boolean batterySaverEnabled>;

        r0.<com.android.server.soundtrigger.SoundTriggerHelper: boolean mIsPowerSaveMode> = $z1;

        r0.<com.android.server.soundtrigger.SoundTriggerHelper: boolean mRecognitionRequested> = 1;

     label7:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label8:
        $r10 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r10;

        catch java.lang.Throwable from label2 to label3 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    private void internalClearGlobalStateLocked()
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        long l0;
        android.telephony.PhoneStateListener $r1;
        android.telephony.TelephonyManager $r2;
        android.content.Context $r3;
        java.lang.Throwable $r4;
        com.android.server.soundtrigger.SoundTriggerHelper$PowerSaveModeListener r5;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.telephony.TelephonyManager mTelephonyManager>;

        $r1 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.telephony.PhoneStateListener mPhoneStateListener>;

        virtualinvoke $r2.<android.telephony.TelephonyManager: void listen(android.telephony.PhoneStateListener,int)>($r1, 0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        r5 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: com.android.server.soundtrigger.SoundTriggerHelper$PowerSaveModeListener mPowerSaveModeListener>;

        if r5 == null goto label3;

        $r3 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>(r5);

        r0.<com.android.server.soundtrigger.SoundTriggerHelper: com.android.server.soundtrigger.SoundTriggerHelper$PowerSaveModeListener mPowerSaveModeListener> = null;

     label3:
        r0.<com.android.server.soundtrigger.SoundTriggerHelper: boolean mRecognitionRequested> = 0;

        return;

     label4:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    private void internalClearModelStateLocked()
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        java.util.Iterator r1;
        java.util.HashMap $r2;
        java.util.Collection $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.android.server.soundtrigger.SoundTriggerHelper$ModelData $r5;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        $r2 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.util.HashMap mModelDataMap>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.android.server.soundtrigger.SoundTriggerHelper$ModelData) $r4;

        virtualinvoke $r5.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: void clearState()>();

        goto label1;

     label2:
        return;
    }

    private boolean isKeyphraseRecognitionEvent(android.hardware.soundtrigger.SoundTrigger$RecognitionEvent)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        android.hardware.soundtrigger.SoundTrigger$RecognitionEvent r1;
        boolean $z0;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        r1 := @parameter0: android.hardware.soundtrigger.SoundTrigger$RecognitionEvent;

        $z0 = r1 instanceof android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionEvent;

        return $z0;
    }

    private boolean isRecognitionAllowed()
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        boolean $z1, $z2, $z3, z4, z5, $z6, z7;
        android.telephony.TelephonyManager $r1;
        int $i0;
        android.os.PowerManager $r2;
        android.os.PowerSaveState $r3;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        z4 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: boolean mRecognitionRequested>;

        if z4 != 0 goto label3;

        $r1 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.telephony.TelephonyManager mTelephonyManager>;

        $i0 = virtualinvoke $r1.<android.telephony.TelephonyManager: int getCallState()>();

        if $i0 != 2 goto label1;

        z5 = 1;

        goto label2;

     label1:
        z5 = 0;

     label2:
        r0.<com.android.server.soundtrigger.SoundTriggerHelper: boolean mCallActive> = z5;

        $r2 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.os.PowerManager mPowerManager>;

        $r3 = virtualinvoke $r2.<android.os.PowerManager: android.os.PowerSaveState getPowerSaveState(int)>(8);

        $z3 = $r3.<android.os.PowerSaveState: boolean batterySaverEnabled>;

        r0.<com.android.server.soundtrigger.SoundTriggerHelper: boolean mIsPowerSaveMode> = $z3;

     label3:
        $z6 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: boolean mCallActive>;

        if $z6 != 0 goto label4;

        $z1 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: boolean mServiceDisabled>;

        if $z1 != 0 goto label4;

        $z2 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: boolean mIsPowerSaveMode>;

        if $z2 != 0 goto label4;

        z7 = 1;

        goto label5;

     label4:
        z7 = 0;

     label5:
        return z7;
    }

    private void onCallStateChangedLocked(boolean)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        boolean z0, $z1;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: boolean mCallActive>;

        if $z1 != z0 goto label1;

        return;

     label1:
        r0.<com.android.server.soundtrigger.SoundTriggerHelper: boolean mCallActive> = z0;

        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: void updateAllRecognitionsLocked(boolean)>(1);

        return;
    }

    private void onGenericRecognitionSuccessLocked(android.hardware.soundtrigger.SoundTrigger$GenericRecognitionEvent)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        android.content.Context $r1;
        int $i0, $i1, $i2, $i4, $i6, $i8, $i10;
        java.lang.StringBuilder $r2, $r6, $r10;
        java.lang.String $r5, $r9, $r13;
        boolean $z0, $z1, $z2, $z3;
        android.os.RemoteException $r14;
        android.os.DeadObjectException $r15;
        android.hardware.soundtrigger.SoundTrigger$GenericRecognitionEvent r16;
        com.android.server.soundtrigger.SoundTriggerHelper$ModelData r17;
        android.hardware.soundtrigger.IRecognitionStatusCallback r18;
        android.hardware.soundtrigger.SoundTrigger$RecognitionConfig r21;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        r16 := @parameter0: android.hardware.soundtrigger.SoundTrigger$GenericRecognitionEvent;

        $r1 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.content.Context mContext>;

        staticinvoke <com.android.internal.logging.MetricsLogger: void count(android.content.Context,java.lang.String,int)>($r1, "sth_generic_recognition_event", 1);

        $i0 = r16.<android.hardware.soundtrigger.SoundTrigger$GenericRecognitionEvent: int status>;

        if $i0 == 0 goto label01;

        $i10 = r16.<android.hardware.soundtrigger.SoundTrigger$GenericRecognitionEvent: int status>;

        if $i10 == 3 goto label01;

        return;

     label01:
        $i1 = r16.<android.hardware.soundtrigger.SoundTrigger$GenericRecognitionEvent: int soundModelHandle>;

        r17 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: com.android.server.soundtrigger.SoundTriggerHelper$ModelData getModelDataForLocked(int)>($i1);

        if r17 == null goto label11;

        $z0 = virtualinvoke r17.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: boolean isGenericModel()>();

        if $z0 != 0 goto label02;

        goto label11;

     label02:
        r18 = virtualinvoke r17.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: android.hardware.soundtrigger.IRecognitionStatusCallback getCallback()>();

        if r18 != null goto label03;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Generic recognition event: Null callback for model handle: ");

        $i8 = r16.<android.hardware.soundtrigger.SoundTrigger$GenericRecognitionEvent: int soundModelHandle>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", $r13);

        return;

     label03:
        $i4 = r16.<android.hardware.soundtrigger.SoundTrigger$GenericRecognitionEvent: int status>;

        if $i4 == 3 goto label04;

        virtualinvoke r17.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: void setStopped()>();

     label04:
        interfaceinvoke r18.<android.hardware.soundtrigger.IRecognitionStatusCallback: void onGenericSoundTriggerDetected(android.hardware.soundtrigger.SoundTrigger$GenericRecognitionEvent)>(r16);

     label05:
        goto label07;

     label06:
        $r14 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("SoundTriggerHelper", "RemoteException in onGenericSoundTriggerDetected", $r14);

     label07:
        r21 = virtualinvoke r17.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: android.hardware.soundtrigger.SoundTrigger$RecognitionConfig getRecognitionConfig()>();

        if r21 != null goto label08;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Generic recognition event: Null RecognitionConfig for model handle: ");

        $i6 = r16.<android.hardware.soundtrigger.SoundTrigger$GenericRecognitionEvent: int soundModelHandle>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", $r9);

        return;

     label08:
        $z1 = r21.<android.hardware.soundtrigger.SoundTrigger$RecognitionConfig: boolean allowMultipleTriggers>;

        virtualinvoke r17.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: void setRequested(boolean)>($z1);

        $z2 = virtualinvoke r17.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: boolean isRequested()>();

        if $z2 == 0 goto label09;

        $z3 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: boolean isRecognitionAllowed()>();

        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: int updateRecognitionLocked(com.android.server.soundtrigger.SoundTriggerHelper$ModelData,boolean,boolean)>(r17, $z3, 1);

     label09:
        return;

     label10:
        $r15 := @caughtexception;

        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: void forceStopAndUnloadModelLocked(com.android.server.soundtrigger.SoundTriggerHelper$ModelData,java.lang.Exception)>(r17, $r15);

        return;

     label11:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Generic recognition event: Model does not exist for handle: ");

        $i2 = r16.<android.hardware.soundtrigger.SoundTrigger$GenericRecognitionEvent: int soundModelHandle>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", $r5);

        return;

        catch android.os.DeadObjectException from label04 to label05 with label10;
        catch android.os.RemoteException from label04 to label05 with label06;
    }

    private void onKeyphraseRecognitionSuccessLocked(android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionEvent)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        int i0, $i3;
        com.android.server.soundtrigger.SoundTriggerHelper$ModelData r1;
        android.content.Context $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;
        boolean $z0, $z1, $z2, $z3;
        android.hardware.soundtrigger.IRecognitionStatusCallback $r7, $r8;
        android.os.DeadObjectException $r9;
        android.os.RemoteException $r10;
        android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionEvent r11;
        android.hardware.soundtrigger.SoundTrigger$RecognitionConfig r13;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        r11 := @parameter0: android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionEvent;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SoundTriggerHelper", "Recognition success");

        $r2 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.content.Context mContext>;

        staticinvoke <com.android.internal.logging.MetricsLogger: void count(android.content.Context,java.lang.String,int)>($r2, "sth_keyphrase_recognition_event", 1);

        i0 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: int getKeyphraseIdFromEvent(android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionEvent)>(r11);

        r1 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: com.android.server.soundtrigger.SoundTriggerHelper$ModelData getKeyphraseModelDataLocked(int)>(i0);

        if r1 == null goto label10;

        $z0 = virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: boolean isKeyphraseModel()>();

        if $z0 != 0 goto label01;

        goto label10;

     label01:
        $r7 = virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: android.hardware.soundtrigger.IRecognitionStatusCallback getCallback()>();

        if $r7 != null goto label02;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", "Received onRecognition event without callback for keyphrase model.");

        return;

     label02:
        $i3 = r11.<android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionEvent: int status>;

        if $i3 == 3 goto label03;

        virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: void setStopped()>();

     label03:
        $r8 = virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: android.hardware.soundtrigger.IRecognitionStatusCallback getCallback()>();

        interfaceinvoke $r8.<android.hardware.soundtrigger.IRecognitionStatusCallback: void onKeyphraseDetected(android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionEvent)>(r11);

     label04:
        goto label06;

     label05:
        $r10 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("SoundTriggerHelper", "RemoteException in onKeyphraseDetected", $r10);

     label06:
        r13 = virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: android.hardware.soundtrigger.SoundTrigger$RecognitionConfig getRecognitionConfig()>();

        if r13 == null goto label07;

        $z3 = r13.<android.hardware.soundtrigger.SoundTrigger$RecognitionConfig: boolean allowMultipleTriggers>;

        virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: void setRequested(boolean)>($z3);

     label07:
        $z1 = virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: boolean isRequested()>();

        if $z1 == 0 goto label08;

        $z2 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: boolean isRecognitionAllowed()>();

        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: int updateRecognitionLocked(com.android.server.soundtrigger.SoundTriggerHelper$ModelData,boolean,boolean)>(r1, $z2, 1);

     label08:
        return;

     label09:
        $r9 := @caughtexception;

        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: void forceStopAndUnloadModelLocked(com.android.server.soundtrigger.SoundTriggerHelper$ModelData,java.lang.Exception)>(r1, $r9);

        return;

     label10:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Keyphase model data does not exist for ID:");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SoundTriggerHelper", $r6);

        return;

        catch android.os.DeadObjectException from label03 to label04 with label09;
        catch android.os.RemoteException from label03 to label04 with label05;
    }

    private void onPowerSaveModeChangedLocked(boolean)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        boolean z0, $z1;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: boolean mIsPowerSaveMode>;

        if $z1 != z0 goto label1;

        return;

     label1:
        r0.<com.android.server.soundtrigger.SoundTriggerHelper: boolean mIsPowerSaveMode> = z0;

        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: void updateAllRecognitionsLocked(boolean)>(1);

        return;
    }

    private void onRecognitionAbortLocked(android.hardware.soundtrigger.SoundTrigger$RecognitionEvent)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        com.android.server.soundtrigger.SoundTriggerHelper$ModelData r1;
        android.content.Context $r2;
        int $i1;
        boolean $z0;
        android.hardware.soundtrigger.IRecognitionStatusCallback $r3;
        android.os.RemoteException $r4;
        android.os.DeadObjectException $r5;
        android.hardware.soundtrigger.SoundTrigger$RecognitionEvent r6;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        r6 := @parameter0: android.hardware.soundtrigger.SoundTrigger$RecognitionEvent;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", "Recognition aborted");

        $r2 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.content.Context mContext>;

        staticinvoke <com.android.internal.logging.MetricsLogger: void count(android.content.Context,java.lang.String,int)>($r2, "sth_recognition_aborted", 1);

        $i1 = r6.<android.hardware.soundtrigger.SoundTrigger$RecognitionEvent: int soundModelHandle>;

        r1 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: com.android.server.soundtrigger.SoundTriggerHelper$ModelData getModelDataForLocked(int)>($i1);

        if r1 == null goto label5;

        $z0 = virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: boolean isModelStarted()>();

        if $z0 == 0 goto label5;

        virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: void setStopped()>();

     label1:
        $r3 = virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: android.hardware.soundtrigger.IRecognitionStatusCallback getCallback()>();

        interfaceinvoke $r3.<android.hardware.soundtrigger.IRecognitionStatusCallback: void onRecognitionPaused()>();

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("SoundTriggerHelper", "RemoteException in onRecognitionPaused", $r4);

        goto label5;

     label4:
        $r5 := @caughtexception;

        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: void forceStopAndUnloadModelLocked(com.android.server.soundtrigger.SoundTriggerHelper$ModelData,java.lang.Exception)>(r1, $r5);

     label5:
        return;

        catch android.os.DeadObjectException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void onRecognitionFailureLocked()
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        android.content.Context $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", "Recognition failure");

        $r2 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.content.Context mContext>;

        staticinvoke <com.android.internal.logging.MetricsLogger: void count(android.content.Context,java.lang.String,int)>($r2, "sth_recognition_failure_event", 1);

     label1:
        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: void sendErrorCallbacksToAllLocked(int)>(-2147483648);

     label2:
        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: void internalClearModelStateLocked()>();

        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: void internalClearGlobalStateLocked()>();

        return;

     label3:
        $r3 := @caughtexception;

        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: void internalClearModelStateLocked()>();

        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: void internalClearGlobalStateLocked()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void onServiceDiedLocked()
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        android.content.Context $r2;
        int $i0;
        java.lang.Throwable $r3;
        android.hardware.soundtrigger.SoundTriggerModule r4, r5;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

     label1:
        $r2 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.content.Context mContext>;

        staticinvoke <com.android.internal.logging.MetricsLogger: void count(android.content.Context,java.lang.String,int)>($r2, "sth_service_died", 1);

        $i0 = <android.hardware.soundtrigger.SoundTrigger: int STATUS_DEAD_OBJECT>;

        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: void sendErrorCallbacksToAllLocked(int)>($i0);

     label2:
        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: void internalClearModelStateLocked()>();

        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: void internalClearGlobalStateLocked()>();

        r4 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTriggerModule mModule>;

        if r4 == null goto label3;

        virtualinvoke r4.<android.hardware.soundtrigger.SoundTriggerModule: void detach()>();

        r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTriggerModule mModule> = null;

     label3:
        return;

     label4:
        $r3 := @caughtexception;

        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: void internalClearModelStateLocked()>();

        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: void internalClearGlobalStateLocked()>();

        r5 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTriggerModule mModule>;

        if r5 == null goto label5;

        virtualinvoke r5.<android.hardware.soundtrigger.SoundTriggerModule: void detach()>();

        r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTriggerModule mModule> = null;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    private void onServiceStateChangedLocked(boolean)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        boolean z0, $z1;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: boolean mServiceDisabled>;

        if z0 != $z1 goto label1;

        return;

     label1:
        r0.<com.android.server.soundtrigger.SoundTriggerHelper: boolean mServiceDisabled> = z0;

        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: void updateAllRecognitionsLocked(boolean)>(1);

        return;
    }

    private void onSoundModelUpdatedLocked(android.hardware.soundtrigger.SoundTrigger$SoundModelEvent)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        android.hardware.soundtrigger.SoundTrigger$SoundModelEvent r1;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        r1 := @parameter0: android.hardware.soundtrigger.SoundTrigger$SoundModelEvent;

        return;
    }

    private int prepareForRecognition(com.android.server.soundtrigger.SoundTriggerHelper$ModelData)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        int i0, $i1, $i3;
        android.hardware.soundtrigger.SoundTriggerModule $r1, $r2, r10;
        boolean $z0;
        android.hardware.soundtrigger.SoundTrigger$SoundModel $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r7;
        android.hardware.soundtrigger.SoundTrigger$ModuleProperties $r8;
        com.android.server.soundtrigger.SoundTriggerHelper$ModelData r9;
        int[] r11;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        r9 := @parameter0: com.android.server.soundtrigger.SoundTriggerHelper$ModelData;

        $r1 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTriggerModule mModule>;

        if $r1 != null goto label1;

        $r8 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTrigger$ModuleProperties mModuleProperties>;

        $i3 = virtualinvoke $r8.<android.hardware.soundtrigger.SoundTrigger$ModuleProperties: int getId()>();

        r10 = staticinvoke <android.hardware.soundtrigger.SoundTrigger: android.hardware.soundtrigger.SoundTriggerModule attachModule(int,android.hardware.soundtrigger.SoundTrigger$StatusListener,android.os.Handler)>($i3, r0, null);

        r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTriggerModule mModule> = r10;

        if r10 != null goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", "prepareForRecognition: cannot attach to sound trigger module");

        return -2147483648;

     label1:
        $z0 = virtualinvoke r9.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: boolean isModelLoaded()>();

        if $z0 != 0 goto label3;

        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: void stopAndUnloadDeadModelsLocked()>();

        r11 = newarray (int)[1];

        r11[0] = 0;

        $r2 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTriggerModule mModule>;

        $r3 = virtualinvoke r9.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: android.hardware.soundtrigger.SoundTrigger$SoundModel getSoundModel()>();

        i0 = virtualinvoke $r2.<android.hardware.soundtrigger.SoundTriggerModule: int loadSoundModel(android.hardware.soundtrigger.SoundTrigger$SoundModel,int[])>($r3, r11);

        if i0 == 0 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("prepareForRecognition: loadSoundModel failed with status: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", $r7);

        return i0;

     label2:
        $i1 = r11[0];

        virtualinvoke r9.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: void setHandle(int)>($i1);

        virtualinvoke r9.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: void setLoaded()>();

     label3:
        return 0;
    }

    private android.hardware.soundtrigger.SoundTrigger$ModelParamRange queryParameterLocked(com.android.server.soundtrigger.SoundTriggerHelper$ModelData, int)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        com.android.server.soundtrigger.SoundTriggerHelper$ModelData r1;
        int i0, $i1;
        android.content.Context $r3;
        android.hardware.soundtrigger.SoundTriggerModule $r4, $r5;
        boolean $z0;
        android.hardware.soundtrigger.SoundTrigger$ModelParamRange $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r10;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        r1 := @parameter0: com.android.server.soundtrigger.SoundTriggerHelper$ModelData;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.content.Context mContext>;

        staticinvoke <com.android.internal.logging.MetricsLogger: void count(android.content.Context,java.lang.String,int)>($r3, "sth_query_parameter", 1);

        $r4 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTriggerModule mModule>;

        if $r4 != null goto label1;

        return null;

     label1:
        if r1 != null goto label2;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", "queryParameter: Invalid model id");

        return null;

     label2:
        $z0 = virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: boolean isModelLoaded()>();

        if $z0 != 0 goto label3;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("queryParameter: Given model is not loaded:");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SoundTriggerHelper", $r10);

        return null;

     label3:
        $r5 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTriggerModule mModule>;

        $i1 = virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: int getHandle()>();

        $r6 = virtualinvoke $r5.<android.hardware.soundtrigger.SoundTriggerModule: android.hardware.soundtrigger.SoundTrigger$ModelParamRange queryParameter(int,int)>($i1, i0);

        return $r6;
    }

    private void removeKeyphraseModelLocked(int)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        int i0;
        java.util.UUID r1;
        java.util.HashMap $r2, $r5, $r7;
        java.lang.Integer $r3, $r8;
        java.lang.Object $r4;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.util.HashMap mKeyphraseUuidMap>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        r1 = (java.util.UUID) $r4;

        if r1 != null goto label1;

        return;

     label1:
        $r5 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.util.HashMap mModelDataMap>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        $r7 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.util.HashMap mKeyphraseUuidMap>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r8);

        return;
    }

    private void sendErrorCallbacksToAllLocked(int)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        int i0, $i1;
        java.util.Iterator r1;
        com.android.server.soundtrigger.SoundTriggerHelper$ModelData r2;
        java.util.HashMap $r4;
        java.util.Collection $r5;
        boolean $z0;
        java.lang.Object $r6;
        android.os.RemoteException $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r11;
        android.hardware.soundtrigger.IRecognitionStatusCallback r12;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        i0 := @parameter0: int;

        $r4 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.util.HashMap mModelDataMap>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.server.soundtrigger.SoundTriggerHelper$ModelData) $r6;

        r12 = virtualinvoke r2.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: android.hardware.soundtrigger.IRecognitionStatusCallback getCallback()>();

        if r12 == null goto label5;

     label2:
        interfaceinvoke r12.<android.hardware.soundtrigger.IRecognitionStatusCallback: void onError(int)>(i0);

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RemoteException sendErrorCallbacksToAllLocked for model handle ");

        $i1 = virtualinvoke r2.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: int getHandle()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("SoundTriggerHelper", $r11, $r7);

     label5:
        goto label1;

     label6:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private int setParameterLocked(com.android.server.soundtrigger.SoundTriggerHelper$ModelData, int, int)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        com.android.server.soundtrigger.SoundTriggerHelper$ModelData r1;
        int i0, i1, $i3, $i4, $i5, $i6;
        android.content.Context $r3;
        android.hardware.soundtrigger.SoundTriggerModule $r4, $r9;
        java.lang.StringBuilder $r5;
        java.lang.String $r8;
        boolean $z0;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        r1 := @parameter0: com.android.server.soundtrigger.SoundTriggerHelper$ModelData;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.content.Context mContext>;

        staticinvoke <com.android.internal.logging.MetricsLogger: void count(android.content.Context,java.lang.String,int)>($r3, "sth_set_parameter", 1);

        $r4 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTriggerModule mModule>;

        if $r4 != null goto label1;

        $i6 = <android.hardware.soundtrigger.SoundTrigger: int STATUS_NO_INIT>;

        return $i6;

     label1:
        if r1 == null goto label3;

        $z0 = virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: boolean isModelLoaded()>();

        if $z0 != 0 goto label2;

        goto label3;

     label2:
        $r9 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTriggerModule mModule>;

        $i4 = virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: int getHandle()>();

        $i5 = virtualinvoke $r9.<android.hardware.soundtrigger.SoundTriggerModule: int setParameter(int,int,int)>($i4, i0, i1);

        return $i5;

     label3:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SetParameter: Given model is not loaded:");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SoundTriggerHelper", $r8);

        $i3 = <android.hardware.soundtrigger.SoundTrigger: int STATUS_BAD_VALUE>;

        return $i3;
    }

    private int startRecognitionLocked(com.android.server.soundtrigger.SoundTriggerHelper$ModelData, boolean)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        boolean z0, $z1, $z2;
        android.hardware.soundtrigger.SoundTrigger$RecognitionConfig r1;
        int i0, $i2;
        android.content.Context $r2, $r7, $r8, $r21;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;
        android.os.RemoteException $r9, $r11;
        android.os.DeadObjectException $r10, $r12;
        com.android.server.soundtrigger.SoundTriggerHelper$ModelData r13;
        android.hardware.soundtrigger.IRecognitionStatusCallback r14;
        android.hardware.soundtrigger.SoundTriggerModule r15;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        r13 := @parameter0: com.android.server.soundtrigger.SoundTriggerHelper$ModelData;

        z0 := @parameter1: boolean;

        r14 = virtualinvoke r13.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: android.hardware.soundtrigger.IRecognitionStatusCallback getCallback()>();

        r1 = virtualinvoke r13.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: android.hardware.soundtrigger.SoundTrigger$RecognitionConfig getRecognitionConfig()>();

        if r14 == null goto label14;

        $z1 = virtualinvoke r13.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: boolean isModelLoaded()>();

        if $z1 == 0 goto label14;

        if r1 != null goto label01;

        goto label14;

     label01:
        $z2 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: boolean isRecognitionAllowed()>();

        if $z2 != 0 goto label02;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", "startRecognition requested but not allowed.");

        $r8 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.content.Context mContext>;

        staticinvoke <com.android.internal.logging.MetricsLogger: void count(android.content.Context,java.lang.String,int)>($r8, "sth_start_recognition_not_allowed", 1);

        return 0;

     label02:
        r15 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTriggerModule mModule>;

        if r15 != null goto label03;

        return -2147483648;

     label03:
        $i2 = virtualinvoke r13.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: int getHandle()>();

        i0 = virtualinvoke r15.<android.hardware.soundtrigger.SoundTriggerModule: int startRecognition(int,android.hardware.soundtrigger.SoundTrigger$RecognitionConfig)>($i2, r1);

        if i0 == 0 goto label08;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startRecognition failed with ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", $r6);

        $r7 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.content.Context mContext>;

        staticinvoke <com.android.internal.logging.MetricsLogger: void count(android.content.Context,java.lang.String,int)>($r7, "sth_start_recognition_error", 1);

        if z0 == 0 goto label13;

     label04:
        interfaceinvoke r14.<android.hardware.soundtrigger.IRecognitionStatusCallback: void onError(int)>(i0);

     label05:
        goto label13;

     label06:
        $r11 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("SoundTriggerHelper", "RemoteException in onError", $r11);

        goto label05;

     label07:
        $r12 := @caughtexception;

        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: void forceStopAndUnloadModelLocked(com.android.server.soundtrigger.SoundTriggerHelper$ModelData,java.lang.Exception)>(r13, $r12);

        goto label05;

     label08:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SoundTriggerHelper", "startRecognition successful.");

        $r2 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.content.Context mContext>;

        staticinvoke <com.android.internal.logging.MetricsLogger: void count(android.content.Context,java.lang.String,int)>($r2, "sth_start_recognition_success", 1);

        virtualinvoke r13.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: void setStarted()>();

        if z0 == 0 goto label13;

     label09:
        interfaceinvoke r14.<android.hardware.soundtrigger.IRecognitionStatusCallback: void onRecognitionResumed()>();

     label10:
        goto label13;

     label11:
        $r9 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("SoundTriggerHelper", "RemoteException in onRecognitionResumed", $r9);

        goto label13;

     label12:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: void forceStopAndUnloadModelLocked(com.android.server.soundtrigger.SoundTriggerHelper$ModelData,java.lang.Exception)>(r13, $r10);

        goto label10;

     label13:
        return i0;

     label14:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", "startRecognition: Bad data passed in.");

        $r21 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.content.Context mContext>;

        staticinvoke <com.android.internal.logging.MetricsLogger: void count(android.content.Context,java.lang.String,int)>($r21, "sth_start_recognition_error", 1);

        return -2147483648;

        catch android.os.DeadObjectException from label04 to label05 with label07;
        catch android.os.RemoteException from label04 to label05 with label06;
        catch android.os.DeadObjectException from label09 to label10 with label12;
        catch android.os.RemoteException from label09 to label10 with label11;
    }

    private void stopAndUnloadDeadModelsLocked()
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        java.util.Iterator r1;
        com.android.server.soundtrigger.SoundTriggerHelper$ModelData r2;
        java.util.HashMap $r4;
        java.util.Set $r5;
        java.lang.Object $r6, $r8;
        java.util.Map$Entry $r7;
        boolean $z0, $z1, $z2;
        android.hardware.soundtrigger.IRecognitionStatusCallback $r9, $r15, $r17;
        java.lang.StringBuilder $r10;
        int $i0;
        java.lang.String $r14;
        android.os.IBinder $r16, $r18;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        $r4 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.util.HashMap mModelDataMap>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Set entrySet()>();

        r1 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.util.Map$Entry) $r6;

        $r8 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        r2 = (com.android.server.soundtrigger.SoundTriggerHelper$ModelData) $r8;

        $z0 = virtualinvoke r2.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: boolean isModelLoaded()>();

        if $z0 != 0 goto label2;

        goto label1;

     label2:
        $r9 = virtualinvoke r2.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: android.hardware.soundtrigger.IRecognitionStatusCallback getCallback()>();

        if $r9 == null goto label3;

        $r15 = virtualinvoke r2.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: android.hardware.soundtrigger.IRecognitionStatusCallback getCallback()>();

        $r16 = interfaceinvoke $r15.<android.hardware.soundtrigger.IRecognitionStatusCallback: android.os.IBinder asBinder()>();

        if $r16 == null goto label4;

        $r17 = virtualinvoke r2.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: android.hardware.soundtrigger.IRecognitionStatusCallback getCallback()>();

        $r18 = interfaceinvoke $r17.<android.hardware.soundtrigger.IRecognitionStatusCallback: android.os.IBinder asBinder()>();

        $z1 = interfaceinvoke $r18.<android.os.IBinder: boolean pingBinder()>();

        if $z1 != 0 goto label4;

     label3:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing model ");

        $i0 = virtualinvoke r2.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: int getHandle()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that has no clients");

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", $r14);

        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: void forceStopAndUnloadModelLocked(com.android.server.soundtrigger.SoundTriggerHelper$ModelData,java.lang.Exception,java.util.Iterator)>(r2, null, r1);

     label4:
        goto label1;

     label5:
        return;
    }

    private int stopRecognition(com.android.server.soundtrigger.SoundTriggerHelper$ModelData, android.hardware.soundtrigger.IRecognitionStatusCallback)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        android.hardware.soundtrigger.IRecognitionStatusCallback r1, r3;
        java.lang.Object r2;
        int i0;
        android.hardware.soundtrigger.SoundTrigger$ModuleProperties $r4;
        android.hardware.soundtrigger.SoundTriggerModule $r5;
        boolean $z0, $z1, $z2, $z3;
        android.os.IBinder $r6, $r7;
        java.lang.Throwable $r8;
        com.android.server.soundtrigger.SoundTriggerHelper$ModelData r9;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        r9 := @parameter0: com.android.server.soundtrigger.SoundTriggerHelper$ModelData;

        r1 := @parameter1: android.hardware.soundtrigger.IRecognitionStatusCallback;

        r2 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.lang.Object mLock>;

        entermonitor r2;

        if r1 != null goto label03;

     label01:
        exitmonitor r2;

     label02:
        return -2147483648;

     label03:
        $r4 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTrigger$ModuleProperties mModuleProperties>;

        if $r4 == null goto label20;

        $r5 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTriggerModule mModule>;

        if $r5 != null goto label05;

     label04:
        goto label20;

     label05:
        r3 = virtualinvoke r9.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: android.hardware.soundtrigger.IRecognitionStatusCallback getCallback()>();

     label06:
        if r9 == null goto label18;

        if r3 == null goto label18;

     label07:
        $z0 = virtualinvoke r9.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: boolean isRequested()>();

        if $z0 != 0 goto label09;

        $z3 = virtualinvoke r9.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: boolean isModelStarted()>();

        if $z3 != 0 goto label09;

     label08:
        goto label18;

     label09:
        $r6 = interfaceinvoke r3.<android.hardware.soundtrigger.IRecognitionStatusCallback: android.os.IBinder asBinder()>();

        $r7 = interfaceinvoke r1.<android.hardware.soundtrigger.IRecognitionStatusCallback: android.os.IBinder asBinder()>();

        if $r6 == $r7 goto label11;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", "Attempting stopRecognition for another recognition");

        exitmonitor r2;

     label10:
        return -2147483648;

     label11:
        virtualinvoke r9.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: void setRequested(boolean)>(0);

        $z1 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: boolean isRecognitionAllowed()>();

        i0 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: int updateRecognitionLocked(com.android.server.soundtrigger.SoundTriggerHelper$ModelData,boolean,boolean)>(r9, $z1, 0);

     label12:
        if i0 == 0 goto label15;

     label13:
        exitmonitor r2;

     label14:
        return i0;

     label15:
        virtualinvoke r9.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: void setLoaded()>();

        virtualinvoke r9.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: void clearCallback()>();

        virtualinvoke r9.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: void setRecognitionConfig(android.hardware.soundtrigger.SoundTrigger$RecognitionConfig)>(null);

        $z2 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: boolean computeRecognitionRequestedLocked()>();

        if $z2 != 0 goto label16;

        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: void internalClearGlobalStateLocked()>();

     label16:
        exitmonitor r2;

     label17:
        return i0;

     label18:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", "Attempting stopRecognition without a successful startRecognition");

        exitmonitor r2;

     label19:
        return -2147483648;

     label20:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", "Attempting stopRecognition without the capability");

        exitmonitor r2;

     label21:
        return -2147483648;

     label22:
        $r8 := @caughtexception;

     label23:
        exitmonitor r2;

     label24:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label22;
        catch java.lang.Throwable from label03 to label04 with label22;
        catch java.lang.Throwable from label05 to label06 with label22;
        catch java.lang.Throwable from label07 to label08 with label22;
        catch java.lang.Throwable from label09 to label10 with label22;
        catch java.lang.Throwable from label11 to label12 with label22;
        catch java.lang.Throwable from label13 to label14 with label22;
        catch java.lang.Throwable from label15 to label16 with label22;
        catch java.lang.Throwable from label16 to label17 with label22;
        catch java.lang.Throwable from label18 to label19 with label22;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label23 to label24 with label22;
    }

    private int stopRecognitionLocked(com.android.server.soundtrigger.SoundTriggerHelper$ModelData, boolean)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        boolean z0;
        android.hardware.soundtrigger.IRecognitionStatusCallback r1;
        int i0, $i1;
        android.hardware.soundtrigger.SoundTriggerModule $r2, $r3;
        android.content.Context $r4, $r9;
        java.lang.StringBuilder $r5;
        java.lang.String $r8;
        android.os.DeadObjectException $r10, $r11;
        android.os.RemoteException $r12, $r13;
        com.android.server.soundtrigger.SoundTriggerHelper$ModelData r14;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        r14 := @parameter0: com.android.server.soundtrigger.SoundTriggerHelper$ModelData;

        z0 := @parameter1: boolean;

        $r2 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTriggerModule mModule>;

        if $r2 != null goto label01;

        return -2147483648;

     label01:
        r1 = virtualinvoke r14.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: android.hardware.soundtrigger.IRecognitionStatusCallback getCallback()>();

        $r3 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTriggerModule mModule>;

        $i1 = virtualinvoke r14.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: int getHandle()>();

        i0 = virtualinvoke $r3.<android.hardware.soundtrigger.SoundTriggerModule: int stopRecognition(int)>($i1);

        if i0 == 0 goto label06;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stopRecognition call failed with ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", $r8);

        $r9 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.content.Context mContext>;

        staticinvoke <com.android.internal.logging.MetricsLogger: void count(android.content.Context,java.lang.String,int)>($r9, "sth_stop_recognition_error", 1);

        if z0 == 0 goto label11;

     label02:
        interfaceinvoke r1.<android.hardware.soundtrigger.IRecognitionStatusCallback: void onError(int)>(i0);

     label03:
        goto label11;

     label04:
        $r13 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("SoundTriggerHelper", "RemoteException in onError", $r13);

        goto label03;

     label05:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: void forceStopAndUnloadModelLocked(com.android.server.soundtrigger.SoundTriggerHelper$ModelData,java.lang.Exception)>(r14, $r10);

        goto label03;

     label06:
        virtualinvoke r14.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: void setStopped()>();

        $r4 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.content.Context mContext>;

        staticinvoke <com.android.internal.logging.MetricsLogger: void count(android.content.Context,java.lang.String,int)>($r4, "sth_stop_recognition_success", 1);

        if z0 == 0 goto label11;

     label07:
        interfaceinvoke r1.<android.hardware.soundtrigger.IRecognitionStatusCallback: void onRecognitionPaused()>();

     label08:
        goto label11;

     label09:
        $r12 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("SoundTriggerHelper", "RemoteException in onRecognitionPaused", $r12);

        goto label11;

     label10:
        $r11 := @caughtexception;

        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: void forceStopAndUnloadModelLocked(com.android.server.soundtrigger.SoundTriggerHelper$ModelData,java.lang.Exception)>(r14, $r11);

        goto label08;

     label11:
        return i0;

        catch android.os.DeadObjectException from label02 to label03 with label05;
        catch android.os.RemoteException from label02 to label03 with label04;
        catch android.os.DeadObjectException from label07 to label08 with label10;
        catch android.os.RemoteException from label07 to label08 with label09;
    }

    private int tryStopAndUnloadLocked(com.android.server.soundtrigger.SoundTriggerHelper$ModelData, boolean, boolean)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        boolean z0, z1, $z2, $z3, $z4;
        android.hardware.soundtrigger.SoundTriggerModule r1;
        int $i1, i5, i6, i7;
        android.content.Context $r2;
        java.lang.StringBuilder $r3, $r7;
        java.lang.String $r6, $r10;
        com.android.server.soundtrigger.SoundTriggerHelper$ModelData r11;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        r11 := @parameter0: com.android.server.soundtrigger.SoundTriggerHelper$ModelData;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $z2 = virtualinvoke r11.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: boolean isModelNotLoaded()>();

        if $z2 == 0 goto label1;

        return 0;

     label1:
        i5 = 0;

        if z0 == 0 goto label2;

        i5 = 0;

        $z4 = virtualinvoke r11.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: boolean isModelStarted()>();

        if $z4 == 0 goto label2;

        i6 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: int stopRecognitionLocked(com.android.server.soundtrigger.SoundTriggerHelper$ModelData,boolean)>(r11, 0);

        i5 = i6;

        if i6 == 0 goto label2;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stopRecognition failed: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", $r10);

        return i6;

     label2:
        i7 = i5;

        if z1 == 0 goto label5;

        i7 = i5;

        $z3 = virtualinvoke r11.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: boolean isModelLoaded()>();

        if $z3 == 0 goto label5;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("SoundTriggerHelper", "Unloading previously loaded stale model.");

        r1 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTriggerModule mModule>;

        if r1 != null goto label3;

        return -2147483648;

     label3:
        $i1 = virtualinvoke r11.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: int getHandle()>();

        i7 = virtualinvoke r1.<android.hardware.soundtrigger.SoundTriggerModule: int unloadSoundModel(int)>($i1);

        $r2 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.content.Context mContext>;

        staticinvoke <com.android.internal.logging.MetricsLogger: void count(android.content.Context,java.lang.String,int)>($r2, "sth_unloading_stale_model", 1);

        if i7 == 0 goto label4;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unloadSoundModel call failed with ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", $r6);

        goto label5;

     label4:
        virtualinvoke r11.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: void clearState()>();

     label5:
        return i7;
    }

    private void updateAllRecognitionsLocked(boolean)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        boolean z0, z1, $z2;
        java.util.Iterator r1;
        java.util.ArrayList $r2;
        java.util.HashMap $r3;
        java.util.Collection $r4;
        java.lang.Object $r5;
        com.android.server.soundtrigger.SoundTriggerHelper$ModelData $r6;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        z0 := @parameter0: boolean;

        z1 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: boolean isRecognitionAllowed()>();

        $r2 = new java.util.ArrayList;

        $r3 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.util.HashMap mModelDataMap>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Collection values()>();

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        r1 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.android.server.soundtrigger.SoundTriggerHelper$ModelData) $r5;

        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: int updateRecognitionLocked(com.android.server.soundtrigger.SoundTriggerHelper$ModelData,boolean,boolean)>($r6, z1, z0);

        goto label1;

     label2:
        return;
    }

    private int updateRecognitionLocked(com.android.server.soundtrigger.SoundTriggerHelper$ModelData, boolean, boolean)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        com.android.server.soundtrigger.SoundTriggerHelper$ModelData r1;
        boolean z0, $z1, z2, z3, $z4;
        int i0, $i1, $i2;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        r1 := @parameter0: com.android.server.soundtrigger.SoundTriggerHelper$ModelData;

        z2 := @parameter1: boolean;

        z0 := @parameter2: boolean;

        $z1 = virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: boolean isRequested()>();

        if $z1 == 0 goto label1;

        if z2 == 0 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        $z4 = virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: boolean isModelStarted()>();

        if z3 != $z4 goto label3;

        return 0;

     label3:
        if z3 == 0 goto label5;

        i0 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: int prepareForRecognition(com.android.server.soundtrigger.SoundTriggerHelper$ModelData)>(r1);

        if i0 == 0 goto label4;

        return i0;

     label4:
        $i2 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: int startRecognitionLocked(com.android.server.soundtrigger.SoundTriggerHelper$ModelData,boolean)>(r1, z0);

        return $i2;

     label5:
        $i1 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: int stopRecognitionLocked(com.android.server.soundtrigger.SoundTriggerHelper$ModelData,boolean)>(r1, z0);

        return $i1;
    }

    void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        java.io.PrintWriter r1;
        android.hardware.soundtrigger.SoundTrigger$ModuleProperties $r2;
        boolean $z0, $z1, $z2;
        java.lang.Throwable $r3;
        java.io.FileDescriptor r4;
        java.lang.String[] r5;
        java.lang.Object r6, r7;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        r4 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r5 := @parameter2: java.lang.String[];

        r6 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.lang.Object mLock>;

        entermonitor r6;

     label1:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  module properties=");

        $r2 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTrigger$ModuleProperties mModuleProperties>;

        if $r2 != null goto label3;

     label2:
        r7 = "null";

        goto label4;

     label3:
        r7 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTrigger$ModuleProperties mModuleProperties>;

     label4:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>(r7);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  call active=");

        $z0 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: boolean mCallActive>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  power save mode active=");

        $z1 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: boolean mIsPowerSaveMode>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  service disabled=");

        $z2 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: boolean mServiceDisabled>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z2);

        exitmonitor r6;

     label5:
        return;

     label6:
        $r3 := @caughtexception;

     label7:
        exitmonitor r6;

     label8:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    int getGenericModelState(java.util.UUID)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        java.lang.Object r1, $r5;
        int i0, $i2;
        android.content.Context $r2;
        android.hardware.soundtrigger.SoundTriggerModule $r3, $r9;
        java.util.HashMap $r4;
        java.lang.String $r8, $r12, $r15;
        boolean $z0, $z1, $z2;
        java.lang.Throwable $r16;
        java.util.UUID r17;
        com.android.server.soundtrigger.SoundTriggerHelper$ModelData r18;
        java.lang.StringBuilder r19, r20, r21;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        r17 := @parameter0: java.util.UUID;

        r1 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.content.Context mContext>;

        staticinvoke <com.android.internal.logging.MetricsLogger: void count(android.content.Context,java.lang.String,int)>($r2, "sth_get_generic_model_state", 1);

     label02:
        if r17 == null goto label17;

     label03:
        $r3 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTriggerModule mModule>;

        if $r3 != null goto label05;

     label04:
        goto label17;

     label05:
        $r4 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.util.HashMap mModelDataMap>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r17);

        r18 = (com.android.server.soundtrigger.SoundTriggerHelper$ModelData) $r5;

     label06:
        if r18 == null goto label15;

     label07:
        $z0 = virtualinvoke r18.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: boolean isGenericModel()>();

        if $z0 != 0 goto label09;

     label08:
        goto label15;

     label09:
        $z1 = virtualinvoke r18.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: boolean isModelLoaded()>();

        if $z1 != 0 goto label11;

        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GetGenericModelState: Given generic model is not loaded:");

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);

        $r15 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SoundTriggerHelper", $r15);

        exitmonitor r1;

     label10:
        return -2147483648;

     label11:
        $z2 = virtualinvoke r18.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: boolean isModelStarted()>();

        if $z2 != 0 goto label13;

        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GetGenericModelState: Given generic model is not started:");

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);

        $r12 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SoundTriggerHelper", $r12);

        exitmonitor r1;

     label12:
        return -2147483648;

     label13:
        $r9 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTriggerModule mModule>;

        $i2 = virtualinvoke r18.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: int getHandle()>();

        i0 = virtualinvoke $r9.<android.hardware.soundtrigger.SoundTriggerModule: int getModelState(int)>($i2);

        exitmonitor r1;

     label14:
        return i0;

     label15:
        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GetGenericModelState error: Invalid generic model id:");

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);

        $r8 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", $r8);

        exitmonitor r1;

     label16:
        return -2147483648;

     label17:
        exitmonitor r1;

     label18:
        return -2147483648;

     label19:
        $r16 := @caughtexception;

     label20:
        exitmonitor r1;

     label21:
        throw $r16;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label05 to label06 with label19;
        catch java.lang.Throwable from label07 to label08 with label19;
        catch java.lang.Throwable from label09 to label10 with label19;
        catch java.lang.Throwable from label11 to label12 with label19;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.lang.Throwable from label15 to label16 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
    }

    int getKeyphraseModelState(java.util.UUID)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        java.util.UUID r1;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        r1 := @parameter0: java.util.UUID;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", "GetKeyphraseModelState error: Not implemented");

        return -2147483648;
    }

    int getKeyphraseParameter(int, int)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        int i0, i1, i2;
        java.lang.Object r1;
        com.android.server.soundtrigger.SoundTriggerHelper$ModelData $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r1 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: com.android.server.soundtrigger.SoundTriggerHelper$ModelData getKeyphraseModelDataLocked(int)>(i1);

        i2 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: int getParameterLocked(com.android.server.soundtrigger.SoundTriggerHelper$ModelData,int)>($r3, i0);

        exitmonitor r1;

     label2:
        return i2;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.hardware.soundtrigger.SoundTrigger$ModuleProperties getModuleProperties()
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        android.hardware.soundtrigger.SoundTrigger$ModuleProperties $r1;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        $r1 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTrigger$ModuleProperties mModuleProperties>;

        return $r1;
    }

    int getParameter(java.util.UUID, int)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        java.lang.Object r1, $r3;
        java.util.HashMap $r2;
        com.android.server.soundtrigger.SoundTriggerHelper$ModelData $r4;
        java.lang.Throwable $r5;
        java.util.UUID r6;
        int i0, i1;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        r6 := @parameter0: java.util.UUID;

        i0 := @parameter1: int;

        r1 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.util.HashMap mModelDataMap>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r6);

        $r4 = (com.android.server.soundtrigger.SoundTriggerHelper$ModelData) $r3;

        i1 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: int getParameterLocked(com.android.server.soundtrigger.SoundTriggerHelper$ModelData,int)>($r4, i0);

        exitmonitor r1;

     label2:
        return i1;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    boolean isRecognitionRequested(java.util.UUID)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        java.lang.Object r1, $r3;
        java.util.HashMap $r2;
        boolean $z0, z1;
        java.lang.Throwable $r4;
        java.util.UUID r5;
        com.android.server.soundtrigger.SoundTriggerHelper$ModelData r6;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        r5 := @parameter0: java.util.UUID;

        r1 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.util.HashMap mModelDataMap>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r5);

        r6 = (com.android.server.soundtrigger.SoundTriggerHelper$ModelData) $r3;

     label02:
        if r6 == null goto label05;

     label03:
        $z0 = virtualinvoke r6.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: boolean isRequested()>();

        if $z0 == 0 goto label05;

     label04:
        z1 = 1;

        goto label06;

     label05:
        z1 = 0;

     label06:
        exitmonitor r1;

     label07:
        return z1;

     label08:
        $r4 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void onRecognition(android.hardware.soundtrigger.SoundTrigger$RecognitionEvent)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        java.lang.Object r1;
        int i0;
        boolean $z0, $z1, $z2;
        android.hardware.soundtrigger.SoundTrigger$GenericRecognitionEvent $r2;
        android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionEvent $r3;
        java.lang.Throwable $r4;
        android.hardware.soundtrigger.SoundTrigger$RecognitionEvent r5;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        r5 := @parameter0: android.hardware.soundtrigger.SoundTrigger$RecognitionEvent;

        if r5 != null goto label01;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", "Null recognition event!");

        return;

     label01:
        $z0 = r5 instanceof android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionEvent;

        if $z0 != 0 goto label02;

        $z2 = r5 instanceof android.hardware.soundtrigger.SoundTrigger$GenericRecognitionEvent;

        if $z2 != 0 goto label02;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", "Invalid recognition event type (not one of generic or keyphrase)!");

        return;

     label02:
        r1 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.lang.Object mLock>;

        entermonitor r1;

     label03:
        i0 = r5.<android.hardware.soundtrigger.SoundTrigger$RecognitionEvent: int status>;

     label04:
        if i0 == 0 goto label09;

        if i0 == 1 goto label07;

        if i0 == 2 goto label05;

        if i0 == 3 goto label09;

        goto label12;

     label05:
        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: void onRecognitionFailureLocked()>();

     label06:
        goto label12;

     label07:
        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: void onRecognitionAbortLocked(android.hardware.soundtrigger.SoundTrigger$RecognitionEvent)>(r5);

     label08:
        goto label12;

     label09:
        $z1 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: boolean isKeyphraseRecognitionEvent(android.hardware.soundtrigger.SoundTrigger$RecognitionEvent)>(r5);

        if $z1 == 0 goto label11;

        $r3 = (android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionEvent) r5;

        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: void onKeyphraseRecognitionSuccessLocked(android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionEvent)>($r3);

     label10:
        goto label12;

     label11:
        $r2 = (android.hardware.soundtrigger.SoundTrigger$GenericRecognitionEvent) r5;

        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: void onGenericRecognitionSuccessLocked(android.hardware.soundtrigger.SoundTrigger$GenericRecognitionEvent)>($r2);

     label12:
        exitmonitor r1;

     label13:
        return;

     label14:
        $r4 := @caughtexception;

     label15:
        exitmonitor r1;

     label16:
        throw $r4;

        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label11 to label12 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    public void onServiceDied()
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        java.lang.Object r1;
        android.content.Context $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SoundTriggerHelper", "onServiceDied!!");

        $r3 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.content.Context mContext>;

        staticinvoke <com.android.internal.logging.MetricsLogger: void count(android.content.Context,java.lang.String,int)>($r3, "sth_service_died", 1);

        r1 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: void onServiceDiedLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onServiceStateChange(int)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        int i0;
        java.lang.Object r1;
        java.lang.Throwable $r3;
        boolean z0;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.lang.Object mLock>;

        entermonitor r1;

        z0 = 1;

        if 1 != i0 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: void onServiceStateChangedLocked(boolean)>(z0);

        exitmonitor r1;

     label3:
        return;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r3;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void onSoundModelUpdate(android.hardware.soundtrigger.SoundTrigger$SoundModelEvent)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        java.lang.Object r1;
        android.content.Context $r2;
        java.lang.Throwable $r3;
        android.hardware.soundtrigger.SoundTrigger$SoundModelEvent r4;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        r4 := @parameter0: android.hardware.soundtrigger.SoundTrigger$SoundModelEvent;

        if r4 != null goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", "Invalid sound model event!");

        return;

     label1:
        r1 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.lang.Object mLock>;

        entermonitor r1;

     label2:
        $r2 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.content.Context mContext>;

        staticinvoke <com.android.internal.logging.MetricsLogger: void count(android.content.Context,java.lang.String,int)>($r2, "sth_sound_model_updated", 1);

        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: void onSoundModelUpdatedLocked(android.hardware.soundtrigger.SoundTrigger$SoundModelEvent)>(r4);

        exitmonitor r1;

     label3:
        return;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r3;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    android.hardware.soundtrigger.SoundTrigger$ModelParamRange queryKeyphraseParameter(int, int)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        int i0, i1;
        java.lang.Object r1;
        com.android.server.soundtrigger.SoundTriggerHelper$ModelData $r2;
        java.lang.Throwable $r3;
        android.hardware.soundtrigger.SoundTrigger$ModelParamRange r4;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: com.android.server.soundtrigger.SoundTriggerHelper$ModelData getKeyphraseModelDataLocked(int)>(i0);

        r4 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTrigger$ModelParamRange queryParameterLocked(com.android.server.soundtrigger.SoundTriggerHelper$ModelData,int)>($r2, i1);

        exitmonitor r1;

     label2:
        return r4;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    android.hardware.soundtrigger.SoundTrigger$ModelParamRange queryParameter(java.util.UUID, int)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        int i0;
        java.lang.Object r1, $r3;
        java.util.HashMap $r2;
        com.android.server.soundtrigger.SoundTriggerHelper$ModelData $r4;
        java.lang.Throwable $r5;
        java.util.UUID r6;
        android.hardware.soundtrigger.SoundTrigger$ModelParamRange r7;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        r6 := @parameter0: java.util.UUID;

        i0 := @parameter1: int;

        r1 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.util.HashMap mModelDataMap>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r6);

        $r4 = (com.android.server.soundtrigger.SoundTriggerHelper$ModelData) $r3;

        r7 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTrigger$ModelParamRange queryParameterLocked(com.android.server.soundtrigger.SoundTriggerHelper$ModelData,int)>($r4, i0);

        exitmonitor r1;

     label2:
        return r7;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    int setKeyphraseParameter(int, int, int)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        int i0, i1, i2, i3;
        java.lang.Object r1;
        com.android.server.soundtrigger.SoundTriggerHelper$ModelData $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: com.android.server.soundtrigger.SoundTriggerHelper$ModelData getKeyphraseModelDataLocked(int)>(i2);

        i3 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: int setParameterLocked(com.android.server.soundtrigger.SoundTriggerHelper$ModelData,int,int)>($r3, i0, i1);

        exitmonitor r1;

     label2:
        return i3;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    int setParameter(java.util.UUID, int, int)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        int i0, i1, i2;
        java.lang.Object r1, $r3;
        java.util.HashMap $r2;
        com.android.server.soundtrigger.SoundTriggerHelper$ModelData $r4;
        java.lang.Throwable $r5;
        java.util.UUID r6;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        r6 := @parameter0: java.util.UUID;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        r1 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.util.HashMap mModelDataMap>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r6);

        $r4 = (com.android.server.soundtrigger.SoundTriggerHelper$ModelData) $r3;

        i2 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: int setParameterLocked(com.android.server.soundtrigger.SoundTriggerHelper$ModelData,int,int)>($r4, i1, i0);

        exitmonitor r1;

     label2:
        return i2;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    int startGenericRecognition(java.util.UUID, android.hardware.soundtrigger.SoundTrigger$GenericSoundModel, android.hardware.soundtrigger.IRecognitionStatusCallback, android.hardware.soundtrigger.SoundTrigger$RecognitionConfig)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        android.hardware.soundtrigger.SoundTrigger$GenericSoundModel r1;
        android.hardware.soundtrigger.IRecognitionStatusCallback r2;
        android.hardware.soundtrigger.SoundTrigger$RecognitionConfig r3;
        java.lang.Object r4;
        int i0;
        android.content.Context $r5;
        java.lang.Throwable $r6;
        java.util.UUID r7;
        com.android.server.soundtrigger.SoundTriggerHelper$ModelData r8;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        r7 := @parameter0: java.util.UUID;

        r1 := @parameter1: android.hardware.soundtrigger.SoundTrigger$GenericSoundModel;

        r2 := @parameter2: android.hardware.soundtrigger.IRecognitionStatusCallback;

        r3 := @parameter3: android.hardware.soundtrigger.SoundTrigger$RecognitionConfig;

        $r5 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.content.Context mContext>;

        staticinvoke <com.android.internal.logging.MetricsLogger: void count(android.content.Context,java.lang.String,int)>($r5, "sth_start_recognition", 1);

        if r7 == null goto label11;

        if r1 == null goto label11;

        if r2 == null goto label11;

        if r3 != null goto label01;

        goto label11;

     label01:
        r4 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.lang.Object mLock>;

        entermonitor r4;

     label02:
        r8 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: com.android.server.soundtrigger.SoundTriggerHelper$ModelData getOrCreateGenericModelDataLocked(java.util.UUID)>(r7);

     label03:
        if r8 != null goto label06;

     label04:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", "Irrecoverable error occurred, check UUID / sound model data.");

        exitmonitor r4;

     label05:
        return -2147483648;

     label06:
        i0 = virtualinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: int startRecognition(android.hardware.soundtrigger.SoundTrigger$SoundModel,com.android.server.soundtrigger.SoundTriggerHelper$ModelData,android.hardware.soundtrigger.IRecognitionStatusCallback,android.hardware.soundtrigger.SoundTrigger$RecognitionConfig,int)>(r1, r8, r2, r3, -2147483648);

        exitmonitor r4;

     label07:
        return i0;

     label08:
        $r6 := @caughtexception;

     label09:
        exitmonitor r4;

     label10:
        throw $r6;

     label11:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", "Passed in bad data to startGenericRecognition().");

        return -2147483648;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    int startKeyphraseRecognition(int, android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel, android.hardware.soundtrigger.IRecognitionStatusCallback, android.hardware.soundtrigger.SoundTrigger$RecognitionConfig)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        android.hardware.soundtrigger.IRecognitionStatusCallback r1;
        android.hardware.soundtrigger.SoundTrigger$RecognitionConfig r2;
        java.lang.Object r3;
        com.android.server.soundtrigger.SoundTriggerHelper$ModelData r4, r11;
        int i0, i2, i3;
        android.content.Context $r5;
        java.util.UUID $r6, $r7, $r8;
        boolean $z0, $z1;
        java.lang.Throwable $r9;
        android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel r10;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        i2 := @parameter0: int;

        r10 := @parameter1: android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel;

        r1 := @parameter2: android.hardware.soundtrigger.IRecognitionStatusCallback;

        r2 := @parameter3: android.hardware.soundtrigger.SoundTrigger$RecognitionConfig;

        r3 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.lang.Object mLock>;

        entermonitor r3;

     label01:
        $r5 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.content.Context mContext>;

        staticinvoke <com.android.internal.logging.MetricsLogger: void count(android.content.Context,java.lang.String,int)>($r5, "sth_start_recognition", 1);

     label02:
        if r10 == null goto label19;

        if r1 == null goto label19;

        if r2 != null goto label03;

        goto label19;

     label03:
        r4 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: com.android.server.soundtrigger.SoundTriggerHelper$ModelData getKeyphraseModelDataLocked(int)>(i2);

     label04:
        if r4 == null goto label07;

     label05:
        $z1 = virtualinvoke r4.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: boolean isKeyphraseModel()>();

        if $z1 != 0 goto label07;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SoundTriggerHelper", "Generic model with same UUID exists.");

        exitmonitor r3;

     label06:
        return -2147483648;

     label07:
        r11 = r4;

        if r4 == null goto label14;

        r11 = r4;

     label08:
        $r7 = virtualinvoke r4.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: java.util.UUID getModelId()>();

        $r8 = virtualinvoke r10.<android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel: java.util.UUID getUuid()>();

        $z0 = virtualinvoke $r7.<java.util.UUID: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label14;

        i0 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: int cleanUpExistingKeyphraseModelLocked(com.android.server.soundtrigger.SoundTriggerHelper$ModelData)>(r4);

     label09:
        if i0 == 0 goto label12;

     label10:
        exitmonitor r3;

     label11:
        return i0;

     label12:
        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: void removeKeyphraseModelLocked(int)>(i2);

     label13:
        r11 = null;

     label14:
        if r11 != null goto label17;

     label15:
        $r6 = virtualinvoke r10.<android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel: java.util.UUID getUuid()>();

        r11 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: com.android.server.soundtrigger.SoundTriggerHelper$ModelData createKeyphraseModelDataLocked(java.util.UUID,int)>($r6, i2);

     label16:
        goto label17;

     label17:
        i3 = virtualinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: int startRecognition(android.hardware.soundtrigger.SoundTrigger$SoundModel,com.android.server.soundtrigger.SoundTriggerHelper$ModelData,android.hardware.soundtrigger.IRecognitionStatusCallback,android.hardware.soundtrigger.SoundTrigger$RecognitionConfig,int)>(r10, r11, r1, r2, i2);

        exitmonitor r3;

     label18:
        return i3;

     label19:
        exitmonitor r3;

     label20:
        return -2147483648;

     label21:
        $r9 := @caughtexception;

     label22:
        exitmonitor r3;

     label23:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label21;
        catch java.lang.Throwable from label03 to label04 with label21;
        catch java.lang.Throwable from label05 to label06 with label21;
        catch java.lang.Throwable from label08 to label09 with label21;
        catch java.lang.Throwable from label10 to label11 with label21;
        catch java.lang.Throwable from label12 to label13 with label21;
        catch java.lang.Throwable from label15 to label16 with label21;
        catch java.lang.Throwable from label17 to label18 with label21;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label22 to label23 with label21;
    }

    int startRecognition(android.hardware.soundtrigger.SoundTrigger$SoundModel, com.android.server.soundtrigger.SoundTriggerHelper$ModelData, android.hardware.soundtrigger.IRecognitionStatusCallback, android.hardware.soundtrigger.SoundTrigger$RecognitionConfig, int)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        com.android.server.soundtrigger.SoundTriggerHelper$ModelData r1;
        android.hardware.soundtrigger.IRecognitionStatusCallback r2, r5;
        android.hardware.soundtrigger.SoundTrigger$RecognitionConfig r3;
        java.lang.Object r4;
        android.hardware.soundtrigger.SoundTrigger$ModuleProperties $r6;
        android.hardware.soundtrigger.SoundTrigger$SoundModel $r7, $r8, r21, $r24;
        boolean $z0, $z1, $z2, z3, z4, $z5;
        java.lang.String $r10, $r12, $r18;
        android.os.IBinder $r13, $r14;
        java.util.UUID $r16;
        android.os.RemoteException $r19;
        java.lang.Throwable $r20;
        int i5, i6, i7, i8;
        java.lang.StringBuilder r22, r25;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        r21 := @parameter0: android.hardware.soundtrigger.SoundTrigger$SoundModel;

        r1 := @parameter1: com.android.server.soundtrigger.SoundTriggerHelper$ModelData;

        r2 := @parameter2: android.hardware.soundtrigger.IRecognitionStatusCallback;

        r3 := @parameter3: android.hardware.soundtrigger.SoundTrigger$RecognitionConfig;

        i5 := @parameter4: int;

        r4 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.lang.Object mLock>;

        entermonitor r4;

     label01:
        $r6 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTrigger$ModuleProperties mModuleProperties>;

        if $r6 != null goto label03;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", "Attempting startRecognition without the capability");

        exitmonitor r4;

     label02:
        return -2147483648;

     label03:
        r5 = virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: android.hardware.soundtrigger.IRecognitionStatusCallback getCallback()>();

     label04:
        if r5 == null goto label11;

     label05:
        $r13 = interfaceinvoke r5.<android.hardware.soundtrigger.IRecognitionStatusCallback: android.os.IBinder asBinder()>();

        $r14 = interfaceinvoke r2.<android.hardware.soundtrigger.IRecognitionStatusCallback: android.os.IBinder asBinder()>();

        if $r13 == $r14 goto label11;

        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Canceling previous recognition for model id: ");

        $r16 = virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: java.util.UUID getModelId()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", $r18);

     label06:
        interfaceinvoke r5.<android.hardware.soundtrigger.IRecognitionStatusCallback: void onError(int)>(-2147483648);

     label07:
        goto label10;

     label08:
        $r19 := @caughtexception;

     label09:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("SoundTriggerHelper", "RemoteException in onDetectionStopped", $r19);

     label10:
        virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: void clearCallback()>();

     label11:
        $r24 = virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: android.hardware.soundtrigger.SoundTrigger$SoundModel getSoundModel()>();

        if $r24 == null goto label21;

     label12:
        z3 = 0;

        z4 = 0;

     label13:
        $r7 = virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: android.hardware.soundtrigger.SoundTrigger$SoundModel getSoundModel()>();

        $z0 = virtualinvoke $r7.<android.hardware.soundtrigger.SoundTrigger$SoundModel: boolean equals(java.lang.Object)>(r21);

        if $z0 == 0 goto label15;

        $z2 = virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: boolean isModelStarted()>();

        if $z2 == 0 goto label15;

     label14:
        z3 = 1;

        z4 = 0;

        goto label16;

     label15:
        $r8 = virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: android.hardware.soundtrigger.SoundTrigger$SoundModel getSoundModel()>();

        $z1 = virtualinvoke $r8.<android.hardware.soundtrigger.SoundTrigger$SoundModel: boolean equals(java.lang.Object)>(r21);

        if $z1 != 0 goto label16;

        z3 = virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: boolean isModelStarted()>();

        z4 = virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: boolean isModelLoaded()>();

     label16:
        if z3 != 0 goto label17;

        if z4 == 0 goto label21;

     label17:
        i6 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: int tryStopAndUnloadLocked(com.android.server.soundtrigger.SoundTriggerHelper$ModelData,boolean,boolean)>(r1, z3, z4);

     label18:
        if i6 == 0 goto label21;

     label19:
        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to stop or unload previous model: ");

        $r10 = virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: java.lang.String toString()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", $r12);

        exitmonitor r4;

     label20:
        return i6;

     label21:
        virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: void setCallback(android.hardware.soundtrigger.IRecognitionStatusCallback)>(r2);

        virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: void setRequested(boolean)>(1);

        virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: void setRecognitionConfig(android.hardware.soundtrigger.SoundTrigger$RecognitionConfig)>(r3);

        virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: void setSoundModel(android.hardware.soundtrigger.SoundTrigger$SoundModel)>(r21);

        $z5 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: boolean isRecognitionAllowed()>();

        if $z5 != 0 goto label23;

        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: void initializeTelephonyAndPowerStateListeners()>();

        exitmonitor r4;

     label22:
        return 0;

     label23:
        i7 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: int prepareForRecognition(com.android.server.soundtrigger.SoundTriggerHelper$ModelData)>(r1);

     label24:
        if i7 == 0 goto label27;

     label25:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", "startRecognition failed to prepare model for recognition");

        exitmonitor r4;

     label26:
        return i7;

     label27:
        i8 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: int startRecognitionLocked(com.android.server.soundtrigger.SoundTriggerHelper$ModelData,boolean)>(r1, 0);

     label28:
        if i8 != 0 goto label30;

     label29:
        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: void initializeTelephonyAndPowerStateListeners()>();

     label30:
        exitmonitor r4;

     label31:
        return i8;

     label32:
        $r20 := @caughtexception;

     label33:
        exitmonitor r4;

     label34:
        throw $r20;

        catch java.lang.Throwable from label01 to label02 with label32;
        catch java.lang.Throwable from label03 to label04 with label32;
        catch java.lang.Throwable from label05 to label06 with label32;
        catch android.os.RemoteException from label06 to label07 with label08;
        catch java.lang.Throwable from label06 to label07 with label32;
        catch java.lang.Throwable from label09 to label10 with label32;
        catch java.lang.Throwable from label10 to label11 with label32;
        catch java.lang.Throwable from label11 to label12 with label32;
        catch java.lang.Throwable from label13 to label14 with label32;
        catch java.lang.Throwable from label15 to label16 with label32;
        catch java.lang.Throwable from label17 to label18 with label32;
        catch java.lang.Throwable from label19 to label20 with label32;
        catch java.lang.Throwable from label21 to label22 with label32;
        catch java.lang.Throwable from label23 to label24 with label32;
        catch java.lang.Throwable from label25 to label26 with label32;
        catch java.lang.Throwable from label27 to label28 with label32;
        catch java.lang.Throwable from label29 to label30 with label32;
        catch java.lang.Throwable from label30 to label31 with label32;
        catch java.lang.Throwable from label33 to label34 with label32;
    }

    int stopGenericRecognition(java.util.UUID, android.hardware.soundtrigger.IRecognitionStatusCallback)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        java.lang.Object r1, $r8;
        com.android.server.soundtrigger.SoundTriggerHelper$ModelData r2;
        int i0;
        android.content.Context $r3;
        java.lang.String $r6, $r11, $r14;
        java.util.HashMap $r7;
        boolean $z0;
        java.lang.Throwable $r15;
        java.util.UUID r16;
        android.hardware.soundtrigger.IRecognitionStatusCallback r17;
        java.lang.StringBuilder r18, r19, r20;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        r16 := @parameter0: java.util.UUID;

        r17 := @parameter1: android.hardware.soundtrigger.IRecognitionStatusCallback;

        r1 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.content.Context mContext>;

        staticinvoke <com.android.internal.logging.MetricsLogger: void count(android.content.Context,java.lang.String,int)>($r3, "sth_stop_recognition", 1);

     label02:
        if r17 == null goto label14;

        if r16 != null goto label03;

        goto label14;

     label03:
        $r7 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.util.HashMap mModelDataMap>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r16);

        r2 = (com.android.server.soundtrigger.SoundTriggerHelper$ModelData) $r8;

     label04:
        if r2 == null goto label12;

     label05:
        $z0 = virtualinvoke r2.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: boolean isGenericModel()>();

        if $z0 != 0 goto label07;

     label06:
        goto label12;

     label07:
        i0 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: int stopRecognition(com.android.server.soundtrigger.SoundTriggerHelper$ModelData,android.hardware.soundtrigger.IRecognitionStatusCallback)>(r2, r17);

     label08:
        if i0 == 0 goto label10;

     label09:
        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stopGenericRecognition failed: ");

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", $r14);

     label10:
        exitmonitor r1;

     label11:
        return i0;

     label12:
        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempting stopRecognition on invalid model with id:");

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16);

        $r11 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", $r11);

        exitmonitor r1;

     label13:
        return -2147483648;

     label14:
        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Null callbackreceived for stopGenericRecognition() for modelid:");

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16);

        $r6 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SoundTriggerHelper", $r6);

        exitmonitor r1;

     label15:
        return -2147483648;

     label16:
        $r15 := @caughtexception;

     label17:
        exitmonitor r1;

     label18:
        throw $r15;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    int stopKeyphraseRecognition(int, android.hardware.soundtrigger.IRecognitionStatusCallback)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        java.lang.Object r1;
        com.android.server.soundtrigger.SoundTriggerHelper$ModelData r2;
        android.content.Context $r3;
        java.lang.String $r6, $r9;
        boolean $z0;
        java.lang.Throwable $r10;
        int i2, i3;
        android.hardware.soundtrigger.IRecognitionStatusCallback r11;
        java.lang.StringBuilder r12, r13;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        i2 := @parameter0: int;

        r11 := @parameter1: android.hardware.soundtrigger.IRecognitionStatusCallback;

        r1 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.content.Context mContext>;

        staticinvoke <com.android.internal.logging.MetricsLogger: void count(android.content.Context,java.lang.String,int)>($r3, "sth_stop_recognition", 1);

     label02:
        if r11 != null goto label05;

     label03:
        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Null callback received for stopKeyphraseRecognition() for keyphraseId:");

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r9 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SoundTriggerHelper", $r9);

        exitmonitor r1;

     label04:
        return -2147483648;

     label05:
        r2 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: com.android.server.soundtrigger.SoundTriggerHelper$ModelData getKeyphraseModelDataLocked(int)>(i2);

     label06:
        if r2 == null goto label15;

     label07:
        $z0 = virtualinvoke r2.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: boolean isKeyphraseModel()>();

        if $z0 != 0 goto label09;

     label08:
        goto label15;

     label09:
        i3 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: int stopRecognition(com.android.server.soundtrigger.SoundTriggerHelper$ModelData,android.hardware.soundtrigger.IRecognitionStatusCallback)>(r2, r11);

     label10:
        if i3 == 0 goto label13;

     label11:
        exitmonitor r1;

     label12:
        return i3;

     label13:
        exitmonitor r1;

     label14:
        return i3;

     label15:
        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No model exists for given keyphrase Id ");

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r6 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SoundTriggerHelper", $r6);

        exitmonitor r1;

     label16:
        return -2147483648;

     label17:
        $r10 := @caughtexception;

     label18:
        exitmonitor r1;

     label19:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    int unloadGenericSoundModel(java.util.UUID)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        java.lang.Object r1, $r6;
        java.lang.StringBuilder r2, r25, r27, r28;
        android.content.Context $r3;
        android.hardware.soundtrigger.SoundTriggerModule $r4, $r10, $r26;
        java.util.HashMap $r5, $r11;
        java.lang.String $r9, $r15, $r18, $r21;
        boolean $z0, $z1, $z2;
        int $i1, i6, i7;
        java.lang.Throwable $r22;
        java.util.UUID r23;
        com.android.server.soundtrigger.SoundTriggerHelper$ModelData r24;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        r23 := @parameter0: java.util.UUID;

        r1 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.content.Context mContext>;

        staticinvoke <com.android.internal.logging.MetricsLogger: void count(android.content.Context,java.lang.String,int)>($r3, "sth_unload_generic_sound_model", 1);

     label02:
        if r23 == null goto label23;

     label03:
        $r4 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTriggerModule mModule>;

        if $r4 != null goto label05;

     label04:
        goto label23;

     label05:
        $r5 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.util.HashMap mModelDataMap>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r23);

        r24 = (com.android.server.soundtrigger.SoundTriggerHelper$ModelData) $r6;

     label06:
        if r24 == null goto label21;

     label07:
        $z0 = virtualinvoke r24.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: boolean isGenericModel()>();

        if $z0 != 0 goto label09;

     label08:
        goto label21;

     label09:
        $z1 = virtualinvoke r24.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: boolean isModelLoaded()>();

        if $z1 != 0 goto label11;

        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unload: Given generic model is not loaded:");

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r23);

        $r21 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SoundTriggerHelper", $r21);

        exitmonitor r1;

     label10:
        return 0;

     label11:
        $z2 = virtualinvoke r24.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: boolean isModelStarted()>();

        if $z2 == 0 goto label14;

        i6 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: int stopRecognitionLocked(com.android.server.soundtrigger.SoundTriggerHelper$ModelData,boolean)>(r24, 0);

     label12:
        if i6 == 0 goto label14;

     label13:
        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stopGenericRecognition failed: ");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r18 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", $r18);

     label14:
        $r26 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTriggerModule mModule>;

        if $r26 != null goto label16;

        exitmonitor r1;

     label15:
        return -2147483648;

     label16:
        $r10 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTriggerModule mModule>;

        $i1 = virtualinvoke r24.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: int getHandle()>();

        i7 = virtualinvoke $r10.<android.hardware.soundtrigger.SoundTriggerModule: int unloadSoundModel(int)>($i1);

     label17:
        if i7 == 0 goto label19;

     label18:
        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unloadGenericSoundModel() call failed with ");

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        $r15 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", $r15);

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", "unloadGenericSoundModel() force-marking model as unloaded.");

     label19:
        $r11 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.util.HashMap mModelDataMap>;

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r23);

        exitmonitor r1;

     label20:
        return i7;

     label21:
        r28 = new java.lang.StringBuilder;

        specialinvoke r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unload error: Attempting unload invalid generic model with id:");

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r23);

        $r9 = virtualinvoke r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", $r9);

        exitmonitor r1;

     label22:
        return -2147483648;

     label23:
        exitmonitor r1;

     label24:
        return -2147483648;

     label25:
        $r22 := @caughtexception;

     label26:
        exitmonitor r1;

     label27:
        throw $r22;

        catch java.lang.Throwable from label01 to label02 with label25;
        catch java.lang.Throwable from label03 to label04 with label25;
        catch java.lang.Throwable from label05 to label06 with label25;
        catch java.lang.Throwable from label07 to label08 with label25;
        catch java.lang.Throwable from label09 to label10 with label25;
        catch java.lang.Throwable from label11 to label12 with label25;
        catch java.lang.Throwable from label13 to label14 with label25;
        catch java.lang.Throwable from label14 to label15 with label25;
        catch java.lang.Throwable from label16 to label17 with label25;
        catch java.lang.Throwable from label18 to label19 with label25;
        catch java.lang.Throwable from label19 to label20 with label25;
        catch java.lang.Throwable from label21 to label22 with label25;
        catch java.lang.Throwable from label23 to label24 with label25;
        catch java.lang.Throwable from label26 to label27 with label25;
    }

    int unloadKeyphraseSoundModel(int)
    {
        com.android.server.soundtrigger.SoundTriggerHelper r0;
        int i0, $i1, i4, i5;
        java.lang.Object r1;
        com.android.server.soundtrigger.SoundTriggerHelper$ModelData r2;
        android.content.Context $r3;
        android.hardware.soundtrigger.SoundTriggerModule $r4, $r5;
        boolean $z0, $z1, $z2;
        java.lang.String $r8, $r11;
        java.lang.Throwable $r12;
        java.lang.StringBuilder r13, r14;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerHelper;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.content.Context mContext>;

        staticinvoke <com.android.internal.logging.MetricsLogger: void count(android.content.Context,java.lang.String,int)>($r3, "sth_unload_keyphrase_sound_model", 1);

        r2 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: com.android.server.soundtrigger.SoundTriggerHelper$ModelData getKeyphraseModelDataLocked(int)>(i0);

        $r4 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTriggerModule mModule>;

        if $r4 == null goto label13;

     label02:
        if r2 == null goto label13;

     label03:
        $z0 = virtualinvoke r2.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: boolean isModelLoaded()>();

        if $z0 == 0 goto label13;

        $z1 = virtualinvoke r2.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: boolean isKeyphraseModel()>();

        if $z1 != 0 goto label05;

     label04:
        goto label13;

     label05:
        virtualinvoke r2.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: void setRequested(boolean)>(0);

        $z2 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: boolean isRecognitionAllowed()>();

        i4 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: int updateRecognitionLocked(com.android.server.soundtrigger.SoundTriggerHelper$ModelData,boolean,boolean)>(r2, $z2, 0);

     label06:
        if i4 == 0 goto label08;

     label07:
        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stop recognition failed for keyphrase ID:");

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r11 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", $r11);

     label08:
        $r5 = r0.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTriggerModule mModule>;

        $i1 = virtualinvoke r2.<com.android.server.soundtrigger.SoundTriggerHelper$ModelData: int getHandle()>();

        i5 = virtualinvoke $r5.<android.hardware.soundtrigger.SoundTriggerModule: int unloadSoundModel(int)>($i1);

     label09:
        if i5 == 0 goto label11;

     label10:
        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unloadKeyphraseSoundModel call failed with ");

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r8 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerHelper", $r8);

     label11:
        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerHelper: void removeKeyphraseModelLocked(int)>(i0);

        exitmonitor r1;

     label12:
        return i5;

     label13:
        exitmonitor r1;

     label14:
        return -2147483648;

     label15:
        $r12 := @caughtexception;

     label16:
        exitmonitor r1;

     label17:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public static void <clinit>()
    {
        <com.android.server.soundtrigger.SoundTriggerHelper: java.lang.String TAG> = "SoundTriggerHelper";

        <com.android.server.soundtrigger.SoundTriggerHelper: int STATUS_OK> = 0;

        <com.android.server.soundtrigger.SoundTriggerHelper: int STATUS_ERROR> = -2147483648;

        <com.android.server.soundtrigger.SoundTriggerHelper: int MSG_CALL_STATE_CHANGED> = 0;

        <com.android.server.soundtrigger.SoundTriggerHelper: int INVALID_VALUE> = -2147483648;

        <com.android.server.soundtrigger.SoundTriggerHelper: boolean DBG> = 0;

        <com.android.server.soundtrigger.SoundTriggerHelper: int CALL_INACTIVE_MSG_DELAY_MS> = 1000;

        return;
    }
}
