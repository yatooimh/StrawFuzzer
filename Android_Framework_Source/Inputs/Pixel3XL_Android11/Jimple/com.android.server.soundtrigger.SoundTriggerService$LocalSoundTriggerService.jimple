public final class com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService extends com.android.server.soundtrigger.SoundTriggerInternal
{
    private final android.content.Context mContext;
    private com.android.server.soundtrigger.SoundTriggerHelper mSoundTriggerHelper;
    final com.android.server.soundtrigger.SoundTriggerService this$0;

    void <init>(com.android.server.soundtrigger.SoundTriggerService, android.content.Context)
    {
        com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService r0;
        com.android.server.soundtrigger.SoundTriggerService r1;
        android.content.Context r2;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService;

        r1 := @parameter0: com.android.server.soundtrigger.SoundTriggerService;

        r2 := @parameter1: android.content.Context;

        r0.<com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService: com.android.server.soundtrigger.SoundTriggerService this$0> = r1;

        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerInternal: void <init>()>();

        r0.<com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService: android.content.Context mContext> = r2;

        return;
    }

    private boolean isInitialized()
    {
        com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService r0;
        com.android.server.soundtrigger.SoundTriggerLogger r1;
        com.android.server.soundtrigger.SoundTriggerHelper $r2;
        java.lang.Throwable $r3;
        com.android.server.soundtrigger.SoundTriggerLogger$StringEvent r4;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService: com.android.server.soundtrigger.SoundTriggerHelper mSoundTriggerHelper>;

        if $r2 != null goto label3;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SoundTriggerService", "SoundTriggerHelper not initialized.");

        r1 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        r4 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        specialinvoke r4.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>("SoundTriggerHelper not initialized.");

        virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>(r4);

     label2:
        exitmonitor r0;

        return 0;

     label3:
        exitmonitor r0;

        return 1;

     label4:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        boolean $z0;
        com.android.server.soundtrigger.SoundTriggerHelper $r4;
        com.android.server.soundtrigger.SoundTriggerLogger $r5;
        com.android.server.soundtrigger.SoundTriggerService $r6, $r8;
        com.android.server.soundtrigger.SoundTriggerDbHelper $r7;
        com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker $r9;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $z0 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService: boolean isInitialized()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r4 = r0.<com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService: com.android.server.soundtrigger.SoundTriggerHelper mSoundTriggerHelper>;

        virtualinvoke $r4.<com.android.server.soundtrigger.SoundTriggerHelper: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3);

        $r5 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        virtualinvoke $r5.<com.android.server.soundtrigger.SoundTriggerLogger: void dump(java.io.PrintWriter)>(r2);

        $r6 = r0.<com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r7 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerDbHelper access$500(com.android.server.soundtrigger.SoundTriggerService)>($r6);

        virtualinvoke $r7.<com.android.server.soundtrigger.SoundTriggerDbHelper: void dump(java.io.PrintWriter)>(r2);

        $r8 = r0.<com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r9 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker access$400(com.android.server.soundtrigger.SoundTriggerService)>($r8);

        virtualinvoke $r9.<com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker: void dump(java.io.PrintWriter)>(r2);

        return;
    }

    public android.hardware.soundtrigger.SoundTrigger$ModuleProperties getModuleProperties()
    {
        com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService r0;
        boolean $z0;
        java.lang.UnsupportedOperationException $r1;
        com.android.server.soundtrigger.SoundTriggerHelper $r2;
        android.hardware.soundtrigger.SoundTrigger$ModuleProperties $r3;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService;

        $z0 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService: boolean isInitialized()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService: com.android.server.soundtrigger.SoundTriggerHelper mSoundTriggerHelper>;

        $r3 = virtualinvoke $r2.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTrigger$ModuleProperties getModuleProperties()>();

        return $r3;

     label1:
        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public int getParameter(int, int)
    {
        com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService r0;
        int i0, i1, $i2;
        boolean $z0;
        java.lang.UnsupportedOperationException $r1;
        com.android.server.soundtrigger.SoundTriggerHelper $r2;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService: boolean isInitialized()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService: com.android.server.soundtrigger.SoundTriggerHelper mSoundTriggerHelper>;

        $i2 = virtualinvoke $r2.<com.android.server.soundtrigger.SoundTriggerHelper: int getKeyphraseParameter(int,int)>(i0, i1);

        return $i2;

     label1:
        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public android.hardware.soundtrigger.SoundTrigger$ModelParamRange queryParameter(int, int)
    {
        com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService r0;
        int i0, i1;
        boolean $z0;
        java.lang.UnsupportedOperationException $r1;
        com.android.server.soundtrigger.SoundTriggerHelper $r2;
        android.hardware.soundtrigger.SoundTrigger$ModelParamRange $r3;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService: boolean isInitialized()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService: com.android.server.soundtrigger.SoundTriggerHelper mSoundTriggerHelper>;

        $r3 = virtualinvoke $r2.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTrigger$ModelParamRange queryKeyphraseParameter(int,int)>(i0, i1);

        return $r3;

     label1:
        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public int setParameter(int, int, int)
    {
        com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService r0;
        int i0, i1, i2, $i3;
        boolean $z0;
        java.lang.UnsupportedOperationException $r1;
        com.android.server.soundtrigger.SoundTriggerHelper $r2;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $z0 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService: boolean isInitialized()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService: com.android.server.soundtrigger.SoundTriggerHelper mSoundTriggerHelper>;

        $i3 = virtualinvoke $r2.<com.android.server.soundtrigger.SoundTriggerHelper: int setKeyphraseParameter(int,int,int)>(i0, i1, i2);

        return $i3;

     label1:
        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    void setSoundTriggerHelper(com.android.server.soundtrigger.SoundTriggerHelper)
    {
        com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService r0;
        java.lang.Throwable $r1;
        com.android.server.soundtrigger.SoundTriggerHelper r2;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService;

        r2 := @parameter0: com.android.server.soundtrigger.SoundTriggerHelper;

        entermonitor r0;

     label1:
        r0.<com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService: com.android.server.soundtrigger.SoundTriggerHelper mSoundTriggerHelper> = r2;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int startRecognition(int, android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel, android.hardware.soundtrigger.IRecognitionStatusCallback, android.hardware.soundtrigger.SoundTrigger$RecognitionConfig)
    {
        com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService r0;
        int i0, $i1;
        android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel r1;
        android.hardware.soundtrigger.IRecognitionStatusCallback r2;
        android.hardware.soundtrigger.SoundTrigger$RecognitionConfig r3;
        boolean $z0;
        java.lang.UnsupportedOperationException $r4;
        com.android.server.soundtrigger.SoundTriggerHelper $r5;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel;

        r2 := @parameter2: android.hardware.soundtrigger.IRecognitionStatusCallback;

        r3 := @parameter3: android.hardware.soundtrigger.SoundTrigger$RecognitionConfig;

        $z0 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService: boolean isInitialized()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService: com.android.server.soundtrigger.SoundTriggerHelper mSoundTriggerHelper>;

        $i1 = virtualinvoke $r5.<com.android.server.soundtrigger.SoundTriggerHelper: int startKeyphraseRecognition(int,android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel,android.hardware.soundtrigger.IRecognitionStatusCallback,android.hardware.soundtrigger.SoundTrigger$RecognitionConfig)>(i0, r1, r2, r3);

        return $i1;

     label1:
        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r4;
    }

    public int stopRecognition(int, android.hardware.soundtrigger.IRecognitionStatusCallback)
    {
        com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService r0;
        boolean $z0;
        com.android.server.soundtrigger.SoundTriggerHelper $r1;
        java.lang.Throwable $r2;
        int i0, i1;
        android.hardware.soundtrigger.IRecognitionStatusCallback r3;
        java.lang.UnsupportedOperationException r4;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService;

        i0 := @parameter0: int;

        r3 := @parameter1: android.hardware.soundtrigger.IRecognitionStatusCallback;

        entermonitor r0;

     label1:
        $z0 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService: boolean isInitialized()>();

        if $z0 == 0 goto label3;

        $r1 = r0.<com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService: com.android.server.soundtrigger.SoundTriggerHelper mSoundTriggerHelper>;

        i1 = virtualinvoke $r1.<com.android.server.soundtrigger.SoundTriggerHelper: int stopKeyphraseRecognition(int,android.hardware.soundtrigger.IRecognitionStatusCallback)>(i0, r3);

     label2:
        exitmonitor r0;

        return i1;

     label3:
        r4 = new java.lang.UnsupportedOperationException;

        specialinvoke r4.<java.lang.UnsupportedOperationException: void <init>()>();

        throw r4;

     label4:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
    }

    public int unloadKeyphraseModel(int)
    {
        com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService r0;
        int i0, $i1;
        boolean $z0;
        java.lang.UnsupportedOperationException $r1;
        com.android.server.soundtrigger.SoundTriggerHelper $r2;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService: boolean isInitialized()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService: com.android.server.soundtrigger.SoundTriggerHelper mSoundTriggerHelper>;

        $i1 = virtualinvoke $r2.<com.android.server.soundtrigger.SoundTriggerHelper: int unloadKeyphraseSoundModel(int)>(i0);

        return $i1;

     label1:
        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }
}
