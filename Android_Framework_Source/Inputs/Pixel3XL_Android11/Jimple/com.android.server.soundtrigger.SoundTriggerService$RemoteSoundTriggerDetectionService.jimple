class com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService extends android.hardware.soundtrigger.IRecognitionStatusCallback$Stub implements android.content.ServiceConnection
{
    private static final int MSG_STOP_ALL_PENDING_OPERATIONS;
    private final android.media.soundtrigger.ISoundTriggerDetectionServiceClient mClient;
    private boolean mDestroyOnceRunningOpsDone;
    private final android.os.Handler mHandler;
    private boolean mIsBound;
    private boolean mIsDestroyed;
    private final com.android.server.soundtrigger.SoundTriggerService$NumOps mNumOps;
    private int mNumTotalOpsPerformed;
    private final android.os.Bundle mParams;
    private final java.util.ArrayList mPendingOps;
    private final android.os.ParcelUuid mPuuid;
    private final android.hardware.soundtrigger.SoundTrigger$RecognitionConfig mRecognitionConfig;
    private final java.lang.Object mRemoteServiceLock;
    private final android.os.PowerManager$WakeLock mRemoteServiceWakeLock;
    private final android.util.ArraySet mRunningOpIds;
    private android.media.soundtrigger.ISoundTriggerDetectionService mService;
    private final android.content.ComponentName mServiceName;
    private final android.os.UserHandle mUser;
    final com.android.server.soundtrigger.SoundTriggerService this$0;

    public void <init>(com.android.server.soundtrigger.SoundTriggerService, java.util.UUID, android.os.Bundle, android.content.ComponentName, android.os.UserHandle, android.hardware.soundtrigger.SoundTrigger$RecognitionConfig)
    {
        com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService r0;
        android.os.UserHandle r1;
        android.hardware.soundtrigger.SoundTrigger$RecognitionConfig r2;
        java.lang.Object $r3, $r10, $r25, r38;
        java.util.ArrayList $r4;
        android.util.ArraySet $r5;
        android.os.ParcelUuid $r6;
        android.os.Handler $r7;
        android.os.Looper $r8;
        android.content.Context $r9;
        java.lang.StringBuilder $r11;
        android.content.ComponentName $r13, $r17, $r23, $r28, r35;
        java.lang.String $r14, $r18, $r20, $r24, $r29;
        android.os.PowerManager$WakeLock $r21;
        android.util.ArrayMap $r22, $r27;
        com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService$1 $r26;
        java.lang.Throwable $r31;
        com.android.server.soundtrigger.SoundTriggerService r32;
        java.util.UUID r33;
        android.os.Bundle r34;
        android.os.PowerManager r36;
        com.android.server.soundtrigger.SoundTriggerService$NumOps r39, r40;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService;

        r32 := @parameter0: com.android.server.soundtrigger.SoundTriggerService;

        r33 := @parameter1: java.util.UUID;

        r34 := @parameter2: android.os.Bundle;

        r35 := @parameter3: android.content.ComponentName;

        r1 := @parameter4: android.os.UserHandle;

        r2 := @parameter5: android.hardware.soundtrigger.SoundTrigger$RecognitionConfig;

        r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: com.android.server.soundtrigger.SoundTriggerService this$0> = r32;

        specialinvoke r0.<android.hardware.soundtrigger.IRecognitionStatusCallback$Stub: void <init>()>();

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: java.lang.Object mRemoteServiceLock> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: java.util.ArrayList mPendingOps> = $r4;

        $r5 = new android.util.ArraySet;

        specialinvoke $r5.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.util.ArraySet mRunningOpIds> = $r5;

        $r6 = new android.os.ParcelUuid;

        specialinvoke $r6.<android.os.ParcelUuid: void <init>(java.util.UUID)>(r33);

        r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid> = $r6;

        r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.Bundle mParams> = r34;

        r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.content.ComponentName mServiceName> = r35;

        r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.UserHandle mUser> = r1;

        r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.hardware.soundtrigger.SoundTrigger$RecognitionConfig mRecognitionConfig> = r2;

        $r7 = new android.os.Handler;

        $r8 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r7.<android.os.Handler: void <init>(android.os.Looper)>($r8);

        r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.Handler mHandler> = $r7;

        $r9 = r32.<com.android.server.soundtrigger.SoundTriggerService: android.content.Context mContext>;

        $r10 = virtualinvoke $r9.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        r36 = (android.os.PowerManager) $r10;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RemoteSoundTriggerDetectionService ");

        $r13 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.content.ComponentName mServiceName>;

        $r14 = virtualinvoke $r13.<android.content.ComponentName: java.lang.String getPackageName()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r17 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.content.ComponentName mServiceName>;

        $r18 = virtualinvoke $r17.<android.content.ComponentName: java.lang.String getClassName()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = virtualinvoke r36.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, $r20);

        r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.PowerManager$WakeLock mRemoteServiceWakeLock> = $r21;

        r38 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.lang.Object access$600(com.android.server.soundtrigger.SoundTriggerService)>(r32);

        entermonitor r38;

     label1:
        $r22 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: android.util.ArrayMap access$1100(com.android.server.soundtrigger.SoundTriggerService)>(r32);

        $r23 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.content.ComponentName mServiceName>;

        $r24 = virtualinvoke $r23.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r25 = virtualinvoke $r22.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r24);

        r39 = (com.android.server.soundtrigger.SoundTriggerService$NumOps) $r25;

     label2:
        r40 = r39;

        if r39 != null goto label5;

     label3:
        r40 = new com.android.server.soundtrigger.SoundTriggerService$NumOps;

        specialinvoke r40.<com.android.server.soundtrigger.SoundTriggerService$NumOps: void <init>(com.android.server.soundtrigger.SoundTriggerService$1)>(null);

     label4:
        $r27 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: android.util.ArrayMap access$1100(com.android.server.soundtrigger.SoundTriggerService)>(r32);

        $r28 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.content.ComponentName mServiceName>;

        $r29 = virtualinvoke $r28.<android.content.ComponentName: java.lang.String getPackageName()>();

        virtualinvoke $r27.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r29, r40);

     label5:
        r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: com.android.server.soundtrigger.SoundTriggerService$NumOps mNumOps> = r40;

        exitmonitor r38;

     label6:
        $r26 = new com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService$1;

        specialinvoke $r26.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService$1: void <init>(com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService,com.android.server.soundtrigger.SoundTriggerService)>(r0, r32);

        r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.media.soundtrigger.ISoundTriggerDetectionServiceClient mClient> = $r26;

        return;

     label7:
        $r31 := @caughtexception;

     label8:
        exitmonitor r38;

     label9:
        throw $r31;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    static java.lang.Object access$1300(com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService)
    {
        com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService;

        $r1 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: java.lang.Object mRemoteServiceLock>;

        return $r1;
    }

    static android.util.ArraySet access$1400(com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService)
    {
        com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService r0;
        android.util.ArraySet $r1;

        r0 := @parameter0: com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService;

        $r1 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.util.ArraySet mRunningOpIds>;

        return $r1;
    }

    static java.util.ArrayList access$1500(com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService)
    {
        com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService;

        $r1 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: java.util.ArrayList mPendingOps>;

        return $r1;
    }

    static boolean access$1600(com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService)
    {
        com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService;

        $z0 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: boolean mDestroyOnceRunningOpsDone>;

        return $z0;
    }

    static void access$1700(com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService)
    {
        com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService r0;

        r0 := @parameter0: com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService;

        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: void destroy()>();

        return;
    }

    static void access$1800(com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService)
    {
        com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService r0;

        r0 := @parameter0: com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService;

        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: void disconnectLocked()>();

        return;
    }

    private void bind()
    {
        com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService r0;
        long l0;
        boolean z0, $z1;
        android.content.ComponentName $r1, $r16, $r22, $r29, $r37, $r45, $r52;
        com.android.server.soundtrigger.SoundTriggerService $r3, $r10;
        android.content.Context $r4, $r12;
        android.content.pm.PackageManager $r5;
        android.os.UserHandle $r6, $r11;
        int $i1;
        android.content.pm.ServiceInfo $r7;
        java.lang.String $r8, $r9, $r18, $r24, $r33, $r41, $r48, $r55;
        android.os.ParcelUuid $r13, $r19, $r26, $r34, $r42, $r49;
        android.os.PowerManager$WakeLock $r25;
        java.lang.Throwable $r56;
        android.content.Intent r57;
        android.content.pm.ResolveInfo r58;
        java.lang.StringBuilder r59, r62, r63, r66, r67, r70;
        com.android.server.soundtrigger.SoundTriggerLogger r60, r64, r68;
        com.android.server.soundtrigger.SoundTriggerLogger$StringEvent r61, r65, r69;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        r57 = new android.content.Intent;

        specialinvoke r57.<android.content.Intent: void <init>()>();

        $r1 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.content.ComponentName mServiceName>;

        virtualinvoke r57.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r1);

        $r3 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r4 = $r3.<com.android.server.soundtrigger.SoundTriggerService: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r6 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.UserHandle mUser>;

        $i1 = virtualinvoke $r6.<android.os.UserHandle: int getIdentifier()>();

        r58 = virtualinvoke $r5.<android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveServiceAsUser(android.content.Intent,int,int)>(r57, 268435588, $i1);

     label02:
        if r58 != null goto label05;

     label03:
        r59 = new java.lang.StringBuilder;

        specialinvoke r59.<java.lang.StringBuilder: void <init>()>();

        $r42 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        virtualinvoke r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r42);

        virtualinvoke r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r45 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.content.ComponentName mServiceName>;

        virtualinvoke r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r45);

        virtualinvoke r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found");

        $r48 = virtualinvoke r59.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerService", $r48);

        r60 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        r61 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        r62 = new java.lang.StringBuilder;

        specialinvoke r62.<java.lang.StringBuilder: void <init>()>();

        $r49 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r49);

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r52 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.content.ComponentName mServiceName>;

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r52);

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found");

        $r55 = virtualinvoke r62.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r61.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r55);

        virtualinvoke r60.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>(r61);

     label04:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label05:
        $r9 = "android.permission.BIND_SOUND_TRIGGER_DETECTION_SERVICE";

        $r7 = r58.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r8 = $r7.<android.content.pm.ServiceInfo: java.lang.String permission>;

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z1 != 0 goto label07;

        r63 = new java.lang.StringBuilder;

        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        $r26 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r29 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.content.ComponentName mServiceName>;

        virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);

        virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not require ");

        virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.BIND_SOUND_TRIGGER_DETECTION_SERVICE");

        $r33 = virtualinvoke r63.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerService", $r33);

        r64 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        r65 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        r66 = new java.lang.StringBuilder;

        specialinvoke r66.<java.lang.StringBuilder: void <init>()>();

        $r34 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r34);

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r37 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.content.ComponentName mServiceName>;

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r37);

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not require ");

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.BIND_SOUND_TRIGGER_DETECTION_SERVICE");

        $r41 = virtualinvoke r66.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r65.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r41);

        virtualinvoke r64.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>(r65);

     label06:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label07:
        $r10 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r12 = $r10.<com.android.server.soundtrigger.SoundTriggerService: android.content.Context mContext>;

        $r11 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.UserHandle mUser>;

        z0 = virtualinvoke $r12.<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>(r57, r0, 67112961, $r11);

        r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: boolean mIsBound> = z0;

     label08:
        if z0 == 0 goto label11;

     label09:
        $r25 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.PowerManager$WakeLock mRemoteServiceWakeLock>;

        virtualinvoke $r25.<android.os.PowerManager$WakeLock: void acquire()>();

     label10:
        goto label12;

     label11:
        r67 = new java.lang.StringBuilder;

        specialinvoke r67.<java.lang.StringBuilder: void <init>()>();

        $r13 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        virtualinvoke r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        virtualinvoke r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Could not bind to ");

        $r16 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.content.ComponentName mServiceName>;

        virtualinvoke r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke r67.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerService", $r18);

        r68 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        r69 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        r70 = new java.lang.StringBuilder;

        specialinvoke r70.<java.lang.StringBuilder: void <init>()>();

        $r19 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        virtualinvoke r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        virtualinvoke r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Could not bind to ");

        $r22 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.content.ComponentName mServiceName>;

        virtualinvoke r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r24 = virtualinvoke r70.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r69.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r24);

        virtualinvoke r68.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>(r69);

     label12:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label13:
        $r56 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r56;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    private android.media.AudioRecord createAudioRecordForEvent(android.hardware.soundtrigger.SoundTrigger$GenericRecognitionEvent)
    {
        com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService r0;
        android.hardware.soundtrigger.SoundTrigger$GenericRecognitionEvent r1;
        android.media.AudioAttributes$Builder $r2;
        android.media.AudioFormat$Builder $r4, $r5, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i9;
        com.android.server.soundtrigger.SoundTriggerLogger $r8;
        com.android.server.soundtrigger.SoundTriggerLogger$StringEvent $r9;
        android.media.AudioRecord $r10;
        android.media.AudioAttributes r12;
        android.media.AudioFormat r13, r14;
        byte b8;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService;

        r1 := @parameter0: android.hardware.soundtrigger.SoundTrigger$GenericRecognitionEvent;

        $r2 = new android.media.AudioAttributes$Builder;

        specialinvoke $r2.<android.media.AudioAttributes$Builder: void <init>()>();

        virtualinvoke $r2.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setInternalCapturePreset(int)>(1999);

        r12 = virtualinvoke $r2.<android.media.AudioAttributes$Builder: android.media.AudioAttributes build()>();

        r13 = virtualinvoke r1.<android.hardware.soundtrigger.SoundTrigger$GenericRecognitionEvent: android.media.AudioFormat getCaptureFormat()>();

        $r4 = new android.media.AudioFormat$Builder;

        specialinvoke $r4.<android.media.AudioFormat$Builder: void <init>()>();

        $i0 = virtualinvoke r13.<android.media.AudioFormat: int getChannelMask()>();

        $r5 = virtualinvoke $r4.<android.media.AudioFormat$Builder: android.media.AudioFormat$Builder setChannelMask(int)>($i0);

        $i1 = virtualinvoke r13.<android.media.AudioFormat: int getEncoding()>();

        $r6 = virtualinvoke $r5.<android.media.AudioFormat$Builder: android.media.AudioFormat$Builder setEncoding(int)>($i1);

        $i2 = virtualinvoke r13.<android.media.AudioFormat: int getSampleRate()>();

        $r7 = virtualinvoke $r6.<android.media.AudioFormat$Builder: android.media.AudioFormat$Builder setSampleRate(int)>($i2);

        r14 = virtualinvoke $r7.<android.media.AudioFormat$Builder: android.media.AudioFormat build()>();

        $i3 = virtualinvoke r14.<android.media.AudioFormat: int getSampleRate()>();

        if $i3 != 0 goto label1;

        i7 = 192000;

        goto label2;

     label1:
        i7 = virtualinvoke r14.<android.media.AudioFormat: int getSampleRate()>();

     label2:
        $i4 = virtualinvoke r14.<android.media.AudioFormat: int getChannelCount()>();

        if $i4 != 2 goto label3;

        b8 = 12;

        goto label4;

     label3:
        b8 = 16;

     label4:
        $i5 = virtualinvoke r14.<android.media.AudioFormat: int getEncoding()>();

        i9 = staticinvoke <android.media.AudioRecord: int getMinBufferSize(int,int,int)>(i7, b8, $i5);

        $r8 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        $r9 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        specialinvoke $r9.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>("createAudioRecordForEvent");

        virtualinvoke $r8.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>($r9);

        $r10 = new android.media.AudioRecord;

        $i6 = virtualinvoke r1.<android.hardware.soundtrigger.SoundTrigger$GenericRecognitionEvent: int getCaptureSession()>();

        specialinvoke $r10.<android.media.AudioRecord: void <init>(android.media.AudioAttributes,android.media.AudioFormat,int,int)>(r12, r14, i9, $i6);

        return $r10;
    }

    private void destroy()
    {
        com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService r0;
        java.lang.StringBuilder $r1, $r6;
        android.os.ParcelUuid $r2, $r7, $r15;
        java.lang.String $r5, $r11;
        com.android.server.soundtrigger.SoundTriggerLogger$StringEvent $r10;
        boolean $z0;
        com.android.server.soundtrigger.SoundTriggerService $r12, $r13;
        java.util.TreeMap $r14;
        java.util.UUID $r16;
        java.lang.Throwable $r18, $r19;
        com.android.server.soundtrigger.SoundTriggerLogger r21;
        java.lang.Object r23, r24;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": destroy");

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("SoundTriggerService", $r5);

        r21 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": destroy");

        $r10 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r11);

        virtualinvoke r21.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>($r10);

        r23 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: java.lang.Object mRemoteServiceLock>;

        entermonitor r23;

     label01:
        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: void disconnectLocked()>();

        r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: boolean mIsDestroyed> = 1;

        exitmonitor r23;

     label02:
        $z0 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: boolean mDestroyOnceRunningOpsDone>;

        if $z0 != 0 goto label08;

        $r12 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: com.android.server.soundtrigger.SoundTriggerService this$0>;

        r24 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.lang.Object access$800(com.android.server.soundtrigger.SoundTriggerService)>($r12);

        entermonitor r24;

     label03:
        $r13 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r14 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.util.TreeMap access$900(com.android.server.soundtrigger.SoundTriggerService)>($r13);

        $r15 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        $r16 = virtualinvoke $r15.<android.os.ParcelUuid: java.util.UUID getUuid()>();

        virtualinvoke $r14.<java.util.TreeMap: java.lang.Object remove(java.lang.Object)>($r16);

        exitmonitor r24;

     label04:
        goto label08;

     label05:
        $r19 := @caughtexception;

     label06:
        exitmonitor r24;

     label07:
        throw $r19;

     label08:
        return;

     label09:
        $r18 := @caughtexception;

     label10:
        exitmonitor r23;

     label11:
        throw $r18;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    private void disconnectLocked()
    {
        com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService r0;
        com.android.server.soundtrigger.SoundTriggerService $r1, $r3;
        android.content.Context $r2;
        android.os.PowerManager$WakeLock $r4;
        android.os.ParcelUuid $r5, $r8, $r13;
        java.lang.Exception $r6;
        java.lang.StringBuilder $r7, $r12;
        java.lang.String $r11, $r17;
        com.android.server.soundtrigger.SoundTriggerLogger$StringEvent $r16;
        java.lang.Throwable $r18;
        android.media.soundtrigger.ISoundTriggerDetectionService r19;
        com.android.server.soundtrigger.SoundTriggerLogger r22;
        boolean $z0;
        java.lang.Object r24;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService;

        r19 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.media.soundtrigger.ISoundTriggerDetectionService mService>;

        if r19 == null goto label05;

     label01:
        $r5 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        interfaceinvoke r19.<android.media.soundtrigger.ISoundTriggerDetectionService: void removeClient(android.os.ParcelUuid)>($r5);

     label02:
        goto label04;

     label03:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Cannot remove client");

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SoundTriggerService", $r11, $r6);

        r22 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Cannot remove client");

        $r16 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        $r17 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r17);

        virtualinvoke r22.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>($r16);

     label04:
        r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.media.soundtrigger.ISoundTriggerDetectionService mService> = null;

     label05:
        $z0 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: boolean mIsBound>;

        if $z0 == 0 goto label11;

        $r1 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r2 = $r1.<com.android.server.soundtrigger.SoundTriggerService: android.content.Context mContext>;

        virtualinvoke $r2.<android.content.Context: void unbindService(android.content.ServiceConnection)>(r0);

        r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: boolean mIsBound> = 0;

        $r3 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: com.android.server.soundtrigger.SoundTriggerService this$0>;

        r24 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.lang.Object access$800(com.android.server.soundtrigger.SoundTriggerService)>($r3);

        entermonitor r24;

     label06:
        $r4 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.PowerManager$WakeLock mRemoteServiceWakeLock>;

        virtualinvoke $r4.<android.os.PowerManager$WakeLock: void release()>();

        exitmonitor r24;

     label07:
        goto label11;

     label08:
        $r18 := @caughtexception;

     label09:
        exitmonitor r24;

     label10:
        throw $r18;

     label11:
        return;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public static void lambda$wfDlqQ7aPvu9qZCZ24jJu4tfUMY(com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService)
    {
        com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService r0;

        r0 := @parameter0: com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService;

        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: void stopAllPendingOperations()>();

        return;
    }

    private void runOrAddOperation(com.android.server.soundtrigger.SoundTriggerService$Operation)
    {
        com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService r0;
        java.lang.Object r1;
        long l0, $l8;
        int i1, $i5, $i6;
        boolean z0, $z1, $z2, $z4, $z6, $z7, $z9;
        android.os.ParcelUuid $r2, $r6, $r19, $r24, $r44, $r49;
        java.lang.String $r5, $r9, $r23, $r28, $r48, $r53;
        android.media.soundtrigger.ISoundTriggerDetectionService $r10, $r29;
        com.android.server.soundtrigger.SoundTriggerService$NumOps $r11, $r15, $r16;
        com.android.server.soundtrigger.SoundTriggerService $r12, $r38;
        android.content.Context $r13, $r39;
        android.content.ContentResolver $r14, $r40;
        android.util.ArraySet $r17, $r30, $r41;
        java.lang.Integer $r18, $r31;
        java.util.ArrayList $r32, $r42;
        android.os.Handler $r33, $r35;
        com.android.server.soundtrigger.'-$$Lambda$SoundTriggerService$RemoteSoundTriggerDetectionService$wfDlqQ7aPvu9qZCZ24jJu4tfUMY' $r34;
        android.os.Message $r36, $r37;
        java.lang.Exception $r43;
        java.lang.Throwable $r54;
        com.android.server.soundtrigger.SoundTriggerService$Operation r55;
        com.android.server.soundtrigger.SoundTriggerLogger r57, r62, r66;
        java.lang.StringBuilder r70, r71, r73, r74, r76, r77;
        com.android.server.soundtrigger.SoundTriggerLogger$StringEvent r72, r75, r78;
        java.util.function.Consumer r79;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService;

        r55 := @parameter0: com.android.server.soundtrigger.SoundTriggerService$Operation;

        r1 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: java.lang.Object mRemoteServiceLock>;

        entermonitor r1;

     label01:
        $z1 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: boolean mIsDestroyed>;

        if $z1 != 0 goto label19;

        $z2 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: boolean mDestroyOnceRunningOpsDone>;

        if $z2 == 0 goto label03;

     label02:
        goto label19;

     label03:
        $r10 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.media.soundtrigger.ISoundTriggerDetectionService mService>;

        if $r10 != null goto label05;

        $r42 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: java.util.ArrayList mPendingOps>;

        virtualinvoke $r42.<java.util.ArrayList: boolean add(java.lang.Object)>(r55);

        $z9 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: boolean mIsBound>;

        if $z9 != 0 goto label17;

        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: void bind()>();

     label04:
        goto label17;

     label05:
        l0 = staticinvoke <java.lang.System: long nanoTime()>();

        $r11 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: com.android.server.soundtrigger.SoundTriggerService$NumOps mNumOps>;

        virtualinvoke $r11.<com.android.server.soundtrigger.SoundTriggerService$NumOps: void clearOldOps(long)>(l0);

        $r12 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r13 = $r12.<com.android.server.soundtrigger.SoundTriggerService: android.content.Context mContext>;

        $r14 = virtualinvoke $r13.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r14, "max_sound_trigger_detection_service_ops_per_day", 2147483647);

        $r15 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: com.android.server.soundtrigger.SoundTriggerService$NumOps mNumOps>;

        virtualinvoke $r15.<com.android.server.soundtrigger.SoundTriggerService$NumOps: int getOpsAdded()>();

        $r16 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: com.android.server.soundtrigger.SoundTriggerService$NumOps mNumOps>;

        virtualinvoke $r16.<com.android.server.soundtrigger.SoundTriggerService$NumOps: void addOp(long)>(l0);

        i1 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: int mNumTotalOpsPerformed>;

     label06:
        $i5 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: int mNumTotalOpsPerformed>;

        $i6 = $i5 + 1;

        r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: int mNumTotalOpsPerformed> = $i6;

        $r17 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.util.ArraySet mRunningOpIds>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        z0 = virtualinvoke $r17.<android.util.ArraySet: boolean contains(java.lang.Object)>($r18);

     label07:
        if z0 != 0 goto label06;

     label08:
        r70 = new java.lang.StringBuilder;

        specialinvoke r70.<java.lang.StringBuilder: void <init>()>();

        $r19 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        virtualinvoke r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        virtualinvoke r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": runOp ");

        virtualinvoke r70.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r23 = virtualinvoke r70.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("SoundTriggerService", $r23);

        r57 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        r72 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        r71 = new java.lang.StringBuilder;

        specialinvoke r71.<java.lang.StringBuilder: void <init>()>();

        $r24 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        virtualinvoke r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        virtualinvoke r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": runOp ");

        virtualinvoke r71.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r28 = virtualinvoke r71.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r72.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r28);

        virtualinvoke r57.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>(r72);

        $r29 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.media.soundtrigger.ISoundTriggerDetectionService mService>;

        virtualinvoke r55.<com.android.server.soundtrigger.SoundTriggerService$Operation: void run(int,android.media.soundtrigger.ISoundTriggerDetectionService)>(i1, $r29);

        $r30 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.util.ArraySet mRunningOpIds>;

        $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke $r30.<android.util.ArraySet: boolean add(java.lang.Object)>($r31);

     label09:
        goto label12;

     label10:
        $r43 := @caughtexception;

     label11:
        r73 = new java.lang.StringBuilder;

        specialinvoke r73.<java.lang.StringBuilder: void <init>()>();

        $r44 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        virtualinvoke r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r44);

        virtualinvoke r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Could not run operation ");

        virtualinvoke r73.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r48 = virtualinvoke r73.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SoundTriggerService", $r48, $r43);

        r62 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        r75 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        r74 = new java.lang.StringBuilder;

        specialinvoke r74.<java.lang.StringBuilder: void <init>()>();

        $r49 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        virtualinvoke r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r49);

        virtualinvoke r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Could not run operation ");

        virtualinvoke r74.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r53 = virtualinvoke r74.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r75.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r53);

        virtualinvoke r62.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>(r75);

     label12:
        $r32 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: java.util.ArrayList mPendingOps>;

        $z4 = virtualinvoke $r32.<java.util.ArrayList: boolean isEmpty()>();

        if $z4 == 0 goto label16;

        $r41 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.util.ArraySet mRunningOpIds>;

        $z6 = virtualinvoke $r41.<android.util.ArraySet: boolean isEmpty()>();

        if $z6 == 0 goto label16;

        $z7 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: boolean mDestroyOnceRunningOpsDone>;

        if $z7 == 0 goto label14;

        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: void destroy()>();

     label13:
        goto label17;

     label14:
        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: void disconnectLocked()>();

     label15:
        goto label17;

     label16:
        $r33 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.Handler mHandler>;

        virtualinvoke $r33.<android.os.Handler: void removeMessages(int)>(1);

        $r35 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.Handler mHandler>;

        $r34 = <com.android.server.soundtrigger._$$Lambda$SoundTriggerService$RemoteSoundTriggerDetectionService$wfDlqQ7aPvu9qZCZ24jJu4tfUMY: com.android.server.soundtrigger.'-$$Lambda$SoundTriggerService$RemoteSoundTriggerDetectionService$wfDlqQ7aPvu9qZCZ24jJu4tfUMY' INSTANCE>;

        r79 = (java.util.function.Consumer) $r34;

        $r36 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(java.util.function.Consumer,java.lang.Object)>(r79, r0);

        $r37 = virtualinvoke $r36.<android.os.Message: android.os.Message setWhat(int)>(1);

        $r38 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r39 = $r38.<com.android.server.soundtrigger.SoundTriggerService: android.content.Context mContext>;

        $r40 = virtualinvoke $r39.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $l8 = staticinvoke <android.provider.Settings$Global: long getLong(android.content.ContentResolver,java.lang.String,long)>($r40, "sound_trigger_detection_service_op_timeout", 9223372036854775807L);

        virtualinvoke $r35.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r37, $l8);

     label17:
        exitmonitor r1;

     label18:
        return;

     label19:
        r76 = new java.lang.StringBuilder;

        specialinvoke r76.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        virtualinvoke r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        virtualinvoke r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Dropped operation as already destroyed or marked for destruction");

        $r5 = virtualinvoke r76.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerService", $r5);

        r66 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        r78 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        r77 = new java.lang.StringBuilder;

        specialinvoke r77.<java.lang.StringBuilder: void <init>()>();

        $r6 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        virtualinvoke r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        virtualinvoke r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":Dropped operation as already destroyed or marked for destruction");

        $r9 = virtualinvoke r77.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r78.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r9);

        virtualinvoke r66.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>(r78);

        virtualinvoke r55.<com.android.server.soundtrigger.SoundTriggerService$Operation: void drop()>();

        exitmonitor r1;

     label20:
        return;

     label21:
        $r54 := @caughtexception;

     label22:
        exitmonitor r1;

     label23:
        throw $r54;

        catch java.lang.Throwable from label01 to label02 with label21;
        catch java.lang.Throwable from label03 to label04 with label21;
        catch java.lang.Throwable from label05 to label06 with label21;
        catch java.lang.Throwable from label06 to label07 with label21;
        catch java.lang.Exception from label08 to label09 with label10;
        catch java.lang.Throwable from label08 to label09 with label21;
        catch java.lang.Throwable from label11 to label12 with label21;
        catch java.lang.Throwable from label12 to label13 with label21;
        catch java.lang.Throwable from label14 to label15 with label21;
        catch java.lang.Throwable from label16 to label17 with label21;
        catch java.lang.Throwable from label17 to label18 with label21;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label22 to label23 with label21;
    }

    private void stopAllPendingOperations()
    {
        com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService r0;
        java.lang.Object r1, $r9, $r16, $r23;
        int i0, $i1, i3;
        java.lang.StringBuilder r2, r28;
        boolean $z0;
        android.media.soundtrigger.ISoundTriggerDetectionService $r3, $r7;
        android.util.ArraySet $r4, $r5, $r6, $r15, $r22;
        android.os.ParcelUuid $r8, $r12, $r19;
        java.lang.Integer $r10;
        java.lang.Exception $r11;
        java.lang.String $r18, $r25;
        java.lang.Throwable $r26;
        com.android.server.soundtrigger.SoundTriggerLogger r29;
        com.android.server.soundtrigger.SoundTriggerLogger$StringEvent r30;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService;

        r1 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: java.lang.Object mRemoteServiceLock>;

        entermonitor r1;

     label01:
        $z0 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: boolean mIsDestroyed>;

        if $z0 == 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        $r3 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.media.soundtrigger.ISoundTriggerDetectionService mService>;

        if $r3 == null goto label12;

        $r4 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.util.ArraySet mRunningOpIds>;

        i0 = virtualinvoke $r4.<android.util.ArraySet: int size()>();

     label04:
        i3 = 0;

     label05:
        if i3 >= i0 goto label11;

     label06:
        $r7 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.media.soundtrigger.ISoundTriggerDetectionService mService>;

        $r8 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        $r6 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.util.ArraySet mRunningOpIds>;

        $r9 = virtualinvoke $r6.<android.util.ArraySet: java.lang.Object valueAt(int)>(i3);

        $r10 = (java.lang.Integer) $r9;

        $i1 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

        interfaceinvoke $r7.<android.media.soundtrigger.ISoundTriggerDetectionService: void onStopOperation(android.os.ParcelUuid,int)>($r8, $i1);

     label07:
        goto label10;

     label08:
        $r11 := @caughtexception;

     label09:
        r28 = new java.lang.StringBuilder;

        specialinvoke r28.<java.lang.StringBuilder: void <init>()>();

        $r12 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Could not stop operation ");

        $r15 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.util.ArraySet mRunningOpIds>;

        $r16 = virtualinvoke $r15.<android.util.ArraySet: java.lang.Object valueAt(int)>(i3);

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SoundTriggerService", $r18, $r11);

        r29 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        r30 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        $r19 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Could not stop operation ");

        $r22 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.util.ArraySet mRunningOpIds>;

        $r23 = virtualinvoke $r22.<android.util.ArraySet: java.lang.Object valueAt(int)>(i3);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r25 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r30.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r25);

        virtualinvoke r29.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>(r30);

     label10:
        i3 = i3 + 1;

        goto label05;

     label11:
        $r5 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.util.ArraySet mRunningOpIds>;

        virtualinvoke $r5.<android.util.ArraySet: void clear()>();

     label12:
        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: void disconnectLocked()>();

        exitmonitor r1;

     label13:
        return;

     label14:
        $r26 := @caughtexception;

     label15:
        exitmonitor r1;

     label16:
        throw $r26;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Exception from label06 to label07 with label08;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label11 to label12 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    public void lambda$onError$3$SoundTriggerService$RemoteSoundTriggerDetectionService()
    {
        com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService r0;
        java.lang.Object r1;
        com.android.server.soundtrigger.SoundTriggerService $r3, $r4;
        java.util.TreeMap $r5;
        android.os.ParcelUuid $r6;
        java.util.UUID $r7;
        java.lang.Throwable $r9;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService;

        $r3 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: com.android.server.soundtrigger.SoundTriggerService this$0>;

        r1 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.lang.Object access$800(com.android.server.soundtrigger.SoundTriggerService)>($r3);

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r5 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.util.TreeMap access$900(com.android.server.soundtrigger.SoundTriggerService)>($r4);

        $r6 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        $r7 = virtualinvoke $r6.<android.os.ParcelUuid: java.util.UUID getUuid()>();

        virtualinvoke $r5.<java.util.TreeMap: java.lang.Object remove(java.lang.Object)>($r7);

        exitmonitor r1;

     label2:
        r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: boolean mDestroyOnceRunningOpsDone> = 1;

        return;

     label3:
        $r9 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void lambda$onError$4$SoundTriggerService$RemoteSoundTriggerDetectionService(int, int, android.media.soundtrigger.ISoundTriggerDetectionService) throws android.os.RemoteException
    {
        com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService r0;
        int i0, i1;
        android.media.soundtrigger.ISoundTriggerDetectionService r1;
        android.os.ParcelUuid $r2;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.media.soundtrigger.ISoundTriggerDetectionService;

        $r2 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        interfaceinvoke r1.<android.media.soundtrigger.ISoundTriggerDetectionService: void onError(android.os.ParcelUuid,int,int)>($r2, i1, i0);

        return;
    }

    public void lambda$onGenericSoundTriggerDetected$0$SoundTriggerService$RemoteSoundTriggerDetectionService()
    {
        com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService r0;
        java.lang.Object r1;
        android.hardware.soundtrigger.SoundTrigger$RecognitionConfig $r3;
        boolean $z0;
        com.android.server.soundtrigger.SoundTriggerService $r4, $r5;
        java.util.TreeMap $r6;
        android.os.ParcelUuid $r7;
        java.util.UUID $r8;
        java.lang.Throwable $r10;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService;

        $r3 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.hardware.soundtrigger.SoundTrigger$RecognitionConfig mRecognitionConfig>;

        $z0 = $r3.<android.hardware.soundtrigger.SoundTrigger$RecognitionConfig: boolean allowMultipleTriggers>;

        if $z0 != 0 goto label6;

        $r4 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: com.android.server.soundtrigger.SoundTriggerService this$0>;

        r1 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.lang.Object access$800(com.android.server.soundtrigger.SoundTriggerService)>($r4);

        entermonitor r1;

     label1:
        $r5 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r6 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.util.TreeMap access$900(com.android.server.soundtrigger.SoundTriggerService)>($r5);

        $r7 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        $r8 = virtualinvoke $r7.<android.os.ParcelUuid: java.util.UUID getUuid()>();

        virtualinvoke $r6.<java.util.TreeMap: java.lang.Object remove(java.lang.Object)>($r8);

        exitmonitor r1;

     label2:
        r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: boolean mDestroyOnceRunningOpsDone> = 1;

        goto label6;

     label3:
        $r10 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r10;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void lambda$onGenericSoundTriggerDetected$1$SoundTriggerService$RemoteSoundTriggerDetectionService(android.hardware.soundtrigger.SoundTrigger$GenericRecognitionEvent, int, android.media.soundtrigger.ISoundTriggerDetectionService) throws android.os.RemoteException
    {
        com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService r0;
        android.hardware.soundtrigger.SoundTrigger$GenericRecognitionEvent r1;
        int i0;
        android.media.soundtrigger.ISoundTriggerDetectionService r2;
        android.os.ParcelUuid $r3;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService;

        r1 := @parameter0: android.hardware.soundtrigger.SoundTrigger$GenericRecognitionEvent;

        i0 := @parameter1: int;

        r2 := @parameter2: android.media.soundtrigger.ISoundTriggerDetectionService;

        $r3 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        interfaceinvoke r2.<android.media.soundtrigger.ISoundTriggerDetectionService: void onGenericRecognitionEvent(android.os.ParcelUuid,int,android.hardware.soundtrigger.SoundTrigger$GenericRecognitionEvent)>($r3, i0, r1);

        return;
    }

    public void lambda$onGenericSoundTriggerDetected$2$SoundTriggerService$RemoteSoundTriggerDetectionService(android.hardware.soundtrigger.SoundTrigger$GenericRecognitionEvent)
    {
        com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService r0;
        boolean $z0;
        android.hardware.soundtrigger.SoundTrigger$GenericRecognitionEvent r1;
        android.media.AudioRecord r2;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService;

        r1 := @parameter0: android.hardware.soundtrigger.SoundTrigger$GenericRecognitionEvent;

        $z0 = virtualinvoke r1.<android.hardware.soundtrigger.SoundTrigger$GenericRecognitionEvent: boolean isCaptureAvailable()>();

        if $z0 == 0 goto label1;

        r2 = specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.media.AudioRecord createAudioRecordForEvent(android.hardware.soundtrigger.SoundTrigger$GenericRecognitionEvent)>(r1);

        virtualinvoke r2.<android.media.AudioRecord: void startRecording()>();

        virtualinvoke r2.<android.media.AudioRecord: void release()>();

     label1:
        return;
    }

    public void onBindingDied(android.content.ComponentName)
    {
        com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService r0;
        java.lang.StringBuilder $r1, $r6;
        android.os.ParcelUuid $r2, $r7;
        java.lang.String $r5, $r11;
        com.android.server.soundtrigger.SoundTriggerLogger$StringEvent $r10;
        java.lang.Throwable $r12;
        android.content.ComponentName r13;
        com.android.server.soundtrigger.SoundTriggerLogger r15;
        java.lang.Object r17;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService;

        r13 := @parameter0: android.content.ComponentName;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": onBindingDied");

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("SoundTriggerService", $r5);

        r15 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": onBindingDied");

        $r10 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r11);

        virtualinvoke r15.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>($r10);

        r17 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: java.lang.Object mRemoteServiceLock>;

        entermonitor r17;

     label1:
        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: void destroy()>();

        exitmonitor r17;

     label2:
        return;

     label3:
        $r12 := @caughtexception;

     label4:
        exitmonitor r17;

     label5:
        throw $r12;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onError(int)
    {
        com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService r0;
        int i0;
        com.android.server.soundtrigger.SoundTriggerLogger r1;
        java.lang.StringBuilder $r2, $r8;
        android.os.ParcelUuid $r3, $r9;
        java.lang.String $r7, $r14;
        com.android.server.soundtrigger.SoundTriggerLogger$StringEvent $r13;
        com.android.server.soundtrigger.SoundTriggerService$Operation $r15;
        com.android.server.soundtrigger._$$Lambda$SoundTriggerService$RemoteSoundTriggerDetectionService$t5mBYXswwLAAdm47WS10stLjYng $r16;
        com.android.server.soundtrigger._$$Lambda$SoundTriggerService$RemoteSoundTriggerDetectionService$crQZgbDmIG6q92Mrkm49T2yqrs0 $r17;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService;

        i0 := @parameter0: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": onError: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("SoundTriggerService", $r7);

        r1 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": onError: ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        $r14 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r14);

        virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>($r13);

        $r15 = new com.android.server.soundtrigger.SoundTriggerService$Operation;

        $r16 = new com.android.server.soundtrigger._$$Lambda$SoundTriggerService$RemoteSoundTriggerDetectionService$t5mBYXswwLAAdm47WS10stLjYng;

        specialinvoke $r16.<com.android.server.soundtrigger._$$Lambda$SoundTriggerService$RemoteSoundTriggerDetectionService$t5mBYXswwLAAdm47WS10stLjYng: void <init>(com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService)>(r0);

        $r17 = new com.android.server.soundtrigger._$$Lambda$SoundTriggerService$RemoteSoundTriggerDetectionService$crQZgbDmIG6q92Mrkm49T2yqrs0;

        specialinvoke $r17.<com.android.server.soundtrigger._$$Lambda$SoundTriggerService$RemoteSoundTriggerDetectionService$crQZgbDmIG6q92Mrkm49T2yqrs0: void <init>(com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService,int)>(r0, i0);

        specialinvoke $r15.<com.android.server.soundtrigger.SoundTriggerService$Operation: void <init>(java.lang.Runnable,com.android.server.soundtrigger.SoundTriggerService$Operation$ExecuteOp,java.lang.Runnable,com.android.server.soundtrigger.SoundTriggerService$1)>($r16, $r17, null, null);

        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: void runOrAddOperation(com.android.server.soundtrigger.SoundTriggerService$Operation)>($r15);

        return;
    }

    public void onGenericSoundTriggerDetected(android.hardware.soundtrigger.SoundTrigger$GenericRecognitionEvent)
    {
        com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService r0;
        android.hardware.soundtrigger.SoundTrigger$GenericRecognitionEvent r1;
        java.lang.StringBuilder $r3, $r9;
        android.os.ParcelUuid $r4, $r10;
        java.lang.String $r8, $r15;
        com.android.server.soundtrigger.SoundTriggerLogger$StringEvent $r14;
        com.android.server.soundtrigger.SoundTriggerService$Operation $r16;
        com.android.server.soundtrigger._$$Lambda$SoundTriggerService$RemoteSoundTriggerDetectionService$yqLMvkOmrO13yWrggtSaVrLgsWo $r17;
        com.android.server.soundtrigger._$$Lambda$SoundTriggerService$RemoteSoundTriggerDetectionService$F_iA254xzDfAHrQW86c2oSqXfwI $r18;
        com.android.server.soundtrigger._$$Lambda$SoundTriggerService$RemoteSoundTriggerDetectionService$pFqiq_C9KJsoa_HQOdj7lmMixsI $r19;
        com.android.server.soundtrigger.SoundTriggerLogger r21;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService;

        r1 := @parameter0: android.hardware.soundtrigger.SoundTrigger$GenericRecognitionEvent;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Generic sound trigger event: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("SoundTriggerService", $r8);

        r21 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Generic sound trigger event: ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r14 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        $r15 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r15);

        virtualinvoke r21.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>($r14);

        $r16 = new com.android.server.soundtrigger.SoundTriggerService$Operation;

        $r17 = new com.android.server.soundtrigger._$$Lambda$SoundTriggerService$RemoteSoundTriggerDetectionService$yqLMvkOmrO13yWrggtSaVrLgsWo;

        specialinvoke $r17.<com.android.server.soundtrigger._$$Lambda$SoundTriggerService$RemoteSoundTriggerDetectionService$yqLMvkOmrO13yWrggtSaVrLgsWo: void <init>(com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService)>(r0);

        $r18 = new com.android.server.soundtrigger._$$Lambda$SoundTriggerService$RemoteSoundTriggerDetectionService$F_iA254xzDfAHrQW86c2oSqXfwI;

        specialinvoke $r18.<com.android.server.soundtrigger._$$Lambda$SoundTriggerService$RemoteSoundTriggerDetectionService$F_iA254xzDfAHrQW86c2oSqXfwI: void <init>(com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService,android.hardware.soundtrigger.SoundTrigger$GenericRecognitionEvent)>(r0, r1);

        $r19 = new com.android.server.soundtrigger._$$Lambda$SoundTriggerService$RemoteSoundTriggerDetectionService$pFqiq_C9KJsoa_HQOdj7lmMixsI;

        specialinvoke $r19.<com.android.server.soundtrigger._$$Lambda$SoundTriggerService$RemoteSoundTriggerDetectionService$pFqiq_C9KJsoa_HQOdj7lmMixsI: void <init>(com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService,android.hardware.soundtrigger.SoundTrigger$GenericRecognitionEvent)>(r0, r1);

        specialinvoke $r16.<com.android.server.soundtrigger.SoundTriggerService$Operation: void <init>(java.lang.Runnable,com.android.server.soundtrigger.SoundTriggerService$Operation$ExecuteOp,java.lang.Runnable,com.android.server.soundtrigger.SoundTriggerService$1)>($r17, $r18, $r19, null);

        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: void runOrAddOperation(com.android.server.soundtrigger.SoundTriggerService$Operation)>($r16);

        return;
    }

    public void onKeyphraseDetected(android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionEvent)
    {
        com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService r0;
        android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionEvent r1;
        com.android.server.soundtrigger.SoundTriggerLogger r2;
        java.lang.StringBuilder $r3, $r13;
        android.os.ParcelUuid $r4, $r14;
        android.content.ComponentName $r7, $r17;
        java.lang.String $r12, $r23;
        com.android.server.soundtrigger.SoundTriggerLogger$StringEvent $r22;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService;

        r1 := @parameter0: android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionEvent;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("->");

        $r7 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.content.ComponentName mServiceName>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": IGNORED onKeyphraseDetected(");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r12 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerService", $r12);

        r2 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("->");

        $r17 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.content.ComponentName mServiceName>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": IGNORED onKeyphraseDetected(");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r22 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        $r23 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r23);

        virtualinvoke r2.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>($r22);

        return;
    }

    public void onNullBinding(android.content.ComponentName)
    {
        com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService r0;
        com.android.server.soundtrigger.SoundTriggerLogger r1;
        java.lang.StringBuilder $r2, $r9;
        android.os.ParcelUuid $r5, $r12;
        java.lang.String $r8, $r16;
        com.android.server.soundtrigger.SoundTriggerLogger$StringEvent $r15;
        java.lang.Throwable $r17;
        android.content.ComponentName r18;
        java.lang.Object r21;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService;

        r18 := @parameter0: android.content.ComponentName;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r18);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for model ");

        $r5 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" returned a null binding");

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SoundTriggerService", $r8);

        r1 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r18);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for model ");

        $r12 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" returned a null binding");

        $r15 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        $r16 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r16);

        virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>($r15);

        r21 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: java.lang.Object mRemoteServiceLock>;

        entermonitor r21;

     label1:
        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: void disconnectLocked()>();

        exitmonitor r21;

     label2:
        return;

     label3:
        $r17 := @caughtexception;

     label4:
        exitmonitor r21;

     label5:
        throw $r17;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onRecognitionPaused()
    {
        com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService r0;
        java.lang.StringBuilder $r2, $r10;
        android.os.ParcelUuid $r3, $r11;
        android.content.ComponentName $r6, $r14;
        java.lang.String $r9, $r18;
        com.android.server.soundtrigger.SoundTriggerLogger$StringEvent $r17;
        com.android.server.soundtrigger.SoundTriggerLogger r20;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("->");

        $r6 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.content.ComponentName mServiceName>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": IGNORED onRecognitionPaused");

        $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SoundTriggerService", $r9);

        r20 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("->");

        $r14 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.content.ComponentName mServiceName>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": IGNORED onRecognitionPaused");

        $r17 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        $r18 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r18);

        virtualinvoke r20.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>($r17);

        return;
    }

    public void onRecognitionResumed()
    {
        com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService r0;
        com.android.server.soundtrigger.SoundTriggerLogger r1;
        java.lang.StringBuilder $r2, $r10;
        android.os.ParcelUuid $r3, $r11;
        android.content.ComponentName $r6, $r14;
        java.lang.String $r9, $r18;
        com.android.server.soundtrigger.SoundTriggerLogger$StringEvent $r17;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("->");

        $r6 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.content.ComponentName mServiceName>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": IGNORED onRecognitionResumed");

        $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SoundTriggerService", $r9);

        r1 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("->");

        $r14 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.content.ComponentName mServiceName>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": IGNORED onRecognitionResumed");

        $r17 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        $r18 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r18);

        virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>($r17);

        return;
    }

    public void onServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService r0;
        java.lang.StringBuilder $r1, $r8, r39;
        android.os.ParcelUuid $r2, $r9, $r18, $r24;
        java.lang.String $r7, $r15, $r29;
        com.android.server.soundtrigger.SoundTriggerLogger$StringEvent $r14;
        android.media.soundtrigger.ISoundTriggerDetectionServiceClient $r16;
        android.os.Bundle $r17;
        java.util.ArrayList $r19, $r20;
        boolean $z0;
        java.lang.Object $r21, r36;
        com.android.server.soundtrigger.SoundTriggerService$Operation $r22;
        java.lang.Exception $r23;
        android.content.ComponentName $r27, r31;
        java.lang.Throwable $r30;
        android.os.IBinder r32;
        com.android.server.soundtrigger.SoundTriggerLogger r34;
        android.media.soundtrigger.ISoundTriggerDetectionService r37;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService;

        r31 := @parameter0: android.content.ComponentName;

        r32 := @parameter1: android.os.IBinder;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": onServiceConnected(");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r32);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("SoundTriggerService", $r7);

        r34 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": onServiceConnected(");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r32);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r14 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        $r15 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r15);

        virtualinvoke r34.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>($r14);

        r36 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: java.lang.Object mRemoteServiceLock>;

        entermonitor r36;

     label01:
        r37 = staticinvoke <android.media.soundtrigger.ISoundTriggerDetectionService$Stub: android.media.soundtrigger.ISoundTriggerDetectionService asInterface(android.os.IBinder)>(r32);

        r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.media.soundtrigger.ISoundTriggerDetectionService mService> = r37;

     label02:
        $r18 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        $r17 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.Bundle mParams>;

        $r16 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.media.soundtrigger.ISoundTriggerDetectionServiceClient mClient>;

        interfaceinvoke r37.<android.media.soundtrigger.ISoundTriggerDetectionService: void setClient(android.os.ParcelUuid,android.os.Bundle,android.media.soundtrigger.ISoundTriggerDetectionServiceClient)>($r18, $r17, $r16);

     label03:
        $r19 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: java.util.ArrayList mPendingOps>;

        $z0 = virtualinvoke $r19.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label05;

        $r20 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: java.util.ArrayList mPendingOps>;

        $r21 = virtualinvoke $r20.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        $r22 = (com.android.server.soundtrigger.SoundTriggerService$Operation) $r21;

        specialinvoke r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: void runOrAddOperation(com.android.server.soundtrigger.SoundTriggerService$Operation)>($r22);

     label04:
        goto label03;

     label05:
        exitmonitor r36;

     label06:
        return;

     label07:
        $r23 := @caughtexception;

     label08:
        r39 = new java.lang.StringBuilder;

        specialinvoke r39.<java.lang.StringBuilder: void <init>()>();

        $r24 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Could not init ");

        $r27 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.content.ComponentName mServiceName>;

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r27);

        $r29 = virtualinvoke r39.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SoundTriggerService", $r29, $r23);

        exitmonitor r36;

     label09:
        return;

     label10:
        $r30 := @caughtexception;

     label11:
        exitmonitor r36;

     label12:
        throw $r30;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Exception from label02 to label03 with label07;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void onServiceDisconnected(android.content.ComponentName)
    {
        com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService r0;
        java.lang.StringBuilder $r1, $r6;
        android.os.ParcelUuid $r2, $r7;
        java.lang.String $r5, $r11;
        com.android.server.soundtrigger.SoundTriggerLogger$StringEvent $r10;
        java.lang.Throwable $r12;
        android.content.ComponentName r13;
        com.android.server.soundtrigger.SoundTriggerLogger r15;
        java.lang.Object r17;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService;

        r13 := @parameter0: android.content.ComponentName;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": onServiceDisconnected");

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("SoundTriggerService", $r5);

        r15 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.os.ParcelUuid mPuuid>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": onServiceDisconnected");

        $r10 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r11);

        virtualinvoke r15.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>($r10);

        r17 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: java.lang.Object mRemoteServiceLock>;

        entermonitor r17;

     label1:
        r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: android.media.soundtrigger.ISoundTriggerDetectionService mService> = null;

        exitmonitor r17;

     label2:
        return;

     label3:
        $r12 := @caughtexception;

     label4:
        exitmonitor r17;

     label5:
        throw $r12;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean pingBinder()
    {
        com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService r0;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService;

        $z0 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: boolean mIsDestroyed>;

        if $z0 != 0 goto label1;

        $z1 = r0.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: boolean mDestroyOnceRunningOpsDone>;

        if $z1 != 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public static void <clinit>()
    {
        <com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: int MSG_STOP_ALL_PENDING_OPERATIONS> = 1;

        return;
    }
}
