class com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker extends java.lang.Object
{
    private final java.util.TreeMap mModelStats;
    final com.android.server.soundtrigger.SoundTriggerService this$0;

    void <init>(com.android.server.soundtrigger.SoundTriggerService)
    {
        com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker r0;
        com.android.server.soundtrigger.SoundTriggerService r1;
        java.util.TreeMap $r2;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker;

        r1 := @parameter0: com.android.server.soundtrigger.SoundTriggerService;

        r0.<com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker: com.android.server.soundtrigger.SoundTriggerService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.TreeMap;

        specialinvoke $r2.<java.util.TreeMap: void <init>()>();

        r0.<com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker: java.util.TreeMap mModelStats> = $r2;

        return;
    }

    public void dump(java.io.PrintWriter)
    {
        com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker r0;
        long l0, l1, $l2, $l3, $l4, $l5, $l6, l7;
        java.util.Iterator r1;
        java.util.UUID r2;
        com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker$SoundModelStat r3;
        java.util.TreeMap $r4;
        java.util.Set $r5;
        boolean $z0, $z1;
        java.lang.Object $r6, $r7, $r8;
        java.lang.String $r18;
        java.lang.Throwable $r19;
        java.io.PrintWriter r20;
        java.util.Map$Entry r21;
        java.lang.StringBuilder r22;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker;

        r20 := @parameter0: java.io.PrintWriter;

        entermonitor r0;

     label1:
        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r20.<java.io.PrintWriter: void println(java.lang.String)>("Model Stats:");

        $r4 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker: java.util.TreeMap mModelStats>;

        $r5 = virtualinvoke $r4.<java.util.TreeMap: java.util.Set entrySet()>();

        r1 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r21 = (java.util.Map$Entry) $r6;

        $r7 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getKey()>();

        r2 = (java.util.UUID) $r7;

        $r8 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getValue()>();

        r3 = (com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker$SoundModelStat) $r8;

        l1 = r3.<com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker$SoundModelStat: long mTotalTimeMsec>;

     label3:
        l7 = l1;

     label4:
        $z1 = r3.<com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker$SoundModelStat: boolean mIsStarted>;

        if $z1 == 0 goto label5;

        $l5 = r3.<com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker$SoundModelStat: long mLastStartTimestampMsec>;

        $l6 = l0 - $l5;

        l7 = l1 + $l6;

     label5:
        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", total_time(msec)=");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l7);

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", total_count=");

        $l2 = r3.<com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker$SoundModelStat: long mStartCount>;

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", last_start=");

        $l3 = r3.<com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker$SoundModelStat: long mLastStartTimestampMsec>;

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", last_stop=");

        $l4 = r3.<com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker$SoundModelStat: long mLastStopTimestampMsec>;

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r18 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r20.<java.io.PrintWriter: void println(java.lang.String)>($r18);

     label6:
        goto label2;

     label7:
        exitmonitor r0;

        return;

     label8:
        $r19 := @caughtexception;

        exitmonitor r0;

        throw $r19;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label2 to label3 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void onStart(java.util.UUID)
    {
        com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker r0;
        com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker$SoundModelStat r1, r12;
        java.util.TreeMap $r2, $r8;
        java.lang.Object $r3;
        boolean $z0;
        long $l0, $l1, $l2;
        java.lang.String $r7;
        java.lang.Throwable $r10;
        java.util.UUID r11;
        java.lang.StringBuilder r13;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker;

        r11 := @parameter0: java.util.UUID;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker: java.util.TreeMap mModelStats>;

        $r3 = virtualinvoke $r2.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>(r11);

        r1 = (com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker$SoundModelStat) $r3;

     label2:
        r12 = r1;

        if r1 != null goto label5;

     label3:
        r12 = new com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker$SoundModelStat;

        specialinvoke r12.<com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker$SoundModelStat: void <init>(com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker)>(r0);

     label4:
        $r8 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker: java.util.TreeMap mModelStats>;

        virtualinvoke $r8.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, r12);

     label5:
        $z0 = r12.<com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker$SoundModelStat: boolean mIsStarted>;

        if $z0 == 0 goto label7;

        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error onStart(): Model ");

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already started");

        $r7 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SoundTriggerService", $r7);

     label6:
        exitmonitor r0;

        return;

     label7:
        $l0 = r12.<com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker$SoundModelStat: long mStartCount>;

        $l1 = $l0 + 1L;

        r12.<com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker$SoundModelStat: long mStartCount> = $l1;

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r12.<com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker$SoundModelStat: long mLastStartTimestampMsec> = $l2;

        r12.<com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker$SoundModelStat: boolean mIsStarted> = 1;

     label8:
        exitmonitor r0;

        return;

     label9:
        $r10 := @caughtexception;

        exitmonitor r0;

        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label4 to label5 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label7 to label8 with label9;
    }

    public void onStop(java.util.UUID)
    {
        com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker r0;
        java.util.TreeMap $r1;
        java.lang.Object $r2;
        boolean $z0;
        long $l0, $l1, $l2, $l3, $l4, $l5;
        java.lang.String $r6, $r10;
        java.lang.Throwable $r11;
        java.util.UUID r12;
        com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker$SoundModelStat r13;
        java.lang.StringBuilder r14, r15;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker;

        r12 := @parameter0: java.util.UUID;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker: java.util.TreeMap mModelStats>;

        $r2 = virtualinvoke $r1.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>(r12);

        r13 = (com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker$SoundModelStat) $r2;

     label2:
        if r13 != null goto label5;

     label3:
        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error onStop(): Model ");

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12);

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no stats available");

        $r10 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SoundTriggerService", $r10);

     label4:
        exitmonitor r0;

        return;

     label5:
        $z0 = r13.<com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker$SoundModelStat: boolean mIsStarted>;

        if $z0 != 0 goto label7;

        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error onStop(): Model ");

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12);

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already stopped");

        $r6 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SoundTriggerService", $r6);

     label6:
        exitmonitor r0;

        return;

     label7:
        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r13.<com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker$SoundModelStat: long mLastStopTimestampMsec> = $l0;

        $l4 = r13.<com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker$SoundModelStat: long mTotalTimeMsec>;

        $l2 = r13.<com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker$SoundModelStat: long mLastStopTimestampMsec>;

        $l1 = r13.<com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker$SoundModelStat: long mLastStartTimestampMsec>;

        $l3 = $l2 - $l1;

        $l5 = $l4 + $l3;

        r13.<com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker$SoundModelStat: long mTotalTimeMsec> = $l5;

        r13.<com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker$SoundModelStat: boolean mIsStarted> = 0;

     label8:
        exitmonitor r0;

        return;

     label9:
        $r11 := @caughtexception;

        exitmonitor r0;

        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label7 to label8 with label9;
    }
}
