class com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub extends com.android.internal.app.ISoundTriggerService$Stub
{
    final com.android.server.soundtrigger.SoundTriggerService this$0;

    void <init>(com.android.server.soundtrigger.SoundTriggerService)
    {
        com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub r0;
        com.android.server.soundtrigger.SoundTriggerService r1;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub;

        r1 := @parameter0: com.android.server.soundtrigger.SoundTriggerService;

        r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0> = r1;

        specialinvoke r0.<com.android.internal.app.ISoundTriggerService$Stub: void <init>()>();

        return;
    }

    public void deleteSoundModel(android.os.ParcelUuid)
    {
        com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub r0;
        android.os.ParcelUuid r1;
        com.android.server.soundtrigger.SoundTriggerService $r3, $r13, $r14, $r17, $r20;
        java.lang.StringBuilder $r4, $r8;
        java.lang.String $r7, $r12;
        com.android.server.soundtrigger.SoundTriggerLogger$StringEvent $r11;
        boolean $z0;
        com.android.server.soundtrigger.SoundTriggerDbHelper $r15;
        java.util.UUID $r16, $r19, $r22;
        com.android.server.soundtrigger.SoundTriggerHelper $r18;
        com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker $r21;
        com.android.server.soundtrigger.SoundTriggerLogger r24;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub;

        r1 := @parameter0: android.os.ParcelUuid;

        $r3 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        staticinvoke <com.android.server.soundtrigger.SoundTriggerService: void access$000(com.android.server.soundtrigger.SoundTriggerService,java.lang.String)>($r3, "android.permission.MANAGE_SOUND_TRIGGER");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("deleteSoundModel(): id = ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SoundTriggerService", $r7);

        r24 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("deleteSoundModel(): id = ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r12);

        virtualinvoke r24.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>($r11);

        $r13 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $z0 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: boolean access$100(com.android.server.soundtrigger.SoundTriggerService)>($r13);

        if $z0 == 0 goto label1;

        $r17 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r18 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerHelper access$300(com.android.server.soundtrigger.SoundTriggerService)>($r17);

        $r19 = virtualinvoke r1.<android.os.ParcelUuid: java.util.UUID getUuid()>();

        virtualinvoke $r18.<com.android.server.soundtrigger.SoundTriggerHelper: int unloadGenericSoundModel(java.util.UUID)>($r19);

        $r20 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r21 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker access$400(com.android.server.soundtrigger.SoundTriggerService)>($r20);

        $r22 = virtualinvoke r1.<android.os.ParcelUuid: java.util.UUID getUuid()>();

        virtualinvoke $r21.<com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker: void onStop(java.util.UUID)>($r22);

     label1:
        $r14 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r15 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerDbHelper access$500(com.android.server.soundtrigger.SoundTriggerService)>($r14);

        $r16 = virtualinvoke r1.<android.os.ParcelUuid: java.util.UUID getUuid()>();

        virtualinvoke $r15.<com.android.server.soundtrigger.SoundTriggerDbHelper: boolean deleteGenericSoundModel(java.util.UUID)>($r16);

        return;
    }

    public int getModelState(android.os.ParcelUuid)
    {
        com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub r0;
        com.android.server.soundtrigger.SoundTriggerService $r1, $r2, $r12, $r13, $r17;
        boolean $z0;
        java.lang.StringBuilder $r3, $r7, r40, r43, r44, r47;
        java.lang.String $r6, $r11, $r22, $r25, $r28, $r32;
        com.android.server.soundtrigger.SoundTriggerLogger$StringEvent $r10, r42, r46;
        java.util.TreeMap $r14;
        java.util.UUID $r15, $r19;
        java.lang.Object $r16, r38;
        int $i1, $i2, $i4, i6;
        com.android.server.soundtrigger.SoundTriggerHelper $r18;
        java.lang.Throwable $r33;
        android.os.ParcelUuid r34;
        com.android.server.soundtrigger.SoundTriggerLogger r36, r41, r45;
        android.hardware.soundtrigger.SoundTrigger$SoundModel r39;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub;

        r34 := @parameter0: android.os.ParcelUuid;

        $r1 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        staticinvoke <com.android.server.soundtrigger.SoundTriggerService: void access$000(com.android.server.soundtrigger.SoundTriggerService,java.lang.String)>($r1, "android.permission.MANAGE_SOUND_TRIGGER");

        i6 = -2147483648;

        $r2 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $z0 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: boolean access$100(com.android.server.soundtrigger.SoundTriggerService)>($r2);

        if $z0 != 0 goto label01;

        return -2147483648;

     label01:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getModelState(): id = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r34);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SoundTriggerService", $r6);

        r36 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getModelState(): id = ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r34);

        $r10 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r11);

        virtualinvoke r36.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>($r10);

        $r12 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        r38 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.lang.Object access$600(com.android.server.soundtrigger.SoundTriggerService)>($r12);

        entermonitor r38;

     label02:
        $r13 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r14 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.util.TreeMap access$700(com.android.server.soundtrigger.SoundTriggerService)>($r13);

        $r15 = virtualinvoke r34.<android.os.ParcelUuid: java.util.UUID getUuid()>();

        $r16 = virtualinvoke $r14.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r15);

        r39 = (android.hardware.soundtrigger.SoundTrigger$SoundModel) $r16;

     label03:
        if r39 != null goto label06;

     label04:
        r40 = new java.lang.StringBuilder;

        specialinvoke r40.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r34);

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not loaded");

        $r28 = virtualinvoke r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SoundTriggerService", $r28);

        r41 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        r42 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        r43 = new java.lang.StringBuilder;

        specialinvoke r43.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getModelState(): ");

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r34);

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not loaded");

        $r32 = virtualinvoke r43.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r42.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r32);

        virtualinvoke r41.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>(r42);

        exitmonitor r38;

     label05:
        return -2147483648;

     label06:
        $i1 = virtualinvoke r39.<android.hardware.soundtrigger.SoundTrigger$SoundModel: int getType()>();

        if $i1 == 1 goto label08;

        r44 = new java.lang.StringBuilder;

        specialinvoke r44.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported model type, ");

        $i2 = virtualinvoke r39.<android.hardware.soundtrigger.SoundTrigger$SoundModel: int getType()>();

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r22 = virtualinvoke r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SoundTriggerService", $r22);

        r45 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        r46 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        r47 = new java.lang.StringBuilder;

        specialinvoke r47.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getModelState(): Unsupported model type, ");

        $i4 = virtualinvoke r39.<android.hardware.soundtrigger.SoundTrigger$SoundModel: int getType()>();

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r25 = virtualinvoke r47.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r46.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r25);

        virtualinvoke r45.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>(r46);

     label07:
        goto label09;

     label08:
        $r17 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r18 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerHelper access$300(com.android.server.soundtrigger.SoundTriggerService)>($r17);

        $r19 = virtualinvoke r39.<android.hardware.soundtrigger.SoundTrigger$SoundModel: java.util.UUID getUuid()>();

        i6 = virtualinvoke $r18.<com.android.server.soundtrigger.SoundTriggerHelper: int getGenericModelState(java.util.UUID)>($r19);

     label09:
        exitmonitor r38;

     label10:
        return i6;

     label11:
        $r33 := @caughtexception;

     label12:
        exitmonitor r38;

     label13:
        throw $r33;

        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public android.hardware.soundtrigger.SoundTrigger$ModuleProperties getModuleProperties()
    {
        com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub r0;
        java.lang.Object r1;
        com.android.server.soundtrigger.SoundTriggerLogger r2;
        com.android.server.soundtrigger.SoundTriggerLogger$StringEvent r3;
        java.lang.StringBuilder r4;
        com.android.server.soundtrigger.SoundTriggerService $r5, $r6, $r7, $r8;
        boolean $z0;
        com.android.server.soundtrigger.SoundTriggerHelper $r9;
        java.lang.String $r11, $r13;
        java.lang.Throwable $r14;
        android.hardware.soundtrigger.SoundTrigger$ModuleProperties r15;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub;

        $r5 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        staticinvoke <com.android.server.soundtrigger.SoundTriggerService: void access$000(com.android.server.soundtrigger.SoundTriggerService,java.lang.String)>($r5, "android.permission.MANAGE_SOUND_TRIGGER");

        $r6 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $z0 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: boolean access$100(com.android.server.soundtrigger.SoundTriggerService)>($r6);

        if $z0 != 0 goto label1;

        return null;

     label1:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SoundTriggerService", "getModuleProperties()");

        $r7 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        r1 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.lang.Object access$600(com.android.server.soundtrigger.SoundTriggerService)>($r7);

        entermonitor r1;

     label2:
        $r8 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r9 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerHelper access$300(com.android.server.soundtrigger.SoundTriggerService)>($r8);

        r15 = virtualinvoke $r9.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTrigger$ModuleProperties getModuleProperties()>();

        r2 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        r3 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        r4 = new java.lang.StringBuilder;

        specialinvoke r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getModuleProperties(): ");

        $r11 = virtualinvoke r15.<android.hardware.soundtrigger.SoundTrigger$ModuleProperties: java.lang.String toString()>();

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r3.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r13);

        virtualinvoke r2.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>(r3);

        exitmonitor r1;

     label3:
        return r15;

     label4:
        $r14 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r14;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public int getParameter(android.os.ParcelUuid, int) throws java.lang.UnsupportedOperationException, java.lang.IllegalArgumentException
    {
        com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub r0;
        com.android.server.soundtrigger.SoundTriggerLogger r1, r37;
        java.lang.StringBuilder r2, $r6, $r12, r41;
        com.android.server.soundtrigger.SoundTriggerService $r3, $r4, $r19, $r20, $r31;
        boolean $z0;
        java.lang.UnsupportedOperationException $r5;
        java.lang.String $r11, $r18, $r26, $r30;
        com.android.server.soundtrigger.SoundTriggerLogger$StringEvent $r17, r42;
        java.util.TreeMap $r21;
        java.util.UUID $r22, $r33;
        java.lang.Object $r23, r39;
        com.android.server.soundtrigger.SoundTriggerHelper $r32;
        java.lang.Throwable $r34;
        android.os.ParcelUuid r35;
        int i2, i3;
        android.hardware.soundtrigger.SoundTrigger$SoundModel r40;
        java.lang.IllegalArgumentException r43;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub;

        r35 := @parameter0: android.os.ParcelUuid;

        i2 := @parameter1: int;

        $r3 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        staticinvoke <com.android.server.soundtrigger.SoundTriggerService: void access$000(com.android.server.soundtrigger.SoundTriggerService,java.lang.String)>($r3, "android.permission.MANAGE_SOUND_TRIGGER");

        $r4 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $z0 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: boolean access$100(com.android.server.soundtrigger.SoundTriggerService)>($r4);

        if $z0 == 0 goto label9;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getParameter(): id=");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r35);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", param=");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("SoundTriggerService", $r11);

        r37 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getParameter(): id=");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r35);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", param=");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r17 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        $r18 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r18);

        virtualinvoke r37.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>($r17);

        $r19 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        r39 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.lang.Object access$600(com.android.server.soundtrigger.SoundTriggerService)>($r19);

        entermonitor r39;

     label1:
        $r20 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r21 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.util.TreeMap access$700(com.android.server.soundtrigger.SoundTriggerService)>($r20);

        $r22 = virtualinvoke r35.<android.os.ParcelUuid: java.util.UUID getUuid()>();

        $r23 = virtualinvoke $r21.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r22);

        r40 = (android.hardware.soundtrigger.SoundTrigger$SoundModel) $r23;

     label2:
        if r40 == null goto label5;

     label3:
        $r31 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r32 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerHelper access$300(com.android.server.soundtrigger.SoundTriggerService)>($r31);

        $r33 = virtualinvoke r40.<android.hardware.soundtrigger.SoundTrigger$SoundModel: java.util.UUID getUuid()>();

        i3 = virtualinvoke $r32.<com.android.server.soundtrigger.SoundTriggerHelper: int getParameter(java.util.UUID,int)>($r33, i2);

        exitmonitor r39;

     label4:
        return i3;

     label5:
        r41 = new java.lang.StringBuilder;

        specialinvoke r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r35);

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not loaded");

        $r26 = virtualinvoke r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SoundTriggerService", $r26);

        r1 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        r42 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getParameter(): ");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r35);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not loaded");

        $r30 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r42.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r30);

        virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>(r42);

        r43 = new java.lang.IllegalArgumentException;

        specialinvoke r43.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("sound model is not loaded");

        throw r43;

     label6:
        $r34 := @caughtexception;

     label7:
        exitmonitor r39;

     label8:
        throw $r34;

     label9:
        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("SoundTriggerHelper not initialized");

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public android.hardware.soundtrigger.SoundTrigger$GenericSoundModel getSoundModel(android.os.ParcelUuid)
    {
        com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub r0;
        android.os.ParcelUuid r1;
        com.android.server.soundtrigger.SoundTriggerService $r3, $r13;
        java.lang.StringBuilder $r4, $r8;
        java.lang.String $r7, $r12;
        com.android.server.soundtrigger.SoundTriggerLogger$StringEvent $r11;
        com.android.server.soundtrigger.SoundTriggerDbHelper $r14;
        java.util.UUID $r15;
        android.hardware.soundtrigger.SoundTrigger$GenericSoundModel $r16;
        com.android.server.soundtrigger.SoundTriggerLogger r18;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub;

        r1 := @parameter0: android.os.ParcelUuid;

        $r3 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        staticinvoke <com.android.server.soundtrigger.SoundTriggerService: void access$000(com.android.server.soundtrigger.SoundTriggerService,java.lang.String)>($r3, "android.permission.MANAGE_SOUND_TRIGGER");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getSoundModel(): id = ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SoundTriggerService", $r7);

        r18 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getSoundModel(): id = ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r12);

        virtualinvoke r18.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>($r11);

        $r13 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r14 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerDbHelper access$500(com.android.server.soundtrigger.SoundTriggerService)>($r13);

        $r15 = virtualinvoke r1.<android.os.ParcelUuid: java.util.UUID getUuid()>();

        $r16 = virtualinvoke $r14.<com.android.server.soundtrigger.SoundTriggerDbHelper: android.hardware.soundtrigger.SoundTrigger$GenericSoundModel getGenericSoundModel(java.util.UUID)>($r15);

        return $r16;
    }

    public boolean isRecognitionActive(android.os.ParcelUuid)
    {
        com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub r0;
        java.lang.Object r1, $r8;
        com.android.server.soundtrigger.SoundTriggerService $r2, $r3, $r4, $r5, $r10;
        boolean $z0, $z1;
        java.util.TreeMap $r6;
        java.util.UUID $r7, $r12;
        android.hardware.soundtrigger.IRecognitionStatusCallback $r9;
        com.android.server.soundtrigger.SoundTriggerHelper $r11;
        java.lang.Throwable $r13;
        android.os.ParcelUuid r14;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub;

        r14 := @parameter0: android.os.ParcelUuid;

        $r2 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        staticinvoke <com.android.server.soundtrigger.SoundTriggerService: void access$000(com.android.server.soundtrigger.SoundTriggerService,java.lang.String)>($r2, "android.permission.MANAGE_SOUND_TRIGGER");

        $r3 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $z0 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: boolean access$100(com.android.server.soundtrigger.SoundTriggerService)>($r3);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r4 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        r1 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.lang.Object access$800(com.android.server.soundtrigger.SoundTriggerService)>($r4);

        entermonitor r1;

     label2:
        $r5 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r6 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.util.TreeMap access$900(com.android.server.soundtrigger.SoundTriggerService)>($r5);

        $r7 = virtualinvoke r14.<android.os.ParcelUuid: java.util.UUID getUuid()>();

        $r8 = virtualinvoke $r6.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r7);

        $r9 = (android.hardware.soundtrigger.IRecognitionStatusCallback) $r8;

        if $r9 != null goto label4;

        exitmonitor r1;

     label3:
        return 0;

     label4:
        exitmonitor r1;

     label5:
        $r10 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r11 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerHelper access$300(com.android.server.soundtrigger.SoundTriggerService)>($r10);

        $r12 = virtualinvoke r14.<android.os.ParcelUuid: java.util.UUID getUuid()>();

        $z1 = virtualinvoke $r11.<com.android.server.soundtrigger.SoundTriggerHelper: boolean isRecognitionRequested(java.util.UUID)>($r12);

        return $z1;

     label6:
        $r13 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r13;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public int loadGenericSoundModel(android.hardware.soundtrigger.SoundTrigger$GenericSoundModel)
    {
        com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub r0;
        com.android.server.soundtrigger.SoundTriggerService $r1, $r2, $r17, $r18, $r23, $r26, $r27, $r41;
        boolean $z0, $z1;
        com.android.server.soundtrigger.SoundTriggerLogger $r3, r35;
        com.android.server.soundtrigger.SoundTriggerLogger$StringEvent $r4, $r15;
        java.util.UUID $r5, $r8, $r13, $r20, $r25, $r29, $r43;
        java.lang.StringBuilder $r6, $r11;
        java.lang.String $r10, $r16;
        java.util.TreeMap $r19, $r28, $r42;
        java.lang.Object $r21, r37, r39;
        com.android.server.soundtrigger.SoundTriggerHelper $r24;
        java.lang.Throwable $r31, $r32;
        android.hardware.soundtrigger.SoundTrigger$GenericSoundModel r33;
        android.hardware.soundtrigger.SoundTrigger$SoundModel r38;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub;

        r33 := @parameter0: android.hardware.soundtrigger.SoundTrigger$GenericSoundModel;

        $r1 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        staticinvoke <com.android.server.soundtrigger.SoundTriggerService: void access$000(com.android.server.soundtrigger.SoundTriggerService,java.lang.String)>($r1, "android.permission.MANAGE_SOUND_TRIGGER");

        $r2 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $z0 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: boolean access$100(com.android.server.soundtrigger.SoundTriggerService)>($r2);

        if $z0 != 0 goto label01;

        return -2147483648;

     label01:
        if r33 == null goto label17;

        $r5 = virtualinvoke r33.<android.hardware.soundtrigger.SoundTrigger$GenericSoundModel: java.util.UUID getUuid()>();

        if $r5 != null goto label02;

        goto label17;

     label02:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("loadGenericSoundModel(): id = ");

        $r8 = virtualinvoke r33.<android.hardware.soundtrigger.SoundTrigger$GenericSoundModel: java.util.UUID getUuid()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SoundTriggerService", $r10);

        r35 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("loadGenericSoundModel(): id = ");

        $r13 = virtualinvoke r33.<android.hardware.soundtrigger.SoundTrigger$GenericSoundModel: java.util.UUID getUuid()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        $r16 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r16);

        virtualinvoke r35.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>($r15);

        $r17 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        r37 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.lang.Object access$600(com.android.server.soundtrigger.SoundTriggerService)>($r17);

        entermonitor r37;

     label03:
        $r18 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r19 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.util.TreeMap access$700(com.android.server.soundtrigger.SoundTriggerService)>($r18);

        $r20 = virtualinvoke r33.<android.hardware.soundtrigger.SoundTrigger$GenericSoundModel: java.util.UUID getUuid()>();

        $r21 = virtualinvoke $r19.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r20);

        r38 = (android.hardware.soundtrigger.SoundTrigger$SoundModel) $r21;

     label04:
        if r38 == null goto label11;

     label05:
        $z1 = virtualinvoke r38.<android.hardware.soundtrigger.SoundTrigger$SoundModel: boolean equals(java.lang.Object)>(r33);

        if $z1 != 0 goto label11;

        $r23 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r24 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerHelper access$300(com.android.server.soundtrigger.SoundTriggerService)>($r23);

        $r25 = virtualinvoke r33.<android.hardware.soundtrigger.SoundTrigger$GenericSoundModel: java.util.UUID getUuid()>();

        virtualinvoke $r24.<com.android.server.soundtrigger.SoundTriggerHelper: int unloadGenericSoundModel(java.util.UUID)>($r25);

        $r26 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        r39 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.lang.Object access$800(com.android.server.soundtrigger.SoundTriggerService)>($r26);

        entermonitor r39;

     label06:
        $r27 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r28 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.util.TreeMap access$900(com.android.server.soundtrigger.SoundTriggerService)>($r27);

        $r29 = virtualinvoke r33.<android.hardware.soundtrigger.SoundTrigger$GenericSoundModel: java.util.UUID getUuid()>();

        virtualinvoke $r28.<java.util.TreeMap: java.lang.Object remove(java.lang.Object)>($r29);

        exitmonitor r39;

     label07:
        goto label11;

     label08:
        $r31 := @caughtexception;

     label09:
        exitmonitor r39;

     label10:
        throw $r31;

     label11:
        $r41 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r42 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.util.TreeMap access$700(com.android.server.soundtrigger.SoundTriggerService)>($r41);

        $r43 = virtualinvoke r33.<android.hardware.soundtrigger.SoundTrigger$GenericSoundModel: java.util.UUID getUuid()>();

        virtualinvoke $r42.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r43, r33);

     label12:
        exitmonitor r37;

     label13:
        return 0;

     label14:
        $r32 := @caughtexception;

     label15:
        exitmonitor r37;

     label16:
        throw $r32;

     label17:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SoundTriggerService", "Invalid sound model");

        $r3 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        $r4 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        specialinvoke $r4.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>("loadGenericSoundModel(): Invalid sound model");

        virtualinvoke $r3.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>($r4);

        return -2147483648;

        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label11 to label12 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    public int loadKeyphraseSoundModel(android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel)
    {
        com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub r0;
        com.android.server.soundtrigger.SoundTriggerService $r1, $r2, $r21, $r22, $r27, $r31, $r32, $r46;
        boolean $z0, $z1;
        com.android.server.soundtrigger.SoundTriggerLogger $r3, $r7, r40;
        com.android.server.soundtrigger.SoundTriggerLogger$StringEvent $r4, $r8, $r19;
        java.util.UUID $r5, $r12, $r17, $r24, $r34, $r48;
        android.hardware.soundtrigger.SoundTrigger$Keyphrase[] $r6, $r9, $r29;
        int $i2, $i4;
        java.lang.StringBuilder $r10, $r15;
        java.lang.String $r14, $r20;
        java.util.TreeMap $r23, $r33, $r47;
        java.lang.Object $r25, r42, r44;
        com.android.server.soundtrigger.SoundTriggerHelper $r28;
        android.hardware.soundtrigger.SoundTrigger$Keyphrase $r30;
        java.lang.Throwable $r36, $r37;
        android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel r38;
        android.hardware.soundtrigger.SoundTrigger$SoundModel r43;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub;

        r38 := @parameter0: android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel;

        $r1 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        staticinvoke <com.android.server.soundtrigger.SoundTriggerService: void access$000(com.android.server.soundtrigger.SoundTriggerService,java.lang.String)>($r1, "android.permission.MANAGE_SOUND_TRIGGER");

        $r2 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $z0 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: boolean access$100(com.android.server.soundtrigger.SoundTriggerService)>($r2);

        if $z0 != 0 goto label01;

        return -2147483648;

     label01:
        if r38 == null goto label19;

        $r5 = virtualinvoke r38.<android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel: java.util.UUID getUuid()>();

        if $r5 != null goto label02;

        goto label19;

     label02:
        $r6 = virtualinvoke r38.<android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel: android.hardware.soundtrigger.SoundTrigger$Keyphrase[] getKeyphrases()>();

        if $r6 == null goto label18;

        $r9 = virtualinvoke r38.<android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel: android.hardware.soundtrigger.SoundTrigger$Keyphrase[] getKeyphrases()>();

        $i2 = lengthof $r9;

        if $i2 == 1 goto label03;

        goto label18;

     label03:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("loadKeyphraseSoundModel(): id = ");

        $r12 = virtualinvoke r38.<android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel: java.util.UUID getUuid()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SoundTriggerService", $r14);

        r40 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("loadKeyphraseSoundModel(): id = ");

        $r17 = virtualinvoke r38.<android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel: java.util.UUID getUuid()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        $r20 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r20);

        virtualinvoke r40.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>($r19);

        $r21 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        r42 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.lang.Object access$600(com.android.server.soundtrigger.SoundTriggerService)>($r21);

        entermonitor r42;

     label04:
        $r22 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r23 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.util.TreeMap access$700(com.android.server.soundtrigger.SoundTriggerService)>($r22);

        $r24 = virtualinvoke r38.<android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel: java.util.UUID getUuid()>();

        $r25 = virtualinvoke $r23.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r24);

        r43 = (android.hardware.soundtrigger.SoundTrigger$SoundModel) $r25;

     label05:
        if r43 == null goto label12;

     label06:
        $z1 = virtualinvoke r43.<android.hardware.soundtrigger.SoundTrigger$SoundModel: boolean equals(java.lang.Object)>(r38);

        if $z1 != 0 goto label12;

        $r27 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r28 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerHelper access$300(com.android.server.soundtrigger.SoundTriggerService)>($r27);

        $r29 = virtualinvoke r38.<android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel: android.hardware.soundtrigger.SoundTrigger$Keyphrase[] getKeyphrases()>();

        $r30 = $r29[0];

        $i4 = virtualinvoke $r30.<android.hardware.soundtrigger.SoundTrigger$Keyphrase: int getId()>();

        virtualinvoke $r28.<com.android.server.soundtrigger.SoundTriggerHelper: int unloadKeyphraseSoundModel(int)>($i4);

        $r31 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        r44 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.lang.Object access$800(com.android.server.soundtrigger.SoundTriggerService)>($r31);

        entermonitor r44;

     label07:
        $r32 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r33 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.util.TreeMap access$900(com.android.server.soundtrigger.SoundTriggerService)>($r32);

        $r34 = virtualinvoke r38.<android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel: java.util.UUID getUuid()>();

        virtualinvoke $r33.<java.util.TreeMap: java.lang.Object remove(java.lang.Object)>($r34);

        exitmonitor r44;

     label08:
        goto label12;

     label09:
        $r36 := @caughtexception;

     label10:
        exitmonitor r44;

     label11:
        throw $r36;

     label12:
        $r46 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r47 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.util.TreeMap access$700(com.android.server.soundtrigger.SoundTriggerService)>($r46);

        $r48 = virtualinvoke r38.<android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel: java.util.UUID getUuid()>();

        virtualinvoke $r47.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r48, r38);

     label13:
        exitmonitor r42;

     label14:
        return 0;

     label15:
        $r37 := @caughtexception;

     label16:
        exitmonitor r42;

     label17:
        throw $r37;

     label18:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SoundTriggerService", "Only one keyphrase per model is currently supported.");

        $r7 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        $r8 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        specialinvoke $r8.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>("loadKeyphraseSoundModel(): Only one keyphrase per model is currently supported.");

        virtualinvoke $r7.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>($r8);

        return -2147483648;

     label19:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SoundTriggerService", "Invalid sound model");

        $r3 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        $r4 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        specialinvoke $r4.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>("loadKeyphraseSoundModel(): Invalid sound model");

        virtualinvoke $r3.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>($r4);

        return -2147483648;

        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub r0;
        int i0, i1;
        android.os.Parcel r1, r3;
        boolean z0, $z1;
        java.lang.RuntimeException $r2;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub;

        i0 := @parameter0: int;

        r3 := @parameter1: android.os.Parcel;

        r1 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

     label1:
        z0 = specialinvoke r0.<com.android.internal.app.ISoundTriggerService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r3, r1, i1);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $z1 = $r2 instanceof java.lang.SecurityException;

        if $z1 != 0 goto label4;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("SoundTriggerService", "SoundTriggerService Crash", $r2);

     label4:
        throw $r2;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public android.hardware.soundtrigger.SoundTrigger$ModelParamRange queryParameter(android.os.ParcelUuid, int)
    {
        com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub r0;
        int i0;
        com.android.server.soundtrigger.SoundTriggerLogger$StringEvent r1, $r16;
        java.lang.StringBuilder r2, $r5, $r11, r40;
        com.android.server.soundtrigger.SoundTriggerService $r3, $r4, $r18, $r19, $r23;
        boolean $z0;
        java.lang.String $r10, $r17, $r28, $r32;
        java.util.TreeMap $r20;
        java.util.UUID $r21, $r25;
        java.lang.Object $r22, r38;
        com.android.server.soundtrigger.SoundTriggerHelper $r24;
        java.lang.Throwable $r33;
        android.os.ParcelUuid r34;
        com.android.server.soundtrigger.SoundTriggerLogger r36, r41;
        android.hardware.soundtrigger.SoundTrigger$SoundModel r39;
        android.hardware.soundtrigger.SoundTrigger$ModelParamRange r42;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub;

        r34 := @parameter0: android.os.ParcelUuid;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        staticinvoke <com.android.server.soundtrigger.SoundTriggerService: void access$000(com.android.server.soundtrigger.SoundTriggerService,java.lang.String)>($r3, "android.permission.MANAGE_SOUND_TRIGGER");

        $r4 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $z0 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: boolean access$100(com.android.server.soundtrigger.SoundTriggerService)>($r4);

        if $z0 != 0 goto label01;

        return null;

     label01:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("queryParameter(): id=");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r34);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", param=");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("SoundTriggerService", $r10);

        r36 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("queryParameter(): id=");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r34);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", param=");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r16 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        $r17 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r17);

        virtualinvoke r36.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>($r16);

        $r18 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        r38 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.lang.Object access$600(com.android.server.soundtrigger.SoundTriggerService)>($r18);

        entermonitor r38;

     label02:
        $r19 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r20 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.util.TreeMap access$700(com.android.server.soundtrigger.SoundTriggerService)>($r19);

        $r21 = virtualinvoke r34.<android.os.ParcelUuid: java.util.UUID getUuid()>();

        $r22 = virtualinvoke $r20.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r21);

        r39 = (android.hardware.soundtrigger.SoundTrigger$SoundModel) $r22;

     label03:
        if r39 != null goto label06;

     label04:
        r40 = new java.lang.StringBuilder;

        specialinvoke r40.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r34);

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not loaded");

        $r28 = virtualinvoke r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SoundTriggerService", $r28);

        r41 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        r1 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("queryParameter(): ");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r34);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not loaded");

        $r32 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r1.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r32);

        virtualinvoke r41.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>(r1);

        exitmonitor r38;

     label05:
        return null;

     label06:
        $r23 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r24 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerHelper access$300(com.android.server.soundtrigger.SoundTriggerService)>($r23);

        $r25 = virtualinvoke r39.<android.hardware.soundtrigger.SoundTrigger$SoundModel: java.util.UUID getUuid()>();

        r42 = virtualinvoke $r24.<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTrigger$ModelParamRange queryParameter(java.util.UUID,int)>($r25, i0);

        exitmonitor r38;

     label07:
        return r42;

     label08:
        $r33 := @caughtexception;

     label09:
        exitmonitor r38;

     label10:
        throw $r33;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public int setParameter(android.os.ParcelUuid, int, int)
    {
        com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub r0;
        int i0, $i3, i4, i5, i6;
        com.android.server.soundtrigger.SoundTriggerLogger r1, r44;
        com.android.server.soundtrigger.SoundTriggerLogger$StringEvent r2, $r20;
        com.android.server.soundtrigger.SoundTriggerService $r3, $r4, $r22, $r23, $r27, $r32;
        boolean $z0;
        java.lang.StringBuilder $r5, $r13, r48, r49;
        java.lang.String $r12, $r21, $r34, $r36, $r40;
        java.util.TreeMap $r24, $r33;
        java.util.UUID $r25, $r29;
        java.lang.Object $r26, r46;
        com.android.server.soundtrigger.SoundTriggerHelper $r28;
        java.lang.Throwable $r41;
        android.os.ParcelUuid r42;
        android.hardware.soundtrigger.SoundTrigger$SoundModel r47;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub;

        r42 := @parameter0: android.os.ParcelUuid;

        i4 := @parameter1: int;

        i0 := @parameter2: int;

        $r3 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        staticinvoke <com.android.server.soundtrigger.SoundTriggerService: void access$000(com.android.server.soundtrigger.SoundTriggerService,java.lang.String)>($r3, "android.permission.MANAGE_SOUND_TRIGGER");

        $r4 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $z0 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: boolean access$100(com.android.server.soundtrigger.SoundTriggerService)>($r4);

        if $z0 != 0 goto label01;

        $i3 = <android.hardware.soundtrigger.SoundTrigger: int STATUS_NO_INIT>;

        return $i3;

     label01:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setParameter(): id=");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r42);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", param=");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", value=");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("SoundTriggerService", $r12);

        r44 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setParameter(): id=");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r42);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", param=");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", value=");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r20 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        $r21 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r21);

        virtualinvoke r44.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>($r20);

        $r22 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        r46 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.lang.Object access$600(com.android.server.soundtrigger.SoundTriggerService)>($r22);

        entermonitor r46;

     label02:
        $r23 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r24 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.util.TreeMap access$700(com.android.server.soundtrigger.SoundTriggerService)>($r23);

        $r25 = virtualinvoke r42.<android.os.ParcelUuid: java.util.UUID getUuid()>();

        $r26 = virtualinvoke $r24.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r25);

        r47 = (android.hardware.soundtrigger.SoundTrigger$SoundModel) $r26;

     label03:
        if r47 != null goto label06;

     label04:
        r48 = new java.lang.StringBuilder;

        specialinvoke r48.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r42);

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not loaded. Loaded models: ");

        $r32 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r33 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.util.TreeMap access$700(com.android.server.soundtrigger.SoundTriggerService)>($r32);

        $r34 = virtualinvoke $r33.<java.util.TreeMap: java.lang.String toString()>();

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r36 = virtualinvoke r48.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SoundTriggerService", $r36);

        r1 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        r2 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        r49 = new java.lang.StringBuilder;

        specialinvoke r49.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setParameter(): ");

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r42);

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not loaded");

        $r40 = virtualinvoke r49.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r40);

        virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>(r2);

        i5 = <android.hardware.soundtrigger.SoundTrigger: int STATUS_BAD_VALUE>;

        exitmonitor r46;

     label05:
        return i5;

     label06:
        $r27 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r28 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerHelper access$300(com.android.server.soundtrigger.SoundTriggerService)>($r27);

        $r29 = virtualinvoke r47.<android.hardware.soundtrigger.SoundTrigger$SoundModel: java.util.UUID getUuid()>();

        i6 = virtualinvoke $r28.<com.android.server.soundtrigger.SoundTriggerHelper: int setParameter(java.util.UUID,int,int)>($r29, i4, i0);

        exitmonitor r46;

     label07:
        return i6;

     label08:
        $r41 := @caughtexception;

     label09:
        exitmonitor r46;

     label10:
        throw $r41;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public int startRecognition(android.os.ParcelUuid, android.hardware.soundtrigger.IRecognitionStatusCallback, android.hardware.soundtrigger.SoundTrigger$RecognitionConfig)
    {
        com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub r0;
        android.os.ParcelUuid r1;
        com.android.server.soundtrigger.SoundTriggerLogger r2, r35;
        int i0;
        com.android.server.soundtrigger.SoundTriggerService $r3, $r4, $r14, $r17;
        boolean $z0;
        java.lang.StringBuilder $r5, $r9, $r20, $r24;
        java.lang.String $r8, $r13, $r23, $r28;
        com.android.server.soundtrigger.SoundTriggerLogger$StringEvent $r12, $r27;
        com.android.server.soundtrigger.SoundTriggerHelper $r15;
        java.util.UUID $r16, $r19;
        com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker $r18;
        android.hardware.soundtrigger.IRecognitionStatusCallback r29;
        android.hardware.soundtrigger.SoundTrigger$RecognitionConfig r30;
        android.hardware.soundtrigger.SoundTrigger$GenericSoundModel r33;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub;

        r1 := @parameter0: android.os.ParcelUuid;

        r29 := @parameter1: android.hardware.soundtrigger.IRecognitionStatusCallback;

        r30 := @parameter2: android.hardware.soundtrigger.SoundTrigger$RecognitionConfig;

        $r3 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        staticinvoke <com.android.server.soundtrigger.SoundTriggerService: void access$000(com.android.server.soundtrigger.SoundTriggerService,java.lang.String)>($r3, "android.permission.MANAGE_SOUND_TRIGGER");

        $r4 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $z0 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: boolean access$100(com.android.server.soundtrigger.SoundTriggerService)>($r4);

        if $z0 != 0 goto label1;

        return -2147483648;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startRecognition(): Uuid : ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SoundTriggerService", $r8);

        r2 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startRecognition(): Uuid : ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r13);

        virtualinvoke r2.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>($r12);

        r33 = virtualinvoke r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: android.hardware.soundtrigger.SoundTrigger$GenericSoundModel getSoundModel(android.os.ParcelUuid)>(r1);

        if r33 != null goto label2;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Null model in database for id: ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SoundTriggerService", $r23);

        r35 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startRecognition(): Null model in database for id: ");

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r27 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r28);

        virtualinvoke r35.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>($r27);

        return -2147483648;

     label2:
        $r14 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r15 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerHelper access$300(com.android.server.soundtrigger.SoundTriggerService)>($r14);

        $r16 = virtualinvoke r1.<android.os.ParcelUuid: java.util.UUID getUuid()>();

        i0 = virtualinvoke $r15.<com.android.server.soundtrigger.SoundTriggerHelper: int startGenericRecognition(java.util.UUID,android.hardware.soundtrigger.SoundTrigger$GenericSoundModel,android.hardware.soundtrigger.IRecognitionStatusCallback,android.hardware.soundtrigger.SoundTrigger$RecognitionConfig)>($r16, r33, r29, r30);

        if i0 != 0 goto label3;

        $r17 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r18 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker access$400(com.android.server.soundtrigger.SoundTriggerService)>($r17);

        $r19 = virtualinvoke r1.<android.os.ParcelUuid: java.util.UUID getUuid()>();

        virtualinvoke $r18.<com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker: void onStart(java.util.UUID)>($r19);

     label3:
        return i0;
    }

    public int startRecognitionForService(android.os.ParcelUuid, android.os.Bundle, android.content.ComponentName, android.hardware.soundtrigger.SoundTrigger$RecognitionConfig)
    {
        com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub r0;
        android.hardware.soundtrigger.IRecognitionStatusCallback r1;
        int i0, $i2;
        com.android.server.soundtrigger.SoundTriggerService $r5, $r6, $r7, $r18, $r21, $r22, $r26, $r27, $r31, $r35, $r36, $r40;
        boolean $z0;
        java.lang.StringBuilder $r8, $r12, r73, r76, r78, r81, r84;
        java.lang.String $r11, $r16, $r45, $r48, $r52, $r55, $r59;
        com.android.server.soundtrigger.SoundTriggerLogger$StringEvent $r15, r75, r80, r83, r86;
        com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService $r17;
        java.util.UUID $r19, $r24, $r29, $r33, $r38, $r42;
        android.os.UserHandle $r20;
        java.util.TreeMap $r23, $r28, $r37;
        java.lang.Object $r25, $r30, r71, r77, r87;
        com.android.server.soundtrigger.SoundTriggerHelper $r32;
        android.hardware.soundtrigger.SoundTrigger$GenericSoundModel $r34;
        com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker $r41;
        java.lang.Throwable $r60, $r61, $r62;
        android.os.ParcelUuid r63;
        android.os.Bundle r64;
        android.content.ComponentName r65;
        android.hardware.soundtrigger.SoundTrigger$RecognitionConfig r66;
        com.android.server.soundtrigger.SoundTriggerLogger r68, r74, r79, r82, r85;
        android.hardware.soundtrigger.SoundTrigger$SoundModel r72;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub;

        r63 := @parameter0: android.os.ParcelUuid;

        r64 := @parameter1: android.os.Bundle;

        r65 := @parameter2: android.content.ComponentName;

        r66 := @parameter3: android.hardware.soundtrigger.SoundTrigger$RecognitionConfig;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r63);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r65);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r66);

        $r5 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        staticinvoke <com.android.server.soundtrigger.SoundTriggerService: void access$000(com.android.server.soundtrigger.SoundTriggerService,java.lang.String)>($r5, "android.permission.MANAGE_SOUND_TRIGGER");

        $r6 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        staticinvoke <com.android.server.soundtrigger.SoundTriggerService: void access$1000(com.android.server.soundtrigger.SoundTriggerService,android.content.ComponentName)>($r6, r65);

        $r7 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $z0 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: boolean access$100(com.android.server.soundtrigger.SoundTriggerService)>($r7);

        if $z0 != 0 goto label01;

        return -2147483648;

     label01:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startRecognition(): id = ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r63);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SoundTriggerService", $r11);

        r68 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startRecognitionForService(): id = ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r63);

        $r15 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r16);

        virtualinvoke r68.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>($r15);

        $r17 = new com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService;

        $r18 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r19 = virtualinvoke r63.<android.os.ParcelUuid: java.util.UUID getUuid()>();

        $r20 = staticinvoke <android.os.Binder: android.os.UserHandle getCallingUserHandle()>();

        specialinvoke $r17.<com.android.server.soundtrigger.SoundTriggerService$RemoteSoundTriggerDetectionService: void <init>(com.android.server.soundtrigger.SoundTriggerService,java.util.UUID,android.os.Bundle,android.content.ComponentName,android.os.UserHandle,android.hardware.soundtrigger.SoundTrigger$RecognitionConfig)>($r18, $r19, r64, r65, $r20, r66);

        $r21 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        r71 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.lang.Object access$600(com.android.server.soundtrigger.SoundTriggerService)>($r21);

        entermonitor r71;

     label02:
        $r22 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r23 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.util.TreeMap access$700(com.android.server.soundtrigger.SoundTriggerService)>($r22);

        $r24 = virtualinvoke r63.<android.os.ParcelUuid: java.util.UUID getUuid()>();

        $r25 = virtualinvoke $r23.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r24);

        r72 = (android.hardware.soundtrigger.SoundTrigger$SoundModel) $r25;

     label03:
        if r72 != null goto label06;

     label04:
        r73 = new java.lang.StringBuilder;

        specialinvoke r73.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r63);

        virtualinvoke r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not loaded");

        $r55 = virtualinvoke r73.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SoundTriggerService", $r55);

        r74 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        r75 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        r76 = new java.lang.StringBuilder;

        specialinvoke r76.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startRecognitionForService():");

        virtualinvoke r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r63);

        virtualinvoke r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not loaded");

        $r59 = virtualinvoke r76.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r75.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r59);

        virtualinvoke r74.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>(r75);

        exitmonitor r71;

     label05:
        return -2147483648;

     label06:
        $r26 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        r77 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.lang.Object access$800(com.android.server.soundtrigger.SoundTriggerService)>($r26);

        entermonitor r77;

     label07:
        $r27 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r28 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.util.TreeMap access$900(com.android.server.soundtrigger.SoundTriggerService)>($r27);

        $r29 = virtualinvoke r63.<android.os.ParcelUuid: java.util.UUID getUuid()>();

        $r30 = virtualinvoke $r28.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r29);

        r1 = (android.hardware.soundtrigger.IRecognitionStatusCallback) $r30;

        exitmonitor r77;

     label08:
        if r1 == null goto label11;

     label09:
        r78 = new java.lang.StringBuilder;

        specialinvoke r78.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r63);

        virtualinvoke r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is already running");

        $r48 = virtualinvoke r78.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SoundTriggerService", $r48);

        r79 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        r80 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        r81 = new java.lang.StringBuilder;

        specialinvoke r81.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startRecognitionForService():");

        virtualinvoke r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r63);

        virtualinvoke r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is already running");

        $r52 = virtualinvoke r81.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r80.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r52);

        virtualinvoke r79.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>(r80);

        exitmonitor r71;

     label10:
        return -2147483648;

     label11:
        $i2 = virtualinvoke r72.<android.hardware.soundtrigger.SoundTrigger$SoundModel: int getType()>();

        if $i2 == 1 goto label13;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SoundTriggerService", "Unknown model type");

        r82 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        r83 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        specialinvoke r83.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>("startRecognitionForService(): Unknown model type");

        virtualinvoke r82.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>(r83);

        exitmonitor r71;

     label12:
        return -2147483648;

     label13:
        $r31 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r32 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerHelper access$300(com.android.server.soundtrigger.SoundTriggerService)>($r31);

        $r33 = virtualinvoke r72.<android.hardware.soundtrigger.SoundTrigger$SoundModel: java.util.UUID getUuid()>();

        $r34 = (android.hardware.soundtrigger.SoundTrigger$GenericSoundModel) r72;

        i0 = virtualinvoke $r32.<com.android.server.soundtrigger.SoundTriggerHelper: int startGenericRecognition(java.util.UUID,android.hardware.soundtrigger.SoundTrigger$GenericSoundModel,android.hardware.soundtrigger.IRecognitionStatusCallback,android.hardware.soundtrigger.SoundTrigger$RecognitionConfig)>($r33, $r34, $r17, r66);

     label14:
        if i0 == 0 goto label17;

     label15:
        r84 = new java.lang.StringBuilder;

        specialinvoke r84.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to start model: ");

        virtualinvoke r84.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r45 = virtualinvoke r84.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SoundTriggerService", $r45);

        r85 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        r86 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        specialinvoke r86.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>("startRecognitionForService(): Failed to start model:");

        virtualinvoke r85.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>(r86);

        exitmonitor r71;

     label16:
        return i0;

     label17:
        $r35 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        r87 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.lang.Object access$800(com.android.server.soundtrigger.SoundTriggerService)>($r35);

        entermonitor r87;

     label18:
        $r36 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r37 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.util.TreeMap access$900(com.android.server.soundtrigger.SoundTriggerService)>($r36);

        $r38 = virtualinvoke r63.<android.os.ParcelUuid: java.util.UUID getUuid()>();

        virtualinvoke $r37.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r38, $r17);

        exitmonitor r87;

     label19:
        $r40 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r41 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker access$400(com.android.server.soundtrigger.SoundTriggerService)>($r40);

        $r42 = virtualinvoke r63.<android.os.ParcelUuid: java.util.UUID getUuid()>();

        virtualinvoke $r41.<com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker: void onStart(java.util.UUID)>($r42);

        exitmonitor r71;

     label20:
        return 0;

     label21:
        $r61 := @caughtexception;

     label22:
        exitmonitor r87;

     label23:
        throw $r61;

     label24:
        $r60 := @caughtexception;

     label25:
        exitmonitor r77;

     label26:
        throw $r60;

     label27:
        $r62 := @caughtexception;

     label28:
        exitmonitor r71;

     label29:
        throw $r62;

        catch java.lang.Throwable from label02 to label03 with label27;
        catch java.lang.Throwable from label04 to label05 with label27;
        catch java.lang.Throwable from label06 to label07 with label27;
        catch java.lang.Throwable from label07 to label08 with label24;
        catch java.lang.Throwable from label09 to label10 with label27;
        catch java.lang.Throwable from label11 to label12 with label27;
        catch java.lang.Throwable from label13 to label14 with label27;
        catch java.lang.Throwable from label15 to label16 with label27;
        catch java.lang.Throwable from label17 to label18 with label27;
        catch java.lang.Throwable from label18 to label19 with label21;
        catch java.lang.Throwable from label19 to label20 with label27;
        catch java.lang.Throwable from label22 to label23 with label21;
        catch java.lang.Throwable from label23 to label24 with label27;
        catch java.lang.Throwable from label25 to label26 with label24;
        catch java.lang.Throwable from label26 to label27 with label27;
        catch java.lang.Throwable from label28 to label29 with label27;
    }

    public int stopRecognition(android.os.ParcelUuid, android.hardware.soundtrigger.IRecognitionStatusCallback)
    {
        com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub r0;
        android.os.ParcelUuid r1;
        android.hardware.soundtrigger.IRecognitionStatusCallback r2;
        com.android.server.soundtrigger.SoundTriggerLogger r3;
        int i0;
        com.android.server.soundtrigger.SoundTriggerService $r4, $r14, $r15, $r18;
        java.lang.StringBuilder $r5, $r9;
        java.lang.String $r8, $r13;
        com.android.server.soundtrigger.SoundTriggerLogger$StringEvent $r12;
        boolean $z0;
        com.android.server.soundtrigger.SoundTriggerHelper $r16;
        java.util.UUID $r17, $r20;
        com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker $r19;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub;

        r1 := @parameter0: android.os.ParcelUuid;

        r2 := @parameter1: android.hardware.soundtrigger.IRecognitionStatusCallback;

        $r4 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        staticinvoke <com.android.server.soundtrigger.SoundTriggerService: void access$000(com.android.server.soundtrigger.SoundTriggerService,java.lang.String)>($r4, "android.permission.MANAGE_SOUND_TRIGGER");

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stopRecognition(): Uuid : ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SoundTriggerService", $r8);

        r3 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stopRecognition(): Uuid : ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r13);

        virtualinvoke r3.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>($r12);

        $r14 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $z0 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: boolean access$100(com.android.server.soundtrigger.SoundTriggerService)>($r14);

        if $z0 != 0 goto label1;

        return -2147483648;

     label1:
        $r15 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r16 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerHelper access$300(com.android.server.soundtrigger.SoundTriggerService)>($r15);

        $r17 = virtualinvoke r1.<android.os.ParcelUuid: java.util.UUID getUuid()>();

        i0 = virtualinvoke $r16.<com.android.server.soundtrigger.SoundTriggerHelper: int stopGenericRecognition(java.util.UUID,android.hardware.soundtrigger.IRecognitionStatusCallback)>($r17, r2);

        if i0 != 0 goto label2;

        $r18 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r19 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker access$400(com.android.server.soundtrigger.SoundTriggerService)>($r18);

        $r20 = virtualinvoke r1.<android.os.ParcelUuid: java.util.UUID getUuid()>();

        virtualinvoke $r19.<com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker: void onStop(java.util.UUID)>($r20);

     label2:
        return i0;
    }

    public int stopRecognitionForService(android.os.ParcelUuid)
    {
        com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub r0;
        int i0, $i2;
        com.android.server.soundtrigger.SoundTriggerService $r1, $r2, $r12, $r13, $r17, $r18, $r22, $r25, $r26, $r30;
        boolean $z0;
        java.lang.StringBuilder $r3, $r7, r62, r65, r68, r71, r74, r77;
        java.lang.String $r6, $r11, $r35, $r38, $r41, $r45, $r48, $r52;
        com.android.server.soundtrigger.SoundTriggerLogger$StringEvent $r10, r64, r70, r73, r76;
        java.util.TreeMap $r14, $r19, $r27;
        java.util.UUID $r15, $r20, $r24, $r28, $r32;
        java.lang.Object $r16, $r21, r60, r66, r78;
        com.android.server.soundtrigger.SoundTriggerHelper $r23;
        com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker $r31;
        java.lang.Throwable $r53, $r54, $r55;
        android.os.ParcelUuid r56;
        com.android.server.soundtrigger.SoundTriggerLogger r58, r63, r69, r72, r75;
        android.hardware.soundtrigger.SoundTrigger$SoundModel r61;
        android.hardware.soundtrigger.IRecognitionStatusCallback r67;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub;

        r56 := @parameter0: android.os.ParcelUuid;

        $r1 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        staticinvoke <com.android.server.soundtrigger.SoundTriggerService: void access$000(com.android.server.soundtrigger.SoundTriggerService,java.lang.String)>($r1, "android.permission.MANAGE_SOUND_TRIGGER");

        $r2 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $z0 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: boolean access$100(com.android.server.soundtrigger.SoundTriggerService)>($r2);

        if $z0 != 0 goto label01;

        return -2147483648;

     label01:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stopRecognition(): id = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r56);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SoundTriggerService", $r6);

        r58 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stopRecognitionForService(): id = ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r56);

        $r10 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r11);

        virtualinvoke r58.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>($r10);

        $r12 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        r60 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.lang.Object access$600(com.android.server.soundtrigger.SoundTriggerService)>($r12);

        entermonitor r60;

     label02:
        $r13 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r14 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.util.TreeMap access$700(com.android.server.soundtrigger.SoundTriggerService)>($r13);

        $r15 = virtualinvoke r56.<android.os.ParcelUuid: java.util.UUID getUuid()>();

        $r16 = virtualinvoke $r14.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r15);

        r61 = (android.hardware.soundtrigger.SoundTrigger$SoundModel) $r16;

     label03:
        if r61 != null goto label06;

     label04:
        r62 = new java.lang.StringBuilder;

        specialinvoke r62.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r56);

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not loaded");

        $r48 = virtualinvoke r62.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SoundTriggerService", $r48);

        r63 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        r64 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        r65 = new java.lang.StringBuilder;

        specialinvoke r65.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stopRecognitionForService(): ");

        virtualinvoke r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r56);

        virtualinvoke r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not loaded");

        $r52 = virtualinvoke r65.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r64.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r52);

        virtualinvoke r63.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>(r64);

        exitmonitor r60;

     label05:
        return -2147483648;

     label06:
        $r17 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        r66 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.lang.Object access$800(com.android.server.soundtrigger.SoundTriggerService)>($r17);

        entermonitor r66;

     label07:
        $r18 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r19 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.util.TreeMap access$900(com.android.server.soundtrigger.SoundTriggerService)>($r18);

        $r20 = virtualinvoke r56.<android.os.ParcelUuid: java.util.UUID getUuid()>();

        $r21 = virtualinvoke $r19.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r20);

        r67 = (android.hardware.soundtrigger.IRecognitionStatusCallback) $r21;

        exitmonitor r66;

     label08:
        if r67 != null goto label11;

     label09:
        r68 = new java.lang.StringBuilder;

        specialinvoke r68.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r56);

        virtualinvoke r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not running");

        $r41 = virtualinvoke r68.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SoundTriggerService", $r41);

        r69 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        r70 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        r71 = new java.lang.StringBuilder;

        specialinvoke r71.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stopRecognitionForService(): ");

        virtualinvoke r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r56);

        virtualinvoke r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not running");

        $r45 = virtualinvoke r71.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r70.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r45);

        virtualinvoke r69.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>(r70);

        exitmonitor r60;

     label10:
        return -2147483648;

     label11:
        $i2 = virtualinvoke r61.<android.hardware.soundtrigger.SoundTrigger$SoundModel: int getType()>();

        if $i2 == 1 goto label13;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SoundTriggerService", "Unknown model type");

        r72 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        r73 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        specialinvoke r73.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>("stopRecognitionForService(): Unknown model type");

        virtualinvoke r72.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>(r73);

        exitmonitor r60;

     label12:
        return -2147483648;

     label13:
        $r22 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r23 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerHelper access$300(com.android.server.soundtrigger.SoundTriggerService)>($r22);

        $r24 = virtualinvoke r61.<android.hardware.soundtrigger.SoundTrigger$SoundModel: java.util.UUID getUuid()>();

        i0 = virtualinvoke $r23.<com.android.server.soundtrigger.SoundTriggerHelper: int stopGenericRecognition(java.util.UUID,android.hardware.soundtrigger.IRecognitionStatusCallback)>($r24, r67);

     label14:
        if i0 == 0 goto label17;

     label15:
        r74 = new java.lang.StringBuilder;

        specialinvoke r74.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to stop model: ");

        virtualinvoke r74.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r35 = virtualinvoke r74.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SoundTriggerService", $r35);

        r75 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        r76 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        r77 = new java.lang.StringBuilder;

        specialinvoke r77.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stopRecognitionForService(): Failed to stop model: ");

        virtualinvoke r77.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r38 = virtualinvoke r77.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r76.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r38);

        virtualinvoke r75.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>(r76);

        exitmonitor r60;

     label16:
        return i0;

     label17:
        $r25 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        r78 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.lang.Object access$800(com.android.server.soundtrigger.SoundTriggerService)>($r25);

        entermonitor r78;

     label18:
        $r26 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r27 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.util.TreeMap access$900(com.android.server.soundtrigger.SoundTriggerService)>($r26);

        $r28 = virtualinvoke r56.<android.os.ParcelUuid: java.util.UUID getUuid()>();

        virtualinvoke $r27.<java.util.TreeMap: java.lang.Object remove(java.lang.Object)>($r28);

        exitmonitor r78;

     label19:
        $r30 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r31 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker access$400(com.android.server.soundtrigger.SoundTriggerService)>($r30);

        $r32 = virtualinvoke r56.<android.os.ParcelUuid: java.util.UUID getUuid()>();

        virtualinvoke $r31.<com.android.server.soundtrigger.SoundTriggerService$SoundModelStatTracker: void onStop(java.util.UUID)>($r32);

        exitmonitor r60;

     label20:
        return 0;

     label21:
        $r55 := @caughtexception;

     label22:
        exitmonitor r78;

     label23:
        throw $r55;

     label24:
        $r54 := @caughtexception;

     label25:
        exitmonitor r66;

     label26:
        throw $r54;

     label27:
        $r53 := @caughtexception;

     label28:
        exitmonitor r60;

     label29:
        throw $r53;

        catch java.lang.Throwable from label02 to label03 with label27;
        catch java.lang.Throwable from label04 to label05 with label27;
        catch java.lang.Throwable from label06 to label07 with label27;
        catch java.lang.Throwable from label07 to label08 with label24;
        catch java.lang.Throwable from label09 to label10 with label27;
        catch java.lang.Throwable from label11 to label12 with label27;
        catch java.lang.Throwable from label13 to label14 with label27;
        catch java.lang.Throwable from label15 to label16 with label27;
        catch java.lang.Throwable from label17 to label18 with label27;
        catch java.lang.Throwable from label18 to label19 with label21;
        catch java.lang.Throwable from label19 to label20 with label27;
        catch java.lang.Throwable from label22 to label23 with label21;
        catch java.lang.Throwable from label23 to label24 with label27;
        catch java.lang.Throwable from label25 to label26 with label24;
        catch java.lang.Throwable from label26 to label27 with label27;
        catch java.lang.Throwable from label28 to label29 with label27;
    }

    public int unloadSoundModel(android.os.ParcelUuid)
    {
        com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub r0;
        com.android.server.soundtrigger.SoundTriggerLogger r1, r41, r47, r49;
        com.android.server.soundtrigger.SoundTriggerLogger$StringEvent r2, $r12, r48, r50;
        com.android.server.soundtrigger.SoundTriggerService $r3, $r4, $r14, $r15, $r19, $r24, $r28;
        boolean $z0;
        java.lang.StringBuilder $r5, $r9, r45, r46;
        java.lang.String $r8, $r13, $r33, $r37;
        java.util.TreeMap $r16, $r25;
        java.util.UUID $r17, $r26, $r30;
        java.lang.Object $r18, r43;
        com.android.server.soundtrigger.SoundTriggerHelper $r20, $r29;
        android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel $r21;
        android.hardware.soundtrigger.SoundTrigger$Keyphrase[] $r22;
        android.hardware.soundtrigger.SoundTrigger$Keyphrase $r23;
        int $i1, i5, i6;
        java.lang.Throwable $r38;
        android.os.ParcelUuid r39;
        android.hardware.soundtrigger.SoundTrigger$SoundModel r44;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub;

        r39 := @parameter0: android.os.ParcelUuid;

        $r3 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        staticinvoke <com.android.server.soundtrigger.SoundTriggerService: void access$000(com.android.server.soundtrigger.SoundTriggerService,java.lang.String)>($r3, "android.permission.MANAGE_SOUND_TRIGGER");

        $r4 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $z0 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: boolean access$100(com.android.server.soundtrigger.SoundTriggerService)>($r4);

        if $z0 != 0 goto label01;

        return -2147483648;

     label01:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unloadSoundModel(): id = ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r39);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SoundTriggerService", $r8);

        r41 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unloadSoundModel(): id = ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r39);

        $r12 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r13);

        virtualinvoke r41.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>($r12);

        $r14 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        r43 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.lang.Object access$600(com.android.server.soundtrigger.SoundTriggerService)>($r14);

        entermonitor r43;

     label02:
        $r15 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r16 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.util.TreeMap access$700(com.android.server.soundtrigger.SoundTriggerService)>($r15);

        $r17 = virtualinvoke r39.<android.os.ParcelUuid: java.util.UUID getUuid()>();

        $r18 = virtualinvoke $r16.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r17);

        r44 = (android.hardware.soundtrigger.SoundTrigger$SoundModel) $r18;

     label03:
        if r44 != null goto label06;

     label04:
        r45 = new java.lang.StringBuilder;

        specialinvoke r45.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r39);

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not loaded");

        $r33 = virtualinvoke r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SoundTriggerService", $r33);

        r1 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        r2 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        r46 = new java.lang.StringBuilder;

        specialinvoke r46.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unloadSoundModel(): ");

        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r39);

        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not loaded");

        $r37 = virtualinvoke r46.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r37);

        virtualinvoke r1.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>(r2);

        exitmonitor r43;

     label05:
        return -2147483648;

     label06:
        i5 = virtualinvoke r44.<android.hardware.soundtrigger.SoundTrigger$SoundModel: int getType()>();

     label07:
        if i5 == 0 goto label12;

        if i5 == 1 goto label10;

     label08:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SoundTriggerService", "Unknown model type");

        r47 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        r48 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        specialinvoke r48.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>("unloadSoundModel(): Unknown model type");

        virtualinvoke r47.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>(r48);

        exitmonitor r43;

     label09:
        return -2147483648;

     label10:
        $r28 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r29 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerHelper access$300(com.android.server.soundtrigger.SoundTriggerService)>($r28);

        $r30 = virtualinvoke r44.<android.hardware.soundtrigger.SoundTrigger$SoundModel: java.util.UUID getUuid()>();

        i6 = virtualinvoke $r29.<com.android.server.soundtrigger.SoundTriggerHelper: int unloadGenericSoundModel(java.util.UUID)>($r30);

     label11:
        goto label13;

     label12:
        $r19 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r20 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerHelper access$300(com.android.server.soundtrigger.SoundTriggerService)>($r19);

        $r21 = (android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel) r44;

        $r22 = virtualinvoke $r21.<android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel: android.hardware.soundtrigger.SoundTrigger$Keyphrase[] getKeyphrases()>();

        $r23 = $r22[0];

        $i1 = virtualinvoke $r23.<android.hardware.soundtrigger.SoundTrigger$Keyphrase: int getId()>();

        i6 = virtualinvoke $r20.<com.android.server.soundtrigger.SoundTriggerHelper: int unloadKeyphraseSoundModel(int)>($i1);

     label13:
        if i6 == 0 goto label16;

     label14:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SoundTriggerService", "Failed to unload model");

        r49 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        r50 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        specialinvoke r50.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>("unloadSoundModel(): Failed to unload model");

        virtualinvoke r49.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>(r50);

        exitmonitor r43;

     label15:
        return i6;

     label16:
        $r24 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r25 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: java.util.TreeMap access$700(com.android.server.soundtrigger.SoundTriggerService)>($r24);

        $r26 = virtualinvoke r39.<android.os.ParcelUuid: java.util.UUID getUuid()>();

        virtualinvoke $r25.<java.util.TreeMap: java.lang.Object remove(java.lang.Object)>($r26);

        exitmonitor r43;

     label17:
        return 0;

     label18:
        $r38 := @caughtexception;

     label19:
        exitmonitor r43;

     label20:
        throw $r38;

        catch java.lang.Throwable from label02 to label03 with label18;
        catch java.lang.Throwable from label04 to label05 with label18;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch java.lang.Throwable from label08 to label09 with label18;
        catch java.lang.Throwable from label10 to label11 with label18;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
    }

    public void updateSoundModel(android.hardware.soundtrigger.SoundTrigger$GenericSoundModel)
    {
        com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub r0;
        android.hardware.soundtrigger.SoundTrigger$GenericSoundModel r1;
        com.android.server.soundtrigger.SoundTriggerLogger r2;
        com.android.server.soundtrigger.SoundTriggerService $r3, $r13;
        java.lang.StringBuilder $r4, $r8;
        java.lang.String $r7, $r12;
        com.android.server.soundtrigger.SoundTriggerLogger$StringEvent $r11;
        com.android.server.soundtrigger.SoundTriggerDbHelper $r14;

        r0 := @this: com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub;

        r1 := @parameter0: android.hardware.soundtrigger.SoundTrigger$GenericSoundModel;

        $r3 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        staticinvoke <com.android.server.soundtrigger.SoundTriggerService: void access$000(com.android.server.soundtrigger.SoundTriggerService,java.lang.String)>($r3, "android.permission.MANAGE_SOUND_TRIGGER");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateSoundModel(): model = ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SoundTriggerService", $r7);

        r2 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerLogger access$200()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateSoundModel(): model = ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = new com.android.server.soundtrigger.SoundTriggerLogger$StringEvent;

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<com.android.server.soundtrigger.SoundTriggerLogger$StringEvent: void <init>(java.lang.String)>($r12);

        virtualinvoke r2.<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger$Event)>($r11);

        $r13 = r0.<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub: com.android.server.soundtrigger.SoundTriggerService this$0>;

        $r14 = staticinvoke <com.android.server.soundtrigger.SoundTriggerService: com.android.server.soundtrigger.SoundTriggerDbHelper access$500(com.android.server.soundtrigger.SoundTriggerService)>($r13);

        virtualinvoke $r14.<com.android.server.soundtrigger.SoundTriggerDbHelper: boolean updateGenericSoundModel(android.hardware.soundtrigger.SoundTrigger$GenericSoundModel)>(r1);

        return;
    }
}
