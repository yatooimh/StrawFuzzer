class com.android.server.soundtrigger_middleware.ExternalCaptureStateTracker extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final java.util.function.Consumer mListener;
    private final java.util.concurrent.Semaphore mNeedToConnect;

    void <init>(java.util.function.Consumer)
    {
        com.android.server.soundtrigger_middleware.ExternalCaptureStateTracker r0;
        java.util.function.Consumer r1;
        java.util.concurrent.Semaphore $r2;
        java.lang.Thread $r3;
        com.android.server.soundtrigger_middleware._$$Lambda$ExternalCaptureStateTracker$Ygm9zjschDPyC1_diGoIJXbnmGc $r4;

        r0 := @this: com.android.server.soundtrigger_middleware.ExternalCaptureStateTracker;

        r1 := @parameter0: java.util.function.Consumer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.concurrent.Semaphore;

        specialinvoke $r2.<java.util.concurrent.Semaphore: void <init>(int)>(1);

        r0.<com.android.server.soundtrigger_middleware.ExternalCaptureStateTracker: java.util.concurrent.Semaphore mNeedToConnect> = $r2;

        r0.<com.android.server.soundtrigger_middleware.ExternalCaptureStateTracker: java.util.function.Consumer mListener> = r1;

        $r3 = new java.lang.Thread;

        $r4 = new com.android.server.soundtrigger_middleware._$$Lambda$ExternalCaptureStateTracker$Ygm9zjschDPyC1_diGoIJXbnmGc;

        specialinvoke $r4.<com.android.server.soundtrigger_middleware._$$Lambda$ExternalCaptureStateTracker$Ygm9zjschDPyC1_diGoIJXbnmGc: void <init>(com.android.server.soundtrigger_middleware.ExternalCaptureStateTracker)>(r0);

        specialinvoke $r3.<java.lang.Thread: void <init>(java.lang.Runnable)>($r4);

        virtualinvoke $r3.<java.lang.Thread: void start()>();

        return;
    }

    private void binderDied()
    {
        com.android.server.soundtrigger_middleware.ExternalCaptureStateTracker r0;
        java.util.concurrent.Semaphore $r1;

        r0 := @this: com.android.server.soundtrigger_middleware.ExternalCaptureStateTracker;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("CaptureStateTracker", "Audio policy service died");

        $r1 = r0.<com.android.server.soundtrigger_middleware.ExternalCaptureStateTracker: java.util.concurrent.Semaphore mNeedToConnect>;

        virtualinvoke $r1.<java.util.concurrent.Semaphore: void release()>();

        return;
    }

    private native void connect();

    public static void lambda$Ygm9zjschDPyC1_diGoIJXbnmGc(com.android.server.soundtrigger_middleware.ExternalCaptureStateTracker)
    {
        com.android.server.soundtrigger_middleware.ExternalCaptureStateTracker r0;

        r0 := @parameter0: com.android.server.soundtrigger_middleware.ExternalCaptureStateTracker;

        specialinvoke r0.<com.android.server.soundtrigger_middleware.ExternalCaptureStateTracker: void run()>();

        return;
    }

    private void run()
    {
        com.android.server.soundtrigger_middleware.ExternalCaptureStateTracker r0;
        java.util.concurrent.Semaphore $r1;

        r0 := @this: com.android.server.soundtrigger_middleware.ExternalCaptureStateTracker;

     label1:
        $r1 = r0.<com.android.server.soundtrigger_middleware.ExternalCaptureStateTracker: java.util.concurrent.Semaphore mNeedToConnect>;

        virtualinvoke $r1.<java.util.concurrent.Semaphore: void acquireUninterruptibly()>();

        specialinvoke r0.<com.android.server.soundtrigger_middleware.ExternalCaptureStateTracker: void connect()>();

        goto label1;
    }

    private void setCaptureState(boolean)
    {
        com.android.server.soundtrigger_middleware.ExternalCaptureStateTracker r0;
        boolean z0;
        java.util.function.Consumer $r1;
        java.lang.Boolean $r2;

        r0 := @this: com.android.server.soundtrigger_middleware.ExternalCaptureStateTracker;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.server.soundtrigger_middleware.ExternalCaptureStateTracker: java.util.function.Consumer mListener>;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        interfaceinvoke $r1.<java.util.function.Consumer: void accept(java.lang.Object)>($r2);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.soundtrigger_middleware.ExternalCaptureStateTracker: java.lang.String TAG> = "CaptureStateTracker";

        return;
    }
}
