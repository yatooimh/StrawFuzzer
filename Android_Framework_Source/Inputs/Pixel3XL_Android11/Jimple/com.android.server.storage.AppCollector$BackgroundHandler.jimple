class com.android.server.storage.AppCollector$BackgroundHandler extends android.os.Handler
{
    static final int MSG_START_LOADING_SIZES;
    private final android.content.pm.PackageManager mPm;
    private final android.app.usage.StorageStatsManager mStorageStatsManager;
    private final android.os.UserManager mUm;
    private final android.os.storage.VolumeInfo mVolume;
    final com.android.server.storage.AppCollector this$0;

    void <init>(com.android.server.storage.AppCollector, android.os.Looper, android.os.storage.VolumeInfo, android.content.pm.PackageManager, android.os.UserManager, android.app.usage.StorageStatsManager)
    {
        com.android.server.storage.AppCollector$BackgroundHandler r0;
        com.android.server.storage.AppCollector r1;
        android.os.Looper r2;
        android.os.storage.VolumeInfo r3;
        android.content.pm.PackageManager r4;
        android.os.UserManager r5;
        android.app.usage.StorageStatsManager r6;

        r0 := @this: com.android.server.storage.AppCollector$BackgroundHandler;

        r1 := @parameter0: com.android.server.storage.AppCollector;

        r2 := @parameter1: android.os.Looper;

        r3 := @parameter2: android.os.storage.VolumeInfo;

        r4 := @parameter3: android.content.pm.PackageManager;

        r5 := @parameter4: android.os.UserManager;

        r6 := @parameter5: android.app.usage.StorageStatsManager;

        r0.<com.android.server.storage.AppCollector$BackgroundHandler: com.android.server.storage.AppCollector this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r2);

        r0.<com.android.server.storage.AppCollector$BackgroundHandler: android.os.storage.VolumeInfo mVolume> = r3;

        r0.<com.android.server.storage.AppCollector$BackgroundHandler: android.content.pm.PackageManager mPm> = r4;

        r0.<com.android.server.storage.AppCollector$BackgroundHandler: android.os.UserManager mUm> = r5;

        r0.<com.android.server.storage.AppCollector$BackgroundHandler: android.app.usage.StorageStatsManager mStorageStatsManager> = r6;

        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.server.storage.AppCollector$BackgroundHandler r0;
        java.util.List r1, r3;
        int i0, i1, $i2, $i3, $i4, i9, i10;
        android.content.pm.UserInfo r2;
        android.content.pm.ApplicationInfo r4;
        android.content.pm.PackageStats r5;
        java.util.ArrayList $r6;
        android.os.UserManager $r7;
        com.android.server.storage.AppCollector $r8;
        java.util.concurrent.CompletableFuture $r9;
        java.lang.Object $r10, $r12;
        android.content.pm.PackageManager $r11;
        android.os.storage.VolumeInfo $r13;
        java.lang.String $r14, $r15, $r18, $r20, $r22;
        boolean $z1;
        android.app.usage.StorageStatsManager $r16;
        java.util.UUID $r17;
        android.os.UserHandle $r19;
        long $l5, $l6, $l7;
        java.lang.Throwable $r21;
        android.os.Message r23;
        android.app.usage.StorageStats r25;

        r0 := @this: com.android.server.storage.AppCollector$BackgroundHandler;

        r23 := @parameter0: android.os.Message;

        $i2 = r23.<android.os.Message: int what>;

        if $i2 == 0 goto label01;

        goto label10;

     label01:
        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $r7 = r0.<com.android.server.storage.AppCollector$BackgroundHandler: android.os.UserManager mUm>;

        r1 = virtualinvoke $r7.<android.os.UserManager: java.util.List getUsers()>();

        i9 = 0;

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

     label02:
        if i9 >= i0 goto label09;

        $r10 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i9);

        r2 = (android.content.pm.UserInfo) $r10;

        $r11 = r0.<com.android.server.storage.AppCollector$BackgroundHandler: android.content.pm.PackageManager mPm>;

        $i3 = r2.<android.content.pm.UserInfo: int id>;

        r3 = virtualinvoke $r11.<android.content.pm.PackageManager: java.util.List getInstalledApplicationsAsUser(int,int)>(512, $i3);

        i10 = 0;

        i1 = interfaceinvoke r3.<java.util.List: int size()>();

     label03:
        if i10 >= i1 goto label08;

        $r12 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i10);

        r4 = (android.content.pm.ApplicationInfo) $r12;

        $r14 = r4.<android.content.pm.ApplicationInfo: java.lang.String volumeUuid>;

        $r13 = r0.<com.android.server.storage.AppCollector$BackgroundHandler: android.os.storage.VolumeInfo mVolume>;

        $r15 = virtualinvoke $r13.<android.os.storage.VolumeInfo: java.lang.String getFsUuid()>();

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r14, $r15);

        if $z1 != 0 goto label04;

        goto label07;

     label04:
        $r16 = r0.<com.android.server.storage.AppCollector$BackgroundHandler: android.app.usage.StorageStatsManager mStorageStatsManager>;

        $r17 = r4.<android.content.pm.ApplicationInfo: java.util.UUID storageUuid>;

        $r18 = r4.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r19 = virtualinvoke r2.<android.content.pm.UserInfo: android.os.UserHandle getUserHandle()>();

        r25 = virtualinvoke $r16.<android.app.usage.StorageStatsManager: android.app.usage.StorageStats queryStatsForPackage(java.util.UUID,java.lang.String,android.os.UserHandle)>($r17, $r18, $r19);

        r5 = new android.content.pm.PackageStats;

        $r20 = r4.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $i4 = r2.<android.content.pm.UserInfo: int id>;

        specialinvoke r5.<android.content.pm.PackageStats: void <init>(java.lang.String,int)>($r20, $i4);

        $l5 = virtualinvoke r25.<android.app.usage.StorageStats: long getCacheBytes()>();

        r5.<android.content.pm.PackageStats: long cacheSize> = $l5;

        $l6 = virtualinvoke r25.<android.app.usage.StorageStats: long getAppBytes()>();

        r5.<android.content.pm.PackageStats: long codeSize> = $l6;

        $l7 = virtualinvoke r25.<android.app.usage.StorageStats: long getDataBytes()>();

        r5.<android.content.pm.PackageStats: long dataSize> = $l7;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r5);

     label05:
        goto label07;

     label06:
        $r21 := @caughtexception;

        $r22 = staticinvoke <com.android.server.storage.AppCollector: java.lang.String access$000()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r22, "An exception occurred while fetching app size", $r21);

     label07:
        i10 = i10 + 1;

        goto label03;

     label08:
        i9 = i9 + 1;

        goto label02;

     label09:
        $r8 = r0.<com.android.server.storage.AppCollector$BackgroundHandler: com.android.server.storage.AppCollector this$0>;

        $r9 = staticinvoke <com.android.server.storage.AppCollector: java.util.concurrent.CompletableFuture access$100(com.android.server.storage.AppCollector)>($r8);

        virtualinvoke $r9.<java.util.concurrent.CompletableFuture: boolean complete(java.lang.Object)>($r6);

     label10:
        return;

        catch android.content.pm.PackageManager$NameNotFoundException from label04 to label05 with label06;
        catch java.io.IOException from label04 to label05 with label06;
    }

    public static void <clinit>()
    {
        <com.android.server.storage.AppCollector$BackgroundHandler: int MSG_START_LOADING_SIZES> = 0;

        return;
    }
}
