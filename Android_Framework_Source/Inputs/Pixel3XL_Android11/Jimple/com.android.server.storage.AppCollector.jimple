public class com.android.server.storage.AppCollector extends java.lang.Object
{
    private static java.lang.String TAG;
    private final com.android.server.storage.AppCollector$BackgroundHandler mBackgroundHandler;
    private java.util.concurrent.CompletableFuture mStats;

    static void <clinit>()
    {
        <com.android.server.storage.AppCollector: java.lang.String TAG> = "AppCollector";

        return;
    }

    public void <init>(android.content.Context, android.os.storage.VolumeInfo)
    {
        com.android.server.storage.AppCollector r0;
        android.content.Context r1;
        android.os.storage.VolumeInfo r2;
        com.android.server.storage.AppCollector$BackgroundHandler $r4;
        com.android.internal.os.BackgroundThread $r5;
        android.os.Looper $r6;
        android.content.pm.PackageManager $r7;
        java.lang.Object $r8, $r10;
        android.os.UserManager $r9;
        android.app.usage.StorageStatsManager $r11;

        r0 := @this: com.android.server.storage.AppCollector;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.storage.VolumeInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r4 = new com.android.server.storage.AppCollector$BackgroundHandler;

        $r5 = staticinvoke <com.android.internal.os.BackgroundThread: com.android.internal.os.BackgroundThread get()>();

        $r6 = virtualinvoke $r5.<com.android.internal.os.BackgroundThread: android.os.Looper getLooper()>();

        $r7 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r8 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("user");

        $r9 = (android.os.UserManager) $r8;

        $r10 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("storagestats");

        $r11 = (android.app.usage.StorageStatsManager) $r10;

        specialinvoke $r4.<com.android.server.storage.AppCollector$BackgroundHandler: void <init>(com.android.server.storage.AppCollector,android.os.Looper,android.os.storage.VolumeInfo,android.content.pm.PackageManager,android.os.UserManager,android.app.usage.StorageStatsManager)>(r0, $r6, r2, $r7, $r9, $r11);

        r0.<com.android.server.storage.AppCollector: com.android.server.storage.AppCollector$BackgroundHandler mBackgroundHandler> = $r4;

        return;
    }

    static java.lang.String access$000()
    {
        java.lang.String $r0;

        $r0 = <com.android.server.storage.AppCollector: java.lang.String TAG>;

        return $r0;
    }

    static java.util.concurrent.CompletableFuture access$100(com.android.server.storage.AppCollector)
    {
        com.android.server.storage.AppCollector r0;
        java.util.concurrent.CompletableFuture $r1;

        r0 := @parameter0: com.android.server.storage.AppCollector;

        $r1 = r0.<com.android.server.storage.AppCollector: java.util.concurrent.CompletableFuture mStats>;

        return $r1;
    }

    public java.util.List getPackageStats(long)
    {
        com.android.server.storage.AppCollector r0;
        long l0;
        java.util.List r1, r13;
        java.util.concurrent.CompletableFuture $r2, $r4, r12;
        java.util.concurrent.TimeUnit $r3;
        java.lang.Object $r5;
        com.android.server.storage.AppCollector$BackgroundHandler $r6;
        java.lang.Throwable $r7, $r9, $r11;
        java.lang.String $r8, $r10;

        r0 := @this: com.android.server.storage.AppCollector;

        l0 := @parameter0: long;

        entermonitor r0;

     label01:
        $r2 = r0.<com.android.server.storage.AppCollector: java.util.concurrent.CompletableFuture mStats>;

        if $r2 != null goto label02;

        r12 = new java.util.concurrent.CompletableFuture;

        specialinvoke r12.<java.util.concurrent.CompletableFuture: void <init>()>();

        r0.<com.android.server.storage.AppCollector: java.util.concurrent.CompletableFuture mStats> = r12;

        $r6 = r0.<com.android.server.storage.AppCollector: com.android.server.storage.AppCollector$BackgroundHandler mBackgroundHandler>;

        virtualinvoke $r6.<com.android.server.storage.AppCollector$BackgroundHandler: boolean sendEmptyMessage(int)>(0);

     label02:
        exitmonitor r0;

     label03:
        r13 = null;

     label04:
        $r4 = r0.<com.android.server.storage.AppCollector: java.util.concurrent.CompletableFuture mStats>;

        $r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $r5 = virtualinvoke $r4.<java.util.concurrent.CompletableFuture: java.lang.Object get(long,java.util.concurrent.TimeUnit)>(l0, $r3);

        r1 = (java.util.List) $r5;

     label05:
        r13 = r1;

     label06:
        goto label09;

     label07:
        $r9 := @caughtexception;

        $r10 = <com.android.server.storage.AppCollector: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r10, "AppCollector timed out");

        r13 = null;

        goto label09;

     label08:
        $r7 := @caughtexception;

        $r8 = <com.android.server.storage.AppCollector: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r8, "An exception occurred while getting app storage", $r7);

        goto label06;

     label09:
        return r13;

     label10:
        $r11 := @caughtexception;

     label11:
        exitmonitor r0;

     label12:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.InterruptedException from label04 to label05 with label08;
        catch java.util.concurrent.ExecutionException from label04 to label05 with label08;
        catch java.util.concurrent.TimeoutException from label04 to label05 with label07;
        catch java.lang.Throwable from label11 to label12 with label10;
    }
}
