public class com.android.server.storage.CacheQuotaStrategy extends java.lang.Object implements android.os.RemoteCallback$OnResultListener
{
    private static final java.lang.String ATTR_PREVIOUS_BYTES;
    private static final java.lang.String ATTR_QUOTA_IN_BYTES;
    private static final java.lang.String ATTR_UID;
    private static final java.lang.String ATTR_UUID;
    private static final java.lang.String CACHE_INFO_TAG;
    private static final java.lang.String TAG;
    private static final java.lang.String TAG_QUOTA;
    private final android.content.Context mContext;
    private final com.android.server.pm.Installer mInstaller;
    private final java.lang.Object mLock;
    private android.util.AtomicFile mPreviousValuesFile;
    private final android.util.ArrayMap mQuotaMap;
    private android.app.usage.ICacheQuotaService mRemoteService;
    private android.content.ServiceConnection mServiceConnection;
    private final android.app.usage.UsageStatsManagerInternal mUsageStats;

    public void <init>(android.content.Context, android.app.usage.UsageStatsManagerInternal, com.android.server.pm.Installer, android.util.ArrayMap)
    {
        com.android.server.storage.CacheQuotaStrategy r0;
        android.content.Context r1, $r7;
        android.app.usage.UsageStatsManagerInternal r2, $r9;
        com.android.server.pm.Installer r3, $r11;
        android.util.ArrayMap r4, $r13;
        java.lang.Object $r5;
        android.util.AtomicFile $r14;
        java.io.File $r15, $r16, $r17;

        r0 := @this: com.android.server.storage.CacheQuotaStrategy;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.app.usage.UsageStatsManagerInternal;

        r3 := @parameter2: com.android.server.pm.Installer;

        r4 := @parameter3: android.util.ArrayMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        r0.<com.android.server.storage.CacheQuotaStrategy: java.lang.Object mLock> = $r5;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r7 = (android.content.Context) r1;

        r0.<com.android.server.storage.CacheQuotaStrategy: android.content.Context mContext> = $r7;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r9 = (android.app.usage.UsageStatsManagerInternal) r2;

        r0.<com.android.server.storage.CacheQuotaStrategy: android.app.usage.UsageStatsManagerInternal mUsageStats> = $r9;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r3);

        $r11 = (com.android.server.pm.Installer) r3;

        r0.<com.android.server.storage.CacheQuotaStrategy: com.android.server.pm.Installer mInstaller> = $r11;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r4);

        $r13 = (android.util.ArrayMap) r4;

        r0.<com.android.server.storage.CacheQuotaStrategy: android.util.ArrayMap mQuotaMap> = $r13;

        $r14 = new android.util.AtomicFile;

        $r15 = new java.io.File;

        $r16 = new java.io.File;

        $r17 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        specialinvoke $r16.<java.io.File: void <init>(java.io.File,java.lang.String)>($r17, "system");

        specialinvoke $r15.<java.io.File: void <init>(java.io.File,java.lang.String)>($r16, "cachequota.xml");

        specialinvoke $r14.<android.util.AtomicFile: void <init>(java.io.File)>($r15);

        r0.<com.android.server.storage.CacheQuotaStrategy: android.util.AtomicFile mPreviousValuesFile> = $r14;

        return;
    }

    static java.lang.Object access$000(com.android.server.storage.CacheQuotaStrategy)
    {
        com.android.server.storage.CacheQuotaStrategy r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.storage.CacheQuotaStrategy;

        $r1 = r0.<com.android.server.storage.CacheQuotaStrategy: java.lang.Object mLock>;

        return $r1;
    }

    static android.app.usage.ICacheQuotaService access$100(com.android.server.storage.CacheQuotaStrategy)
    {
        com.android.server.storage.CacheQuotaStrategy r0;
        android.app.usage.ICacheQuotaService $r1;

        r0 := @parameter0: com.android.server.storage.CacheQuotaStrategy;

        $r1 = r0.<com.android.server.storage.CacheQuotaStrategy: android.app.usage.ICacheQuotaService mRemoteService>;

        return $r1;
    }

    static android.app.usage.ICacheQuotaService access$102(com.android.server.storage.CacheQuotaStrategy, android.app.usage.ICacheQuotaService)
    {
        com.android.server.storage.CacheQuotaStrategy r0;
        android.app.usage.ICacheQuotaService r1;

        r0 := @parameter0: com.android.server.storage.CacheQuotaStrategy;

        r1 := @parameter1: android.app.usage.ICacheQuotaService;

        r0.<com.android.server.storage.CacheQuotaStrategy: android.app.usage.ICacheQuotaService mRemoteService> = r1;

        return r1;
    }

    static java.util.List access$200(com.android.server.storage.CacheQuotaStrategy)
    {
        com.android.server.storage.CacheQuotaStrategy r0;
        java.util.List $r1;

        r0 := @parameter0: com.android.server.storage.CacheQuotaStrategy;

        $r1 = specialinvoke r0.<com.android.server.storage.CacheQuotaStrategy: java.util.List getUnfulfilledRequests()>();

        return $r1;
    }

    private void createServiceConnection()
    {
        com.android.server.storage.CacheQuotaStrategy r0;
        android.content.ServiceConnection $r1;
        com.android.server.storage.CacheQuotaStrategy$1 $r2;

        r0 := @this: com.android.server.storage.CacheQuotaStrategy;

        $r1 = r0.<com.android.server.storage.CacheQuotaStrategy: android.content.ServiceConnection mServiceConnection>;

        if $r1 == null goto label1;

        return;

     label1:
        $r2 = new com.android.server.storage.CacheQuotaStrategy$1;

        specialinvoke $r2.<com.android.server.storage.CacheQuotaStrategy$1: void <init>(com.android.server.storage.CacheQuotaStrategy)>(r0);

        r0.<com.android.server.storage.CacheQuotaStrategy: android.content.ServiceConnection mServiceConnection> = $r2;

        return;
    }

    private void disconnectService()
    {
        com.android.server.storage.CacheQuotaStrategy r0;
        android.content.ServiceConnection r1;
        android.content.Context $r2;

        r0 := @this: com.android.server.storage.CacheQuotaStrategy;

        r1 = r0.<com.android.server.storage.CacheQuotaStrategy: android.content.ServiceConnection mServiceConnection>;

        if r1 == null goto label1;

        $r2 = r0.<com.android.server.storage.CacheQuotaStrategy: android.content.Context mContext>;

        virtualinvoke $r2.<android.content.Context: void unbindService(android.content.ServiceConnection)>(r1);

        r0.<com.android.server.storage.CacheQuotaStrategy: android.content.ServiceConnection mServiceConnection> = null;

     label1:
        return;
    }

    static android.app.usage.CacheQuotaHint getRequestFromXml(org.xmlpull.v1.XmlPullParser)
    {
        java.lang.String r0, $r1, $r2;
        int i0;
        long l1;
        android.app.usage.CacheQuotaHint$Builder $r3, $r4, $r5, r8;
        java.lang.Throwable $r6;
        org.xmlpull.v1.XmlPullParser r7;
        android.app.usage.CacheQuotaHint r9;

        r7 := @parameter0: org.xmlpull.v1.XmlPullParser;

     label1:
        r0 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "uuid");

        $r1 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "uid");

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        $r2 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "bytes");

        l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r2);

        r8 = new android.app.usage.CacheQuotaHint$Builder;

        specialinvoke r8.<android.app.usage.CacheQuotaHint$Builder: void <init>()>();

        $r3 = virtualinvoke r8.<android.app.usage.CacheQuotaHint$Builder: android.app.usage.CacheQuotaHint$Builder setVolumeUuid(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<android.app.usage.CacheQuotaHint$Builder: android.app.usage.CacheQuotaHint$Builder setUid(int)>(i0);

        $r5 = virtualinvoke $r4.<android.app.usage.CacheQuotaHint$Builder: android.app.usage.CacheQuotaHint$Builder setQuota(long)>(l1);

        r9 = virtualinvoke $r5.<android.app.usage.CacheQuotaHint$Builder: android.app.usage.CacheQuotaHint build()>();

     label2:
        return r9;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("CacheQuotaStrategy", "Invalid cache quota request, skipping.");

        return null;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private android.content.ComponentName getServiceComponentName()
    {
        com.android.server.storage.CacheQuotaStrategy r0;
        java.lang.String r1, $r10, $r11;
        android.content.Context $r2, $r6;
        android.content.pm.PackageManager $r3, $r7;
        android.content.Intent $r4;
        android.content.pm.ServiceInfo $r8, r14;
        android.content.ComponentName $r9;
        android.content.pm.ResolveInfo r13;

        r0 := @this: com.android.server.storage.CacheQuotaStrategy;

        $r2 = r0.<com.android.server.storage.CacheQuotaStrategy: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r1 = virtualinvoke $r3.<android.content.pm.PackageManager: java.lang.String getServicesSystemSharedLibraryPackageName()>();

        if r1 != null goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("CacheQuotaStrategy", "could not access the cache quota service: no package!");

        return null;

     label1:
        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("android.app.usage.CacheQuotaService");

        virtualinvoke $r4.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r1);

        $r6 = r0.<com.android.server.storage.CacheQuotaStrategy: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r13 = virtualinvoke $r7.<android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveService(android.content.Intent,int)>($r4, 132);

        if r13 == null goto label3;

        $r8 = r13.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        if $r8 != null goto label2;

        goto label3;

     label2:
        r14 = r13.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r9 = new android.content.ComponentName;

        $r11 = r14.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r10 = r14.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke $r9.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r11, $r10);

        return $r9;

     label3:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("CacheQuotaStrategy", "No valid components found.");

        return null;
    }

    private java.util.List getUnfulfilledRequests()
    {
        com.android.server.storage.CacheQuotaStrategy r0;
        long l0, $l2;
        java.util.List r2, r25;
        int i1, $i3, i4, i5, i6;
        android.content.pm.UserInfo r3;
        java.util.Iterator r4;
        android.app.usage.UsageStats r5;
        android.content.pm.ApplicationInfo r6;
        java.util.ArrayList $r7;
        android.content.Context $r8, $r11;
        java.lang.Object $r9, $r12, $r13;
        android.os.UserManager $r10;
        java.lang.String $r14, r26;
        android.app.usage.CacheQuotaHint$Builder $r15, $r16, $r17, $r18, r28;
        android.app.usage.CacheQuotaHint $r19;
        android.content.pm.PackageManager$NameNotFoundException $r20, $r21;
        android.content.pm.PackageManager r23;
        android.app.usage.UsageStatsManagerInternal r24;
        boolean $z1;

        r0 := @this: com.android.server.storage.CacheQuotaStrategy;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        $r8 = r0.<com.android.server.storage.CacheQuotaStrategy: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/os/UserManager;");

        $r10 = (android.os.UserManager) $r9;

        r2 = virtualinvoke $r10.<android.os.UserManager: java.util.List getUsers()>();

        i1 = interfaceinvoke r2.<java.util.List: int size()>();

        $r11 = r0.<com.android.server.storage.CacheQuotaStrategy: android.content.Context mContext>;

        r23 = virtualinvoke $r11.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        i4 = 0;

     label01:
        if i4 >= i1 goto label11;

        $r12 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i4);

        r3 = (android.content.pm.UserInfo) $r12;

        r24 = r0.<com.android.server.storage.CacheQuotaStrategy: android.app.usage.UsageStatsManagerInternal mUsageStats>;

        i5 = r3.<android.content.pm.UserInfo: int id>;

        $l2 = l0 - 31449600000L;

        r25 = virtualinvoke r24.<android.app.usage.UsageStatsManagerInternal: java.util.List queryUsageStatsForUser(int,int,long,long,boolean)>(i5, 4, $l2, l0, 0);

        if r25 != null goto label02;

        goto label10;

     label02:
        r4 = interfaceinvoke r25.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.app.usage.UsageStats) $r13;

        r26 = virtualinvoke r5.<android.app.usage.UsageStats: java.lang.String getPackageName()>();

     label04:
        i6 = r3.<android.content.pm.UserInfo: int id>;

     label05:
        r6 = virtualinvoke r23.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfoAsUser(java.lang.String,int,int)>(r26, 0, i6);

        r28 = new android.app.usage.CacheQuotaHint$Builder;

        specialinvoke r28.<android.app.usage.CacheQuotaHint$Builder: void <init>()>();

        $r14 = r6.<android.content.pm.ApplicationInfo: java.lang.String volumeUuid>;

        $r15 = virtualinvoke r28.<android.app.usage.CacheQuotaHint$Builder: android.app.usage.CacheQuotaHint$Builder setVolumeUuid(java.lang.String)>($r14);

        $i3 = r6.<android.content.pm.ApplicationInfo: int uid>;

        $r16 = virtualinvoke $r15.<android.app.usage.CacheQuotaHint$Builder: android.app.usage.CacheQuotaHint$Builder setUid(int)>($i3);

        $r17 = virtualinvoke $r16.<android.app.usage.CacheQuotaHint$Builder: android.app.usage.CacheQuotaHint$Builder setUsageStats(android.app.usage.UsageStats)>(r5);

        $r18 = virtualinvoke $r17.<android.app.usage.CacheQuotaHint$Builder: android.app.usage.CacheQuotaHint$Builder setQuota(long)>(-1L);

        $r19 = virtualinvoke $r18.<android.app.usage.CacheQuotaHint$Builder: android.app.usage.CacheQuotaHint build()>();

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r19);

     label06:
        goto label03;

     label07:
        $r20 := @caughtexception;

        goto label09;

     label08:
        $r21 := @caughtexception;

     label09:
        goto label03;

     label10:
        i4 = i4 + 1;

        goto label01;

     label11:
        return $r7;

        catch android.content.pm.PackageManager$NameNotFoundException from label04 to label05 with label08;
        catch android.content.pm.PackageManager$NameNotFoundException from label05 to label06 with label07;
    }

    private void insertIntoQuotaMap(java.lang.String, int, int, long)
    {
        com.android.server.storage.CacheQuotaStrategy r0;
        java.lang.String r1;
        int i0, i1, $i3;
        long l2;
        android.util.SparseLongArray r2, $r5, r8;
        android.util.ArrayMap $r3, $r6;
        java.lang.Object $r4;

        r0 := @this: com.android.server.storage.CacheQuotaStrategy;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        l2 := @parameter3: long;

        $r3 = r0.<com.android.server.storage.CacheQuotaStrategy: android.util.ArrayMap mQuotaMap>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (android.util.SparseLongArray) $r4;

        r8 = r2;

        if r2 != null goto label1;

        $r5 = new android.util.SparseLongArray;

        specialinvoke $r5.<android.util.SparseLongArray: void <init>()>();

        r8 = $r5;

        $r6 = r0.<com.android.server.storage.CacheQuotaStrategy: android.util.ArrayMap mQuotaMap>;

        virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r5);

     label1:
        $i3 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(i0, i1);

        virtualinvoke r8.<android.util.SparseLongArray: void put(int,long)>($i3, l2);

        return;
    }

    private void pushProcessedQuotas(java.util.List)
    {
        com.android.server.storage.CacheQuotaStrategy r0;
        java.util.List r1;
        int i0, i2, $i4, $i5, $i6, $i7, $i8, i10;
        android.app.usage.CacheQuotaHint r2;
        long l1;
        java.lang.Object $r5;
        byte $b3;
        com.android.server.pm.Installer $r6;
        java.lang.String $r7, $r8, $r13;
        com.android.server.pm.Installer$InstallerException $r9;
        java.lang.StringBuilder $r10;

        r0 := @this: com.android.server.storage.CacheQuotaStrategy;

        r1 := @parameter0: java.util.List;

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i10 = 0;

     label1:
        if i10 >= i0 goto label6;

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i10);

        r2 = (android.app.usage.CacheQuotaHint) $r5;

        l1 = virtualinvoke r2.<android.app.usage.CacheQuotaHint: long getQuota()>();

        $b3 = l1 cmp -1L;

        if $b3 != 0 goto label2;

        goto label5;

     label2:
        i2 = virtualinvoke r2.<android.app.usage.CacheQuotaHint: int getUid()>();

        $r6 = r0.<com.android.server.storage.CacheQuotaStrategy: com.android.server.pm.Installer mInstaller>;

        $r7 = virtualinvoke r2.<android.app.usage.CacheQuotaHint: java.lang.String getVolumeUuid()>();

        $i4 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i2);

        $i5 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i2);

        virtualinvoke $r6.<com.android.server.pm.Installer: void setAppQuota(java.lang.String,int,int,long)>($r7, $i4, $i5, l1);

        $r8 = virtualinvoke r2.<android.app.usage.CacheQuotaHint: java.lang.String getVolumeUuid()>();

        $i6 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i2);

        $i7 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i2);

        specialinvoke r0.<com.android.server.storage.CacheQuotaStrategy: void insertIntoQuotaMap(java.lang.String,int,int,long)>($r8, $i6, $i7, l1);

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to set cache quota for ");

        $i8 = virtualinvoke r2.<android.app.usage.CacheQuotaHint: int getUid()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("CacheQuotaStrategy", $r13, $r9);

     label5:
        i10 = i10 + 1;

        goto label1;

     label6:
        specialinvoke r0.<com.android.server.storage.CacheQuotaStrategy: void disconnectService()>();

        return;

        catch com.android.server.pm.Installer$InstallerException from label2 to label3 with label4;
    }

    protected static android.util.Pair readFromXml(java.io.InputStream) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        long l0;
        android.app.usage.CacheQuotaHint r1;
        java.nio.charset.Charset $r2;
        java.lang.String $r3, $r4, $r5, $r8, $r11, $r12;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r6, $r14;
        java.util.ArrayList $r7;
        android.util.Pair $r9;
        java.lang.Long $r10;
        java.lang.Throwable $r13;
        java.io.InputStream r15;
        int i2, i3, i4;

        r15 := @parameter0: java.io.InputStream;

        r0 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        $r2 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r3 = virtualinvoke $r2.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r15, $r3);

        i2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label01:
        if i2 == 2 goto label02;

        if i2 == 1 goto label02;

        i2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label01;

     label02:
        if i2 != 1 goto label03;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("CacheQuotaStrategy", "No quotas found in quota file.");

        return null;

     label03:
        $r4 = "cache-info";

        $r5 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label11;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

     label04:
        $r8 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "previousBytes");

        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r8);

     label05:
        i3 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

     label06:
        if i3 != 2 goto label08;

        $r11 = "quota";

        $r12 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z1 == 0 goto label08;

        r1 = staticinvoke <com.android.server.storage.CacheQuotaStrategy: android.app.usage.CacheQuotaHint getRequestFromXml(org.xmlpull.v1.XmlPullParser)>(r0);

        if r1 != null goto label07;

        i4 = i3;

        goto label09;

     label07:
        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r1);

     label08:
        i4 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

     label09:
        i3 = i4;

        if i4 != 1 goto label06;

        $r9 = new android.util.Pair;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        specialinvoke $r9.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r10, $r7);

        return $r9;

     label10:
        $r13 := @caughtexception;

        $r14 = new java.lang.IllegalStateException;

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Previous bytes formatted incorrectly; aborting quota read.");

        throw $r14;

     label11:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Invalid starting tag.");

        throw $r6;

        catch java.lang.NumberFormatException from label04 to label05 with label10;
    }

    static void saveToXml(org.xmlpull.v1.XmlSerializer, java.util.List, long) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer r0;
        java.util.List r1;
        long l0, $l3;
        int i1, $i2, i4;
        android.app.usage.CacheQuotaHint r2;
        java.lang.Boolean $r3;
        java.lang.String $r5, $r10, $r11, $r13, $r16;
        java.lang.Object $r8;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter1: java.util.List;

        l0 := @parameter2: long;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r3);

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "cache-info");

        i1 = interfaceinvoke r1.<java.util.List: int size()>();

        $r5 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "previousBytes", $r5);

        i4 = 0;

     label1:
        if i4 >= i1 goto label3;

        $r8 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i4);

        r2 = (android.app.usage.CacheQuotaHint) $r8;

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "quota");

        $r10 = virtualinvoke r2.<android.app.usage.CacheQuotaHint: java.lang.String getVolumeUuid()>();

        if $r10 == null goto label2;

        $r16 = virtualinvoke r2.<android.app.usage.CacheQuotaHint: java.lang.String getVolumeUuid()>();

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "uuid", $r16);

     label2:
        $i2 = virtualinvoke r2.<android.app.usage.CacheQuotaHint: int getUid()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "uid", $r11);

        $l3 = virtualinvoke r2.<android.app.usage.CacheQuotaHint: long getQuota()>();

        $r13 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l3);

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "bytes", $r13);

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "quota");

        i4 = i4 + 1;

        goto label1;

     label3:
        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "cache-info");

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        return;
    }

    private void writeXmlToFile(java.util.List)
    {
        com.android.server.storage.CacheQuotaStrategy r0;
        com.android.internal.util.FastXmlSerializer r1;
        android.util.AtomicFile $r2, $r5, $r7;
        java.nio.charset.Charset $r3;
        java.lang.String $r4;
        java.lang.Exception $r6;
        java.util.List r8;
        java.io.FileOutputStream r9, r10;

        r0 := @this: com.android.server.storage.CacheQuotaStrategy;

        r8 := @parameter0: java.util.List;

        r9 = null;

     label01:
        r1 = new com.android.internal.util.FastXmlSerializer;

     label02:
        r9 = null;

     label03:
        specialinvoke r1.<com.android.internal.util.FastXmlSerializer: void <init>()>();

     label04:
        r9 = null;

     label05:
        $r2 = r0.<com.android.server.storage.CacheQuotaStrategy: android.util.AtomicFile mPreviousValuesFile>;

        r10 = virtualinvoke $r2.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

     label06:
        r9 = r10;

     label07:
        $r3 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r4 = virtualinvoke $r3.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r10, $r4);

     label08:
        r9 = r10;

     label09:
        staticinvoke <com.android.server.storage.CacheQuotaStrategy: void saveToXml(org.xmlpull.v1.XmlSerializer,java.util.List,long)>(r1, r8, 0L);

     label10:
        r9 = r10;

     label11:
        $r5 = r0.<com.android.server.storage.CacheQuotaStrategy: android.util.AtomicFile mPreviousValuesFile>;

        virtualinvoke $r5.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r10);

     label12:
        goto label14;

     label13:
        $r6 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CacheQuotaStrategy", "An error occurred while writing the cache quota file.", $r6);

        $r7 = r0.<com.android.server.storage.CacheQuotaStrategy: android.util.AtomicFile mPreviousValuesFile>;

        virtualinvoke $r7.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r9);

     label14:
        return;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label03 to label04 with label13;
        catch java.lang.Exception from label05 to label06 with label13;
        catch java.lang.Exception from label07 to label08 with label13;
        catch java.lang.Exception from label09 to label10 with label13;
        catch java.lang.Exception from label11 to label12 with label13;
    }

    public void onResult(android.os.Bundle)
    {
        com.android.server.storage.CacheQuotaStrategy r0;
        android.os.Bundle r1;
        java.util.ArrayList r2;

        r0 := @this: com.android.server.storage.CacheQuotaStrategy;

        r1 := @parameter0: android.os.Bundle;

        r2 = virtualinvoke r1.<android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>("requests");

        specialinvoke r0.<com.android.server.storage.CacheQuotaStrategy: void pushProcessedQuotas(java.util.List)>(r2);

        specialinvoke r0.<com.android.server.storage.CacheQuotaStrategy: void writeXmlToFile(java.util.List)>(r2);

        return;
    }

    public void recalculateQuotas()
    {
        com.android.server.storage.CacheQuotaStrategy r0;
        android.content.ComponentName r1;
        android.content.Intent $r3;
        android.os.UserHandle $r5;
        android.content.ServiceConnection $r6;
        android.content.Context $r7;

        r0 := @this: com.android.server.storage.CacheQuotaStrategy;

        specialinvoke r0.<com.android.server.storage.CacheQuotaStrategy: void createServiceConnection()>();

        r1 = specialinvoke r0.<com.android.server.storage.CacheQuotaStrategy: android.content.ComponentName getServiceComponentName()>();

        if r1 == null goto label1;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>()>();

        virtualinvoke $r3.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r1);

        $r7 = r0.<com.android.server.storage.CacheQuotaStrategy: android.content.Context mContext>;

        $r6 = r0.<com.android.server.storage.CacheQuotaStrategy: android.content.ServiceConnection mServiceConnection>;

        $r5 = <android.os.UserHandle: android.os.UserHandle CURRENT>;

        virtualinvoke $r7.<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>($r3, $r6, 1, $r5);

     label1:
        return;
    }

    public long setupQuotasFromFile() throws java.io.IOException
    {
        com.android.server.storage.CacheQuotaStrategy r0;
        android.util.AtomicFile $r2;
        java.lang.Object $r3, $r5;
        java.util.List $r4;
        java.lang.Long $r6;
        long $l0;
        java.lang.Throwable $r7, $r8, $r10, $r11;
        java.lang.String $r9;
        java.io.FileInputStream r12;
        android.util.Pair r13;
        java.lang.IllegalStateException r18;
        org.xmlpull.v1.XmlPullParserException r19;

        r0 := @this: com.android.server.storage.CacheQuotaStrategy;

     label01:
        $r2 = r0.<com.android.server.storage.CacheQuotaStrategy: android.util.AtomicFile mPreviousValuesFile>;

        r12 = virtualinvoke $r2.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

     label02:
        r13 = staticinvoke <com.android.server.storage.CacheQuotaStrategy: android.util.Pair readFromXml(java.io.InputStream)>(r12);

     label03:
        if r12 == null goto label05;

     label04:
        virtualinvoke r12.<java.io.FileInputStream: void close()>();

     label05:
        if r13 != null goto label06;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("CacheQuotaStrategy", "An error occurred while parsing the cache quota file.");

        return -1L;

     label06:
        $r3 = r13.<android.util.Pair: java.lang.Object second>;

        $r4 = (java.util.List) $r3;

        specialinvoke r0.<com.android.server.storage.CacheQuotaStrategy: void pushProcessedQuotas(java.util.List)>($r4);

        $r5 = r13.<android.util.Pair: java.lang.Object first>;

        $r6 = (java.lang.Long) $r5;

        $l0 = virtualinvoke $r6.<java.lang.Long: long longValue()>();

        return $l0;

     label07:
        $r10 := @caughtexception;

        goto label10;

     label08:
        $r8 := @caughtexception;

     label09:
        r18 = new java.lang.IllegalStateException;

        r19 = (org.xmlpull.v1.XmlPullParserException) $r8;

        $r9 = virtualinvoke r19.<org.xmlpull.v1.XmlPullParserException: java.lang.String getMessage()>();

        specialinvoke r18.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw r18;

     label10:
        if r12 == null goto label15;

     label11:
        virtualinvoke r12.<java.io.FileInputStream: void close()>();

     label12:
        goto label15;

     label13:
        $r11 := @caughtexception;

     label14:
        virtualinvoke $r10.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r11);

     label15:
        throw $r10;

     label16:
        $r7 := @caughtexception;

        return -1L;

        catch java.io.FileNotFoundException from label01 to label02 with label16;
        catch org.xmlpull.v1.XmlPullParserException from label02 to label03 with label08;
        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.io.FileNotFoundException from label04 to label05 with label16;
        catch java.lang.Throwable from label09 to label10 with label07;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.io.FileNotFoundException from label14 to label15 with label16;
        catch java.io.FileNotFoundException from label15 to label16 with label16;
    }

    public static void <clinit>()
    {
        <com.android.server.storage.CacheQuotaStrategy: java.lang.String TAG_QUOTA> = "quota";

        <com.android.server.storage.CacheQuotaStrategy: java.lang.String TAG> = "CacheQuotaStrategy";

        <com.android.server.storage.CacheQuotaStrategy: java.lang.String CACHE_INFO_TAG> = "cache-info";

        <com.android.server.storage.CacheQuotaStrategy: java.lang.String ATTR_UUID> = "uuid";

        <com.android.server.storage.CacheQuotaStrategy: java.lang.String ATTR_UID> = "uid";

        <com.android.server.storage.CacheQuotaStrategy: java.lang.String ATTR_QUOTA_IN_BYTES> = "bytes";

        <com.android.server.storage.CacheQuotaStrategy: java.lang.String ATTR_PREVIOUS_BYTES> = "previousBytes";

        return;
    }
}
