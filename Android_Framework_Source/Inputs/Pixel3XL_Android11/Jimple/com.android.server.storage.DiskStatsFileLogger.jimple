public class com.android.server.storage.DiskStatsFileLogger extends java.lang.Object
{
    public static final java.lang.String APP_CACHES_KEY;
    public static final java.lang.String APP_CACHE_AGG_KEY;
    public static final java.lang.String APP_DATA_KEY;
    public static final java.lang.String APP_DATA_SIZE_AGG_KEY;
    public static final java.lang.String APP_SIZES_KEY;
    public static final java.lang.String APP_SIZE_AGG_KEY;
    public static final java.lang.String AUDIO_KEY;
    public static final java.lang.String DOWNLOADS_KEY;
    public static final java.lang.String LAST_QUERY_TIMESTAMP_KEY;
    public static final java.lang.String MISC_KEY;
    public static final java.lang.String PACKAGE_NAMES_KEY;
    public static final java.lang.String PHOTOS_KEY;
    public static final java.lang.String SYSTEM_KEY;
    private static final java.lang.String TAG;
    public static final java.lang.String VIDEOS_KEY;
    private long mDownloadsSize;
    private java.util.List mPackageStats;
    private com.android.server.storage.FileCollector$MeasurementResult mResult;
    private long mSystemSize;

    public void <init>(com.android.server.storage.FileCollector$MeasurementResult, com.android.server.storage.FileCollector$MeasurementResult, java.util.List, long)
    {
        com.android.server.storage.DiskStatsFileLogger r0;
        com.android.server.storage.FileCollector$MeasurementResult r1, r2;
        java.util.List r3;
        long l0, $l1;

        r0 := @this: com.android.server.storage.DiskStatsFileLogger;

        r1 := @parameter0: com.android.server.storage.FileCollector$MeasurementResult;

        r2 := @parameter1: com.android.server.storage.FileCollector$MeasurementResult;

        r3 := @parameter2: java.util.List;

        l0 := @parameter3: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.storage.DiskStatsFileLogger: com.android.server.storage.FileCollector$MeasurementResult mResult> = r1;

        $l1 = virtualinvoke r2.<com.android.server.storage.FileCollector$MeasurementResult: long totalAccountedSize()>();

        r0.<com.android.server.storage.DiskStatsFileLogger: long mDownloadsSize> = $l1;

        r0.<com.android.server.storage.DiskStatsFileLogger: long mSystemSize> = l0;

        r0.<com.android.server.storage.DiskStatsFileLogger: java.util.List mPackageStats> = r3;

        return;
    }

    private void addAppsToJson(org.json.JSONObject) throws org.json.JSONException
    {
        com.android.server.storage.DiskStatsFileLogger r0;
        org.json.JSONObject r1;
        boolean z0, $z1;
        java.util.Iterator r6;
        android.content.pm.PackageStats r7;
        org.json.JSONArray $r8, $r9, $r10, $r11;
        android.util.ArrayMap $r12;
        java.util.Set $r13;
        java.lang.Object $r21, $r23;
        java.util.Map$Entry $r22;
        java.lang.String $r24;
        long $l0, $l1, $l2, l3, l4, l5, l6, l7, l8;

        r0 := @this: com.android.server.storage.DiskStatsFileLogger;

        r1 := @parameter0: org.json.JSONObject;

        $r8 = new org.json.JSONArray;

        specialinvoke $r8.<org.json.JSONArray: void <init>()>();

        $r9 = new org.json.JSONArray;

        specialinvoke $r9.<org.json.JSONArray: void <init>()>();

        $r10 = new org.json.JSONArray;

        specialinvoke $r10.<org.json.JSONArray: void <init>()>();

        $r11 = new org.json.JSONArray;

        specialinvoke $r11.<org.json.JSONArray: void <init>()>();

        l3 = 0L;

        l4 = 0L;

        l5 = 0L;

        z0 = staticinvoke <android.os.Environment: boolean isExternalStorageEmulated()>();

        $r12 = specialinvoke r0.<com.android.server.storage.DiskStatsFileLogger: android.util.ArrayMap filterOnlyPrimaryUser()>();

        $r13 = virtualinvoke $r12.<android.util.ArrayMap: java.util.Set entrySet()>();

        r6 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r21 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $r22 = (java.util.Map$Entry) $r21;

        $r23 = interfaceinvoke $r22.<java.util.Map$Entry: java.lang.Object getValue()>();

        r7 = (android.content.pm.PackageStats) $r23;

        l6 = r7.<android.content.pm.PackageStats: long codeSize>;

        l7 = r7.<android.content.pm.PackageStats: long dataSize>;

        l8 = r7.<android.content.pm.PackageStats: long cacheSize>;

        if z0 == 0 goto label2;

        $l0 = r7.<android.content.pm.PackageStats: long externalCodeSize>;

        l6 = l6 + $l0;

        $l1 = r7.<android.content.pm.PackageStats: long externalDataSize>;

        l7 = l7 + $l1;

        $l2 = r7.<android.content.pm.PackageStats: long externalCacheSize>;

        l8 = l8 + $l2;

        goto label2;

     label2:
        l4 = l4 + l7;

        l5 = l5 + l8;

        $r24 = r7.<android.content.pm.PackageStats: java.lang.String packageName>;

        virtualinvoke $r8.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r24);

        virtualinvoke $r9.<org.json.JSONArray: org.json.JSONArray put(long)>(l6);

        virtualinvoke $r10.<org.json.JSONArray: org.json.JSONArray put(long)>(l7);

        virtualinvoke $r11.<org.json.JSONArray: org.json.JSONArray put(long)>(l8);

        l3 = l3 + l6;

        goto label1;

     label3:
        virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("packageNames", $r8);

        virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("appSizes", $r9);

        virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("cacheSizes", $r11);

        virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("appDataSizes", $r10);

        virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>("appSize", l3);

        virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>("cacheSize", l5);

        virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>("appDataSize", l4);

        return;
    }

    private android.util.ArrayMap filterOnlyPrimaryUser()
    {
        com.android.server.storage.DiskStatsFileLogger r0;
        java.util.Iterator r2;
        android.content.pm.PackageStats r3, r4, $r10;
        android.util.ArrayMap $r5;
        java.util.List $r6;
        java.lang.Object $r7, $r9;
        int $i0;
        java.lang.String $r8, $r11;
        long $l1, $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l12, $l13, $l14, $l15, $l16, $l17, $l18;
        boolean $z0;

        r0 := @this: com.android.server.storage.DiskStatsFileLogger;

        $r5 = new android.util.ArrayMap;

        specialinvoke $r5.<android.util.ArrayMap: void <init>()>();

        $r6 = r0.<com.android.server.storage.DiskStatsFileLogger: java.util.List mPackageStats>;

        r2 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.content.pm.PackageStats) $r7;

        $i0 = r3.<android.content.pm.PackageStats: int userHandle>;

        if $i0 == 0 goto label2;

        goto label1;

     label2:
        $r8 = r3.<android.content.pm.PackageStats: java.lang.String packageName>;

        $r9 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r8);

        r4 = (android.content.pm.PackageStats) $r9;

        if r4 == null goto label3;

        $l2 = r4.<android.content.pm.PackageStats: long cacheSize>;

        $l1 = r3.<android.content.pm.PackageStats: long cacheSize>;

        $l3 = $l2 + $l1;

        r4.<android.content.pm.PackageStats: long cacheSize> = $l3;

        $l5 = r4.<android.content.pm.PackageStats: long codeSize>;

        $l4 = r3.<android.content.pm.PackageStats: long codeSize>;

        $l6 = $l5 + $l4;

        r4.<android.content.pm.PackageStats: long codeSize> = $l6;

        $l8 = r4.<android.content.pm.PackageStats: long dataSize>;

        $l7 = r3.<android.content.pm.PackageStats: long dataSize>;

        $l9 = $l8 + $l7;

        r4.<android.content.pm.PackageStats: long dataSize> = $l9;

        $l11 = r4.<android.content.pm.PackageStats: long externalCacheSize>;

        $l10 = r3.<android.content.pm.PackageStats: long externalCacheSize>;

        $l12 = $l11 + $l10;

        r4.<android.content.pm.PackageStats: long externalCacheSize> = $l12;

        $l14 = r4.<android.content.pm.PackageStats: long externalCodeSize>;

        $l13 = r3.<android.content.pm.PackageStats: long externalCodeSize>;

        $l15 = $l14 + $l13;

        r4.<android.content.pm.PackageStats: long externalCodeSize> = $l15;

        $l17 = r4.<android.content.pm.PackageStats: long externalDataSize>;

        $l16 = r3.<android.content.pm.PackageStats: long externalDataSize>;

        $l18 = $l17 + $l16;

        r4.<android.content.pm.PackageStats: long externalDataSize> = $l18;

        goto label4;

     label3:
        $r11 = r3.<android.content.pm.PackageStats: java.lang.String packageName>;

        $r10 = new android.content.pm.PackageStats;

        specialinvoke $r10.<android.content.pm.PackageStats: void <init>(android.content.pm.PackageStats)>(r3);

        virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r10);

     label4:
        goto label1;

     label5:
        return $r5;
    }

    private org.json.JSONObject getJsonRepresentation()
    {
        com.android.server.storage.DiskStatsFileLogger r0;
        long $l0, $l1, $l2, $l3, $l4, $l5, $l6;
        com.android.server.storage.FileCollector$MeasurementResult $r3, $r5, $r7, $r11;
        java.lang.Throwable $r13;
        java.lang.String $r14;
        org.json.JSONObject r17;
        org.json.JSONException r18;

        r0 := @this: com.android.server.storage.DiskStatsFileLogger;

        r17 = new org.json.JSONObject;

        specialinvoke r17.<org.json.JSONObject: void <init>()>();

     label1:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke r17.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>("queryTime", $l0);

        $r3 = r0.<com.android.server.storage.DiskStatsFileLogger: com.android.server.storage.FileCollector$MeasurementResult mResult>;

        $l1 = $r3.<com.android.server.storage.FileCollector$MeasurementResult: long imagesSize>;

        virtualinvoke r17.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>("photosSize", $l1);

        $r5 = r0.<com.android.server.storage.DiskStatsFileLogger: com.android.server.storage.FileCollector$MeasurementResult mResult>;

        $l2 = $r5.<com.android.server.storage.FileCollector$MeasurementResult: long videosSize>;

        virtualinvoke r17.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>("videosSize", $l2);

        $r7 = r0.<com.android.server.storage.DiskStatsFileLogger: com.android.server.storage.FileCollector$MeasurementResult mResult>;

        $l3 = $r7.<com.android.server.storage.FileCollector$MeasurementResult: long audioSize>;

        virtualinvoke r17.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>("audioSize", $l3);

        $l4 = r0.<com.android.server.storage.DiskStatsFileLogger: long mDownloadsSize>;

        virtualinvoke r17.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>("downloadsSize", $l4);

        $l5 = r0.<com.android.server.storage.DiskStatsFileLogger: long mSystemSize>;

        virtualinvoke r17.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>("systemSize", $l5);

        $r11 = r0.<com.android.server.storage.DiskStatsFileLogger: com.android.server.storage.FileCollector$MeasurementResult mResult>;

        $l6 = $r11.<com.android.server.storage.FileCollector$MeasurementResult: long miscSize>;

        virtualinvoke r17.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>("otherSize", $l6);

        specialinvoke r0.<com.android.server.storage.DiskStatsFileLogger: void addAppsToJson(org.json.JSONObject)>(r17);

     label2:
        return r17;

     label3:
        $r13 := @caughtexception;

        r18 = (org.json.JSONException) $r13;

        $r14 = virtualinvoke r18.<org.json.JSONException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DiskStatsLogger", $r14);

        return null;

        catch org.json.JSONException from label1 to label2 with label3;
    }

    public void dumpToFile(java.io.File) throws java.io.FileNotFoundException
    {
        com.android.server.storage.DiskStatsFileLogger r0;
        java.io.PrintWriter $r2;
        java.io.File r3;
        org.json.JSONObject r4;

        r0 := @this: com.android.server.storage.DiskStatsFileLogger;

        r3 := @parameter0: java.io.File;

        $r2 = new java.io.PrintWriter;

        specialinvoke $r2.<java.io.PrintWriter: void <init>(java.io.File)>(r3);

        r4 = specialinvoke r0.<com.android.server.storage.DiskStatsFileLogger: org.json.JSONObject getJsonRepresentation()>();

        if r4 == null goto label1;

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.Object)>(r4);

     label1:
        virtualinvoke $r2.<java.io.PrintWriter: void close()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.storage.DiskStatsFileLogger: java.lang.String VIDEOS_KEY> = "videosSize";

        <com.android.server.storage.DiskStatsFileLogger: java.lang.String TAG> = "DiskStatsLogger";

        <com.android.server.storage.DiskStatsFileLogger: java.lang.String SYSTEM_KEY> = "systemSize";

        <com.android.server.storage.DiskStatsFileLogger: java.lang.String PHOTOS_KEY> = "photosSize";

        <com.android.server.storage.DiskStatsFileLogger: java.lang.String PACKAGE_NAMES_KEY> = "packageNames";

        <com.android.server.storage.DiskStatsFileLogger: java.lang.String MISC_KEY> = "otherSize";

        <com.android.server.storage.DiskStatsFileLogger: java.lang.String LAST_QUERY_TIMESTAMP_KEY> = "queryTime";

        <com.android.server.storage.DiskStatsFileLogger: java.lang.String DOWNLOADS_KEY> = "downloadsSize";

        <com.android.server.storage.DiskStatsFileLogger: java.lang.String AUDIO_KEY> = "audioSize";

        <com.android.server.storage.DiskStatsFileLogger: java.lang.String APP_SIZE_AGG_KEY> = "appSize";

        <com.android.server.storage.DiskStatsFileLogger: java.lang.String APP_SIZES_KEY> = "appSizes";

        <com.android.server.storage.DiskStatsFileLogger: java.lang.String APP_DATA_SIZE_AGG_KEY> = "appDataSize";

        <com.android.server.storage.DiskStatsFileLogger: java.lang.String APP_DATA_KEY> = "appDataSizes";

        <com.android.server.storage.DiskStatsFileLogger: java.lang.String APP_CACHE_AGG_KEY> = "cacheSize";

        <com.android.server.storage.DiskStatsFileLogger: java.lang.String APP_CACHES_KEY> = "cacheSizes";

        return;
    }
}
