public final class com.android.server.storage.StorageSessionController extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final android.util.SparseArray mConnections;
    private final android.content.Context mContext;
    private volatile int mExternalStorageServiceAppId;
    private volatile android.content.ComponentName mExternalStorageServiceComponent;
    private volatile java.lang.String mExternalStorageServicePackageName;
    private final boolean mIsFuseEnabled;
    private volatile boolean mIsResetting;
    private final java.lang.Object mLock;

    public void <init>(android.content.Context, boolean)
    {
        com.android.server.storage.StorageSessionController r0;
        android.content.Context r1, $r5;
        boolean z0;
        java.lang.Object $r2;
        android.util.SparseArray $r3;

        r0 := @this: com.android.server.storage.StorageSessionController;

        r1 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.server.storage.StorageSessionController: java.lang.Object mLock> = $r2;

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.storage.StorageSessionController: android.util.SparseArray mConnections> = $r3;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r5 = (android.content.Context) r1;

        r0.<com.android.server.storage.StorageSessionController: android.content.Context mContext> = $r5;

        r0.<com.android.server.storage.StorageSessionController: boolean mIsFuseEnabled> = z0;

        return;
    }

    private void initExternalStorageServiceComponent() throws com.android.server.storage.StorageSessionController$ExternalStorageServiceException
    {
        com.android.server.storage.StorageSessionController r0;
        android.content.Context $r1, $r10;
        android.content.pm.PackageManager $r2, $r11;
        com.android.server.storage.StorageSessionController$ExternalStorageServiceException $r3, $r12, $r24;
        android.content.pm.ApplicationInfo $r4, $r6;
        java.lang.String $r5, $r8, $r15, $r16, $r17, $r18, $r20, $r25;
        int $i1, $i2;
        android.content.Intent $r7;
        android.content.pm.ServiceInfo $r13, r29;
        android.content.ComponentName $r14;
        boolean $z0;
        java.lang.StringBuilder $r19;
        android.content.pm.ProviderInfo r26;
        android.content.pm.ResolveInfo r28;

        r0 := @this: com.android.server.storage.StorageSessionController;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("StorageSessionController", "Initialialising...");

        $r1 = r0.<com.android.server.storage.StorageSessionController: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r26 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int)>("media", 1835008);

        if r26 == null goto label3;

        $r4 = r26.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r5 = $r4.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        r0.<com.android.server.storage.StorageSessionController: java.lang.String mExternalStorageServicePackageName> = $r5;

        $r6 = r26.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = $r6.<android.content.pm.ApplicationInfo: int uid>;

        $i2 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i1);

        r0.<com.android.server.storage.StorageSessionController: int mExternalStorageServiceAppId> = $i2;

        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>(java.lang.String)>("android.service.storage.ExternalStorageService");

        $r8 = r0.<com.android.server.storage.StorageSessionController: java.lang.String mExternalStorageServicePackageName>;

        virtualinvoke $r7.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r8);

        $r10 = r0.<com.android.server.storage.StorageSessionController: android.content.Context mContext>;

        $r11 = virtualinvoke $r10.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r28 = virtualinvoke $r11.<android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveService(android.content.Intent,int)>($r7, 132);

        if r28 == null goto label2;

        $r13 = r28.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        if $r13 == null goto label2;

        r29 = r28.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r14 = new android.content.ComponentName;

        $r16 = r29.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r15 = r29.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke $r14.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r16, $r15);

        $r18 = "android.permission.BIND_EXTERNAL_STORAGE_SERVICE";

        $r17 = r29.<android.content.pm.ServiceInfo: java.lang.String permission>;

        $z0 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z0 == 0 goto label1;

        r0.<com.android.server.storage.StorageSessionController: android.content.ComponentName mExternalStorageServiceComponent> = $r14;

        return;

     label1:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r14.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not require permission ");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.BIND_EXTERNAL_STORAGE_SERVICE");

        $r24 = new com.android.server.storage.StorageSessionController$ExternalStorageServiceException;

        $r25 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<com.android.server.storage.StorageSessionController$ExternalStorageServiceException: void <init>(java.lang.String)>($r25);

        throw $r24;

     label2:
        $r12 = new com.android.server.storage.StorageSessionController$ExternalStorageServiceException;

        specialinvoke $r12.<com.android.server.storage.StorageSessionController$ExternalStorageServiceException: void <init>(java.lang.String)>("No valid ExternalStorageService component found");

        throw $r12;

     label3:
        $r3 = new com.android.server.storage.StorageSessionController$ExternalStorageServiceException;

        specialinvoke $r3.<com.android.server.storage.StorageSessionController$ExternalStorageServiceException: void <init>(java.lang.String)>("No valid MediaStore provider found");

        throw $r3;
    }

    public static boolean isEmulatedOrPublic(android.os.storage.VolumeInfo)
    {
        android.os.storage.VolumeInfo r0;
        int $i0, $i1;
        boolean z0;

        r0 := @parameter0: android.os.storage.VolumeInfo;

        $i0 = r0.<android.os.storage.VolumeInfo: int type>;

        if $i0 == 2 goto label2;

        $i1 = r0.<android.os.storage.VolumeInfo: int type>;

        if $i1 != 0 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    private void killExternalStorageService(int)
    {
        com.android.server.storage.StorageSessionController r0;
        int i0, $i1;
        java.lang.String $r1, $r6;
        android.os.RemoteException $r2;
        java.lang.StringBuilder $r3;
        android.app.IActivityManager r7;

        r0 := @this: com.android.server.storage.StorageSessionController;

        i0 := @parameter0: int;

        r7 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

     label1:
        $r1 = r0.<com.android.server.storage.StorageSessionController: java.lang.String mExternalStorageServicePackageName>;

        $i1 = r0.<com.android.server.storage.StorageSessionController: int mExternalStorageServiceAppId>;

        interfaceinvoke r7.<android.app.IActivityManager: void killApplication(java.lang.String,int,int,java.lang.String)>($r1, $i1, i0, "storage_session_controller reset");

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to kill the ExtenalStorageService for user ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("StorageSessionController", $r6);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private boolean shouldHandle(android.os.storage.VolumeInfo)
    {
        com.android.server.storage.StorageSessionController r0;
        android.os.storage.VolumeInfo r1;
        boolean $z0, $z1, $z2, z3;

        r0 := @this: com.android.server.storage.StorageSessionController;

        r1 := @parameter0: android.os.storage.VolumeInfo;

        $z0 = r0.<com.android.server.storage.StorageSessionController: boolean mIsFuseEnabled>;

        if $z0 == 0 goto label2;

        $z1 = r0.<com.android.server.storage.StorageSessionController: boolean mIsResetting>;

        if $z1 != 0 goto label2;

        if r1 == null goto label1;

        $z2 = staticinvoke <com.android.server.storage.StorageSessionController: boolean isEmulatedOrPublic(android.os.storage.VolumeInfo)>(r1);

        if $z2 == 0 goto label2;

     label1:
        z3 = 1;

        goto label3;

     label2:
        z3 = 0;

     label3:
        return z3;
    }

    public android.content.ComponentName getExternalStorageServiceComponentName()
    {
        com.android.server.storage.StorageSessionController r0;
        android.content.ComponentName $r1;

        r0 := @this: com.android.server.storage.StorageSessionController;

        $r1 = r0.<com.android.server.storage.StorageSessionController: android.content.ComponentName mExternalStorageServiceComponent>;

        return $r1;
    }

    public void notifyVolumeStateChanged(android.os.storage.VolumeInfo) throws com.android.server.storage.StorageSessionController$ExternalStorageServiceException
    {
        com.android.server.storage.StorageSessionController r0;
        java.lang.String r1, $r9, $r12;
        int i0;
        java.lang.Object r2, $r6;
        com.android.server.storage.StorageUserConnection r3;
        java.lang.StringBuilder r4, r17;
        boolean $z0;
        android.util.SparseArray $r5;
        android.content.Context $r13;
        android.os.storage.StorageVolume $r14;
        java.lang.Throwable $r15;
        android.os.storage.VolumeInfo r16;

        r0 := @this: com.android.server.storage.StorageSessionController;

        r16 := @parameter0: android.os.storage.VolumeInfo;

        $z0 = specialinvoke r0.<com.android.server.storage.StorageSessionController: boolean shouldHandle(android.os.storage.VolumeInfo)>(r16);

        if $z0 != 0 goto label01;

        return;

     label01:
        r1 = virtualinvoke r16.<android.os.storage.VolumeInfo: java.lang.String getId()>();

        i0 = virtualinvoke r16.<android.os.storage.VolumeInfo: int getMountUserId()>();

        r2 = r0.<com.android.server.storage.StorageSessionController: java.lang.Object mLock>;

        entermonitor r2;

     label02:
        $r5 = r0.<com.android.server.storage.StorageSessionController: android.util.SparseArray mConnections>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (com.android.server.storage.StorageUserConnection) $r6;

     label03:
        if r3 == null goto label06;

     label04:
        r4 = new java.lang.StringBuilder;

        specialinvoke r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Notifying volume state changed for session with id: ");

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("StorageSessionController", $r12);

        $r13 = r0.<com.android.server.storage.StorageSessionController: android.content.Context mContext>;

        $r14 = virtualinvoke r16.<android.os.storage.VolumeInfo: android.os.storage.StorageVolume buildStorageVolume(android.content.Context,int,boolean)>($r13, i0, 0);

        virtualinvoke r3.<com.android.server.storage.StorageUserConnection: void notifyVolumeStateChanged(java.lang.String,android.os.storage.StorageVolume)>(r1, $r14);

     label05:
        goto label07;

     label06:
        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No available storage user connection for userId : ");

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("StorageSessionController", $r9);

     label07:
        exitmonitor r2;

     label08:
        return;

     label09:
        $r15 := @caughtexception;

     label10:
        exitmonitor r2;

     label11:
        throw $r15;

        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void onReset(android.os.IVold, java.lang.Runnable)
    {
        com.android.server.storage.StorageSessionController r0;
        java.lang.String r2, $r12, $r15, $r18, $r21, $r31, $r36;
        boolean $z0, $z1;
        android.util.SparseArray $r4, $r5, $r6, $r22, $r23;
        int $i1, $i2, $i8, $i10, i12, i13;
        java.lang.Object $r7, $r9, $r24, r41, r51;
        java.util.Set $r8;
        com.android.server.storage.StorageUserConnection $r25, r42;
        java.lang.Throwable $r26, $r37, $r38;
        java.lang.StringBuilder $r27, $r33, r44, r45, r47, r48;
        java.lang.Exception $r32;
        android.os.IVold r39;
        java.lang.Runnable r40;
        java.util.Iterator r43;

        r0 := @this: com.android.server.storage.StorageSessionController;

        r39 := @parameter0: android.os.IVold;

        r40 := @parameter1: java.lang.Runnable;

        $z0 = specialinvoke r0.<com.android.server.storage.StorageSessionController: boolean shouldHandle(android.os.storage.VolumeInfo)>(null);

        if $z0 != 0 goto label01;

        return;

     label01:
        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        r41 = r0.<com.android.server.storage.StorageSessionController: java.lang.Object mLock>;

        entermonitor r41;

     label02:
        r0.<com.android.server.storage.StorageSessionController: boolean mIsResetting> = 1;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("StorageSessionController", "Started resetting external storage service...");

     label03:
        i12 = 0;

     label04:
        $r5 = r0.<com.android.server.storage.StorageSessionController: android.util.SparseArray mConnections>;

        $i1 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

        if i12 >= $i1 goto label06;

        $r22 = r0.<com.android.server.storage.StorageSessionController: android.util.SparseArray mConnections>;

        $i8 = virtualinvoke $r22.<android.util.SparseArray: int keyAt(int)>(i12);

        $r23 = r0.<com.android.server.storage.StorageSessionController: android.util.SparseArray mConnections>;

        $r24 = virtualinvoke $r23.<android.util.SparseArray: java.lang.Object valueAt(int)>(i12);

        $r25 = (com.android.server.storage.StorageUserConnection) $r24;

        virtualinvoke $r4.<android.util.SparseArray: void put(int,java.lang.Object)>($i8, $r25);

     label05:
        i12 = i12 + 1;

        goto label04;

     label06:
        exitmonitor r41;

     label07:
        i13 = 0;

     label08:
        $i2 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        if i13 >= $i2 goto label17;

        $r7 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i13);

        r42 = (com.android.server.storage.StorageUserConnection) $r7;

        $r8 = virtualinvoke r42.<com.android.server.storage.StorageUserConnection: java.util.Set getAllSessionIds()>();

        r43 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $z1 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label16;

        $r9 = interfaceinvoke r43.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.lang.String) $r9;

     label10:
        r44 = new java.lang.StringBuilder;

        specialinvoke r44.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unmounting ");

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("StorageSessionController", $r12);

        interfaceinvoke r39.<android.os.IVold: void unmount(java.lang.String)>(r2);

        r45 = new java.lang.StringBuilder;

        specialinvoke r45.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unmounted ");

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r15 = virtualinvoke r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("StorageSessionController", $r15);

     label11:
        goto label13;

     label12:
        $r32 := @caughtexception;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to unmount volume: ");

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r36 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("StorageSessionController", $r36, $r32);

     label13:
        r47 = new java.lang.StringBuilder;

        specialinvoke r47.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exiting ");

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r18 = virtualinvoke r47.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("StorageSessionController", $r18);

        virtualinvoke r42.<com.android.server.storage.StorageUserConnection: void removeSessionAndWait(java.lang.String)>(r2);

        r48 = new java.lang.StringBuilder;

        specialinvoke r48.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exited ");

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r21 = virtualinvoke r48.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("StorageSessionController", $r21);

     label14:
        goto label09;

     label15:
        $r26 := @caughtexception;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to exit session: ");

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Killing MediaProvider...");

        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("StorageSessionController", $r31, $r26);

        $i10 = virtualinvoke $r4.<android.util.SparseArray: int keyAt(int)>(i13);

        specialinvoke r0.<com.android.server.storage.StorageSessionController: void killExternalStorageService(int)>($i10);

     label16:
        virtualinvoke r42.<com.android.server.storage.StorageUserConnection: void close()>();

        i13 = i13 + 1;

        goto label08;

     label17:
        interfaceinvoke r40.<java.lang.Runnable: void run()>();

        r51 = r0.<com.android.server.storage.StorageSessionController: java.lang.Object mLock>;

        entermonitor r51;

     label18:
        $r6 = r0.<com.android.server.storage.StorageSessionController: android.util.SparseArray mConnections>;

        virtualinvoke $r6.<android.util.SparseArray: void clear()>();

        r0.<com.android.server.storage.StorageSessionController: boolean mIsResetting> = 0;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("StorageSessionController", "Finished resetting external storage service");

        exitmonitor r51;

     label19:
        return;

     label20:
        $r37 := @caughtexception;

     label21:
        exitmonitor r51;

     label22:
        throw $r37;

     label23:
        $r38 := @caughtexception;

     label24:
        exitmonitor r41;

     label25:
        throw $r38;

        catch java.lang.Throwable from label02 to label03 with label23;
        catch java.lang.Throwable from label04 to label05 with label23;
        catch java.lang.Throwable from label06 to label07 with label23;
        catch android.os.ServiceSpecificException from label10 to label11 with label12;
        catch android.os.RemoteException from label10 to label11 with label12;
        catch java.lang.IllegalStateException from label13 to label14 with label15;
        catch com.android.server.storage.StorageSessionController$ExternalStorageServiceException from label13 to label14 with label15;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label21 to label22 with label20;
        catch java.lang.Throwable from label24 to label25 with label23;
    }

    public void onUnlockUser(int) throws com.android.server.storage.StorageSessionController$ExternalStorageServiceException
    {
        com.android.server.storage.StorageSessionController r0;
        int i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: com.android.server.storage.StorageSessionController;

        i0 := @parameter0: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("On user unlock ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("StorageSessionController", $r5);

        $z0 = specialinvoke r0.<com.android.server.storage.StorageSessionController: boolean shouldHandle(android.os.storage.VolumeInfo)>(null);

        if $z0 == 0 goto label1;

        if i0 != 0 goto label1;

        specialinvoke r0.<com.android.server.storage.StorageSessionController: void initExternalStorageServiceComponent()>();

     label1:
        return;
    }

    public void onUserStopping(int)
    {
        com.android.server.storage.StorageSessionController r0;
        int i0;
        boolean $z0;
        android.util.SparseArray $r1;
        java.lang.Object $r2, r12;
        java.lang.StringBuilder $r3, $r7;
        java.lang.String $r6, $r10;
        java.lang.Throwable $r11;
        com.android.server.storage.StorageUserConnection r13;

        r0 := @this: com.android.server.storage.StorageSessionController;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<com.android.server.storage.StorageSessionController: boolean shouldHandle(android.os.storage.VolumeInfo)>(null);

        if $z0 != 0 goto label1;

        return;

     label1:
        r12 = r0.<com.android.server.storage.StorageSessionController: java.lang.Object mLock>;

        entermonitor r12;

     label2:
        $r1 = r0.<com.android.server.storage.StorageSessionController: android.util.SparseArray mConnections>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r13 = (com.android.server.storage.StorageUserConnection) $r2;

        exitmonitor r12;

     label3:
        if r13 == null goto label4;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing all sessions for user: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("StorageSessionController", $r10);

        virtualinvoke r13.<com.android.server.storage.StorageUserConnection: void removeAllSessions()>();

        goto label5;

     label4:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No connection found for user: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("StorageSessionController", $r6);

     label5:
        return;

     label6:
        $r11 := @caughtexception;

     label7:
        exitmonitor r12;

     label8:
        throw $r11;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void onVolumeMount(android.os.ParcelFileDescriptor, android.os.storage.VolumeInfo) throws com.android.server.storage.StorageSessionController$ExternalStorageServiceException
    {
        com.android.server.storage.StorageSessionController r0;
        android.os.storage.VolumeInfo r1;
        java.lang.String r2, $r7, $r12, $r14, $r16, $r19;
        int i0;
        java.lang.Object r3, $r9;
        boolean $z0;
        java.lang.StringBuilder $r4, r27, r28;
        android.util.SparseArray $r8, $r21;
        java.io.File $r13, $r15;
        android.content.Context $r20;
        java.lang.Throwable $r22;
        android.os.ParcelFileDescriptor r23;
        com.android.server.storage.StorageUserConnection r25, r26;

        r0 := @this: com.android.server.storage.StorageSessionController;

        r23 := @parameter0: android.os.ParcelFileDescriptor;

        r1 := @parameter1: android.os.storage.VolumeInfo;

        $z0 = specialinvoke r0.<com.android.server.storage.StorageSessionController: boolean shouldHandle(android.os.storage.VolumeInfo)>(r1);

        if $z0 != 0 goto label01;

        return;

     label01:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("On volume mount ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("StorageSessionController", $r7);

        r2 = virtualinvoke r1.<android.os.storage.VolumeInfo: java.lang.String getId()>();

        i0 = virtualinvoke r1.<android.os.storage.VolumeInfo: int getMountUserId()>();

        r3 = r0.<com.android.server.storage.StorageSessionController: java.lang.Object mLock>;

        entermonitor r3;

     label02:
        $r8 = r0.<com.android.server.storage.StorageSessionController: android.util.SparseArray mConnections>;

        $r9 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r25 = (com.android.server.storage.StorageUserConnection) $r9;

     label03:
        r26 = r25;

        if r25 != null goto label06;

     label04:
        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating connection for user: ");

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r19 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("StorageSessionController", $r19);

        r26 = new com.android.server.storage.StorageUserConnection;

        $r20 = r0.<com.android.server.storage.StorageSessionController: android.content.Context mContext>;

        specialinvoke r26.<com.android.server.storage.StorageUserConnection: void <init>(android.content.Context,int,com.android.server.storage.StorageSessionController)>($r20, i0, r0);

     label05:
        $r21 = r0.<com.android.server.storage.StorageSessionController: android.util.SparseArray mConnections>;

        virtualinvoke $r21.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r26);

     label06:
        r28 = new java.lang.StringBuilder;

        specialinvoke r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating and starting session with id: ");

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("StorageSessionController", $r12);

        $r13 = virtualinvoke r1.<android.os.storage.VolumeInfo: java.io.File getPath()>();

        $r14 = virtualinvoke $r13.<java.io.File: java.lang.String getPath()>();

        $r15 = virtualinvoke r1.<android.os.storage.VolumeInfo: java.io.File getInternalPath()>();

        $r16 = virtualinvoke $r15.<java.io.File: java.lang.String getPath()>();

        virtualinvoke r26.<com.android.server.storage.StorageUserConnection: void startSession(java.lang.String,android.os.ParcelFileDescriptor,java.lang.String,java.lang.String)>(r2, r23, $r14, $r16);

        exitmonitor r3;

     label07:
        return;

     label08:
        $r22 := @caughtexception;

     label09:
        exitmonitor r3;

     label10:
        throw $r22;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public com.android.server.storage.StorageUserConnection onVolumeRemove(android.os.storage.VolumeInfo)
    {
        com.android.server.storage.StorageSessionController r0;
        int i0;
        com.android.server.storage.StorageUserConnection r1;
        boolean $z0;
        java.lang.StringBuilder $r2, r20, r21;
        java.lang.String $r5, $r10, $r13, r18;
        android.util.SparseArray $r6;
        java.lang.Object $r7, r19;
        java.lang.Throwable $r15;
        android.os.storage.VolumeInfo r16;

        r0 := @this: com.android.server.storage.StorageSessionController;

        r16 := @parameter0: android.os.storage.VolumeInfo;

        $z0 = specialinvoke r0.<com.android.server.storage.StorageSessionController: boolean shouldHandle(android.os.storage.VolumeInfo)>(r16);

        if $z0 != 0 goto label01;

        return null;

     label01:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("On volume remove ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("StorageSessionController", $r5);

        r18 = virtualinvoke r16.<android.os.storage.VolumeInfo: java.lang.String getId()>();

        i0 = virtualinvoke r16.<android.os.storage.VolumeInfo: int getMountUserId()>();

        r19 = r0.<com.android.server.storage.StorageSessionController: java.lang.Object mLock>;

        entermonitor r19;

     label02:
        $r6 = r0.<com.android.server.storage.StorageSessionController: android.util.SparseArray mConnections>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.storage.StorageUserConnection) $r7;

     label03:
        if r1 == null goto label06;

     label04:
        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removed session for vol with id: ");

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r13 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("StorageSessionController", $r13);

        virtualinvoke r1.<com.android.server.storage.StorageUserConnection: com.android.server.storage.StorageUserConnection$Session removeSession(java.lang.String)>(r18);

        exitmonitor r19;

     label05:
        return r1;

     label06:
        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Session already removed for vol with id: ");

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r10 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("StorageSessionController", $r10);

        exitmonitor r19;

     label07:
        return null;

     label08:
        $r15 := @caughtexception;

     label09:
        exitmonitor r19;

     label10:
        throw $r15;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void onVolumeUnmount(android.os.storage.VolumeInfo)
    {
        com.android.server.storage.StorageSessionController r0;
        java.lang.StringBuilder $r1, $r6;
        java.lang.String $r4, $r9, r13;
        com.android.server.storage.StorageSessionController$ExternalStorageServiceException $r5;
        android.os.storage.VolumeInfo r10;
        com.android.server.storage.StorageUserConnection r11;

        r0 := @this: com.android.server.storage.StorageSessionController;

        r10 := @parameter0: android.os.storage.VolumeInfo;

        r11 = virtualinvoke r0.<com.android.server.storage.StorageSessionController: com.android.server.storage.StorageUserConnection onVolumeRemove(android.os.storage.VolumeInfo)>(r10);

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("On volume unmount ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("StorageSessionController", $r4);

        if r11 == null goto label4;

        r13 = virtualinvoke r10.<android.os.storage.VolumeInfo: java.lang.String getId()>();

     label1:
        virtualinvoke r11.<com.android.server.storage.StorageUserConnection: void removeSessionAndWait(java.lang.String)>(r13);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to end session for vol with id: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("StorageSessionController", $r9, $r5);

     label4:
        return;

        catch com.android.server.storage.StorageSessionController$ExternalStorageServiceException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <com.android.server.storage.StorageSessionController: java.lang.String TAG> = "StorageSessionController";

        return;
    }
}
