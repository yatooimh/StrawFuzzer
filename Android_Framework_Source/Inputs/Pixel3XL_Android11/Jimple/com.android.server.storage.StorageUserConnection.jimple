public final class com.android.server.storage.StorageUserConnection extends java.lang.Object
{
    private static final int DEFAULT_REMOTE_TIMEOUT_SECONDS;
    private static final java.lang.String TAG;
    private final com.android.server.storage.StorageUserConnection$ActiveConnection mActiveConnection;
    private final android.content.Context mContext;
    private android.os.HandlerThread mHandlerThread;
    private final boolean mIsDemoUser;
    private final java.lang.Object mLock;
    private final com.android.server.storage.StorageSessionController mSessionController;
    private final java.util.Map mSessions;
    private final int mUserId;

    public void <init>(android.content.Context, int, com.android.server.storage.StorageSessionController)
    {
        com.android.server.storage.StorageUserConnection r0;
        int i0, $i1, $i2;
        com.android.server.storage.StorageSessionController r1;
        boolean z0;
        java.lang.Object $r2, $r7;
        com.android.server.storage.StorageUserConnection$ActiveConnection $r3;
        java.util.HashMap $r4;
        android.content.Context $r6, r15;
        android.os.UserManagerInternal $r8;
        android.content.pm.UserInfo $r9;
        java.lang.StringBuilder $r10;
        android.os.HandlerThread $r13;
        java.lang.String $r14;

        r0 := @this: com.android.server.storage.StorageUserConnection;

        r15 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 := @parameter2: com.android.server.storage.StorageSessionController;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.server.storage.StorageUserConnection: java.lang.Object mLock> = $r2;

        $r3 = new com.android.server.storage.StorageUserConnection$ActiveConnection;

        specialinvoke $r3.<com.android.server.storage.StorageUserConnection$ActiveConnection: void <init>(com.android.server.storage.StorageUserConnection,com.android.server.storage.StorageUserConnection$1)>(r0, null);

        r0.<com.android.server.storage.StorageUserConnection: com.android.server.storage.StorageUserConnection$ActiveConnection mActiveConnection> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.storage.StorageUserConnection: java.util.Map mSessions> = $r4;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r15);

        $r6 = (android.content.Context) r15;

        r0.<com.android.server.storage.StorageUserConnection: android.content.Context mContext> = $r6;

        $i1 = staticinvoke <com.android.internal.util.Preconditions: int checkArgumentNonnegative(int)>(i0);

        r0.<com.android.server.storage.StorageUserConnection: int mUserId> = $i1;

        r0.<com.android.server.storage.StorageUserConnection: com.android.server.storage.StorageSessionController mSessionController> = r1;

        $r7 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/os/UserManagerInternal;");

        $r8 = (android.os.UserManagerInternal) $r7;

        $r9 = virtualinvoke $r8.<android.os.UserManagerInternal: android.content.pm.UserInfo getUserInfo(int)>(i0);

        z0 = virtualinvoke $r9.<android.content.pm.UserInfo: boolean isDemo()>();

        r0.<com.android.server.storage.StorageUserConnection: boolean mIsDemoUser> = z0;

        if z0 == 0 goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("StorageUserConnectionThread-");

        $i2 = r0.<com.android.server.storage.StorageUserConnection: int mUserId>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r13 = new android.os.HandlerThread;

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<android.os.HandlerThread: void <init>(java.lang.String)>($r14);

        r0.<com.android.server.storage.StorageUserConnection: android.os.HandlerThread mHandlerThread> = $r13;

        virtualinvoke $r13.<android.os.HandlerThread: void start()>();

     label1:
        return;
    }

    static java.lang.Object access$100(com.android.server.storage.StorageUserConnection)
    {
        com.android.server.storage.StorageUserConnection r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.storage.StorageUserConnection;

        $r1 = r0.<com.android.server.storage.StorageUserConnection: java.lang.Object mLock>;

        return $r1;
    }

    static android.os.HandlerThread access$1000(com.android.server.storage.StorageUserConnection)
    {
        com.android.server.storage.StorageUserConnection r0;
        android.os.HandlerThread $r1;

        r0 := @parameter0: com.android.server.storage.StorageUserConnection;

        $r1 = r0.<com.android.server.storage.StorageUserConnection: android.os.HandlerThread mHandlerThread>;

        return $r1;
    }

    static int access$200(com.android.server.storage.StorageUserConnection)
    {
        com.android.server.storage.StorageUserConnection r0;
        int $i0;

        r0 := @parameter0: com.android.server.storage.StorageUserConnection;

        $i0 = r0.<com.android.server.storage.StorageUserConnection: int mUserId>;

        return $i0;
    }

    static android.content.Context access$300(com.android.server.storage.StorageUserConnection)
    {
        com.android.server.storage.StorageUserConnection r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.server.storage.StorageUserConnection;

        $r1 = r0.<com.android.server.storage.StorageUserConnection: android.content.Context mContext>;

        return $r1;
    }

    static void access$400(com.android.server.storage.StorageUserConnection, java.util.concurrent.CountDownLatch, java.lang.String) throws java.util.concurrent.TimeoutException
    {
        com.android.server.storage.StorageUserConnection r0;
        java.util.concurrent.CountDownLatch r1;
        java.lang.String r2;

        r0 := @parameter0: com.android.server.storage.StorageUserConnection;

        r1 := @parameter1: java.util.concurrent.CountDownLatch;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<com.android.server.storage.StorageUserConnection: void waitForLatch(java.util.concurrent.CountDownLatch,java.lang.String)>(r1, r2);

        return;
    }

    static com.android.server.storage.StorageSessionController access$500(com.android.server.storage.StorageUserConnection)
    {
        com.android.server.storage.StorageUserConnection r0;
        com.android.server.storage.StorageSessionController $r1;

        r0 := @parameter0: com.android.server.storage.StorageUserConnection;

        $r1 = r0.<com.android.server.storage.StorageUserConnection: com.android.server.storage.StorageSessionController mSessionController>;

        return $r1;
    }

    static boolean access$900(com.android.server.storage.StorageUserConnection)
    {
        com.android.server.storage.StorageUserConnection r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.storage.StorageUserConnection;

        $z0 = r0.<com.android.server.storage.StorageUserConnection: boolean mIsDemoUser>;

        return $z0;
    }

    private void prepareRemote() throws com.android.server.storage.StorageSessionController$ExternalStorageServiceException
    {
        com.android.server.storage.StorageUserConnection r0;
        java.lang.StringBuilder r1;
        com.android.server.storage.StorageUserConnection$ActiveConnection $r2;
        int $i0;
        java.lang.String $r5;
        java.lang.Throwable $r6;
        com.android.server.storage.StorageSessionController$ExternalStorageServiceException $r7;
        java.util.concurrent.CountDownLatch r8;

        r0 := @this: com.android.server.storage.StorageUserConnection;

     label1:
        $r2 = r0.<com.android.server.storage.StorageUserConnection: com.android.server.storage.StorageUserConnection$ActiveConnection mActiveConnection>;

        r8 = virtualinvoke $r2.<com.android.server.storage.StorageUserConnection$ActiveConnection: java.util.concurrent.CountDownLatch bind()>();

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("remote_prepare_user ");

        $i0 = r0.<com.android.server.storage.StorageUserConnection: int mUserId>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.storage.StorageUserConnection: void waitForLatch(java.util.concurrent.CountDownLatch,java.lang.String)>(r8, $r5);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        $r7 = new com.android.server.storage.StorageSessionController$ExternalStorageServiceException;

        specialinvoke $r7.<com.android.server.storage.StorageSessionController$ExternalStorageServiceException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to prepare remote", $r6);

        throw $r7;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
        catch java.util.concurrent.TimeoutException from label1 to label2 with label3;
    }

    private void waitForLatch(java.util.concurrent.CountDownLatch, java.lang.String) throws java.util.concurrent.TimeoutException
    {
        com.android.server.storage.StorageUserConnection r0;
        java.lang.String r1, $r6, $r10, $r18;
        java.lang.StringBuilder r2, $r13, r20;
        java.util.concurrent.TimeUnit $r3;
        boolean $z0;
        int $i0;
        java.lang.Throwable $r11;
        java.lang.Thread $r12;
        java.lang.IllegalStateException $r17;
        java.util.concurrent.CountDownLatch r19;
        java.util.concurrent.TimeoutException r21;

        r0 := @this: com.android.server.storage.StorageUserConnection;

        r19 := @parameter0: java.util.concurrent.CountDownLatch;

        r1 := @parameter1: java.lang.String;

     label1:
        $r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $z0 = virtualinvoke r19.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>(20L, $r3);

        if $z0 == 0 goto label3;

     label2:
        return;

     label3:
        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to bind to the ExternalStorageService for user ");

        $i0 = r0.<com.android.server.storage.StorageUserConnection: int mUserId>;

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("StorageUserConnection", $r6);

        r21 = new java.util.concurrent.TimeoutException;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Latch wait for ");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" elapsed");

        $r10 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r21.<java.util.concurrent.TimeoutException: void <init>(java.lang.String)>($r10);

        throw r21;

     label4:
        $r11 := @caughtexception;

        $r12 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r12.<java.lang.Thread: void interrupt()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Latch wait for ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" interrupted");

        $r17 = new java.lang.IllegalStateException;

        $r18 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r18);

        throw $r17;

        catch java.lang.InterruptedException from label1 to label2 with label4;
        catch java.lang.InterruptedException from label3 to label4 with label4;
    }

    public void close()
    {
        com.android.server.storage.StorageUserConnection r0;
        com.android.server.storage.StorageUserConnection$ActiveConnection $r1;
        boolean $z0;
        android.os.HandlerThread $r2;

        r0 := @this: com.android.server.storage.StorageUserConnection;

        $r1 = r0.<com.android.server.storage.StorageUserConnection: com.android.server.storage.StorageUserConnection$ActiveConnection mActiveConnection>;

        virtualinvoke $r1.<com.android.server.storage.StorageUserConnection$ActiveConnection: void close()>();

        $z0 = r0.<com.android.server.storage.StorageUserConnection: boolean mIsDemoUser>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.server.storage.StorageUserConnection: android.os.HandlerThread mHandlerThread>;

        virtualinvoke $r2.<android.os.HandlerThread: boolean quit()>();

     label1:
        return;
    }

    public java.util.Set getAllSessionIds()
    {
        com.android.server.storage.StorageUserConnection r0;
        java.lang.Object r1;
        java.util.Map $r2;
        java.util.Set $r3;
        java.lang.Throwable $r4;
        java.util.HashSet r5;

        r0 := @this: com.android.server.storage.StorageUserConnection;

        r1 = r0.<com.android.server.storage.StorageUserConnection: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r5 = new java.util.HashSet;

        $r2 = r0.<com.android.server.storage.StorageUserConnection: java.util.Map mSessions>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        specialinvoke r5.<java.util.HashSet: void <init>(java.util.Collection)>($r3);

        exitmonitor r1;

     label2:
        return r5;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void notifyVolumeStateChanged(java.lang.String, android.os.storage.StorageVolume) throws com.android.server.storage.StorageSessionController$ExternalStorageServiceException
    {
        com.android.server.storage.StorageUserConnection r0;
        android.os.storage.StorageVolume r1;
        java.lang.Object r2;
        com.android.server.storage.StorageUserConnection$ActiveConnection $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: com.android.server.storage.StorageUserConnection;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.storage.StorageVolume;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r7);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        specialinvoke r0.<com.android.server.storage.StorageUserConnection: void prepareRemote()>();

        r2 = r0.<com.android.server.storage.StorageUserConnection: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        $r5 = r0.<com.android.server.storage.StorageUserConnection: com.android.server.storage.StorageUserConnection$ActiveConnection mActiveConnection>;

        virtualinvoke $r5.<com.android.server.storage.StorageUserConnection$ActiveConnection: void notifyVolumeStateChangedLocked(java.lang.String,android.os.storage.StorageVolume)>(r7, r1);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void removeAllSessions()
    {
        com.android.server.storage.StorageUserConnection r0;
        java.lang.Object r1;
        java.util.Map $r3, $r9;
        int $i0, $i1;
        java.lang.String $r8;
        java.lang.Throwable $r10;
        java.lang.StringBuilder r11;

        r0 := @this: com.android.server.storage.StorageUserConnection;

        r1 = r0.<com.android.server.storage.StorageUserConnection: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing  ");

        $r3 = r0.<com.android.server.storage.StorageUserConnection: java.util.Map mSessions>;

        $i0 = interfaceinvoke $r3.<java.util.Map: int size()>();

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sessions for user: ");

        $i1 = r0.<com.android.server.storage.StorageUserConnection: int mUserId>;

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...");

        $r8 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("StorageUserConnection", $r8);

        $r9 = r0.<com.android.server.storage.StorageUserConnection: java.util.Map mSessions>;

        interfaceinvoke $r9.<java.util.Map: void clear()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r10 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public com.android.server.storage.StorageUserConnection$Session removeSession(java.lang.String)
    {
        com.android.server.storage.StorageUserConnection r0;
        java.lang.Object r1, $r3;
        java.util.Map $r2;
        java.lang.Throwable $r4;
        java.lang.String r5;
        com.android.server.storage.StorageUserConnection$Session r6;

        r0 := @this: com.android.server.storage.StorageUserConnection;

        r5 := @parameter0: java.lang.String;

        r1 = r0.<com.android.server.storage.StorageUserConnection: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.storage.StorageUserConnection: java.util.Map mSessions>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r5);

        r6 = (com.android.server.storage.StorageUserConnection$Session) $r3;

        exitmonitor r1;

     label2:
        return r6;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void removeSessionAndWait(java.lang.String) throws com.android.server.storage.StorageSessionController$ExternalStorageServiceException
    {
        com.android.server.storage.StorageUserConnection r0;
        java.lang.StringBuilder $r1, $r7;
        java.lang.String $r5, $r10, r12;
        com.android.server.storage.StorageUserConnection$ActiveConnection $r6;
        java.lang.Throwable $r11;
        com.android.server.storage.StorageUserConnection$Session r13;
        java.lang.Object r16;

        r0 := @this: com.android.server.storage.StorageUserConnection;

        r12 := @parameter0: java.lang.String;

        r13 = virtualinvoke r0.<com.android.server.storage.StorageUserConnection: com.android.server.storage.StorageUserConnection$Session removeSession(java.lang.String)>(r12);

        if r13 != null goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No session found for id: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("StorageUserConnection", $r10);

        return;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Waiting for session end ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r13);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ...");

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("StorageUserConnection", $r5);

        specialinvoke r0.<com.android.server.storage.StorageUserConnection: void prepareRemote()>();

        r16 = r0.<com.android.server.storage.StorageUserConnection: java.lang.Object mLock>;

        entermonitor r16;

     label2:
        $r6 = r0.<com.android.server.storage.StorageUserConnection: com.android.server.storage.StorageUserConnection$ActiveConnection mActiveConnection>;

        virtualinvoke $r6.<com.android.server.storage.StorageUserConnection$ActiveConnection: void endSessionLocked(com.android.server.storage.StorageUserConnection$Session)>(r13);

        exitmonitor r16;

     label3:
        return;

     label4:
        $r11 := @caughtexception;

     label5:
        exitmonitor r16;

     label6:
        throw $r11;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void resetUserSessions()
    {
        com.android.server.storage.StorageUserConnection r0;
        java.lang.Object r1, $r4;
        java.util.Map $r3;
        boolean $z0;
        int $i0;
        android.os.storage.StorageManagerInternal $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.storage.StorageUserConnection;

        r1 = r0.<com.android.server.storage.StorageUserConnection: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.storage.StorageUserConnection: java.util.Map mSessions>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        exitmonitor r1;

     label4:
        $r4 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/os/storage/StorageManagerInternal;");

        $r5 = (android.os.storage.StorageManagerInternal) $r4;

        $i0 = r0.<com.android.server.storage.StorageUserConnection: int mUserId>;

        virtualinvoke $r5.<android.os.storage.StorageManagerInternal: void resetUser(int)>($i0);

        return;

     label5:
        $r6 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void startSession(java.lang.String, android.os.ParcelFileDescriptor, java.lang.String, java.lang.String) throws com.android.server.storage.StorageSessionController$ExternalStorageServiceException
    {
        com.android.server.storage.StorageUserConnection r0;
        android.os.ParcelFileDescriptor r1;
        java.lang.String r2, r3, r15;
        java.lang.Object r4;
        com.android.server.storage.StorageUserConnection$Session r5;
        java.util.Map $r10, $r11;
        boolean $z0, z1;
        com.android.server.storage.StorageUserConnection$ActiveConnection $r13;
        java.lang.Throwable $r14;

        r0 := @this: com.android.server.storage.StorageUserConnection;

        r15 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.ParcelFileDescriptor;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r15);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r3);

        specialinvoke r0.<com.android.server.storage.StorageUserConnection: void prepareRemote()>();

        r4 = r0.<com.android.server.storage.StorageUserConnection: java.lang.Object mLock>;

        entermonitor r4;

     label1:
        $r10 = r0.<com.android.server.storage.StorageUserConnection: java.util.Map mSessions>;

        $z0 = interfaceinvoke $r10.<java.util.Map: boolean containsKey(java.lang.Object)>(r15);

        if $z0 != 0 goto label3;

     label2:
        z1 = 1;

        goto label4;

     label3:
        z1 = 0;

     label4:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean)>(z1);

        r5 = new com.android.server.storage.StorageUserConnection$Session;

        specialinvoke r5.<com.android.server.storage.StorageUserConnection$Session: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r15, r2, r3);

        $r11 = r0.<com.android.server.storage.StorageUserConnection: java.util.Map mSessions>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r15, r5);

        $r13 = r0.<com.android.server.storage.StorageUserConnection: com.android.server.storage.StorageUserConnection$ActiveConnection mActiveConnection>;

        virtualinvoke $r13.<com.android.server.storage.StorageUserConnection$ActiveConnection: void startSessionLocked(com.android.server.storage.StorageUserConnection$Session,android.os.ParcelFileDescriptor)>(r5, r1);

        exitmonitor r4;

     label5:
        return;

     label6:
        $r14 := @caughtexception;

     label7:
        exitmonitor r4;

     label8:
        throw $r14;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public static void <clinit>()
    {
        <com.android.server.storage.StorageUserConnection: java.lang.String TAG> = "StorageUserConnection";

        <com.android.server.storage.StorageUserConnection: int DEFAULT_REMOTE_TIMEOUT_SECONDS> = 20;

        return;
    }
}
