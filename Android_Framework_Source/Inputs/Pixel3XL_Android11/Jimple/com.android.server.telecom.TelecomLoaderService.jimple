public class com.android.server.telecom.TelecomLoaderService extends com.android.server.SystemService
{
    private static final java.lang.String SERVICE_ACTION;
    private static final android.content.ComponentName SERVICE_COMPONENT;
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private android.util.IntArray mDefaultSimCallManagerRequests;
    private final java.lang.Object mLock;
    private com.android.server.telecom.TelecomLoaderService$TelecomServiceConnection mServiceConnection;

    static void <clinit>()
    {
        android.content.ComponentName $r0;

        <com.android.server.telecom.TelecomLoaderService: java.lang.String TAG> = "TelecomLoaderService";

        <com.android.server.telecom.TelecomLoaderService: java.lang.String SERVICE_ACTION> = "com.android.ITelecomService";

        $r0 = new android.content.ComponentName;

        specialinvoke $r0.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("com.android.server.telecom", "com.android.server.telecom.components.TelecomService");

        <com.android.server.telecom.TelecomLoaderService: android.content.ComponentName SERVICE_COMPONENT> = $r0;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.server.telecom.TelecomLoaderService r0;
        android.content.Context r1;
        java.lang.Object $r2;

        r0 := @this: com.android.server.telecom.TelecomLoaderService;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.server.SystemService: void <init>(android.content.Context)>(r1);

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.server.telecom.TelecomLoaderService: java.lang.Object mLock> = $r2;

        r0.<com.android.server.telecom.TelecomLoaderService: android.content.Context mContext> = r1;

        specialinvoke r0.<com.android.server.telecom.TelecomLoaderService: void registerDefaultAppProviders()>();

        return;
    }

    static void access$000(com.android.server.telecom.TelecomLoaderService)
    {
        com.android.server.telecom.TelecomLoaderService r0;

        r0 := @parameter0: com.android.server.telecom.TelecomLoaderService;

        specialinvoke r0.<com.android.server.telecom.TelecomLoaderService: void connectToTelecom()>();

        return;
    }

    static android.content.Context access$100(com.android.server.telecom.TelecomLoaderService)
    {
        com.android.server.telecom.TelecomLoaderService r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.server.telecom.TelecomLoaderService;

        $r1 = r0.<com.android.server.telecom.TelecomLoaderService: android.content.Context mContext>;

        return $r1;
    }

    static java.lang.Object access$200(com.android.server.telecom.TelecomLoaderService)
    {
        com.android.server.telecom.TelecomLoaderService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.telecom.TelecomLoaderService;

        $r1 = r0.<com.android.server.telecom.TelecomLoaderService: java.lang.Object mLock>;

        return $r1;
    }

    static android.util.IntArray access$300(com.android.server.telecom.TelecomLoaderService)
    {
        com.android.server.telecom.TelecomLoaderService r0;
        android.util.IntArray $r1;

        r0 := @parameter0: com.android.server.telecom.TelecomLoaderService;

        $r1 = r0.<com.android.server.telecom.TelecomLoaderService: android.util.IntArray mDefaultSimCallManagerRequests>;

        return $r1;
    }

    static void access$500(com.android.server.telecom.TelecomLoaderService, int)
    {
        com.android.server.telecom.TelecomLoaderService r0;
        int i0;

        r0 := @parameter0: com.android.server.telecom.TelecomLoaderService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.telecom.TelecomLoaderService: void updateSimCallManagerPermissions(int)>(i0);

        return;
    }

    private void connectToTelecom()
    {
        com.android.server.telecom.TelecomLoaderService r0;
        java.lang.Object r1;
        com.android.server.telecom.TelecomLoaderService$TelecomServiceConnection r2, $r3, $r8;
        android.content.ComponentName $r4;
        android.os.UserHandle $r6;
        android.content.Context $r7, $r9;
        boolean $z0;
        java.lang.Throwable $r10;
        android.content.Intent r11;

        r0 := @this: com.android.server.telecom.TelecomLoaderService;

        r1 = r0.<com.android.server.telecom.TelecomLoaderService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.telecom.TelecomLoaderService: com.android.server.telecom.TelecomLoaderService$TelecomServiceConnection mServiceConnection>;

        if $r3 == null goto label2;

        $r9 = r0.<com.android.server.telecom.TelecomLoaderService: android.content.Context mContext>;

        $r8 = r0.<com.android.server.telecom.TelecomLoaderService: com.android.server.telecom.TelecomLoaderService$TelecomServiceConnection mServiceConnection>;

        virtualinvoke $r9.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r8);

        r0.<com.android.server.telecom.TelecomLoaderService: com.android.server.telecom.TelecomLoaderService$TelecomServiceConnection mServiceConnection> = null;

     label2:
        r2 = new com.android.server.telecom.TelecomLoaderService$TelecomServiceConnection;

        specialinvoke r2.<com.android.server.telecom.TelecomLoaderService$TelecomServiceConnection: void <init>(com.android.server.telecom.TelecomLoaderService,com.android.server.telecom.TelecomLoaderService$1)>(r0, null);

        r11 = new android.content.Intent;

        specialinvoke r11.<android.content.Intent: void <init>(java.lang.String)>("com.android.ITelecomService");

        $r4 = <com.android.server.telecom.TelecomLoaderService: android.content.ComponentName SERVICE_COMPONENT>;

        virtualinvoke r11.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r4);

        $r7 = r0.<com.android.server.telecom.TelecomLoaderService: android.content.Context mContext>;

        $r6 = <android.os.UserHandle: android.os.UserHandle SYSTEM>;

        $z0 = virtualinvoke $r7.<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>(r11, r2, 67108929, $r6);

        if $z0 == 0 goto label3;

        r0.<com.android.server.telecom.TelecomLoaderService: com.android.server.telecom.TelecomLoaderService$TelecomServiceConnection mServiceConnection> = r2;

     label3:
        exitmonitor r1;

     label4:
        return;

     label5:
        $r10 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    private void registerCarrierConfigChangedReceiver()
    {
        com.android.server.telecom.TelecomLoaderService r0;
        com.android.server.telecom.TelecomLoaderService$1 $r2;
        android.content.IntentFilter $r3;
        android.content.Context $r4;
        android.os.UserHandle $r5;

        r0 := @this: com.android.server.telecom.TelecomLoaderService;

        $r2 = new com.android.server.telecom.TelecomLoaderService$1;

        specialinvoke $r2.<com.android.server.telecom.TelecomLoaderService$1: void <init>(com.android.server.telecom.TelecomLoaderService)>(r0);

        $r4 = r0.<com.android.server.telecom.TelecomLoaderService: android.content.Context mContext>;

        $r5 = <android.os.UserHandle: android.os.UserHandle ALL>;

        $r3 = new android.content.IntentFilter;

        specialinvoke $r3.<android.content.IntentFilter: void <init>(java.lang.String)>("android.telephony.action.CARRIER_CONFIG_CHANGED");

        virtualinvoke $r4.<android.content.Context: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r2, $r5, $r3, null, null);

        return;
    }

    private void registerDefaultAppNotifier()
    {
        com.android.server.telecom.TelecomLoaderService r0;
        android.content.Context $r1, $r3;
        java.lang.Object $r2;
        android.app.role.RoleManager $r4;
        java.util.concurrent.Executor $r5;
        com.android.server.telecom._$$Lambda$TelecomLoaderService$jGqhqH8bl_lWotJlrzraXplioIw $r6;
        android.os.UserHandle $r7;

        r0 := @this: com.android.server.telecom.TelecomLoaderService;

        $r1 = r0.<com.android.server.telecom.TelecomLoaderService: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/role/RoleManager;");

        $r4 = (android.app.role.RoleManager) $r2;

        $r3 = r0.<com.android.server.telecom.TelecomLoaderService: android.content.Context mContext>;

        $r5 = virtualinvoke $r3.<android.content.Context: java.util.concurrent.Executor getMainExecutor()>();

        $r6 = new com.android.server.telecom._$$Lambda$TelecomLoaderService$jGqhqH8bl_lWotJlrzraXplioIw;

        specialinvoke $r6.<com.android.server.telecom._$$Lambda$TelecomLoaderService$jGqhqH8bl_lWotJlrzraXplioIw: void <init>(com.android.server.telecom.TelecomLoaderService)>(r0);

        $r7 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r4.<android.app.role.RoleManager: void addOnRoleHoldersChangedListenerAsUser(java.util.concurrent.Executor,android.app.role.OnRoleHoldersChangedListener,android.os.UserHandle)>($r5, $r6, $r7);

        return;
    }

    private void registerDefaultAppProviders()
    {
        com.android.server.telecom.TelecomLoaderService r0;
        com.android.server.pm.permission.PermissionManagerServiceInternal r1;
        java.lang.Object $r2;
        com.android.server.telecom._$$Lambda$TelecomLoaderService$Dg9me3bEFl3t0NGOPYwXIoF34FY $r3;
        com.android.server.telecom._$$Lambda$TelecomLoaderService$v_RQMbGOOwc6kjxGSNUrOugH8pw $r4;
        com.android.server.telecom._$$Lambda$TelecomLoaderService$4O6PYSHBsC0Q5H_Y3LkvD32Vcjk $r5;

        r0 := @this: com.android.server.telecom.TelecomLoaderService;

        $r2 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/pm/permission/PermissionManagerServiceInternal;");

        r1 = (com.android.server.pm.permission.PermissionManagerServiceInternal) $r2;

        $r3 = new com.android.server.telecom._$$Lambda$TelecomLoaderService$Dg9me3bEFl3t0NGOPYwXIoF34FY;

        specialinvoke $r3.<com.android.server.telecom._$$Lambda$TelecomLoaderService$Dg9me3bEFl3t0NGOPYwXIoF34FY: void <init>(com.android.server.telecom.TelecomLoaderService)>(r0);

        virtualinvoke r1.<com.android.server.pm.permission.PermissionManagerServiceInternal: void setSmsAppPackagesProvider(com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider)>($r3);

        $r4 = new com.android.server.telecom._$$Lambda$TelecomLoaderService$v_RQMbGOOwc6kjxGSNUrOugH8pw;

        specialinvoke $r4.<com.android.server.telecom._$$Lambda$TelecomLoaderService$v_RQMbGOOwc6kjxGSNUrOugH8pw: void <init>(com.android.server.telecom.TelecomLoaderService)>(r0);

        virtualinvoke r1.<com.android.server.pm.permission.PermissionManagerServiceInternal: void setDialerAppPackagesProvider(com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider)>($r4);

        $r5 = new com.android.server.telecom._$$Lambda$TelecomLoaderService$4O6PYSHBsC0Q5H_Y3LkvD32Vcjk;

        specialinvoke $r5.<com.android.server.telecom._$$Lambda$TelecomLoaderService$4O6PYSHBsC0Q5H_Y3LkvD32Vcjk: void <init>(com.android.server.telecom.TelecomLoaderService)>(r0);

        virtualinvoke r1.<com.android.server.pm.permission.PermissionManagerServiceInternal: void setSimCallManagerPackagesProvider(com.android.server.pm.permission.PermissionManagerServiceInternal$PackagesProvider)>($r5);

        return;
    }

    private void updateSimCallManagerPermissions(int)
    {
        com.android.server.telecom.TelecomLoaderService r0;
        int i0;
        com.android.server.pm.permission.PermissionManagerServiceInternal r1;
        android.telecom.PhoneAccountHandle r2;
        java.lang.Object $r4, $r6;
        android.content.Context $r5;
        android.telecom.TelecomManager $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r11, $r13;
        android.content.ComponentName $r12;

        r0 := @this: com.android.server.telecom.TelecomLoaderService;

        i0 := @parameter0: int;

        $r4 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/pm/permission/PermissionManagerServiceInternal;");

        r1 = (com.android.server.pm.permission.PermissionManagerServiceInternal) $r4;

        $r5 = r0.<com.android.server.telecom.TelecomLoaderService: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("telecom");

        $r7 = (android.telecom.TelecomManager) $r6;

        r2 = virtualinvoke $r7.<android.telecom.TelecomManager: android.telecom.PhoneAccountHandle getSimCallManager(int)>(i0);

        if r2 == null goto label1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updating sim call manager permissions for userId:");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("TelecomLoaderService", $r11);

        $r12 = virtualinvoke r2.<android.telecom.PhoneAccountHandle: android.content.ComponentName getComponentName()>();

        $r13 = virtualinvoke $r12.<android.content.ComponentName: java.lang.String getPackageName()>();

        virtualinvoke r1.<com.android.server.pm.permission.PermissionManagerServiceInternal: void grantDefaultPermissionsToDefaultSimCallManager(java.lang.String,int)>($r13, i0);

     label1:
        return;
    }

    public void lambda$registerDefaultAppNotifier$3$TelecomLoaderService(java.lang.String, android.os.UserHandle)
    {
        com.android.server.telecom.TelecomLoaderService r0;
        java.lang.String r1;
        android.os.UserHandle r2;
        int $i0;

        r0 := @this: com.android.server.telecom.TelecomLoaderService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.UserHandle;

        $i0 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        specialinvoke r0.<com.android.server.telecom.TelecomLoaderService: void updateSimCallManagerPermissions(int)>($i0);

        return;
    }

    public java.lang.String[] lambda$registerDefaultAppProviders$0$TelecomLoaderService(int)
    {
        com.android.server.telecom.TelecomLoaderService r0;
        int i0;
        com.android.server.telecom.TelecomLoaderService$TelecomServiceConnection $r2;
        android.content.Context $r3;
        java.lang.String[] $r4;
        java.lang.String $r5;
        java.lang.Throwable $r6;
        java.lang.Object r7;
        android.content.ComponentName r8;

        r0 := @this: com.android.server.telecom.TelecomLoaderService;

        i0 := @parameter0: int;

        r7 = r0.<com.android.server.telecom.TelecomLoaderService: java.lang.Object mLock>;

        entermonitor r7;

     label1:
        $r2 = r0.<com.android.server.telecom.TelecomLoaderService: com.android.server.telecom.TelecomLoaderService$TelecomServiceConnection mServiceConnection>;

        if $r2 != null goto label3;

        exitmonitor r7;

     label2:
        return null;

     label3:
        exitmonitor r7;

     label4:
        $r3 = r0.<com.android.server.telecom.TelecomLoaderService: android.content.Context mContext>;

        r8 = staticinvoke <com.android.internal.telephony.SmsApplication: android.content.ComponentName getDefaultSmsApplication(android.content.Context,boolean)>($r3, 1);

        if r8 == null goto label5;

        $r4 = newarray (java.lang.String)[1];

        $r5 = virtualinvoke r8.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r4[0] = $r5;

        return $r4;

     label5:
        return null;

     label6:
        $r6 := @caughtexception;

     label7:
        exitmonitor r7;

     label8:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public java.lang.String[] lambda$registerDefaultAppProviders$1$TelecomLoaderService(int)
    {
        com.android.server.telecom.TelecomLoaderService r0;
        int i0;
        com.android.server.telecom.TelecomLoaderService$TelecomServiceConnection $r2;
        android.content.Context $r3;
        java.lang.String[] $r4;
        java.lang.Throwable $r5;
        java.lang.Object r6;
        java.lang.String r7;

        r0 := @this: com.android.server.telecom.TelecomLoaderService;

        i0 := @parameter0: int;

        r6 = r0.<com.android.server.telecom.TelecomLoaderService: java.lang.Object mLock>;

        entermonitor r6;

     label1:
        $r2 = r0.<com.android.server.telecom.TelecomLoaderService: com.android.server.telecom.TelecomLoaderService$TelecomServiceConnection mServiceConnection>;

        if $r2 != null goto label3;

        exitmonitor r6;

     label2:
        return null;

     label3:
        exitmonitor r6;

     label4:
        $r3 = r0.<com.android.server.telecom.TelecomLoaderService: android.content.Context mContext>;

        r7 = staticinvoke <android.telecom.DefaultDialerManager: java.lang.String getDefaultDialerApplication(android.content.Context)>($r3);

        if r7 == null goto label5;

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = r7;

        return $r4;

     label5:
        return null;

     label6:
        $r5 := @caughtexception;

     label7:
        exitmonitor r6;

     label8:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public java.lang.String[] lambda$registerDefaultAppProviders$2$TelecomLoaderService(int)
    {
        com.android.server.telecom.TelecomLoaderService r0;
        int i0;
        com.android.server.telecom.TelecomLoaderService$TelecomServiceConnection $r1;
        android.content.Context $r2;
        java.lang.Object $r3, r11;
        android.telecom.TelecomManager $r4;
        java.lang.String[] $r5;
        android.content.ComponentName $r6;
        java.lang.String $r7;
        android.util.IntArray $r8, $r9, r12;
        java.lang.Throwable $r10;
        android.telecom.PhoneAccountHandle r13;

        r0 := @this: com.android.server.telecom.TelecomLoaderService;

        i0 := @parameter0: int;

        r11 = r0.<com.android.server.telecom.TelecomLoaderService: java.lang.Object mLock>;

        entermonitor r11;

     label1:
        $r1 = r0.<com.android.server.telecom.TelecomLoaderService: com.android.server.telecom.TelecomLoaderService$TelecomServiceConnection mServiceConnection>;

        if $r1 != null goto label4;

        $r8 = r0.<com.android.server.telecom.TelecomLoaderService: android.util.IntArray mDefaultSimCallManagerRequests>;

        if $r8 != null goto label2;

        r12 = new android.util.IntArray;

        specialinvoke r12.<android.util.IntArray: void <init>()>();

        r0.<com.android.server.telecom.TelecomLoaderService: android.util.IntArray mDefaultSimCallManagerRequests> = r12;

     label2:
        $r9 = r0.<com.android.server.telecom.TelecomLoaderService: android.util.IntArray mDefaultSimCallManagerRequests>;

        virtualinvoke $r9.<android.util.IntArray: void add(int)>(i0);

        exitmonitor r11;

     label3:
        return null;

     label4:
        exitmonitor r11;

     label5:
        $r2 = r0.<com.android.server.telecom.TelecomLoaderService: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("telecom");

        $r4 = (android.telecom.TelecomManager) $r3;

        r13 = virtualinvoke $r4.<android.telecom.TelecomManager: android.telecom.PhoneAccountHandle getSimCallManager(int)>(i0);

        if r13 == null goto label6;

        $r5 = newarray (java.lang.String)[1];

        $r6 = virtualinvoke r13.<android.telecom.PhoneAccountHandle: android.content.ComponentName getComponentName()>();

        $r7 = virtualinvoke $r6.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r5[0] = $r7;

        return $r5;

     label6:
        return null;

     label7:
        $r10 := @caughtexception;

     label8:
        exitmonitor r11;

     label9:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void onBootPhase(int)
    {
        com.android.server.telecom.TelecomLoaderService r0;
        int i0;

        r0 := @this: com.android.server.telecom.TelecomLoaderService;

        i0 := @parameter0: int;

        if i0 != 550 goto label1;

        specialinvoke r0.<com.android.server.telecom.TelecomLoaderService: void registerDefaultAppNotifier()>();

        specialinvoke r0.<com.android.server.telecom.TelecomLoaderService: void registerCarrierConfigChangedReceiver()>();

        specialinvoke r0.<com.android.server.telecom.TelecomLoaderService: void connectToTelecom()>();

     label1:
        return;
    }

    public void onStart()
    {
        com.android.server.telecom.TelecomLoaderService r0;

        r0 := @this: com.android.server.telecom.TelecomLoaderService;

        return;
    }
}
