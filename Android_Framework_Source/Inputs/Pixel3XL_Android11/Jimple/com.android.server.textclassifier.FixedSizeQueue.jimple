public final class com.android.server.textclassifier.FixedSizeQueue extends java.lang.Object
{
    private final java.util.Queue mDelegate;
    private final int mMaxSize;
    private final com.android.server.textclassifier.FixedSizeQueue$OnEntryEvictedListener mOnEntryEvictedListener;

    public void <init>(int, com.android.server.textclassifier.FixedSizeQueue$OnEntryEvictedListener)
    {
        com.android.server.textclassifier.FixedSizeQueue r0;
        int i0;
        com.android.server.textclassifier.FixedSizeQueue$OnEntryEvictedListener r1;
        java.lang.Object[] $r2;
        java.lang.Integer $r3;
        java.util.ArrayDeque $r4;
        boolean z0;

        r0 := @this: com.android.server.textclassifier.FixedSizeQueue;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.textclassifier.FixedSizeQueue$OnEntryEvictedListener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 <= 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2[0] = $r3;

        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>(z0, "maxSize (%s) must > 0", $r2);

        $r4 = new java.util.ArrayDeque;

        specialinvoke $r4.<java.util.ArrayDeque: void <init>(int)>(i0);

        r0.<com.android.server.textclassifier.FixedSizeQueue: java.util.Queue mDelegate> = $r4;

        r0.<com.android.server.textclassifier.FixedSizeQueue: int mMaxSize> = i0;

        r0.<com.android.server.textclassifier.FixedSizeQueue: com.android.server.textclassifier.FixedSizeQueue$OnEntryEvictedListener mOnEntryEvictedListener> = r1;

        return;
    }

    public boolean add(java.lang.Object)
    {
        com.android.server.textclassifier.FixedSizeQueue r0;
        java.lang.Object r1, r2;
        com.android.server.textclassifier.FixedSizeQueue$OnEntryEvictedListener r3;
        int $i0, $i1;
        java.util.Queue $r5, $r6;

        r0 := @this: com.android.server.textclassifier.FixedSizeQueue;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $i0 = virtualinvoke r0.<com.android.server.textclassifier.FixedSizeQueue: int size()>();

        $i1 = r0.<com.android.server.textclassifier.FixedSizeQueue: int mMaxSize>;

        if $i0 != $i1 goto label1;

        $r5 = r0.<com.android.server.textclassifier.FixedSizeQueue: java.util.Queue mDelegate>;

        r2 = interfaceinvoke $r5.<java.util.Queue: java.lang.Object remove()>();

        r3 = r0.<com.android.server.textclassifier.FixedSizeQueue: com.android.server.textclassifier.FixedSizeQueue$OnEntryEvictedListener mOnEntryEvictedListener>;

        if r3 == null goto label1;

        interfaceinvoke r3.<com.android.server.textclassifier.FixedSizeQueue$OnEntryEvictedListener: void onEntryEvicted(java.lang.Object)>(r2);

     label1:
        $r6 = r0.<com.android.server.textclassifier.FixedSizeQueue: java.util.Queue mDelegate>;

        interfaceinvoke $r6.<java.util.Queue: boolean add(java.lang.Object)>(r1);

        return 1;
    }

    public boolean isEmpty()
    {
        com.android.server.textclassifier.FixedSizeQueue r0;
        java.util.Queue $r1;
        boolean $z0;

        r0 := @this: com.android.server.textclassifier.FixedSizeQueue;

        $r1 = r0.<com.android.server.textclassifier.FixedSizeQueue: java.util.Queue mDelegate>;

        $z0 = interfaceinvoke $r1.<java.util.Queue: boolean isEmpty()>();

        return $z0;
    }

    public java.lang.Object poll()
    {
        com.android.server.textclassifier.FixedSizeQueue r0;
        java.util.Queue $r1;
        java.lang.Object $r2;

        r0 := @this: com.android.server.textclassifier.FixedSizeQueue;

        $r1 = r0.<com.android.server.textclassifier.FixedSizeQueue: java.util.Queue mDelegate>;

        $r2 = interfaceinvoke $r1.<java.util.Queue: java.lang.Object poll()>();

        return $r2;
    }

    public boolean remove(java.lang.Object)
    {
        com.android.server.textclassifier.FixedSizeQueue r0;
        java.lang.Object r1;
        java.util.Queue $r3;
        boolean $z0;

        r0 := @this: com.android.server.textclassifier.FixedSizeQueue;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = r0.<com.android.server.textclassifier.FixedSizeQueue: java.util.Queue mDelegate>;

        $z0 = interfaceinvoke $r3.<java.util.Queue: boolean remove(java.lang.Object)>(r1);

        return $z0;
    }

    public int size()
    {
        com.android.server.textclassifier.FixedSizeQueue r0;
        java.util.Queue $r1;
        int $i0;

        r0 := @this: com.android.server.textclassifier.FixedSizeQueue;

        $r1 = r0.<com.android.server.textclassifier.FixedSizeQueue: java.util.Queue mDelegate>;

        $i0 = interfaceinvoke $r1.<java.util.Queue: int size()>();

        return $i0;
    }
}
