final class com.android.server.textclassifier.TextClassificationManagerService$CallbackWrapper extends android.service.textclassifier.ITextClassifierCallback$Stub
{
    private final android.service.textclassifier.ITextClassifierCallback mWrapped;

    void <init>(android.service.textclassifier.ITextClassifierCallback)
    {
        com.android.server.textclassifier.TextClassificationManagerService$CallbackWrapper r0;
        android.service.textclassifier.ITextClassifierCallback r1, $r3;

        r0 := @this: com.android.server.textclassifier.TextClassificationManagerService$CallbackWrapper;

        r1 := @parameter0: android.service.textclassifier.ITextClassifierCallback;

        specialinvoke r0.<android.service.textclassifier.ITextClassifierCallback$Stub: void <init>()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = (android.service.textclassifier.ITextClassifierCallback) r1;

        r0.<com.android.server.textclassifier.TextClassificationManagerService$CallbackWrapper: android.service.textclassifier.ITextClassifierCallback mWrapped> = $r3;

        return;
    }

    private static android.graphics.drawable.Icon changeIcon(android.graphics.drawable.Icon)
    {
        android.graphics.drawable.Icon r0, $r4;
        com.android.server.textclassifier.IconsUriHelper $r1;
        java.lang.String $r2;
        int $i0;
        android.net.Uri $r3;

        r0 := @parameter0: android.graphics.drawable.Icon;

        $r1 = staticinvoke <com.android.server.textclassifier.IconsUriHelper: com.android.server.textclassifier.IconsUriHelper getInstance()>();

        $r2 = virtualinvoke r0.<android.graphics.drawable.Icon: java.lang.String getResPackage()>();

        $i0 = virtualinvoke r0.<android.graphics.drawable.Icon: int getResId()>();

        $r3 = virtualinvoke $r1.<com.android.server.textclassifier.IconsUriHelper: android.net.Uri getContentUri(java.lang.String,int)>($r2, $i0);

        $r4 = staticinvoke <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(android.net.Uri)>($r3);

        return $r4;
    }

    private static void rewriteConversationActionsIcons(android.os.Bundle)
    {
        android.os.Bundle r0;
        android.view.textclassifier.ConversationActions r1, $r6;
        java.util.List r2;
        int i0, i1;
        android.os.Parcelable $r4;
        java.util.ArrayList $r5;
        java.lang.String $r7;
        java.lang.Object $r8;
        android.app.RemoteAction $r9, $r11, $r12;
        boolean $z0, z2;
        android.view.textclassifier.ConversationAction$Builder $r10, $r13;
        android.view.textclassifier.ConversationAction r14;

        r0 := @parameter0: android.os.Bundle;

        $r4 = staticinvoke <android.service.textclassifier.TextClassifierService: android.os.Parcelable getResponse(android.os.Bundle)>(r0);

        r1 = (android.view.textclassifier.ConversationActions) $r4;

        z2 = 0;

        r2 = virtualinvoke r1.<android.view.textclassifier.ConversationActions: java.util.List getConversationActions()>();

        i0 = interfaceinvoke r2.<java.util.List: int size()>();

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>(i0);

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r8 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        r14 = (android.view.textclassifier.ConversationAction) $r8;

        $r9 = virtualinvoke r14.<android.view.textclassifier.ConversationAction: android.app.RemoteAction getAction()>();

        $z0 = staticinvoke <com.android.server.textclassifier.TextClassificationManagerService$CallbackWrapper: boolean shouldRewriteIcon(android.app.RemoteAction)>($r9);

        if $z0 == 0 goto label2;

        z2 = 1;

        $r10 = virtualinvoke r14.<android.view.textclassifier.ConversationAction: android.view.textclassifier.ConversationAction$Builder toBuilder()>();

        $r11 = virtualinvoke r14.<android.view.textclassifier.ConversationAction: android.app.RemoteAction getAction()>();

        $r12 = staticinvoke <com.android.server.textclassifier.TextClassificationManagerService$CallbackWrapper: android.app.RemoteAction validAction(android.app.RemoteAction)>($r11);

        $r13 = virtualinvoke $r10.<android.view.textclassifier.ConversationAction$Builder: android.view.textclassifier.ConversationAction$Builder setAction(android.app.RemoteAction)>($r12);

        r14 = virtualinvoke $r13.<android.view.textclassifier.ConversationAction$Builder: android.view.textclassifier.ConversationAction build()>();

        goto label2;

     label2:
        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r14);

        i1 = i1 + 1;

        goto label1;

     label3:
        if z2 == 0 goto label4;

        $r6 = new android.view.textclassifier.ConversationActions;

        $r7 = virtualinvoke r1.<android.view.textclassifier.ConversationActions: java.lang.String getId()>();

        specialinvoke $r6.<android.view.textclassifier.ConversationActions: void <init>(java.util.List,java.lang.String)>($r5, $r7);

        staticinvoke <android.service.textclassifier.TextClassifierService: void putResponse(android.os.Bundle,android.os.Parcelable)>(r0, $r6);

     label4:
        return;
    }

    private static void rewriteTextClassificationIcons(android.os.Bundle)
    {
        android.os.Bundle r0;
        android.view.textclassifier.TextClassification r1, $r9;
        java.util.List r2;
        int i0, i1;
        android.os.Parcelable $r4;
        java.util.ArrayList $r5;
        android.view.textclassifier.TextClassification$Builder $r6, $r7, $r8;
        java.lang.Object $r10;
        boolean $z0, z2;
        android.app.RemoteAction r11;

        r0 := @parameter0: android.os.Bundle;

        $r4 = staticinvoke <android.service.textclassifier.TextClassifierService: android.os.Parcelable getResponse(android.os.Bundle)>(r0);

        r1 = (android.view.textclassifier.TextClassification) $r4;

        z2 = 0;

        r2 = virtualinvoke r1.<android.view.textclassifier.TextClassification: java.util.List getActions()>();

        i0 = interfaceinvoke r2.<java.util.List: int size()>();

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>(i0);

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r10 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        r11 = (android.app.RemoteAction) $r10;

        $z0 = staticinvoke <com.android.server.textclassifier.TextClassificationManagerService$CallbackWrapper: boolean shouldRewriteIcon(android.app.RemoteAction)>(r11);

        if $z0 == 0 goto label2;

        z2 = 1;

        r11 = staticinvoke <com.android.server.textclassifier.TextClassificationManagerService$CallbackWrapper: android.app.RemoteAction validAction(android.app.RemoteAction)>(r11);

        goto label2;

     label2:
        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r11);

        i1 = i1 + 1;

        goto label1;

     label3:
        if z2 == 0 goto label4;

        $r6 = virtualinvoke r1.<android.view.textclassifier.TextClassification: android.view.textclassifier.TextClassification$Builder toBuilder()>();

        $r7 = virtualinvoke $r6.<android.view.textclassifier.TextClassification$Builder: android.view.textclassifier.TextClassification$Builder clearActions()>();

        $r8 = virtualinvoke $r7.<android.view.textclassifier.TextClassification$Builder: android.view.textclassifier.TextClassification$Builder addActions(java.util.Collection)>($r5);

        $r9 = virtualinvoke $r8.<android.view.textclassifier.TextClassification$Builder: android.view.textclassifier.TextClassification build()>();

        staticinvoke <android.service.textclassifier.TextClassifierService: void putResponse(android.os.Bundle,android.os.Parcelable)>(r0, $r9);

     label4:
        return;
    }

    private static boolean shouldRewriteIcon(android.app.RemoteAction)
    {
        android.app.RemoteAction r0;
        android.graphics.drawable.Icon $r1;
        int $i0;
        boolean z0;

        r0 := @parameter0: android.app.RemoteAction;

        if r0 == null goto label1;

        $r1 = virtualinvoke r0.<android.app.RemoteAction: android.graphics.drawable.Icon getIcon()>();

        $i0 = virtualinvoke $r1.<android.graphics.drawable.Icon: int getType()>();

        if $i0 != 2 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private static android.app.RemoteAction validAction(android.app.RemoteAction)
    {
        android.app.RemoteAction r0, $r2;
        android.graphics.drawable.Icon $r3, $r4;
        java.lang.CharSequence $r5, $r6;
        android.app.PendingIntent $r7;
        boolean $z0, $z1;

        r0 := @parameter0: android.app.RemoteAction;

        $r2 = new android.app.RemoteAction;

        $r3 = virtualinvoke r0.<android.app.RemoteAction: android.graphics.drawable.Icon getIcon()>();

        $r4 = staticinvoke <com.android.server.textclassifier.TextClassificationManagerService$CallbackWrapper: android.graphics.drawable.Icon changeIcon(android.graphics.drawable.Icon)>($r3);

        $r5 = virtualinvoke r0.<android.app.RemoteAction: java.lang.CharSequence getTitle()>();

        $r6 = virtualinvoke r0.<android.app.RemoteAction: java.lang.CharSequence getContentDescription()>();

        $r7 = virtualinvoke r0.<android.app.RemoteAction: android.app.PendingIntent getActionIntent()>();

        specialinvoke $r2.<android.app.RemoteAction: void <init>(android.graphics.drawable.Icon,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>($r4, $r5, $r6, $r7);

        $z0 = virtualinvoke r0.<android.app.RemoteAction: boolean isEnabled()>();

        virtualinvoke $r2.<android.app.RemoteAction: void setEnabled(boolean)>($z0);

        $z1 = virtualinvoke r0.<android.app.RemoteAction: boolean shouldShowIcon()>();

        virtualinvoke $r2.<android.app.RemoteAction: void setShouldShowIcon(boolean)>($z1);

        return $r2;
    }

    public void onFailure()
    {
        com.android.server.textclassifier.TextClassificationManagerService$CallbackWrapper r0;
        android.service.textclassifier.ITextClassifierCallback $r2;
        android.os.RemoteException $r3;

        r0 := @this: com.android.server.textclassifier.TextClassificationManagerService$CallbackWrapper;

     label1:
        $r2 = r0.<com.android.server.textclassifier.TextClassificationManagerService$CallbackWrapper: android.service.textclassifier.ITextClassifierCallback mWrapped>;

        interfaceinvoke $r2.<android.service.textclassifier.ITextClassifierCallback: void onFailure()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TextClassificationManagerService", "Callback error", $r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onSuccess(android.os.Bundle)
    {
        com.android.server.textclassifier.TextClassificationManagerService$CallbackWrapper r0;
        android.os.Parcelable r1;
        boolean $z0, $z1;
        android.os.RemoteException $r2;
        android.os.Bundle r3;
        android.service.textclassifier.ITextClassifierCallback $r4;

        r0 := @this: com.android.server.textclassifier.TextClassificationManagerService$CallbackWrapper;

        r3 := @parameter0: android.os.Bundle;

        r1 = staticinvoke <android.service.textclassifier.TextClassifierService: android.os.Parcelable getResponse(android.os.Bundle)>(r3);

        $z0 = r1 instanceof android.view.textclassifier.TextClassification;

        if $z0 == 0 goto label1;

        staticinvoke <com.android.server.textclassifier.TextClassificationManagerService$CallbackWrapper: void rewriteTextClassificationIcons(android.os.Bundle)>(r3);

        goto label2;

     label1:
        $z1 = r1 instanceof android.view.textclassifier.ConversationActions;

        if $z1 == 0 goto label2;

        staticinvoke <com.android.server.textclassifier.TextClassificationManagerService$CallbackWrapper: void rewriteConversationActionsIcons(android.os.Bundle)>(r3);

     label2:
        $r4 = r0.<com.android.server.textclassifier.TextClassificationManagerService$CallbackWrapper: android.service.textclassifier.ITextClassifierCallback mWrapped>;

        interfaceinvoke $r4.<android.service.textclassifier.ITextClassifierCallback: void onSuccess(android.os.Bundle)>(r3);

     label3:
        goto label5;

     label4:
        $r2 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TextClassificationManagerService", "Callback error", $r2);

     label5:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }
}
