public class com.android.server.textservices.TextServicesManagerService extends com.android.internal.textservice.ITextServicesManager$Stub
{
    private static final boolean DBG;
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private final java.lang.Object mLock;
    private final com.android.server.textservices.TextServicesManagerService$TextServicesMonitor mMonitor;
    private final android.util.SparseArray mUserData;
    private final android.os.UserManager mUserManager;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <com.android.server.textservices.TextServicesManagerService: boolean DBG> = 0;

        $r0 = class "Lcom/android/server/textservices/TextServicesManagerService;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.server.textservices.TextServicesManagerService: java.lang.String TAG> = $r1;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.server.textservices.TextServicesManagerService r0;
        android.content.Context r1;
        android.util.SparseArray $r3;
        java.lang.Object $r4, $r5;
        android.os.UserManager $r6;
        com.android.server.textservices.TextServicesManagerService$TextServicesMonitor $r7;
        android.os.UserHandle $r8;

        r0 := @this: com.android.server.textservices.TextServicesManagerService;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.internal.textservice.ITextServicesManager$Stub: void <init>()>();

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.textservices.TextServicesManagerService: android.util.SparseArray mUserData> = $r3;

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        r0.<com.android.server.textservices.TextServicesManagerService: java.lang.Object mLock> = $r4;

        r0.<com.android.server.textservices.TextServicesManagerService: android.content.Context mContext> = r1;

        $r5 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/os/UserManager;");

        $r6 = (android.os.UserManager) $r5;

        r0.<com.android.server.textservices.TextServicesManagerService: android.os.UserManager mUserManager> = $r6;

        $r7 = new com.android.server.textservices.TextServicesManagerService$TextServicesMonitor;

        specialinvoke $r7.<com.android.server.textservices.TextServicesManagerService$TextServicesMonitor: void <init>(com.android.server.textservices.TextServicesManagerService,com.android.server.textservices.TextServicesManagerService$1)>(r0, null);

        r0.<com.android.server.textservices.TextServicesManagerService: com.android.server.textservices.TextServicesManagerService$TextServicesMonitor mMonitor> = $r7;

        $r8 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r7.<com.android.server.textservices.TextServicesManagerService$TextServicesMonitor: void register(android.content.Context,android.os.Looper,android.os.UserHandle,boolean)>(r1, null, $r8, 1);

        return;
    }

    static java.lang.String access$000()
    {
        java.lang.String $r0;

        $r0 = <com.android.server.textservices.TextServicesManagerService: java.lang.String TAG>;

        return $r0;
    }

    static java.lang.Object access$1200(com.android.server.textservices.TextServicesManagerService)
    {
        com.android.server.textservices.TextServicesManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.textservices.TextServicesManagerService;

        $r1 = r0.<com.android.server.textservices.TextServicesManagerService: java.lang.Object mLock>;

        return $r1;
    }

    static android.util.SparseArray access$1300(com.android.server.textservices.TextServicesManagerService)
    {
        com.android.server.textservices.TextServicesManagerService r0;
        android.util.SparseArray $r1;

        r0 := @parameter0: com.android.server.textservices.TextServicesManagerService;

        $r1 = r0.<com.android.server.textservices.TextServicesManagerService: android.util.SparseArray mUserData>;

        return $r1;
    }

    static android.view.textservice.SpellCheckerInfo access$1400(com.android.server.textservices.TextServicesManagerService, java.lang.String, com.android.server.textservices.TextServicesManagerService$TextServicesData)
    {
        com.android.server.textservices.TextServicesManagerService r0;
        java.lang.String r1;
        com.android.server.textservices.TextServicesManagerService$TextServicesData r2;
        android.view.textservice.SpellCheckerInfo $r3;

        r0 := @parameter0: com.android.server.textservices.TextServicesManagerService;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.android.server.textservices.TextServicesManagerService$TextServicesData;

        $r3 = specialinvoke r0.<com.android.server.textservices.TextServicesManagerService: android.view.textservice.SpellCheckerInfo findAvailSystemSpellCheckerLocked(java.lang.String,com.android.server.textservices.TextServicesManagerService$TextServicesData)>(r1, r2);

        return $r3;
    }

    static void access$1500(com.android.server.textservices.TextServicesManagerService, android.view.textservice.SpellCheckerInfo, com.android.server.textservices.TextServicesManagerService$TextServicesData)
    {
        com.android.server.textservices.TextServicesManagerService r0;
        android.view.textservice.SpellCheckerInfo r1;
        com.android.server.textservices.TextServicesManagerService$TextServicesData r2;

        r0 := @parameter0: com.android.server.textservices.TextServicesManagerService;

        r1 := @parameter1: android.view.textservice.SpellCheckerInfo;

        r2 := @parameter2: com.android.server.textservices.TextServicesManagerService$TextServicesData;

        specialinvoke r0.<com.android.server.textservices.TextServicesManagerService: void setCurrentSpellCheckerLocked(android.view.textservice.SpellCheckerInfo,com.android.server.textservices.TextServicesManagerService$TextServicesData)>(r1, r2);

        return;
    }

    static android.content.Context access$2300(com.android.server.textservices.TextServicesManagerService)
    {
        com.android.server.textservices.TextServicesManagerService r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.server.textservices.TextServicesManagerService;

        $r1 = r0.<com.android.server.textservices.TextServicesManagerService: android.content.Context mContext>;

        return $r1;
    }

    static android.view.textservice.SpellCheckerInfo access$900(com.android.server.textservices.TextServicesManagerService, int)
    {
        com.android.server.textservices.TextServicesManagerService r0;
        int i0;
        android.view.textservice.SpellCheckerInfo $r1;

        r0 := @parameter0: com.android.server.textservices.TextServicesManagerService;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.server.textservices.TextServicesManagerService: android.view.textservice.SpellCheckerInfo getCurrentSpellCheckerForUser(int)>(i0);

        return $r1;
    }

    private boolean bindCurrentSpellCheckerService(android.content.Intent, android.content.ServiceConnection, int, int)
    {
        com.android.server.textservices.TextServicesManagerService r0;
        android.content.Intent r1;
        android.content.ServiceConnection r2;
        int i0, i1;
        java.lang.String r3, $r12;
        java.lang.StringBuilder $r5;
        android.content.Context $r13;
        android.os.UserHandle $r14;
        boolean $z0;

        r0 := @this: com.android.server.textservices.TextServicesManagerService;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: android.content.ServiceConnection;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        if r1 == null goto label2;

        if r2 != null goto label1;

        goto label2;

     label1:
        $r13 = r0.<com.android.server.textservices.TextServicesManagerService: android.content.Context mContext>;

        $r14 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>(i1);

        $z0 = virtualinvoke $r13.<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>(r1, r2, i0, $r14);

        return $z0;

     label2:
        r3 = <com.android.server.textservices.TextServicesManagerService: java.lang.String TAG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--- bind failed: service = ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", conn = ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", userId =");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r12 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>(r3, $r12);

        return 0;
    }

    private android.view.textservice.SpellCheckerInfo findAvailSystemSpellCheckerLocked(java.lang.String, com.android.server.textservices.TextServicesManagerService$TextServicesData)
    {
        com.android.server.textservices.TextServicesManagerService r0;
        int i0, i1, i2, $i5, $i6, i7, i8, i9, i10;
        java.util.ArrayList r2, $r3, $r4;
        boolean $z0, $z1, $z2;
        android.content.Context $r5;
        android.content.res.Resources $r6;
        android.content.res.Configuration $r7;
        java.lang.Object $r8, $r11, $r12, $r15, $r18;
        android.view.textservice.SpellCheckerInfo $r9, r24, r25, r28;
        java.lang.String $r10, $r13, $r16, $r17, r21;
        java.util.Locale $r14, r26, r27;
        android.content.pm.ServiceInfo $r19;
        android.content.pm.ApplicationInfo $r20;
        com.android.server.textservices.TextServicesManagerService$TextServicesData r22;
        java.util.Iterator r23;
        android.view.textservice.SpellCheckerSubtype r29;

        r0 := @this: com.android.server.textservices.TextServicesManagerService;

        r21 := @parameter0: java.lang.String;

        r22 := @parameter1: com.android.server.textservices.TextServicesManagerService$TextServicesData;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = staticinvoke <com.android.server.textservices.TextServicesManagerService$TextServicesData: java.util.ArrayList access$1700(com.android.server.textservices.TextServicesManagerService$TextServicesData)>(r22);

        r23 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r18 = interfaceinvoke r23.<java.util.Iterator: java.lang.Object next()>();

        r24 = (android.view.textservice.SpellCheckerInfo) $r18;

        $r19 = virtualinvoke r24.<android.view.textservice.SpellCheckerInfo: android.content.pm.ServiceInfo getServiceInfo()>();

        $r20 = $r19.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i5 = $r20.<android.content.pm.ApplicationInfo: int flags>;

        $i6 = 1 & $i5;

        if $i6 == 0 goto label02;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r24);

     label02:
        goto label01;

     label03:
        i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i0 != 0 goto label04;

        $r17 = <com.android.server.textservices.TextServicesManagerService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r17, "no available spell checker services found");

        return null;

     label04:
        if r21 == null goto label07;

        i7 = 0;

     label05:
        if i7 >= i0 goto label07;

        $r15 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r25 = (android.view.textservice.SpellCheckerInfo) $r15;

        $r16 = virtualinvoke r25.<android.view.textservice.SpellCheckerInfo: java.lang.String getPackageName()>();

        $z2 = virtualinvoke r21.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z2 == 0 goto label06;

        return r25;

     label06:
        i7 = i7 + 1;

        goto label05;

     label07:
        $r5 = r0.<com.android.server.textservices.TextServicesManagerService: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.res.Resources getResources()>();

        $r7 = virtualinvoke $r6.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        r26 = $r7.<android.content.res.Configuration: java.util.Locale locale>;

        r2 = staticinvoke <com.android.server.textservices.LocaleUtils: java.util.ArrayList getSuitableLocalesForSpellChecker(java.util.Locale)>(r26);

        i1 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i8 = 0;

     label08:
        if i8 >= i1 goto label14;

        $r11 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        r27 = (java.util.Locale) $r11;

        i9 = 0;

     label09:
        if i9 >= i0 goto label13;

        $r12 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        r28 = (android.view.textservice.SpellCheckerInfo) $r12;

        i2 = virtualinvoke r28.<android.view.textservice.SpellCheckerInfo: int getSubtypeCount()>();

        i10 = 0;

     label10:
        if i10 >= i2 goto label12;

        r29 = virtualinvoke r28.<android.view.textservice.SpellCheckerInfo: android.view.textservice.SpellCheckerSubtype getSubtypeAt(int)>(i10);

        $r13 = virtualinvoke r29.<android.view.textservice.SpellCheckerSubtype: java.lang.String getLocale()>();

        $r14 = staticinvoke <com.android.internal.inputmethod.SubtypeLocaleUtils: java.util.Locale constructLocaleFromString(java.lang.String)>($r13);

        $z1 = virtualinvoke r27.<java.util.Locale: boolean equals(java.lang.Object)>($r14);

        if $z1 == 0 goto label11;

        return r28;

     label11:
        i10 = i10 + 1;

        goto label10;

     label12:
        i9 = i9 + 1;

        goto label09;

     label13:
        i8 = i8 + 1;

        goto label08;

     label14:
        if i0 <= 1 goto label15;

        $r10 = <com.android.server.textservices.TextServicesManagerService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r10, "more than one spell checker service found, picking first");

     label15:
        $r8 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r9 = (android.view.textservice.SpellCheckerInfo) $r8;

        return $r9;
    }

    private android.view.textservice.SpellCheckerInfo getCurrentSpellCheckerForUser(int)
    {
        com.android.server.textservices.TextServicesManagerService r0;
        int i0;
        java.lang.Object r1, $r3;
        android.util.SparseArray $r2;
        java.lang.Throwable $r4;
        com.android.server.textservices.TextServicesManagerService$TextServicesData r5;
        android.view.textservice.SpellCheckerInfo r6;

        r0 := @this: com.android.server.textservices.TextServicesManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.textservices.TextServicesManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.textservices.TextServicesManagerService: android.util.SparseArray mUserData>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (com.android.server.textservices.TextServicesManagerService$TextServicesData) $r3;

     label02:
        if r5 == null goto label05;

     label03:
        r6 = virtualinvoke r5.<com.android.server.textservices.TextServicesManagerService$TextServicesData: android.view.textservice.SpellCheckerInfo getCurrentSpellChecker()>();

     label04:
        goto label06;

     label05:
        r6 = null;

     label06:
        exitmonitor r1;

     label07:
        return r6;

     label08:
        $r4 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private com.android.server.textservices.TextServicesManagerService$TextServicesData getDataFromCallingUserIdLocked(int)
    {
        com.android.server.textservices.TextServicesManagerService r0;
        int i0;
        android.util.SparseArray $r1;
        java.lang.Object $r2;
        com.android.server.textservices.TextServicesManagerService$TextServicesData $r3;

        r0 := @this: com.android.server.textservices.TextServicesManagerService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.textservices.TextServicesManagerService: android.util.SparseArray mUserData>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r3 = (com.android.server.textservices.TextServicesManagerService$TextServicesData) $r2;

        return $r3;
    }

    private void initializeInternalStateLocked(int)
    {
        com.android.server.textservices.TextServicesManagerService r0;
        int i0;
        com.android.server.textservices.TextServicesManagerService$TextServicesData r1, $r6, r9;
        android.util.SparseArray $r2, $r8;
        java.lang.Object $r3;
        android.view.textservice.SpellCheckerInfo $r4, $r5;
        android.content.Context $r7;

        r0 := @this: com.android.server.textservices.TextServicesManagerService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.textservices.TextServicesManagerService: android.util.SparseArray mUserData>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.textservices.TextServicesManagerService$TextServicesData) $r3;

        r9 = r1;

        if r1 != null goto label1;

        $r6 = new com.android.server.textservices.TextServicesManagerService$TextServicesData;

        $r7 = r0.<com.android.server.textservices.TextServicesManagerService: android.content.Context mContext>;

        specialinvoke $r6.<com.android.server.textservices.TextServicesManagerService$TextServicesData: void <init>(int,android.content.Context)>(i0, $r7);

        r9 = $r6;

        $r8 = r0.<com.android.server.textservices.TextServicesManagerService: android.util.SparseArray mUserData>;

        virtualinvoke $r8.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r6);

     label1:
        staticinvoke <com.android.server.textservices.TextServicesManagerService$TextServicesData: void access$1100(com.android.server.textservices.TextServicesManagerService$TextServicesData)>(r9);

        $r4 = virtualinvoke r9.<com.android.server.textservices.TextServicesManagerService$TextServicesData: android.view.textservice.SpellCheckerInfo getCurrentSpellChecker()>();

        if $r4 != null goto label2;

        $r5 = specialinvoke r0.<com.android.server.textservices.TextServicesManagerService: android.view.textservice.SpellCheckerInfo findAvailSystemSpellCheckerLocked(java.lang.String,com.android.server.textservices.TextServicesManagerService$TextServicesData)>(null, r9);

        specialinvoke r0.<com.android.server.textservices.TextServicesManagerService: void setCurrentSpellCheckerLocked(android.view.textservice.SpellCheckerInfo,com.android.server.textservices.TextServicesManagerService$TextServicesData)>($r5, r9);

     label2:
        return;
    }

    private void setCurrentSpellCheckerLocked(android.view.textservice.SpellCheckerInfo, com.android.server.textservices.TextServicesManagerService$TextServicesData)
    {
        com.android.server.textservices.TextServicesManagerService r0;
        com.android.server.textservices.TextServicesManagerService$TextServicesData r1;
        long l0;
        java.lang.Throwable $r3;
        android.view.textservice.SpellCheckerInfo r4;

        r0 := @this: com.android.server.textservices.TextServicesManagerService;

        r4 := @parameter0: android.view.textservice.SpellCheckerInfo;

        r1 := @parameter1: com.android.server.textservices.TextServicesManagerService$TextServicesData;

        if r4 == null goto label1;

        virtualinvoke r4.<android.view.textservice.SpellCheckerInfo: java.lang.String getId()>();

        goto label1;

     label1:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        virtualinvoke r1.<com.android.server.textservices.TextServicesManagerService$TextServicesData: void setCurrentSpellChecker(android.view.textservice.SpellCheckerInfo)>(r4);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label4:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r3;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private com.android.server.textservices.TextServicesManagerService$SpellCheckerBindGroup startSpellCheckerServiceInnerLocked(android.view.textservice.SpellCheckerInfo, com.android.server.textservices.TextServicesManagerService$TextServicesData)
    {
        com.android.server.textservices.TextServicesManagerService r0;
        com.android.server.textservices.TextServicesManagerService$TextServicesData r1;
        java.lang.String r2, $r13;
        com.android.server.textservices.TextServicesManagerService$InternalServiceConnection $r5;
        java.util.HashMap $r6, $r11;
        android.content.Intent $r7;
        android.content.ComponentName $r8;
        int $i0;
        boolean $z0;
        com.android.server.textservices.TextServicesManagerService$SpellCheckerBindGroup $r10;
        android.view.textservice.SpellCheckerInfo r14;

        r0 := @this: com.android.server.textservices.TextServicesManagerService;

        r14 := @parameter0: android.view.textservice.SpellCheckerInfo;

        r1 := @parameter1: com.android.server.textservices.TextServicesManagerService$TextServicesData;

        r2 = virtualinvoke r14.<android.view.textservice.SpellCheckerInfo: java.lang.String getId()>();

        $r5 = new com.android.server.textservices.TextServicesManagerService$InternalServiceConnection;

        $r6 = staticinvoke <com.android.server.textservices.TextServicesManagerService$TextServicesData: java.util.HashMap access$1600(com.android.server.textservices.TextServicesManagerService$TextServicesData)>(r1);

        specialinvoke $r5.<com.android.server.textservices.TextServicesManagerService$InternalServiceConnection: void <init>(com.android.server.textservices.TextServicesManagerService,java.lang.String,java.util.HashMap)>(r0, r2, $r6);

        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>(java.lang.String)>("android.service.textservice.SpellCheckerService");

        $r8 = virtualinvoke r14.<android.view.textservice.SpellCheckerInfo: android.content.ComponentName getComponent()>();

        virtualinvoke $r7.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r8);

        $i0 = staticinvoke <com.android.server.textservices.TextServicesManagerService$TextServicesData: int access$1900(com.android.server.textservices.TextServicesManagerService$TextServicesData)>(r1);

        $z0 = specialinvoke r0.<com.android.server.textservices.TextServicesManagerService: boolean bindCurrentSpellCheckerService(android.content.Intent,android.content.ServiceConnection,int,int)>($r7, $r5, 8388609, $i0);

        if $z0 != 0 goto label1;

        $r13 = <com.android.server.textservices.TextServicesManagerService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r13, "Failed to get a spell checker service.");

        return null;

     label1:
        $r10 = new com.android.server.textservices.TextServicesManagerService$SpellCheckerBindGroup;

        specialinvoke $r10.<com.android.server.textservices.TextServicesManagerService$SpellCheckerBindGroup: void <init>(com.android.server.textservices.TextServicesManagerService,com.android.server.textservices.TextServicesManagerService$InternalServiceConnection)>(r0, $r5);

        $r11 = staticinvoke <com.android.server.textservices.TextServicesManagerService$TextServicesData: java.util.HashMap access$1600(com.android.server.textservices.TextServicesManagerService$TextServicesData)>(r1);

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r10);

        return $r10;
    }

    private void unbindServiceLocked(com.android.server.textservices.TextServicesManagerService$TextServicesData)
    {
        com.android.server.textservices.TextServicesManagerService r0;
        java.util.HashMap r1;
        java.util.Collection $r2;
        boolean $z0;
        java.lang.Object $r3;
        com.android.server.textservices.TextServicesManagerService$SpellCheckerBindGroup $r4;
        com.android.server.textservices.TextServicesManagerService$TextServicesData r5;
        java.util.Iterator r6;

        r0 := @this: com.android.server.textservices.TextServicesManagerService;

        r5 := @parameter0: com.android.server.textservices.TextServicesManagerService$TextServicesData;

        r1 = staticinvoke <com.android.server.textservices.TextServicesManagerService$TextServicesData: java.util.HashMap access$1600(com.android.server.textservices.TextServicesManagerService$TextServicesData)>(r5);

        $r2 = virtualinvoke r1.<java.util.HashMap: java.util.Collection values()>();

        r6 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.android.server.textservices.TextServicesManagerService$SpellCheckerBindGroup) $r3;

        virtualinvoke $r4.<com.android.server.textservices.TextServicesManagerService$SpellCheckerBindGroup: void removeAllLocked()>();

        goto label1;

     label2:
        virtualinvoke r1.<java.util.HashMap: void clear()>();

        return;
    }

    private void verifyUser(int)
    {
        com.android.server.textservices.TextServicesManagerService r0;
        int i0, i1;
        android.content.Context r1;
        java.lang.StringBuilder $r3;
        java.lang.String $r8;

        r0 := @this: com.android.server.textservices.TextServicesManagerService;

        i0 := @parameter0: int;

        i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        if i0 == i1 goto label1;

        r1 = r0.<com.android.server.textservices.TextServicesManagerService: android.content.Context mContext>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cross-user interaction requires INTERACT_ACROSS_USERS_FULL. userId=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" callingUserId=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL", $r8);

     label1:
        return;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.textservices.TextServicesManagerService r0;
        com.android.server.textservices.TextServicesManagerService$TextServicesData r1, $r7;
        int i0, $i1, $i2, $i3, i4, i5;
        java.lang.String $r2, $r8, $r9, $r17, $r18;
        android.content.Context $r3;
        boolean $z0, $z1, $z2;
        android.util.SparseArray $r4, $r5, $r12;
        java.lang.Object $r6, $r13, r24, r27;
        android.os.UserManager $r10;
        android.content.pm.UserInfo $r11;
        java.lang.Throwable $r19, $r20;
        java.io.FileDescriptor r21;
        java.io.PrintWriter r22;
        java.lang.String[] r23;
        java.lang.StringBuilder r25;

        r0 := @this: com.android.server.textservices.TextServicesManagerService;

        r21 := @parameter0: java.io.FileDescriptor;

        r22 := @parameter1: java.io.PrintWriter;

        r23 := @parameter2: java.lang.String[];

        $r3 = r0.<com.android.server.textservices.TextServicesManagerService: android.content.Context mContext>;

        $r2 = <com.android.server.textservices.TextServicesManagerService: java.lang.String TAG>;

        $z0 = staticinvoke <com.android.internal.util.DumpUtils: boolean checkDumpPermission(android.content.Context,java.lang.String,java.io.PrintWriter)>($r3, $r2, r22);

        if $z0 != 0 goto label01;

        return;

     label01:
        $i1 = lengthof r23;

        if $i1 == 0 goto label12;

        $i2 = lengthof r23;

        if $i2 != 1 goto label02;

        $r18 = r23[0];

        $z2 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>("-a");

        if $z2 == 0 goto label02;

        goto label12;

     label02:
        $i3 = lengthof r23;

        if $i3 != 2 goto label11;

        $r8 = r23[0];

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z1 != 0 goto label03;

        goto label11;

     label03:
        $r9 = r23[1];

        i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

        $r10 = r0.<com.android.server.textservices.TextServicesManagerService: android.os.UserManager mUserManager>;

        $r11 = virtualinvoke $r10.<android.os.UserManager: android.content.pm.UserInfo getUserInfo(int)>(i4);

        if $r11 != null goto label04;

        virtualinvoke r22.<java.io.PrintWriter: void println(java.lang.String)>("Non-existent user.");

        return;

     label04:
        $r12 = r0.<com.android.server.textservices.TextServicesManagerService: android.util.SparseArray mUserData>;

        $r13 = virtualinvoke $r12.<android.util.SparseArray: java.lang.Object get(int)>(i4);

        r1 = (com.android.server.textservices.TextServicesManagerService$TextServicesData) $r13;

        if r1 != null goto label05;

        virtualinvoke r22.<java.io.PrintWriter: void println(java.lang.String)>("User needs to unlock first.");

        return;

     label05:
        r24 = r0.<com.android.server.textservices.TextServicesManagerService: java.lang.Object mLock>;

        entermonitor r24;

     label06:
        virtualinvoke r22.<java.io.PrintWriter: void println(java.lang.String)>("Current Text Services Manager state:");

        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  User ");

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r17 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r22.<java.io.PrintWriter: void println(java.lang.String)>($r17);

        staticinvoke <com.android.server.textservices.TextServicesManagerService$TextServicesData: void access$2000(com.android.server.textservices.TextServicesManagerService$TextServicesData,java.io.PrintWriter)>(r1, r22);

        exitmonitor r24;

     label07:
        goto label19;

     label08:
        $r19 := @caughtexception;

     label09:
        exitmonitor r24;

     label10:
        throw $r19;

     label11:
        virtualinvoke r22.<java.io.PrintWriter: void println(java.lang.String)>("Invalid arguments to text services.");

        return;

     label12:
        r27 = r0.<com.android.server.textservices.TextServicesManagerService: java.lang.Object mLock>;

        entermonitor r27;

     label13:
        virtualinvoke r22.<java.io.PrintWriter: void println(java.lang.String)>("Current Text Services Manager state:");

        virtualinvoke r22.<java.io.PrintWriter: void println(java.lang.String)>("  Users:");

        $r4 = r0.<com.android.server.textservices.TextServicesManagerService: android.util.SparseArray mUserData>;

        i0 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

     label14:
        i5 = 0;

     label15:
        if i5 >= i0 goto label18;

     label16:
        $r5 = r0.<com.android.server.textservices.TextServicesManagerService: android.util.SparseArray mUserData>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i5);

        $r7 = (com.android.server.textservices.TextServicesManagerService$TextServicesData) $r6;

        staticinvoke <com.android.server.textservices.TextServicesManagerService$TextServicesData: void access$2000(com.android.server.textservices.TextServicesManagerService$TextServicesData,java.io.PrintWriter)>($r7, r22);

     label17:
        i5 = i5 + 1;

        goto label15;

     label18:
        exitmonitor r27;

     label19:
        return;

     label20:
        $r20 := @caughtexception;

     label21:
        exitmonitor r27;

     label22:
        throw $r20;

        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label13 to label14 with label20;
        catch java.lang.Throwable from label16 to label17 with label20;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label21 to label22 with label20;
    }

    public void finishSpellCheckerService(int, com.android.internal.textservice.ISpellCheckerSessionListener)
    {
        com.android.server.textservices.TextServicesManagerService r0;
        java.lang.Object r1, $r6, $r8;
        java.util.ArrayList r2;
        com.android.server.textservices.TextServicesManagerService$SpellCheckerBindGroup r3, $r7;
        int i0, i1, i2;
        java.util.HashMap $r4;
        java.util.Collection $r5;
        java.lang.Throwable $r9;
        com.android.internal.textservice.ISpellCheckerSessionListener r10;
        com.android.server.textservices.TextServicesManagerService$TextServicesData r11;
        java.util.Iterator r12;
        boolean $z1;

        r0 := @this: com.android.server.textservices.TextServicesManagerService;

        i1 := @parameter0: int;

        r10 := @parameter1: com.android.internal.textservice.ISpellCheckerSessionListener;

        specialinvoke r0.<com.android.server.textservices.TextServicesManagerService: void verifyUser(int)>(i1);

        r1 = r0.<com.android.server.textservices.TextServicesManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        r11 = specialinvoke r0.<com.android.server.textservices.TextServicesManagerService: com.android.server.textservices.TextServicesManagerService$TextServicesData getDataFromCallingUserIdLocked(int)>(i1);

     label02:
        if r11 != null goto label05;

     label03:
        exitmonitor r1;

     label04:
        return;

     label05:
        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

     label06:
        $r4 = staticinvoke <com.android.server.textservices.TextServicesManagerService$TextServicesData: java.util.HashMap access$1600(com.android.server.textservices.TextServicesManagerService$TextServicesData)>(r11);

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Collection values()>();

        r12 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label07:
        $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r8 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.textservices.TextServicesManagerService$SpellCheckerBindGroup) $r8;

     label08:
        if r3 != null goto label09;

        goto label07;

     label09:
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label10:
        goto label07;

     label11:
        i0 = virtualinvoke r2.<java.util.ArrayList: int size()>();

     label12:
        i2 = 0;

     label13:
        if i2 >= i0 goto label16;

     label14:
        $r6 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r7 = (com.android.server.textservices.TextServicesManagerService$SpellCheckerBindGroup) $r6;

        virtualinvoke $r7.<com.android.server.textservices.TextServicesManagerService$SpellCheckerBindGroup: void removeListener(com.android.internal.textservice.ISpellCheckerSessionListener)>(r10);

     label15:
        i2 = i2 + 1;

        goto label13;

     label16:
        exitmonitor r1;

     label17:
        return;

     label18:
        $r9 := @caughtexception;

     label19:
        exitmonitor r1;

     label20:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label05 to label06 with label18;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch java.lang.Throwable from label11 to label12 with label18;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
    }

    public android.view.textservice.SpellCheckerInfo getCurrentSpellChecker(int, java.lang.String)
    {
        com.android.server.textservices.TextServicesManagerService r0;
        int i0;
        java.lang.Throwable $r1;
        java.lang.String r2;
        java.lang.Object r3;
        com.android.server.textservices.TextServicesManagerService$TextServicesData r4;
        android.view.textservice.SpellCheckerInfo r5;

        r0 := @this: com.android.server.textservices.TextServicesManagerService;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.textservices.TextServicesManagerService: void verifyUser(int)>(i0);

        r3 = r0.<com.android.server.textservices.TextServicesManagerService: java.lang.Object mLock>;

        entermonitor r3;

     label1:
        r4 = specialinvoke r0.<com.android.server.textservices.TextServicesManagerService: com.android.server.textservices.TextServicesManagerService$TextServicesData getDataFromCallingUserIdLocked(int)>(i0);

     label2:
        if r4 != null goto label5;

     label3:
        exitmonitor r3;

     label4:
        return null;

     label5:
        r5 = virtualinvoke r4.<com.android.server.textservices.TextServicesManagerService$TextServicesData: android.view.textservice.SpellCheckerInfo getCurrentSpellChecker()>();

        exitmonitor r3;

     label6:
        return r5;

     label7:
        $r1 := @caughtexception;

     label8:
        exitmonitor r3;

     label9:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public android.view.textservice.SpellCheckerSubtype getCurrentSpellCheckerSubtype(int, boolean)
    {
        com.android.server.textservices.TextServicesManagerService r0;
        boolean z0, $z1, $z2;
        int i0, i1, $i2, $i3, $i4, i5, i6, i7;
        android.view.textservice.SpellCheckerInfo r1;
        java.util.Locale r2, r4;
        android.view.textservice.SpellCheckerSubtype r3, r13, r14, r15;
        android.content.Context $r5;
        android.content.res.Resources $r6;
        android.content.res.Configuration $r7;
        java.lang.String $r8, $r9;
        java.lang.Throwable $r10;
        java.lang.Object r11;
        com.android.server.textservices.TextServicesManagerService$TextServicesData r12;

        r0 := @this: com.android.server.textservices.TextServicesManagerService;

        i5 := @parameter0: int;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.server.textservices.TextServicesManagerService: void verifyUser(int)>(i5);

        r11 = r0.<com.android.server.textservices.TextServicesManagerService: java.lang.Object mLock>;

        entermonitor r11;

     label01:
        r12 = specialinvoke r0.<com.android.server.textservices.TextServicesManagerService: com.android.server.textservices.TextServicesManagerService$TextServicesData getDataFromCallingUserIdLocked(int)>(i5);

     label02:
        if r12 != null goto label05;

     label03:
        exitmonitor r11;

     label04:
        return null;

     label05:
        i0 = virtualinvoke r12.<com.android.server.textservices.TextServicesManagerService$TextServicesData: int getSelectedSpellCheckerSubtype(int)>(0);

        r1 = virtualinvoke r12.<com.android.server.textservices.TextServicesManagerService$TextServicesData: android.view.textservice.SpellCheckerInfo getCurrentSpellChecker()>();

        $r5 = r0.<com.android.server.textservices.TextServicesManagerService: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.res.Resources getResources()>();

        $r7 = virtualinvoke $r6.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        r2 = $r7.<android.content.res.Configuration: java.util.Locale locale>;

        exitmonitor r11;

     label06:
        if r1 == null goto label18;

        $i2 = virtualinvoke r1.<android.view.textservice.SpellCheckerInfo: int getSubtypeCount()>();

        if $i2 != 0 goto label07;

        goto label18;

     label07:
        if i0 != 0 goto label08;

        if z0 != 0 goto label08;

        return null;

     label08:
        i1 = virtualinvoke r1.<android.view.textservice.SpellCheckerInfo: int getSubtypeCount()>();

        if i0 == 0 goto label12;

        i6 = 0;

     label09:
        if i6 >= i1 goto label11;

        r13 = virtualinvoke r1.<android.view.textservice.SpellCheckerInfo: android.view.textservice.SpellCheckerSubtype getSubtypeAt(int)>(i6);

        $i4 = virtualinvoke r13.<android.view.textservice.SpellCheckerSubtype: int hashCode()>();

        if $i4 != i0 goto label10;

        return r13;

     label10:
        i6 = i6 + 1;

        goto label09;

     label11:
        return null;

     label12:
        if r2 != null goto label13;

        return null;

     label13:
        r14 = null;

        i7 = 0;

     label14:
        $i3 = virtualinvoke r1.<android.view.textservice.SpellCheckerInfo: int getSubtypeCount()>();

        if i7 >= $i3 goto label17;

        r3 = virtualinvoke r1.<android.view.textservice.SpellCheckerInfo: android.view.textservice.SpellCheckerSubtype getSubtypeAt(int)>(i7);

        r4 = virtualinvoke r3.<android.view.textservice.SpellCheckerSubtype: java.util.Locale getLocaleObject()>();

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r4, r2);

        if $z1 == 0 goto label15;

        return r3;

     label15:
        r15 = r14;

        if r14 != null goto label16;

        r15 = r14;

        if r4 == null goto label16;

        r15 = r14;

        $r8 = virtualinvoke r2.<java.util.Locale: java.lang.String getLanguage()>();

        $r9 = virtualinvoke r4.<java.util.Locale: java.lang.String getLanguage()>();

        $z2 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r8, $r9);

        if $z2 == 0 goto label16;

        r15 = r3;

     label16:
        i7 = i7 + 1;

        r14 = r15;

        goto label14;

     label17:
        return r14;

     label18:
        return null;

     label19:
        $r10 := @caughtexception;

     label20:
        exitmonitor r11;

     label21:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label05 to label06 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
    }

    public android.view.textservice.SpellCheckerInfo[] getEnabledSpellCheckers(int)
    {
        com.android.server.textservices.TextServicesManagerService r0;
        int i0, $i1;
        java.lang.Object r1;
        android.view.textservice.SpellCheckerInfo[] $r2, r7;
        java.lang.Object[] $r3;
        java.lang.Throwable $r4;
        com.android.server.textservices.TextServicesManagerService$TextServicesData r5;
        java.util.ArrayList r6;

        r0 := @this: com.android.server.textservices.TextServicesManagerService;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.textservices.TextServicesManagerService: void verifyUser(int)>(i0);

        r1 = r0.<com.android.server.textservices.TextServicesManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r5 = specialinvoke r0.<com.android.server.textservices.TextServicesManagerService: com.android.server.textservices.TextServicesManagerService$TextServicesData getDataFromCallingUserIdLocked(int)>(i0);

     label2:
        if r5 != null goto label5;

     label3:
        exitmonitor r1;

     label4:
        return null;

     label5:
        r6 = staticinvoke <com.android.server.textservices.TextServicesManagerService$TextServicesData: java.util.ArrayList access$1700(com.android.server.textservices.TextServicesManagerService$TextServicesData)>(r5);

        $i1 = virtualinvoke r6.<java.util.ArrayList: int size()>();

        $r2 = newarray (android.view.textservice.SpellCheckerInfo)[$i1];

        $r3 = virtualinvoke r6.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        r7 = (android.view.textservice.SpellCheckerInfo[]) $r3;

        exitmonitor r1;

     label6:
        return r7;

     label7:
        $r4 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void getSpellCheckerService(int, java.lang.String, java.lang.String, com.android.internal.textservice.ITextServicesSessionListener, com.android.internal.textservice.ISpellCheckerSessionListener, android.os.Bundle)
    {
        com.android.server.textservices.TextServicesManagerService r0;
        java.lang.String r1, r11, $r19;
        com.android.internal.textservice.ITextServicesSessionListener r2;
        com.android.internal.textservice.ISpellCheckerSessionListener r3;
        android.os.Bundle r4;
        java.lang.Object r5, $r6, $r8;
        long l0;
        boolean $z0, $z1;
        java.util.HashMap $r7, r13;
        java.lang.Throwable $r9, $r10;
        int i2, i3;
        com.android.server.textservices.TextServicesManagerService$TextServicesData r12;
        android.view.textservice.SpellCheckerInfo r14;
        com.android.server.textservices.TextServicesManagerService$SpellCheckerBindGroup r15;
        com.android.server.textservices.TextServicesManagerService$SessionRequest r17;

        r0 := @this: com.android.server.textservices.TextServicesManagerService;

        i2 := @parameter0: int;

        r11 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: com.android.internal.textservice.ITextServicesSessionListener;

        r3 := @parameter4: com.android.internal.textservice.ISpellCheckerSessionListener;

        r4 := @parameter5: android.os.Bundle;

        specialinvoke r0.<com.android.server.textservices.TextServicesManagerService: void verifyUser(int)>(i2);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r11);

        if $z0 != 0 goto label26;

        if r2 == null goto label26;

        if r3 != null goto label01;

        goto label26;

     label01:
        r5 = r0.<com.android.server.textservices.TextServicesManagerService: java.lang.Object mLock>;

        entermonitor r5;

     label02:
        r12 = specialinvoke r0.<com.android.server.textservices.TextServicesManagerService: com.android.server.textservices.TextServicesManagerService$TextServicesData getDataFromCallingUserIdLocked(int)>(i2);

     label03:
        if r12 != null goto label06;

     label04:
        exitmonitor r5;

     label05:
        return;

     label06:
        r13 = staticinvoke <com.android.server.textservices.TextServicesManagerService$TextServicesData: java.util.HashMap access$1800(com.android.server.textservices.TextServicesManagerService$TextServicesData)>(r12);

        $z1 = virtualinvoke r13.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r11);

        if $z1 != 0 goto label08;

        exitmonitor r5;

     label07:
        return;

     label08:
        $r6 = virtualinvoke r13.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r11);

        r14 = (android.view.textservice.SpellCheckerInfo) $r6;

     label09:
        $r7 = staticinvoke <com.android.server.textservices.TextServicesManagerService$TextServicesData: java.util.HashMap access$1600(com.android.server.textservices.TextServicesManagerService$TextServicesData)>(r12);

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r11);

        r15 = (com.android.server.textservices.TextServicesManagerService$SpellCheckerBindGroup) $r8;

        i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

     label10:
        if r15 != null goto label21;

     label11:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label12:
        r15 = specialinvoke r0.<com.android.server.textservices.TextServicesManagerService: com.android.server.textservices.TextServicesManagerService$SpellCheckerBindGroup startSpellCheckerServiceInnerLocked(android.view.textservice.SpellCheckerInfo,com.android.server.textservices.TextServicesManagerService$TextServicesData)>(r14, r12);

     label13:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label14:
        if r15 != null goto label17;

     label15:
        exitmonitor r5;

     label16:
        return;

     label17:
        goto label21;

     label18:
        $r10 := @caughtexception;

     label19:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label20:
        throw $r10;

     label21:
        r17 = new com.android.server.textservices.TextServicesManagerService$SessionRequest;

        specialinvoke r17.<com.android.server.textservices.TextServicesManagerService$SessionRequest: void <init>(int,java.lang.String,com.android.internal.textservice.ITextServicesSessionListener,com.android.internal.textservice.ISpellCheckerSessionListener,android.os.Bundle)>(i3, r1, r2, r3, r4);

        virtualinvoke r15.<com.android.server.textservices.TextServicesManagerService$SpellCheckerBindGroup: void getISpellCheckerSessionOrQueueLocked(com.android.server.textservices.TextServicesManagerService$SessionRequest)>(r17);

        exitmonitor r5;

     label22:
        return;

     label23:
        $r9 := @caughtexception;

     label24:
        exitmonitor r5;

     label25:
        throw $r9;

     label26:
        $r19 = <com.android.server.textservices.TextServicesManagerService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r19, "getSpellCheckerService: Invalid input.");

        return;

        catch java.lang.Throwable from label02 to label03 with label23;
        catch java.lang.Throwable from label04 to label05 with label23;
        catch java.lang.Throwable from label06 to label07 with label23;
        catch java.lang.Throwable from label08 to label09 with label23;
        catch java.lang.Throwable from label09 to label10 with label23;
        catch java.lang.Throwable from label11 to label12 with label23;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.lang.Throwable from label13 to label14 with label23;
        catch java.lang.Throwable from label15 to label16 with label23;
        catch java.lang.Throwable from label19 to label20 with label23;
        catch java.lang.Throwable from label20 to label21 with label23;
        catch java.lang.Throwable from label21 to label22 with label23;
        catch java.lang.Throwable from label24 to label25 with label23;
    }

    public boolean isSpellCheckerEnabled(int)
    {
        com.android.server.textservices.TextServicesManagerService r0;
        int i0;
        java.lang.Object r1;
        boolean z0;
        java.lang.Throwable $r2;
        com.android.server.textservices.TextServicesManagerService$TextServicesData r3;

        r0 := @this: com.android.server.textservices.TextServicesManagerService;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.textservices.TextServicesManagerService: void verifyUser(int)>(i0);

        r1 = r0.<com.android.server.textservices.TextServicesManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r3 = specialinvoke r0.<com.android.server.textservices.TextServicesManagerService: com.android.server.textservices.TextServicesManagerService$TextServicesData getDataFromCallingUserIdLocked(int)>(i0);

     label2:
        if r3 != null goto label5;

     label3:
        exitmonitor r1;

     label4:
        return 0;

     label5:
        z0 = virtualinvoke r3.<com.android.server.textservices.TextServicesManagerService$TextServicesData: boolean isSpellCheckerEnabled()>();

        exitmonitor r1;

     label6:
        return z0;

     label7:
        $r2 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    void onStopUser(int)
    {
        com.android.server.textservices.TextServicesManagerService r0;
        int i0;
        java.lang.Object r1, $r3;
        android.util.SparseArray $r2, $r4;
        java.lang.Throwable $r5;
        com.android.server.textservices.TextServicesManagerService$TextServicesData r6;

        r0 := @this: com.android.server.textservices.TextServicesManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.textservices.TextServicesManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.textservices.TextServicesManagerService: android.util.SparseArray mUserData>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r6 = (com.android.server.textservices.TextServicesManagerService$TextServicesData) $r3;

     label2:
        if r6 != null goto label5;

     label3:
        exitmonitor r1;

     label4:
        return;

     label5:
        specialinvoke r0.<com.android.server.textservices.TextServicesManagerService: void unbindServiceLocked(com.android.server.textservices.TextServicesManagerService$TextServicesData)>(r6);

        $r4 = r0.<com.android.server.textservices.TextServicesManagerService: android.util.SparseArray mUserData>;

        virtualinvoke $r4.<android.util.SparseArray: void remove(int)>(i0);

        exitmonitor r1;

     label6:
        return;

     label7:
        $r5 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    void onUnlockUser(int)
    {
        com.android.server.textservices.TextServicesManagerService r0;
        int i0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.textservices.TextServicesManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.textservices.TextServicesManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.server.textservices.TextServicesManagerService: void initializeInternalStateLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
