public final class com.android.server.timedetector.TimeDetectorService extends android.app.timedetector.ITimeDetectorService$Stub
{
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private final android.os.Handler mHandler;
    private final com.android.server.timedetector.TimeDetectorStrategy mTimeDetectorStrategy;

    public void <init>(android.content.Context, android.os.Handler, com.android.server.timedetector.TimeDetectorStrategy)
    {
        com.android.server.timedetector.TimeDetectorService r0;
        android.content.Context r1, $r5;
        android.os.Handler r2, $r7;
        com.android.server.timedetector.TimeDetectorStrategy r3, $r9;

        r0 := @this: com.android.server.timedetector.TimeDetectorService;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Handler;

        r3 := @parameter2: com.android.server.timedetector.TimeDetectorStrategy;

        specialinvoke r0.<android.app.timedetector.ITimeDetectorService$Stub: void <init>()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r5 = (android.content.Context) r1;

        r0.<com.android.server.timedetector.TimeDetectorService: android.content.Context mContext> = $r5;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r7 = (android.os.Handler) r2;

        r0.<com.android.server.timedetector.TimeDetectorService: android.os.Handler mHandler> = $r7;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r3);

        $r9 = (com.android.server.timedetector.TimeDetectorStrategy) r3;

        r0.<com.android.server.timedetector.TimeDetectorService: com.android.server.timedetector.TimeDetectorStrategy mTimeDetectorStrategy> = $r9;

        return;
    }

    static com.android.server.timedetector.TimeDetectorService access$000(android.content.Context)
    {
        android.content.Context r0;
        com.android.server.timedetector.TimeDetectorService $r1;

        r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.android.server.timedetector.TimeDetectorService: com.android.server.timedetector.TimeDetectorService create(android.content.Context)>(r0);

        return $r1;
    }

    private static com.android.server.timedetector.TimeDetectorService create(android.content.Context)
    {
        android.os.Handler r0;
        com.android.server.timedetector.TimeDetectorStrategyImpl $r1;
        com.android.server.timedetector.TimeDetectorStrategyCallbackImpl $r2;
        com.android.server.timedetector.TimeDetectorService $r3;
        android.net.Uri $r4;
        com.android.server.timedetector.TimeDetectorService$1 $r5;
        android.content.Context r6;
        android.content.ContentResolver r9;

        r6 := @parameter0: android.content.Context;

        $r1 = new com.android.server.timedetector.TimeDetectorStrategyImpl;

        specialinvoke $r1.<com.android.server.timedetector.TimeDetectorStrategyImpl: void <init>()>();

        $r2 = new com.android.server.timedetector.TimeDetectorStrategyCallbackImpl;

        specialinvoke $r2.<com.android.server.timedetector.TimeDetectorStrategyCallbackImpl: void <init>(android.content.Context)>(r6);

        interfaceinvoke $r1.<com.android.server.timedetector.TimeDetectorStrategy: void initialize(com.android.server.timedetector.TimeDetectorStrategy$Callback)>($r2);

        r0 = staticinvoke <com.android.server.FgThread: android.os.Handler getHandler()>();

        $r3 = new com.android.server.timedetector.TimeDetectorService;

        specialinvoke $r3.<com.android.server.timedetector.TimeDetectorService: void <init>(android.content.Context,android.os.Handler,com.android.server.timedetector.TimeDetectorStrategy)>(r6, r0, $r1);

        r9 = virtualinvoke r6.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r4 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("auto_time");

        $r5 = new com.android.server.timedetector.TimeDetectorService$1;

        specialinvoke $r5.<com.android.server.timedetector.TimeDetectorService$1: void <init>(android.os.Handler,com.android.server.timedetector.TimeDetectorService)>(r0, $r3);

        virtualinvoke r9.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r4, 1, $r5);

        return $r3;
    }

    private void enforceSuggestManualTimePermission()
    {
        com.android.server.timedetector.TimeDetectorService r0;
        android.content.Context $r1;

        r0 := @this: com.android.server.timedetector.TimeDetectorService;

        $r1 = r0.<com.android.server.timedetector.TimeDetectorService: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.SUGGEST_MANUAL_TIME_AND_ZONE", "suggest manual time and time zone");

        return;
    }

    private void enforceSuggestNetworkTimePermission()
    {
        com.android.server.timedetector.TimeDetectorService r0;
        android.content.Context $r1;

        r0 := @this: com.android.server.timedetector.TimeDetectorService;

        $r1 = r0.<com.android.server.timedetector.TimeDetectorService: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.SET_TIME", "set time");

        return;
    }

    private void enforceSuggestTelephonyTimePermission()
    {
        com.android.server.timedetector.TimeDetectorService r0;
        android.content.Context $r1;

        r0 := @this: com.android.server.timedetector.TimeDetectorService;

        $r1 = r0.<com.android.server.timedetector.TimeDetectorService: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SUGGEST_TELEPHONY_TIME_AND_ZONE", "suggest telephony time and time zone");

        return;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.timedetector.TimeDetectorService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        android.content.Context $r4;
        boolean $z0;
        com.android.server.timedetector.TimeDetectorStrategy $r5;

        r0 := @this: com.android.server.timedetector.TimeDetectorService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r4 = r0.<com.android.server.timedetector.TimeDetectorService: android.content.Context mContext>;

        $z0 = staticinvoke <com.android.internal.util.DumpUtils: boolean checkDumpPermission(android.content.Context,java.lang.String,java.io.PrintWriter)>($r4, "TimeDetectorService", r2);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r5 = r0.<com.android.server.timedetector.TimeDetectorService: com.android.server.timedetector.TimeDetectorStrategy mTimeDetectorStrategy>;

        interfaceinvoke $r5.<com.android.server.timedetector.TimeDetectorStrategy: void dump(java.io.PrintWriter,java.lang.String[])>(r2, r3);

        return;
    }

    public void handleAutoTimeDetectionChanged()
    {
        com.android.server.timedetector.TimeDetectorService r0;
        android.os.Handler r1;
        com.android.server.timedetector.TimeDetectorStrategy r2;
        com.android.server.timedetector._$$Lambda$lkjIbFi2SczFhCGbzNmkRxmPS0M $r4;

        r0 := @this: com.android.server.timedetector.TimeDetectorService;

        r1 = r0.<com.android.server.timedetector.TimeDetectorService: android.os.Handler mHandler>;

        r2 = r0.<com.android.server.timedetector.TimeDetectorService: com.android.server.timedetector.TimeDetectorStrategy mTimeDetectorStrategy>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r4 = new com.android.server.timedetector._$$Lambda$lkjIbFi2SczFhCGbzNmkRxmPS0M;

        specialinvoke $r4.<com.android.server.timedetector._$$Lambda$lkjIbFi2SczFhCGbzNmkRxmPS0M: void <init>(com.android.server.timedetector.TimeDetectorStrategy)>(r2);

        virtualinvoke r1.<android.os.Handler: boolean post(java.lang.Runnable)>($r4);

        return;
    }

    public void lambda$suggestManualTime$1$TimeDetectorService(android.app.timedetector.ManualTimeSuggestion)
    {
        com.android.server.timedetector.TimeDetectorService r0;
        android.app.timedetector.ManualTimeSuggestion r1;
        com.android.server.timedetector.TimeDetectorStrategy $r2;

        r0 := @this: com.android.server.timedetector.TimeDetectorService;

        r1 := @parameter0: android.app.timedetector.ManualTimeSuggestion;

        $r2 = r0.<com.android.server.timedetector.TimeDetectorService: com.android.server.timedetector.TimeDetectorStrategy mTimeDetectorStrategy>;

        interfaceinvoke $r2.<com.android.server.timedetector.TimeDetectorStrategy: void suggestManualTime(android.app.timedetector.ManualTimeSuggestion)>(r1);

        return;
    }

    public void lambda$suggestNetworkTime$2$TimeDetectorService(android.app.timedetector.NetworkTimeSuggestion)
    {
        com.android.server.timedetector.TimeDetectorService r0;
        android.app.timedetector.NetworkTimeSuggestion r1;
        com.android.server.timedetector.TimeDetectorStrategy $r2;

        r0 := @this: com.android.server.timedetector.TimeDetectorService;

        r1 := @parameter0: android.app.timedetector.NetworkTimeSuggestion;

        $r2 = r0.<com.android.server.timedetector.TimeDetectorService: com.android.server.timedetector.TimeDetectorStrategy mTimeDetectorStrategy>;

        interfaceinvoke $r2.<com.android.server.timedetector.TimeDetectorStrategy: void suggestNetworkTime(android.app.timedetector.NetworkTimeSuggestion)>(r1);

        return;
    }

    public void lambda$suggestTelephonyTime$0$TimeDetectorService(android.app.timedetector.TelephonyTimeSuggestion)
    {
        com.android.server.timedetector.TimeDetectorService r0;
        android.app.timedetector.TelephonyTimeSuggestion r1;
        com.android.server.timedetector.TimeDetectorStrategy $r2;

        r0 := @this: com.android.server.timedetector.TimeDetectorService;

        r1 := @parameter0: android.app.timedetector.TelephonyTimeSuggestion;

        $r2 = r0.<com.android.server.timedetector.TimeDetectorService: com.android.server.timedetector.TimeDetectorStrategy mTimeDetectorStrategy>;

        interfaceinvoke $r2.<com.android.server.timedetector.TimeDetectorStrategy: void suggestTelephonyTime(android.app.timedetector.TelephonyTimeSuggestion)>(r1);

        return;
    }

    public void suggestManualTime(android.app.timedetector.ManualTimeSuggestion)
    {
        com.android.server.timedetector.TimeDetectorService r0;
        android.app.timedetector.ManualTimeSuggestion r1;
        com.android.server.timedetector._$$Lambda$TimeDetectorService$DcAkTJaWB9_yMqP5iTI6_JQdq4g $r3;
        android.os.Handler $r4;

        r0 := @this: com.android.server.timedetector.TimeDetectorService;

        r1 := @parameter0: android.app.timedetector.ManualTimeSuggestion;

        specialinvoke r0.<com.android.server.timedetector.TimeDetectorService: void enforceSuggestManualTimePermission()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r4 = r0.<com.android.server.timedetector.TimeDetectorService: android.os.Handler mHandler>;

        $r3 = new com.android.server.timedetector._$$Lambda$TimeDetectorService$DcAkTJaWB9_yMqP5iTI6_JQdq4g;

        specialinvoke $r3.<com.android.server.timedetector._$$Lambda$TimeDetectorService$DcAkTJaWB9_yMqP5iTI6_JQdq4g: void <init>(com.android.server.timedetector.TimeDetectorService,android.app.timedetector.ManualTimeSuggestion)>(r0, r1);

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    public void suggestNetworkTime(android.app.timedetector.NetworkTimeSuggestion)
    {
        com.android.server.timedetector.TimeDetectorService r0;
        android.app.timedetector.NetworkTimeSuggestion r1;
        com.android.server.timedetector._$$Lambda$TimeDetectorService$nU2ruOeSUWWPVvB4A7i7qaumT4s $r3;
        android.os.Handler $r4;

        r0 := @this: com.android.server.timedetector.TimeDetectorService;

        r1 := @parameter0: android.app.timedetector.NetworkTimeSuggestion;

        specialinvoke r0.<com.android.server.timedetector.TimeDetectorService: void enforceSuggestNetworkTimePermission()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r4 = r0.<com.android.server.timedetector.TimeDetectorService: android.os.Handler mHandler>;

        $r3 = new com.android.server.timedetector._$$Lambda$TimeDetectorService$nU2ruOeSUWWPVvB4A7i7qaumT4s;

        specialinvoke $r3.<com.android.server.timedetector._$$Lambda$TimeDetectorService$nU2ruOeSUWWPVvB4A7i7qaumT4s: void <init>(com.android.server.timedetector.TimeDetectorService,android.app.timedetector.NetworkTimeSuggestion)>(r0, r1);

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    public void suggestTelephonyTime(android.app.timedetector.TelephonyTimeSuggestion)
    {
        com.android.server.timedetector.TimeDetectorService r0;
        android.app.timedetector.TelephonyTimeSuggestion r1;
        com.android.server.timedetector._$$Lambda$TimeDetectorService$_psn4dtQQi_8j8LFHWcI7Y6I83U $r3;
        android.os.Handler $r4;

        r0 := @this: com.android.server.timedetector.TimeDetectorService;

        r1 := @parameter0: android.app.timedetector.TelephonyTimeSuggestion;

        specialinvoke r0.<com.android.server.timedetector.TimeDetectorService: void enforceSuggestTelephonyTimePermission()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r4 = r0.<com.android.server.timedetector.TimeDetectorService: android.os.Handler mHandler>;

        $r3 = new com.android.server.timedetector._$$Lambda$TimeDetectorService$_psn4dtQQi_8j8LFHWcI7Y6I83U;

        specialinvoke $r3.<com.android.server.timedetector._$$Lambda$TimeDetectorService$_psn4dtQQi_8j8LFHWcI7Y6I83U: void <init>(com.android.server.timedetector.TimeDetectorService,android.app.timedetector.TelephonyTimeSuggestion)>(r0, r1);

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.timedetector.TimeDetectorService: java.lang.String TAG> = "TimeDetectorService";

        return;
    }
}
