public final class com.android.server.timedetector.TimeDetectorStrategyImpl extends java.lang.Object implements com.android.server.timedetector.TimeDetectorStrategy
{
    private static final boolean DBG;
    private static final int KEEP_SUGGESTION_HISTORY_SIZE;
    private static final java.lang.String LOG_TAG;
    static final long MAX_UTC_TIME_AGE_MILLIS;
    private static final int ORIGIN_MANUAL;
    private static final int ORIGIN_NETWORK;
    private static final int ORIGIN_TELEPHONY;
    private static final long SYSTEM_CLOCK_PARANOIA_THRESHOLD_MILLIS;
    private static final int TELEPHONY_BUCKET_COUNT;
    static final int TELEPHONY_BUCKET_SIZE_MILLIS;
    private static final int TELEPHONY_INVALID_SCORE;
    private com.android.server.timedetector.TimeDetectorStrategy$Callback mCallback;
    private android.os.TimestampedValue mLastAutoSystemClockTimeSet;
    private final com.android.server.timezonedetector.ReferenceWithHistory mLastNetworkSuggestion;
    private final com.android.server.timezonedetector.ArrayMapWithHistory mSuggestionBySlotIndex;
    private final android.util.LocalLog mTimeChangesLog;

    public void <init>()
    {
        com.android.server.timedetector.TimeDetectorStrategyImpl r0;
        android.util.LocalLog $r1;
        com.android.server.timezonedetector.ArrayMapWithHistory $r2;
        com.android.server.timezonedetector.ReferenceWithHistory $r3;

        r0 := @this: com.android.server.timedetector.TimeDetectorStrategyImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.util.LocalLog;

        specialinvoke $r1.<android.util.LocalLog: void <init>(int,boolean)>(30, 0);

        r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: android.util.LocalLog mTimeChangesLog> = $r1;

        $r2 = new com.android.server.timezonedetector.ArrayMapWithHistory;

        specialinvoke $r2.<com.android.server.timezonedetector.ArrayMapWithHistory: void <init>(int)>(10);

        r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: com.android.server.timezonedetector.ArrayMapWithHistory mSuggestionBySlotIndex> = $r2;

        $r3 = new com.android.server.timezonedetector.ReferenceWithHistory;

        specialinvoke $r3.<com.android.server.timezonedetector.ReferenceWithHistory: void <init>(int)>(10);

        r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: com.android.server.timezonedetector.ReferenceWithHistory mLastNetworkSuggestion> = $r3;

        return;
    }

    private void doAutoTimeDetection(java.lang.String)
    {
        com.android.server.timedetector.TimeDetectorStrategyImpl r0;
        java.lang.String r1, $r8, $r14;
        com.android.server.timedetector.TimeDetectorStrategy$Callback $r2;
        boolean $z0;
        java.lang.StringBuilder $r3, $r9;
        android.app.timedetector.TelephonyTimeSuggestion r15;
        android.os.TimestampedValue r16, r19;
        android.app.timedetector.NetworkTimeSuggestion r18;

        r0 := @this: com.android.server.timedetector.TimeDetectorStrategyImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: com.android.server.timedetector.TimeDetectorStrategy$Callback mCallback>;

        $z0 = interfaceinvoke $r2.<com.android.server.timedetector.TimeDetectorStrategy$Callback: boolean isAutoTimeDetectionEnabled()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        r15 = specialinvoke r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: android.app.timedetector.TelephonyTimeSuggestion findBestTelephonySuggestion()>();

        if r15 == null goto label2;

        r16 = virtualinvoke r15.<android.app.timedetector.TelephonyTimeSuggestion: android.os.TimestampedValue getUtcTime()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found good telephony suggestion., bestTelephonySuggestion=");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", detectionReason=");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: void setSystemClockIfRequired(int,android.os.TimestampedValue,java.lang.String)>(1, r16, $r14);

        return;

     label2:
        r18 = specialinvoke r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: android.app.timedetector.NetworkTimeSuggestion findLatestValidNetworkSuggestion()>();

        if r18 == null goto label3;

        r19 = virtualinvoke r18.<android.app.timedetector.NetworkTimeSuggestion: android.os.TimestampedValue getUtcTime()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found good network suggestion., networkSuggestion=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r18);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", detectionReason=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: void setSystemClockIfRequired(int,android.os.TimestampedValue,java.lang.String)>(3, r19, $r8);

        return;

     label3:
        return;
    }

    private android.app.timedetector.TelephonyTimeSuggestion findBestTelephonySuggestion()
    {
        com.android.server.timedetector.TimeDetectorStrategyImpl r0;
        long l0;
        int i1, $i2, $i3, $i4, i7, i8, i9;
        com.android.server.timedetector.TimeDetectorStrategy$Callback $r1;
        com.android.server.timezonedetector.ArrayMapWithHistory $r2, $r3, $r5;
        java.lang.Object $r4, $r6;
        android.os.TimestampedValue $r7;
        java.lang.StringBuilder $r8, $r12;
        java.lang.String $r11, $r15;
        android.app.timedetector.TelephonyTimeSuggestion r16, r18, r20;
        java.lang.Integer r17;

        r0 := @this: com.android.server.timedetector.TimeDetectorStrategyImpl;

        $r1 = r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: com.android.server.timedetector.TimeDetectorStrategy$Callback mCallback>;

        l0 = interfaceinvoke $r1.<com.android.server.timedetector.TimeDetectorStrategy$Callback: long elapsedRealtimeMillis()>();

        r16 = null;

        i7 = -1;

        i8 = 0;

     label1:
        $r2 = r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: com.android.server.timezonedetector.ArrayMapWithHistory mSuggestionBySlotIndex>;

        $i2 = virtualinvoke $r2.<com.android.server.timezonedetector.ArrayMapWithHistory: int size()>();

        if i8 >= $i2 goto label8;

        $r3 = r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: com.android.server.timezonedetector.ArrayMapWithHistory mSuggestionBySlotIndex>;

        $r4 = virtualinvoke $r3.<com.android.server.timezonedetector.ArrayMapWithHistory: java.lang.Object keyAt(int)>(i8);

        r17 = (java.lang.Integer) $r4;

        $r5 = r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: com.android.server.timezonedetector.ArrayMapWithHistory mSuggestionBySlotIndex>;

        $r6 = virtualinvoke $r5.<com.android.server.timezonedetector.ArrayMapWithHistory: java.lang.Object valueAt(int)>(i8);

        r18 = (android.app.timedetector.TelephonyTimeSuggestion) $r6;

        if r18 != null goto label2;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Latest suggestion unexpectedly null for slotIndex. slotIndex=");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SimpleTimeDetectorStrategy", $r15);

        r20 = r16;

        i9 = i7;

        goto label7;

     label2:
        $r7 = virtualinvoke r18.<android.app.timedetector.TelephonyTimeSuggestion: android.os.TimestampedValue getUtcTime()>();

        if $r7 != null goto label3;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Latest suggestion unexpectedly empty.  candidateSuggestion=");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r18);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SimpleTimeDetectorStrategy", $r11);

        r20 = r16;

        i9 = i7;

        goto label7;

     label3:
        i1 = staticinvoke <com.android.server.timedetector.TimeDetectorStrategyImpl: int scoreTelephonySuggestion(long,android.app.timedetector.TelephonyTimeSuggestion)>(l0, r18);

        if i1 != -1 goto label4;

        r20 = r16;

        i9 = i7;

        goto label7;

     label4:
        if r16 == null goto label6;

        if i7 >= i1 goto label5;

        goto label6;

     label5:
        r20 = r16;

        i9 = i7;

        if i7 != i1 goto label7;

        r20 = r16;

        i9 = i7;

        $i3 = virtualinvoke r18.<android.app.timedetector.TelephonyTimeSuggestion: int getSlotIndex()>();

        $i4 = virtualinvoke r16.<android.app.timedetector.TelephonyTimeSuggestion: int getSlotIndex()>();

        if $i3 >= $i4 goto label7;

        r20 = r18;

        i9 = i7;

        goto label7;

     label6:
        r20 = r18;

        i9 = i1;

     label7:
        i8 = i8 + 1;

        r16 = r20;

        i7 = i9;

        goto label1;

     label8:
        return r16;
    }

    private android.app.timedetector.NetworkTimeSuggestion findLatestValidNetworkSuggestion()
    {
        com.android.server.timedetector.TimeDetectorStrategyImpl r0;
        android.app.timedetector.NetworkTimeSuggestion r1;
        android.os.TimestampedValue r2;
        com.android.server.timezonedetector.ReferenceWithHistory $r3;
        java.lang.Object $r4;
        com.android.server.timedetector.TimeDetectorStrategy$Callback $r5;
        long $l0;
        boolean $z0;

        r0 := @this: com.android.server.timedetector.TimeDetectorStrategyImpl;

        $r3 = r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: com.android.server.timezonedetector.ReferenceWithHistory mLastNetworkSuggestion>;

        $r4 = virtualinvoke $r3.<com.android.server.timezonedetector.ReferenceWithHistory: java.lang.Object get()>();

        r1 = (android.app.timedetector.NetworkTimeSuggestion) $r4;

        if r1 != null goto label1;

        return null;

     label1:
        r2 = virtualinvoke r1.<android.app.timedetector.NetworkTimeSuggestion: android.os.TimestampedValue getUtcTime()>();

        $r5 = r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: com.android.server.timedetector.TimeDetectorStrategy$Callback mCallback>;

        $l0 = interfaceinvoke $r5.<com.android.server.timedetector.TimeDetectorStrategy$Callback: long elapsedRealtimeMillis()>();

        $z0 = staticinvoke <com.android.server.timedetector.TimeDetectorStrategyImpl: boolean validateSuggestionUtcTime(long,android.os.TimestampedValue)>($l0, r2);

        if $z0 != 0 goto label2;

        return null;

     label2:
        return r1;
    }

    private static boolean isOriginAutomatic(int)
    {
        int i0;
        boolean z0;

        i0 := @parameter0: int;

        if i0 == 2 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private static int scoreTelephonySuggestion(long, android.app.timedetector.TelephonyTimeSuggestion)
    {
        long l0, $l2, $l3, $l4;
        android.app.timedetector.TelephonyTimeSuggestion r0;
        int i1, $i5;
        boolean $z0;
        java.lang.StringBuilder $r1;
        java.lang.String $r6;
        android.os.TimestampedValue r7;

        l0 := @parameter0: long;

        r0 := @parameter1: android.app.timedetector.TelephonyTimeSuggestion;

        r7 = virtualinvoke r0.<android.app.timedetector.TelephonyTimeSuggestion: android.os.TimestampedValue getUtcTime()>();

        $z0 = staticinvoke <com.android.server.timedetector.TimeDetectorStrategyImpl: boolean validateSuggestionUtcTime(long,android.os.TimestampedValue)>(l0, r7);

        if $z0 != 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Existing suggestion found to be invalid  elapsedRealtimeMillis=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", timeSuggestion=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SimpleTimeDetectorStrategy", $r6);

        return -1;

     label1:
        $l2 = virtualinvoke r7.<android.os.TimestampedValue: long getReferenceTimeMillis()>();

        $l3 = l0 - $l2;

        $l4 = $l3 / 3600000L;

        i1 = (int) $l4;

        if i1 < 24 goto label2;

        return -1;

     label2:
        $i5 = 24 - i1;

        return $i5;
    }

    private void setSystemClockIfRequired(int, android.os.TimestampedValue, java.lang.String)
    {
        com.android.server.timedetector.TimeDetectorStrategyImpl r0;
        int i0;
        java.lang.String r1;
        boolean $z0, $z1, $z2;
        com.android.server.timedetector.TimeDetectorStrategy$Callback $r2, $r3, $r4, $r5, $r7;
        java.lang.Throwable $r6;
        android.os.TimestampedValue r8;

        r0 := @this: com.android.server.timedetector.TimeDetectorStrategyImpl;

        i0 := @parameter0: int;

        r8 := @parameter1: android.os.TimestampedValue;

        r1 := @parameter2: java.lang.String;

        $z0 = staticinvoke <com.android.server.timedetector.TimeDetectorStrategyImpl: boolean isOriginAutomatic(int)>(i0);

        if $z0 == 0 goto label1;

        $r5 = r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: com.android.server.timedetector.TimeDetectorStrategy$Callback mCallback>;

        $z2 = interfaceinvoke $r5.<com.android.server.timedetector.TimeDetectorStrategy$Callback: boolean isAutoTimeDetectionEnabled()>();

        if $z2 != 0 goto label2;

        return;

     label1:
        $r2 = r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: com.android.server.timedetector.TimeDetectorStrategy$Callback mCallback>;

        $z1 = interfaceinvoke $r2.<com.android.server.timedetector.TimeDetectorStrategy$Callback: boolean isAutoTimeDetectionEnabled()>();

        if $z1 == 0 goto label2;

        return;

     label2:
        $r3 = r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: com.android.server.timedetector.TimeDetectorStrategy$Callback mCallback>;

        interfaceinvoke $r3.<com.android.server.timedetector.TimeDetectorStrategy$Callback: void acquireWakeLock()>();

     label3:
        specialinvoke r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: void setSystemClockUnderWakeLock(int,android.os.TimestampedValue,java.lang.Object)>(i0, r8, r1);

     label4:
        $r4 = r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: com.android.server.timedetector.TimeDetectorStrategy$Callback mCallback>;

        interfaceinvoke $r4.<com.android.server.timedetector.TimeDetectorStrategy$Callback: void releaseWakeLock()>();

        return;

     label5:
        $r6 := @caughtexception;

        $r7 = r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: com.android.server.timedetector.TimeDetectorStrategy$Callback mCallback>;

        interfaceinvoke $r7.<com.android.server.timedetector.TimeDetectorStrategy$Callback: void releaseWakeLock()>();

        throw $r6;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    private void setSystemClockUnderWakeLock(int, android.os.TimestampedValue, java.lang.Object)
    {
        com.android.server.timedetector.TimeDetectorStrategyImpl r0;
        int i0, $i11;
        android.os.TimestampedValue r1, r26;
        long l1, l2, $l3, $l4, l7, l8, $l9, $l10, $l12;
        boolean z0, $z1;
        com.android.server.timedetector.TimeDetectorStrategy$Callback $r2, $r3, $r4, $r28;
        java.lang.StringBuilder $r5, $r15;
        android.util.LocalLog $r14;
        byte $b5, $b13;
        java.lang.String $r24, r30;
        java.lang.Object r25;

        r0 := @this: com.android.server.timedetector.TimeDetectorStrategyImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.TimestampedValue;

        r25 := @parameter2: java.lang.Object;

        $r2 = r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: com.android.server.timedetector.TimeDetectorStrategy$Callback mCallback>;

        l1 = interfaceinvoke $r2.<com.android.server.timedetector.TimeDetectorStrategy$Callback: long elapsedRealtimeMillis()>();

        z0 = staticinvoke <com.android.server.timedetector.TimeDetectorStrategyImpl: boolean isOriginAutomatic(int)>(i0);

        $r3 = r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: com.android.server.timedetector.TimeDetectorStrategy$Callback mCallback>;

        l2 = interfaceinvoke $r3.<com.android.server.timedetector.TimeDetectorStrategy$Callback: long systemClockMillis()>();

        if z0 == 0 goto label1;

        r26 = r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: android.os.TimestampedValue mLastAutoSystemClockTimeSet>;

        if r26 == null goto label1;

        l7 = staticinvoke <com.android.server.timedetector.TimeDetectorStrategy: long getTimeAt(android.os.TimestampedValue,long)>(r26, l1);

        $l3 = l7 - l2;

        $l4 = staticinvoke <java.lang.Math: long abs(long)>($l3);

        $b5 = $l4 cmp 2000L;

        if $b5 <= 0 goto label1;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("System clock has not tracked elapsed real time clock. A clock may be inaccurate or something unexpectedly set the system clock. elapsedRealtimeMillis=");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expectedTimeMillis=");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l7);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" actualTimeMillis=");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cause=");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r25);

        $r24 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SimpleTimeDetectorStrategy", $r24);

     label1:
        l8 = staticinvoke <com.android.server.timedetector.TimeDetectorStrategy: long getTimeAt(android.os.TimestampedValue,long)>(r1, l1);

        $l9 = l8 - l2;

        $l10 = staticinvoke <java.lang.Math: long abs(long)>($l9);

        $r28 = r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: com.android.server.timedetector.TimeDetectorStrategy$Callback mCallback>;

        $i11 = interfaceinvoke $r28.<com.android.server.timedetector.TimeDetectorStrategy$Callback: int systemClockUpdateThresholdMillis()>();

        $l12 = (long) $i11;

        $b13 = $l10 cmp $l12;

        if $b13 >= 0 goto label2;

        return;

     label2:
        $r4 = r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: com.android.server.timedetector.TimeDetectorStrategy$Callback mCallback>;

        interfaceinvoke $r4.<com.android.server.timedetector.TimeDetectorStrategy$Callback: void setSystemClock(long)>(l8);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Set system clock using time=");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cause=");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r25);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" elapsedRealtimeMillis=");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" newSystemClockMillis=");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l8);

        r30 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: android.util.LocalLog mTimeChangesLog>;

        virtualinvoke $r14.<android.util.LocalLog: void log(java.lang.String)>(r30);

        $z1 = staticinvoke <com.android.server.timedetector.TimeDetectorStrategyImpl: boolean isOriginAutomatic(int)>(i0);

        if $z1 == 0 goto label3;

        r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: android.os.TimestampedValue mLastAutoSystemClockTimeSet> = r1;

        goto label4;

     label3:
        r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: android.os.TimestampedValue mLastAutoSystemClockTimeSet> = null;

     label4:
        return;
    }

    private boolean validateAndStoreTelephonySuggestion(android.app.timedetector.TelephonyTimeSuggestion)
    {
        com.android.server.timedetector.TimeDetectorStrategyImpl r0;
        android.app.timedetector.TelephonyTimeSuggestion r1, r2;
        int i0;
        long l1;
        boolean $z0;
        com.android.server.timezonedetector.ArrayMapWithHistory $r3, $r6;
        java.lang.Integer $r4, $r7;
        java.lang.Object $r5, $r17;
        android.os.TimestampedValue $r9, $r16, $r18, r27;
        java.lang.StringBuilder $r10, $r19;
        java.lang.String $r15, $r26;
        byte $b3;

        r0 := @this: com.android.server.timedetector.TimeDetectorStrategyImpl;

        r1 := @parameter0: android.app.timedetector.TelephonyTimeSuggestion;

        r27 = virtualinvoke r1.<android.app.timedetector.TelephonyTimeSuggestion: android.os.TimestampedValue getUtcTime()>();

        $z0 = specialinvoke r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: boolean validateSuggestionTime(android.os.TimestampedValue,java.lang.Object)>(r27, r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        i0 = virtualinvoke r1.<android.app.timedetector.TelephonyTimeSuggestion: int getSlotIndex()>();

        $r3 = r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: com.android.server.timezonedetector.ArrayMapWithHistory mSuggestionBySlotIndex>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5 = virtualinvoke $r3.<com.android.server.timezonedetector.ArrayMapWithHistory: java.lang.Object get(java.lang.Object)>($r4);

        r2 = (android.app.timedetector.TelephonyTimeSuggestion) $r5;

        if r2 == null goto label4;

        $r9 = virtualinvoke r2.<android.app.timedetector.TelephonyTimeSuggestion: android.os.TimestampedValue getUtcTime()>();

        if $r9 == null goto label3;

        $r16 = virtualinvoke r2.<android.app.timedetector.TelephonyTimeSuggestion: android.os.TimestampedValue getUtcTime()>();

        $r17 = virtualinvoke $r16.<android.os.TimestampedValue: java.lang.Object getValue()>();

        if $r17 != null goto label2;

        goto label3;

     label2:
        $r18 = virtualinvoke r2.<android.app.timedetector.TelephonyTimeSuggestion: android.os.TimestampedValue getUtcTime()>();

        l1 = staticinvoke <android.os.TimestampedValue: long referenceTimeDifference(android.os.TimestampedValue,android.os.TimestampedValue)>(r27, $r18);

        $b3 = l1 cmp 0L;

        if $b3 >= 0 goto label4;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Out of order telephony suggestion received. referenceTimeDifference=");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" previousSuggestion=");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" suggestion=");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r26 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SimpleTimeDetectorStrategy", $r26);

        return 0;

     label3:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Previous suggestion is null or has a null time. previousSuggestion=");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", suggestion=");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r15 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SimpleTimeDetectorStrategy", $r15);

        return 0;

     label4:
        $r6 = r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: com.android.server.timezonedetector.ArrayMapWithHistory mSuggestionBySlotIndex>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r6.<com.android.server.timezonedetector.ArrayMapWithHistory: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, r1);

        return 1;
    }

    private boolean validateSuggestionTime(android.os.TimestampedValue, java.lang.Object)
    {
        com.android.server.timedetector.TimeDetectorStrategyImpl r0;
        java.lang.Object r1, $r2;
        long l0, $l1;
        com.android.server.timedetector.TimeDetectorStrategy$Callback $r3;
        byte $b2;
        java.lang.StringBuilder $r4, $r10;
        java.lang.String $r9, $r13;
        android.os.TimestampedValue r14;

        r0 := @this: com.android.server.timedetector.TimeDetectorStrategyImpl;

        r14 := @parameter0: android.os.TimestampedValue;

        r1 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r14.<android.os.TimestampedValue: java.lang.Object getValue()>();

        if $r2 != null goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Suggested time value is null. suggestion=");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SimpleTimeDetectorStrategy", $r13);

        return 0;

     label1:
        $r3 = r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: com.android.server.timedetector.TimeDetectorStrategy$Callback mCallback>;

        l0 = interfaceinvoke $r3.<com.android.server.timedetector.TimeDetectorStrategy$Callback: long elapsedRealtimeMillis()>();

        $l1 = virtualinvoke r14.<android.os.TimestampedValue: long getReferenceTimeMillis()>();

        $b2 = l0 cmp $l1;

        if $b2 >= 0 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("New reference time is in the future? Ignoring. elapsedRealtimeMillis=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", suggestion=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SimpleTimeDetectorStrategy", $r9);

        return 0;

     label2:
        return 1;
    }

    private static boolean validateSuggestionUtcTime(long, android.os.TimestampedValue)
    {
        long l0, l1, $l3;
        android.os.TimestampedValue r0;
        byte $b2, $b4;
        boolean z0;

        l0 := @parameter0: long;

        r0 := @parameter1: android.os.TimestampedValue;

        l1 = virtualinvoke r0.<android.os.TimestampedValue: long getReferenceTimeMillis()>();

        z0 = 0;

        $b2 = l1 cmp l0;

        if $b2 <= 0 goto label1;

        return 0;

     label1:
        $l3 = l0 - l1;

        $b4 = $l3 cmp 86400000L;

        if $b4 > 0 goto label2;

        z0 = 1;

     label2:
        return z0;
    }

    public void dump(java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.timedetector.TimeDetectorStrategyImpl r0;
        android.os.TimestampedValue $r3;
        java.lang.String $r5, $r9, $r13, $r17, $r21;
        com.android.server.timedetector.TimeDetectorStrategy$Callback $r7, $r11, $r15, $r19;
        boolean $z0;
        long $l0, $l1;
        int $i2;
        android.util.LocalLog $r23;
        com.android.server.timezonedetector.ArrayMapWithHistory $r26;
        com.android.server.timezonedetector.ReferenceWithHistory $r29;
        java.lang.Throwable $r32;
        java.io.PrintWriter r33;
        java.lang.String[] r34;
        com.android.internal.util.IndentingPrintWriter r35;
        java.lang.StringBuilder r36, r37, r38, r39, r40;

        r0 := @this: com.android.server.timedetector.TimeDetectorStrategyImpl;

        r33 := @parameter0: java.io.PrintWriter;

        r34 := @parameter1: java.lang.String[];

        entermonitor r0;

     label1:
        r35 = new com.android.internal.util.IndentingPrintWriter;

        specialinvoke r35.<com.android.internal.util.IndentingPrintWriter: void <init>(java.io.Writer,java.lang.String)>(r33, " ");

        virtualinvoke r35.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("TimeDetectorStrategy:");

        virtualinvoke r35.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        r36 = new java.lang.StringBuilder;

        specialinvoke r36.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mLastAutoSystemClockTimeSet=");

        $r3 = r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: android.os.TimestampedValue mLastAutoSystemClockTimeSet>;

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r35.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r5);

        r37 = new java.lang.StringBuilder;

        specialinvoke r37.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mCallback.isAutoTimeDetectionEnabled()=");

        $r7 = r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: com.android.server.timedetector.TimeDetectorStrategy$Callback mCallback>;

        $z0 = interfaceinvoke $r7.<com.android.server.timedetector.TimeDetectorStrategy$Callback: boolean isAutoTimeDetectionEnabled()>();

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r9 = virtualinvoke r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r35.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r9);

        r38 = new java.lang.StringBuilder;

        specialinvoke r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mCallback.elapsedRealtimeMillis()=");

        $r11 = r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: com.android.server.timedetector.TimeDetectorStrategy$Callback mCallback>;

        $l0 = interfaceinvoke $r11.<com.android.server.timedetector.TimeDetectorStrategy$Callback: long elapsedRealtimeMillis()>();

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r13 = virtualinvoke r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r35.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r13);

        r39 = new java.lang.StringBuilder;

        specialinvoke r39.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mCallback.systemClockMillis()=");

        $r15 = r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: com.android.server.timedetector.TimeDetectorStrategy$Callback mCallback>;

        $l1 = interfaceinvoke $r15.<com.android.server.timedetector.TimeDetectorStrategy$Callback: long systemClockMillis()>();

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r17 = virtualinvoke r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r35.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r17);

        r40 = new java.lang.StringBuilder;

        specialinvoke r40.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mCallback.systemClockUpdateThresholdMillis()=");

        $r19 = r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: com.android.server.timedetector.TimeDetectorStrategy$Callback mCallback>;

        $i2 = interfaceinvoke $r19.<com.android.server.timedetector.TimeDetectorStrategy$Callback: int systemClockUpdateThresholdMillis()>();

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r21 = virtualinvoke r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r35.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r21);

        virtualinvoke r35.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Time change log:");

        virtualinvoke r35.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        $r23 = r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: android.util.LocalLog mTimeChangesLog>;

        virtualinvoke $r23.<android.util.LocalLog: void dump(java.io.PrintWriter)>(r35);

        virtualinvoke r35.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke r35.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Telephony suggestion history:");

        virtualinvoke r35.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        $r26 = r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: com.android.server.timezonedetector.ArrayMapWithHistory mSuggestionBySlotIndex>;

        virtualinvoke $r26.<com.android.server.timezonedetector.ArrayMapWithHistory: void dump(com.android.internal.util.IndentingPrintWriter)>(r35);

        virtualinvoke r35.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke r35.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Network suggestion history:");

        virtualinvoke r35.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        $r29 = r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: com.android.server.timezonedetector.ReferenceWithHistory mLastNetworkSuggestion>;

        virtualinvoke $r29.<com.android.server.timezonedetector.ReferenceWithHistory: void dump(com.android.internal.util.IndentingPrintWriter)>(r35);

        virtualinvoke r35.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke r35.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke r35.<com.android.internal.util.IndentingPrintWriter: void flush()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r32 := @caughtexception;

        exitmonitor r0;

        throw $r32;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.app.timedetector.TelephonyTimeSuggestion findBestTelephonySuggestionForTests()
    {
        com.android.server.timedetector.TimeDetectorStrategyImpl r0;
        java.lang.Throwable $r1;
        android.app.timedetector.TelephonyTimeSuggestion r2;

        r0 := @this: com.android.server.timedetector.TimeDetectorStrategyImpl;

        entermonitor r0;

     label1:
        r2 = specialinvoke r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: android.app.timedetector.TelephonyTimeSuggestion findBestTelephonySuggestion()>();

     label2:
        exitmonitor r0;

        return r2;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.app.timedetector.NetworkTimeSuggestion findLatestValidNetworkSuggestionForTests()
    {
        com.android.server.timedetector.TimeDetectorStrategyImpl r0;
        android.app.timedetector.NetworkTimeSuggestion $r1;

        r0 := @this: com.android.server.timedetector.TimeDetectorStrategyImpl;

        $r1 = specialinvoke r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: android.app.timedetector.NetworkTimeSuggestion findLatestValidNetworkSuggestion()>();

        return $r1;
    }

    public android.app.timedetector.NetworkTimeSuggestion getLatestNetworkSuggestion()
    {
        com.android.server.timedetector.TimeDetectorStrategyImpl r0;
        com.android.server.timezonedetector.ReferenceWithHistory $r1;
        java.lang.Object $r2;
        android.app.timedetector.NetworkTimeSuggestion $r3;

        r0 := @this: com.android.server.timedetector.TimeDetectorStrategyImpl;

        $r1 = r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: com.android.server.timezonedetector.ReferenceWithHistory mLastNetworkSuggestion>;

        $r2 = virtualinvoke $r1.<com.android.server.timezonedetector.ReferenceWithHistory: java.lang.Object get()>();

        $r3 = (android.app.timedetector.NetworkTimeSuggestion) $r2;

        return $r3;
    }

    public android.app.timedetector.TelephonyTimeSuggestion getLatestTelephonySuggestion(int)
    {
        com.android.server.timedetector.TimeDetectorStrategyImpl r0;
        int i0;
        com.android.server.timezonedetector.ArrayMapWithHistory $r1;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Throwable $r4;
        android.app.timedetector.TelephonyTimeSuggestion r5;

        r0 := @this: com.android.server.timedetector.TimeDetectorStrategyImpl;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: com.android.server.timezonedetector.ArrayMapWithHistory mSuggestionBySlotIndex>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = virtualinvoke $r1.<com.android.server.timezonedetector.ArrayMapWithHistory: java.lang.Object get(java.lang.Object)>($r2);

        r5 = (android.app.timedetector.TelephonyTimeSuggestion) $r3;

     label2:
        exitmonitor r0;

        return r5;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void handleAutoTimeDetectionChanged()
    {
        com.android.server.timedetector.TimeDetectorStrategyImpl r0;
        com.android.server.timedetector.TimeDetectorStrategy$Callback $r2;
        boolean $z0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.timedetector.TimeDetectorStrategyImpl;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: com.android.server.timedetector.TimeDetectorStrategy$Callback mCallback>;

        $z0 = interfaceinvoke $r2.<com.android.server.timedetector.TimeDetectorStrategy$Callback: boolean isAutoTimeDetectionEnabled()>();

        if $z0 == 0 goto label3;

        specialinvoke r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: void doAutoTimeDetection(java.lang.String)>("Auto time zone detection setting enabled.");

     label2:
        goto label4;

     label3:
        r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: android.os.TimestampedValue mLastAutoSystemClockTimeSet> = null;

     label4:
        exitmonitor r0;

        return;

     label5:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void initialize(com.android.server.timedetector.TimeDetectorStrategy$Callback)
    {
        com.android.server.timedetector.TimeDetectorStrategyImpl r0;
        com.android.server.timedetector.TimeDetectorStrategy$Callback r1;

        r0 := @this: com.android.server.timedetector.TimeDetectorStrategyImpl;

        r1 := @parameter0: com.android.server.timedetector.TimeDetectorStrategy$Callback;

        r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: com.android.server.timedetector.TimeDetectorStrategy$Callback mCallback> = r1;

        return;
    }

    public void suggestManualTime(android.app.timedetector.ManualTimeSuggestion)
    {
        com.android.server.timedetector.TimeDetectorStrategyImpl r0;
        android.os.TimestampedValue r1;
        boolean z0;
        java.lang.StringBuilder r2;
        java.lang.String $r5;
        java.lang.Throwable $r6;
        android.app.timedetector.ManualTimeSuggestion r7;

        r0 := @this: com.android.server.timedetector.TimeDetectorStrategyImpl;

        r7 := @parameter0: android.app.timedetector.ManualTimeSuggestion;

        entermonitor r0;

     label1:
        r1 = virtualinvoke r7.<android.app.timedetector.ManualTimeSuggestion: android.os.TimestampedValue getUtcTime()>();

        z0 = specialinvoke r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: boolean validateSuggestionTime(android.os.TimestampedValue,java.lang.Object)>(r1, r7);

     label2:
        if z0 != 0 goto label3;

        exitmonitor r0;

        return;

     label3:
        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Manual time suggestion received: suggestion=");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r5 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: void setSystemClockIfRequired(int,android.os.TimestampedValue,java.lang.String)>(2, r1, $r5);

     label4:
        exitmonitor r0;

        return;

     label5:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void suggestNetworkTime(android.app.timedetector.NetworkTimeSuggestion)
    {
        com.android.server.timedetector.TimeDetectorStrategyImpl r0;
        boolean z0, $z1;
        android.os.TimestampedValue $r1;
        com.android.server.timezonedetector.ReferenceWithHistory $r2, $r4;
        java.lang.Object $r3;
        java.lang.Throwable $r8;
        android.app.timedetector.NetworkTimeSuggestion r9, r10;
        java.lang.StringBuilder r11;
        java.lang.String $r12;

        r0 := @this: com.android.server.timedetector.TimeDetectorStrategyImpl;

        r9 := @parameter0: android.app.timedetector.NetworkTimeSuggestion;

        entermonitor r0;

     label1:
        $r1 = virtualinvoke r9.<android.app.timedetector.NetworkTimeSuggestion: android.os.TimestampedValue getUtcTime()>();

        z0 = specialinvoke r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: boolean validateSuggestionTime(android.os.TimestampedValue,java.lang.Object)>($r1, r9);

     label2:
        if z0 != 0 goto label3;

        exitmonitor r0;

        return;

     label3:
        $r2 = r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: com.android.server.timezonedetector.ReferenceWithHistory mLastNetworkSuggestion>;

        $r3 = virtualinvoke $r2.<com.android.server.timezonedetector.ReferenceWithHistory: java.lang.Object get()>();

        r10 = (android.app.timedetector.NetworkTimeSuggestion) $r3;

     label4:
        if r10 == null goto label6;

     label5:
        $z1 = virtualinvoke r10.<android.app.timedetector.NetworkTimeSuggestion: boolean equals(java.lang.Object)>(r9);

        if $z1 != 0 goto label7;

     label6:
        $r4 = r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: com.android.server.timezonedetector.ReferenceWithHistory mLastNetworkSuggestion>;

        virtualinvoke $r4.<com.android.server.timezonedetector.ReferenceWithHistory: java.lang.Object set(java.lang.Object)>(r9);

     label7:
        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("New network time suggested. timeSuggestion=");

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r12 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: void doAutoTimeDetection(java.lang.String)>($r12);

     label8:
        exitmonitor r0;

        return;

     label9:
        $r8 := @caughtexception;

        exitmonitor r0;

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
        catch java.lang.Throwable from label7 to label8 with label9;
    }

    public void suggestTelephonyTime(android.app.timedetector.TelephonyTimeSuggestion)
    {
        com.android.server.timedetector.TimeDetectorStrategyImpl r0;
        boolean z0;
        java.lang.String $r3;
        java.lang.Throwable $r4;
        android.app.timedetector.TelephonyTimeSuggestion r5;
        android.os.TimestampedValue r6;
        java.lang.StringBuilder r7;

        r0 := @this: com.android.server.timedetector.TimeDetectorStrategyImpl;

        r5 := @parameter0: android.app.timedetector.TelephonyTimeSuggestion;

        entermonitor r0;

     label1:
        r6 = virtualinvoke r5.<android.app.timedetector.TelephonyTimeSuggestion: android.os.TimestampedValue getUtcTime()>();

     label2:
        if r6 != null goto label3;

        exitmonitor r0;

        return;

     label3:
        z0 = specialinvoke r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: boolean validateAndStoreTelephonySuggestion(android.app.timedetector.TelephonyTimeSuggestion)>(r5);

     label4:
        if z0 != 0 goto label5;

        exitmonitor r0;

        return;

     label5:
        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("New telephony time suggested. timeSuggestion=");

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r3 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.timedetector.TimeDetectorStrategyImpl: void doAutoTimeDetection(java.lang.String)>($r3);

     label6:
        exitmonitor r0;

        return;

     label7:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public static void <clinit>()
    {
        <com.android.server.timedetector.TimeDetectorStrategyImpl: int TELEPHONY_INVALID_SCORE> = -1;

        <com.android.server.timedetector.TimeDetectorStrategyImpl: int TELEPHONY_BUCKET_SIZE_MILLIS> = 3600000;

        <com.android.server.timedetector.TimeDetectorStrategyImpl: int TELEPHONY_BUCKET_COUNT> = 24;

        <com.android.server.timedetector.TimeDetectorStrategyImpl: long SYSTEM_CLOCK_PARANOIA_THRESHOLD_MILLIS> = 2000L;

        <com.android.server.timedetector.TimeDetectorStrategyImpl: int ORIGIN_TELEPHONY> = 1;

        <com.android.server.timedetector.TimeDetectorStrategyImpl: int ORIGIN_NETWORK> = 3;

        <com.android.server.timedetector.TimeDetectorStrategyImpl: int ORIGIN_MANUAL> = 2;

        <com.android.server.timedetector.TimeDetectorStrategyImpl: long MAX_UTC_TIME_AGE_MILLIS> = 86400000L;

        <com.android.server.timedetector.TimeDetectorStrategyImpl: java.lang.String LOG_TAG> = "SimpleTimeDetectorStrategy";

        <com.android.server.timedetector.TimeDetectorStrategyImpl: int KEEP_SUGGESTION_HISTORY_SIZE> = 10;

        <com.android.server.timedetector.TimeDetectorStrategyImpl: boolean DBG> = 0;

        return;
    }
}
