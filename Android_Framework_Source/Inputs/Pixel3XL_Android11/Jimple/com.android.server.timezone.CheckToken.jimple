final class com.android.server.timezone.CheckToken extends java.lang.Object
{
    final int mOptimisticLockId;
    final com.android.server.timezone.PackageVersions mPackageVersions;

    void <init>(int, com.android.server.timezone.PackageVersions)
    {
        com.android.server.timezone.CheckToken r0;
        int i0;
        com.android.server.timezone.PackageVersions r1;
        java.lang.NullPointerException $r2;

        r0 := @this: com.android.server.timezone.CheckToken;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.timezone.PackageVersions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.timezone.CheckToken: int mOptimisticLockId> = i0;

        if r1 == null goto label1;

        r0.<com.android.server.timezone.CheckToken: com.android.server.timezone.PackageVersions mPackageVersions> = r1;

        return;

     label1:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("packageVersions == null");

        throw $r2;
    }

    static com.android.server.timezone.CheckToken fromByteArray(byte[]) throws java.io.IOException
    {
        int i0;
        long l1, l2;
        java.io.DataInputStream $r0;
        java.io.ByteArrayInputStream $r1;
        com.android.server.timezone.CheckToken $r2;
        java.lang.Throwable $r3, $r4;
        byte[] r5;
        com.android.server.timezone.PackageVersions r7;

        r5 := @parameter0: byte[];

        $r0 = new java.io.DataInputStream;

        $r1 = new java.io.ByteArrayInputStream;

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>(r5);

        specialinvoke $r0.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r1);

     label1:
        i0 = virtualinvoke $r0.<java.io.DataInputStream: int readInt()>();

        l1 = virtualinvoke $r0.<java.io.DataInputStream: long readLong()>();

        l2 = virtualinvoke $r0.<java.io.DataInputStream: long readLong()>();

        r7 = new com.android.server.timezone.PackageVersions;

        specialinvoke r7.<com.android.server.timezone.PackageVersions: void <init>(long,long)>(l1, l2);

        $r2 = new com.android.server.timezone.CheckToken;

        specialinvoke $r2.<com.android.server.timezone.CheckToken: void <init>(int,com.android.server.timezone.PackageVersions)>(i0, r7);

     label2:
        virtualinvoke $r0.<java.io.DataInputStream: void close()>();

        return $r2;

     label3:
        $r4 := @caughtexception;

     label4:
        virtualinvoke $r0.<java.io.DataInputStream: void close()>();

     label5:
        goto label7;

     label6:
        $r3 := @caughtexception;

        virtualinvoke $r4.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r3);

     label7:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public boolean equals(java.lang.Object)
    {
        com.android.server.timezone.CheckToken r0, r6;
        java.lang.Class $r1, $r2;
        int $i0, $i1;
        com.android.server.timezone.PackageVersions $r3, $r4;
        boolean $z0;
        java.lang.Object r5;

        r0 := @this: com.android.server.timezone.CheckToken;

        r5 := @parameter0: java.lang.Object;

        if r0 != r5 goto label1;

        return 1;

     label1:
        if r5 == null goto label4;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 == $r2 goto label2;

        goto label4;

     label2:
        r6 = (com.android.server.timezone.CheckToken) r5;

        $i1 = r0.<com.android.server.timezone.CheckToken: int mOptimisticLockId>;

        $i0 = r6.<com.android.server.timezone.CheckToken: int mOptimisticLockId>;

        if $i1 == $i0 goto label3;

        return 0;

     label3:
        $r4 = r0.<com.android.server.timezone.CheckToken: com.android.server.timezone.PackageVersions mPackageVersions>;

        $r3 = r6.<com.android.server.timezone.CheckToken: com.android.server.timezone.PackageVersions mPackageVersions>;

        $z0 = virtualinvoke $r4.<com.android.server.timezone.PackageVersions: boolean equals(java.lang.Object)>($r3);

        return $z0;

     label4:
        return 0;
    }

    public int hashCode()
    {
        com.android.server.timezone.CheckToken r0;
        int $i0, $i1, $i2, $i3;
        com.android.server.timezone.PackageVersions $r1;

        r0 := @this: com.android.server.timezone.CheckToken;

        $i0 = r0.<com.android.server.timezone.CheckToken: int mOptimisticLockId>;

        $i1 = $i0 * 31;

        $r1 = r0.<com.android.server.timezone.CheckToken: com.android.server.timezone.PackageVersions mPackageVersions>;

        $i2 = virtualinvoke $r1.<com.android.server.timezone.PackageVersions: int hashCode()>();

        $i3 = $i1 + $i2;

        return $i3;
    }

    byte[] toByteArray()
    {
        com.android.server.timezone.CheckToken r0;
        java.io.ByteArrayOutputStream $r1;
        int $i0;
        com.android.server.timezone.PackageVersions $r2, $r3;
        long $l1, $l2;
        byte[] $r4;
        java.lang.Throwable $r5, $r6, $r8;
        java.lang.RuntimeException $r7;
        java.io.DataOutputStream r10;

        r0 := @this: com.android.server.timezone.CheckToken;

        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>(int)>(12);

     label01:
        r10 = new java.io.DataOutputStream;

        specialinvoke r10.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r1);

     label02:
        $i0 = r0.<com.android.server.timezone.CheckToken: int mOptimisticLockId>;

        virtualinvoke r10.<java.io.DataOutputStream: void writeInt(int)>($i0);

        $r2 = r0.<com.android.server.timezone.CheckToken: com.android.server.timezone.PackageVersions mPackageVersions>;

        $l1 = $r2.<com.android.server.timezone.PackageVersions: long mUpdateAppVersion>;

        virtualinvoke r10.<java.io.DataOutputStream: void writeLong(long)>($l1);

        $r3 = r0.<com.android.server.timezone.CheckToken: com.android.server.timezone.PackageVersions mPackageVersions>;

        $l2 = $r3.<com.android.server.timezone.PackageVersions: long mDataAppVersion>;

        virtualinvoke r10.<java.io.DataOutputStream: void writeLong(long)>($l2);

     label03:
        virtualinvoke r10.<java.io.DataOutputStream: void close()>();

     label04:
        $r4 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r4;

     label05:
        $r8 := @caughtexception;

     label06:
        virtualinvoke r10.<java.io.DataOutputStream: void close()>();

     label07:
        goto label10;

     label08:
        $r5 := @caughtexception;

     label09:
        virtualinvoke $r8.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r5);

     label10:
        throw $r8;

     label11:
        $r6 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to write into a ByteArrayOutputStream", $r6);

        throw $r7;

        catch java.io.IOException from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.io.IOException from label03 to label04 with label11;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.io.IOException from label10 to label11 with label11;
    }

    public java.lang.String toString()
    {
        com.android.server.timezone.CheckToken r0;
        java.lang.StringBuilder $r2;
        int $i0;
        com.android.server.timezone.PackageVersions $r6;
        java.lang.String $r9;

        r0 := @this: com.android.server.timezone.CheckToken;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Token{mOptimisticLockId=");

        $i0 = r0.<com.android.server.timezone.CheckToken: int mOptimisticLockId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mPackageVersions=");

        $r6 = r0.<com.android.server.timezone.CheckToken: com.android.server.timezone.PackageVersions mPackageVersions>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }
}
