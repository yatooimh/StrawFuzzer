final class com.android.server.timezone.PackageTrackerHelperImpl extends java.lang.Object implements com.android.server.timezone.ConfigHelper, com.android.server.timezone.PackageManagerHelper
{
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private final android.content.pm.PackageManager mPackageManager;

    void <init>(android.content.Context)
    {
        com.android.server.timezone.PackageTrackerHelperImpl r0;
        android.content.Context r1;
        android.content.pm.PackageManager $r2;

        r0 := @this: com.android.server.timezone.PackageTrackerHelperImpl;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.timezone.PackageTrackerHelperImpl: android.content.Context mContext> = r1;

        $r2 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r0.<com.android.server.timezone.PackageTrackerHelperImpl: android.content.pm.PackageManager mPackageManager> = $r2;

        return;
    }

    public boolean contentProviderRegistered(java.lang.String, java.lang.String)
    {
        com.android.server.timezone.PackageTrackerHelperImpl r0;
        java.lang.String r1, $r5, $r11, $r15, r16;
        android.os.UserHandle $r2;
        android.content.pm.PackageManager $r3;
        int $i0;
        android.content.pm.ApplicationInfo $r4;
        boolean $z0;
        java.lang.StringBuilder $r6, $r12;
        android.content.pm.ProviderInfo r17;

        r0 := @this: com.android.server.timezone.PackageTrackerHelperImpl;

        r1 := @parameter0: java.lang.String;

        r16 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.timezone.PackageTrackerHelperImpl: android.content.pm.PackageManager mPackageManager>;

        $r2 = <android.os.UserHandle: android.os.UserHandle SYSTEM>;

        $i0 = virtualinvoke $r2.<android.os.UserHandle: int getIdentifier()>();

        r17 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.ProviderInfo resolveContentProviderAsUser(java.lang.String,int,int)>(r1, 32768, $i0);

        if r17 != null goto label1;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("contentProviderRegistered: No content provider registered with authority=");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageTrackerHelperImpl", $r15);

        return 0;

     label1:
        $r4 = r17.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r5 = $r4.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z0 = virtualinvoke r16.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("contentProviderRegistered: App with packageName=");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not expose the a content provider with authority=");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageTrackerHelperImpl", $r11);

        return 0;

     label2:
        return 1;
    }

    public int getCheckTimeAllowedMillis()
    {
        com.android.server.timezone.PackageTrackerHelperImpl r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        int $i0;

        r0 := @this: com.android.server.timezone.PackageTrackerHelperImpl;

        $r1 = r0.<com.android.server.timezone.PackageTrackerHelperImpl: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r2.<android.content.res.Resources: int getInteger(int)>(17694909);

        return $i0;
    }

    public java.lang.String getDataAppPackageName()
    {
        com.android.server.timezone.PackageTrackerHelperImpl r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        java.lang.String $r3;

        r0 := @this: com.android.server.timezone.PackageTrackerHelperImpl;

        $r1 = r0.<com.android.server.timezone.PackageTrackerHelperImpl: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String getString(int)>(17039951);

        return $r3;
    }

    public int getFailedCheckRetryCount()
    {
        com.android.server.timezone.PackageTrackerHelperImpl r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        int $i0;

        r0 := @this: com.android.server.timezone.PackageTrackerHelperImpl;

        $r1 = r0.<com.android.server.timezone.PackageTrackerHelperImpl: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r2.<android.content.res.Resources: int getInteger(int)>(17694908);

        return $i0;
    }

    public long getInstalledPackageVersion(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException
    {
        com.android.server.timezone.PackageTrackerHelperImpl r0;
        java.lang.String r1;
        android.content.pm.PackageManager $r2;
        android.content.pm.PackageInfo $r3;
        long $l0;

        r0 := @this: com.android.server.timezone.PackageTrackerHelperImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.timezone.PackageTrackerHelperImpl: android.content.pm.PackageManager mPackageManager>;

        $r3 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r1, 32768);

        $l0 = virtualinvoke $r3.<android.content.pm.PackageInfo: long getLongVersionCode()>();

        return $l0;
    }

    public java.lang.String getUpdateAppPackageName()
    {
        com.android.server.timezone.PackageTrackerHelperImpl r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        java.lang.String $r3;

        r0 := @this: com.android.server.timezone.PackageTrackerHelperImpl;

        $r1 = r0.<com.android.server.timezone.PackageTrackerHelperImpl: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String getString(int)>(17039952);

        return $r3;
    }

    public boolean isPrivilegedApp(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException
    {
        com.android.server.timezone.PackageTrackerHelperImpl r0;
        java.lang.String r1;
        android.content.pm.PackageManager $r2;
        android.content.pm.PackageInfo $r3;
        android.content.pm.ApplicationInfo $r4;
        boolean $z0;

        r0 := @this: com.android.server.timezone.PackageTrackerHelperImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.timezone.PackageTrackerHelperImpl: android.content.pm.PackageManager mPackageManager>;

        $r3 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r1, 32768);

        $r4 = $r3.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $z0 = virtualinvoke $r4.<android.content.pm.ApplicationInfo: boolean isPrivilegedApp()>();

        return $z0;
    }

    public boolean isTrackingEnabled()
    {
        com.android.server.timezone.PackageTrackerHelperImpl r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        boolean $z0;

        r0 := @this: com.android.server.timezone.PackageTrackerHelperImpl;

        $r1 = r0.<com.android.server.timezone.PackageTrackerHelperImpl: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $z0 = virtualinvoke $r2.<android.content.res.Resources: boolean getBoolean(int)>(17891561);

        return $z0;
    }

    public boolean receiverRegistered(android.content.Intent, java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException
    {
        com.android.server.timezone.PackageTrackerHelperImpl r0;
        android.content.Intent r1;
        boolean z0;
        android.os.UserHandle $r2;
        android.content.pm.PackageManager $r3;
        int $i0;
        java.lang.Object $r4;
        android.content.pm.ResolveInfo $r5;
        android.content.pm.ActivityInfo $r6;
        java.lang.String $r7, $r13, $r19, r20;
        java.lang.StringBuilder $r8, $r14;
        java.util.List r21;

        r0 := @this: com.android.server.timezone.PackageTrackerHelperImpl;

        r1 := @parameter0: android.content.Intent;

        r20 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.timezone.PackageTrackerHelperImpl: android.content.pm.PackageManager mPackageManager>;

        $r2 = <android.os.UserHandle: android.os.UserHandle SYSTEM>;

        r21 = virtualinvoke $r3.<android.content.pm.PackageManager: java.util.List queryBroadcastReceiversAsUser(android.content.Intent,int,android.os.UserHandle)>(r1, 32768, $r2);

        $i0 = interfaceinvoke r21.<java.util.List: int size()>();

        if $i0 == 1 goto label1;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("receiverRegistered: Zero or multiple broadcast receiver registered for intent=");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", found=");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r21);

        $r19 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageTrackerHelperImpl", $r19);

        return 0;

     label1:
        $r4 = interfaceinvoke r21.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (android.content.pm.ResolveInfo) $r4;

        $r6 = $r5.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r7 = $r6.<android.content.pm.ActivityInfo: java.lang.String permission>;

        z0 = virtualinvoke r20.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if z0 != 0 goto label2;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("receiverRegistered: Broadcast receiver registered for intent=");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must require permission ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageTrackerHelperImpl", $r13);

     label2:
        return z0;
    }

    public boolean usesPermission(java.lang.String, java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException
    {
        com.android.server.timezone.PackageTrackerHelperImpl r0;
        java.lang.String r1, $r4, r5;
        int i0, i1;
        android.content.pm.PackageManager $r2;
        java.lang.String[] $r3, r7;
        boolean $z0;
        android.content.pm.PackageInfo r6;

        r0 := @this: com.android.server.timezone.PackageTrackerHelperImpl;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<com.android.server.timezone.PackageTrackerHelperImpl: android.content.pm.PackageManager mPackageManager>;

        r6 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r5, 36864);

        $r3 = r6.<android.content.pm.PackageInfo: java.lang.String[] requestedPermissions>;

        if $r3 != null goto label1;

        return 0;

     label1:
        r7 = r6.<android.content.pm.PackageInfo: java.lang.String[] requestedPermissions>;

        i0 = lengthof r7;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $r4 = r7[i1];

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 0;
    }

    public static void <clinit>()
    {
        <com.android.server.timezone.PackageTrackerHelperImpl: java.lang.String TAG> = "PackageTrackerHelperImpl";

        return;
    }
}
