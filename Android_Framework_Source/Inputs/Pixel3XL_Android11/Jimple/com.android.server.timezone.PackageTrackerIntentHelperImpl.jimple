final class com.android.server.timezone.PackageTrackerIntentHelperImpl extends java.lang.Object implements com.android.server.timezone.PackageTrackerIntentHelper
{
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private java.lang.String mUpdaterAppPackageName;

    void <init>(android.content.Context)
    {
        com.android.server.timezone.PackageTrackerIntentHelperImpl r0;
        android.content.Context r1;

        r0 := @this: com.android.server.timezone.PackageTrackerIntentHelperImpl;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.timezone.PackageTrackerIntentHelperImpl: android.content.Context mContext> = r1;

        return;
    }

    public void initialize(java.lang.String, java.lang.String, com.android.server.timezone.PackageTracker)
    {
        com.android.server.timezone.PackageTrackerIntentHelperImpl r0;
        java.lang.String r1, r9;
        com.android.server.timezone.PackageTracker r2;
        android.content.IntentFilter $r4;
        com.android.server.timezone.PackageTrackerIntentHelperImpl$Receiver $r5;
        android.os.UserHandle $r6;
        android.content.Context $r7;

        r0 := @this: com.android.server.timezone.PackageTrackerIntentHelperImpl;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.android.server.timezone.PackageTracker;

        r0.<com.android.server.timezone.PackageTrackerIntentHelperImpl: java.lang.String mUpdaterAppPackageName> = r9;

        $r4 = new android.content.IntentFilter;

        specialinvoke $r4.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r4.<android.content.IntentFilter: void addDataScheme(java.lang.String)>("package");

        virtualinvoke $r4.<android.content.IntentFilter: void addDataSchemeSpecificPart(java.lang.String,int)>(r9, 0);

        virtualinvoke $r4.<android.content.IntentFilter: void addDataSchemeSpecificPart(java.lang.String,int)>(r1, 0);

        virtualinvoke $r4.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_ADDED");

        virtualinvoke $r4.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_CHANGED");

        $r5 = new com.android.server.timezone.PackageTrackerIntentHelperImpl$Receiver;

        specialinvoke $r5.<com.android.server.timezone.PackageTrackerIntentHelperImpl$Receiver: void <init>(com.android.server.timezone.PackageTracker,com.android.server.timezone.PackageTrackerIntentHelperImpl$1)>(r2, null);

        $r7 = r0.<com.android.server.timezone.PackageTrackerIntentHelperImpl: android.content.Context mContext>;

        $r6 = <android.os.UserHandle: android.os.UserHandle SYSTEM>;

        virtualinvoke $r7.<android.content.Context: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r5, $r6, $r4, null, null);

        return;
    }

    public void scheduleReliabilityTrigger(long)
    {
        com.android.server.timezone.PackageTrackerIntentHelperImpl r0;
        long l0;
        android.content.Context $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.timezone.PackageTrackerIntentHelperImpl;

        l0 := @parameter0: long;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.timezone.PackageTrackerIntentHelperImpl: android.content.Context mContext>;

        staticinvoke <com.android.server.timezone.TimeZoneUpdateIdler: void schedule(android.content.Context,long)>($r2, l0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void sendTriggerUpdateCheck(com.android.server.timezone.CheckToken)
    {
        com.android.server.timezone.PackageTrackerIntentHelperImpl r0;
        com.android.server.timezone.CheckToken r1;
        android.content.Context $r2;
        java.lang.String $r3, $r5;
        byte[] $r4;

        r0 := @this: com.android.server.timezone.PackageTrackerIntentHelperImpl;

        r1 := @parameter0: com.android.server.timezone.CheckToken;

        $r2 = r0.<com.android.server.timezone.PackageTrackerIntentHelperImpl: android.content.Context mContext>;

        $r3 = r0.<com.android.server.timezone.PackageTrackerIntentHelperImpl: java.lang.String mUpdaterAppPackageName>;

        $r4 = virtualinvoke r1.<com.android.server.timezone.CheckToken: byte[] toByteArray()>();

        staticinvoke <android.app.timezone.RulesUpdaterContract: void sendBroadcast(android.content.Context,java.lang.String,byte[])>($r2, $r3, $r4);

        $r5 = virtualinvoke r1.<com.android.server.timezone.CheckToken: java.lang.String toString()>();

        staticinvoke <com.android.server.EventLogTags: void writeTimezoneTriggerCheck(java.lang.String)>($r5);

        return;
    }

    public void unscheduleReliabilityTrigger()
    {
        com.android.server.timezone.PackageTrackerIntentHelperImpl r0;
        android.content.Context $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.timezone.PackageTrackerIntentHelperImpl;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.timezone.PackageTrackerIntentHelperImpl: android.content.Context mContext>;

        staticinvoke <com.android.server.timezone.TimeZoneUpdateIdler: void unschedule(android.content.Context)>($r2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <com.android.server.timezone.PackageTrackerIntentHelperImpl: java.lang.String TAG> = "timezone.PackageTrackerIntentHelperImpl";

        return;
    }
}
