public final class com.android.server.timezonedetector.TimeZoneDetectorCallbackImpl extends java.lang.Object implements com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$Callback
{
    private static final java.lang.String TIMEZONE_PROPERTY;
    private final android.content.Context mContext;
    private final android.content.ContentResolver mCr;

    void <init>(android.content.Context)
    {
        com.android.server.timezonedetector.TimeZoneDetectorCallbackImpl r0;
        android.content.Context r1;
        android.content.ContentResolver $r2;

        r0 := @this: com.android.server.timezonedetector.TimeZoneDetectorCallbackImpl;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.timezonedetector.TimeZoneDetectorCallbackImpl: android.content.Context mContext> = r1;

        $r2 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r0.<com.android.server.timezonedetector.TimeZoneDetectorCallbackImpl: android.content.ContentResolver mCr> = $r2;

        return;
    }

    private boolean deviceHasTelephonyNetwork()
    {
        com.android.server.timezonedetector.TimeZoneDetectorCallbackImpl r0;
        android.content.Context $r1;
        java.lang.Object $r2;
        android.net.ConnectivityManager $r3;
        boolean $z0;

        r0 := @this: com.android.server.timezonedetector.TimeZoneDetectorCallbackImpl;

        $r1 = r0.<com.android.server.timezonedetector.TimeZoneDetectorCallbackImpl: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/net/ConnectivityManager;");

        $r3 = (android.net.ConnectivityManager) $r2;

        $z0 = virtualinvoke $r3.<android.net.ConnectivityManager: boolean isNetworkSupported(int)>(0);

        return $z0;
    }

    private boolean isAutoTimeZoneDetectionSupported()
    {
        com.android.server.timezonedetector.TimeZoneDetectorCallbackImpl r0;
        boolean $z0;

        r0 := @this: com.android.server.timezonedetector.TimeZoneDetectorCallbackImpl;

        $z0 = specialinvoke r0.<com.android.server.timezonedetector.TimeZoneDetectorCallbackImpl: boolean deviceHasTelephonyNetwork()>();

        return $z0;
    }

    public java.lang.String getDeviceTimeZone()
    {
        com.android.server.timezonedetector.TimeZoneDetectorCallbackImpl r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.timezonedetector.TimeZoneDetectorCallbackImpl;

        $r1 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("persist.sys.timezone");

        return $r1;
    }

    public boolean isAutoTimeZoneDetectionEnabled()
    {
        com.android.server.timezonedetector.TimeZoneDetectorCallbackImpl r0;
        boolean z0, z1;
        android.content.ContentResolver $r1;
        int $i0;

        r0 := @this: com.android.server.timezonedetector.TimeZoneDetectorCallbackImpl;

        z0 = specialinvoke r0.<com.android.server.timezonedetector.TimeZoneDetectorCallbackImpl: boolean isAutoTimeZoneDetectionSupported()>();

        z1 = 0;

        if z0 == 0 goto label2;

        $r1 = r0.<com.android.server.timezonedetector.TimeZoneDetectorCallbackImpl: android.content.ContentResolver mCr>;

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r1, "auto_time_zone", 1);

        if $i0 <= 0 goto label1;

        z1 = 1;

     label1:
        return z1;

     label2:
        return 0;
    }

    public boolean isDeviceTimeZoneInitialized()
    {
        com.android.server.timezonedetector.TimeZoneDetectorCallbackImpl r0;
        java.lang.String r1;
        int $i0;
        boolean $z0, z1;

        r0 := @this: com.android.server.timezonedetector.TimeZoneDetectorCallbackImpl;

        r1 = virtualinvoke r0.<com.android.server.timezonedetector.TimeZoneDetectorCallbackImpl: java.lang.String getDeviceTimeZone()>();

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("GMT");

        if $z0 != 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public void setDeviceTimeZone(java.lang.String)
    {
        com.android.server.timezonedetector.TimeZoneDetectorCallbackImpl r0;
        java.lang.String r1;
        android.content.Context $r2;
        java.lang.Object $r3;
        android.app.AlarmManager $r4;

        r0 := @this: com.android.server.timezonedetector.TimeZoneDetectorCallbackImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.timezonedetector.TimeZoneDetectorCallbackImpl: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/AlarmManager;");

        $r4 = (android.app.AlarmManager) $r3;

        virtualinvoke $r4.<android.app.AlarmManager: void setTimeZone(java.lang.String)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.timezonedetector.TimeZoneDetectorCallbackImpl: java.lang.String TIMEZONE_PROPERTY> = "persist.sys.timezone";

        return;
    }
}
