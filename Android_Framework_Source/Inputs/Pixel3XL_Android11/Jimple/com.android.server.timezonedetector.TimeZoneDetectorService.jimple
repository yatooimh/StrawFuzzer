public final class com.android.server.timezonedetector.TimeZoneDetectorService extends android.app.timezonedetector.ITimeZoneDetectorService$Stub
{
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private final android.os.Handler mHandler;
    private final com.android.server.timezonedetector.TimeZoneDetectorStrategy mTimeZoneDetectorStrategy;

    public void <init>(android.content.Context, android.os.Handler, com.android.server.timezonedetector.TimeZoneDetectorStrategy)
    {
        com.android.server.timezonedetector.TimeZoneDetectorService r0;
        android.content.Context r1, $r5;
        android.os.Handler r2, $r7;
        com.android.server.timezonedetector.TimeZoneDetectorStrategy r3, $r9;

        r0 := @this: com.android.server.timezonedetector.TimeZoneDetectorService;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Handler;

        r3 := @parameter2: com.android.server.timezonedetector.TimeZoneDetectorStrategy;

        specialinvoke r0.<android.app.timezonedetector.ITimeZoneDetectorService$Stub: void <init>()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r5 = (android.content.Context) r1;

        r0.<com.android.server.timezonedetector.TimeZoneDetectorService: android.content.Context mContext> = $r5;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r7 = (android.os.Handler) r2;

        r0.<com.android.server.timezonedetector.TimeZoneDetectorService: android.os.Handler mHandler> = $r7;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r3);

        $r9 = (com.android.server.timezonedetector.TimeZoneDetectorStrategy) r3;

        r0.<com.android.server.timezonedetector.TimeZoneDetectorService: com.android.server.timezonedetector.TimeZoneDetectorStrategy mTimeZoneDetectorStrategy> = $r9;

        return;
    }

    static com.android.server.timezonedetector.TimeZoneDetectorService access$000(android.content.Context)
    {
        android.content.Context r0;
        com.android.server.timezonedetector.TimeZoneDetectorService $r1;

        r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.android.server.timezonedetector.TimeZoneDetectorService: com.android.server.timezonedetector.TimeZoneDetectorService create(android.content.Context)>(r0);

        return $r1;
    }

    private static com.android.server.timezonedetector.TimeZoneDetectorService create(android.content.Context)
    {
        android.os.Handler r0;
        com.android.server.timezonedetector.TimeZoneDetectorService $r1;
        android.net.Uri $r2;
        com.android.server.timezonedetector.TimeZoneDetectorService$1 $r3;
        android.content.Context r4;
        com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl r5;
        android.content.ContentResolver r7;

        r4 := @parameter0: android.content.Context;

        r5 = staticinvoke <com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl: com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl create(android.content.Context)>(r4);

        r0 = staticinvoke <com.android.server.FgThread: android.os.Handler getHandler()>();

        $r1 = new com.android.server.timezonedetector.TimeZoneDetectorService;

        specialinvoke $r1.<com.android.server.timezonedetector.TimeZoneDetectorService: void <init>(android.content.Context,android.os.Handler,com.android.server.timezonedetector.TimeZoneDetectorStrategy)>(r4, r0, r5);

        r7 = virtualinvoke r4.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r2 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("auto_time_zone");

        $r3 = new com.android.server.timezonedetector.TimeZoneDetectorService$1;

        specialinvoke $r3.<com.android.server.timezonedetector.TimeZoneDetectorService$1: void <init>(android.os.Handler,com.android.server.timezonedetector.TimeZoneDetectorService)>(r0, $r1);

        virtualinvoke r7.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r2, 1, $r3);

        return $r1;
    }

    private void enforceSuggestManualTimeZonePermission()
    {
        com.android.server.timezonedetector.TimeZoneDetectorService r0;
        android.content.Context $r1;

        r0 := @this: com.android.server.timezonedetector.TimeZoneDetectorService;

        $r1 = r0.<com.android.server.timezonedetector.TimeZoneDetectorService: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.SUGGEST_MANUAL_TIME_AND_ZONE", "suggest manual time and time zone");

        return;
    }

    private void enforceSuggestTelephonyTimeZonePermission()
    {
        com.android.server.timezonedetector.TimeZoneDetectorService r0;
        android.content.Context $r1;

        r0 := @this: com.android.server.timezonedetector.TimeZoneDetectorService;

        $r1 = r0.<com.android.server.timezonedetector.TimeZoneDetectorService: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SUGGEST_TELEPHONY_TIME_AND_ZONE", "suggest telephony time and time zone");

        return;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.timezonedetector.TimeZoneDetectorService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        android.content.Context $r4;
        boolean $z0;
        com.android.server.timezonedetector.TimeZoneDetectorStrategy $r5;

        r0 := @this: com.android.server.timezonedetector.TimeZoneDetectorService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r4 = r0.<com.android.server.timezonedetector.TimeZoneDetectorService: android.content.Context mContext>;

        $z0 = staticinvoke <com.android.internal.util.DumpUtils: boolean checkDumpPermission(android.content.Context,java.lang.String,java.io.PrintWriter)>($r4, "TimeZoneDetectorService", r2);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r5 = r0.<com.android.server.timezonedetector.TimeZoneDetectorService: com.android.server.timezonedetector.TimeZoneDetectorStrategy mTimeZoneDetectorStrategy>;

        interfaceinvoke $r5.<com.android.server.timezonedetector.TimeZoneDetectorStrategy: void dump(java.io.PrintWriter,java.lang.String[])>(r2, r3);

        return;
    }

    public void handleAutoTimeZoneDetectionChanged()
    {
        com.android.server.timezonedetector.TimeZoneDetectorService r0;
        android.os.Handler r1;
        com.android.server.timezonedetector.TimeZoneDetectorStrategy r2;
        com.android.server.timezonedetector._$$Lambda$YxXJMUW4yEyBSw8jCvXmZTpthE8 $r4;

        r0 := @this: com.android.server.timezonedetector.TimeZoneDetectorService;

        r1 = r0.<com.android.server.timezonedetector.TimeZoneDetectorService: android.os.Handler mHandler>;

        r2 = r0.<com.android.server.timezonedetector.TimeZoneDetectorService: com.android.server.timezonedetector.TimeZoneDetectorStrategy mTimeZoneDetectorStrategy>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r4 = new com.android.server.timezonedetector._$$Lambda$YxXJMUW4yEyBSw8jCvXmZTpthE8;

        specialinvoke $r4.<com.android.server.timezonedetector._$$Lambda$YxXJMUW4yEyBSw8jCvXmZTpthE8: void <init>(com.android.server.timezonedetector.TimeZoneDetectorStrategy)>(r2);

        virtualinvoke r1.<android.os.Handler: boolean post(java.lang.Runnable)>($r4);

        return;
    }

    public void lambda$suggestManualTimeZone$0$TimeZoneDetectorService(android.app.timezonedetector.ManualTimeZoneSuggestion)
    {
        com.android.server.timezonedetector.TimeZoneDetectorService r0;
        android.app.timezonedetector.ManualTimeZoneSuggestion r1;
        com.android.server.timezonedetector.TimeZoneDetectorStrategy $r2;

        r0 := @this: com.android.server.timezonedetector.TimeZoneDetectorService;

        r1 := @parameter0: android.app.timezonedetector.ManualTimeZoneSuggestion;

        $r2 = r0.<com.android.server.timezonedetector.TimeZoneDetectorService: com.android.server.timezonedetector.TimeZoneDetectorStrategy mTimeZoneDetectorStrategy>;

        interfaceinvoke $r2.<com.android.server.timezonedetector.TimeZoneDetectorStrategy: void suggestManualTimeZone(android.app.timezonedetector.ManualTimeZoneSuggestion)>(r1);

        return;
    }

    public void lambda$suggestTelephonyTimeZone$1$TimeZoneDetectorService(android.app.timezonedetector.TelephonyTimeZoneSuggestion)
    {
        com.android.server.timezonedetector.TimeZoneDetectorService r0;
        android.app.timezonedetector.TelephonyTimeZoneSuggestion r1;
        com.android.server.timezonedetector.TimeZoneDetectorStrategy $r2;

        r0 := @this: com.android.server.timezonedetector.TimeZoneDetectorService;

        r1 := @parameter0: android.app.timezonedetector.TelephonyTimeZoneSuggestion;

        $r2 = r0.<com.android.server.timezonedetector.TimeZoneDetectorService: com.android.server.timezonedetector.TimeZoneDetectorStrategy mTimeZoneDetectorStrategy>;

        interfaceinvoke $r2.<com.android.server.timezonedetector.TimeZoneDetectorStrategy: void suggestTelephonyTimeZone(android.app.timezonedetector.TelephonyTimeZoneSuggestion)>(r1);

        return;
    }

    public void onShellCommand(java.io.FileDescriptor, java.io.FileDescriptor, java.io.FileDescriptor, java.lang.String[], android.os.ShellCallback, android.os.ResultReceiver)
    {
        com.android.server.timezonedetector.TimeZoneDetectorService r0;
        java.io.FileDescriptor r1, r2, r3;
        java.lang.String[] r4;
        android.os.ShellCallback r5;
        android.os.ResultReceiver r6;
        com.android.server.timezonedetector.TimeZoneDetectorShellCommand $r7;

        r0 := @this: com.android.server.timezonedetector.TimeZoneDetectorService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.FileDescriptor;

        r3 := @parameter2: java.io.FileDescriptor;

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: android.os.ShellCallback;

        r6 := @parameter5: android.os.ResultReceiver;

        $r7 = new com.android.server.timezonedetector.TimeZoneDetectorShellCommand;

        specialinvoke $r7.<com.android.server.timezonedetector.TimeZoneDetectorShellCommand: void <init>(com.android.server.timezonedetector.TimeZoneDetectorService)>(r0);

        virtualinvoke $r7.<com.android.server.timezonedetector.TimeZoneDetectorShellCommand: int exec(android.os.Binder,java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>(r0, r1, r2, r3, r4, r5, r6);

        return;
    }

    public void suggestManualTimeZone(android.app.timezonedetector.ManualTimeZoneSuggestion)
    {
        com.android.server.timezonedetector.TimeZoneDetectorService r0;
        android.app.timezonedetector.ManualTimeZoneSuggestion r1;
        com.android.server.timezonedetector._$$Lambda$TimeZoneDetectorService$UdeBqzyBZX1S4jHLM7d2cKvE__U $r3;
        android.os.Handler $r4;

        r0 := @this: com.android.server.timezonedetector.TimeZoneDetectorService;

        r1 := @parameter0: android.app.timezonedetector.ManualTimeZoneSuggestion;

        specialinvoke r0.<com.android.server.timezonedetector.TimeZoneDetectorService: void enforceSuggestManualTimeZonePermission()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r4 = r0.<com.android.server.timezonedetector.TimeZoneDetectorService: android.os.Handler mHandler>;

        $r3 = new com.android.server.timezonedetector._$$Lambda$TimeZoneDetectorService$UdeBqzyBZX1S4jHLM7d2cKvE__U;

        specialinvoke $r3.<com.android.server.timezonedetector._$$Lambda$TimeZoneDetectorService$UdeBqzyBZX1S4jHLM7d2cKvE__U: void <init>(com.android.server.timezonedetector.TimeZoneDetectorService,android.app.timezonedetector.ManualTimeZoneSuggestion)>(r0, r1);

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    public void suggestTelephonyTimeZone(android.app.timezonedetector.TelephonyTimeZoneSuggestion)
    {
        com.android.server.timezonedetector.TimeZoneDetectorService r0;
        android.app.timezonedetector.TelephonyTimeZoneSuggestion r1;
        com.android.server.timezonedetector._$$Lambda$TimeZoneDetectorService$fVU6C2loDoPZ5MLRbaxmXaLRy_s $r3;
        android.os.Handler $r4;

        r0 := @this: com.android.server.timezonedetector.TimeZoneDetectorService;

        r1 := @parameter0: android.app.timezonedetector.TelephonyTimeZoneSuggestion;

        specialinvoke r0.<com.android.server.timezonedetector.TimeZoneDetectorService: void enforceSuggestTelephonyTimeZonePermission()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r4 = r0.<com.android.server.timezonedetector.TimeZoneDetectorService: android.os.Handler mHandler>;

        $r3 = new com.android.server.timezonedetector._$$Lambda$TimeZoneDetectorService$fVU6C2loDoPZ5MLRbaxmXaLRy_s;

        specialinvoke $r3.<com.android.server.timezonedetector._$$Lambda$TimeZoneDetectorService$fVU6C2loDoPZ5MLRbaxmXaLRy_s: void <init>(com.android.server.timezonedetector.TimeZoneDetectorService,android.app.timezonedetector.TelephonyTimeZoneSuggestion)>(r0, r1);

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.timezonedetector.TimeZoneDetectorService: java.lang.String TAG> = "TimeZoneDetectorService";

        return;
    }
}
