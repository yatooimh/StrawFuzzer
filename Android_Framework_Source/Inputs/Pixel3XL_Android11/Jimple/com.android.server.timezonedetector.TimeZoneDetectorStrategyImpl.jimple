public final class com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl extends java.lang.Object implements com.android.server.timezonedetector.TimeZoneDetectorStrategy
{
    private static final boolean DBG;
    private static final int KEEP_SUGGESTION_HISTORY_SIZE;
    private static final java.lang.String LOG_TAG;
    private static final int ORIGIN_MANUAL;
    private static final int ORIGIN_TELEPHONY;
    public static final int TELEPHONY_SCORE_HIGH;
    public static final int TELEPHONY_SCORE_HIGHEST;
    public static final int TELEPHONY_SCORE_LOW;
    public static final int TELEPHONY_SCORE_MEDIUM;
    public static final int TELEPHONY_SCORE_NONE;
    public static final int TELEPHONY_SCORE_USAGE_THRESHOLD;
    private final com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$Callback mCallback;
    private com.android.server.timezonedetector.ArrayMapWithHistory mSuggestionBySlotIndex;
    private final android.util.LocalLog mTimeZoneChangesLog;

    public void <init>(com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$Callback)
    {
        com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl r0;
        com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$Callback r1, $r5;
        android.util.LocalLog $r2;
        com.android.server.timezonedetector.ArrayMapWithHistory $r3;

        r0 := @this: com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl;

        r1 := @parameter0: com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$Callback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.util.LocalLog;

        specialinvoke $r2.<android.util.LocalLog: void <init>(int,boolean)>(30, 0);

        r0.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl: android.util.LocalLog mTimeZoneChangesLog> = $r2;

        $r3 = new com.android.server.timezonedetector.ArrayMapWithHistory;

        specialinvoke $r3.<com.android.server.timezonedetector.ArrayMapWithHistory: void <init>(int)>(10);

        r0.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl: com.android.server.timezonedetector.ArrayMapWithHistory mSuggestionBySlotIndex> = $r3;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r5 = (com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$Callback) r1;

        r0.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl: com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$Callback mCallback> = $r5;

        return;
    }

    public static com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl create(android.content.Context)
    {
        android.content.Context r0;
        com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl $r1;
        com.android.server.timezonedetector.TimeZoneDetectorCallbackImpl $r2;

        r0 := @parameter0: android.content.Context;

        $r1 = new com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl;

        $r2 = new com.android.server.timezonedetector.TimeZoneDetectorCallbackImpl;

        specialinvoke $r2.<com.android.server.timezonedetector.TimeZoneDetectorCallbackImpl: void <init>(android.content.Context)>(r0);

        specialinvoke $r1.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl: void <init>(com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$Callback)>($r2);

        return $r1;
    }

    private void doAutoTimeZoneDetection(java.lang.String)
    {
        com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl r0;
        java.lang.String r1, r3, $r6, $r13, $r19;
        com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$QualifiedTelephonyTimeZoneSuggestion r2;
        com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$Callback $r4;
        boolean $z0, z1;
        int $i0;
        android.app.timezonedetector.TelephonyTimeZoneSuggestion $r5, $r7;
        java.lang.StringBuilder $r8, $r14;

        r0 := @this: com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl: com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$Callback mCallback>;

        $z0 = interfaceinvoke $r4.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$Callback: boolean isAutoTimeZoneDetectionEnabled()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        r2 = specialinvoke r0.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl: com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$QualifiedTelephonyTimeZoneSuggestion findBestTelephonySuggestion()>();

        if r2 != null goto label2;

        return;

     label2:
        $i0 = r2.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$QualifiedTelephonyTimeZoneSuggestion: int score>;

        if $i0 < 2 goto label3;

        z1 = 1;

        goto label4;

     label3:
        z1 = 0;

     label4:
        if z1 != 0 goto label5;

        return;

     label5:
        $r5 = r2.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$QualifiedTelephonyTimeZoneSuggestion: android.app.timezonedetector.TelephonyTimeZoneSuggestion suggestion>;

        $r6 = virtualinvoke $r5.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: java.lang.String getZoneId()>();

        if $r6 != null goto label6;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Empty zone suggestion scored higher than expected. This is an error: bestTelephonySuggestion=");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" detectionReason=");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r19 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("TimeZoneDetectorStrategy", $r19);

        return;

     label6:
        $r7 = r2.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$QualifiedTelephonyTimeZoneSuggestion: android.app.timezonedetector.TelephonyTimeZoneSuggestion suggestion>;

        r3 = virtualinvoke $r7.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: java.lang.String getZoneId()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found good suggestion., bestTelephonySuggestion=");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", detectionReason=");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl: void setDeviceTimeZoneIfRequired(int,java.lang.String,java.lang.String)>(1, r3, $r13);

        return;
    }

    private com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$QualifiedTelephonyTimeZoneSuggestion findBestTelephonySuggestion()
    {
        com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl r0;
        com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$QualifiedTelephonyTimeZoneSuggestion r1, r7, r8;
        com.android.server.timezonedetector.ArrayMapWithHistory $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        java.lang.Object $r4;
        android.app.timezonedetector.TelephonyTimeZoneSuggestion $r5, $r6;

        r0 := @this: com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl;

        r7 = null;

        i7 = 0;

     label1:
        $r2 = r0.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl: com.android.server.timezonedetector.ArrayMapWithHistory mSuggestionBySlotIndex>;

        $i0 = virtualinvoke $r2.<com.android.server.timezonedetector.ArrayMapWithHistory: int size()>();

        if i7 >= $i0 goto label6;

        $r3 = r0.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl: com.android.server.timezonedetector.ArrayMapWithHistory mSuggestionBySlotIndex>;

        $r4 = virtualinvoke $r3.<com.android.server.timezonedetector.ArrayMapWithHistory: java.lang.Object valueAt(int)>(i7);

        r1 = (com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$QualifiedTelephonyTimeZoneSuggestion) $r4;

        if r1 != null goto label2;

        r8 = r7;

        goto label5;

     label2:
        if r7 != null goto label3;

        r8 = r1;

        goto label5;

     label3:
        $i2 = r1.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$QualifiedTelephonyTimeZoneSuggestion: int score>;

        $i1 = r7.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$QualifiedTelephonyTimeZoneSuggestion: int score>;

        if $i2 <= $i1 goto label4;

        r8 = r1;

        goto label5;

     label4:
        r8 = r7;

        $i4 = r1.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$QualifiedTelephonyTimeZoneSuggestion: int score>;

        $i3 = r7.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$QualifiedTelephonyTimeZoneSuggestion: int score>;

        if $i4 != $i3 goto label5;

        r8 = r7;

        $r5 = r1.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$QualifiedTelephonyTimeZoneSuggestion: android.app.timezonedetector.TelephonyTimeZoneSuggestion suggestion>;

        $i5 = virtualinvoke $r5.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: int getSlotIndex()>();

        $r6 = r7.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$QualifiedTelephonyTimeZoneSuggestion: android.app.timezonedetector.TelephonyTimeZoneSuggestion suggestion>;

        $i6 = virtualinvoke $r6.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: int getSlotIndex()>();

        if $i5 >= $i6 goto label5;

        r8 = r1;

     label5:
        i7 = i7 + 1;

        r7 = r8;

        goto label1;

     label6:
        return r7;
    }

    private static boolean isOriginAutomatic(int)
    {
        int i0;
        boolean z0;

        i0 := @parameter0: int;

        if i0 == 2 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private static int scoreTelephonySuggestion(android.app.timezonedetector.TelephonyTimeZoneSuggestion)
    {
        android.app.timezonedetector.TelephonyTimeZoneSuggestion r0;
        java.lang.String $r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.AssertionError $r2;
        byte b5;

        r0 := @parameter0: android.app.timezonedetector.TelephonyTimeZoneSuggestion;

        $r1 = virtualinvoke r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: java.lang.String getZoneId()>();

        if $r1 != null goto label1;

        b5 = 0;

        goto label7;

     label1:
        $i0 = virtualinvoke r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: int getMatchType()>();

        if $i0 == 5 goto label6;

        $i1 = virtualinvoke r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: int getMatchType()>();

        if $i1 != 4 goto label2;

        goto label6;

     label2:
        $i2 = virtualinvoke r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: int getQuality()>();

        if $i2 != 1 goto label3;

        b5 = 3;

        goto label7;

     label3:
        $i3 = virtualinvoke r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: int getQuality()>();

        if $i3 != 2 goto label4;

        b5 = 2;

        goto label7;

     label4:
        $i4 = virtualinvoke r0.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: int getQuality()>();

        if $i4 != 3 goto label5;

        b5 = 1;

        goto label7;

     label5:
        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label6:
        b5 = 4;

     label7:
        return b5;
    }

    private void setDeviceTimeZoneIfRequired(int, java.lang.String, java.lang.String)
    {
        com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl r0;
        int i0;
        java.lang.String r1, r2, r20, r21;
        boolean $z0, $z1, $z2, $z3;
        com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$Callback $r6, $r7, $r8, $r19;
        java.lang.StringBuilder $r9;
        android.util.LocalLog $r18;

        r0 := @this: com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl;

        i0 := @parameter0: int;

        r20 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r20);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $z0 = staticinvoke <com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl: boolean isOriginAutomatic(int)>(i0);

        if $z0 == 0 goto label1;

        $r19 = r0.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl: com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$Callback mCallback>;

        $z3 = interfaceinvoke $r19.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$Callback: boolean isAutoTimeZoneDetectionEnabled()>();

        if $z3 != 0 goto label2;

        return;

     label1:
        $r6 = r0.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl: com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$Callback mCallback>;

        $z1 = interfaceinvoke $r6.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$Callback: boolean isAutoTimeZoneDetectionEnabled()>();

        if $z1 == 0 goto label2;

        return;

     label2:
        $r7 = r0.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl: com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$Callback mCallback>;

        r2 = interfaceinvoke $r7.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$Callback: java.lang.String getDeviceTimeZone()>();

        $z2 = virtualinvoke r20.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label3;

        return;

     label3:
        $r8 = r0.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl: com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$Callback mCallback>;

        interfaceinvoke $r8.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$Callback: void setDeviceTimeZone(java.lang.String)>(r20);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Set device time zone. origin=");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", currentZoneId=");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newZoneId=");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", cause=");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r21 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18 = r0.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl: android.util.LocalLog mTimeZoneChangesLog>;

        virtualinvoke $r18.<android.util.LocalLog: void log(java.lang.String)>(r21);

        return;
    }

    public void dump(java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl r0;
        com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$Callback $r3, $r7, $r11;
        boolean $z0, $z1;
        java.lang.String $r5, $r9, $r12, $r14;
        android.util.LocalLog $r16;
        com.android.server.timezonedetector.ArrayMapWithHistory $r19;
        java.lang.Throwable $r22;
        java.io.PrintWriter r23;
        java.lang.String[] r24;
        com.android.internal.util.IndentingPrintWriter r25;
        java.lang.StringBuilder r26, r27, r28;

        r0 := @this: com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl;

        r23 := @parameter0: java.io.PrintWriter;

        r24 := @parameter1: java.lang.String[];

        entermonitor r0;

     label1:
        r25 = new com.android.internal.util.IndentingPrintWriter;

        specialinvoke r25.<com.android.internal.util.IndentingPrintWriter: void <init>(java.io.Writer,java.lang.String)>(r23, " ");

        virtualinvoke r25.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("TimeZoneDetectorStrategy:");

        virtualinvoke r25.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        r26 = new java.lang.StringBuilder;

        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mCallback.isTimeZoneDetectionEnabled()=");

        $r3 = r0.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl: com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$Callback mCallback>;

        $z0 = interfaceinvoke $r3.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$Callback: boolean isAutoTimeZoneDetectionEnabled()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r5 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r25.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r5);

        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mCallback.isDeviceTimeZoneInitialized()=");

        $r7 = r0.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl: com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$Callback mCallback>;

        $z1 = interfaceinvoke $r7.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$Callback: boolean isDeviceTimeZoneInitialized()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r9 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r25.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r9);

        r28 = new java.lang.StringBuilder;

        specialinvoke r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mCallback.getDeviceTimeZone()=");

        $r11 = r0.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl: com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$Callback mCallback>;

        $r12 = interfaceinvoke $r11.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$Callback: java.lang.String getDeviceTimeZone()>();

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r25.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r14);

        virtualinvoke r25.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Time zone change log:");

        virtualinvoke r25.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        $r16 = r0.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl: android.util.LocalLog mTimeZoneChangesLog>;

        virtualinvoke $r16.<android.util.LocalLog: void dump(java.io.PrintWriter)>(r25);

        virtualinvoke r25.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke r25.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Telephony suggestion history:");

        virtualinvoke r25.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        $r19 = r0.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl: com.android.server.timezonedetector.ArrayMapWithHistory mSuggestionBySlotIndex>;

        virtualinvoke $r19.<com.android.server.timezonedetector.ArrayMapWithHistory: void dump(com.android.internal.util.IndentingPrintWriter)>(r25);

        virtualinvoke r25.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke r25.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke r25.<com.android.internal.util.IndentingPrintWriter: void flush()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r22 := @caughtexception;

        exitmonitor r0;

        throw $r22;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$QualifiedTelephonyTimeZoneSuggestion findBestTelephonySuggestionForTests()
    {
        com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl r0;
        java.lang.Throwable $r1;
        com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$QualifiedTelephonyTimeZoneSuggestion r2;

        r0 := @this: com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl;

        entermonitor r0;

     label1:
        r2 = specialinvoke r0.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl: com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$QualifiedTelephonyTimeZoneSuggestion findBestTelephonySuggestion()>();

     label2:
        exitmonitor r0;

        return r2;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$QualifiedTelephonyTimeZoneSuggestion getLatestTelephonySuggestion(int)
    {
        com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl r0;
        int i0;
        com.android.server.timezonedetector.ArrayMapWithHistory $r1;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Throwable $r4;
        com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$QualifiedTelephonyTimeZoneSuggestion r5;

        r0 := @this: com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl: com.android.server.timezonedetector.ArrayMapWithHistory mSuggestionBySlotIndex>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = virtualinvoke $r1.<com.android.server.timezonedetector.ArrayMapWithHistory: java.lang.Object get(java.lang.Object)>($r2);

        r5 = (com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$QualifiedTelephonyTimeZoneSuggestion) $r3;

     label2:
        exitmonitor r0;

        return r5;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void handleAutoTimeZoneDetectionChanged()
    {
        com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl r0;
        com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$Callback $r2;
        boolean $z0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl: com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$Callback mCallback>;

        $z0 = interfaceinvoke $r2.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$Callback: boolean isAutoTimeZoneDetectionEnabled()>();

        if $z0 == 0 goto label2;

        specialinvoke r0.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl: void doAutoTimeZoneDetection(java.lang.String)>("Auto time zone detection setting enabled.");

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void suggestManualTimeZone(android.app.timezonedetector.ManualTimeZoneSuggestion)
    {
        com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl r0;
        java.lang.String r1, $r6;
        java.lang.StringBuilder r2;
        java.lang.Throwable $r7;
        android.app.timezonedetector.ManualTimeZoneSuggestion r8;

        r0 := @this: com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl;

        r8 := @parameter0: android.app.timezonedetector.ManualTimeZoneSuggestion;

        entermonitor r0;

     label1:
        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r8);

        r1 = virtualinvoke r8.<android.app.timezonedetector.ManualTimeZoneSuggestion: java.lang.String getZoneId()>();

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Manual time suggestion received: suggestion=");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r6 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl: void setDeviceTimeZoneIfRequired(int,java.lang.String,java.lang.String)>(2, r1, $r6);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r7 := @caughtexception;

        exitmonitor r0;

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void suggestTelephonyTimeZone(android.app.timezonedetector.TelephonyTimeZoneSuggestion)
    {
        com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl r0;
        int i0, $i1;
        com.android.server.timezonedetector.ArrayMapWithHistory $r2;
        java.lang.Integer $r3;
        java.lang.String $r7;
        java.lang.Throwable $r8;
        android.app.timezonedetector.TelephonyTimeZoneSuggestion r9;
        com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$QualifiedTelephonyTimeZoneSuggestion r10;
        java.lang.StringBuilder r11;

        r0 := @this: com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl;

        r9 := @parameter0: android.app.timezonedetector.TelephonyTimeZoneSuggestion;

        entermonitor r0;

     label1:
        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r9);

        i0 = staticinvoke <com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl: int scoreTelephonySuggestion(android.app.timezonedetector.TelephonyTimeZoneSuggestion)>(r9);

        r10 = new com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$QualifiedTelephonyTimeZoneSuggestion;

        specialinvoke r10.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl$QualifiedTelephonyTimeZoneSuggestion: void <init>(android.app.timezonedetector.TelephonyTimeZoneSuggestion,int)>(r9, i0);

        $r2 = r0.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl: com.android.server.timezonedetector.ArrayMapWithHistory mSuggestionBySlotIndex>;

        $i1 = virtualinvoke r9.<android.app.timezonedetector.TelephonyTimeZoneSuggestion: int getSlotIndex()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke $r2.<com.android.server.timezonedetector.ArrayMapWithHistory: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r10);

        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("New telephony time suggested. suggestion=");

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r7 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl: void doAutoTimeZoneDetection(java.lang.String)>($r7);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r8 := @caughtexception;

        exitmonitor r0;

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl: int TELEPHONY_SCORE_USAGE_THRESHOLD> = 2;

        <com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl: int TELEPHONY_SCORE_NONE> = 0;

        <com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl: int TELEPHONY_SCORE_MEDIUM> = 2;

        <com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl: int TELEPHONY_SCORE_LOW> = 1;

        <com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl: int TELEPHONY_SCORE_HIGHEST> = 4;

        <com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl: int TELEPHONY_SCORE_HIGH> = 3;

        <com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl: int ORIGIN_TELEPHONY> = 1;

        <com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl: int ORIGIN_MANUAL> = 2;

        <com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl: java.lang.String LOG_TAG> = "TimeZoneDetectorStrategy";

        <com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl: int KEEP_SUGGESTION_HISTORY_SIZE> = 10;

        <com.android.server.timezonedetector.TimeZoneDetectorStrategyImpl: boolean DBG> = 0;

        return;
    }
}
