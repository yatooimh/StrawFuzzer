public class com.android.server.trust.TrustAgentWrapper extends java.lang.Object
{
    private static final java.lang.String DATA_DURATION;
    private static final java.lang.String DATA_ESCROW_TOKEN;
    private static final java.lang.String DATA_HANDLE;
    private static final java.lang.String DATA_MESSAGE;
    private static final java.lang.String DATA_USER_ID;
    private static final boolean DEBUG;
    private static final java.lang.String EXTRA_COMPONENT_NAME;
    private static final int MSG_ADD_ESCROW_TOKEN;
    private static final int MSG_ESCROW_TOKEN_STATE;
    private static final int MSG_GRANT_TRUST;
    private static final int MSG_MANAGING_TRUST;
    private static final int MSG_REMOVE_ESCROW_TOKEN;
    private static final int MSG_RESTART_TIMEOUT;
    private static final int MSG_REVOKE_TRUST;
    private static final int MSG_SET_TRUST_AGENT_FEATURES_COMPLETED;
    private static final int MSG_SHOW_KEYGUARD_ERROR_MESSAGE;
    private static final int MSG_TRUST_TIMEOUT;
    private static final int MSG_UNLOCK_USER;
    private static final java.lang.String PERMISSION;
    private static final long RESTART_TIMEOUT_MILLIS;
    private static final java.lang.String TAG;
    private static final java.lang.String TRUST_EXPIRED_ACTION;
    private final android.content.Intent mAlarmIntent;
    private android.app.AlarmManager mAlarmManager;
    private android.app.PendingIntent mAlarmPendingIntent;
    private boolean mBound;
    private final android.content.BroadcastReceiver mBroadcastReceiver;
    private android.service.trust.ITrustAgentServiceCallback mCallback;
    private final android.content.ServiceConnection mConnection;
    private final android.content.Context mContext;
    private final android.os.Handler mHandler;
    private boolean mManagingTrust;
    private long mMaximumTimeToLock;
    private java.lang.CharSequence mMessage;
    private final android.content.ComponentName mName;
    private boolean mPendingSuccessfulUnlock;
    private long mScheduledRestartUptimeMillis;
    private android.os.IBinder mSetTrustAgentFeaturesToken;
    private android.service.trust.ITrustAgentService mTrustAgentService;
    private boolean mTrustDisabledByDpm;
    private final com.android.server.trust.TrustManagerService mTrustManagerService;
    private boolean mTrusted;
    private final int mUserId;

    static void <clinit>()
    {
        boolean $z0;

        <com.android.server.trust.TrustAgentWrapper: java.lang.String TRUST_EXPIRED_ACTION> = "android.server.trust.TRUST_EXPIRED_ACTION";

        <com.android.server.trust.TrustAgentWrapper: java.lang.String TAG> = "TrustAgentWrapper";

        <com.android.server.trust.TrustAgentWrapper: long RESTART_TIMEOUT_MILLIS> = 300000L;

        <com.android.server.trust.TrustAgentWrapper: java.lang.String PERMISSION> = "android.permission.PROVIDE_TRUST_AGENT";

        <com.android.server.trust.TrustAgentWrapper: int MSG_UNLOCK_USER> = 10;

        <com.android.server.trust.TrustAgentWrapper: int MSG_TRUST_TIMEOUT> = 3;

        <com.android.server.trust.TrustAgentWrapper: int MSG_SHOW_KEYGUARD_ERROR_MESSAGE> = 11;

        <com.android.server.trust.TrustAgentWrapper: int MSG_SET_TRUST_AGENT_FEATURES_COMPLETED> = 5;

        <com.android.server.trust.TrustAgentWrapper: int MSG_REVOKE_TRUST> = 2;

        <com.android.server.trust.TrustAgentWrapper: int MSG_RESTART_TIMEOUT> = 4;

        <com.android.server.trust.TrustAgentWrapper: int MSG_REMOVE_ESCROW_TOKEN> = 8;

        <com.android.server.trust.TrustAgentWrapper: int MSG_MANAGING_TRUST> = 6;

        <com.android.server.trust.TrustAgentWrapper: int MSG_GRANT_TRUST> = 1;

        <com.android.server.trust.TrustAgentWrapper: int MSG_ESCROW_TOKEN_STATE> = 9;

        <com.android.server.trust.TrustAgentWrapper: int MSG_ADD_ESCROW_TOKEN> = 7;

        <com.android.server.trust.TrustAgentWrapper: java.lang.String EXTRA_COMPONENT_NAME> = "componentName";

        <com.android.server.trust.TrustAgentWrapper: java.lang.String DATA_USER_ID> = "user_id";

        <com.android.server.trust.TrustAgentWrapper: java.lang.String DATA_MESSAGE> = "message";

        <com.android.server.trust.TrustAgentWrapper: java.lang.String DATA_HANDLE> = "handle";

        <com.android.server.trust.TrustAgentWrapper: java.lang.String DATA_ESCROW_TOKEN> = "escrow_token";

        <com.android.server.trust.TrustAgentWrapper: java.lang.String DATA_DURATION> = "duration";

        $z0 = <com.android.server.trust.TrustManagerService: boolean DEBUG>;

        <com.android.server.trust.TrustAgentWrapper: boolean DEBUG> = $z0;

        return;
    }

    public void <init>(android.content.Context, com.android.server.trust.TrustManagerService, android.content.Intent, android.os.UserHandle)
    {
        com.android.server.trust.TrustAgentWrapper r0;
        android.content.Intent r1, $r10, $r15, $r19, $r21, r35;
        android.os.UserHandle r2;
        boolean z0;
        com.android.server.trust.TrustAgentWrapper$1 $r3;
        com.android.server.trust.TrustAgentWrapper$2 $r4;
        com.android.server.trust.TrustAgentWrapper$3 $r5;
        com.android.server.trust.TrustAgentWrapper$4 $r6;
        java.lang.Object $r7;
        android.app.AlarmManager $r8;
        int $i0;
        android.content.ComponentName $r9, $r11, $r26;
        java.lang.String $r12, $r16, $r20, $r22, $r27, $r29;
        android.net.Uri $r13;
        android.content.IntentFilter $r18;
        android.content.ServiceConnection $r23;
        java.lang.StringBuilder $r24;
        android.content.BroadcastReceiver $r30;
        android.content.Context $r31, r33;
        com.android.server.trust.TrustManagerService r34;

        r0 := @this: com.android.server.trust.TrustAgentWrapper;

        r33 := @parameter0: android.content.Context;

        r34 := @parameter1: com.android.server.trust.TrustManagerService;

        r1 := @parameter2: android.content.Intent;

        r2 := @parameter3: android.os.UserHandle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.trust.TrustAgentWrapper: boolean mPendingSuccessfulUnlock> = 0;

        $r3 = new com.android.server.trust.TrustAgentWrapper$1;

        specialinvoke $r3.<com.android.server.trust.TrustAgentWrapper$1: void <init>(com.android.server.trust.TrustAgentWrapper)>(r0);

        r0.<com.android.server.trust.TrustAgentWrapper: android.content.BroadcastReceiver mBroadcastReceiver> = $r3;

        $r4 = new com.android.server.trust.TrustAgentWrapper$2;

        specialinvoke $r4.<com.android.server.trust.TrustAgentWrapper$2: void <init>(com.android.server.trust.TrustAgentWrapper)>(r0);

        r0.<com.android.server.trust.TrustAgentWrapper: android.os.Handler mHandler> = $r4;

        $r5 = new com.android.server.trust.TrustAgentWrapper$3;

        specialinvoke $r5.<com.android.server.trust.TrustAgentWrapper$3: void <init>(com.android.server.trust.TrustAgentWrapper)>(r0);

        r0.<com.android.server.trust.TrustAgentWrapper: android.service.trust.ITrustAgentServiceCallback mCallback> = $r5;

        $r6 = new com.android.server.trust.TrustAgentWrapper$4;

        specialinvoke $r6.<com.android.server.trust.TrustAgentWrapper$4: void <init>(com.android.server.trust.TrustAgentWrapper)>(r0);

        r0.<com.android.server.trust.TrustAgentWrapper: android.content.ServiceConnection mConnection> = $r6;

        r0.<com.android.server.trust.TrustAgentWrapper: android.content.Context mContext> = r33;

        r0.<com.android.server.trust.TrustAgentWrapper: com.android.server.trust.TrustManagerService mTrustManagerService> = r34;

        $r7 = virtualinvoke r33.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        $r8 = (android.app.AlarmManager) $r7;

        r0.<com.android.server.trust.TrustAgentWrapper: android.app.AlarmManager mAlarmManager> = $r8;

        $i0 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        r0.<com.android.server.trust.TrustAgentWrapper: int mUserId> = $i0;

        $r9 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        r0.<com.android.server.trust.TrustAgentWrapper: android.content.ComponentName mName> = $r9;

        $r10 = new android.content.Intent;

        specialinvoke $r10.<android.content.Intent: void <init>(java.lang.String)>("android.server.trust.TRUST_EXPIRED_ACTION");

        $r11 = r0.<com.android.server.trust.TrustAgentWrapper: android.content.ComponentName mName>;

        r35 = virtualinvoke $r10.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("componentName", $r11);

        r0.<com.android.server.trust.TrustAgentWrapper: android.content.Intent mAlarmIntent> = r35;

        $r12 = virtualinvoke r35.<android.content.Intent: java.lang.String toUri(int)>(1);

        $r13 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r12);

        virtualinvoke r35.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r13);

        $r15 = r0.<com.android.server.trust.TrustAgentWrapper: android.content.Intent mAlarmIntent>;

        $r16 = virtualinvoke r33.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke $r15.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r16);

        $r18 = new android.content.IntentFilter;

        specialinvoke $r18.<android.content.IntentFilter: void <init>(java.lang.String)>("android.server.trust.TRUST_EXPIRED_ACTION");

        $r19 = r0.<com.android.server.trust.TrustAgentWrapper: android.content.Intent mAlarmIntent>;

        $r20 = virtualinvoke $r19.<android.content.Intent: java.lang.String getScheme()>();

        virtualinvoke $r18.<android.content.IntentFilter: void addDataScheme(java.lang.String)>($r20);

        $r21 = r0.<com.android.server.trust.TrustAgentWrapper: android.content.Intent mAlarmIntent>;

        $r22 = virtualinvoke $r21.<android.content.Intent: java.lang.String toUri(int)>(1);

        virtualinvoke $r18.<android.content.IntentFilter: void addDataPath(java.lang.String,int)>($r22, 0);

        specialinvoke r0.<com.android.server.trust.TrustAgentWrapper: void scheduleRestart()>();

        $r23 = r0.<com.android.server.trust.TrustAgentWrapper: android.content.ServiceConnection mConnection>;

        z0 = virtualinvoke r33.<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>(r1, $r23, 67108865, r2);

        r0.<com.android.server.trust.TrustAgentWrapper: boolean mBound> = z0;

        if z0 == 0 goto label1;

        $r31 = r0.<com.android.server.trust.TrustAgentWrapper: android.content.Context mContext>;

        $r30 = r0.<com.android.server.trust.TrustAgentWrapper: android.content.BroadcastReceiver mBroadcastReceiver>;

        virtualinvoke $r31.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r30, $r18, "android.permission.PROVIDE_TRUST_AGENT", null);

        goto label2;

     label1:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t bind to TrustAgent ");

        $r26 = r0.<com.android.server.trust.TrustAgentWrapper: android.content.ComponentName mName>;

        $r27 = virtualinvoke $r26.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TrustAgentWrapper", $r29);

     label2:
        return;
    }

    static android.content.ComponentName access$000(com.android.server.trust.TrustAgentWrapper)
    {
        com.android.server.trust.TrustAgentWrapper r0;
        android.content.ComponentName $r1;

        r0 := @parameter0: com.android.server.trust.TrustAgentWrapper;

        $r1 = r0.<com.android.server.trust.TrustAgentWrapper: android.content.ComponentName mName>;

        return $r1;
    }

    static android.os.Handler access$100(com.android.server.trust.TrustAgentWrapper)
    {
        com.android.server.trust.TrustAgentWrapper r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.trust.TrustAgentWrapper;

        $r1 = r0.<com.android.server.trust.TrustAgentWrapper: android.os.Handler mHandler>;

        return $r1;
    }

    static int access$1000(com.android.server.trust.TrustAgentWrapper)
    {
        com.android.server.trust.TrustAgentWrapper r0;
        int $i0;

        r0 := @parameter0: com.android.server.trust.TrustAgentWrapper;

        $i0 = r0.<com.android.server.trust.TrustAgentWrapper: int mUserId>;

        return $i0;
    }

    static com.android.server.trust.TrustManagerService access$1100(com.android.server.trust.TrustAgentWrapper)
    {
        com.android.server.trust.TrustAgentWrapper r0;
        com.android.server.trust.TrustManagerService $r1;

        r0 := @parameter0: com.android.server.trust.TrustAgentWrapper;

        $r1 = r0.<com.android.server.trust.TrustAgentWrapper: com.android.server.trust.TrustManagerService mTrustManagerService>;

        return $r1;
    }

    static void access$1200(com.android.server.trust.TrustAgentWrapper)
    {
        com.android.server.trust.TrustAgentWrapper r0;

        r0 := @parameter0: com.android.server.trust.TrustAgentWrapper;

        specialinvoke r0.<com.android.server.trust.TrustAgentWrapper: void onTrustTimeout()>();

        return;
    }

    static android.os.IBinder access$1300(com.android.server.trust.TrustAgentWrapper)
    {
        com.android.server.trust.TrustAgentWrapper r0;
        android.os.IBinder $r1;

        r0 := @parameter0: com.android.server.trust.TrustAgentWrapper;

        $r1 = r0.<com.android.server.trust.TrustAgentWrapper: android.os.IBinder mSetTrustAgentFeaturesToken>;

        return $r1;
    }

    static android.os.IBinder access$1302(com.android.server.trust.TrustAgentWrapper, android.os.IBinder)
    {
        com.android.server.trust.TrustAgentWrapper r0;
        android.os.IBinder r1;

        r0 := @parameter0: com.android.server.trust.TrustAgentWrapper;

        r1 := @parameter1: android.os.IBinder;

        r0.<com.android.server.trust.TrustAgentWrapper: android.os.IBinder mSetTrustAgentFeaturesToken> = r1;

        return r1;
    }

    static boolean access$1400(com.android.server.trust.TrustAgentWrapper)
    {
        com.android.server.trust.TrustAgentWrapper r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.trust.TrustAgentWrapper;

        $z0 = r0.<com.android.server.trust.TrustAgentWrapper: boolean mTrustDisabledByDpm>;

        return $z0;
    }

    static boolean access$1402(com.android.server.trust.TrustAgentWrapper, boolean)
    {
        com.android.server.trust.TrustAgentWrapper r0;
        boolean z0;

        r0 := @parameter0: com.android.server.trust.TrustAgentWrapper;

        z0 := @parameter1: boolean;

        r0.<com.android.server.trust.TrustAgentWrapper: boolean mTrustDisabledByDpm> = z0;

        return z0;
    }

    static boolean access$1500(com.android.server.trust.TrustAgentWrapper)
    {
        com.android.server.trust.TrustAgentWrapper r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.trust.TrustAgentWrapper;

        $z0 = r0.<com.android.server.trust.TrustAgentWrapper: boolean mManagingTrust>;

        return $z0;
    }

    static boolean access$1502(com.android.server.trust.TrustAgentWrapper, boolean)
    {
        com.android.server.trust.TrustAgentWrapper r0;
        boolean z0;

        r0 := @parameter0: com.android.server.trust.TrustAgentWrapper;

        z0 := @parameter1: boolean;

        r0.<com.android.server.trust.TrustAgentWrapper: boolean mManagingTrust> = z0;

        return z0;
    }

    static android.service.trust.ITrustAgentService access$1600(com.android.server.trust.TrustAgentWrapper)
    {
        com.android.server.trust.TrustAgentWrapper r0;
        android.service.trust.ITrustAgentService $r1;

        r0 := @parameter0: com.android.server.trust.TrustAgentWrapper;

        $r1 = r0.<com.android.server.trust.TrustAgentWrapper: android.service.trust.ITrustAgentService mTrustAgentService>;

        return $r1;
    }

    static android.service.trust.ITrustAgentService access$1602(com.android.server.trust.TrustAgentWrapper, android.service.trust.ITrustAgentService)
    {
        com.android.server.trust.TrustAgentWrapper r0;
        android.service.trust.ITrustAgentService r1;

        r0 := @parameter0: com.android.server.trust.TrustAgentWrapper;

        r1 := @parameter1: android.service.trust.ITrustAgentService;

        r0.<com.android.server.trust.TrustAgentWrapper: android.service.trust.ITrustAgentService mTrustAgentService> = r1;

        return r1;
    }

    static void access$1700(com.android.server.trust.TrustAgentWrapper, java.lang.Exception)
    {
        com.android.server.trust.TrustAgentWrapper r0;
        java.lang.Exception r1;

        r0 := @parameter0: com.android.server.trust.TrustAgentWrapper;

        r1 := @parameter1: java.lang.Exception;

        specialinvoke r0.<com.android.server.trust.TrustAgentWrapper: void onError(java.lang.Exception)>(r1);

        return;
    }

    static android.service.trust.ITrustAgentServiceCallback access$1800(com.android.server.trust.TrustAgentWrapper)
    {
        com.android.server.trust.TrustAgentWrapper r0;
        android.service.trust.ITrustAgentServiceCallback $r1;

        r0 := @parameter0: com.android.server.trust.TrustAgentWrapper;

        $r1 = r0.<com.android.server.trust.TrustAgentWrapper: android.service.trust.ITrustAgentServiceCallback mCallback>;

        return $r1;
    }

    static void access$1900(com.android.server.trust.TrustAgentWrapper, android.service.trust.ITrustAgentServiceCallback)
    {
        com.android.server.trust.TrustAgentWrapper r0;
        android.service.trust.ITrustAgentServiceCallback r1;

        r0 := @parameter0: com.android.server.trust.TrustAgentWrapper;

        r1 := @parameter1: android.service.trust.ITrustAgentServiceCallback;

        specialinvoke r0.<com.android.server.trust.TrustAgentWrapper: void setCallback(android.service.trust.ITrustAgentServiceCallback)>(r1);

        return;
    }

    static boolean access$2000(com.android.server.trust.TrustAgentWrapper)
    {
        com.android.server.trust.TrustAgentWrapper r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.trust.TrustAgentWrapper;

        $z0 = r0.<com.android.server.trust.TrustAgentWrapper: boolean mPendingSuccessfulUnlock>;

        return $z0;
    }

    static boolean access$2002(com.android.server.trust.TrustAgentWrapper, boolean)
    {
        com.android.server.trust.TrustAgentWrapper r0;
        boolean z0;

        r0 := @parameter0: com.android.server.trust.TrustAgentWrapper;

        z0 := @parameter1: boolean;

        r0.<com.android.server.trust.TrustAgentWrapper: boolean mPendingSuccessfulUnlock> = z0;

        return z0;
    }

    static boolean access$202(com.android.server.trust.TrustAgentWrapper, boolean)
    {
        com.android.server.trust.TrustAgentWrapper r0;
        boolean z0;

        r0 := @parameter0: com.android.server.trust.TrustAgentWrapper;

        z0 := @parameter1: boolean;

        r0.<com.android.server.trust.TrustAgentWrapper: boolean mTrusted> = z0;

        return z0;
    }

    static boolean access$2100(com.android.server.trust.TrustAgentWrapper)
    {
        com.android.server.trust.TrustAgentWrapper r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.trust.TrustAgentWrapper;

        $z0 = r0.<com.android.server.trust.TrustAgentWrapper: boolean mBound>;

        return $z0;
    }

    static void access$2200(com.android.server.trust.TrustAgentWrapper)
    {
        com.android.server.trust.TrustAgentWrapper r0;

        r0 := @parameter0: com.android.server.trust.TrustAgentWrapper;

        specialinvoke r0.<com.android.server.trust.TrustAgentWrapper: void scheduleRestart()>();

        return;
    }

    static java.lang.CharSequence access$300(com.android.server.trust.TrustAgentWrapper)
    {
        com.android.server.trust.TrustAgentWrapper r0;
        java.lang.CharSequence $r1;

        r0 := @parameter0: com.android.server.trust.TrustAgentWrapper;

        $r1 = r0.<com.android.server.trust.TrustAgentWrapper: java.lang.CharSequence mMessage>;

        return $r1;
    }

    static java.lang.CharSequence access$302(com.android.server.trust.TrustAgentWrapper, java.lang.CharSequence)
    {
        com.android.server.trust.TrustAgentWrapper r0;
        java.lang.CharSequence r1;

        r0 := @parameter0: com.android.server.trust.TrustAgentWrapper;

        r1 := @parameter1: java.lang.CharSequence;

        r0.<com.android.server.trust.TrustAgentWrapper: java.lang.CharSequence mMessage> = r1;

        return r1;
    }

    static long access$400(com.android.server.trust.TrustAgentWrapper)
    {
        com.android.server.trust.TrustAgentWrapper r0;
        long $l0;

        r0 := @parameter0: com.android.server.trust.TrustAgentWrapper;

        $l0 = r0.<com.android.server.trust.TrustAgentWrapper: long mMaximumTimeToLock>;

        return $l0;
    }

    static boolean access$500()
    {
        boolean $z0;

        $z0 = <com.android.server.trust.TrustAgentWrapper: boolean DEBUG>;

        return $z0;
    }

    static android.app.PendingIntent access$600(com.android.server.trust.TrustAgentWrapper)
    {
        com.android.server.trust.TrustAgentWrapper r0;
        android.app.PendingIntent $r1;

        r0 := @parameter0: com.android.server.trust.TrustAgentWrapper;

        $r1 = r0.<com.android.server.trust.TrustAgentWrapper: android.app.PendingIntent mAlarmPendingIntent>;

        return $r1;
    }

    static android.app.PendingIntent access$602(com.android.server.trust.TrustAgentWrapper, android.app.PendingIntent)
    {
        com.android.server.trust.TrustAgentWrapper r0;
        android.app.PendingIntent r1;

        r0 := @parameter0: com.android.server.trust.TrustAgentWrapper;

        r1 := @parameter1: android.app.PendingIntent;

        r0.<com.android.server.trust.TrustAgentWrapper: android.app.PendingIntent mAlarmPendingIntent> = r1;

        return r1;
    }

    static android.content.Context access$700(com.android.server.trust.TrustAgentWrapper)
    {
        com.android.server.trust.TrustAgentWrapper r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.server.trust.TrustAgentWrapper;

        $r1 = r0.<com.android.server.trust.TrustAgentWrapper: android.content.Context mContext>;

        return $r1;
    }

    static android.content.Intent access$800(com.android.server.trust.TrustAgentWrapper)
    {
        com.android.server.trust.TrustAgentWrapper r0;
        android.content.Intent $r1;

        r0 := @parameter0: com.android.server.trust.TrustAgentWrapper;

        $r1 = r0.<com.android.server.trust.TrustAgentWrapper: android.content.Intent mAlarmIntent>;

        return $r1;
    }

    static android.app.AlarmManager access$900(com.android.server.trust.TrustAgentWrapper)
    {
        com.android.server.trust.TrustAgentWrapper r0;
        android.app.AlarmManager $r1;

        r0 := @parameter0: com.android.server.trust.TrustAgentWrapper;

        $r1 = r0.<com.android.server.trust.TrustAgentWrapper: android.app.AlarmManager mAlarmManager>;

        return $r1;
    }

    private void onError(java.lang.Exception)
    {
        com.android.server.trust.TrustAgentWrapper r0;
        java.lang.Exception r1;

        r0 := @this: com.android.server.trust.TrustAgentWrapper;

        r1 := @parameter0: java.lang.Exception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("TrustAgentWrapper", "Exception ", r1);

        return;
    }

    private void onTrustTimeout()
    {
        com.android.server.trust.TrustAgentWrapper r0;
        android.service.trust.ITrustAgentService $r2, $r3;
        android.os.RemoteException $r4;

        r0 := @this: com.android.server.trust.TrustAgentWrapper;

     label1:
        $r2 = r0.<com.android.server.trust.TrustAgentWrapper: android.service.trust.ITrustAgentService mTrustAgentService>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.server.trust.TrustAgentWrapper: android.service.trust.ITrustAgentService mTrustAgentService>;

        interfaceinvoke $r3.<android.service.trust.ITrustAgentService: void onTrustTimeout()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        specialinvoke r0.<com.android.server.trust.TrustAgentWrapper: void onError(java.lang.Exception)>($r4);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void scheduleRestart()
    {
        com.android.server.trust.TrustAgentWrapper r0;
        long l0, $l1;
        android.os.Handler $r1, $r2;

        r0 := @this: com.android.server.trust.TrustAgentWrapper;

        $r1 = r0.<com.android.server.trust.TrustAgentWrapper: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: void removeMessages(int)>(4);

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l0 = $l1 + 300000L;

        r0.<com.android.server.trust.TrustAgentWrapper: long mScheduledRestartUptimeMillis> = l0;

        $r2 = r0.<com.android.server.trust.TrustAgentWrapper: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: boolean sendEmptyMessageAtTime(int,long)>(4, l0);

        return;
    }

    private void setCallback(android.service.trust.ITrustAgentServiceCallback)
    {
        com.android.server.trust.TrustAgentWrapper r0;
        android.service.trust.ITrustAgentService $r1, $r2;
        android.os.RemoteException $r3;
        android.service.trust.ITrustAgentServiceCallback r4;

        r0 := @this: com.android.server.trust.TrustAgentWrapper;

        r4 := @parameter0: android.service.trust.ITrustAgentServiceCallback;

     label1:
        $r1 = r0.<com.android.server.trust.TrustAgentWrapper: android.service.trust.ITrustAgentService mTrustAgentService>;

        if $r1 == null goto label2;

        $r2 = r0.<com.android.server.trust.TrustAgentWrapper: android.service.trust.ITrustAgentService mTrustAgentService>;

        interfaceinvoke $r2.<android.service.trust.ITrustAgentService: void setCallback(android.service.trust.ITrustAgentServiceCallback)>(r4);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        specialinvoke r0.<com.android.server.trust.TrustAgentWrapper: void onError(java.lang.Exception)>($r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void destroy()
    {
        com.android.server.trust.TrustAgentWrapper r0;
        android.os.Handler $r2, $r10;
        boolean $z0, $z1;
        com.android.server.trust.TrustManagerService $r3;
        android.content.ComponentName $r4, $r13;
        int $i0;
        com.android.server.trust.TrustArchive $r5;
        android.content.ServiceConnection $r6;
        android.content.Context $r7, $r9;
        android.content.BroadcastReceiver $r8;
        java.lang.StringBuilder $r11;
        java.lang.String $r14, $r16;

        r0 := @this: com.android.server.trust.TrustAgentWrapper;

        $r2 = r0.<com.android.server.trust.TrustAgentWrapper: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: void removeMessages(int)>(4);

        $z0 = r0.<com.android.server.trust.TrustAgentWrapper: boolean mBound>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $z1 = <com.android.server.trust.TrustAgentWrapper: boolean DEBUG>;

        if $z1 == 0 goto label2;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TrustAgent unbound : ");

        $r13 = r0.<com.android.server.trust.TrustAgentWrapper: android.content.ComponentName mName>;

        $r14 = virtualinvoke $r13.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("TrustAgentWrapper", $r16);

     label2:
        $r3 = r0.<com.android.server.trust.TrustAgentWrapper: com.android.server.trust.TrustManagerService mTrustManagerService>;

        $r5 = $r3.<com.android.server.trust.TrustManagerService: com.android.server.trust.TrustArchive mArchive>;

        $i0 = r0.<com.android.server.trust.TrustAgentWrapper: int mUserId>;

        $r4 = r0.<com.android.server.trust.TrustAgentWrapper: android.content.ComponentName mName>;

        virtualinvoke $r5.<com.android.server.trust.TrustArchive: void logAgentStopped(int,android.content.ComponentName)>($i0, $r4);

        $r7 = r0.<com.android.server.trust.TrustAgentWrapper: android.content.Context mContext>;

        $r6 = r0.<com.android.server.trust.TrustAgentWrapper: android.content.ServiceConnection mConnection>;

        virtualinvoke $r7.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r6);

        r0.<com.android.server.trust.TrustAgentWrapper: boolean mBound> = 0;

        $r9 = r0.<com.android.server.trust.TrustAgentWrapper: android.content.Context mContext>;

        $r8 = r0.<com.android.server.trust.TrustAgentWrapper: android.content.BroadcastReceiver mBroadcastReceiver>;

        virtualinvoke $r9.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r8);

        r0.<com.android.server.trust.TrustAgentWrapper: android.service.trust.ITrustAgentService mTrustAgentService> = null;

        r0.<com.android.server.trust.TrustAgentWrapper: android.os.IBinder mSetTrustAgentFeaturesToken> = null;

        $r10 = r0.<com.android.server.trust.TrustAgentWrapper: android.os.Handler mHandler>;

        virtualinvoke $r10.<android.os.Handler: boolean sendEmptyMessage(int)>(2);

        return;
    }

    public java.lang.CharSequence getMessage()
    {
        com.android.server.trust.TrustAgentWrapper r0;
        java.lang.CharSequence $r1;

        r0 := @this: com.android.server.trust.TrustAgentWrapper;

        $r1 = r0.<com.android.server.trust.TrustAgentWrapper: java.lang.CharSequence mMessage>;

        return $r1;
    }

    public long getScheduledRestartUptimeMillis()
    {
        com.android.server.trust.TrustAgentWrapper r0;
        long $l0;

        r0 := @this: com.android.server.trust.TrustAgentWrapper;

        $l0 = r0.<com.android.server.trust.TrustAgentWrapper: long mScheduledRestartUptimeMillis>;

        return $l0;
    }

    public boolean isBound()
    {
        com.android.server.trust.TrustAgentWrapper r0;
        boolean $z0;

        r0 := @this: com.android.server.trust.TrustAgentWrapper;

        $z0 = r0.<com.android.server.trust.TrustAgentWrapper: boolean mBound>;

        return $z0;
    }

    public boolean isConnected()
    {
        com.android.server.trust.TrustAgentWrapper r0;
        android.service.trust.ITrustAgentService $r1;
        boolean z0;

        r0 := @this: com.android.server.trust.TrustAgentWrapper;

        $r1 = r0.<com.android.server.trust.TrustAgentWrapper: android.service.trust.ITrustAgentService mTrustAgentService>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isManagingTrust()
    {
        com.android.server.trust.TrustAgentWrapper r0;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.server.trust.TrustAgentWrapper;

        $z0 = r0.<com.android.server.trust.TrustAgentWrapper: boolean mManagingTrust>;

        if $z0 == 0 goto label1;

        $z1 = r0.<com.android.server.trust.TrustAgentWrapper: boolean mTrustDisabledByDpm>;

        if $z1 != 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public boolean isTrusted()
    {
        com.android.server.trust.TrustAgentWrapper r0;
        boolean $z0, $z1, $z2, z3;

        r0 := @this: com.android.server.trust.TrustAgentWrapper;

        $z0 = r0.<com.android.server.trust.TrustAgentWrapper: boolean mTrusted>;

        if $z0 == 0 goto label1;

        $z1 = r0.<com.android.server.trust.TrustAgentWrapper: boolean mManagingTrust>;

        if $z1 == 0 goto label1;

        $z2 = r0.<com.android.server.trust.TrustAgentWrapper: boolean mTrustDisabledByDpm>;

        if $z2 != 0 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        return z3;
    }

    public void onDeviceLocked()
    {
        com.android.server.trust.TrustAgentWrapper r0;
        android.service.trust.ITrustAgentService $r2, $r3;
        android.os.RemoteException $r4;

        r0 := @this: com.android.server.trust.TrustAgentWrapper;

     label1:
        $r2 = r0.<com.android.server.trust.TrustAgentWrapper: android.service.trust.ITrustAgentService mTrustAgentService>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.server.trust.TrustAgentWrapper: android.service.trust.ITrustAgentService mTrustAgentService>;

        interfaceinvoke $r3.<android.service.trust.ITrustAgentService: void onDeviceLocked()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        specialinvoke r0.<com.android.server.trust.TrustAgentWrapper: void onError(java.lang.Exception)>($r4);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onDeviceUnlocked()
    {
        com.android.server.trust.TrustAgentWrapper r0;
        android.service.trust.ITrustAgentService $r2, $r3;
        android.os.RemoteException $r4;

        r0 := @this: com.android.server.trust.TrustAgentWrapper;

     label1:
        $r2 = r0.<com.android.server.trust.TrustAgentWrapper: android.service.trust.ITrustAgentService mTrustAgentService>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.server.trust.TrustAgentWrapper: android.service.trust.ITrustAgentService mTrustAgentService>;

        interfaceinvoke $r3.<android.service.trust.ITrustAgentService: void onDeviceUnlocked()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        specialinvoke r0.<com.android.server.trust.TrustAgentWrapper: void onError(java.lang.Exception)>($r4);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onEscrowTokenActivated(long, int)
    {
        com.android.server.trust.TrustAgentWrapper r0;
        long l0;
        int i1;
        boolean $z0;
        java.lang.StringBuilder $r1;
        java.lang.String $r6;
        android.os.RemoteException $r7;
        android.service.trust.ITrustAgentService r9;

        r0 := @this: com.android.server.trust.TrustAgentWrapper;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $z0 = <com.android.server.trust.TrustAgentWrapper: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onEscrowTokenActivated: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" user: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("TrustAgentWrapper", $r6);

     label1:
        r9 = r0.<com.android.server.trust.TrustAgentWrapper: android.service.trust.ITrustAgentService mTrustAgentService>;

        if r9 == null goto label5;

     label2:
        interfaceinvoke r9.<android.service.trust.ITrustAgentService: void onTokenStateReceived(long,int)>(l0, 1);

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        specialinvoke r0.<com.android.server.trust.TrustAgentWrapper: void onError(java.lang.Exception)>($r7);

     label5:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public void onUnlockAttempt(boolean)
    {
        com.android.server.trust.TrustAgentWrapper r0;
        boolean z0;
        android.service.trust.ITrustAgentService $r2, $r3;
        android.os.RemoteException $r4;

        r0 := @this: com.android.server.trust.TrustAgentWrapper;

        z0 := @parameter0: boolean;

     label1:
        $r2 = r0.<com.android.server.trust.TrustAgentWrapper: android.service.trust.ITrustAgentService mTrustAgentService>;

        if $r2 == null goto label3;

        $r3 = r0.<com.android.server.trust.TrustAgentWrapper: android.service.trust.ITrustAgentService mTrustAgentService>;

        interfaceinvoke $r3.<android.service.trust.ITrustAgentService: void onUnlockAttempt(boolean)>(z0);

     label2:
        goto label4;

     label3:
        r0.<com.android.server.trust.TrustAgentWrapper: boolean mPendingSuccessfulUnlock> = z0;

     label4:
        goto label6;

     label5:
        $r4 := @caughtexception;

        specialinvoke r0.<com.android.server.trust.TrustAgentWrapper: void onError(java.lang.Exception)>($r4);

     label6:
        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public void onUnlockLockout(int)
    {
        com.android.server.trust.TrustAgentWrapper r0;
        int i0;
        android.service.trust.ITrustAgentService $r2, $r3;
        android.os.RemoteException $r4;

        r0 := @this: com.android.server.trust.TrustAgentWrapper;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<com.android.server.trust.TrustAgentWrapper: android.service.trust.ITrustAgentService mTrustAgentService>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.server.trust.TrustAgentWrapper: android.service.trust.ITrustAgentService mTrustAgentService>;

        interfaceinvoke $r3.<android.service.trust.ITrustAgentService: void onUnlockLockout(int)>(i0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        specialinvoke r0.<com.android.server.trust.TrustAgentWrapper: void onError(java.lang.Exception)>($r4);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    boolean updateDevicePolicyFeatures()
    {
        com.android.server.trust.TrustAgentWrapper r0;
        java.util.List r1, $r6;
        long l0, $l6;
        boolean $z1, $z2, $z4, $z5, z6, z7, z8;
        android.service.trust.ITrustAgentService $r2, $r7, $r13;
        int $i1, $i2, $i3, $i4, $i5, $i8, $i9;
        com.android.server.trust.TrustManagerService $r3;
        android.content.Context $r4;
        java.lang.Object $r5;
        byte $b7;
        android.app.PendingIntent $r8, $r9;
        android.app.AlarmManager $r10;
        android.os.Handler $r11;
        android.content.ComponentName $r12, $r15, $r26;
        java.lang.String $r16, $r20, $r23, $r29;
        java.lang.StringBuilder $r24, r33, r34;
        android.os.RemoteException $r30;
        android.app.admin.DevicePolicyManager r32;
        android.os.Binder r35;

        r0 := @this: com.android.server.trust.TrustAgentWrapper;

        z6 = 0;

        z7 = 0;

        $z1 = <com.android.server.trust.TrustAgentWrapper: boolean DEBUG>;

        if $z1 == 0 goto label01;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateDevicePolicyFeatures(");

        $r26 = r0.<com.android.server.trust.TrustAgentWrapper: android.content.ComponentName mName>;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("TrustAgentWrapper", $r29);

     label01:
        z8 = 0;

     label02:
        $r2 = r0.<com.android.server.trust.TrustAgentWrapper: android.service.trust.ITrustAgentService mTrustAgentService>;

        if $r2 == null goto label65;

     label03:
        z8 = 0;

     label04:
        $r4 = r0.<com.android.server.trust.TrustAgentWrapper: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("device_policy");

        r32 = (android.app.admin.DevicePolicyManager) $r5;

     label05:
        z8 = 0;

     label06:
        $i2 = r0.<com.android.server.trust.TrustAgentWrapper: int mUserId>;

        $i3 = virtualinvoke r32.<android.app.admin.DevicePolicyManager: int getKeyguardDisabledFeatures(android.content.ComponentName,int)>(null, $i2);

        $i4 = $i3 & 16;

        if $i4 == 0 goto label48;

     label07:
        z8 = 0;

     label08:
        $r12 = r0.<com.android.server.trust.TrustAgentWrapper: android.content.ComponentName mName>;

        $i8 = r0.<com.android.server.trust.TrustAgentWrapper: int mUserId>;

        r1 = virtualinvoke r32.<android.app.admin.DevicePolicyManager: java.util.List getTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName,int)>(null, $r12, $i8);

     label09:
        z7 = 1;

        z8 = 1;

     label10:
        $z4 = <com.android.server.trust.TrustAgentWrapper: boolean DEBUG>;

        if $z4 == 0 goto label21;

     label11:
        z8 = 1;

     label12:
        r33 = new java.lang.StringBuilder;

     label13:
        z8 = 1;

     label14:
        specialinvoke r33.<java.lang.StringBuilder: void <init>()>();

     label15:
        z8 = 1;

     label16:
        virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Detected trust agents disabled. Config = ");

     label17:
        z8 = 1;

     label18:
        virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

     label19:
        z8 = 1;

     label20:
        $r23 = virtualinvoke r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("TrustAgentWrapper", $r23);

     label21:
        if r1 == null goto label47;

        z8 = 1;

     label22:
        $i9 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i9 <= 0 goto label47;

     label23:
        z8 = 1;

     label24:
        $z5 = <com.android.server.trust.TrustAgentWrapper: boolean DEBUG>;

        if $z5 == 0 goto label39;

     label25:
        z8 = 1;

     label26:
        r34 = new java.lang.StringBuilder;

     label27:
        z8 = 1;

     label28:
        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

     label29:
        z8 = 1;

     label30:
        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TrustAgent ");

     label31:
        z8 = 1;

     label32:
        $r15 = r0.<com.android.server.trust.TrustAgentWrapper: android.content.ComponentName mName>;

        $r16 = virtualinvoke $r15.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

     label33:
        z8 = 1;

     label34:
        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" disabled until it acknowledges ");

     label35:
        z8 = 1;

     label36:
        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

     label37:
        z8 = 1;

     label38:
        $r20 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("TrustAgentWrapper", $r20);

     label39:
        z8 = 1;

     label40:
        r35 = new android.os.Binder;

     label41:
        z8 = 1;

     label42:
        specialinvoke r35.<android.os.Binder: void <init>()>();

     label43:
        z8 = 1;

     label44:
        r0.<com.android.server.trust.TrustAgentWrapper: android.os.IBinder mSetTrustAgentFeaturesToken> = r35;

     label45:
        z8 = 1;

     label46:
        $r13 = r0.<com.android.server.trust.TrustAgentWrapper: android.service.trust.ITrustAgentService mTrustAgentService>;

        interfaceinvoke $r13.<android.service.trust.ITrustAgentService: void onConfigure(java.util.List,android.os.IBinder)>(r1, r35);

     label47:
        goto label50;

     label48:
        z8 = 0;

     label49:
        $r7 = r0.<com.android.server.trust.TrustAgentWrapper: android.service.trust.ITrustAgentService mTrustAgentService>;

        $r6 = <java.util.Collections: java.util.List EMPTY_LIST>;

        interfaceinvoke $r7.<android.service.trust.ITrustAgentService: void onConfigure(java.util.List,android.os.IBinder)>($r6, null);

     label50:
        z8 = z7;

     label51:
        $i5 = r0.<com.android.server.trust.TrustAgentWrapper: int mUserId>;

        l0 = virtualinvoke r32.<android.app.admin.DevicePolicyManager: long getMaximumTimeToLock(android.content.ComponentName,int)>(null, $i5);

     label52:
        z6 = z7;

        z8 = z7;

     label53:
        $l6 = r0.<com.android.server.trust.TrustAgentWrapper: long mMaximumTimeToLock>;

        $b7 = l0 cmp $l6;

        if $b7 == 0 goto label65;

     label54:
        z8 = z7;

     label55:
        r0.<com.android.server.trust.TrustAgentWrapper: long mMaximumTimeToLock> = l0;

     label56:
        z6 = z7;

        z8 = z7;

     label57:
        $r8 = r0.<com.android.server.trust.TrustAgentWrapper: android.app.PendingIntent mAlarmPendingIntent>;

        if $r8 == null goto label65;

     label58:
        z8 = z7;

     label59:
        $r10 = r0.<com.android.server.trust.TrustAgentWrapper: android.app.AlarmManager mAlarmManager>;

        $r9 = r0.<com.android.server.trust.TrustAgentWrapper: android.app.PendingIntent mAlarmPendingIntent>;

        virtualinvoke $r10.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>($r9);

     label60:
        z8 = z7;

     label61:
        r0.<com.android.server.trust.TrustAgentWrapper: android.app.PendingIntent mAlarmPendingIntent> = null;

     label62:
        z8 = z7;

     label63:
        $r11 = r0.<com.android.server.trust.TrustAgentWrapper: android.os.Handler mHandler>;

        virtualinvoke $r11.<android.os.Handler: boolean sendEmptyMessage(int)>(3);

     label64:
        z6 = z7;

     label65:
        z8 = z6;

        goto label67;

     label66:
        $r30 := @caughtexception;

        specialinvoke r0.<com.android.server.trust.TrustAgentWrapper: void onError(java.lang.Exception)>($r30);

     label67:
        $z2 = r0.<com.android.server.trust.TrustAgentWrapper: boolean mTrustDisabledByDpm>;

        if $z2 == z8 goto label68;

        r0.<com.android.server.trust.TrustAgentWrapper: boolean mTrustDisabledByDpm> = z8;

        $r3 = r0.<com.android.server.trust.TrustAgentWrapper: com.android.server.trust.TrustManagerService mTrustManagerService>;

        $i1 = r0.<com.android.server.trust.TrustAgentWrapper: int mUserId>;

        virtualinvoke $r3.<com.android.server.trust.TrustManagerService: void updateTrust(int,int)>($i1, 0);

     label68:
        return z8;

        catch android.os.RemoteException from label02 to label03 with label66;
        catch android.os.RemoteException from label04 to label05 with label66;
        catch android.os.RemoteException from label06 to label07 with label66;
        catch android.os.RemoteException from label08 to label09 with label66;
        catch android.os.RemoteException from label10 to label11 with label66;
        catch android.os.RemoteException from label12 to label13 with label66;
        catch android.os.RemoteException from label14 to label15 with label66;
        catch android.os.RemoteException from label16 to label17 with label66;
        catch android.os.RemoteException from label18 to label19 with label66;
        catch android.os.RemoteException from label20 to label21 with label66;
        catch android.os.RemoteException from label22 to label23 with label66;
        catch android.os.RemoteException from label24 to label25 with label66;
        catch android.os.RemoteException from label26 to label27 with label66;
        catch android.os.RemoteException from label28 to label29 with label66;
        catch android.os.RemoteException from label30 to label31 with label66;
        catch android.os.RemoteException from label32 to label33 with label66;
        catch android.os.RemoteException from label34 to label35 with label66;
        catch android.os.RemoteException from label36 to label37 with label66;
        catch android.os.RemoteException from label38 to label39 with label66;
        catch android.os.RemoteException from label40 to label41 with label66;
        catch android.os.RemoteException from label42 to label43 with label66;
        catch android.os.RemoteException from label44 to label45 with label66;
        catch android.os.RemoteException from label46 to label47 with label66;
        catch android.os.RemoteException from label49 to label50 with label66;
        catch android.os.RemoteException from label51 to label52 with label66;
        catch android.os.RemoteException from label53 to label54 with label66;
        catch android.os.RemoteException from label55 to label56 with label66;
        catch android.os.RemoteException from label57 to label58 with label66;
        catch android.os.RemoteException from label59 to label60 with label66;
        catch android.os.RemoteException from label61 to label62 with label66;
        catch android.os.RemoteException from label63 to label64 with label66;
    }
}
