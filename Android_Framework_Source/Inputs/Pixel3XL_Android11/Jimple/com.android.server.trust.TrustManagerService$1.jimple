class com.android.server.trust.TrustManagerService$1 extends android.app.trust.ITrustManager$Stub
{
    final com.android.server.trust.TrustManagerService this$0;

    void <init>(com.android.server.trust.TrustManagerService)
    {
        com.android.server.trust.TrustManagerService$1 r0;
        com.android.server.trust.TrustManagerService r1;

        r0 := @this: com.android.server.trust.TrustManagerService$1;

        r1 := @parameter0: com.android.server.trust.TrustManagerService;

        r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0> = r1;

        specialinvoke r0.<android.app.trust.ITrustManager$Stub: void <init>()>();

        return;
    }

    static void access$900(com.android.server.trust.TrustManagerService$1, java.io.PrintWriter, android.content.pm.UserInfo, boolean)
    {
        com.android.server.trust.TrustManagerService$1 r0;
        java.io.PrintWriter r1;
        android.content.pm.UserInfo r2;
        boolean z0;

        r0 := @parameter0: com.android.server.trust.TrustManagerService$1;

        r1 := @parameter1: java.io.PrintWriter;

        r2 := @parameter2: android.content.pm.UserInfo;

        z0 := @parameter3: boolean;

        specialinvoke r0.<com.android.server.trust.TrustManagerService$1: void dumpUser(java.io.PrintWriter,android.content.pm.UserInfo,boolean)>(r1, r2, z0);

        return;
    }

    private java.lang.String dumpBool(boolean)
    {
        com.android.server.trust.TrustManagerService$1 r0;
        boolean z0;
        java.lang.String r1;

        r0 := @this: com.android.server.trust.TrustManagerService$1;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        r1 = "1";

        goto label2;

     label1:
        r1 = "0";

     label2:
        return r1;
    }

    private java.lang.String dumpHex(int)
    {
        com.android.server.trust.TrustManagerService$1 r0;
        int i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r6;

        r0 := @this: com.android.server.trust.TrustManagerService$1;

        i0 := @parameter0: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    private void dumpUser(java.io.PrintWriter, android.content.pm.UserInfo, boolean)
    {
        com.android.server.trust.TrustManagerService$1 r0;
        java.io.PrintWriter r1;
        android.content.pm.UserInfo r2;
        java.util.Iterator r4;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10, z11, $z12;
        java.lang.String r5, $r7, $r14, $r16, $r20, $r22, $r26, $r28, $r33, $r35, $r44, $r48, $r50, $r54, $r56, $r60, $r62, $r65, $r67, $r70, $r75, $r82;
        java.lang.Object[] $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.Integer $r8, $r9;
        java.lang.StringBuilder $r11, $r17, $r23, $r29, $r45, $r51, $r57, $r63, $r72, $r76;
        com.android.server.trust.TrustManagerService $r13, $r19, $r25, $r31, $r37, $r39;
        com.android.server.trust.TrustManagerService$StrongAuthTracker $r32;
        android.util.ArraySet $r36, $r38;
        com.android.server.trust.TrustArchive $r40;
        java.lang.Object $r41;
        com.android.server.trust.TrustAgentWrapper $r42, $r47, $r53, $r59, $r68, $r71, $r78;
        android.content.ComponentName $r43, $r69;
        long $l10, $l11, $l12;
        java.lang.CharSequence $r79;
        com.android.server.trust.TrustManagerService$AgentInfo r87;

        r0 := @this: com.android.server.trust.TrustManagerService$1;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: android.content.pm.UserInfo;

        z10 := @parameter2: boolean;

        $r6 = newarray (java.lang.Object)[3];

        $r7 = r2.<android.content.pm.UserInfo: java.lang.String name>;

        $r6[0] = $r7;

        $i0 = r2.<android.content.pm.UserInfo: int id>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r6[1] = $r8;

        $i1 = r2.<android.content.pm.UserInfo: int flags>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r6[2] = $r9;

        virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>(" User \"%s\" (id=%d, flags=%#x)", $r6);

        $z1 = virtualinvoke r2.<android.content.pm.UserInfo: boolean supportsSwitchToByUser()>();

        if $z1 != 0 goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("(managed profile)");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("   disabled because switching to this user is not possible.");

        return;

     label1:
        if z10 == 0 goto label2;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" (current)");

     label2:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": trusted=");

        $r13 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        $i2 = r2.<android.content.pm.UserInfo: int id>;

        $z2 = staticinvoke <com.android.server.trust.TrustManagerService: boolean access$1000(com.android.server.trust.TrustManagerService,int)>($r13, $i2);

        $r14 = specialinvoke r0.<com.android.server.trust.TrustManagerService$1: java.lang.String dumpBool(boolean)>($z2);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r16);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", trustManaged=");

        $r19 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        $i3 = r2.<android.content.pm.UserInfo: int id>;

        $z3 = staticinvoke <com.android.server.trust.TrustManagerService: boolean access$1100(com.android.server.trust.TrustManagerService,int)>($r19, $i3);

        $r20 = specialinvoke r0.<com.android.server.trust.TrustManagerService$1: java.lang.String dumpBool(boolean)>($z3);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r22);

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", deviceLocked=");

        $r25 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        $i4 = r2.<android.content.pm.UserInfo: int id>;

        $z4 = virtualinvoke $r25.<com.android.server.trust.TrustManagerService: boolean isDeviceLockedInner(int)>($i4);

        $r26 = specialinvoke r0.<com.android.server.trust.TrustManagerService$1: java.lang.String dumpBool(boolean)>($z4);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r28);

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", strongAuthRequired=");

        $r31 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        $r32 = staticinvoke <com.android.server.trust.TrustManagerService: com.android.server.trust.TrustManagerService$StrongAuthTracker access$1200(com.android.server.trust.TrustManagerService)>($r31);

        $i5 = r2.<android.content.pm.UserInfo: int id>;

        $i6 = virtualinvoke $r32.<com.android.server.trust.TrustManagerService$StrongAuthTracker: int getStrongAuthForUser(int)>($i5);

        $r33 = specialinvoke r0.<com.android.server.trust.TrustManagerService$1: java.lang.String dumpHex(int)>($i6);

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r35);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("   Enabled agents:");

        z11 = 0;

        $r36 = new android.util.ArraySet;

        specialinvoke $r36.<android.util.ArraySet: void <init>()>();

        $r37 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        $r38 = staticinvoke <com.android.server.trust.TrustManagerService: android.util.ArraySet access$1300(com.android.server.trust.TrustManagerService)>($r37);

        r4 = virtualinvoke $r38.<android.util.ArraySet: java.util.Iterator iterator()>();

     label3:
        $z12 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z12 == 0 goto label8;

        $r41 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r87 = (com.android.server.trust.TrustManagerService$AgentInfo) $r41;

        $i9 = r87.<com.android.server.trust.TrustManagerService$AgentInfo: int userId>;

        $i8 = r2.<android.content.pm.UserInfo: int id>;

        if $i9 == $i8 goto label4;

        goto label3;

     label4:
        $r42 = r87.<com.android.server.trust.TrustManagerService$AgentInfo: com.android.server.trust.TrustAgentWrapper agent>;

        z0 = virtualinvoke $r42.<com.android.server.trust.TrustAgentWrapper: boolean isTrusted()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $r43 = r87.<com.android.server.trust.TrustManagerService$AgentInfo: android.content.ComponentName component>;

        $r44 = virtualinvoke $r43.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r44);

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("     bound=");

        $r47 = r87.<com.android.server.trust.TrustManagerService$AgentInfo: com.android.server.trust.TrustAgentWrapper agent>;

        $z5 = virtualinvoke $r47.<com.android.server.trust.TrustAgentWrapper: boolean isBound()>();

        $r48 = specialinvoke r0.<com.android.server.trust.TrustManagerService$1: java.lang.String dumpBool(boolean)>($z5);

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r50);

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", connected=");

        $r53 = r87.<com.android.server.trust.TrustManagerService$AgentInfo: com.android.server.trust.TrustAgentWrapper agent>;

        $z6 = virtualinvoke $r53.<com.android.server.trust.TrustAgentWrapper: boolean isConnected()>();

        $r54 = specialinvoke r0.<com.android.server.trust.TrustManagerService$1: java.lang.String dumpBool(boolean)>($z6);

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        $r56 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r56);

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", managingTrust=");

        $r59 = r87.<com.android.server.trust.TrustManagerService$AgentInfo: com.android.server.trust.TrustAgentWrapper agent>;

        $z7 = virtualinvoke $r59.<com.android.server.trust.TrustAgentWrapper: boolean isManagingTrust()>();

        $r60 = specialinvoke r0.<com.android.server.trust.TrustManagerService$1: java.lang.String dumpBool(boolean)>($z7);

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        $r62 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r62);

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", trusted=");

        $r65 = specialinvoke r0.<com.android.server.trust.TrustManagerService$1: java.lang.String dumpBool(boolean)>(z0);

        virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        $r67 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r67);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        if z0 == 0 goto label5;

        $r76 = new java.lang.StringBuilder;

        specialinvoke $r76.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      message=\"");

        $r78 = r87.<com.android.server.trust.TrustManagerService$AgentInfo: com.android.server.trust.TrustAgentWrapper agent>;

        $r79 = virtualinvoke $r78.<com.android.server.trust.TrustAgentWrapper: java.lang.CharSequence getMessage()>();

        virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r79);

        virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r82 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r82);

     label5:
        $r68 = r87.<com.android.server.trust.TrustManagerService$AgentInfo: com.android.server.trust.TrustAgentWrapper agent>;

        $z8 = virtualinvoke $r68.<com.android.server.trust.TrustAgentWrapper: boolean isConnected()>();

        if $z8 != 0 goto label6;

        $r71 = r87.<com.android.server.trust.TrustManagerService$AgentInfo: com.android.server.trust.TrustAgentWrapper agent>;

        $l10 = virtualinvoke $r71.<com.android.server.trust.TrustAgentWrapper: long getScheduledRestartUptimeMillis()>();

        $l11 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l12 = $l10 - $l11;

        r5 = staticinvoke <com.android.server.trust.TrustArchive: java.lang.String formatDuration(long)>($l12);

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      restartScheduledAt=");

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r75 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r75);

     label6:
        $r69 = r87.<com.android.server.trust.TrustManagerService$AgentInfo: android.content.ComponentName component>;

        $r70 = staticinvoke <com.android.server.trust.TrustArchive: java.lang.String getSimpleName(android.content.ComponentName)>($r69);

        $z9 = virtualinvoke $r36.<android.util.ArraySet: boolean add(java.lang.Object)>($r70);

        if $z9 != 0 goto label7;

        z11 = 1;

     label7:
        goto label3;

     label8:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("   Events:");

        $r39 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        $r40 = $r39.<com.android.server.trust.TrustManagerService: com.android.server.trust.TrustArchive mArchive>;

        $i7 = r2.<android.content.pm.UserInfo: int id>;

        virtualinvoke $r40.<com.android.server.trust.TrustArchive: void dump(java.io.PrintWriter,int,int,java.lang.String,boolean)>(r1, 50, $i7, "    ", z11);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        return;
    }

    private void enforceListenerPermission()
    {
        com.android.server.trust.TrustManagerService$1 r0;
        com.android.server.trust.TrustManagerService $r1;
        android.content.Context $r2;

        r0 := @this: com.android.server.trust.TrustManagerService$1;

        $r1 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        $r2 = staticinvoke <com.android.server.trust.TrustManagerService: android.content.Context access$600(com.android.server.trust.TrustManagerService)>($r1);

        virtualinvoke $r2.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.TRUST_LISTENER", "register trust listener");

        return;
    }

    private void enforceReportPermission()
    {
        com.android.server.trust.TrustManagerService$1 r0;
        com.android.server.trust.TrustManagerService $r1;
        android.content.Context $r2;

        r0 := @this: com.android.server.trust.TrustManagerService$1;

        $r1 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        $r2 = staticinvoke <com.android.server.trust.TrustManagerService: android.content.Context access$600(com.android.server.trust.TrustManagerService)>($r1);

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.ACCESS_KEYGUARD_SECURE_STORAGE", "reporting trust events");

        return;
    }

    static void lambda$reportKeyguardShowingChanged$0()
    {
        return;
    }

    public void clearAllBiometricRecognized(android.hardware.biometrics.BiometricSourceType)
    {
        com.android.server.trust.TrustManagerService$1 r0;
        android.util.SparseBooleanArray r1, $r4;
        com.android.server.trust.TrustManagerService $r2, $r3, $r5;
        android.os.Handler $r6;
        android.os.Message $r7;
        java.lang.Throwable $r8;
        android.hardware.biometrics.BiometricSourceType r9;

        r0 := @this: com.android.server.trust.TrustManagerService$1;

        r9 := @parameter0: android.hardware.biometrics.BiometricSourceType;

        specialinvoke r0.<com.android.server.trust.TrustManagerService$1: void enforceReportPermission()>();

        $r2 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        r1 = staticinvoke <com.android.server.trust.TrustManagerService: android.util.SparseBooleanArray access$1600(com.android.server.trust.TrustManagerService)>($r2);

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        $r4 = staticinvoke <com.android.server.trust.TrustManagerService: android.util.SparseBooleanArray access$1600(com.android.server.trust.TrustManagerService)>($r3);

        virtualinvoke $r4.<android.util.SparseBooleanArray: void clear()>();

        exitmonitor r1;

     label2:
        $r5 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        $r6 = staticinvoke <com.android.server.trust.TrustManagerService: android.os.Handler access$300(com.android.server.trust.TrustManagerService)>($r5);

        $r7 = virtualinvoke $r6.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(14, -1, 0);

        virtualinvoke $r7.<android.os.Message: void sendToTarget()>();

        return;

     label3:
        $r8 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.trust.TrustManagerService$1 r0;
        java.io.PrintWriter r1;
        java.lang.String[] r2;
        com.android.server.trust.TrustManagerService $r3, $r5, $r6, $r7, $r9;
        android.content.Context $r4;
        boolean $z0, $z1, $z2;
        android.os.UserManager $r8;
        android.os.Handler $r10;
        com.android.server.trust.TrustManagerService$1$1 $r11;
        java.io.FileDescriptor r12;
        java.util.List r13;

        r0 := @this: com.android.server.trust.TrustManagerService$1;

        r12 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r2 := @parameter2: java.lang.String[];

        $r3 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        $r4 = staticinvoke <com.android.server.trust.TrustManagerService: android.content.Context access$600(com.android.server.trust.TrustManagerService)>($r3);

        $z0 = staticinvoke <com.android.internal.util.DumpUtils: boolean checkDumpPermission(android.content.Context,java.lang.String,java.io.PrintWriter)>($r4, "TrustManagerService", r1);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r5 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        $z1 = virtualinvoke $r5.<com.android.server.trust.TrustManagerService: boolean isSafeMode()>();

        if $z1 == 0 goto label2;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("disabled because the system is in safe mode.");

        return;

     label2:
        $r6 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        $z2 = staticinvoke <com.android.server.trust.TrustManagerService: boolean access$700(com.android.server.trust.TrustManagerService)>($r6);

        if $z2 != 0 goto label3;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("disabled because the third-party apps can\'t run yet.");

        return;

     label3:
        $r7 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        $r8 = staticinvoke <com.android.server.trust.TrustManagerService: android.os.UserManager access$800(com.android.server.trust.TrustManagerService)>($r7);

        r13 = virtualinvoke $r8.<android.os.UserManager: java.util.List getUsers(boolean)>(1);

        $r9 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        $r10 = staticinvoke <com.android.server.trust.TrustManagerService: android.os.Handler access$300(com.android.server.trust.TrustManagerService)>($r9);

        $r11 = new com.android.server.trust.TrustManagerService$1$1;

        specialinvoke $r11.<com.android.server.trust.TrustManagerService$1$1: void <init>(com.android.server.trust.TrustManagerService$1,java.io.PrintWriter,java.util.List)>(r0, r1, r13);

        virtualinvoke $r10.<android.os.Handler: boolean runWithScissors(java.lang.Runnable,long)>($r11, 1500L);

        return;
    }

    public boolean isDeviceLocked(int) throws android.os.RemoteException
    {
        com.android.server.trust.TrustManagerService$1 r0;
        int i0, $i2, $i3, i4, i5;
        long l1;
        boolean z0, $z1;
        com.android.server.trust.TrustManagerService $r2, $r4, $r5;
        com.android.internal.widget.LockPatternUtils $r3;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.trust.TrustManagerService$1;

        i4 := @parameter0: int;

        $i2 = staticinvoke <com.android.server.trust.TrustManagerService$1: int getCallingPid()>();

        $i3 = staticinvoke <com.android.server.trust.TrustManagerService$1: int getCallingUid()>();

        i0 = staticinvoke <android.app.ActivityManager: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>($i2, $i3, i4, 0, 1, "isDeviceLocked", null);

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        i5 = i0;

     label1:
        $r2 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        $r3 = staticinvoke <com.android.server.trust.TrustManagerService: com.android.internal.widget.LockPatternUtils access$400(com.android.server.trust.TrustManagerService)>($r2);

        $z1 = virtualinvoke $r3.<com.android.internal.widget.LockPatternUtils: boolean isSeparateProfileChallengeEnabled(int)>(i0);

        if $z1 != 0 goto label2;

        $r5 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        i5 = staticinvoke <com.android.server.trust.TrustManagerService: int access$500(com.android.server.trust.TrustManagerService,int)>($r5, i0);

     label2:
        $r4 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        z0 = virtualinvoke $r4.<com.android.server.trust.TrustManagerService: boolean isDeviceLockedInner(int)>(i5);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return z0;

     label4:
        $r6 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public boolean isDeviceSecure(int) throws android.os.RemoteException
    {
        com.android.server.trust.TrustManagerService$1 r0;
        int i0, $i2, $i3, i4, i5;
        long l1;
        boolean z0, $z1;
        com.android.server.trust.TrustManagerService $r2, $r4, $r6;
        com.android.internal.widget.LockPatternUtils $r3, $r5;
        java.lang.Throwable $r7;

        r0 := @this: com.android.server.trust.TrustManagerService$1;

        i4 := @parameter0: int;

        $i2 = staticinvoke <com.android.server.trust.TrustManagerService$1: int getCallingPid()>();

        $i3 = staticinvoke <com.android.server.trust.TrustManagerService$1: int getCallingUid()>();

        i0 = staticinvoke <android.app.ActivityManager: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>($i2, $i3, i4, 0, 1, "isDeviceSecure", null);

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        i5 = i0;

     label1:
        $r2 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        $r3 = staticinvoke <com.android.server.trust.TrustManagerService: com.android.internal.widget.LockPatternUtils access$400(com.android.server.trust.TrustManagerService)>($r2);

        $z1 = virtualinvoke $r3.<com.android.internal.widget.LockPatternUtils: boolean isSeparateProfileChallengeEnabled(int)>(i0);

        if $z1 != 0 goto label2;

        $r6 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        i5 = staticinvoke <com.android.server.trust.TrustManagerService: int access$500(com.android.server.trust.TrustManagerService,int)>($r6, i0);

     label2:
        $r4 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        $r5 = staticinvoke <com.android.server.trust.TrustManagerService: com.android.internal.widget.LockPatternUtils access$400(com.android.server.trust.TrustManagerService)>($r4);

        z0 = virtualinvoke $r5.<com.android.internal.widget.LockPatternUtils: boolean isSecure(int)>(i5);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return z0;

     label4:
        $r7 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public boolean isTrustUsuallyManaged(int)
    {
        com.android.server.trust.TrustManagerService$1 r0;
        int i0;
        com.android.server.trust.TrustManagerService $r1, $r3;
        android.content.Context $r2;
        boolean $z0;

        r0 := @this: com.android.server.trust.TrustManagerService$1;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        $r2 = staticinvoke <com.android.server.trust.TrustManagerService: android.content.Context access$600(com.android.server.trust.TrustManagerService)>($r1);

        virtualinvoke $r2.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.TRUST_LISTENER", "query trust state");

        $r3 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        $z0 = staticinvoke <com.android.server.trust.TrustManagerService: boolean access$1500(com.android.server.trust.TrustManagerService,int)>($r3, i0);

        return $z0;
    }

    public void registerTrustListener(android.app.trust.ITrustListener) throws android.os.RemoteException
    {
        com.android.server.trust.TrustManagerService$1 r0;
        android.app.trust.ITrustListener r1;
        com.android.server.trust.TrustManagerService $r2;
        android.os.Handler $r3;
        android.os.Message $r4;

        r0 := @this: com.android.server.trust.TrustManagerService$1;

        r1 := @parameter0: android.app.trust.ITrustListener;

        specialinvoke r0.<com.android.server.trust.TrustManagerService$1: void enforceListenerPermission()>();

        $r2 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        $r3 = staticinvoke <com.android.server.trust.TrustManagerService: android.os.Handler access$300(com.android.server.trust.TrustManagerService)>($r2);

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1, r1);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void reportEnabledTrustAgentsChanged(int) throws android.os.RemoteException
    {
        com.android.server.trust.TrustManagerService$1 r0;
        int i0;
        com.android.server.trust.TrustManagerService $r1, $r3;
        android.os.Handler $r2, $r4;

        r0 := @this: com.android.server.trust.TrustManagerService$1;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.trust.TrustManagerService$1: void enforceReportPermission()>();

        $r1 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        $r2 = staticinvoke <com.android.server.trust.TrustManagerService: android.os.Handler access$300(com.android.server.trust.TrustManagerService)>($r1);

        virtualinvoke $r2.<android.os.Handler: void removeMessages(int)>(4);

        $r3 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        $r4 = staticinvoke <com.android.server.trust.TrustManagerService: android.os.Handler access$300(com.android.server.trust.TrustManagerService)>($r3);

        virtualinvoke $r4.<android.os.Handler: boolean sendEmptyMessage(int)>(4);

        return;
    }

    public void reportKeyguardShowingChanged() throws android.os.RemoteException
    {
        com.android.server.trust.TrustManagerService$1 r0;
        com.android.server.trust.TrustManagerService $r1, $r3, $r5;
        android.os.Handler $r2, $r4, $r6;
        com.android.server.trust.'-$$Lambda$TrustManagerService$1$98HKBkg-C1PLlz_Q1vJz1OJtw4c' $r7;
        java.lang.Runnable r8;

        r0 := @this: com.android.server.trust.TrustManagerService$1;

        specialinvoke r0.<com.android.server.trust.TrustManagerService$1: void enforceReportPermission()>();

        $r1 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        $r2 = staticinvoke <com.android.server.trust.TrustManagerService: android.os.Handler access$300(com.android.server.trust.TrustManagerService)>($r1);

        virtualinvoke $r2.<android.os.Handler: void removeMessages(int)>(6);

        $r3 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        $r4 = staticinvoke <com.android.server.trust.TrustManagerService: android.os.Handler access$300(com.android.server.trust.TrustManagerService)>($r3);

        virtualinvoke $r4.<android.os.Handler: boolean sendEmptyMessage(int)>(6);

        $r5 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        $r6 = staticinvoke <com.android.server.trust.TrustManagerService: android.os.Handler access$300(com.android.server.trust.TrustManagerService)>($r5);

        $r7 = <com.android.server.trust._$$Lambda$TrustManagerService$1$98HKBkg_C1PLlz_Q1vJz1OJtw4c: com.android.server.trust.'-$$Lambda$TrustManagerService$1$98HKBkg-C1PLlz_Q1vJz1OJtw4c' INSTANCE>;

        r8 = (java.lang.Runnable) $r7;

        virtualinvoke $r6.<android.os.Handler: boolean runWithScissors(java.lang.Runnable,long)>(r8, 0L);

        return;
    }

    public void reportUnlockAttempt(boolean, int) throws android.os.RemoteException
    {
        com.android.server.trust.TrustManagerService$1 r0;
        boolean z0;
        int i0, i1;
        com.android.server.trust.TrustManagerService $r1;
        android.os.Handler $r2;
        android.os.Message $r3;

        r0 := @this: com.android.server.trust.TrustManagerService$1;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.trust.TrustManagerService$1: void enforceReportPermission()>();

        $r1 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        $r2 = staticinvoke <com.android.server.trust.TrustManagerService: android.os.Handler access$300(com.android.server.trust.TrustManagerService)>($r1);

        i1 = (int) z0;

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(3, i1, i0);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void reportUnlockLockout(int, int) throws android.os.RemoteException
    {
        com.android.server.trust.TrustManagerService$1 r0;
        int i0, i1;
        com.android.server.trust.TrustManagerService $r1;
        android.os.Handler $r2;
        android.os.Message $r3;

        r0 := @this: com.android.server.trust.TrustManagerService$1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<com.android.server.trust.TrustManagerService$1: void enforceReportPermission()>();

        $r1 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        $r2 = staticinvoke <com.android.server.trust.TrustManagerService: android.os.Handler access$300(com.android.server.trust.TrustManagerService)>($r1);

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(13, i0, i1);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void setDeviceLockedForUser(int, boolean)
    {
        com.android.server.trust.TrustManagerService$1 r0;
        int i0;
        boolean z0, $z1, $z2;
        long l1;
        android.util.SparseBooleanArray r1, $r8;
        com.android.server.trust.TrustManagerService $r2, $r4, $r6, $r7, $r18;
        com.android.internal.widget.LockPatternUtils $r3, $r5;
        android.security.KeyStore $r9;
        android.app.IActivityManager $r12;
        android.os.RemoteException $r13;
        java.lang.Throwable $r14, $r15;
        android.content.Intent r17;
        android.content.Context $r19;
        android.os.UserHandle $r20;

        r0 := @this: com.android.server.trust.TrustManagerService$1;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.server.trust.TrustManagerService$1: void enforceReportPermission()>();

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        $r2 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        $r3 = staticinvoke <com.android.server.trust.TrustManagerService: com.android.internal.widget.LockPatternUtils access$400(com.android.server.trust.TrustManagerService)>($r2);

        $z1 = virtualinvoke $r3.<com.android.internal.widget.LockPatternUtils: boolean isSeparateProfileChallengeEnabled(int)>(i0);

        if $z1 == 0 goto label13;

        $r4 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        $r5 = staticinvoke <com.android.server.trust.TrustManagerService: com.android.internal.widget.LockPatternUtils access$400(com.android.server.trust.TrustManagerService)>($r4);

        $z2 = virtualinvoke $r5.<com.android.internal.widget.LockPatternUtils: boolean isSecure(int)>(i0);

        if $z2 == 0 goto label13;

        $r6 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        r1 = staticinvoke <com.android.server.trust.TrustManagerService: android.util.SparseBooleanArray access$1400(com.android.server.trust.TrustManagerService)>($r6);

        entermonitor r1;

     label02:
        $r7 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        $r8 = staticinvoke <com.android.server.trust.TrustManagerService: android.util.SparseBooleanArray access$1400(com.android.server.trust.TrustManagerService)>($r7);

        virtualinvoke $r8.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, z0);

        exitmonitor r1;

     label03:
        $r9 = staticinvoke <android.security.KeyStore: android.security.KeyStore getInstance()>();

        virtualinvoke $r9.<android.security.KeyStore: void onUserLockedStateChanged(int,boolean)>(i0, z0);

     label04:
        if z0 == 0 goto label08;

     label05:
        $r12 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        interfaceinvoke $r12.<android.app.IActivityManager: void notifyLockedProfile(int)>(i0);

     label06:
        goto label08;

     label07:
        $r13 := @caughtexception;

     label08:
        r17 = new android.content.Intent;

        specialinvoke r17.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.DEVICE_LOCKED_CHANGED");

        virtualinvoke r17.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        virtualinvoke r17.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", i0);

        $r18 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        $r19 = staticinvoke <com.android.server.trust.TrustManagerService: android.content.Context access$600(com.android.server.trust.TrustManagerService)>($r18);

        $r20 = <android.os.UserHandle: android.os.UserHandle SYSTEM>;

        virtualinvoke $r19.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.os.Bundle)>(r17, $r20, "android.permission.TRUST_LISTENER", null);

     label09:
        goto label13;

     label10:
        $r15 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r15;

     label13:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label14:
        $r14 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r14;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    public void unlockedByBiometricForUser(int, android.hardware.biometrics.BiometricSourceType)
    {
        com.android.server.trust.TrustManagerService$1 r0;
        int i0, i1;
        android.util.SparseBooleanArray r1, $r4;
        boolean z0;
        com.android.server.trust.TrustManagerService $r2, $r3, $r5, $r7;
        com.android.server.trust.TrustManagerService$SettingsObserver $r6;
        android.os.Handler $r8;
        android.os.Message $r9;
        java.lang.Throwable $r10;
        android.hardware.biometrics.BiometricSourceType r11;

        r0 := @this: com.android.server.trust.TrustManagerService$1;

        i0 := @parameter0: int;

        r11 := @parameter1: android.hardware.biometrics.BiometricSourceType;

        specialinvoke r0.<com.android.server.trust.TrustManagerService$1: void enforceReportPermission()>();

        $r2 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        r1 = staticinvoke <com.android.server.trust.TrustManagerService: android.util.SparseBooleanArray access$1600(com.android.server.trust.TrustManagerService)>($r2);

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        $r4 = staticinvoke <com.android.server.trust.TrustManagerService: android.util.SparseBooleanArray access$1600(com.android.server.trust.TrustManagerService)>($r3);

        virtualinvoke $r4.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, 1);

        exitmonitor r1;

     label2:
        $r5 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        $r6 = staticinvoke <com.android.server.trust.TrustManagerService: com.android.server.trust.TrustManagerService$SettingsObserver access$1700(com.android.server.trust.TrustManagerService)>($r5);

        z0 = virtualinvoke $r6.<com.android.server.trust.TrustManagerService$SettingsObserver: boolean getTrustAgentsExtendUnlock()>();

        $r7 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        $r8 = staticinvoke <com.android.server.trust.TrustManagerService: android.os.Handler access$300(com.android.server.trust.TrustManagerService)>($r7);

        i1 = (int) z0;

        $r9 = virtualinvoke $r8.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(14, i0, i1);

        virtualinvoke $r9.<android.os.Message: void sendToTarget()>();

        return;

     label3:
        $r10 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void unregisterTrustListener(android.app.trust.ITrustListener) throws android.os.RemoteException
    {
        com.android.server.trust.TrustManagerService$1 r0;
        android.app.trust.ITrustListener r1;
        com.android.server.trust.TrustManagerService $r2;
        android.os.Handler $r3;
        android.os.Message $r4;

        r0 := @this: com.android.server.trust.TrustManagerService$1;

        r1 := @parameter0: android.app.trust.ITrustListener;

        specialinvoke r0.<com.android.server.trust.TrustManagerService$1: void enforceListenerPermission()>();

        $r2 = r0.<com.android.server.trust.TrustManagerService$1: com.android.server.trust.TrustManagerService this$0>;

        $r3 = staticinvoke <com.android.server.trust.TrustManagerService: android.os.Handler access$300(com.android.server.trust.TrustManagerService)>($r2);

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(2, r1);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

        return;
    }
}
