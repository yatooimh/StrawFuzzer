final class com.android.server.trust.TrustManagerService$SettingsObserver extends android.database.ContentObserver
{
    private final android.net.Uri LOCK_SCREEN_WHEN_TRUST_LOST;
    private final android.net.Uri TRUST_AGENTS_EXTEND_UNLOCK;
    private final android.content.ContentResolver mContentResolver;
    private final boolean mIsAutomotive;
    private boolean mLockWhenTrustLost;
    private boolean mTrustAgentsExtendUnlock;
    final com.android.server.trust.TrustManagerService this$0;

    void <init>(com.android.server.trust.TrustManagerService, android.os.Handler)
    {
        com.android.server.trust.TrustManagerService$SettingsObserver r0;
        com.android.server.trust.TrustManagerService r1;
        android.os.Handler r2;
        android.net.Uri $r3, $r4;
        android.content.Context $r5, $r7;
        android.content.pm.PackageManager $r6;
        boolean $z0;
        android.content.ContentResolver $r8;

        r0 := @this: com.android.server.trust.TrustManagerService$SettingsObserver;

        r1 := @parameter0: com.android.server.trust.TrustManagerService;

        r2 := @parameter1: android.os.Handler;

        r0.<com.android.server.trust.TrustManagerService$SettingsObserver: com.android.server.trust.TrustManagerService this$0> = r1;

        specialinvoke r0.<android.database.ContentObserver: void <init>(android.os.Handler)>(r2);

        $r3 = staticinvoke <android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>("trust_agents_extend_unlock");

        r0.<com.android.server.trust.TrustManagerService$SettingsObserver: android.net.Uri TRUST_AGENTS_EXTEND_UNLOCK> = $r3;

        $r4 = staticinvoke <android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>("lock_screen_when_trust_lost");

        r0.<com.android.server.trust.TrustManagerService$SettingsObserver: android.net.Uri LOCK_SCREEN_WHEN_TRUST_LOST> = $r4;

        $r5 = virtualinvoke r1.<com.android.server.trust.TrustManagerService: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $z0 = virtualinvoke $r6.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>("android.hardware.type.automotive");

        r0.<com.android.server.trust.TrustManagerService$SettingsObserver: boolean mIsAutomotive> = $z0;

        $r7 = virtualinvoke r1.<com.android.server.trust.TrustManagerService: android.content.Context getContext()>();

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r0.<com.android.server.trust.TrustManagerService$SettingsObserver: android.content.ContentResolver mContentResolver> = $r8;

        virtualinvoke r0.<com.android.server.trust.TrustManagerService$SettingsObserver: void updateContentObserver()>();

        return;
    }

    boolean getLockWhenTrustLost()
    {
        com.android.server.trust.TrustManagerService$SettingsObserver r0;
        boolean $z0;

        r0 := @this: com.android.server.trust.TrustManagerService$SettingsObserver;

        $z0 = r0.<com.android.server.trust.TrustManagerService$SettingsObserver: boolean mLockWhenTrustLost>;

        return $z0;
    }

    boolean getTrustAgentsExtendUnlock()
    {
        com.android.server.trust.TrustManagerService$SettingsObserver r0;
        boolean $z0;

        r0 := @this: com.android.server.trust.TrustManagerService$SettingsObserver;

        $z0 = r0.<com.android.server.trust.TrustManagerService$SettingsObserver: boolean mTrustAgentsExtendUnlock>;

        return $z0;
    }

    public void onChange(boolean, android.net.Uri)
    {
        com.android.server.trust.TrustManagerService$SettingsObserver r0;
        android.net.Uri r1, $r2, $r3;
        boolean z0, $z1, $z2, z3, z5, z6, z7;
        com.android.server.trust.TrustManagerService $r4, $r6;
        android.content.ContentResolver $r5, $r7;
        int $i0, $i1, $i2, $i3, i4;

        r0 := @this: com.android.server.trust.TrustManagerService$SettingsObserver;

        z3 := @parameter0: boolean;

        r1 := @parameter1: android.net.Uri;

        $r2 = r0.<com.android.server.trust.TrustManagerService$SettingsObserver: android.net.Uri TRUST_AGENTS_EXTEND_UNLOCK>;

        z0 = virtualinvoke $r2.<android.net.Uri: boolean equals(java.lang.Object)>(r1);

        z5 = 1;

        if z0 == 0 goto label3;

        z6 = r0.<com.android.server.trust.TrustManagerService$SettingsObserver: boolean mIsAutomotive>;

        $r7 = r0.<com.android.server.trust.TrustManagerService$SettingsObserver: android.content.ContentResolver mContentResolver>;

        $z2 = z6 ^ 1;

        $r6 = r0.<com.android.server.trust.TrustManagerService$SettingsObserver: com.android.server.trust.TrustManagerService this$0>;

        $i2 = staticinvoke <com.android.server.trust.TrustManagerService: int access$100(com.android.server.trust.TrustManagerService)>($r6);

        i4 = (int) $z2;

        $i3 = staticinvoke <android.provider.Settings$Secure: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>($r7, "trust_agents_extend_unlock", i4, $i2);

        if $i3 == 0 goto label1;

        goto label2;

     label1:
        z5 = 0;

     label2:
        r0.<com.android.server.trust.TrustManagerService$SettingsObserver: boolean mTrustAgentsExtendUnlock> = z5;

        goto label6;

     label3:
        $r3 = r0.<com.android.server.trust.TrustManagerService$SettingsObserver: android.net.Uri LOCK_SCREEN_WHEN_TRUST_LOST>;

        $z1 = virtualinvoke $r3.<android.net.Uri: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label6;

        $r5 = r0.<com.android.server.trust.TrustManagerService$SettingsObserver: android.content.ContentResolver mContentResolver>;

        $r4 = r0.<com.android.server.trust.TrustManagerService$SettingsObserver: com.android.server.trust.TrustManagerService this$0>;

        $i0 = staticinvoke <com.android.server.trust.TrustManagerService: int access$100(com.android.server.trust.TrustManagerService)>($r4);

        $i1 = staticinvoke <android.provider.Settings$Secure: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>($r5, "lock_screen_when_trust_lost", 0, $i0);

        if $i1 == 0 goto label4;

        z7 = 1;

        goto label5;

     label4:
        z7 = 0;

     label5:
        r0.<com.android.server.trust.TrustManagerService$SettingsObserver: boolean mLockWhenTrustLost> = z7;

        goto label6;

     label6:
        return;
    }

    void updateContentObserver()
    {
        com.android.server.trust.TrustManagerService$SettingsObserver r0;
        android.content.ContentResolver $r1, $r3, $r6;
        com.android.server.trust.TrustManagerService $r2, $r5;
        android.net.Uri $r4, $r7, $r8, $r9;
        int $i0, $i1;

        r0 := @this: com.android.server.trust.TrustManagerService$SettingsObserver;

        $r1 = r0.<com.android.server.trust.TrustManagerService$SettingsObserver: android.content.ContentResolver mContentResolver>;

        virtualinvoke $r1.<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>(r0);

        $r3 = r0.<com.android.server.trust.TrustManagerService$SettingsObserver: android.content.ContentResolver mContentResolver>;

        $r4 = r0.<com.android.server.trust.TrustManagerService$SettingsObserver: android.net.Uri TRUST_AGENTS_EXTEND_UNLOCK>;

        $r2 = r0.<com.android.server.trust.TrustManagerService$SettingsObserver: com.android.server.trust.TrustManagerService this$0>;

        $i0 = staticinvoke <com.android.server.trust.TrustManagerService: int access$100(com.android.server.trust.TrustManagerService)>($r2);

        virtualinvoke $r3.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>($r4, 0, r0, $i0);

        $r6 = r0.<com.android.server.trust.TrustManagerService$SettingsObserver: android.content.ContentResolver mContentResolver>;

        $r7 = r0.<com.android.server.trust.TrustManagerService$SettingsObserver: android.net.Uri LOCK_SCREEN_WHEN_TRUST_LOST>;

        $r5 = r0.<com.android.server.trust.TrustManagerService$SettingsObserver: com.android.server.trust.TrustManagerService this$0>;

        $i1 = staticinvoke <com.android.server.trust.TrustManagerService: int access$100(com.android.server.trust.TrustManagerService)>($r5);

        virtualinvoke $r6.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>($r7, 0, r0, $i1);

        $r8 = r0.<com.android.server.trust.TrustManagerService$SettingsObserver: android.net.Uri TRUST_AGENTS_EXTEND_UNLOCK>;

        virtualinvoke r0.<com.android.server.trust.TrustManagerService$SettingsObserver: void onChange(boolean,android.net.Uri)>(1, $r8);

        $r9 = r0.<com.android.server.trust.TrustManagerService$SettingsObserver: android.net.Uri LOCK_SCREEN_WHEN_TRUST_LOST>;

        virtualinvoke r0.<com.android.server.trust.TrustManagerService$SettingsObserver: void onChange(boolean,android.net.Uri)>(1, $r9);

        return;
    }
}
