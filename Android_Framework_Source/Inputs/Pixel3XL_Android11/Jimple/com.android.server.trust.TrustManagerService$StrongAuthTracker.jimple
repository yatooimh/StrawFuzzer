class com.android.server.trust.TrustManagerService$StrongAuthTracker extends com.android.internal.widget.LockPatternUtils$StrongAuthTracker
{
    android.util.SparseBooleanArray mStartFromSuccessfulUnlock;
    final com.android.server.trust.TrustManagerService this$0;

    public void <init>(com.android.server.trust.TrustManagerService, android.content.Context)
    {
        com.android.server.trust.TrustManagerService$StrongAuthTracker r0;
        com.android.server.trust.TrustManagerService r1;
        android.content.Context r2;
        android.util.SparseBooleanArray $r3;

        r0 := @this: com.android.server.trust.TrustManagerService$StrongAuthTracker;

        r1 := @parameter0: com.android.server.trust.TrustManagerService;

        r2 := @parameter1: android.content.Context;

        r0.<com.android.server.trust.TrustManagerService$StrongAuthTracker: com.android.server.trust.TrustManagerService this$0> = r1;

        specialinvoke r0.<com.android.internal.widget.LockPatternUtils$StrongAuthTracker: void <init>(android.content.Context)>(r2);

        $r3 = new android.util.SparseBooleanArray;

        specialinvoke $r3.<android.util.SparseBooleanArray: void <init>()>();

        r0.<com.android.server.trust.TrustManagerService$StrongAuthTracker: android.util.SparseBooleanArray mStartFromSuccessfulUnlock> = $r3;

        return;
    }

    void allowTrustFromUnlock(int)
    {
        com.android.server.trust.TrustManagerService$StrongAuthTracker r0;
        int i0;
        boolean z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r1, $r8;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5, $r15;
        android.util.SparseBooleanArray $r6;
        com.android.server.trust.TrustManagerService $r7;

        r0 := @this: com.android.server.trust.TrustManagerService$StrongAuthTracker;

        i0 := @parameter0: int;

        if i0 < 0 goto label3;

        z0 = virtualinvoke r0.<com.android.server.trust.TrustManagerService$StrongAuthTracker: boolean canAgentsRunForUser(int)>(i0);

        $r6 = r0.<com.android.server.trust.TrustManagerService$StrongAuthTracker: android.util.SparseBooleanArray mStartFromSuccessfulUnlock>;

        virtualinvoke $r6.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, 1);

        $z1 = <com.android.server.trust.TrustManagerService: boolean DEBUG>;

        if $z1 == 0 goto label1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("allowTrustFromUnlock(");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") -> trustAllowed=");

        $z3 = virtualinvoke r0.<com.android.server.trust.TrustManagerService$StrongAuthTracker: boolean isTrustAllowedForUser(int)>(i0);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" agentsCanRun=");

        $z4 = virtualinvoke r0.<com.android.server.trust.TrustManagerService$StrongAuthTracker: boolean canAgentsRunForUser(int)>(i0);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r15 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("TrustManagerService", $r15);

     label1:
        $z2 = virtualinvoke r0.<com.android.server.trust.TrustManagerService$StrongAuthTracker: boolean canAgentsRunForUser(int)>(i0);

        if $z2 == z0 goto label2;

        $r7 = r0.<com.android.server.trust.TrustManagerService$StrongAuthTracker: com.android.server.trust.TrustManagerService this$0>;

        virtualinvoke $r7.<com.android.server.trust.TrustManagerService: void refreshAgentList(int)>(i0);

     label2:
        return;

     label3:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("userId must be a valid user: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    boolean canAgentsRunForUser(int)
    {
        com.android.server.trust.TrustManagerService$StrongAuthTracker r0;
        int i0;
        android.util.SparseBooleanArray $r1;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.server.trust.TrustManagerService$StrongAuthTracker;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.trust.TrustManagerService$StrongAuthTracker: android.util.SparseBooleanArray mStartFromSuccessfulUnlock>;

        $z0 = virtualinvoke $r1.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        if $z0 != 0 goto label2;

        $z1 = specialinvoke r0.<com.android.internal.widget.LockPatternUtils$StrongAuthTracker: boolean isTrustAllowedForUser(int)>(i0);

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    public void onStrongAuthRequiredChanged(int)
    {
        com.android.server.trust.TrustManagerService$StrongAuthTracker r0;
        int i0;
        android.util.SparseBooleanArray $r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.android.server.trust.TrustManagerService $r2, $r6, $r18, $r19;
        android.util.ArrayMap $r3;
        java.lang.Integer $r4;
        java.lang.Object $r5;
        android.app.AlarmManager $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r15;
        com.android.server.trust.TrustManagerService$TrustTimeoutAlarmListener r17;

        r0 := @this: com.android.server.trust.TrustManagerService$StrongAuthTracker;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.trust.TrustManagerService$StrongAuthTracker: android.util.SparseBooleanArray mStartFromSuccessfulUnlock>;

        virtualinvoke $r1.<android.util.SparseBooleanArray: void delete(int)>(i0);

        $z0 = <com.android.server.trust.TrustManagerService: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onStrongAuthRequiredChanged(");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") -> trustAllowed=");

        $z3 = virtualinvoke r0.<com.android.server.trust.TrustManagerService$StrongAuthTracker: boolean isTrustAllowedForUser(int)>(i0);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" agentsCanRun=");

        $z4 = virtualinvoke r0.<com.android.server.trust.TrustManagerService$StrongAuthTracker: boolean canAgentsRunForUser(int)>(i0);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r15 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("TrustManagerService", $r15);

     label1:
        $z1 = virtualinvoke r0.<com.android.server.trust.TrustManagerService$StrongAuthTracker: boolean isTrustAllowedForUser(int)>(i0);

        if $z1 != 0 goto label2;

        $r2 = r0.<com.android.server.trust.TrustManagerService$StrongAuthTracker: com.android.server.trust.TrustManagerService this$0>;

        $r3 = staticinvoke <com.android.server.trust.TrustManagerService: android.util.ArrayMap access$3000(com.android.server.trust.TrustManagerService)>($r2);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r4);

        r17 = (com.android.server.trust.TrustManagerService$TrustTimeoutAlarmListener) $r5;

        if r17 == null goto label2;

        $z2 = virtualinvoke r17.<com.android.server.trust.TrustManagerService$TrustTimeoutAlarmListener: boolean isQueued()>();

        if $z2 == 0 goto label2;

        virtualinvoke r17.<com.android.server.trust.TrustManagerService$TrustTimeoutAlarmListener: void setQueued(boolean)>(0);

        $r6 = r0.<com.android.server.trust.TrustManagerService$StrongAuthTracker: com.android.server.trust.TrustManagerService this$0>;

        $r7 = staticinvoke <com.android.server.trust.TrustManagerService: android.app.AlarmManager access$3100(com.android.server.trust.TrustManagerService)>($r6);

        virtualinvoke $r7.<android.app.AlarmManager: void cancel(android.app.AlarmManager$OnAlarmListener)>(r17);

     label2:
        $r18 = r0.<com.android.server.trust.TrustManagerService$StrongAuthTracker: com.android.server.trust.TrustManagerService this$0>;

        virtualinvoke $r18.<com.android.server.trust.TrustManagerService: void refreshAgentList(int)>(i0);

        $r19 = r0.<com.android.server.trust.TrustManagerService$StrongAuthTracker: com.android.server.trust.TrustManagerService this$0>;

        virtualinvoke $r19.<com.android.server.trust.TrustManagerService: void updateTrust(int,int)>(i0, 0);

        return;
    }
}
