class com.android.server.trust.TrustManagerService$TrustTimeoutAlarmListener extends java.lang.Object implements android.app.AlarmManager$OnAlarmListener
{
    private boolean mIsQueued;
    private final int mUserId;
    final com.android.server.trust.TrustManagerService this$0;

    void <init>(com.android.server.trust.TrustManagerService, int)
    {
        com.android.server.trust.TrustManagerService$TrustTimeoutAlarmListener r0;
        com.android.server.trust.TrustManagerService r1;
        int i0;

        r0 := @this: com.android.server.trust.TrustManagerService$TrustTimeoutAlarmListener;

        r1 := @parameter0: com.android.server.trust.TrustManagerService;

        i0 := @parameter1: int;

        r0.<com.android.server.trust.TrustManagerService$TrustTimeoutAlarmListener: com.android.server.trust.TrustManagerService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.trust.TrustManagerService$TrustTimeoutAlarmListener: boolean mIsQueued> = 0;

        r0.<com.android.server.trust.TrustManagerService$TrustTimeoutAlarmListener: int mUserId> = i0;

        return;
    }

    public boolean isQueued()
    {
        com.android.server.trust.TrustManagerService$TrustTimeoutAlarmListener r0;
        boolean $z0;

        r0 := @this: com.android.server.trust.TrustManagerService$TrustTimeoutAlarmListener;

        $z0 = r0.<com.android.server.trust.TrustManagerService$TrustTimeoutAlarmListener: boolean mIsQueued>;

        return $z0;
    }

    public void onAlarm()
    {
        com.android.server.trust.TrustManagerService$TrustTimeoutAlarmListener r0;
        com.android.internal.widget.LockPatternUtils r1;
        com.android.server.trust.TrustManagerService $r2, $r4, $r6, $r7, $r9;
        com.android.server.trust.TrustManagerService$StrongAuthTracker $r3, $r5;
        int $i0, $i2, $i3, $i5;
        boolean $z0, $z1;

        r0 := @this: com.android.server.trust.TrustManagerService$TrustTimeoutAlarmListener;

        r0.<com.android.server.trust.TrustManagerService$TrustTimeoutAlarmListener: boolean mIsQueued> = 0;

        $r2 = r0.<com.android.server.trust.TrustManagerService$TrustTimeoutAlarmListener: com.android.server.trust.TrustManagerService this$0>;

        $r3 = staticinvoke <com.android.server.trust.TrustManagerService: com.android.server.trust.TrustManagerService$StrongAuthTracker access$1200(com.android.server.trust.TrustManagerService)>($r2);

        $i0 = r0.<com.android.server.trust.TrustManagerService$TrustTimeoutAlarmListener: int mUserId>;

        virtualinvoke $r3.<com.android.server.trust.TrustManagerService$StrongAuthTracker: int getStrongAuthForUser(int)>($i0);

        $r4 = r0.<com.android.server.trust.TrustManagerService$TrustTimeoutAlarmListener: com.android.server.trust.TrustManagerService this$0>;

        $r5 = staticinvoke <com.android.server.trust.TrustManagerService: com.android.server.trust.TrustManagerService$StrongAuthTracker access$1200(com.android.server.trust.TrustManagerService)>($r4);

        $i2 = r0.<com.android.server.trust.TrustManagerService$TrustTimeoutAlarmListener: int mUserId>;

        $z0 = virtualinvoke $r5.<com.android.server.trust.TrustManagerService$StrongAuthTracker: boolean isTrustAllowedForUser(int)>($i2);

        if $z0 == 0 goto label2;

        $z1 = <com.android.server.trust.TrustManagerService: boolean DEBUG>;

        if $z1 == 0 goto label1;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("TrustManagerService", "Revoking all trust because of trust timeout");

     label1:
        $r6 = r0.<com.android.server.trust.TrustManagerService$TrustTimeoutAlarmListener: com.android.server.trust.TrustManagerService this$0>;

        r1 = staticinvoke <com.android.server.trust.TrustManagerService: com.android.internal.widget.LockPatternUtils access$400(com.android.server.trust.TrustManagerService)>($r6);

        $r7 = r0.<com.android.server.trust.TrustManagerService$TrustTimeoutAlarmListener: com.android.server.trust.TrustManagerService this$0>;

        staticinvoke <com.android.server.trust.TrustManagerService: com.android.server.trust.TrustManagerService$StrongAuthTracker access$1200(com.android.server.trust.TrustManagerService)>($r7);

        $i3 = r0.<com.android.server.trust.TrustManagerService$TrustTimeoutAlarmListener: int mUserId>;

        virtualinvoke r1.<com.android.internal.widget.LockPatternUtils: void requireStrongAuth(int,int)>(4, $i3);

     label2:
        $r9 = r0.<com.android.server.trust.TrustManagerService$TrustTimeoutAlarmListener: com.android.server.trust.TrustManagerService this$0>;

        $i5 = r0.<com.android.server.trust.TrustManagerService$TrustTimeoutAlarmListener: int mUserId>;

        staticinvoke <com.android.server.trust.TrustManagerService: void access$3200(com.android.server.trust.TrustManagerService,int)>($r9, $i5);

        return;
    }

    public void setQueued(boolean)
    {
        com.android.server.trust.TrustManagerService$TrustTimeoutAlarmListener r0;
        boolean z0;

        r0 := @this: com.android.server.trust.TrustManagerService$TrustTimeoutAlarmListener;

        z0 := @parameter0: boolean;

        r0.<com.android.server.trust.TrustManagerService$TrustTimeoutAlarmListener: boolean mIsQueued> = z0;

        return;
    }
}
