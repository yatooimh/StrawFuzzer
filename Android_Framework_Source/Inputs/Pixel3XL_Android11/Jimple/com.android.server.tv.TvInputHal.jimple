final class com.android.server.tv.TvInputHal extends java.lang.Object implements android.os.Handler$Callback
{
    private static final boolean DEBUG;
    public static final int ERROR_NO_INIT;
    public static final int ERROR_STALE_CONFIG;
    public static final int ERROR_UNKNOWN;
    public static final int EVENT_DEVICE_AVAILABLE;
    public static final int EVENT_DEVICE_UNAVAILABLE;
    public static final int EVENT_FIRST_FRAME_CAPTURED;
    public static final int EVENT_STREAM_CONFIGURATION_CHANGED;
    public static final int SUCCESS;
    private static final java.lang.String TAG;
    private final com.android.server.tv.TvInputHal$Callback mCallback;
    private final android.os.Handler mHandler;
    private final java.lang.Object mLock;
    private final java.util.Queue mPendingMessageQueue;
    private long mPtr;
    private final android.util.SparseIntArray mStreamConfigGenerations;
    private final android.util.SparseArray mStreamConfigs;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <com.android.server.tv.TvInputHal: int SUCCESS> = 0;

        <com.android.server.tv.TvInputHal: int EVENT_STREAM_CONFIGURATION_CHANGED> = 3;

        <com.android.server.tv.TvInputHal: int EVENT_FIRST_FRAME_CAPTURED> = 4;

        <com.android.server.tv.TvInputHal: int EVENT_DEVICE_UNAVAILABLE> = 2;

        <com.android.server.tv.TvInputHal: int EVENT_DEVICE_AVAILABLE> = 1;

        <com.android.server.tv.TvInputHal: int ERROR_UNKNOWN> = -3;

        <com.android.server.tv.TvInputHal: int ERROR_STALE_CONFIG> = -2;

        <com.android.server.tv.TvInputHal: int ERROR_NO_INIT> = -1;

        <com.android.server.tv.TvInputHal: boolean DEBUG> = 0;

        $r0 = class "Lcom/android/server/tv/TvInputHal;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.server.tv.TvInputHal: java.lang.String TAG> = $r1;

        return;
    }

    public void <init>(com.android.server.tv.TvInputHal$Callback)
    {
        com.android.server.tv.TvInputHal r0;
        com.android.server.tv.TvInputHal$Callback r1;
        java.lang.Object $r2;
        android.util.SparseIntArray $r3;
        android.util.SparseArray $r4;
        java.util.LinkedList $r5;
        android.os.Handler $r6;

        r0 := @this: com.android.server.tv.TvInputHal;

        r1 := @parameter0: com.android.server.tv.TvInputHal$Callback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.server.tv.TvInputHal: java.lang.Object mLock> = $r2;

        r0.<com.android.server.tv.TvInputHal: long mPtr> = 0L;

        $r3 = new android.util.SparseIntArray;

        specialinvoke $r3.<android.util.SparseIntArray: void <init>()>();

        r0.<com.android.server.tv.TvInputHal: android.util.SparseIntArray mStreamConfigGenerations> = $r3;

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.tv.TvInputHal: android.util.SparseArray mStreamConfigs> = $r4;

        $r5 = new java.util.LinkedList;

        specialinvoke $r5.<java.util.LinkedList: void <init>()>();

        r0.<com.android.server.tv.TvInputHal: java.util.Queue mPendingMessageQueue> = $r5;

        r0.<com.android.server.tv.TvInputHal: com.android.server.tv.TvInputHal$Callback mCallback> = r1;

        $r6 = new android.os.Handler;

        specialinvoke $r6.<android.os.Handler: void <init>(android.os.Handler$Callback)>(r0);

        r0.<com.android.server.tv.TvInputHal: android.os.Handler mHandler> = $r6;

        return;
    }

    private void deviceAvailableFromNative(android.media.tv.TvInputHardwareInfo)
    {
        com.android.server.tv.TvInputHal r0;
        android.media.tv.TvInputHardwareInfo r1;
        android.os.Handler $r2;
        android.os.Message $r3;

        r0 := @this: com.android.server.tv.TvInputHal;

        r1 := @parameter0: android.media.tv.TvInputHardwareInfo;

        $r2 = r0.<com.android.server.tv.TvInputHal: android.os.Handler mHandler>;

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1, r1);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;
    }

    private void deviceUnavailableFromNative(int)
    {
        com.android.server.tv.TvInputHal r0;
        int i0;
        android.os.Handler $r1;
        android.os.Message $r2;

        r0 := @this: com.android.server.tv.TvInputHal;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.tv.TvInputHal: android.os.Handler mHandler>;

        $r2 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(2, i0, 0);

        virtualinvoke $r2.<android.os.Message: void sendToTarget()>();

        return;
    }

    private void firstFrameCapturedFromNative(int, int)
    {
        com.android.server.tv.TvInputHal r0;
        int i0, i1;
        android.os.Handler r1;
        android.os.Message $r2;

        r0 := @this: com.android.server.tv.TvInputHal;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<com.android.server.tv.TvInputHal: android.os.Handler mHandler>;

        $r2 = virtualinvoke r1.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(3, i0, i1);

        virtualinvoke r1.<android.os.Handler: boolean sendMessage(android.os.Message)>($r2);

        return;
    }

    private static native int nativeAddOrUpdateStream(long, int, int, android.view.Surface);

    private static native void nativeClose(long);

    private static native android.media.tv.TvStreamConfig[] nativeGetStreamConfigs(long, int, int);

    private native long nativeOpen(android.os.MessageQueue);

    private static native int nativeRemoveStream(long, int, int);

    private void retrieveStreamConfigsLocked(int)
    {
        com.android.server.tv.TvInputHal r0;
        int i0, i1, $i2;
        android.util.SparseIntArray $r1, $r4;
        long $l3;
        android.util.SparseArray $r2;
        android.media.tv.TvStreamConfig[] $r3;

        r0 := @this: com.android.server.tv.TvInputHal;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.tv.TvInputHal: android.util.SparseIntArray mStreamConfigGenerations>;

        $i2 = virtualinvoke $r1.<android.util.SparseIntArray: int get(int,int)>(i0, 0);

        i1 = $i2 + 1;

        $r2 = r0.<com.android.server.tv.TvInputHal: android.util.SparseArray mStreamConfigs>;

        $l3 = r0.<com.android.server.tv.TvInputHal: long mPtr>;

        $r3 = staticinvoke <com.android.server.tv.TvInputHal: android.media.tv.TvStreamConfig[] nativeGetStreamConfigs(long,int,int)>($l3, i0, i1);

        virtualinvoke $r2.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r3);

        $r4 = r0.<com.android.server.tv.TvInputHal: android.util.SparseIntArray mStreamConfigGenerations>;

        virtualinvoke $r4.<android.util.SparseIntArray: void put(int,int)>(i0, i1);

        return;
    }

    private void streamConfigsChangedFromNative(int)
    {
        com.android.server.tv.TvInputHal r0;
        int i0;
        android.os.Handler $r1;
        android.os.Message $r2;

        r0 := @this: com.android.server.tv.TvInputHal;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.tv.TvInputHal: android.os.Handler mHandler>;

        $r2 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(3, i0, 0);

        virtualinvoke $r2.<android.os.Message: void sendToTarget()>();

        return;
    }

    public int addOrUpdateStream(int, android.view.Surface, android.media.tv.TvStreamConfig)
    {
        com.android.server.tv.TvInputHal r0;
        int i0, $i3, $i4, $i6, $i7;
        android.media.tv.TvStreamConfig r1;
        java.lang.Object r2;
        long $l1, $l5;
        byte $b2;
        android.util.SparseIntArray $r3;
        java.lang.Throwable $r4;
        android.view.Surface r5;

        r0 := @this: com.android.server.tv.TvInputHal;

        i0 := @parameter0: int;

        r5 := @parameter1: android.view.Surface;

        r1 := @parameter2: android.media.tv.TvStreamConfig;

        r2 = r0.<com.android.server.tv.TvInputHal: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        $l1 = r0.<com.android.server.tv.TvInputHal: long mPtr>;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label03;

        exitmonitor r2;

     label02:
        return -1;

     label03:
        $r3 = r0.<com.android.server.tv.TvInputHal: android.util.SparseIntArray mStreamConfigGenerations>;

        $i3 = virtualinvoke $r3.<android.util.SparseIntArray: int get(int,int)>(i0, 0);

        $i4 = virtualinvoke r1.<android.media.tv.TvStreamConfig: int getGeneration()>();

        if $i3 == $i4 goto label05;

        exitmonitor r2;

     label04:
        return -2;

     label05:
        $l5 = r0.<com.android.server.tv.TvInputHal: long mPtr>;

        $i6 = virtualinvoke r1.<android.media.tv.TvStreamConfig: int getStreamId()>();

        $i7 = staticinvoke <com.android.server.tv.TvInputHal: int nativeAddOrUpdateStream(long,int,int,android.view.Surface)>($l5, i0, $i6, r5);

        if $i7 != 0 goto label07;

        exitmonitor r2;

     label06:
        return 0;

     label07:
        exitmonitor r2;

     label08:
        return -3;

     label09:
        $r4 := @caughtexception;

     label10:
        exitmonitor r2;

     label11:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void close()
    {
        com.android.server.tv.TvInputHal r0;
        java.lang.Object r1;
        long $l0, $l2;
        byte $b1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.tv.TvInputHal;

        r1 = r0.<com.android.server.tv.TvInputHal: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $l0 = r0.<com.android.server.tv.TvInputHal: long mPtr>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label2;

        $l2 = r0.<com.android.server.tv.TvInputHal: long mPtr>;

        staticinvoke <com.android.server.tv.TvInputHal: void nativeClose(long)>($l2);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public boolean handleMessage(android.os.Message)
    {
        com.android.server.tv.TvInputHal r0;
        int i0, $i1, $i2, i4, i5, i6, i7;
        java.lang.Object $r1, $r3, $r7, r19, r23;
        android.util.SparseArray $r2, $r6;
        com.android.server.tv.TvInputHal$Callback $r4, $r5, $r8, $r9;
        java.lang.StringBuilder $r10;
        java.lang.String $r13, r17;
        java.lang.Throwable $r14, $r15;
        android.os.Message r16;
        android.media.tv.TvStreamConfig[] r20, r24;
        android.media.tv.TvInputHardwareInfo r22;

        r0 := @this: com.android.server.tv.TvInputHal;

        r16 := @parameter0: android.os.Message;

        i4 = r16.<android.os.Message: int what>;

        if i4 == 1 goto label09;

        if i4 == 2 goto label08;

        if i4 == 3 goto label02;

        if i4 == 4 goto label01;

        r17 = <com.android.server.tv.TvInputHal: java.lang.String TAG>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown event: ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>(r17, $r13);

        return 0;

     label01:
        i0 = r16.<android.os.Message: int arg1>;

        i5 = r16.<android.os.Message: int arg2>;

        $r9 = r0.<com.android.server.tv.TvInputHal: com.android.server.tv.TvInputHal$Callback mCallback>;

        interfaceinvoke $r9.<com.android.server.tv.TvInputHal$Callback: void onFirstFrameCaptured(int,int)>(i0, i5);

        goto label12;

     label02:
        i6 = r16.<android.os.Message: int arg1>;

        r19 = r0.<com.android.server.tv.TvInputHal: java.lang.Object mLock>;

        entermonitor r19;

     label03:
        specialinvoke r0.<com.android.server.tv.TvInputHal: void retrieveStreamConfigsLocked(int)>(i6);

        $r6 = r0.<com.android.server.tv.TvInputHal: android.util.SparseArray mStreamConfigs>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(i6);

        r20 = (android.media.tv.TvStreamConfig[]) $r7;

        exitmonitor r19;

     label04:
        $r8 = r0.<com.android.server.tv.TvInputHal: com.android.server.tv.TvInputHal$Callback mCallback>;

        interfaceinvoke $r8.<com.android.server.tv.TvInputHal$Callback: void onStreamConfigurationChanged(int,android.media.tv.TvStreamConfig[])>(i6, r20);

        goto label12;

     label05:
        $r15 := @caughtexception;

     label06:
        exitmonitor r19;

     label07:
        throw $r15;

     label08:
        i7 = r16.<android.os.Message: int arg1>;

        $r5 = r0.<com.android.server.tv.TvInputHal: com.android.server.tv.TvInputHal$Callback mCallback>;

        interfaceinvoke $r5.<com.android.server.tv.TvInputHal$Callback: void onDeviceUnavailable(int)>(i7);

        goto label12;

     label09:
        $r1 = r16.<android.os.Message: java.lang.Object obj>;

        r22 = (android.media.tv.TvInputHardwareInfo) $r1;

        r23 = r0.<com.android.server.tv.TvInputHal: java.lang.Object mLock>;

        entermonitor r23;

     label10:
        $i1 = virtualinvoke r22.<android.media.tv.TvInputHardwareInfo: int getDeviceId()>();

        specialinvoke r0.<com.android.server.tv.TvInputHal: void retrieveStreamConfigsLocked(int)>($i1);

        $r2 = r0.<com.android.server.tv.TvInputHal: android.util.SparseArray mStreamConfigs>;

        $i2 = virtualinvoke r22.<android.media.tv.TvInputHardwareInfo: int getDeviceId()>();

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>($i2);

        r24 = (android.media.tv.TvStreamConfig[]) $r3;

        exitmonitor r23;

     label11:
        $r4 = r0.<com.android.server.tv.TvInputHal: com.android.server.tv.TvInputHal$Callback mCallback>;

        interfaceinvoke $r4.<com.android.server.tv.TvInputHal$Callback: void onDeviceAvailable(android.media.tv.TvInputHardwareInfo,android.media.tv.TvStreamConfig[])>(r22, r24);

     label12:
        return 1;

     label13:
        $r14 := @caughtexception;

     label14:
        exitmonitor r23;

     label15:
        throw $r14;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public void init()
    {
        com.android.server.tv.TvInputHal r0;
        java.lang.Object r1;
        android.os.Handler $r3;
        android.os.Looper $r4;
        android.os.MessageQueue $r5;
        long $l0;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.tv.TvInputHal;

        r1 = r0.<com.android.server.tv.TvInputHal: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.tv.TvInputHal: android.os.Handler mHandler>;

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Looper getLooper()>();

        $r5 = virtualinvoke $r4.<android.os.Looper: android.os.MessageQueue getQueue()>();

        $l0 = specialinvoke r0.<com.android.server.tv.TvInputHal: long nativeOpen(android.os.MessageQueue)>($r5);

        r0.<com.android.server.tv.TvInputHal: long mPtr> = $l0;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int removeStream(int, android.media.tv.TvStreamConfig)
    {
        com.android.server.tv.TvInputHal r0;
        int i0, $i3, $i4, $i6, $i7;
        java.lang.Object r1;
        long $l1, $l5;
        byte $b2;
        android.util.SparseIntArray $r2;
        java.lang.Throwable $r3;
        android.media.tv.TvStreamConfig r4;

        r0 := @this: com.android.server.tv.TvInputHal;

        i0 := @parameter0: int;

        r4 := @parameter1: android.media.tv.TvStreamConfig;

        r1 = r0.<com.android.server.tv.TvInputHal: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $l1 = r0.<com.android.server.tv.TvInputHal: long mPtr>;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label03;

        exitmonitor r1;

     label02:
        return -1;

     label03:
        $r2 = r0.<com.android.server.tv.TvInputHal: android.util.SparseIntArray mStreamConfigGenerations>;

        $i3 = virtualinvoke $r2.<android.util.SparseIntArray: int get(int,int)>(i0, 0);

        $i4 = virtualinvoke r4.<android.media.tv.TvStreamConfig: int getGeneration()>();

        if $i3 == $i4 goto label05;

        exitmonitor r1;

     label04:
        return -2;

     label05:
        $l5 = r0.<com.android.server.tv.TvInputHal: long mPtr>;

        $i6 = virtualinvoke r4.<android.media.tv.TvStreamConfig: int getStreamId()>();

        $i7 = staticinvoke <com.android.server.tv.TvInputHal: int nativeRemoveStream(long,int,int)>($l5, i0, $i6);

        if $i7 != 0 goto label07;

        exitmonitor r1;

     label06:
        return 0;

     label07:
        exitmonitor r1;

     label08:
        return -3;

     label09:
        $r3 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }
}
