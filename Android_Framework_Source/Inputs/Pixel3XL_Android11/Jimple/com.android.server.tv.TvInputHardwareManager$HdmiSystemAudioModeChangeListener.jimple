final class com.android.server.tv.TvInputHardwareManager$HdmiSystemAudioModeChangeListener extends android.hardware.hdmi.IHdmiSystemAudioModeChangeListener$Stub
{
    final com.android.server.tv.TvInputHardwareManager this$0;

    private void <init>(com.android.server.tv.TvInputHardwareManager)
    {
        com.android.server.tv.TvInputHardwareManager$HdmiSystemAudioModeChangeListener r0;
        com.android.server.tv.TvInputHardwareManager r1;

        r0 := @this: com.android.server.tv.TvInputHardwareManager$HdmiSystemAudioModeChangeListener;

        r1 := @parameter0: com.android.server.tv.TvInputHardwareManager;

        r0.<com.android.server.tv.TvInputHardwareManager$HdmiSystemAudioModeChangeListener: com.android.server.tv.TvInputHardwareManager this$0> = r1;

        specialinvoke r0.<android.hardware.hdmi.IHdmiSystemAudioModeChangeListener$Stub: void <init>()>();

        return;
    }

    void <init>(com.android.server.tv.TvInputHardwareManager, com.android.server.tv.TvInputHardwareManager$1)
    {
        com.android.server.tv.TvInputHardwareManager$HdmiSystemAudioModeChangeListener r0;
        com.android.server.tv.TvInputHardwareManager r1;
        com.android.server.tv.TvInputHardwareManager$1 r2;

        r0 := @this: com.android.server.tv.TvInputHardwareManager$HdmiSystemAudioModeChangeListener;

        r1 := @parameter0: com.android.server.tv.TvInputHardwareManager;

        r2 := @parameter1: com.android.server.tv.TvInputHardwareManager$1;

        specialinvoke r0.<com.android.server.tv.TvInputHardwareManager$HdmiSystemAudioModeChangeListener: void <init>(com.android.server.tv.TvInputHardwareManager)>(r1);

        return;
    }

    public void onStatusChanged(boolean) throws android.os.RemoteException
    {
        com.android.server.tv.TvInputHardwareManager$HdmiSystemAudioModeChangeListener r0;
        boolean z0;
        java.lang.Object r1, $r7;
        com.android.server.tv.TvInputHardwareManager $r2, $r3, $r5;
        android.util.SparseArray $r4, $r6;
        int $i0, i1;
        com.android.server.tv.TvInputHardwareManager$Connection $r8;
        java.lang.Throwable $r9;
        com.android.server.tv.TvInputHardwareManager$TvInputHardwareImpl r10;

        r0 := @this: com.android.server.tv.TvInputHardwareManager$HdmiSystemAudioModeChangeListener;

        z0 := @parameter0: boolean;

        $r2 = r0.<com.android.server.tv.TvInputHardwareManager$HdmiSystemAudioModeChangeListener: com.android.server.tv.TvInputHardwareManager this$0>;

        r1 = staticinvoke <com.android.server.tv.TvInputHardwareManager: java.lang.Object access$1000(com.android.server.tv.TvInputHardwareManager)>($r2);

        entermonitor r1;

        i1 = 0;

     label1:
        $r3 = r0.<com.android.server.tv.TvInputHardwareManager$HdmiSystemAudioModeChangeListener: com.android.server.tv.TvInputHardwareManager this$0>;

        $r4 = staticinvoke <com.android.server.tv.TvInputHardwareManager: android.util.SparseArray access$2900(com.android.server.tv.TvInputHardwareManager)>($r3);

        $i0 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        if i1 >= $i0 goto label5;

        $r5 = r0.<com.android.server.tv.TvInputHardwareManager$HdmiSystemAudioModeChangeListener: com.android.server.tv.TvInputHardwareManager this$0>;

        $r6 = staticinvoke <com.android.server.tv.TvInputHardwareManager: android.util.SparseArray access$2900(com.android.server.tv.TvInputHardwareManager)>($r5);

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r8 = (com.android.server.tv.TvInputHardwareManager$Connection) $r7;

        r10 = virtualinvoke $r8.<com.android.server.tv.TvInputHardwareManager$Connection: com.android.server.tv.TvInputHardwareManager$TvInputHardwareImpl getHardwareImplLocked()>();

     label2:
        if r10 == null goto label4;

     label3:
        staticinvoke <com.android.server.tv.TvInputHardwareManager$TvInputHardwareImpl: void access$3000(com.android.server.tv.TvInputHardwareManager$TvInputHardwareImpl)>(r10);

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        exitmonitor r1;

     label6:
        return;

     label7:
        $r9 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }
}
