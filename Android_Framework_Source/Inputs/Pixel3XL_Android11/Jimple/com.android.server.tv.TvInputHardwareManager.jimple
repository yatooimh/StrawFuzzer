class com.android.server.tv.TvInputHardwareManager extends java.lang.Object implements com.android.server.tv.TvInputHal$Callback
{
    private static final java.lang.String TAG;
    private final android.media.AudioManager mAudioManager;
    private final android.util.SparseArray mConnections;
    private final android.content.Context mContext;
    private int mCurrentIndex;
    private int mCurrentMaxIndex;
    private final com.android.server.tv.TvInputHal mHal;
    private final android.os.Handler mHandler;
    private final android.util.SparseArray mHardwareInputIdMap;
    private final java.util.List mHardwareList;
    private final android.hardware.hdmi.IHdmiDeviceEventListener mHdmiDeviceEventListener;
    private final java.util.List mHdmiDeviceList;
    private final android.hardware.hdmi.IHdmiHotplugEventListener mHdmiHotplugEventListener;
    private final android.util.SparseArray mHdmiInputIdMap;
    private final android.util.SparseBooleanArray mHdmiStateMap;
    private final android.hardware.hdmi.IHdmiSystemAudioModeChangeListener mHdmiSystemAudioModeChangeListener;
    private final java.util.Map mInputMap;
    private final com.android.server.tv.TvInputHardwareManager$Listener mListener;
    private final java.lang.Object mLock;
    private final java.util.List mPendingHdmiDeviceEvents;
    private final android.content.BroadcastReceiver mVolumeReceiver;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "Lcom/android/server/tv/TvInputHardwareManager;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.server.tv.TvInputHardwareManager: java.lang.String TAG> = $r1;

        return;
    }

    public void <init>(android.content.Context, com.android.server.tv.TvInputHardwareManager$Listener)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        android.content.Context r1;
        com.android.server.tv.TvInputHardwareManager$Listener r2;
        com.android.server.tv.TvInputHal $r3, $r20;
        android.util.SparseArray $r4, $r7, $r8;
        java.util.ArrayList $r5;
        java.util.LinkedList $r6, $r15;
        android.util.ArrayMap $r9;
        com.android.server.tv.TvInputHardwareManager$HdmiHotplugEventListener $r10;
        com.android.server.tv.TvInputHardwareManager$HdmiDeviceEventListener $r11;
        com.android.server.tv.TvInputHardwareManager$HdmiSystemAudioModeChangeListener $r12;
        com.android.server.tv.TvInputHardwareManager$1 $r13;
        android.util.SparseBooleanArray $r14;
        com.android.server.tv.TvInputHardwareManager$ListenerHandler $r16;
        java.lang.Object $r17, $r18;
        android.media.AudioManager $r19;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.tv.TvInputHardwareManager$Listener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new com.android.server.tv.TvInputHal;

        specialinvoke $r3.<com.android.server.tv.TvInputHal: void <init>(com.android.server.tv.TvInputHal$Callback)>(r0);

        r0.<com.android.server.tv.TvInputHardwareManager: com.android.server.tv.TvInputHal mHal> = $r3;

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mConnections> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.tv.TvInputHardwareManager: java.util.List mHardwareList> = $r5;

        $r6 = new java.util.LinkedList;

        specialinvoke $r6.<java.util.LinkedList: void <init>()>();

        r0.<com.android.server.tv.TvInputHardwareManager: java.util.List mHdmiDeviceList> = $r6;

        $r7 = new android.util.SparseArray;

        specialinvoke $r7.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mHardwareInputIdMap> = $r7;

        $r8 = new android.util.SparseArray;

        specialinvoke $r8.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mHdmiInputIdMap> = $r8;

        $r9 = new android.util.ArrayMap;

        specialinvoke $r9.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.tv.TvInputHardwareManager: java.util.Map mInputMap> = $r9;

        $r10 = new com.android.server.tv.TvInputHardwareManager$HdmiHotplugEventListener;

        specialinvoke $r10.<com.android.server.tv.TvInputHardwareManager$HdmiHotplugEventListener: void <init>(com.android.server.tv.TvInputHardwareManager,com.android.server.tv.TvInputHardwareManager$1)>(r0, null);

        r0.<com.android.server.tv.TvInputHardwareManager: android.hardware.hdmi.IHdmiHotplugEventListener mHdmiHotplugEventListener> = $r10;

        $r11 = new com.android.server.tv.TvInputHardwareManager$HdmiDeviceEventListener;

        specialinvoke $r11.<com.android.server.tv.TvInputHardwareManager$HdmiDeviceEventListener: void <init>(com.android.server.tv.TvInputHardwareManager,com.android.server.tv.TvInputHardwareManager$1)>(r0, null);

        r0.<com.android.server.tv.TvInputHardwareManager: android.hardware.hdmi.IHdmiDeviceEventListener mHdmiDeviceEventListener> = $r11;

        $r12 = new com.android.server.tv.TvInputHardwareManager$HdmiSystemAudioModeChangeListener;

        specialinvoke $r12.<com.android.server.tv.TvInputHardwareManager$HdmiSystemAudioModeChangeListener: void <init>(com.android.server.tv.TvInputHardwareManager,com.android.server.tv.TvInputHardwareManager$1)>(r0, null);

        r0.<com.android.server.tv.TvInputHardwareManager: android.hardware.hdmi.IHdmiSystemAudioModeChangeListener mHdmiSystemAudioModeChangeListener> = $r12;

        $r13 = new com.android.server.tv.TvInputHardwareManager$1;

        specialinvoke $r13.<com.android.server.tv.TvInputHardwareManager$1: void <init>(com.android.server.tv.TvInputHardwareManager)>(r0);

        r0.<com.android.server.tv.TvInputHardwareManager: android.content.BroadcastReceiver mVolumeReceiver> = $r13;

        r0.<com.android.server.tv.TvInputHardwareManager: int mCurrentIndex> = 0;

        r0.<com.android.server.tv.TvInputHardwareManager: int mCurrentMaxIndex> = 0;

        $r14 = new android.util.SparseBooleanArray;

        specialinvoke $r14.<android.util.SparseBooleanArray: void <init>()>();

        r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseBooleanArray mHdmiStateMap> = $r14;

        $r15 = new java.util.LinkedList;

        specialinvoke $r15.<java.util.LinkedList: void <init>()>();

        r0.<com.android.server.tv.TvInputHardwareManager: java.util.List mPendingHdmiDeviceEvents> = $r15;

        $r16 = new com.android.server.tv.TvInputHardwareManager$ListenerHandler;

        specialinvoke $r16.<com.android.server.tv.TvInputHardwareManager$ListenerHandler: void <init>(com.android.server.tv.TvInputHardwareManager,com.android.server.tv.TvInputHardwareManager$1)>(r0, null);

        r0.<com.android.server.tv.TvInputHardwareManager: android.os.Handler mHandler> = $r16;

        $r17 = new java.lang.Object;

        specialinvoke $r17.<java.lang.Object: void <init>()>();

        r0.<com.android.server.tv.TvInputHardwareManager: java.lang.Object mLock> = $r17;

        r0.<com.android.server.tv.TvInputHardwareManager: android.content.Context mContext> = r1;

        r0.<com.android.server.tv.TvInputHardwareManager: com.android.server.tv.TvInputHardwareManager$Listener mListener> = r2;

        $r18 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");

        $r19 = (android.media.AudioManager) $r18;

        r0.<com.android.server.tv.TvInputHardwareManager: android.media.AudioManager mAudioManager> = $r19;

        $r20 = r0.<com.android.server.tv.TvInputHardwareManager: com.android.server.tv.TvInputHal mHal>;

        virtualinvoke $r20.<com.android.server.tv.TvInputHal: void init()>();

        return;
    }

    static java.lang.Object access$1000(com.android.server.tv.TvInputHardwareManager)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.tv.TvInputHardwareManager;

        $r1 = r0.<com.android.server.tv.TvInputHardwareManager: java.lang.Object mLock>;

        return $r1;
    }

    static android.media.AudioManager access$1600(com.android.server.tv.TvInputHardwareManager)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        android.media.AudioManager $r1;

        r0 := @parameter0: com.android.server.tv.TvInputHardwareManager;

        $r1 = r0.<com.android.server.tv.TvInputHardwareManager: android.media.AudioManager mAudioManager>;

        return $r1;
    }

    static com.android.server.tv.TvInputHal access$1700(com.android.server.tv.TvInputHardwareManager)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        com.android.server.tv.TvInputHal $r1;

        r0 := @parameter0: com.android.server.tv.TvInputHardwareManager;

        $r1 = r0.<com.android.server.tv.TvInputHardwareManager: com.android.server.tv.TvInputHal mHal>;

        return $r1;
    }

    static void access$1800(com.android.server.tv.TvInputHardwareManager)
    {
        com.android.server.tv.TvInputHardwareManager r0;

        r0 := @parameter0: com.android.server.tv.TvInputHardwareManager;

        specialinvoke r0.<com.android.server.tv.TvInputHardwareManager: void updateVolume()>();

        return;
    }

    static float access$1900(com.android.server.tv.TvInputHardwareManager)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        float $f0;

        r0 := @parameter0: com.android.server.tv.TvInputHardwareManager;

        $f0 = specialinvoke r0.<com.android.server.tv.TvInputHardwareManager: float getMediaStreamVolume()>();

        return $f0;
    }

    static boolean access$2000(int[], int)
    {
        int[] r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        $z0 = staticinvoke <com.android.server.tv.TvInputHardwareManager: boolean intArrayContains(int[],int)>(r0, i0);

        return $z0;
    }

    static com.android.server.tv.TvInputHardwareManager$Listener access$2100(com.android.server.tv.TvInputHardwareManager)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        com.android.server.tv.TvInputHardwareManager$Listener $r1;

        r0 := @parameter0: com.android.server.tv.TvInputHardwareManager;

        $r1 = r0.<com.android.server.tv.TvInputHardwareManager: com.android.server.tv.TvInputHardwareManager$Listener mListener>;

        return $r1;
    }

    static android.util.SparseArray access$2200(com.android.server.tv.TvInputHardwareManager)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        android.util.SparseArray $r1;

        r0 := @parameter0: com.android.server.tv.TvInputHardwareManager;

        $r1 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mHdmiInputIdMap>;

        return $r1;
    }

    static android.util.SparseBooleanArray access$2300(com.android.server.tv.TvInputHardwareManager)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        android.util.SparseBooleanArray $r1;

        r0 := @parameter0: com.android.server.tv.TvInputHardwareManager;

        $r1 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseBooleanArray mHdmiStateMap>;

        return $r1;
    }

    static android.media.tv.TvInputHardwareInfo access$2400(com.android.server.tv.TvInputHardwareManager, int)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        int i0;
        android.media.tv.TvInputHardwareInfo $r1;

        r0 := @parameter0: com.android.server.tv.TvInputHardwareManager;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.server.tv.TvInputHardwareManager: android.media.tv.TvInputHardwareInfo findHardwareInfoForHdmiPortLocked(int)>(i0);

        return $r1;
    }

    static android.util.SparseArray access$2500(com.android.server.tv.TvInputHardwareManager)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        android.util.SparseArray $r1;

        r0 := @parameter0: com.android.server.tv.TvInputHardwareManager;

        $r1 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mHardwareInputIdMap>;

        return $r1;
    }

    static android.os.Handler access$2600(com.android.server.tv.TvInputHardwareManager)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.tv.TvInputHardwareManager;

        $r1 = r0.<com.android.server.tv.TvInputHardwareManager: android.os.Handler mHandler>;

        return $r1;
    }

    static java.util.List access$2700(com.android.server.tv.TvInputHardwareManager)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        java.util.List $r1;

        r0 := @parameter0: com.android.server.tv.TvInputHardwareManager;

        $r1 = r0.<com.android.server.tv.TvInputHardwareManager: java.util.List mHdmiDeviceList>;

        return $r1;
    }

    static java.util.List access$2800(com.android.server.tv.TvInputHardwareManager)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        java.util.List $r1;

        r0 := @parameter0: com.android.server.tv.TvInputHardwareManager;

        $r1 = r0.<com.android.server.tv.TvInputHardwareManager: java.util.List mPendingHdmiDeviceEvents>;

        return $r1;
    }

    static android.util.SparseArray access$2900(com.android.server.tv.TvInputHardwareManager)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        android.util.SparseArray $r1;

        r0 := @parameter0: com.android.server.tv.TvInputHardwareManager;

        $r1 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mConnections>;

        return $r1;
    }

    static void access$300(com.android.server.tv.TvInputHardwareManager, android.content.Context, android.content.Intent)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        android.content.Context r1;
        android.content.Intent r2;

        r0 := @parameter0: com.android.server.tv.TvInputHardwareManager;

        r1 := @parameter1: android.content.Context;

        r2 := @parameter2: android.content.Intent;

        specialinvoke r0.<com.android.server.tv.TvInputHardwareManager: void handleVolumeChange(android.content.Context,android.content.Intent)>(r1, r2);

        return;
    }

    static java.lang.String access$900()
    {
        java.lang.String $r0;

        $r0 = <com.android.server.tv.TvInputHardwareManager: java.lang.String TAG>;

        return $r0;
    }

    private void buildHardwareListLocked()
    {
        com.android.server.tv.TvInputHardwareManager r0;
        java.util.List $r1, $r4;
        android.util.SparseArray $r2, $r3;
        int $i0, i1;
        java.lang.Object $r5;
        com.android.server.tv.TvInputHardwareManager$Connection $r6;
        android.media.tv.TvInputHardwareInfo $r7;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        $r1 = r0.<com.android.server.tv.TvInputHardwareManager: java.util.List mHardwareList>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        i1 = 0;

     label1:
        $r2 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mConnections>;

        $i0 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        if i1 >= $i0 goto label2;

        $r4 = r0.<com.android.server.tv.TvInputHardwareManager: java.util.List mHardwareList>;

        $r3 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mConnections>;

        $r5 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r6 = (com.android.server.tv.TvInputHardwareManager$Connection) $r5;

        $r7 = virtualinvoke $r6.<com.android.server.tv.TvInputHardwareManager$Connection: android.media.tv.TvInputHardwareInfo getHardwareInfoLocked()>();

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r7);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private boolean checkUidChangedLocked(com.android.server.tv.TvInputHardwareManager$Connection, int, int)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        int i0, i1, $i2, $i3;
        java.lang.Integer r1, r3;
        com.android.server.tv.TvInputHardwareManager$Connection r2;
        boolean z0;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        r2 := @parameter0: com.android.server.tv.TvInputHardwareManager$Connection;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = virtualinvoke r2.<com.android.server.tv.TvInputHardwareManager$Connection: java.lang.Integer getCallingUidLocked()>();

        r3 = virtualinvoke r2.<com.android.server.tv.TvInputHardwareManager$Connection: java.lang.Integer getResolvedUserIdLocked()>();

        if r1 == null goto label2;

        if r3 == null goto label2;

        $i2 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        if $i2 != i0 goto label2;

        $i3 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        if $i3 == i1 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    private int findDeviceIdForInputIdLocked(java.lang.String)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        java.lang.String r1, $r7;
        android.util.SparseArray $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;
        com.android.server.tv.TvInputHardwareManager$Connection $r5;
        android.media.tv.TvInputInfo $r6;
        boolean $z0;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        r1 := @parameter0: java.lang.String;

        i1 = 0;

     label1:
        $r2 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mConnections>;

        $i0 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        if i1 >= $i0 goto label3;

        $r3 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mConnections>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        $r5 = (com.android.server.tv.TvInputHardwareManager$Connection) $r4;

        $r6 = virtualinvoke $r5.<com.android.server.tv.TvInputHardwareManager$Connection: android.media.tv.TvInputInfo getInfoLocked()>();

        $r7 = virtualinvoke $r6.<android.media.tv.TvInputInfo: java.lang.String getId()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return -1;
    }

    private android.media.tv.TvInputHardwareInfo findHardwareInfoForHdmiPortLocked(int)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        int i0, $i1, $i2;
        java.util.Iterator r1;
        android.media.tv.TvInputHardwareInfo r2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.tv.TvInputHardwareManager: java.util.List mHardwareList>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.media.tv.TvInputHardwareInfo) $r4;

        $i1 = virtualinvoke r2.<android.media.tv.TvInputHardwareInfo: int getType()>();

        if $i1 != 9 goto label2;

        $i2 = virtualinvoke r2.<android.media.tv.TvInputHardwareInfo: int getHdmiPortId()>();

        if $i2 != i0 goto label2;

        return r2;

     label2:
        goto label1;

     label3:
        return null;
    }

    private float getMediaStreamVolume()
    {
        com.android.server.tv.TvInputHardwareManager r0;
        int $i0, $i1;
        float $f0, $f1, $f2;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        $i0 = r0.<com.android.server.tv.TvInputHardwareManager: int mCurrentIndex>;

        $f1 = (float) $i0;

        $i1 = r0.<com.android.server.tv.TvInputHardwareManager: int mCurrentMaxIndex>;

        $f0 = (float) $i1;

        $f2 = $f1 / $f0;

        return $f2;
    }

    private void handleVolumeChange(android.content.Context, android.content.Intent)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        boolean $z0, $z1;
        int $i0, $i1, $i2, i4, i6, i7, $i8;
        android.util.SparseArray $r2, $r15;
        java.lang.Object $r3, r14;
        com.android.server.tv.TvInputHardwareManager$Connection $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r8, r12, r13;
        java.lang.Throwable $r9;
        android.content.Context r10;
        android.content.Intent r11;
        byte b5;
        com.android.server.tv.TvInputHardwareManager$TvInputHardwareImpl r16;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        r10 := @parameter0: android.content.Context;

        r11 := @parameter1: android.content.Intent;

        r12 = virtualinvoke r11.<android.content.Intent: java.lang.String getAction()>();

        i4 = virtualinvoke r12.<java.lang.String: int hashCode()>();

        if i4 == -1940635523 goto label03;

        if i4 == 1920758225 goto label02;

     label01:
        goto label04;

     label02:
        $z1 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>("android.media.STREAM_MUTE_CHANGED_ACTION");

        if $z1 == 0 goto label01;

        b5 = 1;

        goto label05;

     label03:
        $z0 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>("android.media.VOLUME_CHANGED_ACTION");

        if $z0 == 0 goto label01;

        b5 = 0;

        goto label05;

     label04:
        b5 = -1;

     label05:
        if b5 == 0 goto label07;

        if b5 == 1 goto label06;

        r13 = <com.android.server.tv.TvInputHardwareManager: java.lang.String TAG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized intent: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r13, $r8);

        return;

     label06:
        $i2 = virtualinvoke r11.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.media.EXTRA_VOLUME_STREAM_TYPE", -1);

        if $i2 == 3 goto label10;

        return;

     label07:
        $i0 = virtualinvoke r11.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.media.EXTRA_VOLUME_STREAM_TYPE", -1);

        if $i0 == 3 goto label08;

        return;

     label08:
        i6 = virtualinvoke r11.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.media.EXTRA_VOLUME_STREAM_VALUE", 0);

        $i1 = r0.<com.android.server.tv.TvInputHardwareManager: int mCurrentIndex>;

        if i6 != $i1 goto label09;

        return;

     label09:
        r0.<com.android.server.tv.TvInputHardwareManager: int mCurrentIndex> = i6;

     label10:
        r14 = r0.<com.android.server.tv.TvInputHardwareManager: java.lang.Object mLock>;

        entermonitor r14;

        i7 = 0;

     label11:
        $r15 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mConnections>;

        $i8 = virtualinvoke $r15.<android.util.SparseArray: int size()>();

        if i7 >= $i8 goto label15;

        $r2 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mConnections>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object valueAt(int)>(i7);

        $r4 = (com.android.server.tv.TvInputHardwareManager$Connection) $r3;

        r16 = virtualinvoke $r4.<com.android.server.tv.TvInputHardwareManager$Connection: com.android.server.tv.TvInputHardwareManager$TvInputHardwareImpl getHardwareImplLocked()>();

     label12:
        if r16 == null goto label14;

     label13:
        virtualinvoke r16.<com.android.server.tv.TvInputHardwareManager$TvInputHardwareImpl: void onMediaStreamVolumeChanged()>();

     label14:
        i7 = i7 + 1;

        goto label11;

     label15:
        exitmonitor r14;

     label16:
        return;

     label17:
        $r9 := @caughtexception;

     label18:
        exitmonitor r14;

     label19:
        throw $r9;

        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    private static int indexOfEqualValue(android.util.SparseArray, java.lang.Object)
    {
        android.util.SparseArray r0;
        java.lang.Object r1, $r2;
        int $i0, i1;
        boolean $z0;

        r0 := @parameter0: android.util.SparseArray;

        r1 := @parameter1: java.lang.Object;

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<android.util.SparseArray: int size()>();

        if i1 >= $i0 goto label3;

        $r2 = virtualinvoke r0.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return -1;
    }

    private static boolean intArrayContains(int[], int)
    {
        int[] r0;
        int i0, i1, $i2, i3;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        i1 = lengthof r0;

        i3 = 0;

     label1:
        if i3 >= i1 goto label3;

        $i2 = r0[i3];

        if $i2 != i0 goto label2;

        return 1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 0;
    }

    private void processPendingHdmiDeviceEventsLocked()
    {
        com.android.server.tv.TvInputHardwareManager r0;
        java.util.Iterator r1;
        android.os.Message r2;
        android.hardware.hdmi.HdmiDeviceInfo r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5, $r6;
        int $i0;
        android.media.tv.TvInputHardwareInfo $r7;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        $r4 = r0.<com.android.server.tv.TvInputHardwareManager: java.util.List mPendingHdmiDeviceEvents>;

        r1 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.os.Message) $r5;

        $r6 = r2.<android.os.Message: java.lang.Object obj>;

        r3 = (android.hardware.hdmi.HdmiDeviceInfo) $r6;

        $i0 = virtualinvoke r3.<android.hardware.hdmi.HdmiDeviceInfo: int getPortId()>();

        $r7 = specialinvoke r0.<com.android.server.tv.TvInputHardwareManager: android.media.tv.TvInputHardwareInfo findHardwareInfoForHdmiPortLocked(int)>($i0);

        if $r7 == null goto label2;

        virtualinvoke r2.<android.os.Message: void sendToTarget()>();

        interfaceinvoke r1.<java.util.Iterator: void remove()>();

     label2:
        goto label1;

     label3:
        return;
    }

    private void updateVolume()
    {
        com.android.server.tv.TvInputHardwareManager r0;
        android.media.AudioManager $r1, $r2;
        int $i0, $i1;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        $r1 = r0.<com.android.server.tv.TvInputHardwareManager: android.media.AudioManager mAudioManager>;

        $i0 = virtualinvoke $r1.<android.media.AudioManager: int getStreamMaxVolume(int)>(3);

        r0.<com.android.server.tv.TvInputHardwareManager: int mCurrentMaxIndex> = $i0;

        $r2 = r0.<com.android.server.tv.TvInputHardwareManager: android.media.AudioManager mAudioManager>;

        $i1 = virtualinvoke $r2.<android.media.AudioManager: int getStreamVolume(int)>(3);

        r0.<com.android.server.tv.TvInputHardwareManager: int mCurrentIndex> = $i1;

        return;
    }

    public android.media.tv.ITvInputHardware acquireHardware(int, android.media.tv.ITvInputHardwareCallback, android.media.tv.TvInputInfo, int, int, java.lang.String, int)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        int i0, i1, i2, i3;
        android.media.tv.tunerresourcemanager.TunerResourceManager r1;
        java.lang.Object r2, $r6, $r8;
        com.android.server.tv.TvInputHardwareManager$Connection r3;
        android.media.tv.tunerresourcemanager.ResourceClientProfile r4, r23;
        android.content.Context $r5;
        android.util.SparseArray $r7;
        boolean $z0;
        java.lang.String $r11, $r14, r20, r21, r24;
        android.os.RemoteException $r15;
        java.lang.Throwable $r16, $r17, r33;
        android.media.tv.ITvInputHardwareCallback r18;
        android.media.tv.TvInputInfo r19;
        java.lang.StringBuilder r22, r25;
        com.android.server.tv.TvInputHardwareManager$TvInputHardwareImpl r26;
        android.media.tv.TvInputHardwareInfo $r27;
        android.os.IBinder $r28;
        java.lang.Integer $r29, $r30;
        android.media.tv.ITvInputHardware r31;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        i0 := @parameter0: int;

        r18 := @parameter1: android.media.tv.ITvInputHardwareCallback;

        r19 := @parameter2: android.media.tv.TvInputInfo;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r20 := @parameter5: java.lang.String;

        i3 := @parameter6: int;

        if r18 == null goto label21;

        $r5 = r0.<com.android.server.tv.TvInputHardwareManager: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("tv_tuner_resource_mgr");

        r1 = (android.media.tv.tunerresourcemanager.TunerResourceManager) $r6;

        r2 = r0.<com.android.server.tv.TvInputHardwareManager: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        $r7 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mConnections>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (com.android.server.tv.TvInputHardwareManager$Connection) $r8;

     label02:
        if r3 != null goto label05;

     label03:
        r21 = <com.android.server.tv.TvInputHardwareManager: java.lang.String TAG>;

        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid deviceId : ");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>(r21, $r14);

        exitmonitor r2;

     label04:
        return null;

     label05:
        r4 = new android.media.tv.tunerresourcemanager.ResourceClientProfile;

     label06:
        specialinvoke r4.<android.media.tv.tunerresourcemanager.ResourceClientProfile: void <init>(java.lang.String,int)>(r20, i3);

        r23 = virtualinvoke r3.<com.android.server.tv.TvInputHardwareManager$Connection: android.media.tv.tunerresourcemanager.ResourceClientProfile getResourceClientProfileLocked()>();

     label07:
        if r23 == null goto label10;

        if r1 == null goto label10;

     label08:
        $z0 = virtualinvoke r1.<android.media.tv.tunerresourcemanager.TunerResourceManager: boolean isHigherPriority(android.media.tv.tunerresourcemanager.ResourceClientProfile,android.media.tv.tunerresourcemanager.ResourceClientProfile)>(r4, r23);

        if $z0 != 0 goto label10;

        r24 = <com.android.server.tv.TvInputHardwareManager: java.lang.String TAG>;

        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Acquiring does not show higher priority than the current holder. Device id:");

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>(r24, $r11);

        exitmonitor r2;

     label09:
        return null;

     label10:
        r26 = new com.android.server.tv.TvInputHardwareManager$TvInputHardwareImpl;

        $r27 = virtualinvoke r3.<com.android.server.tv.TvInputHardwareManager$Connection: android.media.tv.TvInputHardwareInfo getHardwareInfoLocked()>();

        specialinvoke r26.<com.android.server.tv.TvInputHardwareManager$TvInputHardwareImpl: void <init>(com.android.server.tv.TvInputHardwareManager,android.media.tv.TvInputHardwareInfo)>(r0, $r27);

     label11:
        $r28 = interfaceinvoke r18.<android.media.tv.ITvInputHardwareCallback: android.os.IBinder asBinder()>();

        interfaceinvoke $r28.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r3, 0);

     label12:
        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        virtualinvoke r3.<com.android.server.tv.TvInputHardwareManager$Connection: void resetLocked(com.android.server.tv.TvInputHardwareManager$TvInputHardwareImpl,android.media.tv.ITvInputHardwareCallback,android.media.tv.TvInputInfo,java.lang.Integer,java.lang.Integer,android.media.tv.tunerresourcemanager.ResourceClientProfile)>(r26, r18, r19, $r29, $r30, r4);

        r31 = virtualinvoke r3.<com.android.server.tv.TvInputHardwareManager$Connection: android.media.tv.ITvInputHardware getHardwareLocked()>();

        exitmonitor r2;

     label13:
        return r31;

     label14:
        $r15 := @caughtexception;

     label15:
        virtualinvoke r26.<com.android.server.tv.TvInputHardwareManager$TvInputHardwareImpl: void release()>();

        exitmonitor r2;

     label16:
        return null;

     label17:
        $r16 := @caughtexception;

        r33 = $r16;

     label18:
        exitmonitor r2;

     label19:
        throw r33;

     label20:
        $r17 := @caughtexception;

        r33 = $r17;

        goto label18;

     label21:
        throw null;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label06 to label07 with label20;
        catch java.lang.Throwable from label08 to label09 with label20;
        catch java.lang.Throwable from label10 to label11 with label20;
        catch android.os.RemoteException from label11 to label12 with label14;
        catch java.lang.Throwable from label11 to label12 with label20;
        catch java.lang.Throwable from label12 to label13 with label20;
        catch java.lang.Throwable from label15 to label16 with label20;
        catch java.lang.Throwable from label18 to label19 with label20;
    }

    public void addHardwareInput(int, android.media.tv.TvInputInfo)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        java.lang.Object r1, $r5, $r12, $r18, $r25;
        java.lang.String r2, $r7, $r9, $r14, $r19, $r33, r36, r39;
        java.lang.StringBuilder r3;
        android.util.SparseArray $r4, $r6, $r11, $r17;
        java.util.Map $r8, $r24;
        android.os.Handler $r13, $r21;
        int $i0, $i1, $i2, i4, i5, $i6;
        android.os.Message $r15, $r22;
        android.util.SparseBooleanArray $r16, $r20, $r37;
        boolean $z0, $z1;
        java.lang.Throwable $r34;
        android.media.tv.TvInputInfo r35;
        android.media.tv.TvInputHardwareInfo r38;
        byte b7;
        com.android.server.tv.TvInputHardwareManager$Connection r40;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        i4 := @parameter0: int;

        r35 := @parameter1: android.media.tv.TvInputInfo;

        r1 = r0.<com.android.server.tv.TvInputHardwareManager: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r4 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mHardwareInputIdMap>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i4);

        r2 = (java.lang.String) $r5;

     label02:
        if r2 == null goto label04;

     label03:
        r36 = <com.android.server.tv.TvInputHardwareManager: java.lang.String TAG>;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to override previous registration: old = ");

        $r24 = r0.<com.android.server.tv.TvInputHardwareManager: java.util.Map mInputMap>;

        $r25 = interfaceinvoke $r24.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", new = ");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r35);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r33 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r36, $r33);

     label04:
        $r6 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mHardwareInputIdMap>;

        $r7 = virtualinvoke r35.<android.media.tv.TvInputInfo: java.lang.String getId()>();

        virtualinvoke $r6.<android.util.SparseArray: void put(int,java.lang.Object)>(i4, $r7);

        $r8 = r0.<com.android.server.tv.TvInputHardwareManager: java.util.Map mInputMap>;

        $r9 = virtualinvoke r35.<android.media.tv.TvInputInfo: java.lang.String getId()>();

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, r35);

     label05:
        i5 = 0;

     label06:
        $r37 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseBooleanArray mHdmiStateMap>;

        $i6 = virtualinvoke $r37.<android.util.SparseBooleanArray: int size()>();

        if i5 >= $i6 goto label16;

        $r16 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseBooleanArray mHdmiStateMap>;

        $i1 = virtualinvoke $r16.<android.util.SparseBooleanArray: int keyAt(int)>(i5);

        r38 = specialinvoke r0.<com.android.server.tv.TvInputHardwareManager: android.media.tv.TvInputHardwareInfo findHardwareInfoForHdmiPortLocked(int)>($i1);

     label07:
        if r38 != null goto label08;

        goto label15;

     label08:
        $r17 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mHardwareInputIdMap>;

        $i2 = virtualinvoke r38.<android.media.tv.TvInputHardwareInfo: int getDeviceId()>();

        $r18 = virtualinvoke $r17.<android.util.SparseArray: java.lang.Object get(int)>($i2);

        r39 = (java.lang.String) $r18;

     label09:
        if r39 == null goto label15;

     label10:
        $r19 = virtualinvoke r35.<android.media.tv.TvInputInfo: java.lang.String getId()>();

        $z0 = virtualinvoke r39.<java.lang.String: boolean equals(java.lang.Object)>($r19);

        if $z0 == 0 goto label15;

        $r20 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseBooleanArray mHdmiStateMap>;

        $z1 = virtualinvoke $r20.<android.util.SparseBooleanArray: boolean valueAt(int)>(i5);

        if $z1 == 0 goto label12;

     label11:
        b7 = 0;

        goto label13;

     label12:
        b7 = 1;

     label13:
        $r21 = r0.<com.android.server.tv.TvInputHardwareManager: android.os.Handler mHandler>;

        $r22 = virtualinvoke $r21.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(1, b7, 0, r39);

        virtualinvoke $r22.<android.os.Message: void sendToTarget()>();

        exitmonitor r1;

     label14:
        return;

     label15:
        i5 = i5 + 1;

        goto label06;

     label16:
        $r11 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mConnections>;

        $r12 = virtualinvoke $r11.<android.util.SparseArray: java.lang.Object get(int)>(i4);

        r40 = (com.android.server.tv.TvInputHardwareManager$Connection) $r12;

     label17:
        if r40 == null goto label19;

     label18:
        $r13 = r0.<com.android.server.tv.TvInputHardwareManager: android.os.Handler mHandler>;

        $i0 = staticinvoke <com.android.server.tv.TvInputHardwareManager$Connection: int access$600(com.android.server.tv.TvInputHardwareManager$Connection)>(r40);

        $r14 = virtualinvoke r35.<android.media.tv.TvInputInfo: java.lang.String getId()>();

        $r15 = virtualinvoke $r13.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(1, $i0, 0, $r14);

        virtualinvoke $r15.<android.os.Message: void sendToTarget()>();

     label19:
        exitmonitor r1;

     label20:
        return;

     label21:
        $r34 := @caughtexception;

     label22:
        exitmonitor r1;

     label23:
        throw $r34;

        catch java.lang.Throwable from label01 to label02 with label21;
        catch java.lang.Throwable from label03 to label04 with label21;
        catch java.lang.Throwable from label04 to label05 with label21;
        catch java.lang.Throwable from label06 to label07 with label21;
        catch java.lang.Throwable from label08 to label09 with label21;
        catch java.lang.Throwable from label10 to label11 with label21;
        catch java.lang.Throwable from label13 to label14 with label21;
        catch java.lang.Throwable from label16 to label17 with label21;
        catch java.lang.Throwable from label18 to label19 with label21;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label22 to label23 with label21;
    }

    public void addHdmiInput(int, android.media.tv.TvInputInfo)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        int i0, $i1, $i2;
        java.lang.String r1, $r7, $r12, $r16, $r18, $r30, r34, r35;
        java.lang.StringBuilder $r2, r36, r38;
        java.lang.IllegalArgumentException $r6, r37;
        android.util.SparseArray $r8, $r13, $r15;
        java.lang.Object $r14, $r22, r33;
        java.util.Map $r17, $r21;
        java.lang.Throwable $r31;
        android.media.tv.TvInputInfo r32;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        i0 := @parameter0: int;

        r32 := @parameter1: android.media.tv.TvInputInfo;

        $i1 = virtualinvoke r32.<android.media.tv.TvInputInfo: int getType()>();

        if $i1 != 1007 goto label11;

        r33 = r0.<com.android.server.tv.TvInputHardwareManager: java.lang.Object mLock>;

        entermonitor r33;

     label01:
        r34 = virtualinvoke r32.<android.media.tv.TvInputInfo: java.lang.String getParentId()>();

        $r8 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mHardwareInputIdMap>;

        $i2 = staticinvoke <com.android.server.tv.TvInputHardwareManager: int indexOfEqualValue(android.util.SparseArray,java.lang.Object)>($r8, r34);

        if $i2 < 0 goto label07;

        $r13 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mHdmiInputIdMap>;

        $r14 = virtualinvoke $r13.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r35 = (java.lang.String) $r14;

     label02:
        if r35 == null goto label04;

     label03:
        r1 = <com.android.server.tv.TvInputHardwareManager: java.lang.String TAG>;

        r36 = new java.lang.StringBuilder;

        specialinvoke r36.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to override previous registration: old = ");

        $r21 = r0.<com.android.server.tv.TvInputHardwareManager: java.util.Map mInputMap>;

        $r22 = interfaceinvoke $r21.<java.util.Map: java.lang.Object get(java.lang.Object)>(r35);

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", new = ");

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r32);

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r30 = virtualinvoke r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r1, $r30);

     label04:
        $r15 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mHdmiInputIdMap>;

        $r16 = virtualinvoke r32.<android.media.tv.TvInputInfo: java.lang.String getId()>();

        virtualinvoke $r15.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r16);

        $r17 = r0.<com.android.server.tv.TvInputHardwareManager: java.util.Map mInputMap>;

        $r18 = virtualinvoke r32.<android.media.tv.TvInputInfo: java.lang.String getId()>();

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, r32);

     label05:
        exitmonitor r33;

     label06:
        return;

     label07:
        r37 = new java.lang.IllegalArgumentException;

        r38 = new java.lang.StringBuilder;

        specialinvoke r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("info (");

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r32);

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") has invalid parentId.");

        $r12 = virtualinvoke r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r37.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw r37;

     label08:
        $r31 := @caughtexception;

     label09:
        exitmonitor r33;

     label10:
        throw $r31;

     label11:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("info (");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r32);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") has non-HDMI type.");

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public boolean captureFrame(java.lang.String, android.view.Surface, android.media.tv.TvStreamConfig, int, int)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        int i0, i2, i3;
        java.lang.Object r1, $r5;
        com.android.server.tv.TvInputHardwareManager$TvInputHardwareImpl r2;
        java.lang.Runnable r3;
        boolean z0;
        android.util.SparseArray $r4;
        java.lang.String $r8, r10, r13;
        java.lang.Throwable $r9;
        android.view.Surface r11;
        android.media.tv.TvStreamConfig r12;
        java.lang.StringBuilder r14;
        com.android.server.tv.TvInputHardwareManager$Connection r15;
        com.android.server.tv.TvInputHardwareManager$2 r16;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        r10 := @parameter0: java.lang.String;

        r11 := @parameter1: android.view.Surface;

        r12 := @parameter2: android.media.tv.TvStreamConfig;

        i2 := @parameter3: int;

        i0 := @parameter4: int;

        r1 = r0.<com.android.server.tv.TvInputHardwareManager: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        i3 = specialinvoke r0.<com.android.server.tv.TvInputHardwareManager: int findDeviceIdForInputIdLocked(java.lang.String)>(r10);

     label02:
        if i3 >= 0 goto label05;

     label03:
        r13 = <com.android.server.tv.TvInputHardwareManager: java.lang.String TAG>;

        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid inputId : ");

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r8 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>(r13, $r8);

        exitmonitor r1;

     label04:
        return 0;

     label05:
        $r4 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mConnections>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i3);

        r15 = (com.android.server.tv.TvInputHardwareManager$Connection) $r5;

        r2 = virtualinvoke r15.<com.android.server.tv.TvInputHardwareManager$Connection: com.android.server.tv.TvInputHardwareManager$TvInputHardwareImpl getHardwareImplLocked()>();

     label06:
        if r2 == null goto label15;

     label07:
        r3 = virtualinvoke r15.<com.android.server.tv.TvInputHardwareManager$Connection: java.lang.Runnable getOnFirstFrameCapturedLocked()>();

     label08:
        if r3 == null goto label10;

     label09:
        interfaceinvoke r3.<java.lang.Runnable: void run()>();

        virtualinvoke r15.<com.android.server.tv.TvInputHardwareManager$Connection: void setOnFirstFrameCapturedLocked(java.lang.Runnable)>(null);

     label10:
        z0 = staticinvoke <com.android.server.tv.TvInputHardwareManager$TvInputHardwareImpl: boolean access$700(com.android.server.tv.TvInputHardwareManager$TvInputHardwareImpl,android.view.Surface,android.media.tv.TvStreamConfig)>(r2, r11, r12);

     label11:
        if z0 == 0 goto label13;

     label12:
        r16 = new com.android.server.tv.TvInputHardwareManager$2;

        specialinvoke r16.<com.android.server.tv.TvInputHardwareManager$2: void <init>(com.android.server.tv.TvInputHardwareManager,com.android.server.tv.TvInputHardwareManager$TvInputHardwareImpl,android.media.tv.TvStreamConfig)>(r0, r2, r12);

        virtualinvoke r15.<com.android.server.tv.TvInputHardwareManager$Connection: void setOnFirstFrameCapturedLocked(java.lang.Runnable)>(r16);

     label13:
        exitmonitor r1;

     label14:
        return z0;

     label15:
        exitmonitor r1;

     label16:
        return 0;

     label17:
        $r9 := @caughtexception;

     label18:
        exitmonitor r1;

     label19:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.tv.TvInputHardwareManager r0;
        java.lang.StringBuilder r1, r66, r70, r72;
        com.android.internal.util.IndentingPrintWriter $r2;
        java.lang.String $r3, $r28, $r33, $r40, $r47, $r58, r69, r71;
        android.content.Context $r4;
        boolean $z0, $z1, $z2, $z3;
        android.util.SparseArray $r7, $r16, $r19, $r34, $r35, $r41, $r42, $r52, $r53;
        int $i0, $i1, $i2, i3, i4, i5, i6, i7, i8;
        java.util.List $r10, $r13;
        java.util.Map $r22;
        java.util.Set $r23;
        java.lang.Object $r26, $r27, $r31, $r36, $r43, $r48, $r50, $r54, r64;
        android.hardware.hdmi.HdmiDeviceInfo $r49;
        android.media.tv.TvInputHardwareInfo $r51;
        java.lang.Throwable $r59;
        java.io.FileDescriptor r60;
        java.io.PrintWriter r61;
        java.lang.String[] r62;
        com.android.server.tv.TvInputHardwareManager$Connection r65;
        java.util.Iterator r67, r68, r73;
        java.util.Map$Entry r74;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        r60 := @parameter0: java.io.FileDescriptor;

        r61 := @parameter1: java.io.PrintWriter;

        r62 := @parameter2: java.lang.String[];

        $r2 = new com.android.internal.util.IndentingPrintWriter;

        specialinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void <init>(java.io.Writer,java.lang.String)>(r61, "  ");

        $r4 = r0.<com.android.server.tv.TvInputHardwareManager: android.content.Context mContext>;

        $r3 = <com.android.server.tv.TvInputHardwareManager: java.lang.String TAG>;

        $z0 = staticinvoke <com.android.internal.util.DumpUtils: boolean checkDumpPermission(android.content.Context,java.lang.String,java.io.PrintWriter)>($r4, $r3, $r2);

        if $z0 != 0 goto label01;

        return;

     label01:
        r64 = r0.<com.android.server.tv.TvInputHardwareManager: java.lang.Object mLock>;

        entermonitor r64;

     label02:
        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("TvInputHardwareManager Info:");

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("mConnections: deviceId -> Connection");

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

     label03:
        i3 = 0;

     label04:
        $r7 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mConnections>;

        $i0 = virtualinvoke $r7.<android.util.SparseArray: int size()>();

        if i3 >= $i0 goto label06;

        $r52 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mConnections>;

        i4 = virtualinvoke $r52.<android.util.SparseArray: int keyAt(int)>(i3);

        $r53 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mConnections>;

        $r54 = virtualinvoke $r53.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        r65 = (com.android.server.tv.TvInputHardwareManager$Connection) $r54;

        r66 = new java.lang.StringBuilder;

        specialinvoke r66.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r65);

        $r58 = virtualinvoke r66.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r58);

     label05:
        i3 = i3 + 1;

        goto label04;

     label06:
        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("mHardwareList:");

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        $r10 = r0.<com.android.server.tv.TvInputHardwareManager: java.util.List mHardwareList>;

        r67 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z1 = interfaceinvoke r67.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        $r50 = interfaceinvoke r67.<java.util.Iterator: java.lang.Object next()>();

        $r51 = (android.media.tv.TvInputHardwareInfo) $r50;

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.Object)>($r51);

     label08:
        goto label07;

     label09:
        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("mHdmiDeviceList:");

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        $r13 = r0.<com.android.server.tv.TvInputHardwareManager: java.util.List mHdmiDeviceList>;

        r68 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z2 = interfaceinvoke r68.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label12;

        $r48 = interfaceinvoke r68.<java.util.Iterator: java.lang.Object next()>();

        $r49 = (android.hardware.hdmi.HdmiDeviceInfo) $r48;

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.Object)>($r49);

     label11:
        goto label10;

     label12:
        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("mHardwareInputIdMap: deviceId -> inputId");

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

     label13:
        i5 = 0;

     label14:
        $r16 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mHardwareInputIdMap>;

        $i1 = virtualinvoke $r16.<android.util.SparseArray: int size()>();

        if i5 >= $i1 goto label16;

        $r41 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mHardwareInputIdMap>;

        i6 = virtualinvoke $r41.<android.util.SparseArray: int keyAt(int)>(i5);

        $r42 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mHardwareInputIdMap>;

        $r43 = virtualinvoke $r42.<android.util.SparseArray: java.lang.Object valueAt(int)>(i5);

        r69 = (java.lang.String) $r43;

        r70 = new java.lang.StringBuilder;

        specialinvoke r70.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r70.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        virtualinvoke r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r69);

        $r47 = virtualinvoke r70.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r47);

     label15:
        i5 = i5 + 1;

        goto label14;

     label16:
        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("mHdmiInputIdMap: id -> inputId");

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

     label17:
        i7 = 0;

     label18:
        $r19 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mHdmiInputIdMap>;

        $i2 = virtualinvoke $r19.<android.util.SparseArray: int size()>();

        if i7 >= $i2 goto label20;

        $r34 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mHdmiInputIdMap>;

        i8 = virtualinvoke $r34.<android.util.SparseArray: int keyAt(int)>(i7);

        $r35 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mHdmiInputIdMap>;

        $r36 = virtualinvoke $r35.<android.util.SparseArray: java.lang.Object valueAt(int)>(i7);

        r71 = (java.lang.String) $r36;

        r72 = new java.lang.StringBuilder;

        specialinvoke r72.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r72.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        virtualinvoke r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r71);

        $r40 = virtualinvoke r72.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r40);

     label19:
        i7 = i7 + 1;

        goto label18;

     label20:
        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("mInputMap: inputId -> inputInfo");

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        $r22 = r0.<com.android.server.tv.TvInputHardwareManager: java.util.Map mInputMap>;

        $r23 = interfaceinvoke $r22.<java.util.Map: java.util.Set entrySet()>();

        r73 = interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>();

     label21:
        $z3 = interfaceinvoke r73.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label23;

        $r26 = interfaceinvoke r73.<java.util.Iterator: java.lang.Object next()>();

        r74 = (java.util.Map$Entry) $r26;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r27 = interfaceinvoke r74.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r28 = (java.lang.String) $r27;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r31 = interfaceinvoke r74.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r31);

        $r33 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r33);

     label22:
        goto label21;

     label23:
        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r2.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        exitmonitor r64;

     label24:
        return;

     label25:
        $r59 := @caughtexception;

     label26:
        exitmonitor r64;

     label27:
        throw $r59;

        catch java.lang.Throwable from label02 to label03 with label25;
        catch java.lang.Throwable from label04 to label05 with label25;
        catch java.lang.Throwable from label06 to label07 with label25;
        catch java.lang.Throwable from label07 to label08 with label25;
        catch java.lang.Throwable from label09 to label10 with label25;
        catch java.lang.Throwable from label10 to label11 with label25;
        catch java.lang.Throwable from label12 to label13 with label25;
        catch java.lang.Throwable from label14 to label15 with label25;
        catch java.lang.Throwable from label16 to label17 with label25;
        catch java.lang.Throwable from label18 to label19 with label25;
        catch java.lang.Throwable from label20 to label21 with label25;
        catch java.lang.Throwable from label21 to label22 with label25;
        catch java.lang.Throwable from label23 to label24 with label25;
        catch java.lang.Throwable from label26 to label27 with label25;
    }

    public java.util.List getAvailableTvStreamConfigList(java.lang.String, int, int)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        java.lang.Object r2, $r6;
        java.lang.StringBuilder r3;
        java.util.ArrayList $r4;
        android.util.SparseArray $r5;
        com.android.server.tv.TvInputHardwareManager$Connection $r7;
        int $i0, i2, i3, i4, i5, i6;
        java.lang.String $r10, r12, r13;
        java.lang.Throwable $r11;
        android.media.tv.TvStreamConfig[] r14;
        android.media.tv.TvStreamConfig r15;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        r12 := @parameter0: java.lang.String;

        i2 := @parameter1: int;

        i3 := @parameter2: int;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r2 = r0.<com.android.server.tv.TvInputHardwareManager: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        i4 = specialinvoke r0.<com.android.server.tv.TvInputHardwareManager: int findDeviceIdForInputIdLocked(java.lang.String)>(r12);

     label02:
        if i4 >= 0 goto label05;

     label03:
        r13 = <com.android.server.tv.TvInputHardwareManager: java.lang.String TAG>;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid inputId : ");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        $r10 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>(r13, $r10);

        exitmonitor r2;

     label04:
        return $r4;

     label05:
        $r5 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mConnections>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i4);

        $r7 = (com.android.server.tv.TvInputHardwareManager$Connection) $r6;

        r14 = virtualinvoke $r7.<com.android.server.tv.TvInputHardwareManager$Connection: android.media.tv.TvStreamConfig[] getConfigsLocked()>();

        i5 = lengthof r14;

     label06:
        i6 = 0;

     label07:
        if i6 >= i5 goto label10;

        r15 = r14[i6];

     label08:
        $i0 = virtualinvoke r15.<android.media.tv.TvStreamConfig: int getType()>();

        if $i0 != 2 goto label09;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r15);

     label09:
        i6 = i6 + 1;

        goto label07;

     label10:
        exitmonitor r2;

     label11:
        return $r4;

     label12:
        $r11 := @caughtexception;

     label13:
        exitmonitor r2;

     label14:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public java.util.List getHardwareList()
    {
        com.android.server.tv.TvInputHardwareManager r0;
        java.lang.Object r1;
        java.util.List $r2, r4;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        r1 = r0.<com.android.server.tv.TvInputHardwareManager: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.tv.TvInputHardwareManager: java.util.List mHardwareList>;

        r4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        exitmonitor r1;

     label2:
        return r4;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.util.List getHdmiDeviceList()
    {
        com.android.server.tv.TvInputHardwareManager r0;
        java.lang.Object r1;
        java.util.List $r2, r4;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        r1 = r0.<com.android.server.tv.TvInputHardwareManager: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.tv.TvInputHardwareManager: java.util.List mHdmiDeviceList>;

        r4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        exitmonitor r1;

     label2:
        return r4;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onBootPhase(int)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        int i0;
        android.os.IBinder $r1;
        java.lang.String $r2, $r13;
        android.content.IntentFilter $r3;
        android.content.BroadcastReceiver $r4;
        android.content.Context $r5;
        android.hardware.hdmi.IHdmiHotplugEventListener $r7;
        android.hardware.hdmi.IHdmiDeviceEventListener $r8;
        android.hardware.hdmi.IHdmiSystemAudioModeChangeListener $r9;
        java.util.List $r10, $r11;
        android.os.RemoteException $r12;
        android.hardware.hdmi.IHdmiControlService r14;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        i0 := @parameter0: int;

        if i0 != 500 goto label7;

        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("hdmi_control");

        r14 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService asInterface(android.os.IBinder)>($r1);

        if r14 == null goto label5;

     label1:
        $r7 = r0.<com.android.server.tv.TvInputHardwareManager: android.hardware.hdmi.IHdmiHotplugEventListener mHdmiHotplugEventListener>;

        interfaceinvoke r14.<android.hardware.hdmi.IHdmiControlService: void addHotplugEventListener(android.hardware.hdmi.IHdmiHotplugEventListener)>($r7);

        $r8 = r0.<com.android.server.tv.TvInputHardwareManager: android.hardware.hdmi.IHdmiDeviceEventListener mHdmiDeviceEventListener>;

        interfaceinvoke r14.<android.hardware.hdmi.IHdmiControlService: void addDeviceEventListener(android.hardware.hdmi.IHdmiDeviceEventListener)>($r8);

        $r9 = r0.<com.android.server.tv.TvInputHardwareManager: android.hardware.hdmi.IHdmiSystemAudioModeChangeListener mHdmiSystemAudioModeChangeListener>;

        interfaceinvoke r14.<android.hardware.hdmi.IHdmiControlService: void addSystemAudioModeChangeListener(android.hardware.hdmi.IHdmiSystemAudioModeChangeListener)>($r9);

        $r10 = r0.<com.android.server.tv.TvInputHardwareManager: java.util.List mHdmiDeviceList>;

        $r11 = interfaceinvoke r14.<android.hardware.hdmi.IHdmiControlService: java.util.List getInputDevices()>();

        interfaceinvoke $r10.<java.util.List: boolean addAll(java.util.Collection)>($r11);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        $r13 = <com.android.server.tv.TvInputHardwareManager: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r13, "Error registering listeners to HdmiControlService:", $r12);

     label4:
        goto label6;

     label5:
        $r2 = <com.android.server.tv.TvInputHardwareManager: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r2, "HdmiControlService is not available");

     label6:
        $r3 = new android.content.IntentFilter;

        specialinvoke $r3.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r3.<android.content.IntentFilter: void addAction(java.lang.String)>("android.media.VOLUME_CHANGED_ACTION");

        virtualinvoke $r3.<android.content.IntentFilter: void addAction(java.lang.String)>("android.media.STREAM_MUTE_CHANGED_ACTION");

        $r5 = r0.<com.android.server.tv.TvInputHardwareManager: android.content.Context mContext>;

        $r4 = r0.<com.android.server.tv.TvInputHardwareManager: android.content.BroadcastReceiver mVolumeReceiver>;

        virtualinvoke $r5.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r4, $r3);

        specialinvoke r0.<com.android.server.tv.TvInputHardwareManager: void updateVolume()>();

     label7:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onDeviceAvailable(android.media.tv.TvInputHardwareInfo, android.media.tv.TvStreamConfig[])
    {
        com.android.server.tv.TvInputHardwareManager r0;
        android.media.tv.TvStreamConfig[] r1;
        java.lang.Object r2;
        com.android.server.tv.TvInputHardwareManager$Connection r3;
        android.util.SparseArray $r4;
        int $i0, $i1;
        android.os.Handler $r5;
        android.os.Message $r6;
        java.lang.Throwable $r7;
        android.media.tv.TvInputHardwareInfo r8;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        r8 := @parameter0: android.media.tv.TvInputHardwareInfo;

        r1 := @parameter1: android.media.tv.TvStreamConfig[];

        r2 = r0.<com.android.server.tv.TvInputHardwareManager: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        r3 = new com.android.server.tv.TvInputHardwareManager$Connection;

        specialinvoke r3.<com.android.server.tv.TvInputHardwareManager$Connection: void <init>(com.android.server.tv.TvInputHardwareManager,android.media.tv.TvInputHardwareInfo)>(r0, r8);

        virtualinvoke r3.<com.android.server.tv.TvInputHardwareManager$Connection: void updateConfigsLocked(android.media.tv.TvStreamConfig[])>(r1);

        $r4 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mConnections>;

        $i0 = virtualinvoke r8.<android.media.tv.TvInputHardwareInfo: int getDeviceId()>();

        virtualinvoke $r4.<android.util.SparseArray: void put(int,java.lang.Object)>($i0, r3);

        specialinvoke r0.<com.android.server.tv.TvInputHardwareManager: void buildHardwareListLocked()>();

        $r5 = r0.<com.android.server.tv.TvInputHardwareManager: android.os.Handler mHandler>;

        $r6 = virtualinvoke $r5.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(2, 0, 0, r8);

        virtualinvoke $r6.<android.os.Message: void sendToTarget()>();

        $i1 = virtualinvoke r8.<android.media.tv.TvInputHardwareInfo: int getType()>();

        if $i1 != 9 goto label2;

        specialinvoke r0.<com.android.server.tv.TvInputHardwareManager: void processPendingHdmiDeviceEventsLocked()>();

     label2:
        exitmonitor r2;

     label3:
        return;

     label4:
        $r7 := @caughtexception;

     label5:
        exitmonitor r2;

     label6:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void onDeviceUnavailable(int)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        int i0, $i1, $i2, $i3;
        java.lang.Object r1, $r4, $r9;
        java.util.Iterator r2;
        android.util.SparseArray $r3, $r5;
        android.os.Handler $r6, $r10;
        android.os.Message $r7, $r11;
        java.util.List $r8;
        boolean $z0;
        java.lang.String $r14, r17;
        java.lang.Throwable $r15;
        com.android.server.tv.TvInputHardwareManager$Connection r16;
        java.lang.StringBuilder r18;
        android.media.tv.TvInputHardwareInfo r19;
        android.hardware.hdmi.HdmiDeviceInfo r20;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.tv.TvInputHardwareManager: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mConnections>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r16 = (com.android.server.tv.TvInputHardwareManager$Connection) $r4;

     label02:
        if r16 != null goto label05;

     label03:
        r17 = <com.android.server.tv.TvInputHardwareManager: java.lang.String TAG>;

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onDeviceUnavailable: Cannot find a connection with ");

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>(r17, $r14);

        exitmonitor r1;

     label04:
        return;

     label05:
        virtualinvoke r16.<com.android.server.tv.TvInputHardwareManager$Connection: void resetLocked(com.android.server.tv.TvInputHardwareManager$TvInputHardwareImpl,android.media.tv.ITvInputHardwareCallback,android.media.tv.TvInputInfo,java.lang.Integer,java.lang.Integer,android.media.tv.tunerresourcemanager.ResourceClientProfile)>(null, null, null, null, null, null);

        $r5 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mConnections>;

        virtualinvoke $r5.<android.util.SparseArray: void remove(int)>(i0);

        specialinvoke r0.<com.android.server.tv.TvInputHardwareManager: void buildHardwareListLocked()>();

        r19 = virtualinvoke r16.<com.android.server.tv.TvInputHardwareManager$Connection: android.media.tv.TvInputHardwareInfo getHardwareInfoLocked()>();

        $i1 = virtualinvoke r19.<android.media.tv.TvInputHardwareInfo: int getType()>();

        if $i1 != 9 goto label08;

        $r8 = r0.<com.android.server.tv.TvInputHardwareManager: java.util.List mHdmiDeviceList>;

        r2 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r20 = (android.hardware.hdmi.HdmiDeviceInfo) $r9;

        $i2 = virtualinvoke r20.<android.hardware.hdmi.HdmiDeviceInfo: int getPortId()>();

        $i3 = virtualinvoke r19.<android.media.tv.TvInputHardwareInfo: int getHdmiPortId()>();

        if $i2 != $i3 goto label07;

        $r10 = r0.<com.android.server.tv.TvInputHardwareManager: android.os.Handler mHandler>;

        $r11 = virtualinvoke $r10.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(5, 0, 0, r20);

        virtualinvoke $r11.<android.os.Message: void sendToTarget()>();

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

     label07:
        goto label06;

     label08:
        $r6 = r0.<com.android.server.tv.TvInputHardwareManager: android.os.Handler mHandler>;

        $r7 = virtualinvoke $r6.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(3, 0, 0, r19);

        virtualinvoke $r7.<android.os.Message: void sendToTarget()>();

        exitmonitor r1;

     label09:
        return;

     label10:
        $r15 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r15;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void onFirstFrameCaptured(int, int)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        int i0, i1;
        java.lang.Object r1, $r3;
        android.util.SparseArray $r2;
        java.lang.String $r6, r9;
        java.lang.Throwable $r7;
        com.android.server.tv.TvInputHardwareManager$Connection r8;
        java.lang.StringBuilder r10;
        java.lang.Runnable r11;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<com.android.server.tv.TvInputHardwareManager: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mConnections>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r8 = (com.android.server.tv.TvInputHardwareManager$Connection) $r3;

     label02:
        if r8 != null goto label05;

     label03:
        r9 = <com.android.server.tv.TvInputHardwareManager: java.lang.String TAG>;

        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FirstFrameCaptured: Cannot find a connection with ");

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>(r9, $r6);

        exitmonitor r1;

     label04:
        return;

     label05:
        r11 = virtualinvoke r8.<com.android.server.tv.TvInputHardwareManager$Connection: java.lang.Runnable getOnFirstFrameCapturedLocked()>();

     label06:
        if r11 == null goto label08;

     label07:
        interfaceinvoke r11.<java.lang.Runnable: void run()>();

        virtualinvoke r8.<com.android.server.tv.TvInputHardwareManager$Connection: void setOnFirstFrameCapturedLocked(java.lang.Runnable)>(null);

     label08:
        exitmonitor r1;

     label09:
        return;

     label10:
        $r7 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void onStreamConfigurationChanged(int, android.media.tv.TvStreamConfig[])
    {
        com.android.server.tv.TvInputHardwareManager r0;
        java.lang.Object r1, $r4, $r6;
        com.android.server.tv.TvInputHardwareManager$Connection r2;
        android.util.SparseArray $r3, $r5;
        int $i0, $i1, i4, i5;
        android.os.Handler $r7;
        android.os.Message $r8;
        java.lang.String $r11, $r14, r16, r18;
        java.lang.Throwable $r12;
        android.os.RemoteException $r13;
        android.media.tv.TvStreamConfig[] r15;
        java.lang.StringBuilder r17;
        boolean z0, z1;
        android.media.tv.ITvInputHardwareCallback r19;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        i4 := @parameter0: int;

        r15 := @parameter1: android.media.tv.TvStreamConfig[];

        r1 = r0.<com.android.server.tv.TvInputHardwareManager: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mConnections>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i4);

        r2 = (com.android.server.tv.TvInputHardwareManager$Connection) $r4;

     label02:
        if r2 != null goto label05;

     label03:
        r16 = <com.android.server.tv.TvInputHardwareManager: java.lang.String TAG>;

        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("StreamConfigurationChanged: Cannot find a connection with ");

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r11 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>(r16, $r11);

        exitmonitor r1;

     label04:
        return;

     label05:
        i5 = staticinvoke <com.android.server.tv.TvInputHardwareManager$Connection: int access$500(com.android.server.tv.TvInputHardwareManager$Connection)>(r2);

        virtualinvoke r2.<com.android.server.tv.TvInputHardwareManager$Connection: void updateConfigsLocked(android.media.tv.TvStreamConfig[])>(r15);

        $r5 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mHardwareInputIdMap>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i4);

        r18 = (java.lang.String) $r6;

     label06:
        if r18 == null goto label13;

        if i5 != 0 goto label07;

        z0 = 1;

        goto label08;

     label07:
        z0 = 0;

     label08:
        $i0 = staticinvoke <com.android.server.tv.TvInputHardwareManager$Connection: int access$500(com.android.server.tv.TvInputHardwareManager$Connection)>(r2);

        if $i0 != 0 goto label10;

     label09:
        z1 = 1;

        goto label11;

     label10:
        z1 = 0;

     label11:
        if z0 == z1 goto label13;

     label12:
        $r7 = r0.<com.android.server.tv.TvInputHardwareManager: android.os.Handler mHandler>;

        $i1 = staticinvoke <com.android.server.tv.TvInputHardwareManager$Connection: int access$600(com.android.server.tv.TvInputHardwareManager$Connection)>(r2);

        $r8 = virtualinvoke $r7.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(1, $i1, 0, r18);

        virtualinvoke $r8.<android.os.Message: void sendToTarget()>();

     label13:
        r19 = virtualinvoke r2.<com.android.server.tv.TvInputHardwareManager$Connection: android.media.tv.ITvInputHardwareCallback getCallbackLocked()>();

     label14:
        if r19 == null goto label19;

     label15:
        interfaceinvoke r19.<android.media.tv.ITvInputHardwareCallback: void onStreamConfigChanged(android.media.tv.TvStreamConfig[])>(r15);

     label16:
        goto label19;

     label17:
        $r13 := @caughtexception;

     label18:
        $r14 = <com.android.server.tv.TvInputHardwareManager: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r14, "error in onStreamConfigurationChanged", $r13);

     label19:
        exitmonitor r1;

     label20:
        return;

     label21:
        $r12 := @caughtexception;

     label22:
        exitmonitor r1;

     label23:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label21;
        catch java.lang.Throwable from label03 to label04 with label21;
        catch java.lang.Throwable from label05 to label06 with label21;
        catch java.lang.Throwable from label08 to label09 with label21;
        catch java.lang.Throwable from label12 to label13 with label21;
        catch java.lang.Throwable from label13 to label14 with label21;
        catch android.os.RemoteException from label15 to label16 with label17;
        catch java.lang.Throwable from label15 to label16 with label21;
        catch java.lang.Throwable from label18 to label19 with label21;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label22 to label23 with label21;
    }

    public void releaseHardware(int, android.media.tv.ITvInputHardware, int, int)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        int i0, i1, i2;
        java.lang.Object r1, $r3;
        android.util.SparseArray $r2;
        android.media.tv.ITvInputHardware $r4, r10;
        boolean $z0;
        android.os.IBinder $r5;
        java.lang.String $r8, r12;
        java.lang.Throwable $r9;
        com.android.server.tv.TvInputHardwareManager$Connection r11;
        java.lang.StringBuilder r13;
        android.media.tv.ITvInputHardwareCallback r14;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        i0 := @parameter0: int;

        r10 := @parameter1: android.media.tv.ITvInputHardware;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r1 = r0.<com.android.server.tv.TvInputHardwareManager: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mConnections>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r11 = (com.android.server.tv.TvInputHardwareManager$Connection) $r3;

     label02:
        if r11 != null goto label05;

     label03:
        r12 = <com.android.server.tv.TvInputHardwareManager: java.lang.String TAG>;

        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid deviceId : ");

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>(r12, $r8);

        exitmonitor r1;

     label04:
        return;

     label05:
        $r4 = virtualinvoke r11.<com.android.server.tv.TvInputHardwareManager$Connection: android.media.tv.ITvInputHardware getHardwareLocked()>();

        if $r4 != r10 goto label12;

        $z0 = specialinvoke r0.<com.android.server.tv.TvInputHardwareManager: boolean checkUidChangedLocked(com.android.server.tv.TvInputHardwareManager$Connection,int,int)>(r11, i1, i2);

        if $z0 == 0 goto label07;

     label06:
        goto label12;

     label07:
        r14 = virtualinvoke r11.<com.android.server.tv.TvInputHardwareManager$Connection: android.media.tv.ITvInputHardwareCallback getCallbackLocked()>();

     label08:
        if r14 == null goto label10;

     label09:
        $r5 = interfaceinvoke r14.<android.media.tv.ITvInputHardwareCallback: android.os.IBinder asBinder()>();

        interfaceinvoke $r5.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r11, 0);

     label10:
        virtualinvoke r11.<com.android.server.tv.TvInputHardwareManager$Connection: void resetLocked(com.android.server.tv.TvInputHardwareManager$TvInputHardwareImpl,android.media.tv.ITvInputHardwareCallback,android.media.tv.TvInputInfo,java.lang.Integer,java.lang.Integer,android.media.tv.tunerresourcemanager.ResourceClientProfile)>(null, null, null, null, null, null);

        exitmonitor r1;

     label11:
        return;

     label12:
        exitmonitor r1;

     label13:
        return;

     label14:
        $r9 := @caughtexception;

     label15:
        exitmonitor r1;

     label16:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    public void removeHardwareInput(java.lang.String)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        java.lang.Object r1;
        java.util.Map $r2;
        android.util.SparseArray $r4, $r5, $r6, $r7;
        java.lang.Throwable $r8;
        java.lang.String r9;
        int i0, i1;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        r9 := @parameter0: java.lang.String;

        r1 = r0.<com.android.server.tv.TvInputHardwareManager: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.tv.TvInputHardwareManager: java.util.Map mInputMap>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r9);

        $r4 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mHardwareInputIdMap>;

        i0 = staticinvoke <com.android.server.tv.TvInputHardwareManager: int indexOfEqualValue(android.util.SparseArray,java.lang.Object)>($r4, r9);

     label02:
        if i0 < 0 goto label04;

     label03:
        $r7 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mHardwareInputIdMap>;

        virtualinvoke $r7.<android.util.SparseArray: void removeAt(int)>(i0);

     label04:
        $r5 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mHdmiInputIdMap>;

        i1 = staticinvoke <com.android.server.tv.TvInputHardwareManager: int indexOfEqualValue(android.util.SparseArray,java.lang.Object)>($r5, r9);

     label05:
        if i1 < 0 goto label07;

     label06:
        $r6 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mHdmiInputIdMap>;

        virtualinvoke $r6.<android.util.SparseArray: void removeAt(int)>(i1);

     label07:
        exitmonitor r1;

     label08:
        return;

     label09:
        $r8 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }
}
