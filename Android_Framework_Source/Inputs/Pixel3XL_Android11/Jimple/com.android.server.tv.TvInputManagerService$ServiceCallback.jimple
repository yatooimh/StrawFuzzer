final class com.android.server.tv.TvInputManagerService$ServiceCallback extends android.media.tv.ITvInputServiceCallback$Stub
{
    private final android.content.ComponentName mComponent;
    private final int mUserId;
    final com.android.server.tv.TvInputManagerService this$0;

    void <init>(com.android.server.tv.TvInputManagerService, android.content.ComponentName, int)
    {
        com.android.server.tv.TvInputManagerService$ServiceCallback r0;
        com.android.server.tv.TvInputManagerService r1;
        android.content.ComponentName r2;
        int i0;

        r0 := @this: com.android.server.tv.TvInputManagerService$ServiceCallback;

        r1 := @parameter0: com.android.server.tv.TvInputManagerService;

        r2 := @parameter1: android.content.ComponentName;

        i0 := @parameter2: int;

        r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: com.android.server.tv.TvInputManagerService this$0> = r1;

        specialinvoke r0.<android.media.tv.ITvInputServiceCallback$Stub: void <init>()>();

        r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: android.content.ComponentName mComponent> = r2;

        r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: int mUserId> = i0;

        return;
    }

    private void addHardwareInputLocked(android.media.tv.TvInputInfo)
    {
        com.android.server.tv.TvInputManagerService$ServiceCallback r0;
        android.media.tv.TvInputInfo r1;
        int $i0, $i1;
        android.content.ComponentName $r2;
        com.android.server.tv.TvInputManagerService $r3, $r8;
        com.android.server.tv.TvInputManagerService$ServiceState $r4;
        java.util.Map $r5;
        java.lang.String $r6;

        r0 := @this: com.android.server.tv.TvInputManagerService$ServiceCallback;

        r1 := @parameter0: android.media.tv.TvInputInfo;

        $r3 = r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: com.android.server.tv.TvInputManagerService this$0>;

        $r2 = r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: android.content.ComponentName mComponent>;

        $i0 = r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: int mUserId>;

        $r4 = staticinvoke <com.android.server.tv.TvInputManagerService: com.android.server.tv.TvInputManagerService$ServiceState access$7300(com.android.server.tv.TvInputManagerService,android.content.ComponentName,int)>($r3, $r2, $i0);

        $r5 = staticinvoke <com.android.server.tv.TvInputManagerService$ServiceState: java.util.Map access$1100(com.android.server.tv.TvInputManagerService$ServiceState)>($r4);

        $r6 = virtualinvoke r1.<android.media.tv.TvInputInfo: java.lang.String getId()>();

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r1);

        $r8 = r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: com.android.server.tv.TvInputManagerService this$0>;

        $i1 = r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: int mUserId>;

        staticinvoke <com.android.server.tv.TvInputManagerService: void access$400(com.android.server.tv.TvInputManagerService,int,java.lang.String[])>($r8, $i1, null);

        return;
    }

    private void ensureHardwarePermission()
    {
        com.android.server.tv.TvInputManagerService$ServiceCallback r0;
        com.android.server.tv.TvInputManagerService $r1;
        android.content.Context $r2;
        int $i0;
        java.lang.SecurityException $r3;

        r0 := @this: com.android.server.tv.TvInputManagerService$ServiceCallback;

        $r1 = r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: com.android.server.tv.TvInputManagerService this$0>;

        $r2 = staticinvoke <com.android.server.tv.TvInputManagerService: android.content.Context access$4400(com.android.server.tv.TvInputManagerService)>($r1);

        $i0 = virtualinvoke $r2.<android.content.Context: int checkCallingPermission(java.lang.String)>("android.permission.TV_INPUT_HARDWARE");

        if $i0 != 0 goto label1;

        return;

     label1:
        $r3 = new java.lang.SecurityException;

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>("The caller does not have hardware permission");

        throw $r3;
    }

    private void ensureValidInput(android.media.tv.TvInputInfo)
    {
        com.android.server.tv.TvInputManagerService$ServiceCallback r0;
        android.media.tv.TvInputInfo r1;
        java.lang.String $r2;
        java.lang.IllegalArgumentException $r3;
        android.content.ComponentName $r4, $r5;
        boolean $z0;

        r0 := @this: com.android.server.tv.TvInputManagerService$ServiceCallback;

        r1 := @parameter0: android.media.tv.TvInputInfo;

        $r2 = virtualinvoke r1.<android.media.tv.TvInputInfo: java.lang.String getId()>();

        if $r2 == null goto label1;

        $r4 = r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: android.content.ComponentName mComponent>;

        $r5 = virtualinvoke r1.<android.media.tv.TvInputInfo: android.content.ComponentName getComponent()>();

        $z0 = virtualinvoke $r4.<android.content.ComponentName: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid TvInputInfo");

        throw $r3;
    }

    public void addHardwareInput(int, android.media.tv.TvInputInfo)
    {
        com.android.server.tv.TvInputManagerService$ServiceCallback r0;
        int i0;
        java.lang.Object r1;
        com.android.server.tv.TvInputManagerService $r2, $r3;
        com.android.server.tv.TvInputHardwareManager $r4;
        java.lang.Throwable $r5;
        android.media.tv.TvInputInfo r6;

        r0 := @this: com.android.server.tv.TvInputManagerService$ServiceCallback;

        i0 := @parameter0: int;

        r6 := @parameter1: android.media.tv.TvInputInfo;

        specialinvoke r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: void ensureHardwarePermission()>();

        specialinvoke r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: void ensureValidInput(android.media.tv.TvInputInfo)>(r6);

        $r2 = r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: com.android.server.tv.TvInputManagerService this$0>;

        r1 = staticinvoke <com.android.server.tv.TvInputManagerService: java.lang.Object access$200(com.android.server.tv.TvInputManagerService)>($r2);

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: com.android.server.tv.TvInputManagerService this$0>;

        $r4 = staticinvoke <com.android.server.tv.TvInputManagerService: com.android.server.tv.TvInputHardwareManager access$5900(com.android.server.tv.TvInputManagerService)>($r3);

        virtualinvoke $r4.<com.android.server.tv.TvInputHardwareManager: void addHardwareInput(int,android.media.tv.TvInputInfo)>(i0, r6);

        specialinvoke r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: void addHardwareInputLocked(android.media.tv.TvInputInfo)>(r6);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void addHdmiInput(int, android.media.tv.TvInputInfo)
    {
        com.android.server.tv.TvInputManagerService$ServiceCallback r0;
        int i0;
        java.lang.Object r1;
        com.android.server.tv.TvInputManagerService $r2, $r3;
        com.android.server.tv.TvInputHardwareManager $r4;
        java.lang.Throwable $r5;
        android.media.tv.TvInputInfo r6;

        r0 := @this: com.android.server.tv.TvInputManagerService$ServiceCallback;

        i0 := @parameter0: int;

        r6 := @parameter1: android.media.tv.TvInputInfo;

        specialinvoke r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: void ensureHardwarePermission()>();

        specialinvoke r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: void ensureValidInput(android.media.tv.TvInputInfo)>(r6);

        $r2 = r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: com.android.server.tv.TvInputManagerService this$0>;

        r1 = staticinvoke <com.android.server.tv.TvInputManagerService: java.lang.Object access$200(com.android.server.tv.TvInputManagerService)>($r2);

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: com.android.server.tv.TvInputManagerService this$0>;

        $r4 = staticinvoke <com.android.server.tv.TvInputManagerService: com.android.server.tv.TvInputHardwareManager access$5900(com.android.server.tv.TvInputManagerService)>($r3);

        virtualinvoke $r4.<com.android.server.tv.TvInputHardwareManager: void addHdmiInput(int,android.media.tv.TvInputInfo)>(i0, r6);

        specialinvoke r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: void addHardwareInputLocked(android.media.tv.TvInputInfo)>(r6);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void removeHardwareInput(java.lang.String)
    {
        com.android.server.tv.TvInputManagerService$ServiceCallback r0;
        java.lang.Object r1, $r8;
        java.lang.StringBuilder r2;
        com.android.server.tv.TvInputManagerService $r3, $r5, $r12, $r13;
        int $i0, $i2;
        android.content.ComponentName $r4;
        com.android.server.tv.TvInputManagerService$ServiceState $r6;
        java.util.Map $r7;
        java.lang.String $r11, r16;
        com.android.server.tv.TvInputHardwareManager $r14;
        java.lang.Throwable $r15;
        boolean z0;

        r0 := @this: com.android.server.tv.TvInputManagerService$ServiceCallback;

        r16 := @parameter0: java.lang.String;

        specialinvoke r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: void ensureHardwarePermission()>();

        $r3 = r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: com.android.server.tv.TvInputManagerService this$0>;

        r1 = staticinvoke <com.android.server.tv.TvInputManagerService: java.lang.Object access$200(com.android.server.tv.TvInputManagerService)>($r3);

        entermonitor r1;

     label01:
        $r5 = r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: com.android.server.tv.TvInputManagerService this$0>;

        $r4 = r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: android.content.ComponentName mComponent>;

        $i0 = r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: int mUserId>;

        $r6 = staticinvoke <com.android.server.tv.TvInputManagerService: com.android.server.tv.TvInputManagerService$ServiceState access$7300(com.android.server.tv.TvInputManagerService,android.content.ComponentName,int)>($r5, $r4, $i0);

        $r7 = staticinvoke <com.android.server.tv.TvInputManagerService$ServiceState: java.util.Map access$1100(com.android.server.tv.TvInputManagerService$ServiceState)>($r6);

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r16);

        if $r8 == null goto label03;

     label02:
        z0 = 1;

        goto label04;

     label03:
        z0 = 0;

     label04:
        if z0 == 0 goto label07;

     label05:
        $r12 = r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: com.android.server.tv.TvInputManagerService this$0>;

        $i2 = r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: int mUserId>;

        staticinvoke <com.android.server.tv.TvInputManagerService: void access$400(com.android.server.tv.TvInputManagerService,int,java.lang.String[])>($r12, $i2, null);

        $r13 = r0.<com.android.server.tv.TvInputManagerService$ServiceCallback: com.android.server.tv.TvInputManagerService this$0>;

        $r14 = staticinvoke <com.android.server.tv.TvInputManagerService: com.android.server.tv.TvInputHardwareManager access$5900(com.android.server.tv.TvInputManagerService)>($r13);

        virtualinvoke $r14.<com.android.server.tv.TvInputHardwareManager: void removeHardwareInput(java.lang.String)>(r16);

     label06:
        goto label08;

     label07:
        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to remove input ");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r11 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("TvInputManagerService", $r11);

     label08:
        exitmonitor r1;

     label09:
        return;

     label10:
        $r15 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r15;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }
}
