public final class com.android.server.tv.TvInputManagerService extends com.android.server.SystemService
{
    private static final boolean DEBUG;
    private static final java.lang.String DVB_DIRECTORY;
    private static final java.lang.String TAG;
    private static final java.util.regex.Pattern sAdapterDirPattern;
    private static final java.util.regex.Pattern sFrontEndDevicePattern;
    private static final java.util.regex.Pattern sFrontEndInAdapterDirPattern;
    private final android.content.Context mContext;
    private int mCurrentUserId;
    private final java.lang.Object mLock;
    private final java.util.Map mSessionIdToSessionStateMap;
    private final com.android.server.tv.TvInputHardwareManager mTvInputHardwareManager;
    private final android.util.SparseArray mUserStates;
    private final com.android.server.tv.TvInputManagerService$WatchLogHandler mWatchLogHandler;

    static void <clinit>()
    {
        java.util.regex.Pattern $r0, $r1, $r2;

        <com.android.server.tv.TvInputManagerService: java.lang.String TAG> = "TvInputManagerService";

        <com.android.server.tv.TvInputManagerService: java.lang.String DVB_DIRECTORY> = "/dev/dvb";

        <com.android.server.tv.TvInputManagerService: boolean DEBUG> = 0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^dvb([0-9]+)\\.frontend([0-9]+)$");

        <com.android.server.tv.TvInputManagerService: java.util.regex.Pattern sFrontEndDevicePattern> = $r0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^adapter([0-9]+)$");

        <com.android.server.tv.TvInputManagerService: java.util.regex.Pattern sAdapterDirPattern> = $r1;

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^frontend([0-9]+)$");

        <com.android.server.tv.TvInputManagerService: java.util.regex.Pattern sFrontEndInAdapterDirPattern> = $r2;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.server.tv.TvInputManagerService r0;
        java.lang.Object $r2, r15;
        android.util.SparseArray $r3;
        java.util.HashMap $r4;
        com.android.server.tv.TvInputManagerService$WatchLogHandler $r5;
        android.content.Context $r6, r14;
        android.content.ContentResolver $r7;
        com.android.server.IoThread $r8;
        android.os.Looper $r9;
        com.android.server.tv.TvInputHardwareManager $r10;
        com.android.server.tv.TvInputManagerService$HardwareListener $r11;
        int $i0;
        java.lang.Throwable $r13;

        r0 := @this: com.android.server.tv.TvInputManagerService;

        r14 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.server.SystemService: void <init>(android.content.Context)>(r14);

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.server.tv.TvInputManagerService: java.lang.Object mLock> = $r2;

        r0.<com.android.server.tv.TvInputManagerService: int mCurrentUserId> = 0;

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.tv.TvInputManagerService: android.util.SparseArray mUserStates> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.tv.TvInputManagerService: java.util.Map mSessionIdToSessionStateMap> = $r4;

        r0.<com.android.server.tv.TvInputManagerService: android.content.Context mContext> = r14;

        $r5 = new com.android.server.tv.TvInputManagerService$WatchLogHandler;

        $r6 = r0.<com.android.server.tv.TvInputManagerService: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r8 = staticinvoke <com.android.server.IoThread: com.android.server.IoThread get()>();

        $r9 = virtualinvoke $r8.<com.android.server.IoThread: android.os.Looper getLooper()>();

        specialinvoke $r5.<com.android.server.tv.TvInputManagerService$WatchLogHandler: void <init>(android.content.ContentResolver,android.os.Looper)>($r7, $r9);

        r0.<com.android.server.tv.TvInputManagerService: com.android.server.tv.TvInputManagerService$WatchLogHandler mWatchLogHandler> = $r5;

        $r10 = new com.android.server.tv.TvInputHardwareManager;

        $r11 = new com.android.server.tv.TvInputManagerService$HardwareListener;

        specialinvoke $r11.<com.android.server.tv.TvInputManagerService$HardwareListener: void <init>(com.android.server.tv.TvInputManagerService,com.android.server.tv.TvInputManagerService$1)>(r0, null);

        specialinvoke $r10.<com.android.server.tv.TvInputHardwareManager: void <init>(android.content.Context,com.android.server.tv.TvInputHardwareManager$Listener)>(r14, $r11);

        r0.<com.android.server.tv.TvInputManagerService: com.android.server.tv.TvInputHardwareManager mTvInputHardwareManager> = $r10;

        r15 = r0.<com.android.server.tv.TvInputManagerService: java.lang.Object mLock>;

        entermonitor r15;

     label1:
        $i0 = r0.<com.android.server.tv.TvInputManagerService: int mCurrentUserId>;

        specialinvoke r0.<com.android.server.tv.TvInputManagerService: com.android.server.tv.TvInputManagerService$UserState getOrCreateUserStateLocked(int)>($i0);

        exitmonitor r15;

     label2:
        return;

     label3:
        $r13 := @caughtexception;

     label4:
        exitmonitor r15;

     label5:
        throw $r13;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void abortPendingCreateSessionRequestsLocked(com.android.server.tv.TvInputManagerService$ServiceState, java.lang.String, int)
    {
        com.android.server.tv.TvInputManagerService r0;
        com.android.server.tv.TvInputManagerService$ServiceState r1;
        int i0, $i1, $i2;
        com.android.server.tv.TvInputManagerService$UserState r2;
        java.util.ArrayList $r4;
        java.util.List $r5;
        boolean $z0, $z1, $z3;
        android.content.ComponentName $r6;
        java.lang.Object $r7, $r11, $r13;
        android.os.IBinder $r8, r18;
        android.media.tv.ITvInputClient $r9;
        java.lang.String $r10, $r15, r16;
        java.util.Map $r12;
        android.media.tv.ITvInputSession $r14;
        java.util.Iterator r17, r20;
        com.android.server.tv.TvInputManagerService$SessionState r19, r21;

        r0 := @this: com.android.server.tv.TvInputManagerService;

        r1 := @parameter0: com.android.server.tv.TvInputManagerService$ServiceState;

        r16 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 = specialinvoke r0.<com.android.server.tv.TvInputManagerService: com.android.server.tv.TvInputManagerService$UserState getOrCreateUserStateLocked(int)>(i0);

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = staticinvoke <com.android.server.tv.TvInputManagerService$ServiceState: java.util.List access$1900(com.android.server.tv.TvInputManagerService$ServiceState)>(r1);

        r17 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r11 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r18 = (android.os.IBinder) $r11;

        $r12 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: java.util.Map access$1600(com.android.server.tv.TvInputManagerService$UserState)>(r2);

        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r18);

        r19 = (com.android.server.tv.TvInputManagerService$SessionState) $r13;

        $r14 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: android.media.tv.ITvInputSession access$1700(com.android.server.tv.TvInputManagerService$SessionState)>(r19);

        if $r14 != null goto label3;

        if r16 == null goto label2;

        $r15 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: java.lang.String access$3600(com.android.server.tv.TvInputManagerService$SessionState)>(r19);

        $z3 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r16);

        if $z3 == 0 goto label3;

     label2:
        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r19);

     label3:
        goto label1;

     label4:
        r20 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r7 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();

        r21 = (com.android.server.tv.TvInputManagerService$SessionState) $r7;

        $r8 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: android.os.IBinder access$2600(com.android.server.tv.TvInputManagerService$SessionState)>(r21);

        $i1 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: int access$2500(com.android.server.tv.TvInputManagerService$SessionState)>(r21);

        specialinvoke r0.<com.android.server.tv.TvInputManagerService: void removeSessionStateLocked(android.os.IBinder,int)>($r8, $i1);

        $r9 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: android.media.tv.ITvInputClient access$2300(com.android.server.tv.TvInputManagerService$SessionState)>(r21);

        $r10 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: java.lang.String access$3600(com.android.server.tv.TvInputManagerService$SessionState)>(r21);

        $i2 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: int access$2400(com.android.server.tv.TvInputManagerService$SessionState)>(r21);

        specialinvoke r0.<com.android.server.tv.TvInputManagerService: void sendSessionTokenToClientLocked(android.media.tv.ITvInputClient,java.lang.String,android.os.IBinder,android.view.InputChannel,int)>($r9, $r10, null, null, $i2);

        goto label5;

     label6:
        $r6 = staticinvoke <com.android.server.tv.TvInputManagerService$ServiceState: android.content.ComponentName access$3700(com.android.server.tv.TvInputManagerService$ServiceState)>(r1);

        specialinvoke r0.<com.android.server.tv.TvInputManagerService: void updateServiceConnectionLocked(android.content.ComponentName,int)>($r6, i0);

        return;
    }

    static java.lang.Object access$200(com.android.server.tv.TvInputManagerService)
    {
        com.android.server.tv.TvInputManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.tv.TvInputManagerService;

        $r1 = r0.<com.android.server.tv.TvInputManagerService: java.lang.Object mLock>;

        return $r1;
    }

    static int access$300(com.android.server.tv.TvInputManagerService)
    {
        com.android.server.tv.TvInputManagerService r0;
        int $i0;

        r0 := @parameter0: com.android.server.tv.TvInputManagerService;

        $i0 = r0.<com.android.server.tv.TvInputManagerService: int mCurrentUserId>;

        return $i0;
    }

    static void access$400(com.android.server.tv.TvInputManagerService, int, java.lang.String[])
    {
        com.android.server.tv.TvInputManagerService r0;
        int i0;
        java.lang.String[] r1;

        r0 := @parameter0: com.android.server.tv.TvInputManagerService;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String[];

        specialinvoke r0.<com.android.server.tv.TvInputManagerService: void buildTvInputListLocked(int,java.lang.String[])>(i0, r1);

        return;
    }

    static int access$4200(com.android.server.tv.TvInputManagerService, int, int, int, java.lang.String)
    {
        com.android.server.tv.TvInputManagerService r0;
        int i0, i1, i2, $i3;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.tv.TvInputManagerService;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r1 := @parameter4: java.lang.String;

        $i3 = specialinvoke r0.<com.android.server.tv.TvInputManagerService: int resolveCallingUserId(int,int,int,java.lang.String)>(i0, i1, i2, r1);

        return $i3;
    }

    static com.android.server.tv.TvInputManagerService$UserState access$4300(com.android.server.tv.TvInputManagerService, int)
    {
        com.android.server.tv.TvInputManagerService r0;
        int i0;
        com.android.server.tv.TvInputManagerService$UserState $r1;

        r0 := @parameter0: com.android.server.tv.TvInputManagerService;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.server.tv.TvInputManagerService: com.android.server.tv.TvInputManagerService$UserState getOrCreateUserStateLocked(int)>(i0);

        return $r1;
    }

    static android.content.Context access$4400(com.android.server.tv.TvInputManagerService)
    {
        com.android.server.tv.TvInputManagerService r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.server.tv.TvInputManagerService;

        $r1 = r0.<com.android.server.tv.TvInputManagerService: android.content.Context mContext>;

        return $r1;
    }

    static void access$4500(com.android.server.tv.TvInputManagerService, com.android.server.tv.TvInputManagerService$UserState, android.media.tv.TvInputInfo)
    {
        com.android.server.tv.TvInputManagerService r0;
        com.android.server.tv.TvInputManagerService$UserState r1;
        android.media.tv.TvInputInfo r2;

        r0 := @parameter0: com.android.server.tv.TvInputManagerService;

        r1 := @parameter1: com.android.server.tv.TvInputManagerService$UserState;

        r2 := @parameter2: android.media.tv.TvInputInfo;

        specialinvoke r0.<com.android.server.tv.TvInputManagerService: void updateTvInputInfoLocked(com.android.server.tv.TvInputManagerService$UserState,android.media.tv.TvInputInfo)>(r1, r2);

        return;
    }

    static void access$4700(com.android.server.tv.TvInputManagerService, android.media.tv.ITvInputClient, java.lang.String, android.os.IBinder, android.view.InputChannel, int)
    {
        com.android.server.tv.TvInputManagerService r0;
        android.media.tv.ITvInputClient r1;
        java.lang.String r2;
        android.os.IBinder r3;
        android.view.InputChannel r4;
        int i0;

        r0 := @parameter0: com.android.server.tv.TvInputManagerService;

        r1 := @parameter1: android.media.tv.ITvInputClient;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.os.IBinder;

        r4 := @parameter4: android.view.InputChannel;

        i0 := @parameter5: int;

        specialinvoke r0.<com.android.server.tv.TvInputManagerService: void sendSessionTokenToClientLocked(android.media.tv.ITvInputClient,java.lang.String,android.os.IBinder,android.view.InputChannel,int)>(r1, r2, r3, r4, i0);

        return;
    }

    static java.util.Map access$4900(com.android.server.tv.TvInputManagerService)
    {
        com.android.server.tv.TvInputManagerService r0;
        java.util.Map $r1;

        r0 := @parameter0: com.android.server.tv.TvInputManagerService;

        $r1 = r0.<com.android.server.tv.TvInputManagerService: java.util.Map mSessionIdToSessionStateMap>;

        return $r1;
    }

    static void access$500(com.android.server.tv.TvInputManagerService, int)
    {
        com.android.server.tv.TvInputManagerService r0;
        int i0;

        r0 := @parameter0: com.android.server.tv.TvInputManagerService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.tv.TvInputManagerService: void buildTvContentRatingSystemListLocked(int)>(i0);

        return;
    }

    static boolean access$5000(com.android.server.tv.TvInputManagerService, android.media.tv.ITvInputService, android.os.IBinder, int)
    {
        com.android.server.tv.TvInputManagerService r0;
        android.media.tv.ITvInputService r1;
        android.os.IBinder r2;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.server.tv.TvInputManagerService;

        r1 := @parameter1: android.media.tv.ITvInputService;

        r2 := @parameter2: android.os.IBinder;

        i0 := @parameter3: int;

        $z0 = specialinvoke r0.<com.android.server.tv.TvInputManagerService: boolean createSessionInternalLocked(android.media.tv.ITvInputService,android.os.IBinder,int)>(r1, r2, i0);

        return $z0;
    }

    static void access$5100(com.android.server.tv.TvInputManagerService, android.os.IBinder, int)
    {
        com.android.server.tv.TvInputManagerService r0;
        android.os.IBinder r1;
        int i0;

        r0 := @parameter0: com.android.server.tv.TvInputManagerService;

        r1 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.tv.TvInputManagerService: void removeSessionStateLocked(android.os.IBinder,int)>(r1, i0);

        return;
    }

    static void access$5200(com.android.server.tv.TvInputManagerService, android.content.ComponentName, int)
    {
        com.android.server.tv.TvInputManagerService r0;
        android.content.ComponentName r1;
        int i0;

        r0 := @parameter0: com.android.server.tv.TvInputManagerService;

        r1 := @parameter1: android.content.ComponentName;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.tv.TvInputManagerService: void updateServiceConnectionLocked(android.content.ComponentName,int)>(r1, i0);

        return;
    }

    static void access$5300(com.android.server.tv.TvInputManagerService, android.os.IBinder, int, int)
    {
        com.android.server.tv.TvInputManagerService r0;
        android.os.IBinder r1;
        int i0, i1;

        r0 := @parameter0: com.android.server.tv.TvInputManagerService;

        r1 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<com.android.server.tv.TvInputManagerService: void releaseSessionLocked(android.os.IBinder,int,int)>(r1, i0, i1);

        return;
    }

    static void access$5400(com.android.server.tv.TvInputManagerService, android.os.IBinder, boolean, int, int)
    {
        com.android.server.tv.TvInputManagerService r0;
        android.os.IBinder r1;
        boolean z0;
        int i0, i1;

        r0 := @parameter0: com.android.server.tv.TvInputManagerService;

        r1 := @parameter1: android.os.IBinder;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        specialinvoke r0.<com.android.server.tv.TvInputManagerService: void setMainLocked(android.os.IBinder,boolean,int,int)>(r1, z0, i0, i1);

        return;
    }

    static com.android.server.tv.TvInputManagerService$SessionState access$5500(com.android.server.tv.TvInputManagerService, android.os.IBinder, int, int)
    {
        com.android.server.tv.TvInputManagerService r0;
        android.os.IBinder r1;
        int i0, i1;
        com.android.server.tv.TvInputManagerService$SessionState $r2;

        r0 := @parameter0: com.android.server.tv.TvInputManagerService;

        r1 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r2 = specialinvoke r0.<com.android.server.tv.TvInputManagerService: com.android.server.tv.TvInputManagerService$SessionState getSessionStateLocked(android.os.IBinder,int,int)>(r1, i0, i1);

        return $r2;
    }

    static android.media.tv.ITvInputSession access$5600(com.android.server.tv.TvInputManagerService, com.android.server.tv.TvInputManagerService$SessionState)
    {
        com.android.server.tv.TvInputManagerService r0;
        com.android.server.tv.TvInputManagerService$SessionState r1;
        android.media.tv.ITvInputSession $r2;

        r0 := @parameter0: com.android.server.tv.TvInputManagerService;

        r1 := @parameter1: com.android.server.tv.TvInputManagerService$SessionState;

        $r2 = specialinvoke r0.<com.android.server.tv.TvInputManagerService: android.media.tv.ITvInputSession getSessionLocked(com.android.server.tv.TvInputManagerService$SessionState)>(r1);

        return $r2;
    }

    static android.media.tv.ITvInputSession access$5700(com.android.server.tv.TvInputManagerService, android.os.IBinder, int, int)
    {
        com.android.server.tv.TvInputManagerService r0;
        android.os.IBinder r1;
        int i0, i1;
        android.media.tv.ITvInputSession $r2;

        r0 := @parameter0: com.android.server.tv.TvInputManagerService;

        r1 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r2 = specialinvoke r0.<com.android.server.tv.TvInputManagerService: android.media.tv.ITvInputSession getSessionLocked(android.os.IBinder,int,int)>(r1, i0, i1);

        return $r2;
    }

    static com.android.server.tv.TvInputManagerService$WatchLogHandler access$5800(com.android.server.tv.TvInputManagerService)
    {
        com.android.server.tv.TvInputManagerService r0;
        com.android.server.tv.TvInputManagerService$WatchLogHandler $r1;

        r0 := @parameter0: com.android.server.tv.TvInputManagerService;

        $r1 = r0.<com.android.server.tv.TvInputManagerService: com.android.server.tv.TvInputManagerService$WatchLogHandler mWatchLogHandler>;

        return $r1;
    }

    static com.android.server.tv.TvInputHardwareManager access$5900(com.android.server.tv.TvInputManagerService)
    {
        com.android.server.tv.TvInputManagerService r0;
        com.android.server.tv.TvInputHardwareManager $r1;

        r0 := @parameter0: com.android.server.tv.TvInputManagerService;

        $r1 = r0.<com.android.server.tv.TvInputManagerService: com.android.server.tv.TvInputHardwareManager mTvInputHardwareManager>;

        return $r1;
    }

    static void access$600(com.android.server.tv.TvInputManagerService, int)
    {
        com.android.server.tv.TvInputManagerService r0;
        int i0;

        r0 := @parameter0: com.android.server.tv.TvInputManagerService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.tv.TvInputManagerService: void switchUser(int)>(i0);

        return;
    }

    static java.util.regex.Pattern access$6000()
    {
        java.util.regex.Pattern $r0;

        $r0 = <com.android.server.tv.TvInputManagerService: java.util.regex.Pattern sFrontEndDevicePattern>;

        return $r0;
    }

    static java.util.regex.Pattern access$6100()
    {
        java.util.regex.Pattern $r0;

        $r0 = <com.android.server.tv.TvInputManagerService: java.util.regex.Pattern sAdapterDirPattern>;

        return $r0;
    }

    static java.util.regex.Pattern access$6200()
    {
        java.util.regex.Pattern $r0;

        $r0 = <com.android.server.tv.TvInputManagerService: java.util.regex.Pattern sFrontEndInAdapterDirPattern>;

        return $r0;
    }

    static android.util.SparseArray access$6400(com.android.server.tv.TvInputManagerService)
    {
        com.android.server.tv.TvInputManagerService r0;
        android.util.SparseArray $r1;

        r0 := @parameter0: com.android.server.tv.TvInputManagerService;

        $r1 = r0.<com.android.server.tv.TvInputManagerService: android.util.SparseArray mUserStates>;

        return $r1;
    }

    static boolean access$6900(android.content.pm.PackageManager, android.content.ComponentName)
    {
        android.content.pm.PackageManager r0;
        android.content.ComponentName r1;
        boolean $z0;

        r0 := @parameter0: android.content.pm.PackageManager;

        r1 := @parameter1: android.content.ComponentName;

        $z0 = staticinvoke <com.android.server.tv.TvInputManagerService: boolean hasHardwarePermission(android.content.pm.PackageManager,android.content.ComponentName)>(r0, r1);

        return $z0;
    }

    static void access$700(com.android.server.tv.TvInputManagerService, int)
    {
        com.android.server.tv.TvInputManagerService r0;
        int i0;

        r0 := @parameter0: com.android.server.tv.TvInputManagerService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.tv.TvInputManagerService: void removeUser(int)>(i0);

        return;
    }

    static void access$7000(com.android.server.tv.TvInputManagerService, com.android.server.tv.TvInputManagerService$SessionState)
    {
        com.android.server.tv.TvInputManagerService r0;
        com.android.server.tv.TvInputManagerService$SessionState r1;

        r0 := @parameter0: com.android.server.tv.TvInputManagerService;

        r1 := @parameter1: com.android.server.tv.TvInputManagerService$SessionState;

        specialinvoke r0.<com.android.server.tv.TvInputManagerService: void clearSessionAndNotifyClientLocked(com.android.server.tv.TvInputManagerService$SessionState)>(r1);

        return;
    }

    static void access$7100(com.android.server.tv.TvInputManagerService, com.android.server.tv.TvInputManagerService$UserState, java.lang.String, int, android.media.tv.ITvInputManagerCallback)
    {
        com.android.server.tv.TvInputManagerService r0;
        com.android.server.tv.TvInputManagerService$UserState r1;
        java.lang.String r2;
        int i0;
        android.media.tv.ITvInputManagerCallback r3;

        r0 := @parameter0: com.android.server.tv.TvInputManagerService;

        r1 := @parameter1: com.android.server.tv.TvInputManagerService$UserState;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r3 := @parameter4: android.media.tv.ITvInputManagerCallback;

        specialinvoke r0.<com.android.server.tv.TvInputManagerService: void notifyInputStateChangedLocked(com.android.server.tv.TvInputManagerService$UserState,java.lang.String,int,android.media.tv.ITvInputManagerCallback)>(r1, r2, i0, r3);

        return;
    }

    static void access$7200(com.android.server.tv.TvInputManagerService, com.android.server.tv.TvInputManagerService$ServiceState, java.lang.String, int)
    {
        com.android.server.tv.TvInputManagerService r0;
        com.android.server.tv.TvInputManagerService$ServiceState r1;
        java.lang.String r2;
        int i0;

        r0 := @parameter0: com.android.server.tv.TvInputManagerService;

        r1 := @parameter1: com.android.server.tv.TvInputManagerService$ServiceState;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        specialinvoke r0.<com.android.server.tv.TvInputManagerService: void abortPendingCreateSessionRequestsLocked(com.android.server.tv.TvInputManagerService$ServiceState,java.lang.String,int)>(r1, r2, i0);

        return;
    }

    static com.android.server.tv.TvInputManagerService$ServiceState access$7300(com.android.server.tv.TvInputManagerService, android.content.ComponentName, int)
    {
        com.android.server.tv.TvInputManagerService r0;
        android.content.ComponentName r1;
        int i0;
        com.android.server.tv.TvInputManagerService$ServiceState $r2;

        r0 := @parameter0: com.android.server.tv.TvInputManagerService;

        r1 := @parameter1: android.content.ComponentName;

        i0 := @parameter2: int;

        $r2 = specialinvoke r0.<com.android.server.tv.TvInputManagerService: com.android.server.tv.TvInputManagerService$ServiceState getServiceStateLocked(android.content.ComponentName,int)>(r1, i0);

        return $r2;
    }

    static void access$7400(com.android.server.tv.TvInputManagerService, java.lang.String, int, int)
    {
        com.android.server.tv.TvInputManagerService r0;
        java.lang.String r1;
        int i0, i1;

        r0 := @parameter0: com.android.server.tv.TvInputManagerService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<com.android.server.tv.TvInputManagerService: void setStateLocked(java.lang.String,int,int)>(r1, i0, i1);

        return;
    }

    private void buildTvContentRatingSystemListLocked(int)
    {
        com.android.server.tv.TvInputManagerService r0;
        com.android.server.tv.TvInputManagerService$UserState r1;
        java.util.Iterator r2;
        android.content.pm.ActivityInfo r3;
        java.util.List $r4, $r8, $r11;
        android.content.Context $r5;
        android.content.pm.PackageManager $r6;
        android.content.Intent $r7;
        java.lang.Object $r9;
        android.content.pm.ResolveInfo $r10;
        android.content.pm.ApplicationInfo $r12;
        android.media.tv.TvContentRatingSystemInfo $r13;
        java.lang.StringBuilder $r14;
        java.lang.String $r16, $r19, $r21;
        int i1, i2;
        boolean $z1;
        android.os.Bundle r22;

        r0 := @this: com.android.server.tv.TvInputManagerService;

        i1 := @parameter0: int;

        r1 = specialinvoke r0.<com.android.server.tv.TvInputManagerService: com.android.server.tv.TvInputManagerService$UserState getOrCreateUserStateLocked(int)>(i1);

        $r4 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: java.util.List access$1500(com.android.server.tv.TvInputManagerService$UserState)>(r1);

        interfaceinvoke $r4.<java.util.List: void clear()>();

        $r5 = r0.<com.android.server.tv.TvInputManagerService: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>(java.lang.String)>("android.media.tv.action.QUERY_CONTENT_RATING_SYSTEMS");

        $r8 = virtualinvoke $r6.<android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>($r7, 128);

        r2 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (android.content.pm.ResolveInfo) $r9;

        r3 = $r10.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        r22 = r3.<android.content.pm.ActivityInfo: android.os.Bundle metaData>;

        if r22 != null goto label2;

        goto label1;

     label2:
        i2 = virtualinvoke r22.<android.os.Bundle: int getInt(java.lang.String)>("android.media.tv.metadata.CONTENT_RATING_SYSTEMS");

        if i2 != 0 goto label3;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing meta-data \'android.media.tv.metadata.CONTENT_RATING_SYSTEMS\' on receiver ");

        $r16 = r3.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r19 = r3.<android.content.pm.ActivityInfo: java.lang.String name>;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("TvInputManagerService", $r21);

        goto label1;

     label3:
        $r11 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: java.util.List access$1500(com.android.server.tv.TvInputManagerService$UserState)>(r1);

        $r12 = r3.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r13 = staticinvoke <android.media.tv.TvContentRatingSystemInfo: android.media.tv.TvContentRatingSystemInfo createTvContentRatingSystemInfo(int,android.content.pm.ApplicationInfo)>(i2, $r12);

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r13);

        goto label1;

     label4:
        return;
    }

    private void buildTvInputListLocked(int, java.lang.String[])
    {
        com.android.server.tv.TvInputManagerService r0;
        int i0, i1, i4;
        com.android.server.tv.TvInputManagerService$UserState r1;
        java.util.Set $r2, $r7, $r9, $r41;
        android.content.Context $r3, $r39;
        android.content.Intent $r4;
        java.util.ArrayList $r5;
        java.util.HashMap $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z11;
        java.util.Map $r8, $r10, $r13, $r16, $r20, $r26, $r43, $r45, $r48;
        java.lang.Object $r12, $r14, $r18, $r19, $r21, $r25, $r28, $r33, $r44;
        com.android.server.tv.TvInputManagerService$TvInputState $r15, $r22, $r32, r80, r81;
        android.content.ComponentName $r17, $r36, r84;
        android.media.tv.TvInputInfo $r23, $r40, r79, r88;
        java.lang.String $r24, $r27, $r30, $r34, $r35, $r37, $r38, $r42, $r52, $r56, $r60, $r62, r83, r85, r87;
        java.util.Collection $r46;
        com.android.server.tv.TvInputManagerService$ServiceState $r47, r72, r89;
        java.lang.StringBuilder $r50, $r58;
        java.lang.Exception $r57;
        java.lang.String[] r63;
        android.content.pm.PackageManager r64;
        java.util.List r65;
        java.util.Iterator r67, r78, r82, r86;
        android.content.pm.ResolveInfo r68;
        android.content.pm.ServiceInfo r69;
        android.media.tv.TvInputInfo$Builder r74;

        r0 := @this: com.android.server.tv.TvInputManagerService;

        i0 := @parameter0: int;

        r63 := @parameter1: java.lang.String[];

        r1 = specialinvoke r0.<com.android.server.tv.TvInputManagerService: com.android.server.tv.TvInputManagerService$UserState getOrCreateUserStateLocked(int)>(i0);

        $r2 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: java.util.Set access$800(com.android.server.tv.TvInputManagerService$UserState)>(r1);

        interfaceinvoke $r2.<java.util.Set: void clear()>();

        $r3 = r0.<com.android.server.tv.TvInputManagerService: android.content.Context mContext>;

        r64 = virtualinvoke $r3.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("android.media.tv.TvInputService");

        r65 = virtualinvoke r64.<android.content.pm.PackageManager: java.util.List queryIntentServicesAsUser(android.content.Intent,int,int)>($r4, 132, i0);

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r67 = interfaceinvoke r65.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z11 = interfaceinvoke r67.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label08;

        $r33 = interfaceinvoke r67.<java.util.Iterator: java.lang.Object next()>();

        r68 = (android.content.pm.ResolveInfo) $r33;

        r69 = r68.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r35 = "android.permission.BIND_TV_INPUT";

        $r34 = r69.<android.content.pm.ServiceInfo: java.lang.String permission>;

        $z6 = virtualinvoke $r35.<java.lang.String: boolean equals(java.lang.Object)>($r34);

        if $z6 != 0 goto label02;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping TV input ");

        $r52 = r69.<android.content.pm.ServiceInfo: java.lang.String name>;

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": it does not require the permission ");

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.BIND_TV_INPUT");

        $r56 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("TvInputManagerService", $r56);

        goto label01;

     label02:
        $r36 = new android.content.ComponentName;

        $r38 = r69.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r37 = r69.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke $r36.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r38, $r37);

        $z7 = staticinvoke <com.android.server.tv.TvInputManagerService: boolean hasHardwarePermission(android.content.pm.PackageManager,android.content.ComponentName)>(r64, $r36);

        if $z7 == 0 goto label05;

        $r43 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: java.util.Map access$900(com.android.server.tv.TvInputManagerService$UserState)>(r1);

        $r44 = interfaceinvoke $r43.<java.util.Map: java.lang.Object get(java.lang.Object)>($r36);

        r72 = (com.android.server.tv.TvInputManagerService$ServiceState) $r44;

        if r72 != null goto label03;

        $r47 = new com.android.server.tv.TvInputManagerService$ServiceState;

        specialinvoke $r47.<com.android.server.tv.TvInputManagerService$ServiceState: void <init>(com.android.server.tv.TvInputManagerService,android.content.ComponentName,int,com.android.server.tv.TvInputManagerService$1)>(r0, $r36, i0, null);

        $r48 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: java.util.Map access$900(com.android.server.tv.TvInputManagerService$UserState)>(r1);

        interfaceinvoke $r48.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r36, $r47);

        specialinvoke r0.<com.android.server.tv.TvInputManagerService: void updateServiceConnectionLocked(android.content.ComponentName,int)>($r36, i0);

        goto label04;

     label03:
        $r45 = staticinvoke <com.android.server.tv.TvInputManagerService$ServiceState: java.util.Map access$1100(com.android.server.tv.TvInputManagerService$ServiceState)>(r72);

        $r46 = interfaceinvoke $r45.<java.util.Map: java.util.Collection values()>();

        interfaceinvoke $r5.<java.util.List: boolean addAll(java.util.Collection)>($r46);

     label04:
        goto label06;

     label05:
        r74 = new android.media.tv.TvInputInfo$Builder;

        $r39 = r0.<com.android.server.tv.TvInputManagerService: android.content.Context mContext>;

        specialinvoke r74.<android.media.tv.TvInputInfo$Builder: void <init>(android.content.Context,android.content.pm.ResolveInfo)>($r39, r68);

        $r40 = virtualinvoke r74.<android.media.tv.TvInputInfo$Builder: android.media.tv.TvInputInfo build()>();

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r40);

     label06:
        $r41 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: java.util.Set access$800(com.android.server.tv.TvInputManagerService$UserState)>(r1);

        $r42 = r69.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        interfaceinvoke $r41.<java.util.Set: boolean add(java.lang.Object)>($r42);

        goto label01;

     label07:
        $r57 := @caughtexception;

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to load TV input ");

        $r60 = r69.<android.content.pm.ServiceInfo: java.lang.String name>;

        virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        $r62 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TvInputManagerService", $r62, $r57);

        goto label01;

     label08:
        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r78 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke r78.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r25 = interfaceinvoke r78.<java.util.Iterator: java.lang.Object next()>();

        r79 = (android.media.tv.TvInputInfo) $r25;

        $r26 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: java.util.Map access$1200(com.android.server.tv.TvInputManagerService$UserState)>(r1);

        $r27 = virtualinvoke r79.<android.media.tv.TvInputInfo: java.lang.String getId()>();

        $r28 = interfaceinvoke $r26.<java.util.Map: java.lang.Object get(java.lang.Object)>($r27);

        r80 = (com.android.server.tv.TvInputManagerService$TvInputState) $r28;

        r81 = r80;

        if r80 != null goto label10;

        $r32 = new com.android.server.tv.TvInputManagerService$TvInputState;

        specialinvoke $r32.<com.android.server.tv.TvInputManagerService$TvInputState: void <init>(com.android.server.tv.TvInputManagerService$1)>(null);

        r81 = $r32;

     label10:
        staticinvoke <com.android.server.tv.TvInputManagerService$TvInputState: android.media.tv.TvInputInfo access$1402(com.android.server.tv.TvInputManagerService$TvInputState,android.media.tv.TvInputInfo)>(r81, r79);

        $r30 = virtualinvoke r79.<android.media.tv.TvInputInfo: java.lang.String getId()>();

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r30, r81);

        goto label09;

     label11:
        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set keySet()>();

        r82 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label12:
        $z1 = interfaceinvoke r82.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label17;

        $r19 = interfaceinvoke r82.<java.util.Iterator: java.lang.Object next()>();

        r83 = (java.lang.String) $r19;

        $r20 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: java.util.Map access$1200(com.android.server.tv.TvInputManagerService$UserState)>(r1);

        $z4 = interfaceinvoke $r20.<java.util.Map: boolean containsKey(java.lang.Object)>(r83);

        if $z4 != 0 goto label13;

        specialinvoke r0.<com.android.server.tv.TvInputManagerService: void notifyInputAddedLocked(com.android.server.tv.TvInputManagerService$UserState,java.lang.String)>(r1, r83);

        goto label16;

     label13:
        if r63 == null goto label16;

        $r21 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r83);

        $r22 = (com.android.server.tv.TvInputManagerService$TvInputState) $r21;

        $r23 = staticinvoke <com.android.server.tv.TvInputManagerService$TvInputState: android.media.tv.TvInputInfo access$1400(com.android.server.tv.TvInputManagerService$TvInputState)>($r22);

        r84 = virtualinvoke $r23.<android.media.tv.TvInputInfo: android.content.ComponentName getComponent()>();

        i1 = lengthof r63;

        i4 = 0;

     label14:
        if i4 >= i1 goto label16;

        r85 = r63[i4];

        $r24 = virtualinvoke r84.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z5 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>(r85);

        if $z5 == 0 goto label15;

        specialinvoke r0.<com.android.server.tv.TvInputManagerService: void updateServiceConnectionLocked(android.content.ComponentName,int)>(r84, i0);

        specialinvoke r0.<com.android.server.tv.TvInputManagerService: void notifyInputUpdatedLocked(com.android.server.tv.TvInputManagerService$UserState,java.lang.String)>(r1, r83);

        goto label16;

     label15:
        i4 = i4 + 1;

        goto label14;

     label16:
        goto label12;

     label17:
        $r8 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: java.util.Map access$1200(com.android.server.tv.TvInputManagerService$UserState)>(r1);

        $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Set keySet()>();

        r86 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label18:
        $z2 = interfaceinvoke r86.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label21;

        $r12 = interfaceinvoke r86.<java.util.Iterator: java.lang.Object next()>();

        r87 = (java.lang.String) $r12;

        $z3 = interfaceinvoke $r6.<java.util.Map: boolean containsKey(java.lang.Object)>(r87);

        if $z3 != 0 goto label20;

        $r13 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: java.util.Map access$1200(com.android.server.tv.TvInputManagerService$UserState)>(r1);

        $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r87);

        $r15 = (com.android.server.tv.TvInputManagerService$TvInputState) $r14;

        r88 = staticinvoke <com.android.server.tv.TvInputManagerService$TvInputState: android.media.tv.TvInputInfo access$1400(com.android.server.tv.TvInputManagerService$TvInputState)>($r15);

        $r16 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: java.util.Map access$900(com.android.server.tv.TvInputManagerService$UserState)>(r1);

        $r17 = virtualinvoke r88.<android.media.tv.TvInputInfo: android.content.ComponentName getComponent()>();

        $r18 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>($r17);

        r89 = (com.android.server.tv.TvInputManagerService$ServiceState) $r18;

        if r89 == null goto label19;

        specialinvoke r0.<com.android.server.tv.TvInputManagerService: void abortPendingCreateSessionRequestsLocked(com.android.server.tv.TvInputManagerService$ServiceState,java.lang.String,int)>(r89, r87, i0);

     label19:
        specialinvoke r0.<com.android.server.tv.TvInputManagerService: void notifyInputRemovedLocked(com.android.server.tv.TvInputManagerService$UserState,java.lang.String)>(r1, r87);

     label20:
        goto label18;

     label21:
        $r10 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: java.util.Map access$1200(com.android.server.tv.TvInputManagerService$UserState)>(r1);

        interfaceinvoke $r10.<java.util.Map: void clear()>();

        staticinvoke <com.android.server.tv.TvInputManagerService$UserState: java.util.Map access$1202(com.android.server.tv.TvInputManagerService$UserState,java.util.Map)>(r1, $r6);

        return;

        catch java.lang.Exception from label05 to label06 with label07;
    }

    private void clearSessionAndNotifyClientLocked(com.android.server.tv.TvInputManagerService$SessionState)
    {
        com.android.server.tv.TvInputManagerService r0;
        com.android.server.tv.TvInputManagerService$SessionState r1, r17;
        android.media.tv.ITvInputClient $r2, $r8, $r9;
        android.os.IBinder $r3, $r5, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i6;
        java.lang.Object $r4;
        android.os.RemoteException $r10, $r11;
        com.android.server.tv.TvInputManagerService$UserState $r13;
        java.util.Map $r14;
        java.util.Collection $r15;
        java.util.Iterator r16;
        boolean $z0;

        r0 := @this: com.android.server.tv.TvInputManagerService;

        r1 := @parameter0: com.android.server.tv.TvInputManagerService$SessionState;

        $r2 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: android.media.tv.ITvInputClient access$2300(com.android.server.tv.TvInputManagerService$SessionState)>(r1);

        if $r2 == null goto label04;

     label01:
        $r9 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: android.media.tv.ITvInputClient access$2300(com.android.server.tv.TvInputManagerService$SessionState)>(r1);

        $i3 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: int access$2400(com.android.server.tv.TvInputManagerService$SessionState)>(r1);

        interfaceinvoke $r9.<android.media.tv.ITvInputClient: void onSessionReleased(int)>($i3);

     label02:
        goto label04;

     label03:
        $r11 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TvInputManagerService", "error in onSessionReleased", $r11);

     label04:
        $i6 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: int access$2500(com.android.server.tv.TvInputManagerService$SessionState)>(r1);

        $r13 = specialinvoke r0.<com.android.server.tv.TvInputManagerService: com.android.server.tv.TvInputManagerService$UserState getOrCreateUserStateLocked(int)>($i6);

        $r14 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: java.util.Map access$1600(com.android.server.tv.TvInputManagerService$UserState)>($r13);

        $r15 = interfaceinvoke $r14.<java.util.Map: java.util.Collection values()>();

        r16 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r4 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        r17 = (com.android.server.tv.TvInputManagerService$SessionState) $r4;

        $r5 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: android.os.IBinder access$2600(com.android.server.tv.TvInputManagerService$SessionState)>(r1);

        $r6 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: android.os.IBinder access$2700(com.android.server.tv.TvInputManagerService$SessionState)>(r17);

        if $r5 != $r6 goto label09;

        $r7 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: android.os.IBinder access$2600(com.android.server.tv.TvInputManagerService$SessionState)>(r17);

        $i1 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: int access$2500(com.android.server.tv.TvInputManagerService$SessionState)>(r1);

        specialinvoke r0.<com.android.server.tv.TvInputManagerService: void releaseSessionLocked(android.os.IBinder,int,int)>($r7, 1000, $i1);

     label06:
        $r8 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: android.media.tv.ITvInputClient access$2300(com.android.server.tv.TvInputManagerService$SessionState)>(r17);

        $i2 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: int access$2400(com.android.server.tv.TvInputManagerService$SessionState)>(r17);

        interfaceinvoke $r8.<android.media.tv.ITvInputClient: void onSessionReleased(int)>($i2);

     label07:
        goto label09;

     label08:
        $r10 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TvInputManagerService", "error in onSessionReleased", $r10);

     label09:
        goto label05;

     label10:
        $r3 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: android.os.IBinder access$2600(com.android.server.tv.TvInputManagerService$SessionState)>(r1);

        $i0 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: int access$2500(com.android.server.tv.TvInputManagerService$SessionState)>(r1);

        specialinvoke r0.<com.android.server.tv.TvInputManagerService: void removeSessionStateLocked(android.os.IBinder,int)>($r3, $i0);

        return;

        catch android.os.RemoteException from label01 to label02 with label03;
        catch android.os.RemoteException from label06 to label07 with label08;
    }

    private boolean createSessionInternalLocked(android.media.tv.ITvInputService, android.os.IBinder, int)
    {
        com.android.server.tv.TvInputManagerService r0;
        int i0, $i2;
        com.android.server.tv.TvInputManagerService$SessionState r1;
        com.android.server.tv.TvInputManagerService$UserState $r3;
        java.util.Map $r4;
        java.lang.Object $r5;
        java.lang.String $r6, $r9, $r10, $r12, $r13, $r16;
        com.android.server.tv.TvInputManagerService$SessionCallback $r7;
        boolean $z0, z1;
        android.view.InputChannel $r8, $r11;
        android.os.RemoteException $r14;
        android.media.tv.ITvInputClient $r15;
        android.media.tv.ITvInputService r17;
        android.os.IBinder r18;
        android.view.InputChannel[] r19;

        r0 := @this: com.android.server.tv.TvInputManagerService;

        r17 := @parameter0: android.media.tv.ITvInputService;

        r18 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        $r3 = specialinvoke r0.<com.android.server.tv.TvInputManagerService: com.android.server.tv.TvInputManagerService$UserState getOrCreateUserStateLocked(int)>(i0);

        $r4 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: java.util.Map access$1600(com.android.server.tv.TvInputManagerService$UserState)>($r3);

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r18);

        r1 = (com.android.server.tv.TvInputManagerService$SessionState) $r5;

        $r6 = virtualinvoke r18.<java.lang.Object: java.lang.String toString()>();

        r19 = staticinvoke <android.view.InputChannel: android.view.InputChannel[] openInputChannelPair(java.lang.String)>($r6);

        $r7 = new com.android.server.tv.TvInputManagerService$SessionCallback;

        specialinvoke $r7.<com.android.server.tv.TvInputManagerService$SessionCallback: void <init>(com.android.server.tv.TvInputManagerService,com.android.server.tv.TvInputManagerService$SessionState,android.view.InputChannel[])>(r0, r1, r19);

        z1 = 1;

     label1:
        $z0 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: boolean access$1800(com.android.server.tv.TvInputManagerService$SessionState)>(r1);

        if $z0 == 0 goto label4;

     label2:
        $r12 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: java.lang.String access$3600(com.android.server.tv.TvInputManagerService$SessionState)>(r1);

        $r13 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: java.lang.String access$3800(com.android.server.tv.TvInputManagerService$SessionState)>(r1);

        interfaceinvoke r17.<android.media.tv.ITvInputService: void createRecordingSession(android.media.tv.ITvInputSessionCallback,java.lang.String,java.lang.String)>($r7, $r12, $r13);

     label3:
        goto label5;

     label4:
        $r8 = r19[1];

        $r9 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: java.lang.String access$3600(com.android.server.tv.TvInputManagerService$SessionState)>(r1);

        $r10 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: java.lang.String access$3800(com.android.server.tv.TvInputManagerService$SessionState)>(r1);

        interfaceinvoke r17.<android.media.tv.ITvInputService: void createSession(android.view.InputChannel,android.media.tv.ITvInputSessionCallback,java.lang.String,java.lang.String)>($r8, $r7, $r9, $r10);

     label5:
        goto label7;

     label6:
        $r14 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TvInputManagerService", "error in createSession", $r14);

        $r15 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: android.media.tv.ITvInputClient access$2300(com.android.server.tv.TvInputManagerService$SessionState)>(r1);

        $r16 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: java.lang.String access$3600(com.android.server.tv.TvInputManagerService$SessionState)>(r1);

        $i2 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: int access$2400(com.android.server.tv.TvInputManagerService$SessionState)>(r1);

        specialinvoke r0.<com.android.server.tv.TvInputManagerService: void sendSessionTokenToClientLocked(android.media.tv.ITvInputClient,java.lang.String,android.os.IBinder,android.view.InputChannel,int)>($r15, $r16, null, null, $i2);

        z1 = 0;

     label7:
        $r11 = r19[1];

        virtualinvoke $r11.<android.view.InputChannel: void dispose()>();

        return z1;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label2 to label3 with label6;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    private android.content.ContentResolver getContentResolverForUser(int)
    {
        com.android.server.tv.TvInputManagerService r0;
        int i0;
        android.os.UserHandle $r2;
        android.content.Context $r3, r10;
        android.content.ContentResolver $r4;
        android.content.pm.PackageManager$NameNotFoundException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r9;

        r0 := @this: com.android.server.tv.TvInputManagerService;

        i0 := @parameter0: int;

        $r2 = new android.os.UserHandle;

        specialinvoke $r2.<android.os.UserHandle: void <init>(int)>(i0);

     label1:
        $r3 = r0.<com.android.server.tv.TvInputManagerService: android.content.Context mContext>;

        r10 = virtualinvoke $r3.<android.content.Context: android.content.Context createPackageContextAsUser(java.lang.String,int,android.os.UserHandle)>("android", 0, $r2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to create package context as user ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("TvInputManagerService", $r9);

        r10 = r0.<com.android.server.tv.TvInputManagerService: android.content.Context mContext>;

     label4:
        $r4 = virtualinvoke r10.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        return $r4;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    private com.android.server.tv.TvInputManagerService$UserState getOrCreateUserStateLocked(int)
    {
        com.android.server.tv.TvInputManagerService r0;
        int i0;
        com.android.server.tv.TvInputManagerService$UserState r1, $r4, r7;
        android.util.SparseArray $r2, $r6;
        java.lang.Object $r3;
        android.content.Context $r5;

        r0 := @this: com.android.server.tv.TvInputManagerService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.tv.TvInputManagerService: android.util.SparseArray mUserStates>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.tv.TvInputManagerService$UserState) $r3;

        r7 = r1;

        if r1 != null goto label1;

        $r4 = new com.android.server.tv.TvInputManagerService$UserState;

        $r5 = r0.<com.android.server.tv.TvInputManagerService: android.content.Context mContext>;

        specialinvoke $r4.<com.android.server.tv.TvInputManagerService$UserState: void <init>(android.content.Context,int,com.android.server.tv.TvInputManagerService$1)>($r5, i0, null);

        r7 = $r4;

        $r6 = r0.<com.android.server.tv.TvInputManagerService: android.util.SparseArray mUserStates>;

        virtualinvoke $r6.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r4);

     label1:
        return r7;
    }

    private com.android.server.tv.TvInputManagerService$ServiceState getServiceStateLocked(android.content.ComponentName, int)
    {
        com.android.server.tv.TvInputManagerService r0;
        android.content.ComponentName r1;
        int i0;
        com.android.server.tv.TvInputManagerService$UserState $r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        java.lang.StringBuilder $r5;
        java.lang.IllegalStateException $r11;
        java.lang.String $r12;
        com.android.server.tv.TvInputManagerService$ServiceState r13;

        r0 := @this: com.android.server.tv.TvInputManagerService;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        $r2 = specialinvoke r0.<com.android.server.tv.TvInputManagerService: com.android.server.tv.TvInputManagerService$UserState getOrCreateUserStateLocked(int)>(i0);

        $r3 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: java.util.Map access$900(com.android.server.tv.TvInputManagerService$UserState)>($r2);

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r13 = (com.android.server.tv.TvInputManagerService$ServiceState) $r4;

        if r13 == null goto label1;

        return r13;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service state not found for ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (userId=");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r11 = new java.lang.IllegalStateException;

        $r12 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r11;
    }

    private android.media.tv.ITvInputSession getSessionLocked(android.os.IBinder, int, int)
    {
        com.android.server.tv.TvInputManagerService r0;
        android.os.IBinder r1;
        int i0, i1;
        com.android.server.tv.TvInputManagerService$SessionState $r2;
        android.media.tv.ITvInputSession $r3;

        r0 := @this: com.android.server.tv.TvInputManagerService;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = specialinvoke r0.<com.android.server.tv.TvInputManagerService: com.android.server.tv.TvInputManagerService$SessionState getSessionStateLocked(android.os.IBinder,int,int)>(r1, i0, i1);

        $r3 = specialinvoke r0.<com.android.server.tv.TvInputManagerService: android.media.tv.ITvInputSession getSessionLocked(com.android.server.tv.TvInputManagerService$SessionState)>($r2);

        return $r3;
    }

    private android.media.tv.ITvInputSession getSessionLocked(com.android.server.tv.TvInputManagerService$SessionState)
    {
        com.android.server.tv.TvInputManagerService r0;
        com.android.server.tv.TvInputManagerService$SessionState r1;
        java.lang.StringBuilder $r2;
        android.os.IBinder $r4;
        java.lang.IllegalStateException $r6;
        java.lang.String $r7;
        android.media.tv.ITvInputSession r8;

        r0 := @this: com.android.server.tv.TvInputManagerService;

        r1 := @parameter0: com.android.server.tv.TvInputManagerService$SessionState;

        r8 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: android.media.tv.ITvInputSession access$1700(com.android.server.tv.TvInputManagerService$SessionState)>(r1);

        if r8 == null goto label1;

        return r8;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Session not yet created for token ");

        $r4 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: android.os.IBinder access$2600(com.android.server.tv.TvInputManagerService$SessionState)>(r1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = new java.lang.IllegalStateException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    private com.android.server.tv.TvInputManagerService$SessionState getSessionStateLocked(android.os.IBinder, int, int)
    {
        com.android.server.tv.TvInputManagerService r0;
        android.os.IBinder r1;
        int i0, i1, $i2;
        com.android.server.tv.TvInputManagerService$UserState $r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        java.lang.StringBuilder $r5, $r10;
        com.android.server.tv.TvInputManagerService$SessionNotFoundException $r8;
        java.lang.String $r9, $r16;
        java.lang.SecurityException $r15;
        com.android.server.tv.TvInputManagerService$SessionState r17;

        r0 := @this: com.android.server.tv.TvInputManagerService;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = specialinvoke r0.<com.android.server.tv.TvInputManagerService: com.android.server.tv.TvInputManagerService$UserState getOrCreateUserStateLocked(int)>(i1);

        $r3 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: java.util.Map access$1600(com.android.server.tv.TvInputManagerService$UserState)>($r2);

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r17 = (com.android.server.tv.TvInputManagerService$SessionState) $r4;

        if r17 == null goto label3;

        if i0 == 1000 goto label2;

        $i2 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: int access$3200(com.android.server.tv.TvInputManagerService$SessionState)>(r17);

        if i0 != $i2 goto label1;

        goto label2;

     label1:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal access to the session with token ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from uid ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = new java.lang.SecurityException;

        $r16 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.SecurityException: void <init>(java.lang.String)>($r16);

        throw $r15;

     label2:
        return r17;

     label3:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Session state not found for token ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = new com.android.server.tv.TvInputManagerService$SessionNotFoundException;

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<com.android.server.tv.TvInputManagerService$SessionNotFoundException: void <init>(java.lang.String)>($r9);

        throw $r8;
    }

    private static boolean hasHardwarePermission(android.content.pm.PackageManager, android.content.ComponentName)
    {
        android.content.pm.PackageManager r0;
        android.content.ComponentName r1;
        java.lang.String $r2;
        int $i0;
        boolean z0;

        r0 := @parameter0: android.content.pm.PackageManager;

        r1 := @parameter1: android.content.ComponentName;

        $r2 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        $i0 = virtualinvoke r0.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>("android.permission.TV_INPUT_HARDWARE", $r2);

        if $i0 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void notifyInputAddedLocked(com.android.server.tv.TvInputManagerService$UserState, java.lang.String)
    {
        com.android.server.tv.TvInputManagerService r0;
        com.android.server.tv.TvInputManagerService$UserState r1;
        java.lang.String r2;
        int i0, i2;
        android.os.RemoteCallbackList $r4, $r5, $r6;
        android.os.IInterface $r7;
        android.media.tv.ITvInputManagerCallback $r8;
        android.os.RemoteException $r9;

        r0 := @this: com.android.server.tv.TvInputManagerService;

        r1 := @parameter0: com.android.server.tv.TvInputManagerService$UserState;

        r2 := @parameter1: java.lang.String;

        $r4 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: android.os.RemoteCallbackList access$2900(com.android.server.tv.TvInputManagerService$UserState)>(r1);

        i0 = virtualinvoke $r4.<android.os.RemoteCallbackList: int beginBroadcast()>();

        i2 = 0;

     label1:
        if i2 >= i0 goto label6;

     label2:
        $r6 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: android.os.RemoteCallbackList access$2900(com.android.server.tv.TvInputManagerService$UserState)>(r1);

        $r7 = virtualinvoke $r6.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i2);

        $r8 = (android.media.tv.ITvInputManagerCallback) $r7;

        interfaceinvoke $r8.<android.media.tv.ITvInputManagerCallback: void onInputAdded(java.lang.String)>(r2);

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TvInputManagerService", "failed to report added input to callback", $r9);

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        $r5 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: android.os.RemoteCallbackList access$2900(com.android.server.tv.TvInputManagerService$UserState)>(r1);

        virtualinvoke $r5.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private void notifyInputRemovedLocked(com.android.server.tv.TvInputManagerService$UserState, java.lang.String)
    {
        com.android.server.tv.TvInputManagerService r0;
        com.android.server.tv.TvInputManagerService$UserState r1;
        java.lang.String r2;
        int i0, i2;
        android.os.RemoteCallbackList $r4, $r5, $r6;
        android.os.IInterface $r7;
        android.media.tv.ITvInputManagerCallback $r8;
        android.os.RemoteException $r9;

        r0 := @this: com.android.server.tv.TvInputManagerService;

        r1 := @parameter0: com.android.server.tv.TvInputManagerService$UserState;

        r2 := @parameter1: java.lang.String;

        $r4 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: android.os.RemoteCallbackList access$2900(com.android.server.tv.TvInputManagerService$UserState)>(r1);

        i0 = virtualinvoke $r4.<android.os.RemoteCallbackList: int beginBroadcast()>();

        i2 = 0;

     label1:
        if i2 >= i0 goto label6;

     label2:
        $r6 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: android.os.RemoteCallbackList access$2900(com.android.server.tv.TvInputManagerService$UserState)>(r1);

        $r7 = virtualinvoke $r6.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i2);

        $r8 = (android.media.tv.ITvInputManagerCallback) $r7;

        interfaceinvoke $r8.<android.media.tv.ITvInputManagerCallback: void onInputRemoved(java.lang.String)>(r2);

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TvInputManagerService", "failed to report removed input to callback", $r9);

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        $r5 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: android.os.RemoteCallbackList access$2900(com.android.server.tv.TvInputManagerService$UserState)>(r1);

        virtualinvoke $r5.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private void notifyInputStateChangedLocked(com.android.server.tv.TvInputManagerService$UserState, java.lang.String, int, android.media.tv.ITvInputManagerCallback)
    {
        com.android.server.tv.TvInputManagerService r0;
        java.lang.String r1;
        int i0, i1, i4;
        android.os.RemoteCallbackList $r2, $r3, $r4;
        android.os.IInterface $r5;
        android.media.tv.ITvInputManagerCallback $r6, r10;
        android.os.RemoteException $r7, $r8;
        com.android.server.tv.TvInputManagerService$UserState r9;

        r0 := @this: com.android.server.tv.TvInputManagerService;

        r9 := @parameter0: com.android.server.tv.TvInputManagerService$UserState;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r10 := @parameter3: android.media.tv.ITvInputManagerCallback;

        if r10 != null goto label07;

        $r2 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: android.os.RemoteCallbackList access$2900(com.android.server.tv.TvInputManagerService$UserState)>(r9);

        i1 = virtualinvoke $r2.<android.os.RemoteCallbackList: int beginBroadcast()>();

        i4 = 0;

     label01:
        if i4 >= i1 goto label06;

     label02:
        $r4 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: android.os.RemoteCallbackList access$2900(com.android.server.tv.TvInputManagerService$UserState)>(r9);

        $r5 = virtualinvoke $r4.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i4);

        $r6 = (android.media.tv.ITvInputManagerCallback) $r5;

        interfaceinvoke $r6.<android.media.tv.ITvInputManagerCallback: void onInputStateChanged(java.lang.String,int)>(r1, i0);

     label03:
        goto label05;

     label04:
        $r8 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TvInputManagerService", "failed to report state change to callback", $r8);

     label05:
        i4 = i4 + 1;

        goto label01;

     label06:
        $r3 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: android.os.RemoteCallbackList access$2900(com.android.server.tv.TvInputManagerService$UserState)>(r9);

        virtualinvoke $r3.<android.os.RemoteCallbackList: void finishBroadcast()>();

        goto label10;

     label07:
        interfaceinvoke r10.<android.media.tv.ITvInputManagerCallback: void onInputStateChanged(java.lang.String,int)>(r1, i0);

     label08:
        goto label10;

     label09:
        $r7 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TvInputManagerService", "failed to report state change to callback", $r7);

     label10:
        return;

        catch android.os.RemoteException from label02 to label03 with label04;
        catch android.os.RemoteException from label07 to label08 with label09;
    }

    private void notifyInputUpdatedLocked(com.android.server.tv.TvInputManagerService$UserState, java.lang.String)
    {
        com.android.server.tv.TvInputManagerService r0;
        com.android.server.tv.TvInputManagerService$UserState r1;
        java.lang.String r2;
        int i0, i2;
        android.os.RemoteCallbackList $r4, $r5, $r6;
        android.os.IInterface $r7;
        android.media.tv.ITvInputManagerCallback $r8;
        android.os.RemoteException $r9;

        r0 := @this: com.android.server.tv.TvInputManagerService;

        r1 := @parameter0: com.android.server.tv.TvInputManagerService$UserState;

        r2 := @parameter1: java.lang.String;

        $r4 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: android.os.RemoteCallbackList access$2900(com.android.server.tv.TvInputManagerService$UserState)>(r1);

        i0 = virtualinvoke $r4.<android.os.RemoteCallbackList: int beginBroadcast()>();

        i2 = 0;

     label1:
        if i2 >= i0 goto label6;

     label2:
        $r6 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: android.os.RemoteCallbackList access$2900(com.android.server.tv.TvInputManagerService$UserState)>(r1);

        $r7 = virtualinvoke $r6.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i2);

        $r8 = (android.media.tv.ITvInputManagerCallback) $r7;

        interfaceinvoke $r8.<android.media.tv.ITvInputManagerCallback: void onInputUpdated(java.lang.String)>(r2);

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TvInputManagerService", "failed to report updated input to callback", $r9);

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        $r5 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: android.os.RemoteCallbackList access$2900(com.android.server.tv.TvInputManagerService$UserState)>(r1);

        virtualinvoke $r5.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private void registerBroadcastReceivers()
    {
        com.android.server.tv.TvInputManagerService r0;
        com.android.server.tv.TvInputManagerService$1 $r2;
        android.os.UserHandle $r3, $r8;
        android.content.Context $r4, $r7;
        android.content.IntentFilter $r5;
        com.android.server.tv.TvInputManagerService$2 $r6;

        r0 := @this: com.android.server.tv.TvInputManagerService;

        $r2 = new com.android.server.tv.TvInputManagerService$1;

        specialinvoke $r2.<com.android.server.tv.TvInputManagerService$1: void <init>(com.android.server.tv.TvInputManagerService)>(r0);

        $r4 = r0.<com.android.server.tv.TvInputManagerService: android.content.Context mContext>;

        $r3 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r2.<com.android.internal.content.PackageMonitor: void register(android.content.Context,android.os.Looper,android.os.UserHandle,boolean)>($r4, null, $r3, 1);

        $r5 = new android.content.IntentFilter;

        specialinvoke $r5.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r5.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_SWITCHED");

        virtualinvoke $r5.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_REMOVED");

        $r7 = r0.<com.android.server.tv.TvInputManagerService: android.content.Context mContext>;

        $r6 = new com.android.server.tv.TvInputManagerService$2;

        specialinvoke $r6.<com.android.server.tv.TvInputManagerService$2: void <init>(com.android.server.tv.TvInputManagerService)>(r0);

        $r8 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r7.<android.content.Context: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r6, $r8, $r5, null, null);

        return;
    }

    private void releaseSessionLocked(android.os.IBinder, int, int)
    {
        com.android.server.tv.TvInputManagerService r0;
        int i0, i1;
        android.media.tv.ITvInputSession $r1, $r5, $r7;
        com.android.server.tv.TvInputManagerService$UserState $r3;
        android.os.IBinder $r4, $r6, r11;
        java.lang.Throwable $r8;
        java.lang.Exception $r10;
        com.android.server.tv.TvInputManagerService$SessionState r12, r13, r14;

        r0 := @this: com.android.server.tv.TvInputManagerService;

        r11 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r12 = null;

        r13 = null;

     label01:
        r14 = specialinvoke r0.<com.android.server.tv.TvInputManagerService: com.android.server.tv.TvInputManagerService$SessionState getSessionStateLocked(android.os.IBinder,int,int)>(r11, i0, i1);

     label02:
        r13 = r14;

        r12 = r14;

     label03:
        $r1 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: android.media.tv.ITvInputSession access$1700(com.android.server.tv.TvInputManagerService$SessionState)>(r14);

        if $r1 == null goto label12;

     label04:
        r13 = r14;

        r12 = r14;

     label05:
        $r3 = specialinvoke r0.<com.android.server.tv.TvInputManagerService: com.android.server.tv.TvInputManagerService$UserState getOrCreateUserStateLocked(int)>(i1);

        $r4 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: android.os.IBinder access$3000(com.android.server.tv.TvInputManagerService$UserState)>($r3);

        if r11 != $r4 goto label08;

     label06:
        r13 = r14;

        r12 = r14;

     label07:
        specialinvoke r0.<com.android.server.tv.TvInputManagerService: void setMainLocked(android.os.IBinder,boolean,int,int)>(r11, 0, i0, i1);

     label08:
        r13 = r14;

        r12 = r14;

     label09:
        $r5 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: android.media.tv.ITvInputSession access$1700(com.android.server.tv.TvInputManagerService$SessionState)>(r14);

        $r6 = interfaceinvoke $r5.<android.media.tv.ITvInputSession: android.os.IBinder asBinder()>();

        interfaceinvoke $r6.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r14, 0);

     label10:
        r13 = r14;

        r12 = r14;

     label11:
        $r7 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: android.media.tv.ITvInputSession access$1700(com.android.server.tv.TvInputManagerService$SessionState)>(r14);

        interfaceinvoke $r7.<android.media.tv.ITvInputSession: void release()>();

     label12:
        if r14 == null goto label18;

        r12 = r14;

     label13:
        staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: android.media.tv.ITvInputSession access$1702(com.android.server.tv.TvInputManagerService$SessionState,android.media.tv.ITvInputSession)>(r12, null);

        goto label18;

     label14:
        $r8 := @caughtexception;

        goto label19;

     label15:
        $r10 := @caughtexception;

        r13 = r12;

     label16:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TvInputManagerService", "error in releaseSession", $r10);

     label17:
        if r12 == null goto label18;

        goto label13;

     label18:
        specialinvoke r0.<com.android.server.tv.TvInputManagerService: void removeSessionStateLocked(android.os.IBinder,int)>(r11, i1);

        return;

     label19:
        if r13 == null goto label20;

        staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: android.media.tv.ITvInputSession access$1702(com.android.server.tv.TvInputManagerService$SessionState,android.media.tv.ITvInputSession)>(r13, null);

     label20:
        throw $r8;

        catch android.os.RemoteException from label01 to label02 with label15;
        catch com.android.server.tv.TvInputManagerService$SessionNotFoundException from label01 to label02 with label15;
        catch java.lang.Throwable from label01 to label02 with label14;
        catch android.os.RemoteException from label03 to label04 with label15;
        catch com.android.server.tv.TvInputManagerService$SessionNotFoundException from label03 to label04 with label15;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch android.os.RemoteException from label05 to label06 with label15;
        catch com.android.server.tv.TvInputManagerService$SessionNotFoundException from label05 to label06 with label15;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch android.os.RemoteException from label07 to label08 with label15;
        catch com.android.server.tv.TvInputManagerService$SessionNotFoundException from label07 to label08 with label15;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch android.os.RemoteException from label09 to label10 with label15;
        catch com.android.server.tv.TvInputManagerService$SessionNotFoundException from label09 to label10 with label15;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch android.os.RemoteException from label11 to label12 with label15;
        catch com.android.server.tv.TvInputManagerService$SessionNotFoundException from label11 to label12 with label15;
        catch java.lang.Throwable from label11 to label12 with label14;
        catch java.lang.Throwable from label16 to label17 with label14;
    }

    private void removeSessionStateLocked(android.os.IBinder, int)
    {
        com.android.server.tv.TvInputManagerService r0;
        android.os.IBinder r1, $r3, $r8, $r19, $r22;
        int i0;
        com.android.server.tv.TvInputManagerService$UserState r2;
        java.util.Map $r4, $r6, $r17, $r26, $r28;
        java.lang.Object $r5, $r9, $r30;
        android.media.tv.ITvInputClient $r7, $r18, $r21;
        android.content.ComponentName $r11, $r29;
        long $l1;
        java.lang.Long $r12;
        com.android.server.tv.TvInputManagerService$WatchLogHandler $r13;
        android.os.Message $r14;
        java.util.List $r15, $r16;
        boolean $z2;
        com.android.server.tv.TvInputManagerService$SessionState r24;
        com.android.server.tv.TvInputManagerService$ClientState r25;
        java.lang.String $r27;
        com.android.server.tv.TvInputManagerService$ServiceState r31;
        com.android.internal.os.SomeArgs r32;

        r0 := @this: com.android.server.tv.TvInputManagerService;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r2 = specialinvoke r0.<com.android.server.tv.TvInputManagerService: com.android.server.tv.TvInputManagerService$UserState getOrCreateUserStateLocked(int)>(i0);

        $r3 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: android.os.IBinder access$3000(com.android.server.tv.TvInputManagerService$UserState)>(r2);

        if r1 != $r3 goto label1;

        staticinvoke <com.android.server.tv.TvInputManagerService$UserState: android.os.IBinder access$3002(com.android.server.tv.TvInputManagerService$UserState,android.os.IBinder)>(r2, null);

     label1:
        $r4 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: java.util.Map access$1600(com.android.server.tv.TvInputManagerService$UserState)>(r2);

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        r24 = (com.android.server.tv.TvInputManagerService$SessionState) $r5;

        if r24 != null goto label2;

        return;

     label2:
        $r6 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: java.util.Map access$2800(com.android.server.tv.TvInputManagerService$UserState)>(r2);

        $r7 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: android.media.tv.ITvInputClient access$2300(com.android.server.tv.TvInputManagerService$SessionState)>(r24);

        $r8 = interfaceinvoke $r7.<android.media.tv.ITvInputClient: android.os.IBinder asBinder()>();

        $r9 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        r25 = (com.android.server.tv.TvInputManagerService$ClientState) $r9;

        if r25 == null goto label3;

        $r16 = staticinvoke <com.android.server.tv.TvInputManagerService$ClientState: java.util.List access$3900(com.android.server.tv.TvInputManagerService$ClientState)>(r25);

        interfaceinvoke $r16.<java.util.List: boolean remove(java.lang.Object)>(r1);

        $z2 = virtualinvoke r25.<com.android.server.tv.TvInputManagerService$ClientState: boolean isEmpty()>();

        if $z2 == 0 goto label3;

        $r17 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: java.util.Map access$2800(com.android.server.tv.TvInputManagerService$UserState)>(r2);

        $r18 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: android.media.tv.ITvInputClient access$2300(com.android.server.tv.TvInputManagerService$SessionState)>(r24);

        $r19 = interfaceinvoke $r18.<android.media.tv.ITvInputClient: android.os.IBinder asBinder()>();

        interfaceinvoke $r17.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r19);

        $r21 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: android.media.tv.ITvInputClient access$2300(com.android.server.tv.TvInputManagerService$SessionState)>(r24);

        $r22 = interfaceinvoke $r21.<android.media.tv.ITvInputClient: android.os.IBinder asBinder()>();

        interfaceinvoke $r22.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r25, 0);

     label3:
        $r26 = r0.<com.android.server.tv.TvInputManagerService: java.util.Map mSessionIdToSessionStateMap>;

        $r27 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: java.lang.String access$3800(com.android.server.tv.TvInputManagerService$SessionState)>(r24);

        interfaceinvoke $r26.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r27);

        $r28 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: java.util.Map access$900(com.android.server.tv.TvInputManagerService$UserState)>(r2);

        $r29 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: android.content.ComponentName access$4000(com.android.server.tv.TvInputManagerService$SessionState)>(r24);

        $r30 = interfaceinvoke $r28.<java.util.Map: java.lang.Object get(java.lang.Object)>($r29);

        r31 = (com.android.server.tv.TvInputManagerService$ServiceState) $r30;

        if r31 == null goto label4;

        $r15 = staticinvoke <com.android.server.tv.TvInputManagerService$ServiceState: java.util.List access$1900(com.android.server.tv.TvInputManagerService$ServiceState)>(r31);

        interfaceinvoke $r15.<java.util.List: boolean remove(java.lang.Object)>(r1);

     label4:
        $r11 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: android.content.ComponentName access$4000(com.android.server.tv.TvInputManagerService$SessionState)>(r24);

        specialinvoke r0.<com.android.server.tv.TvInputManagerService: void updateServiceConnectionLocked(android.content.ComponentName,int)>($r11, i0);

        r32 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r32.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r1;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        r32.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = $r12;

        $r13 = r0.<com.android.server.tv.TvInputManagerService: com.android.server.tv.TvInputManagerService$WatchLogHandler mWatchLogHandler>;

        $r14 = virtualinvoke $r13.<com.android.server.tv.TvInputManagerService$WatchLogHandler: android.os.Message obtainMessage(int,java.lang.Object)>(2, r32);

        virtualinvoke $r14.<android.os.Message: void sendToTarget()>();

        return;
    }

    private void removeUser(int)
    {
        com.android.server.tv.TvInputManagerService r0;
        int i0, $i1;
        java.lang.Object r1, $r3, $r17, $r21;
        android.util.SparseArray $r2, $r16;
        java.util.Map $r4, $r6, $r7, $r9, $r10, $r13;
        java.util.Collection $r5, $r8;
        boolean $z0, $z1;
        java.util.Set $r11;
        java.util.List $r12;
        android.os.RemoteCallbackList $r14;
        android.media.tv.ITvInputService $r18, $r19;
        com.android.server.tv.TvInputManagerService$ServiceCallback $r20, r33;
        android.media.tv.ITvInputSession $r22, r29;
        java.lang.Throwable $r23;
        android.os.RemoteException $r24, $r25;
        com.android.server.tv.TvInputManagerService$UserState r26;
        java.util.Iterator r27, r31;
        com.android.server.tv.TvInputManagerService$SessionState r28;
        com.android.server.tv.TvInputManagerService$ServiceState r32;
        android.content.Context $r35;
        android.content.ServiceConnection $r36;

        r0 := @this: com.android.server.tv.TvInputManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.tv.TvInputManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.tv.TvInputManagerService: android.util.SparseArray mUserStates>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r26 = (com.android.server.tv.TvInputManagerService$UserState) $r3;

     label02:
        if r26 != null goto label05;

     label03:
        exitmonitor r1;

     label04:
        return;

     label05:
        $r4 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: java.util.Map access$1600(com.android.server.tv.TvInputManagerService$UserState)>(r26);

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Collection values()>();

        r27 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label13;

        $r21 = interfaceinvoke r27.<java.util.Iterator: java.lang.Object next()>();

        r28 = (com.android.server.tv.TvInputManagerService$SessionState) $r21;

        r29 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: android.media.tv.ITvInputSession access$1700(com.android.server.tv.TvInputManagerService$SessionState)>(r28);

     label07:
        if r29 == null goto label12;

     label08:
        $r22 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: android.media.tv.ITvInputSession access$1700(com.android.server.tv.TvInputManagerService$SessionState)>(r28);

        interfaceinvoke $r22.<android.media.tv.ITvInputSession: void release()>();

     label09:
        goto label12;

     label10:
        $r25 := @caughtexception;

     label11:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TvInputManagerService", "error in release", $r25);

     label12:
        goto label06;

     label13:
        $r6 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: java.util.Map access$1600(com.android.server.tv.TvInputManagerService$UserState)>(r26);

        interfaceinvoke $r6.<java.util.Map: void clear()>();

        $r7 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: java.util.Map access$900(com.android.server.tv.TvInputManagerService$UserState)>(r26);

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Collection values()>();

        r31 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label14:
        $z1 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label22;

        $r17 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>();

        r32 = (com.android.server.tv.TvInputManagerService$ServiceState) $r17;

        $r18 = staticinvoke <com.android.server.tv.TvInputManagerService$ServiceState: android.media.tv.ITvInputService access$2100(com.android.server.tv.TvInputManagerService$ServiceState)>(r32);

        if $r18 == null goto label21;

        r33 = staticinvoke <com.android.server.tv.TvInputManagerService$ServiceState: com.android.server.tv.TvInputManagerService$ServiceCallback access$2000(com.android.server.tv.TvInputManagerService$ServiceState)>(r32);

     label15:
        if r33 == null goto label20;

     label16:
        $r19 = staticinvoke <com.android.server.tv.TvInputManagerService$ServiceState: android.media.tv.ITvInputService access$2100(com.android.server.tv.TvInputManagerService$ServiceState)>(r32);

        $r20 = staticinvoke <com.android.server.tv.TvInputManagerService$ServiceState: com.android.server.tv.TvInputManagerService$ServiceCallback access$2000(com.android.server.tv.TvInputManagerService$ServiceState)>(r32);

        interfaceinvoke $r19.<android.media.tv.ITvInputService: void unregisterCallback(android.media.tv.ITvInputServiceCallback)>($r20);

     label17:
        goto label20;

     label18:
        $r24 := @caughtexception;

     label19:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TvInputManagerService", "error in unregisterCallback", $r24);

     label20:
        $r35 = r0.<com.android.server.tv.TvInputManagerService: android.content.Context mContext>;

        $r36 = staticinvoke <com.android.server.tv.TvInputManagerService$ServiceState: android.content.ServiceConnection access$2200(com.android.server.tv.TvInputManagerService$ServiceState)>(r32);

        virtualinvoke $r35.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r36);

     label21:
        goto label14;

     label22:
        $r9 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: java.util.Map access$900(com.android.server.tv.TvInputManagerService$UserState)>(r26);

        interfaceinvoke $r9.<java.util.Map: void clear()>();

        $r10 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: java.util.Map access$1200(com.android.server.tv.TvInputManagerService$UserState)>(r26);

        interfaceinvoke $r10.<java.util.Map: void clear()>();

        $r11 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: java.util.Set access$800(com.android.server.tv.TvInputManagerService$UserState)>(r26);

        interfaceinvoke $r11.<java.util.Set: void clear()>();

        $r12 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: java.util.List access$1500(com.android.server.tv.TvInputManagerService$UserState)>(r26);

        interfaceinvoke $r12.<java.util.List: void clear()>();

        $r13 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: java.util.Map access$2800(com.android.server.tv.TvInputManagerService$UserState)>(r26);

        interfaceinvoke $r13.<java.util.Map: void clear()>();

        $r14 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: android.os.RemoteCallbackList access$2900(com.android.server.tv.TvInputManagerService$UserState)>(r26);

        virtualinvoke $r14.<android.os.RemoteCallbackList: void kill()>();

        staticinvoke <com.android.server.tv.TvInputManagerService$UserState: android.os.IBinder access$3002(com.android.server.tv.TvInputManagerService$UserState,android.os.IBinder)>(r26, null);

        $r16 = r0.<com.android.server.tv.TvInputManagerService: android.util.SparseArray mUserStates>;

        virtualinvoke $r16.<android.util.SparseArray: void remove(int)>(i0);

        $i1 = r0.<com.android.server.tv.TvInputManagerService: int mCurrentUserId>;

        if i0 != $i1 goto label23;

        specialinvoke r0.<com.android.server.tv.TvInputManagerService: void switchUser(int)>(0);

     label23:
        exitmonitor r1;

     label24:
        return;

     label25:
        $r23 := @caughtexception;

     label26:
        exitmonitor r1;

     label27:
        throw $r23;

        catch java.lang.Throwable from label01 to label02 with label25;
        catch java.lang.Throwable from label03 to label04 with label25;
        catch java.lang.Throwable from label05 to label06 with label25;
        catch java.lang.Throwable from label06 to label07 with label25;
        catch android.os.RemoteException from label08 to label09 with label10;
        catch java.lang.Throwable from label08 to label09 with label25;
        catch java.lang.Throwable from label11 to label12 with label25;
        catch java.lang.Throwable from label13 to label14 with label25;
        catch java.lang.Throwable from label14 to label15 with label25;
        catch android.os.RemoteException from label16 to label17 with label18;
        catch java.lang.Throwable from label16 to label17 with label25;
        catch java.lang.Throwable from label19 to label20 with label25;
        catch java.lang.Throwable from label20 to label21 with label25;
        catch java.lang.Throwable from label22 to label23 with label25;
        catch java.lang.Throwable from label23 to label24 with label25;
        catch java.lang.Throwable from label26 to label27 with label25;
    }

    private int resolveCallingUserId(int, int, int, java.lang.String)
    {
        com.android.server.tv.TvInputManagerService r0;
        int i0, i1, i2, $i3;
        java.lang.String r1;

        r0 := @this: com.android.server.tv.TvInputManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        $i3 = staticinvoke <android.app.ActivityManager: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>(i0, i1, i2, 0, 0, r1, null);

        return $i3;
    }

    private void sendSessionTokenToClientLocked(android.media.tv.ITvInputClient, java.lang.String, android.os.IBinder, android.view.InputChannel, int)
    {
        com.android.server.tv.TvInputManagerService r0;
        java.lang.String r1;
        android.os.IBinder r2;
        android.view.InputChannel r3;
        int i0;
        android.os.RemoteException $r4;
        android.media.tv.ITvInputClient r5;

        r0 := @this: com.android.server.tv.TvInputManagerService;

        r5 := @parameter0: android.media.tv.ITvInputClient;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.IBinder;

        r3 := @parameter3: android.view.InputChannel;

        i0 := @parameter4: int;

     label1:
        interfaceinvoke r5.<android.media.tv.ITvInputClient: void onSessionCreated(java.lang.String,android.os.IBinder,android.view.InputChannel,int)>(r1, r2, r3, i0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TvInputManagerService", "error in onSessionCreated", $r4);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void setMainLocked(android.os.IBinder, boolean, int, int)
    {
        com.android.server.tv.TvInputManagerService r0;
        boolean z0, $z1;
        int i0, i1;
        com.android.server.tv.TvInputManagerService$SessionState r1, r9;
        android.os.IBinder $r2, $r6, r8;
        android.content.ComponentName $r3;
        com.android.server.tv.TvInputManagerService$ServiceState $r4;
        android.media.tv.ITvInputSession $r5;
        java.lang.Exception $r7;

        r0 := @this: com.android.server.tv.TvInputManagerService;

        r8 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

     label1:
        r1 = specialinvoke r0.<com.android.server.tv.TvInputManagerService: com.android.server.tv.TvInputManagerService$SessionState getSessionStateLocked(android.os.IBinder,int,int)>(r8, i0, i1);

     label2:
        r9 = r1;

     label3:
        $r2 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: android.os.IBinder access$2700(com.android.server.tv.TvInputManagerService$SessionState)>(r1);

        if $r2 == null goto label4;

        $r6 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: android.os.IBinder access$2700(com.android.server.tv.TvInputManagerService$SessionState)>(r1);

        r9 = specialinvoke r0.<com.android.server.tv.TvInputManagerService: com.android.server.tv.TvInputManagerService$SessionState getSessionStateLocked(android.os.IBinder,int,int)>($r6, 1000, i1);

     label4:
        $r3 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: android.content.ComponentName access$4000(com.android.server.tv.TvInputManagerService$SessionState)>(r9);

        $r4 = specialinvoke r0.<com.android.server.tv.TvInputManagerService: com.android.server.tv.TvInputManagerService$ServiceState getServiceStateLocked(android.content.ComponentName,int)>($r3, i1);

        $z1 = staticinvoke <com.android.server.tv.TvInputManagerService$ServiceState: boolean access$3400(com.android.server.tv.TvInputManagerService$ServiceState)>($r4);

        if $z1 != 0 goto label6;

     label5:
        return;

     label6:
        $r5 = specialinvoke r0.<com.android.server.tv.TvInputManagerService: android.media.tv.ITvInputSession getSessionLocked(com.android.server.tv.TvInputManagerService$SessionState)>(r9);

        interfaceinvoke $r5.<android.media.tv.ITvInputSession: void setMain(boolean)>(z0);

     label7:
        goto label9;

     label8:
        $r7 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TvInputManagerService", "error in setMain", $r7);

     label9:
        return;

        catch android.os.RemoteException from label1 to label2 with label8;
        catch com.android.server.tv.TvInputManagerService$SessionNotFoundException from label1 to label2 with label8;
        catch android.os.RemoteException from label3 to label4 with label8;
        catch com.android.server.tv.TvInputManagerService$SessionNotFoundException from label3 to label4 with label8;
        catch android.os.RemoteException from label4 to label5 with label8;
        catch com.android.server.tv.TvInputManagerService$SessionNotFoundException from label4 to label5 with label8;
        catch android.os.RemoteException from label6 to label7 with label8;
        catch com.android.server.tv.TvInputManagerService$SessionNotFoundException from label6 to label7 with label8;
    }

    private void setStateLocked(java.lang.String, int, int)
    {
        com.android.server.tv.TvInputManagerService r0;
        java.lang.String r1, $r15;
        int i0, i3, i4;
        com.android.server.tv.TvInputManagerService$UserState r2;
        com.android.server.tv.TvInputManagerService$TvInputState r3;
        java.util.Map $r4, $r6;
        java.lang.Object $r5, $r9;
        android.media.tv.TvInputInfo $r7;
        android.content.ComponentName $r8;
        android.media.tv.ITvInputService $r10;
        java.util.List $r11;
        boolean $z0, $z1;
        java.lang.StringBuilder $r12;
        com.android.server.tv.TvInputManagerService$ServiceState r17;

        r0 := @this: com.android.server.tv.TvInputManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i3 := @parameter2: int;

        r2 = specialinvoke r0.<com.android.server.tv.TvInputManagerService: com.android.server.tv.TvInputManagerService$UserState getOrCreateUserStateLocked(int)>(i3);

        $r4 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: java.util.Map access$1200(com.android.server.tv.TvInputManagerService$UserState)>(r2);

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (com.android.server.tv.TvInputManagerService$TvInputState) $r5;

        if r3 != null goto label1;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to setStateLocked - unknown input id ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("TvInputManagerService", $r15);

        return;

     label1:
        $r6 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: java.util.Map access$900(com.android.server.tv.TvInputManagerService$UserState)>(r2);

        $r7 = staticinvoke <com.android.server.tv.TvInputManagerService$TvInputState: android.media.tv.TvInputInfo access$1400(com.android.server.tv.TvInputManagerService$TvInputState)>(r3);

        $r8 = virtualinvoke $r7.<android.media.tv.TvInputInfo: android.content.ComponentName getComponent()>();

        $r9 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        r17 = (com.android.server.tv.TvInputManagerService$ServiceState) $r9;

        i4 = staticinvoke <com.android.server.tv.TvInputManagerService$TvInputState: int access$4100(com.android.server.tv.TvInputManagerService$TvInputState)>(r3);

        staticinvoke <com.android.server.tv.TvInputManagerService$TvInputState: int access$4102(com.android.server.tv.TvInputManagerService$TvInputState,int)>(r3, i0);

        if r17 == null goto label3;

        $r10 = staticinvoke <com.android.server.tv.TvInputManagerService$ServiceState: android.media.tv.ITvInputService access$2100(com.android.server.tv.TvInputManagerService$ServiceState)>(r17);

        if $r10 != null goto label3;

        $r11 = staticinvoke <com.android.server.tv.TvInputManagerService$ServiceState: java.util.List access$1900(com.android.server.tv.TvInputManagerService$ServiceState)>(r17);

        $z0 = interfaceinvoke $r11.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $z1 = staticinvoke <com.android.server.tv.TvInputManagerService$ServiceState: boolean access$3400(com.android.server.tv.TvInputManagerService$ServiceState)>(r17);

        if $z1 == 0 goto label3;

     label2:
        return;

     label3:
        if i4 == i0 goto label4;

        specialinvoke r0.<com.android.server.tv.TvInputManagerService: void notifyInputStateChangedLocked(com.android.server.tv.TvInputManagerService$UserState,java.lang.String,int,android.media.tv.ITvInputManagerCallback)>(r2, r1, i0, null);

     label4:
        return;
    }

    private void switchUser(int)
    {
        com.android.server.tv.TvInputManagerService r0;
        int i0, $i1, $i2, $i3;
        java.lang.Object r1, $r8, $r13, $r15, $r19, $r21;
        android.util.SparseArray $r2, $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.android.server.tv.TvInputManagerService$WatchLogHandler $r4;
        android.content.ContentResolver $r5;
        android.os.Message $r6;
        java.util.Map $r9, $r11, $r14;
        java.util.Collection $r10;
        java.util.Set $r12;
        java.util.List $r16;
        android.media.tv.ITvInputService $r17;
        com.android.server.tv.TvInputManagerService$ServiceCallback $r18, r36;
        android.media.tv.ITvInputSession $r20, $r22;
        android.os.RemoteException $r23, $r25;
        java.lang.Throwable $r24;
        com.android.server.tv.TvInputManagerService$UserState r26;
        java.util.ArrayList r27;
        java.util.Iterator r28, r30, r33;
        com.android.server.tv.TvInputManagerService$SessionState r29, r31;
        android.content.ComponentName r34;
        com.android.server.tv.TvInputManagerService$ServiceState r35;
        android.content.Context $r38;
        android.content.ServiceConnection $r39;

        r0 := @this: com.android.server.tv.TvInputManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.tv.TvInputManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $i1 = r0.<com.android.server.tv.TvInputManagerService: int mCurrentUserId>;

        if $i1 != i0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        $r2 = r0.<com.android.server.tv.TvInputManagerService: android.util.SparseArray mUserStates>;

        $i2 = r0.<com.android.server.tv.TvInputManagerService: int mCurrentUserId>;

        $z0 = virtualinvoke $r2.<android.util.SparseArray: boolean contains(int)>($i2);

        if $z0 == 0 goto label25;

        $r7 = r0.<com.android.server.tv.TvInputManagerService: android.util.SparseArray mUserStates>;

        $i3 = r0.<com.android.server.tv.TvInputManagerService: int mCurrentUserId>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object get(int)>($i3);

        r26 = (com.android.server.tv.TvInputManagerService$UserState) $r8;

        r27 = new java.util.ArrayList;

        specialinvoke r27.<java.util.ArrayList: void <init>()>();

        $r9 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: java.util.Map access$1600(com.android.server.tv.TvInputManagerService$UserState)>(r26);

        $r10 = interfaceinvoke $r9.<java.util.Map: java.util.Collection values()>();

        r28 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label06;

        $r21 = interfaceinvoke r28.<java.util.Iterator: java.lang.Object next()>();

        r29 = (com.android.server.tv.TvInputManagerService$SessionState) $r21;

        $r22 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: android.media.tv.ITvInputSession access$1700(com.android.server.tv.TvInputManagerService$SessionState)>(r29);

        if $r22 == null goto label05;

        $z5 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: boolean access$1800(com.android.server.tv.TvInputManagerService$SessionState)>(r29);

        if $z5 != 0 goto label05;

        interfaceinvoke r27.<java.util.List: boolean add(java.lang.Object)>(r29);

     label05:
        goto label04;

     label06:
        r30 = interfaceinvoke r27.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z2 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label14;

        $r19 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>();

        r31 = (com.android.server.tv.TvInputManagerService$SessionState) $r19;

     label08:
        $r20 = staticinvoke <com.android.server.tv.TvInputManagerService$SessionState: android.media.tv.ITvInputSession access$1700(com.android.server.tv.TvInputManagerService$SessionState)>(r31);

        interfaceinvoke $r20.<android.media.tv.ITvInputSession: void release()>();

     label09:
        goto label12;

     label10:
        $r23 := @caughtexception;

     label11:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TvInputManagerService", "error in release", $r23);

     label12:
        specialinvoke r0.<com.android.server.tv.TvInputManagerService: void clearSessionAndNotifyClientLocked(com.android.server.tv.TvInputManagerService$SessionState)>(r31);

     label13:
        goto label07;

     label14:
        $r11 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: java.util.Map access$900(com.android.server.tv.TvInputManagerService$UserState)>(r26);

        $r12 = interfaceinvoke $r11.<java.util.Map: java.util.Set keySet()>();

        r33 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label15:
        $z3 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label25;

        $r13 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>();

        r34 = (android.content.ComponentName) $r13;

        $r14 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: java.util.Map access$900(com.android.server.tv.TvInputManagerService$UserState)>(r26);

        $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r34);

        r35 = (com.android.server.tv.TvInputManagerService$ServiceState) $r15;

     label16:
        if r35 == null goto label24;

     label17:
        $r16 = staticinvoke <com.android.server.tv.TvInputManagerService$ServiceState: java.util.List access$1900(com.android.server.tv.TvInputManagerService$ServiceState)>(r35);

        $z4 = interfaceinvoke $r16.<java.util.List: boolean isEmpty()>();

        if $z4 == 0 goto label24;

        r36 = staticinvoke <com.android.server.tv.TvInputManagerService$ServiceState: com.android.server.tv.TvInputManagerService$ServiceCallback access$2000(com.android.server.tv.TvInputManagerService$ServiceState)>(r35);

     label18:
        if r36 == null goto label23;

     label19:
        $r17 = staticinvoke <com.android.server.tv.TvInputManagerService$ServiceState: android.media.tv.ITvInputService access$2100(com.android.server.tv.TvInputManagerService$ServiceState)>(r35);

        $r18 = staticinvoke <com.android.server.tv.TvInputManagerService$ServiceState: com.android.server.tv.TvInputManagerService$ServiceCallback access$2000(com.android.server.tv.TvInputManagerService$ServiceState)>(r35);

        interfaceinvoke $r17.<android.media.tv.ITvInputService: void unregisterCallback(android.media.tv.ITvInputServiceCallback)>($r18);

     label20:
        goto label23;

     label21:
        $r25 := @caughtexception;

     label22:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TvInputManagerService", "error in unregisterCallback", $r25);

     label23:
        $r38 = r0.<com.android.server.tv.TvInputManagerService: android.content.Context mContext>;

        $r39 = staticinvoke <com.android.server.tv.TvInputManagerService$ServiceState: android.content.ServiceConnection access$2200(com.android.server.tv.TvInputManagerService$ServiceState)>(r35);

        virtualinvoke $r38.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r39);

        interfaceinvoke r33.<java.util.Iterator: void remove()>();

     label24:
        goto label15;

     label25:
        r0.<com.android.server.tv.TvInputManagerService: int mCurrentUserId> = i0;

        specialinvoke r0.<com.android.server.tv.TvInputManagerService: com.android.server.tv.TvInputManagerService$UserState getOrCreateUserStateLocked(int)>(i0);

        specialinvoke r0.<com.android.server.tv.TvInputManagerService: void buildTvInputListLocked(int,java.lang.String[])>(i0, null);

        specialinvoke r0.<com.android.server.tv.TvInputManagerService: void buildTvContentRatingSystemListLocked(int)>(i0);

        $r4 = r0.<com.android.server.tv.TvInputManagerService: com.android.server.tv.TvInputManagerService$WatchLogHandler mWatchLogHandler>;

        $r5 = specialinvoke r0.<com.android.server.tv.TvInputManagerService: android.content.ContentResolver getContentResolverForUser(int)>(i0);

        $r6 = virtualinvoke $r4.<com.android.server.tv.TvInputManagerService$WatchLogHandler: android.os.Message obtainMessage(int,java.lang.Object)>(3, $r5);

        virtualinvoke $r6.<android.os.Message: void sendToTarget()>();

        exitmonitor r1;

     label26:
        return;

     label27:
        $r24 := @caughtexception;

     label28:
        exitmonitor r1;

     label29:
        throw $r24;

        catch java.lang.Throwable from label01 to label02 with label27;
        catch java.lang.Throwable from label03 to label04 with label27;
        catch java.lang.Throwable from label04 to label05 with label27;
        catch java.lang.Throwable from label06 to label07 with label27;
        catch java.lang.Throwable from label07 to label08 with label27;
        catch android.os.RemoteException from label08 to label09 with label10;
        catch java.lang.Throwable from label08 to label09 with label27;
        catch java.lang.Throwable from label11 to label12 with label27;
        catch java.lang.Throwable from label12 to label13 with label27;
        catch java.lang.Throwable from label14 to label15 with label27;
        catch java.lang.Throwable from label15 to label16 with label27;
        catch java.lang.Throwable from label17 to label18 with label27;
        catch android.os.RemoteException from label19 to label20 with label21;
        catch java.lang.Throwable from label19 to label20 with label27;
        catch java.lang.Throwable from label22 to label23 with label27;
        catch java.lang.Throwable from label23 to label24 with label27;
        catch java.lang.Throwable from label25 to label26 with label27;
        catch java.lang.Throwable from label28 to label29 with label27;
    }

    private void updateServiceConnectionLocked(android.content.ComponentName, int)
    {
        com.android.server.tv.TvInputManagerService r0;
        int i0, $i1;
        com.android.server.tv.TvInputManagerService$UserState r1;
        com.android.server.tv.TvInputManagerService$ServiceState r2;
        boolean z0, $z1, $z2, $z3, $z5, $z6, $z7, z9;
        java.util.Map $r3, $r10;
        java.lang.Object $r4;
        java.util.List $r5, $r16, $r17;
        android.media.tv.ITvInputService $r6, $r7;
        android.content.Context $r8, $r13;
        android.content.ServiceConnection $r9, $r14;
        android.content.Intent $r12, r19;
        android.os.UserHandle $r15;
        android.content.ComponentName r18;

        r0 := @this: com.android.server.tv.TvInputManagerService;

        r18 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        r1 = specialinvoke r0.<com.android.server.tv.TvInputManagerService: com.android.server.tv.TvInputManagerService$UserState getOrCreateUserStateLocked(int)>(i0);

        $r3 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: java.util.Map access$900(com.android.server.tv.TvInputManagerService$UserState)>(r1);

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r18);

        r2 = (com.android.server.tv.TvInputManagerService$ServiceState) $r4;

        if r2 != null goto label01;

        return;

     label01:
        z0 = staticinvoke <com.android.server.tv.TvInputManagerService$ServiceState: boolean access$3300(com.android.server.tv.TvInputManagerService$ServiceState)>(r2);

        z9 = 0;

        if z0 == 0 goto label03;

        $r17 = staticinvoke <com.android.server.tv.TvInputManagerService$ServiceState: java.util.List access$1900(com.android.server.tv.TvInputManagerService$ServiceState)>(r2);

        $z7 = interfaceinvoke $r17.<java.util.List: boolean isEmpty()>();

        if $z7 != 0 goto label02;

        return;

     label02:
        staticinvoke <com.android.server.tv.TvInputManagerService$ServiceState: boolean access$3302(com.android.server.tv.TvInputManagerService$ServiceState,boolean)>(r2, 0);

     label03:
        $i1 = r0.<com.android.server.tv.TvInputManagerService: int mCurrentUserId>;

        if i0 != $i1 goto label06;

        $r16 = staticinvoke <com.android.server.tv.TvInputManagerService$ServiceState: java.util.List access$1900(com.android.server.tv.TvInputManagerService$ServiceState)>(r2);

        $z5 = interfaceinvoke $r16.<java.util.List: boolean isEmpty()>();

        if $z5 == 0 goto label04;

        $z6 = staticinvoke <com.android.server.tv.TvInputManagerService$ServiceState: boolean access$3400(com.android.server.tv.TvInputManagerService$ServiceState)>(r2);

        if $z6 == 0 goto label05;

     label04:
        z9 = 1;

     label05:
        goto label07;

     label06:
        $r5 = staticinvoke <com.android.server.tv.TvInputManagerService$ServiceState: java.util.List access$1900(com.android.server.tv.TvInputManagerService$ServiceState)>(r2);

        $z1 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>();

        z9 = $z1 ^ 1;

     label07:
        $r6 = staticinvoke <com.android.server.tv.TvInputManagerService$ServiceState: android.media.tv.ITvInputService access$2100(com.android.server.tv.TvInputManagerService$ServiceState)>(r2);

        if $r6 != null goto label09;

        if z9 == 0 goto label09;

        $z2 = staticinvoke <com.android.server.tv.TvInputManagerService$ServiceState: boolean access$3500(com.android.server.tv.TvInputManagerService$ServiceState)>(r2);

        if $z2 == 0 goto label08;

        return;

     label08:
        $r12 = new android.content.Intent;

        specialinvoke $r12.<android.content.Intent: void <init>(java.lang.String)>("android.media.tv.TvInputService");

        r19 = virtualinvoke $r12.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r18);

        $r13 = r0.<com.android.server.tv.TvInputManagerService: android.content.Context mContext>;

        $r14 = staticinvoke <com.android.server.tv.TvInputManagerService$ServiceState: android.content.ServiceConnection access$2200(com.android.server.tv.TvInputManagerService$ServiceState)>(r2);

        $r15 = new android.os.UserHandle;

        specialinvoke $r15.<android.os.UserHandle: void <init>(int)>(i0);

        $z3 = virtualinvoke $r13.<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>(r19, $r14, 33554433, $r15);

        staticinvoke <com.android.server.tv.TvInputManagerService$ServiceState: boolean access$3502(com.android.server.tv.TvInputManagerService$ServiceState,boolean)>(r2, $z3);

        goto label10;

     label09:
        $r7 = staticinvoke <com.android.server.tv.TvInputManagerService$ServiceState: android.media.tv.ITvInputService access$2100(com.android.server.tv.TvInputManagerService$ServiceState)>(r2);

        if $r7 == null goto label10;

        if z9 != 0 goto label10;

        $r8 = r0.<com.android.server.tv.TvInputManagerService: android.content.Context mContext>;

        $r9 = staticinvoke <com.android.server.tv.TvInputManagerService$ServiceState: android.content.ServiceConnection access$2200(com.android.server.tv.TvInputManagerService$ServiceState)>(r2);

        virtualinvoke $r8.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r9);

        $r10 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: java.util.Map access$900(com.android.server.tv.TvInputManagerService$UserState)>(r1);

        interfaceinvoke $r10.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r18);

        goto label10;

     label10:
        return;
    }

    private void updateTvInputInfoLocked(com.android.server.tv.TvInputManagerService$UserState, android.media.tv.TvInputInfo)
    {
        com.android.server.tv.TvInputManagerService r0;
        android.media.tv.TvInputInfo r1;
        com.android.server.tv.TvInputManagerService$TvInputState r2;
        int i0, i3;
        java.util.Map $r3;
        java.lang.Object $r4;
        android.os.RemoteCallbackList $r6, $r7, $r8;
        android.os.IInterface $r9;
        android.media.tv.ITvInputManagerCallback $r10;
        java.lang.StringBuilder $r11;
        java.lang.String $r14, r17;
        android.os.RemoteException $r15;
        com.android.server.tv.TvInputManagerService$UserState r16;

        r0 := @this: com.android.server.tv.TvInputManagerService;

        r16 := @parameter0: com.android.server.tv.TvInputManagerService$UserState;

        r1 := @parameter1: android.media.tv.TvInputInfo;

        r17 = virtualinvoke r1.<android.media.tv.TvInputInfo: java.lang.String getId()>();

        $r3 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: java.util.Map access$1200(com.android.server.tv.TvInputManagerService$UserState)>(r16);

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r17);

        r2 = (com.android.server.tv.TvInputManagerService$TvInputState) $r4;

        if r2 != null goto label1;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to set input info - unknown input id ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("TvInputManagerService", $r14);

        return;

     label1:
        staticinvoke <com.android.server.tv.TvInputManagerService$TvInputState: android.media.tv.TvInputInfo access$1402(com.android.server.tv.TvInputManagerService$TvInputState,android.media.tv.TvInputInfo)>(r2, r1);

        $r6 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: android.os.RemoteCallbackList access$2900(com.android.server.tv.TvInputManagerService$UserState)>(r16);

        i0 = virtualinvoke $r6.<android.os.RemoteCallbackList: int beginBroadcast()>();

        i3 = 0;

     label2:
        if i3 >= i0 goto label7;

     label3:
        $r8 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: android.os.RemoteCallbackList access$2900(com.android.server.tv.TvInputManagerService$UserState)>(r16);

        $r9 = virtualinvoke $r8.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i3);

        $r10 = (android.media.tv.ITvInputManagerCallback) $r9;

        interfaceinvoke $r10.<android.media.tv.ITvInputManagerCallback: void onTvInputInfoUpdated(android.media.tv.TvInputInfo)>(r1);

     label4:
        goto label6;

     label5:
        $r15 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TvInputManagerService", "failed to report updated input info to callback", $r15);

     label6:
        i3 = i3 + 1;

        goto label2;

     label7:
        $r7 = staticinvoke <com.android.server.tv.TvInputManagerService$UserState: android.os.RemoteCallbackList access$2900(com.android.server.tv.TvInputManagerService$UserState)>(r16);

        virtualinvoke $r7.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public void onBootPhase(int)
    {
        com.android.server.tv.TvInputManagerService r0;
        int i0, $i1, $i2;
        java.lang.Object r1;
        java.lang.Throwable $r3;
        com.android.server.tv.TvInputHardwareManager $r4;

        r0 := @this: com.android.server.tv.TvInputManagerService;

        i0 := @parameter0: int;

        if i0 != 500 goto label1;

        specialinvoke r0.<com.android.server.tv.TvInputManagerService: void registerBroadcastReceivers()>();

        goto label7;

     label1:
        if i0 != 600 goto label7;

        r1 = r0.<com.android.server.tv.TvInputManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label2:
        $i1 = r0.<com.android.server.tv.TvInputManagerService: int mCurrentUserId>;

        specialinvoke r0.<com.android.server.tv.TvInputManagerService: void buildTvInputListLocked(int,java.lang.String[])>($i1, null);

        $i2 = r0.<com.android.server.tv.TvInputManagerService: int mCurrentUserId>;

        specialinvoke r0.<com.android.server.tv.TvInputManagerService: void buildTvContentRatingSystemListLocked(int)>($i2);

        exitmonitor r1;

     label3:
        goto label7;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r3;

     label7:
        $r4 = r0.<com.android.server.tv.TvInputManagerService: com.android.server.tv.TvInputHardwareManager mTvInputHardwareManager>;

        virtualinvoke $r4.<com.android.server.tv.TvInputHardwareManager: void onBootPhase(int)>(i0);

        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void onStart()
    {
        com.android.server.tv.TvInputManagerService r0;
        com.android.server.tv.TvInputManagerService$BinderService $r1;

        r0 := @this: com.android.server.tv.TvInputManagerService;

        $r1 = new com.android.server.tv.TvInputManagerService$BinderService;

        specialinvoke $r1.<com.android.server.tv.TvInputManagerService$BinderService: void <init>(com.android.server.tv.TvInputManagerService,com.android.server.tv.TvInputManagerService$1)>(r0, null);

        virtualinvoke r0.<com.android.server.tv.TvInputManagerService: void publishBinderService(java.lang.String,android.os.IBinder)>("tv_input", $r1);

        return;
    }

    public void onUnlockUser(int)
    {
        com.android.server.tv.TvInputManagerService r0;
        int i0, $i1, $i2, $i3;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.tv.TvInputManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.tv.TvInputManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $i1 = r0.<com.android.server.tv.TvInputManagerService: int mCurrentUserId>;

        if $i1 == i0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        $i2 = r0.<com.android.server.tv.TvInputManagerService: int mCurrentUserId>;

        specialinvoke r0.<com.android.server.tv.TvInputManagerService: void buildTvInputListLocked(int,java.lang.String[])>($i2, null);

        $i3 = r0.<com.android.server.tv.TvInputManagerService: int mCurrentUserId>;

        specialinvoke r0.<com.android.server.tv.TvInputManagerService: void buildTvContentRatingSystemListLocked(int)>($i3);

        exitmonitor r1;

     label4:
        return;

     label5:
        $r3 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }
}
