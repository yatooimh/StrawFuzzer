public final class com.android.server.tv.UinputBridge extends java.lang.Object
{
    private final dalvik.system.CloseGuard mCloseGuard;
    private long mPtr;
    private android.os.IBinder mToken;

    private void <init>(android.os.IBinder, long)
    {
        com.android.server.tv.UinputBridge r0;
        android.os.IBinder r1;
        long l0;
        dalvik.system.CloseGuard r2;

        r0 := @this: com.android.server.tv.UinputBridge;

        r1 := @parameter0: android.os.IBinder;

        l0 := @parameter1: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r2 = staticinvoke <dalvik.system.CloseGuard: dalvik.system.CloseGuard get()>();

        r0.<com.android.server.tv.UinputBridge: dalvik.system.CloseGuard mCloseGuard> = r2;

        r0.<com.android.server.tv.UinputBridge: long mPtr> = l0;

        r0.<com.android.server.tv.UinputBridge: android.os.IBinder mToken> = r1;

        virtualinvoke r2.<dalvik.system.CloseGuard: void open(java.lang.String)>("close");

        return;
    }

    public void <init>(android.os.IBinder, java.lang.String, int, int, int) throws java.io.IOException
    {
        com.android.server.tv.UinputBridge r0;
        java.lang.String r1, $r6, $r11;
        int i0, i1, i2;
        long l3;
        dalvik.system.CloseGuard $r2, $r12;
        java.lang.IllegalArgumentException $r3, $r4, $r5;
        byte $b4;
        java.lang.StringBuilder $r7;
        java.io.IOException $r10;
        android.os.IBinder r13;

        r0 := @this: com.android.server.tv.UinputBridge;

        r13 := @parameter0: android.os.IBinder;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <dalvik.system.CloseGuard: dalvik.system.CloseGuard get()>();

        r0.<com.android.server.tv.UinputBridge: dalvik.system.CloseGuard mCloseGuard> = $r2;

        if i0 < 1 goto label4;

        if i1 < 1 goto label4;

        if i2 < 1 goto label3;

        if i2 > 32 goto label3;

        if r13 == null goto label2;

        $r6 = virtualinvoke r13.<java.lang.Object: java.lang.String toString()>();

        l3 = staticinvoke <com.android.server.tv.UinputBridge: long nativeOpen(java.lang.String,java.lang.String,int,int,int)>(r1, $r6, i0, i1, i2);

        r0.<com.android.server.tv.UinputBridge: long mPtr> = l3;

        $b4 = l3 cmp 0L;

        if $b4 == 0 goto label1;

        r0.<com.android.server.tv.UinputBridge: android.os.IBinder mToken> = r13;

        $r12 = r0.<com.android.server.tv.UinputBridge: dalvik.system.CloseGuard mCloseGuard>;

        virtualinvoke $r12.<dalvik.system.CloseGuard: void open(java.lang.String)>("close");

        return;

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not open uinput device ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = new java.io.IOException;

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label2:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Token cannot be null");

        throw $r5;

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Touchpad must support between 1 and 32 pointers.");

        throw $r4;

     label4:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Touchpad must be at least 1x1.");

        throw $r3;
    }

    private static native void nativeClear(long);

    private static native void nativeClose(long);

    private static native long nativeGamepadOpen(java.lang.String, java.lang.String);

    private static native long nativeOpen(java.lang.String, java.lang.String, int, int, int);

    private static native void nativeSendGamepadAxisValue(long, int, float);

    private static native void nativeSendGamepadKey(long, int, boolean);

    private static native void nativeSendKey(long, int, boolean);

    private static native void nativeSendPointerDown(long, int, int, int);

    private static native void nativeSendPointerSync(long);

    private static native void nativeSendPointerUp(long, int);

    public static com.android.server.tv.UinputBridge openGamepad(android.os.IBinder, java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, $r2, $r7;
        long l0;
        java.lang.IllegalArgumentException $r1;
        byte $b1;
        java.lang.StringBuilder $r3;
        java.io.IOException $r6;
        com.android.server.tv.UinputBridge $r8;
        android.os.IBinder r9;

        r9 := @parameter0: android.os.IBinder;

        r0 := @parameter1: java.lang.String;

        if r9 == null goto label2;

        $r2 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>();

        l0 = staticinvoke <com.android.server.tv.UinputBridge: long nativeGamepadOpen(java.lang.String,java.lang.String)>(r0, $r2);

        $b1 = l0 cmp 0L;

        if $b1 == 0 goto label1;

        $r8 = new com.android.server.tv.UinputBridge;

        specialinvoke $r8.<com.android.server.tv.UinputBridge: void <init>(android.os.IBinder,long)>(r9, l0);

        return $r8;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not open uinput device ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = new java.io.IOException;

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label2:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Token cannot be null");

        throw $r1;
    }

    public void clear(android.os.IBinder)
    {
        com.android.server.tv.UinputBridge r0;
        android.os.IBinder r1;
        boolean $z0;
        long $l0;

        r0 := @this: com.android.server.tv.UinputBridge;

        r1 := @parameter0: android.os.IBinder;

        $z0 = virtualinvoke r0.<com.android.server.tv.UinputBridge: boolean isTokenValid(android.os.IBinder)>(r1);

        if $z0 == 0 goto label1;

        $l0 = r0.<com.android.server.tv.UinputBridge: long mPtr>;

        staticinvoke <com.android.server.tv.UinputBridge: void nativeClear(long)>($l0);

     label1:
        return;
    }

    public void close(android.os.IBinder)
    {
        com.android.server.tv.UinputBridge r0;
        android.os.IBinder r1;
        boolean $z0;
        long $l0, $l2;
        byte $b1;
        dalvik.system.CloseGuard $r2;

        r0 := @this: com.android.server.tv.UinputBridge;

        r1 := @parameter0: android.os.IBinder;

        $z0 = virtualinvoke r0.<com.android.server.tv.UinputBridge: boolean isTokenValid(android.os.IBinder)>(r1);

        if $z0 == 0 goto label1;

        $l0 = r0.<com.android.server.tv.UinputBridge: long mPtr>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        virtualinvoke r0.<com.android.server.tv.UinputBridge: void clear(android.os.IBinder)>(r1);

        $l2 = r0.<com.android.server.tv.UinputBridge: long mPtr>;

        staticinvoke <com.android.server.tv.UinputBridge: void nativeClose(long)>($l2);

        r0.<com.android.server.tv.UinputBridge: long mPtr> = 0L;

        $r2 = r0.<com.android.server.tv.UinputBridge: dalvik.system.CloseGuard mCloseGuard>;

        virtualinvoke $r2.<dalvik.system.CloseGuard: void close()>();

     label1:
        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        com.android.server.tv.UinputBridge r0;
        dalvik.system.CloseGuard $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.tv.UinputBridge;

     label1:
        $r2 = r0.<com.android.server.tv.UinputBridge: dalvik.system.CloseGuard mCloseGuard>;

        virtualinvoke $r2.<dalvik.system.CloseGuard: void warnIfOpen()>();

        $r3 = r0.<com.android.server.tv.UinputBridge: android.os.IBinder mToken>;

        virtualinvoke r0.<com.android.server.tv.UinputBridge: void close(android.os.IBinder)>($r3);

     label2:
        r0.<com.android.server.tv.UinputBridge: android.os.IBinder mToken> = null;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label3:
        $r4 := @caughtexception;

        r0.<com.android.server.tv.UinputBridge: android.os.IBinder mToken> = null;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.os.IBinder getToken()
    {
        com.android.server.tv.UinputBridge r0;
        android.os.IBinder $r1;

        r0 := @this: com.android.server.tv.UinputBridge;

        $r1 = r0.<com.android.server.tv.UinputBridge: android.os.IBinder mToken>;

        return $r1;
    }

    protected boolean isTokenValid(android.os.IBinder)
    {
        com.android.server.tv.UinputBridge r0;
        android.os.IBinder r1, $r2;
        boolean $z0;

        r0 := @this: com.android.server.tv.UinputBridge;

        r1 := @parameter0: android.os.IBinder;

        $r2 = r0.<com.android.server.tv.UinputBridge: android.os.IBinder mToken>;

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    public void sendGamepadAxisValue(android.os.IBinder, int, float)
    {
        com.android.server.tv.UinputBridge r0;
        android.os.IBinder r1;
        int i0;
        float f0;
        boolean $z0;
        long $l1;

        r0 := @this: com.android.server.tv.UinputBridge;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        f0 := @parameter2: float;

        $z0 = virtualinvoke r0.<com.android.server.tv.UinputBridge: boolean isTokenValid(android.os.IBinder)>(r1);

        if $z0 == 0 goto label1;

        $l1 = r0.<com.android.server.tv.UinputBridge: long mPtr>;

        staticinvoke <com.android.server.tv.UinputBridge: void nativeSendGamepadAxisValue(long,int,float)>($l1, i0, f0);

     label1:
        return;
    }

    public void sendGamepadKey(android.os.IBinder, int, boolean)
    {
        com.android.server.tv.UinputBridge r0;
        android.os.IBinder r1;
        int i0;
        boolean z0, $z1;
        long $l1;

        r0 := @this: com.android.server.tv.UinputBridge;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $z1 = virtualinvoke r0.<com.android.server.tv.UinputBridge: boolean isTokenValid(android.os.IBinder)>(r1);

        if $z1 == 0 goto label1;

        $l1 = r0.<com.android.server.tv.UinputBridge: long mPtr>;

        staticinvoke <com.android.server.tv.UinputBridge: void nativeSendGamepadKey(long,int,boolean)>($l1, i0, z0);

     label1:
        return;
    }

    public void sendKeyDown(android.os.IBinder, int)
    {
        com.android.server.tv.UinputBridge r0;
        android.os.IBinder r1;
        int i0;
        boolean $z0;
        long $l1;

        r0 := @this: com.android.server.tv.UinputBridge;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<com.android.server.tv.UinputBridge: boolean isTokenValid(android.os.IBinder)>(r1);

        if $z0 == 0 goto label1;

        $l1 = r0.<com.android.server.tv.UinputBridge: long mPtr>;

        staticinvoke <com.android.server.tv.UinputBridge: void nativeSendKey(long,int,boolean)>($l1, i0, 1);

     label1:
        return;
    }

    public void sendKeyUp(android.os.IBinder, int)
    {
        com.android.server.tv.UinputBridge r0;
        android.os.IBinder r1;
        int i0;
        boolean $z0;
        long $l1;

        r0 := @this: com.android.server.tv.UinputBridge;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<com.android.server.tv.UinputBridge: boolean isTokenValid(android.os.IBinder)>(r1);

        if $z0 == 0 goto label1;

        $l1 = r0.<com.android.server.tv.UinputBridge: long mPtr>;

        staticinvoke <com.android.server.tv.UinputBridge: void nativeSendKey(long,int,boolean)>($l1, i0, 0);

     label1:
        return;
    }

    public void sendPointerDown(android.os.IBinder, int, int, int)
    {
        com.android.server.tv.UinputBridge r0;
        android.os.IBinder r1;
        int i0, i1, i2;
        boolean $z0;
        long $l3;

        r0 := @this: com.android.server.tv.UinputBridge;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $z0 = virtualinvoke r0.<com.android.server.tv.UinputBridge: boolean isTokenValid(android.os.IBinder)>(r1);

        if $z0 == 0 goto label1;

        $l3 = r0.<com.android.server.tv.UinputBridge: long mPtr>;

        staticinvoke <com.android.server.tv.UinputBridge: void nativeSendPointerDown(long,int,int,int)>($l3, i0, i1, i2);

     label1:
        return;
    }

    public void sendPointerSync(android.os.IBinder)
    {
        com.android.server.tv.UinputBridge r0;
        android.os.IBinder r1;
        boolean $z0;
        long $l0;

        r0 := @this: com.android.server.tv.UinputBridge;

        r1 := @parameter0: android.os.IBinder;

        $z0 = virtualinvoke r0.<com.android.server.tv.UinputBridge: boolean isTokenValid(android.os.IBinder)>(r1);

        if $z0 == 0 goto label1;

        $l0 = r0.<com.android.server.tv.UinputBridge: long mPtr>;

        staticinvoke <com.android.server.tv.UinputBridge: void nativeSendPointerSync(long)>($l0);

     label1:
        return;
    }

    public void sendPointerUp(android.os.IBinder, int)
    {
        com.android.server.tv.UinputBridge r0;
        android.os.IBinder r1;
        int i0;
        boolean $z0;
        long $l1;

        r0 := @this: com.android.server.tv.UinputBridge;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<com.android.server.tv.UinputBridge: boolean isTokenValid(android.os.IBinder)>(r1);

        if $z0 == 0 goto label1;

        $l1 = r0.<com.android.server.tv.UinputBridge: long mPtr>;

        staticinvoke <com.android.server.tv.UinputBridge: void nativeSendPointerUp(long,int)>($l1, i0);

     label1:
        return;
    }
}
