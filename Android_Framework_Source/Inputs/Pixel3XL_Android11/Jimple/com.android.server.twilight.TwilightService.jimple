public final class com.android.server.twilight.TwilightService extends com.android.server.SystemService implements android.app.AlarmManager$OnAlarmListener, android.os.Handler$Callback, android.location.LocationListener
{
    private static final java.lang.String ATTRIBUTION_TAG;
    private static final boolean DEBUG;
    private static final int MSG_START_LISTENING;
    private static final int MSG_STOP_LISTENING;
    private static final java.lang.String TAG;
    protected android.app.AlarmManager mAlarmManager;
    private boolean mBootCompleted;
    private final android.os.Handler mHandler;
    private boolean mHasListeners;
    protected android.location.Location mLastLocation;
    protected com.android.server.twilight.TwilightState mLastTwilightState;
    private final android.util.ArrayMap mListeners;
    private android.location.LocationManager mLocationManager;
    private android.content.BroadcastReceiver mTimeChangedReceiver;

    public void <init>(android.content.Context)
    {
        com.android.server.twilight.TwilightService r0;
        android.content.Context r1, $r2;
        android.util.ArrayMap $r3;
        android.os.Handler $r4;
        android.os.Looper $r5;

        r0 := @this: com.android.server.twilight.TwilightService;

        r1 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r1.<android.content.Context: android.content.Context createAttributionContext(java.lang.String)>("TwilightService");

        specialinvoke r0.<com.android.server.SystemService: void <init>(android.content.Context)>($r2);

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.twilight.TwilightService: android.util.ArrayMap mListeners> = $r3;

        $r4 = new android.os.Handler;

        $r5 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r4.<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback)>($r5, r0);

        r0.<com.android.server.twilight.TwilightService: android.os.Handler mHandler> = $r4;

        return;
    }

    static android.util.ArrayMap access$000(com.android.server.twilight.TwilightService)
    {
        com.android.server.twilight.TwilightService r0;
        android.util.ArrayMap $r1;

        r0 := @parameter0: com.android.server.twilight.TwilightService;

        $r1 = r0.<com.android.server.twilight.TwilightService: android.util.ArrayMap mListeners>;

        return $r1;
    }

    static android.os.Handler access$100(com.android.server.twilight.TwilightService)
    {
        com.android.server.twilight.TwilightService r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.twilight.TwilightService;

        $r1 = r0.<com.android.server.twilight.TwilightService: android.os.Handler mHandler>;

        return $r1;
    }

    static void access$200(com.android.server.twilight.TwilightService)
    {
        com.android.server.twilight.TwilightService r0;

        r0 := @parameter0: com.android.server.twilight.TwilightService;

        specialinvoke r0.<com.android.server.twilight.TwilightService: void updateTwilightState()>();

        return;
    }

    private static com.android.server.twilight.TwilightState calculateTwilightState(android.location.Location, long)
    {
        long l0, l1, $l2, $l5, $l6, l7, l8;
        android.icu.util.Calendar r0;
        android.icu.impl.CalendarAstronomer $r1;
        double $d0, $d1;
        byte $b3, $b4;
        android.location.Location r2;
        com.android.server.twilight.TwilightState $r4;

        r2 := @parameter0: android.location.Location;

        l0 := @parameter1: long;

        if r2 != null goto label1;

        return null;

     label1:
        $r1 = new android.icu.impl.CalendarAstronomer;

        $d0 = virtualinvoke r2.<android.location.Location: double getLongitude()>();

        $d1 = virtualinvoke r2.<android.location.Location: double getLatitude()>();

        specialinvoke $r1.<android.icu.impl.CalendarAstronomer: void <init>(double,double)>($d0, $d1);

        r0 = staticinvoke <android.icu.util.Calendar: android.icu.util.Calendar getInstance()>();

        virtualinvoke r0.<android.icu.util.Calendar: void setTimeInMillis(long)>(l0);

        virtualinvoke r0.<android.icu.util.Calendar: void set(int,int)>(11, 12);

        virtualinvoke r0.<android.icu.util.Calendar: void set(int,int)>(12, 0);

        virtualinvoke r0.<android.icu.util.Calendar: void set(int,int)>(13, 0);

        virtualinvoke r0.<android.icu.util.Calendar: void set(int,int)>(14, 0);

        $l2 = virtualinvoke r0.<android.icu.util.Calendar: long getTimeInMillis()>();

        virtualinvoke $r1.<android.icu.impl.CalendarAstronomer: void setTime(long)>($l2);

        l1 = virtualinvoke $r1.<android.icu.impl.CalendarAstronomer: long getSunRiseSet(boolean)>(1);

        l7 = virtualinvoke $r1.<android.icu.impl.CalendarAstronomer: long getSunRiseSet(boolean)>(0);

        $b3 = l7 cmp l0;

        if $b3 >= 0 goto label2;

        virtualinvoke r0.<android.icu.util.Calendar: void add(int,int)>(5, 1);

        $l6 = virtualinvoke r0.<android.icu.util.Calendar: long getTimeInMillis()>();

        virtualinvoke $r1.<android.icu.impl.CalendarAstronomer: void setTime(long)>($l6);

        l8 = virtualinvoke $r1.<android.icu.impl.CalendarAstronomer: long getSunRiseSet(boolean)>(1);

        goto label3;

     label2:
        l8 = l1;

        $b4 = l1 cmp l0;

        if $b4 <= 0 goto label3;

        virtualinvoke r0.<android.icu.util.Calendar: void add(int,int)>(5, -1);

        $l5 = virtualinvoke r0.<android.icu.util.Calendar: long getTimeInMillis()>();

        virtualinvoke $r1.<android.icu.impl.CalendarAstronomer: void setTime(long)>($l5);

        l7 = virtualinvoke $r1.<android.icu.impl.CalendarAstronomer: long getSunRiseSet(boolean)>(0);

        l8 = l1;

     label3:
        $r4 = new com.android.server.twilight.TwilightState;

        specialinvoke $r4.<com.android.server.twilight.TwilightState: void <init>(long,long)>(l8, l7);

        return $r4;
    }

    static void lambda$updateTwilightState$0(com.android.server.twilight.TwilightListener, com.android.server.twilight.TwilightState)
    {
        com.android.server.twilight.TwilightListener r0;
        com.android.server.twilight.TwilightState r1;

        r0 := @parameter0: com.android.server.twilight.TwilightListener;

        r1 := @parameter1: com.android.server.twilight.TwilightState;

        interfaceinvoke r0.<com.android.server.twilight.TwilightListener: void onTwilightStateChanged(com.android.server.twilight.TwilightState)>(r1);

        return;
    }

    private void startListening()
    {
        com.android.server.twilight.TwilightService r0;
        android.location.LocationManager $r2, $r4, $r11, $r12, $r13, $r17;
        android.os.Looper $r3;
        android.location.Location $r5;
        com.android.server.twilight.TwilightService$2 $r6;
        android.content.IntentFilter $r7;
        android.content.Context $r8, $r14, $r18;
        android.content.BroadcastReceiver $r9, $r21;
        boolean $z0, $z1;
        java.util.concurrent.Executor $r15, $r19;
        com.android.server.twilight._$$Lambda$QlMS1hfADW_S9aqM_RavcEKO3N0 $r16, $r20;

        r0 := @this: com.android.server.twilight.TwilightService;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("TwilightService", "startListening");

        $r2 = r0.<com.android.server.twilight.TwilightService: android.location.LocationManager mLocationManager>;

        $r3 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        virtualinvoke $r2.<android.location.LocationManager: void requestLocationUpdates(android.location.LocationRequest,android.location.LocationListener,android.os.Looper)>(null, r0, $r3);

        $r4 = r0.<com.android.server.twilight.TwilightService: android.location.LocationManager mLocationManager>;

        $r5 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastLocation()>();

        if $r5 != null goto label2;

        $r11 = r0.<com.android.server.twilight.TwilightService: android.location.LocationManager mLocationManager>;

        $z0 = virtualinvoke $r11.<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>("network");

        if $z0 == 0 goto label1;

        $r17 = r0.<com.android.server.twilight.TwilightService: android.location.LocationManager mLocationManager>;

        $r18 = virtualinvoke r0.<com.android.server.twilight.TwilightService: android.content.Context getContext()>();

        $r19 = virtualinvoke $r18.<android.content.Context: java.util.concurrent.Executor getMainExecutor()>();

        $r20 = new com.android.server.twilight._$$Lambda$QlMS1hfADW_S9aqM_RavcEKO3N0;

        specialinvoke $r20.<com.android.server.twilight._$$Lambda$QlMS1hfADW_S9aqM_RavcEKO3N0: void <init>(com.android.server.twilight.TwilightService)>(r0);

        virtualinvoke $r17.<android.location.LocationManager: void getCurrentLocation(java.lang.String,android.os.CancellationSignal,java.util.concurrent.Executor,java.util.function.Consumer)>("network", null, $r19, $r20);

        goto label2;

     label1:
        $r12 = r0.<com.android.server.twilight.TwilightService: android.location.LocationManager mLocationManager>;

        $z1 = virtualinvoke $r12.<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>("gps");

        if $z1 == 0 goto label2;

        $r13 = r0.<com.android.server.twilight.TwilightService: android.location.LocationManager mLocationManager>;

        $r14 = virtualinvoke r0.<com.android.server.twilight.TwilightService: android.content.Context getContext()>();

        $r15 = virtualinvoke $r14.<android.content.Context: java.util.concurrent.Executor getMainExecutor()>();

        $r16 = new com.android.server.twilight._$$Lambda$QlMS1hfADW_S9aqM_RavcEKO3N0;

        specialinvoke $r16.<com.android.server.twilight._$$Lambda$QlMS1hfADW_S9aqM_RavcEKO3N0: void <init>(com.android.server.twilight.TwilightService)>(r0);

        virtualinvoke $r13.<android.location.LocationManager: void getCurrentLocation(java.lang.String,android.os.CancellationSignal,java.util.concurrent.Executor,java.util.function.Consumer)>("gps", null, $r15, $r16);

     label2:
        $r21 = r0.<com.android.server.twilight.TwilightService: android.content.BroadcastReceiver mTimeChangedReceiver>;

        if $r21 != null goto label3;

        $r6 = new com.android.server.twilight.TwilightService$2;

        specialinvoke $r6.<com.android.server.twilight.TwilightService$2: void <init>(com.android.server.twilight.TwilightService)>(r0);

        r0.<com.android.server.twilight.TwilightService: android.content.BroadcastReceiver mTimeChangedReceiver> = $r6;

        $r7 = new android.content.IntentFilter;

        specialinvoke $r7.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.TIME_SET");

        virtualinvoke $r7.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.TIMEZONE_CHANGED");

        $r8 = virtualinvoke r0.<com.android.server.twilight.TwilightService: android.content.Context getContext()>();

        $r9 = r0.<com.android.server.twilight.TwilightService: android.content.BroadcastReceiver mTimeChangedReceiver>;

        virtualinvoke $r8.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r9, $r7);

     label3:
        specialinvoke r0.<com.android.server.twilight.TwilightService: void updateTwilightState()>();

        return;
    }

    private void stopListening()
    {
        com.android.server.twilight.TwilightService r0;
        android.content.BroadcastReceiver $r1, $r6;
        com.android.server.twilight.TwilightState $r2;
        android.location.LocationManager $r3;
        android.app.AlarmManager $r4;
        android.content.Context $r5;

        r0 := @this: com.android.server.twilight.TwilightService;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("TwilightService", "stopListening");

        $r1 = r0.<com.android.server.twilight.TwilightService: android.content.BroadcastReceiver mTimeChangedReceiver>;

        if $r1 == null goto label1;

        $r5 = virtualinvoke r0.<com.android.server.twilight.TwilightService: android.content.Context getContext()>();

        $r6 = r0.<com.android.server.twilight.TwilightService: android.content.BroadcastReceiver mTimeChangedReceiver>;

        virtualinvoke $r5.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r6);

        r0.<com.android.server.twilight.TwilightService: android.content.BroadcastReceiver mTimeChangedReceiver> = null;

     label1:
        $r2 = r0.<com.android.server.twilight.TwilightService: com.android.server.twilight.TwilightState mLastTwilightState>;

        if $r2 == null goto label2;

        $r4 = r0.<com.android.server.twilight.TwilightService: android.app.AlarmManager mAlarmManager>;

        virtualinvoke $r4.<android.app.AlarmManager: void cancel(android.app.AlarmManager$OnAlarmListener)>(r0);

     label2:
        $r3 = r0.<com.android.server.twilight.TwilightService: android.location.LocationManager mLocationManager>;

        virtualinvoke $r3.<android.location.LocationManager: void removeUpdates(android.location.LocationListener)>(r0);

        r0.<com.android.server.twilight.TwilightService: android.location.Location mLastLocation> = null;

        return;
    }

    private void updateTwilightState()
    {
        com.android.server.twilight.TwilightService r0;
        com.android.server.twilight.TwilightListener r1;
        android.os.Handler r2, $r6;
        com.android.server.twilight._$$Lambda$TwilightService$stdw4_ZXNiEaXmDt9g9s8D1zEQU r3;
        android.location.LocationManager $r4;
        com.android.server.twilight.TwilightState $r5, r15;
        boolean $z0, $z1;
        android.app.AlarmManager $r7;
        android.util.ArrayMap $r8, $r9, $r11, r16;
        int $i0, i2;
        java.lang.Object $r10, $r12;
        java.lang.Throwable $r13;
        long l1, l3;
        android.location.Location r14;

        r0 := @this: com.android.server.twilight.TwilightService;

        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r14 = r0.<com.android.server.twilight.TwilightService: android.location.Location mLastLocation>;

        if r14 == null goto label01;

        goto label02;

     label01:
        $r4 = r0.<com.android.server.twilight.TwilightService: android.location.LocationManager mLocationManager>;

        r14 = virtualinvoke $r4.<android.location.LocationManager: android.location.Location getLastLocation()>();

     label02:
        r15 = staticinvoke <com.android.server.twilight.TwilightService: com.android.server.twilight.TwilightState calculateTwilightState(android.location.Location,long)>(r14, l1);

        r16 = r0.<com.android.server.twilight.TwilightService: android.util.ArrayMap mListeners>;

        entermonitor r16;

     label03:
        $r5 = r0.<com.android.server.twilight.TwilightService: com.android.server.twilight.TwilightState mLastTwilightState>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r5, r15);

        if $z0 != 0 goto label07;

        r0.<com.android.server.twilight.TwilightService: com.android.server.twilight.TwilightState mLastTwilightState> = r15;

        $r8 = r0.<com.android.server.twilight.TwilightService: android.util.ArrayMap mListeners>;

        $i0 = virtualinvoke $r8.<android.util.ArrayMap: int size()>();

        i2 = $i0 - 1;

     label04:
        if i2 < 0 goto label07;

     label05:
        $r9 = r0.<com.android.server.twilight.TwilightService: android.util.ArrayMap mListeners>;

        $r10 = virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i2);

        r1 = (com.android.server.twilight.TwilightListener) $r10;

        $r11 = r0.<com.android.server.twilight.TwilightService: android.util.ArrayMap mListeners>;

        $r12 = virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i2);

        r2 = (android.os.Handler) $r12;

        r3 = new com.android.server.twilight._$$Lambda$TwilightService$stdw4_ZXNiEaXmDt9g9s8D1zEQU;

        specialinvoke r3.<com.android.server.twilight._$$Lambda$TwilightService$stdw4_ZXNiEaXmDt9g9s8D1zEQU: void <init>(com.android.server.twilight.TwilightListener,com.android.server.twilight.TwilightState)>(r1, r15);

        virtualinvoke r2.<android.os.Handler: boolean post(java.lang.Runnable)>(r3);

     label06:
        i2 = i2 + -1;

        goto label04;

     label07:
        exitmonitor r16;

     label08:
        if r15 == null goto label11;

        $z1 = virtualinvoke r15.<com.android.server.twilight.TwilightState: boolean isNight()>();

        if $z1 == 0 goto label09;

        l3 = virtualinvoke r15.<com.android.server.twilight.TwilightState: long sunriseTimeMillis()>();

        goto label10;

     label09:
        l3 = virtualinvoke r15.<com.android.server.twilight.TwilightState: long sunsetTimeMillis()>();

     label10:
        $r7 = r0.<com.android.server.twilight.TwilightService: android.app.AlarmManager mAlarmManager>;

        $r6 = r0.<com.android.server.twilight.TwilightService: android.os.Handler mHandler>;

        virtualinvoke $r7.<android.app.AlarmManager: void setExact(int,long,java.lang.String,android.app.AlarmManager$OnAlarmListener,android.os.Handler)>(1, l3, "TwilightService", r0, $r6);

     label11:
        return;

     label12:
        $r13 := @caughtexception;

     label13:
        exitmonitor r16;

     label14:
        throw $r13;

        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public boolean handleMessage(android.os.Message)
    {
        com.android.server.twilight.TwilightService r0;
        android.os.Message r1;
        int i0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.android.server.twilight.TwilightService;

        r1 := @parameter0: android.os.Message;

        i0 = r1.<android.os.Message: int what>;

        if i0 == 1 goto label3;

        if i0 == 2 goto label1;

        return 0;

     label1:
        $z2 = r0.<com.android.server.twilight.TwilightService: boolean mHasListeners>;

        if $z2 == 0 goto label2;

        r0.<com.android.server.twilight.TwilightService: boolean mHasListeners> = 0;

        $z3 = r0.<com.android.server.twilight.TwilightService: boolean mBootCompleted>;

        if $z3 == 0 goto label2;

        specialinvoke r0.<com.android.server.twilight.TwilightService: void stopListening()>();

     label2:
        return 1;

     label3:
        $z0 = r0.<com.android.server.twilight.TwilightService: boolean mHasListeners>;

        if $z0 != 0 goto label4;

        r0.<com.android.server.twilight.TwilightService: boolean mHasListeners> = 1;

        $z1 = r0.<com.android.server.twilight.TwilightService: boolean mBootCompleted>;

        if $z1 == 0 goto label4;

        specialinvoke r0.<com.android.server.twilight.TwilightService: void startListening()>();

     label4:
        return 1;
    }

    public void onAlarm()
    {
        com.android.server.twilight.TwilightService r0;

        r0 := @this: com.android.server.twilight.TwilightService;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("TwilightService", "onAlarm");

        specialinvoke r0.<com.android.server.twilight.TwilightService: void updateTwilightState()>();

        return;
    }

    public void onBootPhase(int)
    {
        com.android.server.twilight.TwilightService r0;
        int i0;
        android.content.Context r1;
        java.lang.Object $r2, $r4;
        android.app.AlarmManager $r3;
        android.location.LocationManager $r5;
        boolean $z0;

        r0 := @this: com.android.server.twilight.TwilightService;

        i0 := @parameter0: int;

        if i0 != 1000 goto label1;

        r1 = virtualinvoke r0.<com.android.server.twilight.TwilightService: android.content.Context getContext()>();

        $r2 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        $r3 = (android.app.AlarmManager) $r2;

        r0.<com.android.server.twilight.TwilightService: android.app.AlarmManager mAlarmManager> = $r3;

        $r4 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("location");

        $r5 = (android.location.LocationManager) $r4;

        r0.<com.android.server.twilight.TwilightService: android.location.LocationManager mLocationManager> = $r5;

        r0.<com.android.server.twilight.TwilightService: boolean mBootCompleted> = 1;

        $z0 = r0.<com.android.server.twilight.TwilightService: boolean mHasListeners>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.server.twilight.TwilightService: void startListening()>();

     label1:
        return;
    }

    public void onLocationChanged(android.location.Location)
    {
        com.android.server.twilight.TwilightService r0;
        android.location.Location r1;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r11;
        float $f0;
        long $l0;

        r0 := @this: com.android.server.twilight.TwilightService;

        r1 := @parameter0: android.location.Location;

        if r1 == null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onLocationChanged: provider=");

        $r5 = virtualinvoke r1.<android.location.Location: java.lang.String getProvider()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" accuracy=");

        $f0 = virtualinvoke r1.<android.location.Location: float getAccuracy()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" time=");

        $l0 = virtualinvoke r1.<android.location.Location: long getTime()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("TwilightService", $r11);

        r0.<com.android.server.twilight.TwilightService: android.location.Location mLastLocation> = r1;

        specialinvoke r0.<com.android.server.twilight.TwilightService: void updateTwilightState()>();

     label1:
        return;
    }

    public void onProviderDisabled(java.lang.String)
    {
        com.android.server.twilight.TwilightService r0;
        java.lang.String r1;

        r0 := @this: com.android.server.twilight.TwilightService;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void onProviderEnabled(java.lang.String)
    {
        com.android.server.twilight.TwilightService r0;
        java.lang.String r1;

        r0 := @this: com.android.server.twilight.TwilightService;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void onStart()
    {
        com.android.server.twilight.TwilightService r0;
        com.android.server.twilight.TwilightService$1 $r1;

        r0 := @this: com.android.server.twilight.TwilightService;

        $r1 = new com.android.server.twilight.TwilightService$1;

        specialinvoke $r1.<com.android.server.twilight.TwilightService$1: void <init>(com.android.server.twilight.TwilightService)>(r0);

        virtualinvoke r0.<com.android.server.twilight.TwilightService: void publishLocalService(java.lang.Class,java.lang.Object)>(class "Lcom/android/server/twilight/TwilightManager;", $r1);

        return;
    }

    public void onStatusChanged(java.lang.String, int, android.os.Bundle)
    {
        com.android.server.twilight.TwilightService r0;
        java.lang.String r1;
        int i0;
        android.os.Bundle r2;

        r0 := @this: com.android.server.twilight.TwilightService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.twilight.TwilightService: java.lang.String TAG> = "TwilightService";

        <com.android.server.twilight.TwilightService: int MSG_STOP_LISTENING> = 2;

        <com.android.server.twilight.TwilightService: int MSG_START_LISTENING> = 1;

        <com.android.server.twilight.TwilightService: boolean DEBUG> = 0;

        <com.android.server.twilight.TwilightService: java.lang.String ATTRIBUTION_TAG> = "TwilightService";

        return;
    }
}
