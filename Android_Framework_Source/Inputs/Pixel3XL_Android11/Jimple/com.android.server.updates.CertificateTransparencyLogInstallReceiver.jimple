public class com.android.server.updates.CertificateTransparencyLogInstallReceiver extends com.android.server.updates.ConfigUpdateInstallReceiver
{
    private static final java.lang.String LOGDIR_PREFIX;
    private static final java.lang.String TAG;

    public void <init>()
    {
        com.android.server.updates.CertificateTransparencyLogInstallReceiver r0;

        r0 := @this: com.android.server.updates.CertificateTransparencyLogInstallReceiver;

        specialinvoke r0.<com.android.server.updates.ConfigUpdateInstallReceiver: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("/data/misc/keychain/trusted_ct_logs/", "ct_logs", "metadata/", "version");

        return;
    }

    private void deleteOldLogDirectories() throws java.io.IOException
    {
        com.android.server.updates.CertificateTransparencyLogInstallReceiver r0;
        int i0, i1;
        java.io.File $r1, $r3, $r4, $r5, $r6, $r7;
        boolean $z0;
        com.android.server.updates.CertificateTransparencyLogInstallReceiver$1 $r2;
        java.io.File[] r9;

        r0 := @this: com.android.server.updates.CertificateTransparencyLogInstallReceiver;

        $r1 = r0.<com.android.server.updates.CertificateTransparencyLogInstallReceiver: java.io.File updateDir>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = new com.android.server.updates.CertificateTransparencyLogInstallReceiver$1;

        $r3 = new java.io.File;

        $r4 = r0.<com.android.server.updates.CertificateTransparencyLogInstallReceiver: java.io.File updateDir>;

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, "current");

        $r5 = virtualinvoke $r3.<java.io.File: java.io.File getCanonicalFile()>();

        specialinvoke $r2.<com.android.server.updates.CertificateTransparencyLogInstallReceiver$1: void <init>(com.android.server.updates.CertificateTransparencyLogInstallReceiver,java.io.File)>(r0, $r5);

        $r6 = r0.<com.android.server.updates.CertificateTransparencyLogInstallReceiver: java.io.File updateDir>;

        r9 = virtualinvoke $r6.<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>($r2);

        i0 = lengthof r9;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r7 = r9[i1];

        staticinvoke <android.os.FileUtils: boolean deleteContentsAndDir(java.io.File)>($r7);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    private java.lang.String getLogFileName(java.lang.String)
    {
        com.android.server.updates.CertificateTransparencyLogInstallReceiver r0;
        java.security.MessageDigest $r1;
        byte[] $r2, r6;
        java.lang.Throwable $r3;
        java.lang.RuntimeException $r4;
        java.lang.String r5, r7;

        r0 := @this: com.android.server.updates.CertificateTransparencyLogInstallReceiver;

        r5 := @parameter0: java.lang.String;

        r6 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>(r5, 0);

     label1:
        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-256");

        $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r6);

        r7 = staticinvoke <com.android.internal.util.HexDump: java.lang.String toHexString(byte[],boolean)>($r2, 0);

     label2:
        return r7;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    private void installLog(java.io.File, org.json.JSONObject) throws java.io.IOException
    {
        com.android.server.updates.CertificateTransparencyLogInstallReceiver r0;
        java.io.File r1, r15;
        java.lang.String $r2, $r4, $r5, $r6, $r8, $r10, r17;
        java.nio.charset.Charset $r3;
        boolean $z0;
        java.lang.Throwable $r11, $r12, $r13;
        java.io.IOException $r14, r20;
        org.json.JSONObject r16;
        java.io.OutputStreamWriter r18;
        java.io.FileOutputStream r19;
        java.lang.StringBuilder r21;

        r0 := @this: com.android.server.updates.CertificateTransparencyLogInstallReceiver;

        r15 := @parameter0: java.io.File;

        r16 := @parameter1: org.json.JSONObject;

     label01:
        $r2 = virtualinvoke r16.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("key");

        r17 = specialinvoke r0.<com.android.server.updates.CertificateTransparencyLogInstallReceiver: java.lang.String getLogFileName(java.lang.String)>($r2);

        r1 = new java.io.File;

        specialinvoke r1.<java.io.File: void <init>(java.io.File,java.lang.String)>(r15, r17);

        r18 = new java.io.OutputStreamWriter;

        r19 = new java.io.FileOutputStream;

        specialinvoke r19.<java.io.FileOutputStream: void <init>(java.io.File)>(r1);

        $r3 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        specialinvoke r18.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>(r19, $r3);

     label02:
        $r4 = virtualinvoke r16.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("key");

        specialinvoke r0.<com.android.server.updates.CertificateTransparencyLogInstallReceiver: void writeLogEntry(java.io.OutputStreamWriter,java.lang.String,java.lang.String)>(r18, "key", $r4);

        $r5 = virtualinvoke r16.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("url");

        specialinvoke r0.<com.android.server.updates.CertificateTransparencyLogInstallReceiver: void writeLogEntry(java.io.OutputStreamWriter,java.lang.String,java.lang.String)>(r18, "url", $r5);

        $r6 = virtualinvoke r16.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("description");

        specialinvoke r0.<com.android.server.updates.CertificateTransparencyLogInstallReceiver: void writeLogEntry(java.io.OutputStreamWriter,java.lang.String,java.lang.String)>(r18, "description", $r6);

     label03:
        virtualinvoke r18.<java.io.OutputStreamWriter: void close()>();

        $z0 = virtualinvoke r1.<java.io.File: boolean setReadable(boolean,boolean)>(1, 0);

        if $z0 == 0 goto label05;

     label04:
        return;

     label05:
        r20 = new java.io.IOException;

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to set permissions on ");

        $r8 = virtualinvoke r1.<java.io.File: java.lang.String getCanonicalPath()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r20.<java.io.IOException: void <init>(java.lang.String)>($r10);

        throw r20;

     label06:
        $r12 := @caughtexception;

     label07:
        virtualinvoke r18.<java.io.OutputStreamWriter: void close()>();

     label08:
        goto label11;

     label09:
        $r11 := @caughtexception;

     label10:
        virtualinvoke $r12.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r11);

     label11:
        throw $r12;

     label12:
        $r13 := @caughtexception;

        $r14 = new java.io.IOException;

        specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to parse log", $r13);

        throw $r14;

        catch org.json.JSONException from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label06;
        catch org.json.JSONException from label03 to label04 with label12;
        catch org.json.JSONException from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch org.json.JSONException from label10 to label11 with label12;
        catch org.json.JSONException from label11 to label12 with label12;
    }

    private void writeLogEntry(java.io.OutputStreamWriter, java.lang.String, java.lang.String) throws java.io.IOException
    {
        com.android.server.updates.CertificateTransparencyLogInstallReceiver r0;
        java.io.OutputStreamWriter r1;
        java.lang.String r2, r3, $r10;
        java.lang.StringBuilder $r5;

        r0 := @this: com.android.server.updates.CertificateTransparencyLogInstallReceiver;

        r1 := @parameter0: java.io.OutputStreamWriter;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.OutputStreamWriter: void write(java.lang.String)>($r10);

        return;
    }

    protected void install(java.io.InputStream, int) throws java.io.IOException
    {
        com.android.server.updates.CertificateTransparencyLogInstallReceiver r0;
        int i0, $i1, i5;
        boolean z0, $z2, $z3, $z4, $z6, $z8;
        org.json.JSONObject r1, $r51;
        java.io.File $r2, $r3, $r6, $r11, $r14, $r19, $r20, $r25, $r37, $r40, $r47, $r48, $r55, $r56, r64, r70;
        java.lang.StringBuilder $r4, $r12, $r21, $r41, r77, r79;
        java.lang.String $r7, $r10, $r15, $r18, $r23, $r26, $r28, $r30, $r32, $r35, $r38, $r39, $r43, $r45, $r49, $r52, $r53, $r57, r68;
        java.io.IOException $r9, $r17, r73, r75, r76, r78;
        java.nio.charset.Charset $r36;
        java.io.ByteArrayInputStream $r46, $r54;
        long $l3, $l4;
        byte[] $r50, $r58, r67;
        java.lang.Throwable $r59, $r60, $r61;
        java.io.InputStream r62;
        org.json.JSONArray r69;

        r0 := @this: com.android.server.updates.CertificateTransparencyLogInstallReceiver;

        r62 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.updates.CertificateTransparencyLogInstallReceiver: java.io.File updateDir>;

        virtualinvoke $r2.<java.io.File: boolean mkdir()>();

        $r3 = r0.<com.android.server.updates.CertificateTransparencyLogInstallReceiver: java.io.File updateDir>;

        $z2 = virtualinvoke $r3.<java.io.File: boolean isDirectory()>();

        if $z2 == 0 goto label20;

        $r11 = r0.<com.android.server.updates.CertificateTransparencyLogInstallReceiver: java.io.File updateDir>;

        $z3 = virtualinvoke $r11.<java.io.File: boolean setReadable(boolean,boolean)>(1, 0);

        if $z3 == 0 goto label19;

        $r19 = new java.io.File;

        $r20 = r0.<com.android.server.updates.CertificateTransparencyLogInstallReceiver: java.io.File updateDir>;

        specialinvoke $r19.<java.io.File: void <init>(java.io.File,java.lang.String)>($r20, "current");

        r64 = r0.<com.android.server.updates.CertificateTransparencyLogInstallReceiver: java.io.File updateDir>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("logs-");

        $r23 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = new java.io.File;

        $r26 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<java.io.File: void <init>(java.io.File,java.lang.String)>(r64, $r26);

        $z4 = virtualinvoke $r25.<java.io.File: boolean exists()>();

        if $z4 == 0 goto label02;

        $r52 = virtualinvoke $r25.<java.io.File: java.lang.String getCanonicalPath()>();

        $r53 = virtualinvoke $r19.<java.io.File: java.lang.String getCanonicalPath()>();

        $z8 = virtualinvoke $r52.<java.lang.String: boolean equals(java.lang.Object)>($r53);

        if $z8 == 0 goto label01;

        $r55 = r0.<com.android.server.updates.CertificateTransparencyLogInstallReceiver: java.io.File updateDir>;

        $r56 = r0.<com.android.server.updates.CertificateTransparencyLogInstallReceiver: java.io.File updateVersion>;

        $r54 = new java.io.ByteArrayInputStream;

        $l4 = (long) i0;

        $r57 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l4);

        $r58 = virtualinvoke $r57.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r54.<java.io.ByteArrayInputStream: void <init>(byte[])>($r58);

        virtualinvoke r0.<com.android.server.updates.CertificateTransparencyLogInstallReceiver: void writeUpdate(java.io.File,java.io.File,java.io.InputStream)>($r55, $r56, $r54);

        specialinvoke r0.<com.android.server.updates.CertificateTransparencyLogInstallReceiver: void deleteOldLogDirectories()>();

        return;

     label01:
        staticinvoke <android.os.FileUtils: boolean deleteContentsAndDir(java.io.File)>($r25);

     label02:
        virtualinvoke $r25.<java.io.File: boolean mkdir()>();

        $z6 = virtualinvoke $r25.<java.io.File: boolean isDirectory()>();

        if $z6 == 0 goto label17;

        z0 = virtualinvoke $r25.<java.io.File: boolean setReadable(boolean,boolean)>(1, 0);

     label03:
        if z0 == 0 goto label16;

     label04:
        r67 = staticinvoke <libcore.io.Streams: byte[] readFullyNoClose(java.io.InputStream)>(r62);

        r1 = new org.json.JSONObject;

        r68 = new java.lang.String;

        $r36 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        specialinvoke r68.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>(r67, $r36);

        specialinvoke r1.<org.json.JSONObject: void <init>(java.lang.String)>(r68);

        r69 = virtualinvoke r1.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("logs");

     label05:
        i5 = 0;

     label06:
        $i1 = virtualinvoke r69.<org.json.JSONArray: int length()>();

        if i5 >= $i1 goto label08;

        $r51 = virtualinvoke r69.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i5);

        specialinvoke r0.<com.android.server.updates.CertificateTransparencyLogInstallReceiver: void installLog(java.io.File,org.json.JSONObject)>($r25, $r51);

     label07:
        i5 = i5 + 1;

        goto label06;

     label08:
        r70 = new java.io.File;

        $r37 = r0.<com.android.server.updates.CertificateTransparencyLogInstallReceiver: java.io.File updateDir>;

        specialinvoke r70.<java.io.File: void <init>(java.io.File,java.lang.String)>($r37, "new_symlink");

     label09:
        $r38 = virtualinvoke $r25.<java.io.File: java.lang.String getCanonicalPath()>();

        $r39 = virtualinvoke r70.<java.io.File: java.lang.String getCanonicalPath()>();

        staticinvoke <android.system.Os: void symlink(java.lang.String,java.lang.String)>($r38, $r39);

     label10:
        $r40 = virtualinvoke $r19.<java.io.File: java.io.File getAbsoluteFile()>();

        virtualinvoke r70.<java.io.File: boolean renameTo(java.io.File)>($r40);

     label11:
        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CT log directory updated to ");

        $r43 = virtualinvoke $r25.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r45 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("CTLogInstallReceiver", $r45);

        $r47 = r0.<com.android.server.updates.CertificateTransparencyLogInstallReceiver: java.io.File updateDir>;

        $r48 = r0.<com.android.server.updates.CertificateTransparencyLogInstallReceiver: java.io.File updateVersion>;

        $r46 = new java.io.ByteArrayInputStream;

        $l3 = (long) i0;

        $r49 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l3);

        $r50 = virtualinvoke $r49.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r46.<java.io.ByteArrayInputStream: void <init>(byte[])>($r50);

        virtualinvoke r0.<com.android.server.updates.CertificateTransparencyLogInstallReceiver: void writeUpdate(java.io.File,java.io.File,java.io.InputStream)>($r47, $r48, $r46);

        specialinvoke r0.<com.android.server.updates.CertificateTransparencyLogInstallReceiver: void deleteOldLogDirectories()>();

        return;

     label12:
        $r60 := @caughtexception;

     label13:
        r73 = new java.io.IOException;

        specialinvoke r73.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to create symlink", $r60);

        throw r73;

     label14:
        $r59 := @caughtexception;

     label15:
        r75 = new java.io.IOException;

        specialinvoke r75.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to parse logs", $r59);

        throw r75;

     label16:
        r76 = new java.io.IOException;

        r77 = new java.lang.StringBuilder;

        specialinvoke r77.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to set ");

        $r32 = virtualinvoke $r25.<java.io.File: java.lang.String getCanonicalPath()>();

        virtualinvoke r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        virtualinvoke r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" readable");

        $r35 = virtualinvoke r77.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r76.<java.io.IOException: void <init>(java.lang.String)>($r35);

        throw r76;

     label17:
        r78 = new java.io.IOException;

        r79 = new java.lang.StringBuilder;

        specialinvoke r79.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to make directory ");

        $r28 = virtualinvoke $r25.<java.io.File: java.lang.String getCanonicalPath()>();

        virtualinvoke r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke r79.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r78.<java.io.IOException: void <init>(java.lang.String)>($r30);

        throw r78;

     label18:
        $r61 := @caughtexception;

        staticinvoke <android.os.FileUtils: boolean deleteContentsAndDir(java.io.File)>($r25);

        throw $r61;

     label19:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to set permissions on ");

        $r14 = r0.<com.android.server.updates.CertificateTransparencyLogInstallReceiver: java.io.File updateDir>;

        $r15 = virtualinvoke $r14.<java.io.File: java.lang.String getCanonicalPath()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = new java.io.IOException;

        $r18 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.io.IOException: void <init>(java.lang.String)>($r18);

        throw $r17;

     label20:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to make directory ");

        $r6 = r0.<com.android.server.updates.CertificateTransparencyLogInstallReceiver: java.io.File updateDir>;

        $r7 = virtualinvoke $r6.<java.io.File: java.lang.String getCanonicalPath()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = new java.io.IOException;

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>($r10);

        throw $r9;

        catch java.io.IOException from label02 to label03 with label18;
        catch java.lang.RuntimeException from label02 to label03 with label18;
        catch org.json.JSONException from label04 to label05 with label14;
        catch java.io.IOException from label04 to label05 with label18;
        catch java.lang.RuntimeException from label04 to label05 with label18;
        catch org.json.JSONException from label06 to label07 with label14;
        catch java.io.IOException from label06 to label07 with label18;
        catch java.lang.RuntimeException from label06 to label07 with label18;
        catch java.io.IOException from label08 to label09 with label18;
        catch java.lang.RuntimeException from label08 to label09 with label18;
        catch android.system.ErrnoException from label09 to label10 with label12;
        catch java.io.IOException from label09 to label10 with label18;
        catch java.lang.RuntimeException from label09 to label10 with label18;
        catch java.io.IOException from label10 to label11 with label18;
        catch java.lang.RuntimeException from label10 to label11 with label18;
        catch java.io.IOException from label13 to label14 with label18;
        catch java.lang.RuntimeException from label13 to label14 with label18;
        catch java.io.IOException from label15 to label16 with label18;
        catch java.lang.RuntimeException from label15 to label16 with label18;
        catch java.io.IOException from label16 to label17 with label18;
        catch java.lang.RuntimeException from label16 to label17 with label18;
        catch java.io.IOException from label17 to label18 with label18;
        catch java.lang.RuntimeException from label17 to label18 with label18;
    }

    public static void <clinit>()
    {
        <com.android.server.updates.CertificateTransparencyLogInstallReceiver: java.lang.String TAG> = "CTLogInstallReceiver";

        <com.android.server.updates.CertificateTransparencyLogInstallReceiver: java.lang.String LOGDIR_PREFIX> = "logs-";

        return;
    }
}
