public class com.android.server.updates.ConfigUpdateInstallReceiver extends android.content.BroadcastReceiver
{
    private static final java.lang.String EXTRA_REQUIRED_HASH;
    private static final java.lang.String EXTRA_VERSION_NUMBER;
    private static final java.lang.String TAG;
    protected final java.io.File updateContent;
    protected final java.io.File updateDir;
    protected final java.io.File updateVersion;

    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        java.lang.String r1, r2, r3, r4;
        java.io.File $r5, $r6, $r7, $r8;

        r0 := @this: com.android.server.updates.ConfigUpdateInstallReceiver;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        $r5 = new java.io.File;

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>(r1);

        r0.<com.android.server.updates.ConfigUpdateInstallReceiver: java.io.File updateDir> = $r5;

        $r6 = new java.io.File;

        specialinvoke $r6.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        r0.<com.android.server.updates.ConfigUpdateInstallReceiver: java.io.File updateContent> = $r6;

        $r7 = new java.io.File;

        $r8 = new java.io.File;

        specialinvoke $r8.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, r3);

        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>($r8, r4);

        r0.<com.android.server.updates.ConfigUpdateInstallReceiver: java.io.File updateVersion> = $r7;

        return;
    }

    static int access$000(com.android.server.updates.ConfigUpdateInstallReceiver, android.content.Intent) throws java.lang.NumberFormatException
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        android.content.Intent r1;
        int $i0;

        r0 := @parameter0: com.android.server.updates.ConfigUpdateInstallReceiver;

        r1 := @parameter1: android.content.Intent;

        $i0 = specialinvoke r0.<com.android.server.updates.ConfigUpdateInstallReceiver: int getVersionFromIntent(android.content.Intent)>(r1);

        return $i0;
    }

    static java.lang.String access$100(com.android.server.updates.ConfigUpdateInstallReceiver, android.content.Intent)
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        android.content.Intent r1;
        java.lang.String $r2;

        r0 := @parameter0: com.android.server.updates.ConfigUpdateInstallReceiver;

        r1 := @parameter1: android.content.Intent;

        $r2 = specialinvoke r0.<com.android.server.updates.ConfigUpdateInstallReceiver: java.lang.String getRequiredHashFromIntent(android.content.Intent)>(r1);

        return $r2;
    }

    static int access$200(com.android.server.updates.ConfigUpdateInstallReceiver) throws java.lang.NumberFormatException
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        int $i0;

        r0 := @parameter0: com.android.server.updates.ConfigUpdateInstallReceiver;

        $i0 = specialinvoke r0.<com.android.server.updates.ConfigUpdateInstallReceiver: int getCurrentVersion()>();

        return $i0;
    }

    static byte[] access$300(com.android.server.updates.ConfigUpdateInstallReceiver)
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        byte[] $r1;

        r0 := @parameter0: com.android.server.updates.ConfigUpdateInstallReceiver;

        $r1 = specialinvoke r0.<com.android.server.updates.ConfigUpdateInstallReceiver: byte[] getCurrentContent()>();

        return $r1;
    }

    static java.lang.String access$400(byte[])
    {
        byte[] r0;
        java.lang.String $r1;

        r0 := @parameter0: byte[];

        $r1 = staticinvoke <com.android.server.updates.ConfigUpdateInstallReceiver: java.lang.String getCurrentHash(byte[])>(r0);

        return $r1;
    }

    static boolean access$500(com.android.server.updates.ConfigUpdateInstallReceiver, java.lang.String, java.lang.String)
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        java.lang.String r1, r2;
        boolean $z0;

        r0 := @parameter0: com.android.server.updates.ConfigUpdateInstallReceiver;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.updates.ConfigUpdateInstallReceiver: boolean verifyPreviousHash(java.lang.String,java.lang.String)>(r1, r2);

        return $z0;
    }

    static java.io.BufferedInputStream access$600(com.android.server.updates.ConfigUpdateInstallReceiver, android.content.Context, android.content.Intent) throws java.io.IOException
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;
        java.io.BufferedInputStream $r3;

        r0 := @parameter0: com.android.server.updates.ConfigUpdateInstallReceiver;

        r1 := @parameter1: android.content.Context;

        r2 := @parameter2: android.content.Intent;

        $r3 = specialinvoke r0.<com.android.server.updates.ConfigUpdateInstallReceiver: java.io.BufferedInputStream getAltContent(android.content.Context,android.content.Intent)>(r1, r2);

        return $r3;
    }

    private java.io.BufferedInputStream getAltContent(android.content.Context, android.content.Intent) throws java.io.IOException
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        java.io.BufferedInputStream $r1;
        android.content.ContentResolver $r2;
        java.io.InputStream $r3;
        java.lang.Throwable $r4;
        android.content.Context r5;
        android.content.Intent r6;
        android.net.Uri r7;

        r0 := @this: com.android.server.updates.ConfigUpdateInstallReceiver;

        r5 := @parameter0: android.content.Context;

        r6 := @parameter1: android.content.Intent;

        r7 = specialinvoke r0.<com.android.server.updates.ConfigUpdateInstallReceiver: android.net.Uri getContentFromIntent(android.content.Intent)>(r6);

        staticinvoke <android.os.Binder: void allowBlockingForCurrentThread()>();

     label1:
        $r1 = new java.io.BufferedInputStream;

        $r2 = virtualinvoke r5.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r3 = virtualinvoke $r2.<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>(r7);

        specialinvoke $r1.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r3);

     label2:
        staticinvoke <android.os.Binder: void defaultBlockingForCurrentThread()>();

        return $r1;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void defaultBlockingForCurrentThread()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private android.net.Uri getContentFromIntent(android.content.Intent)
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        java.lang.IllegalStateException $r1;
        android.content.Intent r2;
        android.net.Uri r3;

        r0 := @this: com.android.server.updates.ConfigUpdateInstallReceiver;

        r2 := @parameter0: android.content.Intent;

        r3 = virtualinvoke r2.<android.content.Intent: android.net.Uri getData()>();

        if r3 == null goto label1;

        return r3;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Missing required content path, ignoring.");

        throw $r1;
    }

    private byte[] getCurrentContent()
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        java.io.File $r1;
        java.lang.String $r2;
        java.lang.Throwable $r3;
        byte[] r4;

        r0 := @this: com.android.server.updates.ConfigUpdateInstallReceiver;

     label1:
        $r1 = r0.<com.android.server.updates.ConfigUpdateInstallReceiver: java.io.File updateContent>;

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getCanonicalPath()>();

        r4 = staticinvoke <libcore.io.IoUtils: byte[] readFileAsByteArray(java.lang.String)>($r2);

     label2:
        return r4;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ConfigUpdateInstallReceiver", "Failed to read current content, assuming first update!");

        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private static java.lang.String getCurrentHash(byte[])
    {
        java.security.MessageDigest $r0;
        byte[] $r1, r4;
        java.lang.Throwable $r2;
        java.lang.AssertionError $r3;
        java.lang.String r5;

        r4 := @parameter0: byte[];

        if r4 != null goto label1;

        return "0";

     label1:
        $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA512");

        $r1 = virtualinvoke $r0.<java.security.MessageDigest: byte[] digest(byte[])>(r4);

        r5 = staticinvoke <com.android.internal.util.HexDump: java.lang.String toHexString(byte[],boolean)>($r1, 0);

     label2:
        return r5;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>($r2);

        throw $r3;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    private int getCurrentVersion() throws java.lang.NumberFormatException
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        int i0;
        java.io.File $r2;
        java.lang.String $r3, $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.updates.ConfigUpdateInstallReceiver;

     label1:
        $r2 = r0.<com.android.server.updates.ConfigUpdateInstallReceiver: java.io.File updateVersion>;

        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String getCanonicalPath()>();

        $r4 = staticinvoke <libcore.io.IoUtils: java.lang.String readFileAsString(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

     label2:
        return i0;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ConfigUpdateInstallReceiver", "Couldn\'t find current metadata, assuming first update");

        return 0;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private java.lang.String getRequiredHashFromIntent(android.content.Intent)
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        java.lang.IllegalStateException $r1;
        java.lang.String $r2, r4;
        android.content.Intent r3;

        r0 := @this: com.android.server.updates.ConfigUpdateInstallReceiver;

        r3 := @parameter0: android.content.Intent;

        r4 = virtualinvoke r3.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("REQUIRED_HASH");

        if r4 == null goto label1;

        $r2 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>();

        return $r2;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Missing required previous hash, ignoring.");

        throw $r1;
    }

    private int getVersionFromIntent(android.content.Intent) throws java.lang.NumberFormatException
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        java.lang.IllegalStateException $r1;
        java.lang.String $r2, r4;
        int $i0;
        android.content.Intent r3;

        r0 := @this: com.android.server.updates.ConfigUpdateInstallReceiver;

        r3 := @parameter0: android.content.Intent;

        r4 = virtualinvoke r3.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("VERSION");

        if r4 == null goto label1;

        $r2 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        return $i0;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Missing required version number, ignoring.");

        throw $r1;
    }

    private boolean verifyPreviousHash(java.lang.String, java.lang.String)
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        java.lang.String r1, r2;
        boolean $z0, $z1;

        r0 := @this: com.android.server.updates.ConfigUpdateInstallReceiver;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("NONE");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        return $z1;
    }

    protected void install(java.io.InputStream, int) throws java.io.IOException
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        java.io.InputStream r1;
        int i0;
        java.io.File $r2, $r3, $r5, $r6;
        java.io.ByteArrayInputStream $r4;
        long $l1;
        java.lang.String $r7;
        byte[] $r8;

        r0 := @this: com.android.server.updates.ConfigUpdateInstallReceiver;

        r1 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.server.updates.ConfigUpdateInstallReceiver: java.io.File updateDir>;

        $r2 = r0.<com.android.server.updates.ConfigUpdateInstallReceiver: java.io.File updateContent>;

        virtualinvoke r0.<com.android.server.updates.ConfigUpdateInstallReceiver: void writeUpdate(java.io.File,java.io.File,java.io.InputStream)>($r3, $r2, r1);

        $r5 = r0.<com.android.server.updates.ConfigUpdateInstallReceiver: java.io.File updateDir>;

        $r6 = r0.<com.android.server.updates.ConfigUpdateInstallReceiver: java.io.File updateVersion>;

        $r4 = new java.io.ByteArrayInputStream;

        $l1 = (long) i0;

        $r7 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1);

        $r8 = virtualinvoke $r7.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r4.<java.io.ByteArrayInputStream: void <init>(byte[])>($r8);

        virtualinvoke r0.<com.android.server.updates.ConfigUpdateInstallReceiver: void writeUpdate(java.io.File,java.io.File,java.io.InputStream)>($r5, $r6, $r4);

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;
        com.android.server.updates.ConfigUpdateInstallReceiver$1 $r3;

        r0 := @this: com.android.server.updates.ConfigUpdateInstallReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        $r3 = new com.android.server.updates.ConfigUpdateInstallReceiver$1;

        specialinvoke $r3.<com.android.server.updates.ConfigUpdateInstallReceiver$1: void <init>(com.android.server.updates.ConfigUpdateInstallReceiver,android.content.Intent,android.content.Context)>(r0, r2, r1);

        virtualinvoke $r3.<com.android.server.updates.ConfigUpdateInstallReceiver$1: void start()>();

        return;
    }

    protected void postInstall(android.content.Context, android.content.Intent)
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;

        r0 := @this: com.android.server.updates.ConfigUpdateInstallReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        return;
    }

    protected boolean verifyVersion(int, int)
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        int i0, i1;
        boolean z0;

        r0 := @this: com.android.server.updates.ConfigUpdateInstallReceiver;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 >= i1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    protected void writeUpdate(java.io.File, java.io.File, java.io.InputStream) throws java.io.IOException
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        java.io.File r1, r8, r9, r12, r13;
        boolean z0, $z1;
        java.lang.String $r2, $r3, $r5, $r6;
        java.io.FileDescriptor $r4;
        java.lang.Throwable $r7;
        java.io.InputStream r10;
        java.io.FileOutputStream r11, r14;
        java.io.IOException r15, r17;
        java.lang.StringBuilder r16, r18;

        r0 := @this: com.android.server.updates.ConfigUpdateInstallReceiver;

        r8 := @parameter0: java.io.File;

        r9 := @parameter1: java.io.File;

        r10 := @parameter2: java.io.InputStream;

        r11 = null;

        r12 = null;

     label01:
        r1 = virtualinvoke r9.<java.io.File: java.io.File getParentFile()>();

     label02:
        r11 = null;

        r12 = null;

     label03:
        virtualinvoke r1.<java.io.File: boolean mkdirs()>();

     label04:
        r11 = null;

        r12 = null;

     label05:
        $z1 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label36;

     label06:
        r11 = null;

        r12 = null;

     label07:
        r13 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>("journal", "", r8);

     label08:
        r11 = null;

        r12 = r13;

     label09:
        virtualinvoke r13.<java.io.File: boolean setReadable(boolean,boolean)>(1, 0);

     label10:
        r11 = null;

        r12 = r13;

     label11:
        r14 = new java.io.FileOutputStream;

     label12:
        r11 = null;

        r12 = r13;

     label13:
        specialinvoke r14.<java.io.FileOutputStream: void <init>(java.io.File)>(r13);

     label14:
        r11 = r14;

        r12 = r13;

     label15:
        staticinvoke <libcore.io.Streams: int copy(java.io.InputStream,java.io.OutputStream)>(r10, r14);

     label16:
        r11 = r14;

        r12 = r13;

     label17:
        $r4 = virtualinvoke r14.<java.io.FileOutputStream: java.io.FileDescriptor getFD()>();

        virtualinvoke $r4.<java.io.FileDescriptor: void sync()>();

     label18:
        r11 = r14;

        r12 = r13;

     label19:
        z0 = virtualinvoke r13.<java.io.File: boolean renameTo(java.io.File)>(r9);

     label20:
        if z0 == 0 goto label22;

        if r13 == null goto label21;

        virtualinvoke r13.<java.io.File: boolean delete()>();

     label21:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r14);

        return;

     label22:
        r11 = r14;

        r12 = r13;

     label23:
        r15 = new java.io.IOException;

     label24:
        r11 = r14;

        r12 = r13;

     label25:
        r16 = new java.lang.StringBuilder;

     label26:
        r11 = r14;

        r12 = r13;

     label27:
        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

     label28:
        r11 = r14;

        r12 = r13;

     label29:
        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to atomically rename ");

     label30:
        r11 = r14;

        r12 = r13;

     label31:
        $r5 = virtualinvoke r9.<java.io.File: java.lang.String getCanonicalPath()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

     label32:
        r11 = r14;

        r12 = r13;

     label33:
        $r6 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r15.<java.io.IOException: void <init>(java.lang.String)>($r6);

     label34:
        r11 = r14;

        r12 = r13;

     label35:
        throw r15;

     label36:
        r11 = null;

        r12 = null;

     label37:
        r17 = new java.io.IOException;

     label38:
        r11 = null;

        r12 = null;

     label39:
        r18 = new java.lang.StringBuilder;

     label40:
        r11 = null;

        r12 = null;

     label41:
        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

     label42:
        r11 = null;

        r12 = null;

     label43:
        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create directory ");

     label44:
        r11 = null;

        r12 = null;

     label45:
        $r2 = virtualinvoke r1.<java.io.File: java.lang.String getCanonicalPath()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

     label46:
        r11 = null;

        r12 = null;

     label47:
        $r3 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r17.<java.io.IOException: void <init>(java.lang.String)>($r3);

     label48:
        r11 = null;

        r12 = null;

     label49:
        throw r17;

     label50:
        $r7 := @caughtexception;

        if r12 == null goto label51;

        virtualinvoke r12.<java.io.File: boolean delete()>();

     label51:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r11);

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label50;
        catch java.lang.Throwable from label03 to label04 with label50;
        catch java.lang.Throwable from label05 to label06 with label50;
        catch java.lang.Throwable from label07 to label08 with label50;
        catch java.lang.Throwable from label09 to label10 with label50;
        catch java.lang.Throwable from label11 to label12 with label50;
        catch java.lang.Throwable from label13 to label14 with label50;
        catch java.lang.Throwable from label15 to label16 with label50;
        catch java.lang.Throwable from label17 to label18 with label50;
        catch java.lang.Throwable from label19 to label20 with label50;
        catch java.lang.Throwable from label23 to label24 with label50;
        catch java.lang.Throwable from label25 to label26 with label50;
        catch java.lang.Throwable from label27 to label28 with label50;
        catch java.lang.Throwable from label29 to label30 with label50;
        catch java.lang.Throwable from label31 to label32 with label50;
        catch java.lang.Throwable from label33 to label34 with label50;
        catch java.lang.Throwable from label35 to label36 with label50;
        catch java.lang.Throwable from label37 to label38 with label50;
        catch java.lang.Throwable from label39 to label40 with label50;
        catch java.lang.Throwable from label41 to label42 with label50;
        catch java.lang.Throwable from label43 to label44 with label50;
        catch java.lang.Throwable from label45 to label46 with label50;
        catch java.lang.Throwable from label47 to label48 with label50;
        catch java.lang.Throwable from label49 to label50 with label50;
    }

    public static void <clinit>()
    {
        <com.android.server.updates.ConfigUpdateInstallReceiver: java.lang.String TAG> = "ConfigUpdateInstallReceiver";

        <com.android.server.updates.ConfigUpdateInstallReceiver: java.lang.String EXTRA_VERSION_NUMBER> = "VERSION";

        <com.android.server.updates.ConfigUpdateInstallReceiver: java.lang.String EXTRA_REQUIRED_HASH> = "REQUIRED_HASH";

        return;
    }
}
