public class com.android.server.uri.UriGrantsManagerService extends android.app.IUriGrantsManager$Stub
{
    private static final java.lang.String ATTR_CREATED_TIME;
    private static final java.lang.String ATTR_MODE_FLAGS;
    private static final java.lang.String ATTR_PREFIX;
    private static final java.lang.String ATTR_SOURCE_PKG;
    private static final java.lang.String ATTR_SOURCE_USER_ID;
    private static final java.lang.String ATTR_TARGET_PKG;
    private static final java.lang.String ATTR_TARGET_USER_ID;
    private static final java.lang.String ATTR_URI;
    private static final java.lang.String ATTR_USER_HANDLE;
    private static final boolean DEBUG;
    private static final boolean ENABLE_DYNAMIC_PERMISSIONS;
    private static final int MAX_PERSISTED_URI_GRANTS;
    private static final java.lang.String TAG;
    private static final java.lang.String TAG_URI_GRANT;
    private static final java.lang.String TAG_URI_GRANTS;
    android.app.ActivityManagerInternal mAmInternal;
    private final android.util.AtomicFile mGrantFile;
    private final android.util.SparseArray mGrantedUriPermissions;
    private final com.android.server.uri.UriGrantsManagerService$H mH;
    private final java.lang.Object mLock;
    android.content.pm.PackageManagerInternal mPmInternal;

    private void <init>()
    {
        com.android.server.uri.UriGrantsManagerService r0;
        java.io.File $r1;

        r0 := @this: com.android.server.uri.UriGrantsManagerService;

        $r1 = staticinvoke <com.android.server.SystemServiceManager: java.io.File ensureSystemDir()>();

        specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: void <init>(java.io.File)>($r1);

        return;
    }

    void <init>(com.android.server.uri.UriGrantsManagerService$1)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        com.android.server.uri.UriGrantsManagerService$1 r1;

        r0 := @this: com.android.server.uri.UriGrantsManagerService;

        r1 := @parameter0: com.android.server.uri.UriGrantsManagerService$1;

        specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: void <init>()>();

        return;
    }

    private void <init>(java.io.File)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        java.io.File r1, $r8;
        java.lang.Object $r2;
        android.util.SparseArray $r3;
        com.android.server.uri.UriGrantsManagerService$H $r4;
        com.android.server.IoThread $r5;
        android.os.Looper $r6;
        android.util.AtomicFile $r7;

        r0 := @this: com.android.server.uri.UriGrantsManagerService;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<android.app.IUriGrantsManager$Stub: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.server.uri.UriGrantsManagerService: java.lang.Object mLock> = $r2;

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.uri.UriGrantsManagerService: android.util.SparseArray mGrantedUriPermissions> = $r3;

        $r4 = new com.android.server.uri.UriGrantsManagerService$H;

        $r5 = staticinvoke <com.android.server.IoThread: com.android.server.IoThread get()>();

        $r6 = virtualinvoke $r5.<com.android.server.IoThread: android.os.Looper getLooper()>();

        specialinvoke $r4.<com.android.server.uri.UriGrantsManagerService$H: void <init>(com.android.server.uri.UriGrantsManagerService,android.os.Looper)>(r0, $r6);

        r0.<com.android.server.uri.UriGrantsManagerService: com.android.server.uri.UriGrantsManagerService$H mH> = $r4;

        $r7 = new android.util.AtomicFile;

        $r8 = new java.io.File;

        specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "urigrants.xml");

        specialinvoke $r7.<android.util.AtomicFile: void <init>(java.io.File,java.lang.String)>($r8, "uri-grants");

        r0.<com.android.server.uri.UriGrantsManagerService: android.util.AtomicFile mGrantFile> = $r7;

        return;
    }

    static com.android.server.uri.NeededUriGrants access$1000(com.android.server.uri.UriGrantsManagerService, int, java.lang.String, android.content.Intent, int, com.android.server.uri.NeededUriGrants, int)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        int i0, i1, i2;
        java.lang.String r1;
        android.content.Intent r2;
        com.android.server.uri.NeededUriGrants r3, $r4;

        r0 := @parameter0: com.android.server.uri.UriGrantsManagerService;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: android.content.Intent;

        i1 := @parameter4: int;

        r3 := @parameter5: com.android.server.uri.NeededUriGrants;

        i2 := @parameter6: int;

        $r4 = specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: com.android.server.uri.NeededUriGrants checkGrantUriPermissionFromIntentUnlocked(int,java.lang.String,android.content.Intent,int,com.android.server.uri.NeededUriGrants,int)>(i0, r1, r2, i1, r3, i2);

        return $r4;
    }

    static void access$1100(com.android.server.uri.UriGrantsManagerService, com.android.server.uri.NeededUriGrants, com.android.server.uri.UriPermissionOwner)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        com.android.server.uri.NeededUriGrants r1;
        com.android.server.uri.UriPermissionOwner r2;

        r0 := @parameter0: com.android.server.uri.UriGrantsManagerService;

        r1 := @parameter1: com.android.server.uri.NeededUriGrants;

        r2 := @parameter2: com.android.server.uri.UriPermissionOwner;

        specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: void grantUriPermissionUncheckedFromIntent(com.android.server.uri.NeededUriGrants,com.android.server.uri.UriPermissionOwner)>(r1, r2);

        return;
    }

    static void access$1200(com.android.server.uri.UriGrantsManagerService)
    {
        com.android.server.uri.UriGrantsManagerService r0;

        r0 := @parameter0: com.android.server.uri.UriGrantsManagerService;

        specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: void readGrantedUriPermissionsLocked()>();

        return;
    }

    static void access$1300(com.android.server.uri.UriGrantsManagerService, java.lang.String, int, boolean, boolean)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        java.lang.String r1;
        int i0;
        boolean z0, z1;

        r0 := @parameter0: com.android.server.uri.UriGrantsManagerService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: void removeUriPermissionsForPackageLocked(java.lang.String,int,boolean,boolean)>(r1, i0, z0, z1);

        return;
    }

    static boolean access$1400(com.android.server.uri.UriGrantsManagerService, int, android.content.pm.ProviderInfo, int, boolean)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        int i0, i1;
        android.content.pm.ProviderInfo r1;
        boolean z0, $z1;

        r0 := @parameter0: com.android.server.uri.UriGrantsManagerService;

        i0 := @parameter1: int;

        r1 := @parameter2: android.content.pm.ProviderInfo;

        i1 := @parameter3: int;

        z0 := @parameter4: boolean;

        $z1 = specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: boolean checkAuthorityGrantsLocked(int,android.content.pm.ProviderInfo,int,boolean)>(i0, r1, i1, z0);

        return $z1;
    }

    static android.util.SparseArray access$1500(com.android.server.uri.UriGrantsManagerService)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        android.util.SparseArray $r1;

        r0 := @parameter0: com.android.server.uri.UriGrantsManagerService;

        $r1 = r0.<com.android.server.uri.UriGrantsManagerService: android.util.SparseArray mGrantedUriPermissions>;

        return $r1;
    }

    static void access$200(com.android.server.uri.UriGrantsManagerService)
    {
        com.android.server.uri.UriGrantsManagerService r0;

        r0 := @parameter0: com.android.server.uri.UriGrantsManagerService;

        specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: void start()>();

        return;
    }

    static java.lang.Object access$300(com.android.server.uri.UriGrantsManagerService)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.uri.UriGrantsManagerService;

        $r1 = r0.<com.android.server.uri.UriGrantsManagerService: java.lang.Object mLock>;

        return $r1;
    }

    static void access$400(com.android.server.uri.UriGrantsManagerService)
    {
        com.android.server.uri.UriGrantsManagerService r0;

        r0 := @parameter0: com.android.server.uri.UriGrantsManagerService;

        specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: void writeGrantedUriPermissionsLocked()>();

        return;
    }

    static void access$500(com.android.server.uri.UriGrantsManagerService, com.android.server.uri.UriPermission)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        com.android.server.uri.UriPermission r1;

        r0 := @parameter0: com.android.server.uri.UriGrantsManagerService;

        r1 := @parameter1: com.android.server.uri.UriPermission;

        specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: void removeUriPermissionIfNeededLocked(com.android.server.uri.UriPermission)>(r1);

        return;
    }

    static void access$600(com.android.server.uri.UriGrantsManagerService, java.lang.String, int, com.android.server.uri.GrantUri, int)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        java.lang.String r1;
        int i0, i1;
        com.android.server.uri.GrantUri r2;

        r0 := @parameter0: com.android.server.uri.UriGrantsManagerService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 := @parameter3: com.android.server.uri.GrantUri;

        i1 := @parameter4: int;

        specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: void revokeUriPermission(java.lang.String,int,com.android.server.uri.GrantUri,int)>(r1, i0, r2, i1);

        return;
    }

    static boolean access$700(com.android.server.uri.UriGrantsManagerService, com.android.server.uri.GrantUri, int, int)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        com.android.server.uri.GrantUri r1;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: com.android.server.uri.UriGrantsManagerService;

        r1 := @parameter1: com.android.server.uri.GrantUri;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $z0 = specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: boolean checkUriPermissionLocked(com.android.server.uri.GrantUri,int,int)>(r1, i0, i1);

        return $z0;
    }

    static void access$800(com.android.server.uri.UriGrantsManagerService, java.lang.String)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.uri.UriGrantsManagerService;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: void enforceNotIsolatedCaller(java.lang.String)>(r1);

        return;
    }

    static int access$900(com.android.server.uri.UriGrantsManagerService, int, java.lang.String, android.net.Uri, int, int)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        int i0, i1, i2, $i3;
        java.lang.String r1;
        android.net.Uri r2;

        r0 := @parameter0: com.android.server.uri.UriGrantsManagerService;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: android.net.Uri;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        $i3 = specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: int checkGrantUriPermissionUnlocked(int,java.lang.String,android.net.Uri,int,int)>(i0, r1, r2, i1, i2);

        return $i3;
    }

    private boolean checkAuthorityGrantsLocked(int, android.content.pm.ProviderInfo, int, boolean)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        android.content.pm.ProviderInfo r1;
        int i0, $i1, $i2, i3, i4;
        boolean z0, $z1;
        android.util.ArrayMap r2;
        com.android.server.uri.GrantUri r3;
        android.util.SparseArray $r4;
        java.lang.Object $r5, $r6;
        android.net.Uri $r7;

        r0 := @this: com.android.server.uri.UriGrantsManagerService;

        i3 := @parameter0: int;

        r1 := @parameter1: android.content.pm.ProviderInfo;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r4 = r0.<com.android.server.uri.UriGrantsManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i3);

        r2 = (android.util.ArrayMap) $r5;

        if r2 == null goto label4;

        $i1 = virtualinvoke r2.<android.util.ArrayMap: int size()>();

        i4 = $i1 - 1;

     label1:
        if i4 < 0 goto label4;

        $r6 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i4);

        r3 = (com.android.server.uri.GrantUri) $r6;

        $i2 = r3.<com.android.server.uri.GrantUri: int sourceUserId>;

        if $i2 == i0 goto label2;

        if z0 != 0 goto label3;

     label2:
        $r7 = r3.<com.android.server.uri.GrantUri: android.net.Uri uri>;

        $z1 = specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: boolean matchesProvider(android.net.Uri,android.content.pm.ProviderInfo)>($r7, r1);

        if $z1 == 0 goto label3;

        return 1;

     label3:
        i4 = i4 + -1;

        goto label1;

     label4:
        return 0;
    }

    private com.android.server.uri.NeededUriGrants checkGrantUriPermissionFromIntentUnlocked(int, java.lang.String, android.content.Intent, int, com.android.server.uri.NeededUriGrants, int)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        int i0, i1, i2, $i3, i4, i5, i6, i7, i9, i10, i11;
        java.lang.String r1;
        android.content.ClipData r2;
        java.lang.NullPointerException $r3;
        android.content.pm.PackageManagerInternal $r4;
        android.content.ClipData$Item $r5, $r6;
        android.util.ArraySet $r7, $r9;
        com.android.server.uri.NeededUriGrants $r8, $r10, r12, r14, r16, r19, r21;
        android.content.Intent r11, r20;
        android.net.Uri r13, r17;
        com.android.server.uri.GrantUri r15, r18;

        r0 := @this: com.android.server.uri.UriGrantsManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r11 := @parameter2: android.content.Intent;

        i1 := @parameter3: int;

        r12 := @parameter4: com.android.server.uri.NeededUriGrants;

        i2 := @parameter5: int;

        if r1 == null goto label17;

        if r11 != null goto label01;

        return null;

     label01:
        r13 = virtualinvoke r11.<android.content.Intent: android.net.Uri getData()>();

        r2 = virtualinvoke r11.<android.content.Intent: android.content.ClipData getClipData()>();

        if r13 != null goto label02;

        if r2 != null goto label02;

        return null;

     label02:
        i4 = virtualinvoke r11.<android.content.Intent: int getContentUserHint()>();

        if i4 != -2 goto label03;

        i4 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        goto label03;

     label03:
        if r12 == null goto label04;

        i5 = r12.<com.android.server.uri.NeededUriGrants: int targetUid>;

        goto label05;

     label04:
        $r4 = r0.<com.android.server.uri.UriGrantsManagerService: android.content.pm.PackageManagerInternal mPmInternal>;

        i5 = virtualinvoke $r4.<android.content.pm.PackageManagerInternal: int getPackageUidInternal(java.lang.String,int,int)>(r1, 268435456, i2);

        if i5 >= 0 goto label05;

        return null;

     label05:
        r14 = r12;

        i6 = i5;

        if r13 == null goto label08;

        r15 = staticinvoke <com.android.server.uri.GrantUri: com.android.server.uri.GrantUri resolve(int,android.net.Uri,int)>(i4, r13, i1);

        i7 = specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: int checkGrantUriPermissionUnlocked(int,java.lang.String,com.android.server.uri.GrantUri,int,int)>(i0, r1, r15, i1, i5);

        r14 = r12;

        i6 = i7;

        if i7 <= 0 goto label08;

        if r12 != null goto label06;

        $r10 = new com.android.server.uri.NeededUriGrants;

        specialinvoke $r10.<com.android.server.uri.NeededUriGrants: void <init>(java.lang.String,int,int)>(r1, i7, i1);

        r14 = $r10;

        goto label07;

     label06:
        r14 = r12;

     label07:
        $r9 = r14.<com.android.server.uri.NeededUriGrants: android.util.ArraySet uris>;

        virtualinvoke $r9.<android.util.ArraySet: boolean add(java.lang.Object)>(r15);

        i6 = i7;

     label08:
        r16 = r14;

        if r2 == null goto label16;

        i9 = i6;

        i10 = 0;

     label09:
        $i3 = virtualinvoke r2.<android.content.ClipData: int getItemCount()>();

        if i10 >= $i3 goto label15;

        $r5 = virtualinvoke r2.<android.content.ClipData: android.content.ClipData$Item getItemAt(int)>(i10);

        r17 = virtualinvoke $r5.<android.content.ClipData$Item: android.net.Uri getUri()>();

        if r17 == null goto label12;

        r18 = staticinvoke <com.android.server.uri.GrantUri: com.android.server.uri.GrantUri resolve(int,android.net.Uri,int)>(i4, r17, i1);

        i11 = specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: int checkGrantUriPermissionUnlocked(int,java.lang.String,com.android.server.uri.GrantUri,int,int)>(i0, r1, r18, i1, i9);

        r19 = r14;

        if i11 <= 0 goto label11;

        r19 = r14;

        if r14 != null goto label10;

        $r8 = new com.android.server.uri.NeededUriGrants;

        specialinvoke $r8.<com.android.server.uri.NeededUriGrants: void <init>(java.lang.String,int,int)>(r1, i11, i1);

        r19 = $r8;

     label10:
        $r7 = r19.<com.android.server.uri.NeededUriGrants: android.util.ArraySet uris>;

        virtualinvoke $r7.<android.util.ArraySet: boolean add(java.lang.Object)>(r18);

     label11:
        r14 = r19;

        goto label14;

     label12:
        $r6 = virtualinvoke r2.<android.content.ClipData: android.content.ClipData$Item getItemAt(int)>(i10);

        r20 = virtualinvoke $r6.<android.content.ClipData$Item: android.content.Intent getIntent()>();

        if r20 == null goto label13;

        r21 = specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: com.android.server.uri.NeededUriGrants checkGrantUriPermissionFromIntentUnlocked(int,java.lang.String,android.content.Intent,int,com.android.server.uri.NeededUriGrants,int)>(i0, r1, r20, i1, r14, i2);

        i11 = i9;

        if r21 == null goto label14;

        r14 = r21;

        i11 = i9;

        goto label14;

     label13:
        i11 = i9;

     label14:
        i10 = i10 + 1;

        i9 = i11;

        goto label09;

     label15:
        r16 = r14;

     label16:
        return r16;

     label17:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("targetPkg");

        throw $r3;
    }

    private int checkGrantUriPermissionUnlocked(int, java.lang.String, android.net.Uri, int, int)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        int i0, i1, i2, $i3;
        java.lang.String r1;
        android.net.Uri r2;
        com.android.server.uri.GrantUri $r3;

        r0 := @this: com.android.server.uri.UriGrantsManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.net.Uri;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $r3 = new com.android.server.uri.GrantUri;

        specialinvoke $r3.<com.android.server.uri.GrantUri: void <init>(int,android.net.Uri,int)>(i2, r2, i1);

        $i3 = specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: int checkGrantUriPermissionUnlocked(int,java.lang.String,com.android.server.uri.GrantUri,int,int)>(i0, r1, $r3, i1, -1);

        return $i3;
    }

    private int checkGrantUriPermissionUnlocked(int, java.lang.String, com.android.server.uri.GrantUri, int, int)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i14, i15, $i16, i17, $i18, i19, i20, $i21, i22;
        android.content.pm.ProviderInfo r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z11, z12, z13, z14, z15, z16, $z17, z18, z20, z21, z22, $z23, z24;
        android.net.Uri $r2, $r5, $r53, $r62, $r76, $r80, $r92;
        java.lang.String $r3, $r4, $r6, $r7, $r8, $r9, $r16, $r24, $r27, $r30, $r36, $r39, $r42, $r48, $r55, $r64, $r67, $r70, $r71, $r72, $r77, $r79, $r81, $r82, $r87, r89, $r93;
        java.lang.StringBuilder $r10, $r17, $r25, $r37, $r74, $r83;
        java.lang.SecurityException $r15, $r23, $r35, $r47;
        android.os.PatternMatcher[] $r49, $r50, $r52, $r96;
        android.os.PatternMatcher $r51, $r54;
        android.content.pm.PackageManagerInternal $r56, $r73;
        android.content.pm.ApplicationInfo $r57;
        android.content.pm.PathPermission[] $r58, $r59, $r61, $r65, $r68, $r95;
        android.content.pm.PathPermission $r60, $r63, $r66, $r69;
        java.lang.Throwable $r88;
        com.android.server.uri.GrantUri r90;
        java.lang.Object r99;

        r0 := @this: com.android.server.uri.UriGrantsManagerService;

        i0 := @parameter0: int;

        r89 := @parameter1: java.lang.String;

        r90 := @parameter2: com.android.server.uri.GrantUri;

        i1 := @parameter3: int;

        i14 := @parameter4: int;

        $z0 = staticinvoke <android.content.Intent: boolean isAccessUriMode(int)>(i1);

        if $z0 != 0 goto label01;

        return -1;

     label01:
        $r3 = "content";

        $r2 = r90.<com.android.server.uri.GrantUri: android.net.Uri uri>;

        $r4 = virtualinvoke $r2.<android.net.Uri: java.lang.String getScheme()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 != 0 goto label02;

        return -1;

     label02:
        i15 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        if i15 == 1000 goto label03;

        if i15 != 0 goto label05;

     label03:
        $r6 = "com.android.settings.files";

        $r5 = r90.<com.android.server.uri.GrantUri: android.net.Uri uri>;

        $r7 = virtualinvoke $r5.<android.net.Uri: java.lang.String getAuthority()>();

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z2 != 0 goto label05;

        $r81 = "com.android.settings.module_licenses";

        $r80 = r90.<com.android.server.uri.GrantUri: android.net.Uri uri>;

        $r82 = virtualinvoke $r80.<android.net.Uri: java.lang.String getAuthority()>();

        $z9 = virtualinvoke $r81.<java.lang.String: boolean equals(java.lang.Object)>($r82);

        if $z9 == 0 goto label04;

        goto label05;

     label04:
        $r83 = new java.lang.StringBuilder;

        specialinvoke $r83.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("For security reasons, the system cannot issue a Uri permission grant to ");

        virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r90);

        virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; use startActivityAsCaller() instead");

        $r87 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UriGrantsManagerService", $r87);

        return -1;

     label05:
        $r92 = r90.<com.android.server.uri.GrantUri: android.net.Uri uri>;

        $r93 = virtualinvoke $r92.<android.net.Uri: java.lang.String getAuthority()>();

        $i16 = r90.<com.android.server.uri.GrantUri: int sourceUserId>;

        r1 = specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: android.content.pm.ProviderInfo getProviderInfo(java.lang.String,int,int)>($r93, $i16, 268435456);

        if r1 != null goto label06;

        $r74 = new java.lang.StringBuilder;

        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No content provider found for permission check: ");

        $r76 = r90.<com.android.server.uri.GrantUri: android.net.Uri uri>;

        $r77 = virtualinvoke $r76.<android.net.Uri: java.lang.String toSafeString()>();

        virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r77);

        $r79 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UriGrantsManagerService", $r79);

        return -1;

     label06:
        if i14 >= 0 goto label08;

        if r89 == null goto label08;

        $r73 = r0.<com.android.server.uri.UriGrantsManagerService: android.content.pm.PackageManagerInternal mPmInternal>;

        $i11 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        i17 = virtualinvoke $r73.<android.content.pm.PackageManagerInternal: int getPackageUidInternal(java.lang.String,int,int)>(r89, 268435456, $i11);

        if i17 >= 0 goto label07;

        return -1;

     label07:
        goto label09;

     label08:
        i17 = i14;

     label09:
        if i17 < 0 goto label10;

        z11 = 0;

        $z8 = specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: boolean checkHoldingPermissionsUnlocked(android.content.pm.ProviderInfo,com.android.server.uri.GrantUri,int,int)>(r1, r90, i17, i1);

        if $z8 == 0 goto label17;

        z11 = 1;

        goto label17;

     label10:
        z12 = r1.<android.content.pm.ProviderInfo: boolean exported>;

        z13 = z12;

        $i3 = i1 & 1;

        if $i3 == 0 goto label11;

        z13 = z12;

        $r72 = r1.<android.content.pm.ProviderInfo: java.lang.String readPermission>;

        if $r72 == null goto label11;

        z13 = 0;

     label11:
        z14 = z13;

        $i18 = i1 & 2;

        if $i18 == 0 goto label12;

        z14 = z13;

        $r71 = r1.<android.content.pm.ProviderInfo: java.lang.String writePermission>;

        if $r71 == null goto label12;

        z14 = 0;

     label12:
        z15 = z14;

        $r95 = r1.<android.content.pm.ProviderInfo: android.content.pm.PathPermission[] pathPermissions>;

        if $r95 == null goto label16;

        $r58 = r1.<android.content.pm.ProviderInfo: android.content.pm.PathPermission[] pathPermissions>;

        i19 = lengthof $r58;

        i20 = 0;

     label13:
        z15 = z14;

        if i20 >= i19 goto label16;

        $r59 = r1.<android.content.pm.ProviderInfo: android.content.pm.PathPermission[] pathPermissions>;

        $r60 = $r59[i20];

        if $r60 == null goto label15;

        $r61 = r1.<android.content.pm.ProviderInfo: android.content.pm.PathPermission[] pathPermissions>;

        $r63 = $r61[i20];

        $r62 = r90.<com.android.server.uri.GrantUri: android.net.Uri uri>;

        $r64 = virtualinvoke $r62.<android.net.Uri: java.lang.String getPath()>();

        $z7 = virtualinvoke $r63.<android.content.pm.PathPermission: boolean match(java.lang.String)>($r64);

        if $z7 == 0 goto label15;

        z16 = z14;

        $i10 = i1 & 1;

        if $i10 == 0 goto label14;

        z16 = z14;

        $r68 = r1.<android.content.pm.ProviderInfo: android.content.pm.PathPermission[] pathPermissions>;

        $r69 = $r68[i20];

        $r70 = virtualinvoke $r69.<android.content.pm.PathPermission: java.lang.String getReadPermission()>();

        if $r70 == null goto label14;

        z16 = 0;

     label14:
        z15 = z16;

        $i21 = i1 & 2;

        if $i21 == 0 goto label16;

        z15 = z16;

        $r65 = r1.<android.content.pm.ProviderInfo: android.content.pm.PathPermission[] pathPermissions>;

        $r66 = $r65[i20];

        $r67 = virtualinvoke $r66.<android.content.pm.PathPermission: java.lang.String getWritePermission()>();

        if $r67 == null goto label16;

        z15 = 0;

        goto label16;

     label15:
        i20 = i20 + 1;

        goto label13;

     label16:
        z11 = 0;

        if z15 == 0 goto label17;

        z11 = 1;

     label17:
        $z17 = r1.<android.content.pm.ProviderInfo: boolean forceUriPermissions>;

        if $z17 == 0 goto label18;

        z18 = 0;

        goto label19;

     label18:
        z18 = z11;

     label19:
        $i4 = i1 & 192;

        if $i4 != 0 goto label20;

        z20 = 1;

        goto label21;

     label20:
        z20 = 0;

     label21:
        if z20 == 0 goto label22;

        if z18 == 0 goto label22;

        $r56 = r0.<com.android.server.uri.UriGrantsManagerService: android.content.pm.PackageManagerInternal mPmInternal>;

        $i7 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i17);

        $i8 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i17);

        $r57 = r1.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i9 = $r57.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r56.<android.content.pm.PackageManagerInternal: void grantImplicitAccess(int,android.content.Intent,int,int,boolean)>($i7, null, $i8, $i9, 0);

        return -1;

     label22:
        if i17 < 0 goto label23;

        $i5 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i17);

        $i6 = r90.<com.android.server.uri.GrantUri: int sourceUserId>;

        if $i5 == $i6 goto label23;

        $z6 = specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: boolean checkHoldingPermissionsInternalUnlocked(android.content.pm.ProviderInfo,com.android.server.uri.GrantUri,int,int,boolean)>(r1, r90, i0, i1, 0);

        if $z6 == 0 goto label23;

        z21 = 1;

        goto label24;

     label23:
        z21 = 0;

     label24:
        z22 = r1.<android.content.pm.ProviderInfo: boolean grantUriPermissions>;

        $r96 = r1.<android.content.pm.ProviderInfo: android.os.PatternMatcher[] uriPermissionPatterns>;

        $z23 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>($r96);

        if $z23 != 0 goto label28;

        $r49 = r1.<android.content.pm.ProviderInfo: android.os.PatternMatcher[] uriPermissionPatterns>;

        i2 = lengthof $r49;

        i22 = 0;

     label25:
        if i22 >= i2 goto label27;

        $r50 = r1.<android.content.pm.ProviderInfo: android.os.PatternMatcher[] uriPermissionPatterns>;

        $r51 = $r50[i22];

        if $r51 == null goto label26;

        $r52 = r1.<android.content.pm.ProviderInfo: android.os.PatternMatcher[] uriPermissionPatterns>;

        $r54 = $r52[i22];

        $r53 = r90.<com.android.server.uri.GrantUri: android.net.Uri uri>;

        $r55 = virtualinvoke $r53.<android.net.Uri: java.lang.String getPath()>();

        $z5 = virtualinvoke $r54.<android.os.PatternMatcher: boolean match(java.lang.String)>($r55);

        if $z5 == 0 goto label26;

        z22 = 1;

        goto label28;

     label26:
        i22 = i22 + 1;

        goto label25;

     label27:
        z22 = 0;

        goto label28;

     label28:
        if z22 != 0 goto label31;

        if z21 == 0 goto label30;

        if z20 == 0 goto label29;

        goto label31;

     label29:
        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provider ");

        $r39 = r1.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r42 = r1.<android.content.pm.ProviderInfo: java.lang.String name>;

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not allow granting of advanced Uri permissions (uri ");

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r90);

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r47 = new java.lang.SecurityException;

        $r48 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r47.<java.lang.SecurityException: void <init>(java.lang.String)>($r48);

        throw $r47;

     label30:
        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provider ");

        $r27 = r1.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r30 = r1.<android.content.pm.ProviderInfo: java.lang.String name>;

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not allow granting of Uri permissions (uri ");

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r90);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r35 = new java.lang.SecurityException;

        $r36 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r35.<java.lang.SecurityException: void <init>(java.lang.String)>($r36);

        throw $r35;

     label31:
        $z3 = specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: boolean checkHoldingPermissionsUnlocked(android.content.pm.ProviderInfo,com.android.server.uri.GrantUri,int,int)>(r1, r90, i0, i1);

        if $z3 != 0 goto label38;

        r99 = r0.<com.android.server.uri.UriGrantsManagerService: java.lang.Object mLock>;

        entermonitor r99;

     label32:
        z24 = specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: boolean checkUriPermissionLocked(com.android.server.uri.GrantUri,int,int)>(r90, i0, i1);

        exitmonitor r99;

     label33:
        if z24 != 0 goto label38;

        $r9 = "android.permission.MANAGE_DOCUMENTS";

        $r8 = r1.<android.content.pm.ProviderInfo: java.lang.String readPermission>;

        $z4 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z4 == 0 goto label34;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UID ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have permission to ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r90);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; you could obtain access using ACTION_OPEN_DOCUMENT or related APIs");

        $r23 = new java.lang.SecurityException;

        $r24 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.SecurityException: void <init>(java.lang.String)>($r24);

        throw $r23;

     label34:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UID ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have permission to ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r90);

        $r15 = new java.lang.SecurityException;

        $r16 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.SecurityException: void <init>(java.lang.String)>($r16);

        throw $r15;

     label35:
        $r88 := @caughtexception;

     label36:
        exitmonitor r99;

     label37:
        throw $r88;

     label38:
        return i17;

        catch java.lang.Throwable from label32 to label33 with label35;
        catch java.lang.Throwable from label36 to label37 with label35;
    }

    private boolean checkHoldingPermissionsInternalUnlocked(android.content.pm.ProviderInfo, com.android.server.uri.GrantUri, int, int, boolean)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10;
        android.content.pm.PathPermission r1;
        java.lang.Object $r2;
        boolean $z1, $z2, $z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13, z14, z15, z16, z17, z18, z19, z20, z21;
        java.lang.IllegalStateException $r3;
        android.content.pm.ApplicationInfo $r4;
        java.lang.String $r5, $r7, $r8, $r9, $r10, $r13, r15, r16, r17;
        android.net.Uri $r6;
        android.content.pm.ProviderInfo r11;
        com.android.server.uri.GrantUri r12;
        android.content.pm.PathPermission[] r14;

        r0 := @this: com.android.server.uri.UriGrantsManagerService;

        r11 := @parameter0: android.content.pm.ProviderInfo;

        r12 := @parameter1: com.android.server.uri.GrantUri;

        i0 := @parameter2: int;

        i8 := @parameter3: int;

        z4 := @parameter4: boolean;

        $r2 = r0.<com.android.server.uri.UriGrantsManagerService: java.lang.Object mLock>;

        $z1 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>($r2);

        if $z1 != 0 goto label25;

        $r4 = r11.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        i9 = $r4.<android.content.pm.ApplicationInfo: int uid>;

        if i9 != i0 goto label01;

        return 1;

     label01:
        $z2 = r11.<android.content.pm.ProviderInfo: boolean exported>;

        if $z2 != 0 goto label02;

        return 0;

     label02:
        $i2 = i8 & 1;

        if $i2 != 0 goto label03;

        z5 = 1;

        goto label04;

     label03:
        z5 = 0;

     label04:
        $i3 = i8 & 2;

        if $i3 != 0 goto label05;

        z6 = 1;

        goto label06;

     label05:
        z6 = 0;

     label06:
        z7 = z5;

        if z5 != 0 goto label07;

        z7 = z5;

        $r9 = r11.<android.content.pm.ProviderInfo: java.lang.String readPermission>;

        if $r9 == null goto label07;

        z7 = z5;

        if z4 == 0 goto label07;

        z7 = z5;

        $r10 = r11.<android.content.pm.ProviderInfo: java.lang.String readPermission>;

        $i7 = specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: int checkUidPermission(java.lang.String,int)>($r10, i0);

        if $i7 != 0 goto label07;

        z7 = 1;

     label07:
        z8 = z6;

        if z6 != 0 goto label08;

        z8 = z6;

        $r7 = r11.<android.content.pm.ProviderInfo: java.lang.String writePermission>;

        if $r7 == null goto label08;

        z8 = z6;

        if z4 == 0 goto label08;

        z8 = z6;

        $r8 = r11.<android.content.pm.ProviderInfo: java.lang.String writePermission>;

        $i6 = specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: int checkUidPermission(java.lang.String,int)>($r8, i0);

        if $i6 != 0 goto label08;

        z8 = 1;

     label08:
        $r13 = r11.<android.content.pm.ProviderInfo: java.lang.String readPermission>;

        if $r13 != null goto label09;

        z9 = 1;

        goto label10;

     label09:
        z9 = 0;

     label10:
        $r5 = r11.<android.content.pm.ProviderInfo: java.lang.String writePermission>;

        if $r5 != null goto label11;

        z10 = 1;

        goto label12;

     label11:
        z10 = 0;

     label12:
        r14 = r11.<android.content.pm.ProviderInfo: android.content.pm.PathPermission[] pathPermissions>;

        if r14 == null goto label19;

        $r6 = r12.<com.android.server.uri.GrantUri: android.net.Uri uri>;

        r15 = virtualinvoke $r6.<android.net.Uri: java.lang.String getPath()>();

        i10 = lengthof r14;

     label13:
        z11 = z7;

        z12 = z8;

        z13 = z9;

        z14 = z10;

        if i10 <= 0 goto label20;

        if z7 == 0 goto label14;

        z11 = z7;

        z12 = z8;

        z13 = z9;

        z14 = z10;

        if z8 != 0 goto label20;

     label14:
        i1 = i10 - 1;

        r1 = r14[i1];

        z15 = z7;

        z16 = z8;

        z17 = z9;

        z18 = z10;

        $z3 = virtualinvoke r1.<android.content.pm.PathPermission: boolean match(java.lang.String)>(r15);

        if $z3 == 0 goto label18;

        z19 = z7;

        z20 = z9;

        if z7 != 0 goto label16;

        r16 = virtualinvoke r1.<android.content.pm.PathPermission: java.lang.String getReadPermission()>();

        z19 = z7;

        z20 = z9;

        if r16 == null goto label16;

        if z4 == 0 goto label15;

        $i5 = specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: int checkUidPermission(java.lang.String,int)>(r16, i0);

        if $i5 != 0 goto label15;

        z19 = 1;

        z20 = z9;

        goto label16;

     label15:
        z20 = 0;

        z19 = z7;

     label16:
        z15 = z19;

        z16 = z8;

        z17 = z20;

        z18 = z10;

        if z8 != 0 goto label18;

        r17 = virtualinvoke r1.<android.content.pm.PathPermission: java.lang.String getWritePermission()>();

        z15 = z19;

        z16 = z8;

        z17 = z20;

        z18 = z10;

        if r17 == null goto label18;

        if z4 == 0 goto label17;

        $i4 = specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: int checkUidPermission(java.lang.String,int)>(r17, i0);

        if $i4 != 0 goto label17;

        z16 = 1;

        z15 = z19;

        z17 = z20;

        z18 = z10;

        goto label18;

     label17:
        z18 = 0;

        z17 = z20;

        z16 = z8;

        z15 = z19;

     label18:
        z7 = z15;

        z8 = z16;

        z9 = z17;

        z10 = z18;

        i10 = i1;

        goto label13;

     label19:
        z14 = z10;

        z13 = z9;

        z12 = z8;

        z11 = z7;

     label20:
        if z13 == 0 goto label21;

        z11 = 1;

     label21:
        if z14 == 0 goto label22;

        z12 = 1;

     label22:
        if z11 == 0 goto label23;

        if z12 == 0 goto label23;

        z21 = 1;

        goto label24;

     label23:
        z21 = 0;

     label24:
        return z21;

     label25:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Must never hold local mLock");

        throw $r3;
    }

    private boolean checkHoldingPermissionsUnlocked(android.content.pm.ProviderInfo, com.android.server.uri.GrantUri, int, int)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        android.content.pm.ProviderInfo r1;
        com.android.server.uri.GrantUri r2;
        int i0, i1, $i2, $i3, $i4;
        boolean $z0;

        r0 := @this: com.android.server.uri.UriGrantsManagerService;

        r1 := @parameter0: android.content.pm.ProviderInfo;

        r2 := @parameter1: com.android.server.uri.GrantUri;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $i3 = r2.<com.android.server.uri.GrantUri: int sourceUserId>;

        if $i2 == $i3 goto label1;

        $i4 = staticinvoke <android.app.ActivityManager: int checkComponentPermission(java.lang.String,int,int,boolean)>("android.permission.INTERACT_ACROSS_USERS", i0, -1, 1);

        if $i4 == 0 goto label1;

        return 0;

     label1:
        $z0 = specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: boolean checkHoldingPermissionsInternalUnlocked(android.content.pm.ProviderInfo,com.android.server.uri.GrantUri,int,int,boolean)>(r1, r2, i0, i1, 1);

        return $z0;
    }

    private int checkUidPermission(java.lang.String, int)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        android.content.pm.IPackageManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        java.lang.String r4;
        int i0, i1;

        r0 := @this: com.android.server.uri.UriGrantsManagerService;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $r1 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        i1 = interfaceinvoke $r1.<android.content.pm.IPackageManager: int checkUidPermission(java.lang.String,int)>(r4, i0);

     label2:
        return i1;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private boolean checkUriPermissionLocked(com.android.server.uri.GrantUri, int, int)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        com.android.server.uri.GrantUri r1, $r7, $r8;
        int i0, i1, $i2, $i3, $i4, i5, i7;
        android.util.ArrayMap r2;
        android.util.SparseArray $r3;
        java.lang.Object $r4, $r5, $r6;
        boolean $z0, $z1, z2;
        android.net.Uri $r9, $r10;
        byte b6;
        com.android.server.uri.UriPermission r11, r12;

        r0 := @this: com.android.server.uri.UriGrantsManagerService;

        r1 := @parameter0: com.android.server.uri.GrantUri;

        i5 := @parameter1: int;

        i0 := @parameter2: int;

        $i2 = i0 & 64;

        if $i2 == 0 goto label01;

        z2 = 1;

        goto label02;

     label01:
        z2 = 0;

     label02:
        if z2 == 0 goto label03;

        b6 = 3;

        goto label04;

     label03:
        b6 = 1;

     label04:
        if i5 != 0 goto label05;

        return 1;

     label05:
        $r3 = r0.<com.android.server.uri.UriGrantsManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i5);

        r2 = (android.util.ArrayMap) $r4;

        if r2 != null goto label06;

        return 0;

     label06:
        $r5 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r11 = (com.android.server.uri.UriPermission) $r5;

        if r11 == null goto label07;

        $i4 = virtualinvoke r11.<com.android.server.uri.UriPermission: int getStrength(int)>(i0);

        if $i4 < b6 goto label07;

        return 1;

     label07:
        i1 = virtualinvoke r2.<android.util.ArrayMap: int size()>();

        i7 = 0;

     label08:
        if i7 >= i1 goto label10;

        $r6 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i7);

        r12 = (com.android.server.uri.UriPermission) $r6;

        $r7 = r12.<com.android.server.uri.UriPermission: com.android.server.uri.GrantUri uri>;

        $z0 = $r7.<com.android.server.uri.GrantUri: boolean prefix>;

        if $z0 == 0 goto label09;

        $r10 = r1.<com.android.server.uri.GrantUri: android.net.Uri uri>;

        $r8 = r12.<com.android.server.uri.UriPermission: com.android.server.uri.GrantUri uri>;

        $r9 = $r8.<com.android.server.uri.GrantUri: android.net.Uri uri>;

        $z1 = virtualinvoke $r10.<android.net.Uri: boolean isPathPrefixMatch(android.net.Uri)>($r9);

        if $z1 == 0 goto label09;

        $i3 = virtualinvoke r12.<com.android.server.uri.UriPermission: int getStrength(int)>(i0);

        if $i3 < b6 goto label09;

        return 1;

     label09:
        i7 = i7 + 1;

        goto label08;

     label10:
        return 0;
    }

    static com.android.server.uri.UriGrantsManagerService createForTest(java.io.File)
    {
        com.android.server.uri.UriGrantsManagerService $r0;
        java.lang.Object $r1, $r3;
        android.app.ActivityManagerInternal $r2;
        android.content.pm.PackageManagerInternal $r4;
        java.io.File r5;

        r5 := @parameter0: java.io.File;

        $r0 = new com.android.server.uri.UriGrantsManagerService;

        specialinvoke $r0.<com.android.server.uri.UriGrantsManagerService: void <init>(java.io.File)>(r5);

        $r1 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/app/ActivityManagerInternal;");

        $r2 = (android.app.ActivityManagerInternal) $r1;

        $r0.<com.android.server.uri.UriGrantsManagerService: android.app.ActivityManagerInternal mAmInternal> = $r2;

        $r3 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/content/pm/PackageManagerInternal;");

        $r4 = (android.content.pm.PackageManagerInternal) $r3;

        $r0.<com.android.server.uri.UriGrantsManagerService: android.content.pm.PackageManagerInternal mPmInternal> = $r4;

        return $r0;
    }

    private void enforceNotIsolatedCaller(java.lang.String)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        java.lang.String r1, $r7;
        int $i0;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.SecurityException $r6;

        r0 := @this: com.android.server.uri.UriGrantsManagerService;

        r1 := @parameter0: java.lang.String;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $z0 = staticinvoke <android.os.UserHandle: boolean isIsolated(int)>($i0);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Isolated process not allowed to call ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = new java.lang.SecurityException;

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.SecurityException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    private com.android.server.uri.UriPermission findOrCreateUriPermissionLocked(java.lang.String, java.lang.String, int, com.android.server.uri.GrantUri)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        java.lang.String r1, r2;
        int i0;
        com.android.server.uri.GrantUri r3;
        com.android.server.uri.UriPermission r4, $r8, r13;
        android.util.SparseArray $r5, $r10;
        java.lang.Object $r6, $r7;
        android.util.ArrayMap r11, r12;

        r0 := @this: com.android.server.uri.UriGrantsManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: com.android.server.uri.GrantUri;

        $r5 = r0.<com.android.server.uri.UriGrantsManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r11 = (android.util.ArrayMap) $r6;

        r12 = r11;

        if r11 != null goto label1;

        r12 = staticinvoke <com.google.android.collect.Maps: android.util.ArrayMap newArrayMap()>();

        $r10 = r0.<com.android.server.uri.UriGrantsManagerService: android.util.SparseArray mGrantedUriPermissions>;

        virtualinvoke $r10.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r12);

     label1:
        $r7 = virtualinvoke r12.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (com.android.server.uri.UriPermission) $r7;

        r13 = r4;

        if r4 != null goto label2;

        $r8 = new com.android.server.uri.UriPermission;

        specialinvoke $r8.<com.android.server.uri.UriPermission: void <init>(java.lang.String,java.lang.String,int,com.android.server.uri.GrantUri)>(r1, r2, i0, r3);

        r13 = $r8;

        virtualinvoke r12.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r8);

     label2:
        return r13;
    }

    private com.android.server.uri.UriPermission findUriPermissionLocked(int, com.android.server.uri.GrantUri)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        int i0;
        com.android.server.uri.GrantUri r1;
        android.util.ArrayMap r2;
        android.util.SparseArray $r3;
        java.lang.Object $r4, $r5;
        com.android.server.uri.UriPermission $r6;

        r0 := @this: com.android.server.uri.UriGrantsManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.uri.GrantUri;

        $r3 = r0.<com.android.server.uri.UriGrantsManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (android.util.ArrayMap) $r4;

        if r2 == null goto label1;

        $r5 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        $r6 = (com.android.server.uri.UriPermission) $r5;

        return $r6;

     label1:
        return null;
    }

    private android.content.pm.ProviderInfo getProviderInfo(java.lang.String, int, int)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        java.lang.String r1;
        int i0, i1, $i2;
        android.content.pm.PackageManagerInternal $r2;
        android.content.pm.ProviderInfo $r3;

        r0 := @this: com.android.server.uri.UriGrantsManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.server.uri.UriGrantsManagerService: android.content.pm.PackageManagerInternal mPmInternal>;

        $i2 = i1 | 2048;

        $r3 = virtualinvoke $r2.<android.content.pm.PackageManagerInternal: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int,int)>(r1, $i2, i0);

        return $r3;
    }

    private void grantUriPermissionFromOwnerUnlocked(android.os.IBinder, int, java.lang.String, android.net.Uri, int, int, int)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        android.os.IBinder r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        android.net.Uri r2;
        com.android.server.uri.UriPermissionOwner r3;
        android.app.ActivityManagerInternal $r4;
        java.lang.StringBuilder $r5;
        java.lang.IllegalArgumentException $r8, $r10, $r11;
        java.lang.String $r9, r14;
        com.android.server.uri.GrantUri $r12;
        java.lang.SecurityException $r13;

        r0 := @this: com.android.server.uri.UriGrantsManagerService;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r14 := @parameter2: java.lang.String;

        r2 := @parameter3: android.net.Uri;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        i8 := @parameter6: int;

        $r4 = r0.<com.android.server.uri.UriGrantsManagerService: android.app.ActivityManagerInternal mAmInternal>;

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i9 = virtualinvoke $r4.<android.app.ActivityManagerInternal: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>($i3, $i4, i8, 0, 2, "grantUriPermissionFromOwner", null);

        r3 = staticinvoke <com.android.server.uri.UriPermissionOwner: com.android.server.uri.UriPermissionOwner fromExternalToken(android.os.IBinder)>(r1);

        if r3 == null goto label5;

        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i0 == $i5 goto label2;

        $i6 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i7 = staticinvoke <android.os.Process: int myUid()>();

        if $i6 != $i7 goto label1;

        goto label2;

     label1:
        $r13 = new java.lang.SecurityException;

        specialinvoke $r13.<java.lang.SecurityException: void <init>(java.lang.String)>("nice try");

        throw $r13;

     label2:
        if r14 == null goto label4;

        if r2 == null goto label3;

        $r12 = new com.android.server.uri.GrantUri;

        specialinvoke $r12.<com.android.server.uri.GrantUri: void <init>(int,android.net.Uri,int)>(i2, r2, i1);

        specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: void grantUriPermissionUnlocked(int,java.lang.String,com.android.server.uri.GrantUri,int,com.android.server.uri.UriPermissionOwner,int)>(i0, r14, $r12, i1, r3, i9);

        return;

     label3:
        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null uri");

        throw $r11;

     label4:
        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null target");

        throw $r10;

     label5:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown owner: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r8;
    }

    private void grantUriPermissionUnchecked(int, java.lang.String, com.android.server.uri.GrantUri, int, com.android.server.uri.UriPermissionOwner)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        com.android.server.uri.GrantUri r1;
        com.android.server.uri.UriPermissionOwner r2;
        android.content.pm.ProviderInfo r3;
        java.lang.Object r4;
        boolean $z0;
        android.net.Uri $r5;
        java.lang.String $r6, $r7, $r12, $r14, r16;
        android.content.pm.PackageManagerInternal $r8;
        android.content.pm.ApplicationInfo $r9;
        java.lang.StringBuilder $r10;
        java.lang.Throwable $r15;
        com.android.server.uri.UriPermission r18;

        r0 := @this: com.android.server.uri.UriGrantsManagerService;

        i0 := @parameter0: int;

        r16 := @parameter1: java.lang.String;

        r1 := @parameter2: com.android.server.uri.GrantUri;

        i1 := @parameter3: int;

        r2 := @parameter4: com.android.server.uri.UriPermissionOwner;

        $z0 = staticinvoke <android.content.Intent: boolean isAccessUriMode(int)>(i1);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r5 = r1.<com.android.server.uri.GrantUri: android.net.Uri uri>;

        $r6 = virtualinvoke $r5.<android.net.Uri: java.lang.String getAuthority()>();

        $i2 = r1.<com.android.server.uri.GrantUri: int sourceUserId>;

        r3 = specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: android.content.pm.ProviderInfo getProviderInfo(java.lang.String,int,int)>($r6, $i2, 268435456);

        if r3 != null goto label2;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No content provider found for grant: ");

        $r12 = virtualinvoke r1.<com.android.server.uri.GrantUri: java.lang.String toSafeString()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UriGrantsManagerService", $r14);

        return;

     label2:
        r4 = r0.<com.android.server.uri.UriGrantsManagerService: java.lang.Object mLock>;

        entermonitor r4;

     label3:
        $r7 = r3.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        r18 = specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: com.android.server.uri.UriPermission findOrCreateUriPermissionLocked(java.lang.String,java.lang.String,int,com.android.server.uri.GrantUri)>($r7, r16, i0, r1);

        exitmonitor r4;

     label4:
        virtualinvoke r18.<com.android.server.uri.UriPermission: boolean grantModes(int,com.android.server.uri.UriPermissionOwner)>(i1, r2);

        $r8 = r0.<com.android.server.uri.UriGrantsManagerService: android.content.pm.PackageManagerInternal mPmInternal>;

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $i4 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        $r9 = r3.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i5 = $r9.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r8.<android.content.pm.PackageManagerInternal: void grantImplicitAccess(int,android.content.Intent,int,int,boolean)>($i3, null, $i4, $i5, 0);

        return;

     label5:
        $r15 := @caughtexception;

     label6:
        exitmonitor r4;

     label7:
        throw $r15;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    private void grantUriPermissionUncheckedFromIntent(com.android.server.uri.NeededUriGrants, com.android.server.uri.UriPermissionOwner)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        com.android.server.uri.NeededUriGrants r1;
        com.android.server.uri.UriPermissionOwner r2;
        int i0, $i1, $i2, i3;
        android.util.ArraySet $r3, $r4;
        java.lang.String $r5;
        java.lang.Object $r6;
        com.android.server.uri.GrantUri $r7;

        r0 := @this: com.android.server.uri.UriGrantsManagerService;

        r1 := @parameter0: com.android.server.uri.NeededUriGrants;

        r2 := @parameter1: com.android.server.uri.UriPermissionOwner;

        if r1 != null goto label1;

        return;

     label1:
        $r3 = r1.<com.android.server.uri.NeededUriGrants: android.util.ArraySet uris>;

        i0 = virtualinvoke $r3.<android.util.ArraySet: int size()>();

        i3 = 0;

     label2:
        if i3 >= i0 goto label3;

        $i1 = r1.<com.android.server.uri.NeededUriGrants: int targetUid>;

        $r5 = r1.<com.android.server.uri.NeededUriGrants: java.lang.String targetPkg>;

        $r4 = r1.<com.android.server.uri.NeededUriGrants: android.util.ArraySet uris>;

        $r6 = virtualinvoke $r4.<android.util.ArraySet: java.lang.Object valueAt(int)>(i3);

        $r7 = (com.android.server.uri.GrantUri) $r6;

        $i2 = r1.<com.android.server.uri.NeededUriGrants: int flags>;

        specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: void grantUriPermissionUnchecked(int,java.lang.String,com.android.server.uri.GrantUri,int,com.android.server.uri.UriPermissionOwner)>($i1, $r5, $r7, $i2, r2);

        i3 = i3 + 1;

        goto label2;

     label3:
        return;
    }

    private void grantUriPermissionUnlocked(int, java.lang.String, com.android.server.uri.GrantUri, int, com.android.server.uri.UriPermissionOwner, int)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        java.lang.String r1;
        com.android.server.uri.GrantUri r2;
        int i0, i1, $i2, i3, i4;
        com.android.server.uri.UriPermissionOwner r3;
        java.lang.NullPointerException $r4;
        android.content.pm.PackageManagerInternal $r5;

        r0 := @this: com.android.server.uri.UriGrantsManagerService;

        i3 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.android.server.uri.GrantUri;

        i0 := @parameter3: int;

        r3 := @parameter4: com.android.server.uri.UriPermissionOwner;

        i1 := @parameter5: int;

        if r1 == null goto label2;

        $r5 = r0.<com.android.server.uri.UriGrantsManagerService: android.content.pm.PackageManagerInternal mPmInternal>;

        $i2 = virtualinvoke $r5.<android.content.pm.PackageManagerInternal: int getPackageUidInternal(java.lang.String,int,int)>(r1, 268435456, i1);

        i4 = specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: int checkGrantUriPermissionUnlocked(int,java.lang.String,com.android.server.uri.GrantUri,int,int)>(i3, r1, r2, i0, $i2);

        if i4 >= 0 goto label1;

        return;

     label1:
        specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: void grantUriPermissionUnchecked(int,java.lang.String,com.android.server.uri.GrantUri,int,com.android.server.uri.UriPermissionOwner)>(i4, r1, r2, i0, r3);

        return;

     label2:
        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("targetPkg");

        throw $r4;
    }

    private boolean matchesProvider(android.net.Uri, android.content.pm.ProviderInfo)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        int i0, $i1, i2;
        java.lang.String $r1, r4, r5;
        boolean $z0, $z1;
        android.net.Uri r2;
        android.content.pm.ProviderInfo r3;
        java.lang.String[] r6;

        r0 := @this: com.android.server.uri.UriGrantsManagerService;

        r2 := @parameter0: android.net.Uri;

        r3 := @parameter1: android.content.pm.ProviderInfo;

        r4 = virtualinvoke r2.<android.net.Uri: java.lang.String getAuthority()>();

        r5 = r3.<android.content.pm.ProviderInfo: java.lang.String authority>;

        $i1 = virtualinvoke r5.<java.lang.String: int indexOf(int)>(59);

        if $i1 != -1 goto label1;

        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        return $z1;

     label1:
        r6 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

        i0 = lengthof r6;

        i2 = 0;

     label2:
        if i2 >= i0 goto label4;

        $r1 = r6[i2];

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        return 0;
    }

    private boolean maybePrunePersistedUriGrantsLocked(int)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        java.util.ArrayList r1;
        com.android.server.uri.UriPermission r2, r11;
        int i0, $i1, $i2, $i3, i4, i5;
        android.util.SparseArray $r3;
        java.lang.Object $r4, $r7, $r8;
        java.util.Collection $r5;
        boolean $z0;
        com.android.server.uri.UriPermission$PersistedTimeComparator $r6;
        android.util.ArrayMap r9;
        java.util.Iterator r10;

        r0 := @this: com.android.server.uri.UriGrantsManagerService;

        i4 := @parameter0: int;

        $r3 = r0.<com.android.server.uri.UriGrantsManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i4);

        r9 = (android.util.ArrayMap) $r4;

        if r9 != null goto label1;

        return 0;

     label1:
        $i1 = virtualinvoke r9.<android.util.ArrayMap: int size()>();

        if $i1 >= 512 goto label2;

        return 0;

     label2:
        r1 = staticinvoke <com.google.android.collect.Lists: java.util.ArrayList newArrayList()>();

        $r5 = virtualinvoke r9.<android.util.ArrayMap: java.util.Collection values()>();

        r10 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r8 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.server.uri.UriPermission) $r8;

        $i3 = r2.<com.android.server.uri.UriPermission: int persistedModeFlags>;

        if $i3 == 0 goto label4;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

     label4:
        goto label3;

     label5:
        $i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i0 = $i2 - 512;

        if i0 > 0 goto label6;

        return 0;

     label6:
        $r6 = new com.android.server.uri.UriPermission$PersistedTimeComparator;

        specialinvoke $r6.<com.android.server.uri.UriPermission$PersistedTimeComparator: void <init>()>();

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r1, $r6);

        i5 = 0;

     label7:
        if i5 >= i0 goto label8;

        $r7 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r11 = (com.android.server.uri.UriPermission) $r7;

        virtualinvoke r11.<com.android.server.uri.UriPermission: boolean releasePersistableModes(int)>(-1);

        specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: void removeUriPermissionIfNeededLocked(com.android.server.uri.UriPermission)>(r11);

        i5 = i5 + 1;

        goto label7;

     label8:
        return 1;
    }

    private void readGrantedUriPermissionsLocked()
    {
        com.android.server.uri.UriGrantsManagerService r0;
        long l0, l2;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r3, $r9, $r10, $r11, $r12, $r19, $r20, r37, r38;
        android.net.Uri r4;
        boolean z0, $z1, $z2;
        int i1, i3, $i5, $i6, i25, i38, i39;
        android.content.pm.ProviderInfo r5;
        android.content.pm.PackageManagerInternal r6, $r22;
        android.util.AtomicFile $r7;
        java.nio.charset.Charset $r8;
        com.android.server.uri.UriPermission $r21;
        android.content.pm.ApplicationInfo $r23;
        java.lang.Throwable $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, r41, r42, r44;
        java.io.FileInputStream r32, r33, r34, r35, r36;
        com.android.server.uri.GrantUri r39;
        short s84;
        java.lang.StringBuilder r40;

        r0 := @this: com.android.server.uri.UriGrantsManagerService;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r32 = null;

        r33 = null;

        r34 = null;

        r35 = null;

     label01:
        $r7 = r0.<com.android.server.uri.UriGrantsManagerService: android.util.AtomicFile mGrantFile>;

        r36 = virtualinvoke $r7.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

     label02:
        r35 = r36;

        r32 = r36;

        r33 = r36;

        r34 = r36;

     label03:
        r1 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

     label04:
        r35 = r36;

        r32 = r36;

        r33 = r36;

        r34 = r36;

     label05:
        $r8 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r9 = virtualinvoke $r8.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r36, $r9);

     label06:
        r35 = r36;

        r32 = r36;

        r33 = r36;

        r34 = r36;

     label07:
        i25 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

     label08:
        if i25 == 1 goto label75;

        r35 = r36;

        r32 = r36;

        r33 = r36;

        r34 = r36;

     label09:
        r37 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

     label10:
        if i25 != 2 goto label74;

        r35 = r36;

        r32 = r36;

        r33 = r36;

        r34 = r36;

     label11:
        $r10 = "uri-grant";

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r37);

        if $z1 == 0 goto label73;

     label12:
        r35 = r36;

        r32 = r36;

        r33 = r36;

        r34 = r36;

     label13:
        i38 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r1, "userHandle", -10000);

     label14:
        if i38 == -10000 goto label15;

        i39 = i38;

        goto label19;

     label15:
        r35 = r36;

        r32 = r36;

        r33 = r36;

        r34 = r36;

     label16:
        i39 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "sourceUserId");

     label17:
        r35 = r36;

        r32 = r36;

        r33 = r36;

        r34 = r36;

     label18:
        i38 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "targetUserId");

     label19:
        r35 = r36;

        r32 = r36;

        r33 = r36;

        r34 = r36;

     label20:
        r38 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "sourcePkg");

     label21:
        r35 = r36;

        r32 = r36;

        r33 = r36;

        r34 = r36;

     label22:
        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "targetPkg");

     label23:
        r35 = r36;

        r32 = r36;

        r33 = r36;

        r34 = r36;

     label24:
        $r11 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "uri");

        r4 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r11);

     label25:
        r35 = r36;

        r32 = r36;

        r33 = r36;

        r34 = r36;

     label26:
        z0 = staticinvoke <com.android.internal.util.XmlUtils: boolean readBooleanAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "prefix");

     label27:
        r35 = r36;

        r32 = r36;

        r33 = r36;

        r34 = r36;

     label28:
        i1 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "modeFlags");

     label29:
        r35 = r36;

        r32 = r36;

        r33 = r36;

        r34 = r36;

     label30:
        l2 = staticinvoke <com.android.internal.util.XmlUtils: long readLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r1, "createdTime", l0);

     label31:
        r35 = r36;

        r32 = r36;

        r33 = r36;

        r34 = r36;

     label32:
        $r12 = virtualinvoke r4.<android.net.Uri: java.lang.String getAuthority()>();

        r5 = specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: android.content.pm.ProviderInfo getProviderInfo(java.lang.String,int,int)>($r12, i39, 786432);

     label33:
        if r5 == null goto label51;

        r35 = r36;

        r32 = r36;

        r33 = r36;

        r34 = r36;

     label34:
        $r20 = r5.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        $z2 = virtualinvoke r38.<java.lang.String: boolean equals(java.lang.Object)>($r20);

        if $z2 == 0 goto label51;

     label35:
        r35 = r36;

        r32 = r36;

        r33 = r36;

        r34 = r36;

     label36:
        r6 = r0.<com.android.server.uri.UriGrantsManagerService: android.content.pm.PackageManagerInternal mPmInternal>;

     label37:
        r35 = r36;

     label38:
        i3 = virtualinvoke r6.<android.content.pm.PackageManagerInternal: int getPackageUidInternal(java.lang.String,int,int)>(r3, 8192, i38);

     label39:
        if i3 == -1 goto label50;

        r35 = r36;

     label40:
        r39 = new com.android.server.uri.GrantUri;

     label41:
        if z0 == 0 goto label42;

        s84 = 128;

        goto label43;

     label42:
        s84 = 0;

     label43:
        r35 = r36;

     label44:
        specialinvoke r39.<com.android.server.uri.GrantUri: void <init>(int,android.net.Uri,int)>(i39, r4, s84);

     label45:
        r35 = r36;

     label46:
        $r21 = specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: com.android.server.uri.UriPermission findOrCreateUriPermissionLocked(java.lang.String,java.lang.String,int,com.android.server.uri.GrantUri)>(r38, r3, i3, r39);

        virtualinvoke $r21.<com.android.server.uri.UriPermission: void initPersistedModes(int,long)>(i1, l2);

     label47:
        r35 = r36;

     label48:
        $r22 = r0.<com.android.server.uri.UriGrantsManagerService: android.content.pm.PackageManagerInternal mPmInternal>;

        $i5 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i3);

        $r23 = r5.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i6 = $r23.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r22.<android.content.pm.PackageManagerInternal: void grantImplicitAccess(int,android.content.Intent,int,int,boolean)>(i38, null, $i5, $i6, 0);

     label49:
        goto label50;

     label50:
        goto label74;

     label51:
        r35 = r36;

     label52:
        r40 = new java.lang.StringBuilder;

     label53:
        r35 = r36;

     label54:
        specialinvoke r40.<java.lang.StringBuilder: void <init>()>();

     label55:
        r35 = r36;

     label56:
        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Persisted grant for ");

     label57:
        r35 = r36;

     label58:
        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

     label59:
        r35 = r36;

     label60:
        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" had source ");

     label61:
        r35 = r36;

     label62:
        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38);

     label63:
        r35 = r36;

     label64:
        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but instead found ");

     label65:
        r35 = r36;

     label66:
        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

     label67:
        r35 = r36;

     label68:
        $r19 = virtualinvoke r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UriGrantsManagerService", $r19);

     label69:
        goto label74;

     label70:
        $r25 := @caughtexception;

        r41 = $r25;

        goto label78;

     label71:
        $r31 := @caughtexception;

        r42 = $r31;

        goto label82;

     label72:
        $r27 := @caughtexception;

        goto label88;

     label73:
        goto label74;

     label74:
        goto label06;

     label75:
        goto label88;

     label76:
        $r24 := @caughtexception;

        r44 = $r24;

        goto label86;

     label77:
        $r30 := @caughtexception;

        r36 = r32;

        r41 = $r30;

     label78:
        r35 = r36;

     label79:
        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("UriGrantsManagerService", "Failed reading Uri grants", r41);

     label80:
        goto label88;

     label81:
        $r28 := @caughtexception;

        r42 = $r28;

        r36 = r33;

     label82:
        r35 = r36;

     label83:
        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("UriGrantsManagerService", "Failed reading Uri grants", r42);

     label84:
        goto label88;

     label85:
        $r26 := @caughtexception;

        r44 = $r26;

     label86:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r35);

        throw r44;

     label87:
        $r29 := @caughtexception;

        r36 = r34;

     label88:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r36);

        return;

        catch java.io.FileNotFoundException from label01 to label02 with label87;
        catch java.io.IOException from label01 to label02 with label81;
        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label77;
        catch java.lang.Throwable from label01 to label02 with label76;
        catch java.io.FileNotFoundException from label03 to label04 with label87;
        catch java.io.IOException from label03 to label04 with label81;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label77;
        catch java.lang.Throwable from label03 to label04 with label76;
        catch java.io.FileNotFoundException from label05 to label06 with label87;
        catch java.io.IOException from label05 to label06 with label81;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label06 with label77;
        catch java.lang.Throwable from label05 to label06 with label76;
        catch java.io.FileNotFoundException from label07 to label08 with label87;
        catch java.io.IOException from label07 to label08 with label81;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label08 with label77;
        catch java.lang.Throwable from label07 to label08 with label76;
        catch java.io.FileNotFoundException from label09 to label10 with label87;
        catch java.io.IOException from label09 to label10 with label81;
        catch org.xmlpull.v1.XmlPullParserException from label09 to label10 with label77;
        catch java.lang.Throwable from label09 to label10 with label76;
        catch java.io.FileNotFoundException from label11 to label12 with label87;
        catch java.io.IOException from label11 to label12 with label81;
        catch org.xmlpull.v1.XmlPullParserException from label11 to label12 with label77;
        catch java.lang.Throwable from label11 to label12 with label76;
        catch java.io.FileNotFoundException from label13 to label14 with label87;
        catch java.io.IOException from label13 to label14 with label81;
        catch org.xmlpull.v1.XmlPullParserException from label13 to label14 with label77;
        catch java.lang.Throwable from label13 to label14 with label76;
        catch java.io.FileNotFoundException from label16 to label17 with label87;
        catch java.io.IOException from label16 to label17 with label81;
        catch org.xmlpull.v1.XmlPullParserException from label16 to label17 with label77;
        catch java.lang.Throwable from label16 to label17 with label76;
        catch java.io.FileNotFoundException from label18 to label19 with label87;
        catch java.io.IOException from label18 to label19 with label81;
        catch org.xmlpull.v1.XmlPullParserException from label18 to label19 with label77;
        catch java.lang.Throwable from label18 to label19 with label76;
        catch java.io.FileNotFoundException from label20 to label21 with label87;
        catch java.io.IOException from label20 to label21 with label81;
        catch org.xmlpull.v1.XmlPullParserException from label20 to label21 with label77;
        catch java.lang.Throwable from label20 to label21 with label76;
        catch java.io.FileNotFoundException from label22 to label23 with label87;
        catch java.io.IOException from label22 to label23 with label81;
        catch org.xmlpull.v1.XmlPullParserException from label22 to label23 with label77;
        catch java.lang.Throwable from label22 to label23 with label76;
        catch java.io.FileNotFoundException from label24 to label25 with label87;
        catch java.io.IOException from label24 to label25 with label81;
        catch org.xmlpull.v1.XmlPullParserException from label24 to label25 with label77;
        catch java.lang.Throwable from label24 to label25 with label76;
        catch java.io.FileNotFoundException from label26 to label27 with label87;
        catch java.io.IOException from label26 to label27 with label81;
        catch org.xmlpull.v1.XmlPullParserException from label26 to label27 with label77;
        catch java.lang.Throwable from label26 to label27 with label76;
        catch java.io.FileNotFoundException from label28 to label29 with label87;
        catch java.io.IOException from label28 to label29 with label81;
        catch org.xmlpull.v1.XmlPullParserException from label28 to label29 with label77;
        catch java.lang.Throwable from label28 to label29 with label76;
        catch java.io.FileNotFoundException from label30 to label31 with label87;
        catch java.io.IOException from label30 to label31 with label81;
        catch org.xmlpull.v1.XmlPullParserException from label30 to label31 with label77;
        catch java.lang.Throwable from label30 to label31 with label76;
        catch java.io.FileNotFoundException from label32 to label33 with label87;
        catch java.io.IOException from label32 to label33 with label81;
        catch org.xmlpull.v1.XmlPullParserException from label32 to label33 with label77;
        catch java.lang.Throwable from label32 to label33 with label76;
        catch java.io.FileNotFoundException from label34 to label35 with label87;
        catch java.io.IOException from label34 to label35 with label81;
        catch org.xmlpull.v1.XmlPullParserException from label34 to label35 with label77;
        catch java.lang.Throwable from label34 to label35 with label76;
        catch java.io.FileNotFoundException from label36 to label37 with label87;
        catch java.io.IOException from label36 to label37 with label81;
        catch org.xmlpull.v1.XmlPullParserException from label36 to label37 with label77;
        catch java.lang.Throwable from label36 to label37 with label76;
        catch java.io.FileNotFoundException from label38 to label39 with label72;
        catch java.io.IOException from label38 to label39 with label71;
        catch org.xmlpull.v1.XmlPullParserException from label38 to label39 with label70;
        catch java.lang.Throwable from label38 to label39 with label85;
        catch java.io.FileNotFoundException from label40 to label41 with label72;
        catch java.io.IOException from label40 to label41 with label71;
        catch org.xmlpull.v1.XmlPullParserException from label40 to label41 with label70;
        catch java.lang.Throwable from label40 to label41 with label85;
        catch java.io.FileNotFoundException from label44 to label45 with label72;
        catch java.io.IOException from label44 to label45 with label71;
        catch org.xmlpull.v1.XmlPullParserException from label44 to label45 with label70;
        catch java.lang.Throwable from label44 to label45 with label85;
        catch java.io.FileNotFoundException from label46 to label47 with label72;
        catch java.io.IOException from label46 to label47 with label71;
        catch org.xmlpull.v1.XmlPullParserException from label46 to label47 with label70;
        catch java.lang.Throwable from label46 to label47 with label85;
        catch java.io.FileNotFoundException from label48 to label49 with label72;
        catch java.io.IOException from label48 to label49 with label71;
        catch org.xmlpull.v1.XmlPullParserException from label48 to label49 with label70;
        catch java.lang.Throwable from label48 to label49 with label85;
        catch java.io.FileNotFoundException from label52 to label53 with label72;
        catch java.io.IOException from label52 to label53 with label71;
        catch org.xmlpull.v1.XmlPullParserException from label52 to label53 with label70;
        catch java.lang.Throwable from label52 to label53 with label85;
        catch java.io.FileNotFoundException from label54 to label55 with label72;
        catch java.io.IOException from label54 to label55 with label71;
        catch org.xmlpull.v1.XmlPullParserException from label54 to label55 with label70;
        catch java.lang.Throwable from label54 to label55 with label85;
        catch java.io.FileNotFoundException from label56 to label57 with label72;
        catch java.io.IOException from label56 to label57 with label71;
        catch org.xmlpull.v1.XmlPullParserException from label56 to label57 with label70;
        catch java.lang.Throwable from label56 to label57 with label85;
        catch java.io.FileNotFoundException from label58 to label59 with label72;
        catch java.io.IOException from label58 to label59 with label71;
        catch org.xmlpull.v1.XmlPullParserException from label58 to label59 with label70;
        catch java.lang.Throwable from label58 to label59 with label85;
        catch java.io.FileNotFoundException from label60 to label61 with label72;
        catch java.io.IOException from label60 to label61 with label71;
        catch org.xmlpull.v1.XmlPullParserException from label60 to label61 with label70;
        catch java.lang.Throwable from label60 to label61 with label85;
        catch java.io.FileNotFoundException from label62 to label63 with label72;
        catch java.io.IOException from label62 to label63 with label71;
        catch org.xmlpull.v1.XmlPullParserException from label62 to label63 with label70;
        catch java.lang.Throwable from label62 to label63 with label85;
        catch java.io.FileNotFoundException from label64 to label65 with label72;
        catch java.io.IOException from label64 to label65 with label71;
        catch org.xmlpull.v1.XmlPullParserException from label64 to label65 with label70;
        catch java.lang.Throwable from label64 to label65 with label85;
        catch java.io.FileNotFoundException from label66 to label67 with label72;
        catch java.io.IOException from label66 to label67 with label71;
        catch org.xmlpull.v1.XmlPullParserException from label66 to label67 with label70;
        catch java.lang.Throwable from label66 to label67 with label85;
        catch java.io.FileNotFoundException from label68 to label69 with label72;
        catch java.io.IOException from label68 to label69 with label71;
        catch org.xmlpull.v1.XmlPullParserException from label68 to label69 with label70;
        catch java.lang.Throwable from label68 to label69 with label85;
        catch java.lang.Throwable from label79 to label80 with label85;
        catch java.lang.Throwable from label83 to label84 with label85;
    }

    private void removeUriPermissionIfNeededLocked(com.android.server.uri.UriPermission)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        com.android.server.uri.UriPermission r1;
        android.util.ArrayMap r2;
        int $i0, $i1, $i2;
        android.util.SparseArray $r3, $r7;
        java.lang.Object $r4;
        com.android.server.uri.GrantUri $r5;
        boolean $z0;

        r0 := @this: com.android.server.uri.UriGrantsManagerService;

        r1 := @parameter0: com.android.server.uri.UriPermission;

        $i0 = r1.<com.android.server.uri.UriPermission: int modeFlags>;

        if $i0 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.android.server.uri.UriGrantsManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $i1 = r1.<com.android.server.uri.UriPermission: int targetUid>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>($i1);

        r2 = (android.util.ArrayMap) $r4;

        if r2 != null goto label2;

        return;

     label2:
        $r5 = r1.<com.android.server.uri.UriPermission: com.android.server.uri.GrantUri uri>;

        virtualinvoke r2.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r5);

        $z0 = virtualinvoke r2.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        $r7 = r0.<com.android.server.uri.UriGrantsManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $i2 = r1.<com.android.server.uri.UriPermission: int targetUid>;

        virtualinvoke $r7.<android.util.SparseArray: void remove(int)>($i2);

     label3:
        return;
    }

    private void removeUriPermissionsForPackageLocked(java.lang.String, int, boolean, boolean)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        java.lang.String r1, $r12, $r13, $r15, $r18;
        int i0, i1, $i2, $i3, i4, i5, i6, i7;
        boolean z0, z1, $z2, $z3, $z4, $z5, z6, z7, $z8, z9, $z10, z11;
        android.util.ArrayMap r2;
        java.util.Iterator r3;
        com.android.server.uri.UriPermission r4;
        android.util.SparseArray $r5, $r6, $r7, $r10;
        java.lang.Object $r8, $r11;
        java.util.Collection $r9;
        java.lang.IllegalArgumentException $r14;
        com.android.server.uri.GrantUri $r16;
        android.net.Uri $r17;
        byte b8;

        r0 := @this: com.android.server.uri.UriGrantsManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        if i0 != -1 goto label02;

        if r1 == null goto label01;

        goto label02;

     label01:
        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must narrow by either package or user");

        throw $r14;

     label02:
        z6 = 0;

        $r5 = r0.<com.android.server.uri.UriGrantsManagerService: android.util.SparseArray mGrantedUriPermissions>;

        i4 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

        i5 = 0;

     label03:
        if i5 >= i4 goto label14;

        $r6 = r0.<com.android.server.uri.UriGrantsManagerService: android.util.SparseArray mGrantedUriPermissions>;

        i1 = virtualinvoke $r6.<android.util.SparseArray: int keyAt(int)>(i5);

        $r7 = r0.<com.android.server.uri.UriGrantsManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i5);

        r2 = (android.util.ArrayMap) $r8;

        if i0 == -1 goto label04;

        z7 = z6;

        i6 = i4;

        i7 = i5;

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

        if i0 != $i3 goto label13;

     label04:
        $r9 = virtualinvoke r2.<android.util.ArrayMap: java.util.Collection values()>();

        r3 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();

     label05:
        $z8 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label12;

        $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.uri.UriPermission) $r11;

        if r1 == null goto label07;

        if z1 != 0 goto label06;

        $r13 = r4.<com.android.server.uri.UriPermission: java.lang.String sourcePkg>;

        $z5 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z5 != 0 goto label07;

     label06:
        z9 = z6;

        $r12 = r4.<com.android.server.uri.UriPermission: java.lang.String targetPkg>;

        $z4 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z4 == 0 goto label11;

     label07:
        $r15 = "downloads";

        $r16 = r4.<com.android.server.uri.UriPermission: com.android.server.uri.GrantUri uri>;

        $r17 = $r16.<com.android.server.uri.GrantUri: android.net.Uri uri>;

        $r18 = virtualinvoke $r17.<android.net.Uri: java.lang.String getAuthority()>();

        $z10 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z10 == 0 goto label08;

        if z0 != 0 goto label08;

        goto label05;

     label08:
        if z0 == 0 goto label09;

        b8 = -1;

        goto label10;

     label09:
        b8 = -65;

     label10:
        $z3 = virtualinvoke r4.<com.android.server.uri.UriPermission: boolean revokeModes(int,boolean)>(b8, 1);

        z11 = z6 | $z3;

        z9 = z11;

        $i2 = r4.<com.android.server.uri.UriPermission: int modeFlags>;

        if $i2 != 0 goto label11;

        interfaceinvoke r3.<java.util.Iterator: void remove()>();

        z9 = z11;

     label11:
        z6 = z9;

        goto label05;

     label12:
        z7 = z6;

        i6 = i4;

        i7 = i5;

        $z2 = virtualinvoke r2.<android.util.ArrayMap: boolean isEmpty()>();

        if $z2 == 0 goto label13;

        $r10 = r0.<com.android.server.uri.UriGrantsManagerService: android.util.SparseArray mGrantedUriPermissions>;

        virtualinvoke $r10.<android.util.SparseArray: void remove(int)>(i1);

        i6 = i4 - 1;

        i7 = i5 - 1;

        z7 = z6;

     label13:
        i5 = i7 + 1;

        z6 = z7;

        i4 = i6;

        goto label03;

     label14:
        if z6 == 0 goto label15;

        specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: void schedulePersistUriGrants()>();

     label15:
        return;
    }

    private void revokeUriPermission(java.lang.String, int, com.android.server.uri.GrantUri, int)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        int i0, i1, $i2;
        com.android.server.uri.GrantUri r1;
        boolean z0;
        android.net.Uri $r2;
        java.lang.String $r3, $r6, $r8, r10;
        java.lang.StringBuilder $r4;
        java.lang.Throwable $r9;
        android.content.pm.ProviderInfo r11;
        java.lang.Object r13;

        r0 := @this: com.android.server.uri.UriGrantsManagerService;

        r10 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: com.android.server.uri.GrantUri;

        i1 := @parameter3: int;

        $r2 = r1.<com.android.server.uri.GrantUri: android.net.Uri uri>;

        $r3 = virtualinvoke $r2.<android.net.Uri: java.lang.String getAuthority()>();

        $i2 = r1.<com.android.server.uri.GrantUri: int sourceUserId>;

        r11 = specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: android.content.pm.ProviderInfo getProviderInfo(java.lang.String,int,int)>($r3, $i2, 786432);

        if r11 != null goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No content provider found for permission revoke: ");

        $r6 = virtualinvoke r1.<com.android.server.uri.GrantUri: java.lang.String toSafeString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UriGrantsManagerService", $r8);

        return;

     label1:
        z0 = specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: boolean checkHoldingPermissionsUnlocked(android.content.pm.ProviderInfo,com.android.server.uri.GrantUri,int,int)>(r11, r1, i0, i1);

        r13 = r0.<com.android.server.uri.UriGrantsManagerService: java.lang.Object mLock>;

        entermonitor r13;

     label2:
        specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: void revokeUriPermissionLocked(java.lang.String,int,com.android.server.uri.GrantUri,int,boolean)>(r10, i0, r1, i1, z0);

        exitmonitor r13;

     label3:
        return;

     label4:
        $r9 := @caughtexception;

     label5:
        exitmonitor r13;

     label6:
        throw $r9;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private void revokeUriPermissionLocked(java.lang.String, int, com.android.server.uri.GrantUri, int, boolean)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        java.lang.String r1, $r14, $r24;
        com.android.server.uri.GrantUri r2, $r9, $r10, $r19, $r20;
        int i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15, i16;
        android.util.SparseArray $r3, $r4, $r5, $r7, $r15, $r17;
        java.lang.Object $r6, $r8, $r16, $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8, z9, z10, z11, z12, z13, z14, z15;
        android.net.Uri $r11, $r12, $r21, $r22;
        android.util.ArrayMap r25, r27;
        com.android.server.uri.UriPermission r26, r28;

        r0 := @this: com.android.server.uri.UriGrantsManagerService;

        r1 := @parameter0: java.lang.String;

        i13 := @parameter1: int;

        r2 := @parameter2: com.android.server.uri.GrantUri;

        i0 := @parameter3: int;

        z8 := @parameter4: boolean;

        if z8 != 0 goto label07;

        $r15 = r0.<com.android.server.uri.UriGrantsManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r16 = virtualinvoke $r15.<android.util.SparseArray: java.lang.Object get(int)>(i13);

        r25 = (android.util.ArrayMap) $r16;

        if r25 == null goto label06;

        z9 = 0;

        $i8 = virtualinvoke r25.<android.util.ArrayMap: int size()>();

        i14 = $i8 - 1;

     label01:
        if i14 < 0 goto label04;

        $r18 = virtualinvoke r25.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i14);

        r26 = (com.android.server.uri.UriPermission) $r18;

        if r1 == null goto label02;

        $r24 = r26.<com.android.server.uri.UriPermission: java.lang.String targetPkg>;

        $z7 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r24);

        if $z7 != 0 goto label02;

        z10 = z9;

        goto label03;

     label02:
        z10 = z9;

        $r19 = r26.<com.android.server.uri.UriPermission: com.android.server.uri.GrantUri uri>;

        $i10 = $r19.<com.android.server.uri.GrantUri: int sourceUserId>;

        $i9 = r2.<com.android.server.uri.GrantUri: int sourceUserId>;

        if $i10 != $i9 goto label03;

        z10 = z9;

        $r20 = r26.<com.android.server.uri.UriPermission: com.android.server.uri.GrantUri uri>;

        $r22 = $r20.<com.android.server.uri.GrantUri: android.net.Uri uri>;

        $r21 = r2.<com.android.server.uri.GrantUri: android.net.Uri uri>;

        $z5 = virtualinvoke $r22.<android.net.Uri: boolean isPathPrefixMatch(android.net.Uri)>($r21);

        if $z5 == 0 goto label03;

        $i11 = i0 | 64;

        $z6 = virtualinvoke r26.<com.android.server.uri.UriPermission: boolean revokeModes(int,boolean)>($i11, 0);

        z11 = z9 | $z6;

        z10 = z11;

        $i12 = r26.<com.android.server.uri.UriPermission: int modeFlags>;

        if $i12 != 0 goto label03;

        virtualinvoke r25.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i14);

        z10 = z11;

     label03:
        i14 = i14 + -1;

        z9 = z10;

        goto label01;

     label04:
        $z4 = virtualinvoke r25.<android.util.ArrayMap: boolean isEmpty()>();

        if $z4 == 0 goto label05;

        $r17 = r0.<com.android.server.uri.UriGrantsManagerService: android.util.SparseArray mGrantedUriPermissions>;

        virtualinvoke $r17.<android.util.SparseArray: void remove(int)>(i13);

     label05:
        if z9 == 0 goto label06;

        specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: void schedulePersistUriGrants()>();

     label06:
        return;

     label07:
        z12 = 0;

        $r3 = r0.<com.android.server.uri.UriGrantsManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $i1 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        i15 = $i1 - 1;

     label08:
        if i15 < 0 goto label16;

        $r4 = r0.<com.android.server.uri.UriGrantsManagerService: android.util.SparseArray mGrantedUriPermissions>;

        virtualinvoke $r4.<android.util.SparseArray: int keyAt(int)>(i15);

        $r5 = r0.<com.android.server.uri.UriGrantsManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i15);

        r27 = (android.util.ArrayMap) $r6;

        $i3 = virtualinvoke r27.<android.util.ArrayMap: int size()>();

        i16 = $i3 - 1;

     label09:
        if i16 < 0 goto label14;

        $r8 = virtualinvoke r27.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i16);

        r28 = (com.android.server.uri.UriPermission) $r8;

        if r1 == null goto label10;

        $r14 = r28.<com.android.server.uri.UriPermission: java.lang.String targetPkg>;

        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z3 != 0 goto label10;

        z13 = z12;

        goto label13;

     label10:
        z13 = z12;

        $r9 = r28.<com.android.server.uri.UriPermission: com.android.server.uri.GrantUri uri>;

        $i5 = $r9.<com.android.server.uri.GrantUri: int sourceUserId>;

        $i4 = r2.<com.android.server.uri.GrantUri: int sourceUserId>;

        if $i5 != $i4 goto label13;

        z13 = z12;

        $r10 = r28.<com.android.server.uri.UriPermission: com.android.server.uri.GrantUri uri>;

        $r12 = $r10.<com.android.server.uri.GrantUri: android.net.Uri uri>;

        $r11 = r2.<com.android.server.uri.GrantUri: android.net.Uri uri>;

        $z1 = virtualinvoke $r12.<android.net.Uri: boolean isPathPrefixMatch(android.net.Uri)>($r11);

        if $z1 == 0 goto label13;

        if r1 != null goto label11;

        z14 = 1;

        goto label12;

     label11:
        z14 = 0;

     label12:
        $i6 = i0 | 64;

        $z2 = virtualinvoke r28.<com.android.server.uri.UriPermission: boolean revokeModes(int,boolean)>($i6, z14);

        z15 = z12 | $z2;

        z13 = z15;

        $i7 = r28.<com.android.server.uri.UriPermission: int modeFlags>;

        if $i7 != 0 goto label13;

        virtualinvoke r27.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i16);

        z13 = z15;

     label13:
        i16 = i16 + -1;

        z12 = z13;

        goto label09;

     label14:
        $z0 = virtualinvoke r27.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 == 0 goto label15;

        $r7 = r0.<com.android.server.uri.UriGrantsManagerService: android.util.SparseArray mGrantedUriPermissions>;

        virtualinvoke $r7.<android.util.SparseArray: void removeAt(int)>(i15);

     label15:
        i15 = i15 + -1;

        goto label08;

     label16:
        if z12 == 0 goto label17;

        specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: void schedulePersistUriGrants()>();

     label17:
        return;
    }

    private void schedulePersistUriGrants()
    {
        com.android.server.uri.UriGrantsManagerService r0;
        com.android.server.uri.UriGrantsManagerService$H r1, $r2;
        boolean $z0;
        android.os.Message $r3;

        r0 := @this: com.android.server.uri.UriGrantsManagerService;

        $r2 = r0.<com.android.server.uri.UriGrantsManagerService: com.android.server.uri.UriGrantsManagerService$H mH>;

        $z0 = virtualinvoke $r2.<com.android.server.uri.UriGrantsManagerService$H: boolean hasMessages(int)>(1);

        if $z0 != 0 goto label1;

        r1 = r0.<com.android.server.uri.UriGrantsManagerService: com.android.server.uri.UriGrantsManagerService$H mH>;

        $r3 = virtualinvoke r1.<com.android.server.uri.UriGrantsManagerService$H: android.os.Message obtainMessage(int)>(1);

        virtualinvoke r1.<com.android.server.uri.UriGrantsManagerService$H: boolean sendMessageDelayed(android.os.Message,long)>($r3, 10000L);

     label1:
        return;
    }

    private void start()
    {
        com.android.server.uri.UriGrantsManagerService r0;
        com.android.server.uri.UriGrantsManagerService$LocalService $r1;

        r0 := @this: com.android.server.uri.UriGrantsManagerService;

        $r1 = new com.android.server.uri.UriGrantsManagerService$LocalService;

        specialinvoke $r1.<com.android.server.uri.UriGrantsManagerService$LocalService: void <init>(com.android.server.uri.UriGrantsManagerService,com.android.server.uri.UriGrantsManagerService$1)>(r0, null);

        staticinvoke <com.android.server.LocalServices: void addService(java.lang.Class,java.lang.Object)>(class "Lcom/android/server/uri/UriGrantsManagerInternal;", $r1);

        return;
    }

    private void writeGrantedUriPermissionsLocked()
    {
        com.android.server.uri.UriGrantsManagerService r0;
        long l0, $l5;
        int i1, $i2, $i3, $i4, $i6, i7;
        com.android.internal.util.FastXmlSerializer r1;
        java.util.Iterator r2, r34;
        android.util.SparseArray $r3, $r24;
        android.util.AtomicFile $r4, $r10, $r32;
        java.nio.charset.Charset $r5;
        java.lang.String $r6, $r14, $r16, $r20;
        java.lang.Boolean $r7;
        boolean $z0, $z1, $z2;
        java.lang.Object $r11, $r25, $r28;
        com.android.server.uri.GrantUri $r13, $r18, $r22;
        android.net.Uri $r19;
        android.util.ArrayMap $r26;
        java.util.Collection $r27;
        com.android.server.uri.UriPermission$Snapshot $r29, r38;
        java.lang.Throwable $r30, $r31;
        java.util.ArrayList r33;
        com.android.server.uri.UriPermission r35;
        java.io.FileOutputStream r36, r37;

        r0 := @this: com.android.server.uri.UriGrantsManagerService;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r33 = staticinvoke <com.google.android.collect.Lists: java.util.ArrayList newArrayList()>();

        entermonitor r0;

     label01:
        $r3 = r0.<com.android.server.uri.UriGrantsManagerService: android.util.SparseArray mGrantedUriPermissions>;

        i1 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

     label02:
        i7 = 0;

     label03:
        if i7 >= i1 goto label08;

     label04:
        $r24 = r0.<com.android.server.uri.UriGrantsManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r25 = virtualinvoke $r24.<android.util.SparseArray: java.lang.Object valueAt(int)>(i7);

        $r26 = (android.util.ArrayMap) $r25;

        $r27 = virtualinvoke $r26.<android.util.ArrayMap: java.util.Collection values()>();

        r34 = interfaceinvoke $r27.<java.util.Collection: java.util.Iterator iterator()>();

     label05:
        $z2 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label07;

        $r28 = interfaceinvoke r34.<java.util.Iterator: java.lang.Object next()>();

        r35 = (com.android.server.uri.UriPermission) $r28;

        $i6 = r35.<com.android.server.uri.UriPermission: int persistedModeFlags>;

        if $i6 == 0 goto label06;

        $r29 = virtualinvoke r35.<com.android.server.uri.UriPermission: com.android.server.uri.UriPermission$Snapshot snapshot()>();

        virtualinvoke r33.<java.util.ArrayList: boolean add(java.lang.Object)>($r29);

     label06:
        goto label05;

     label07:
        i7 = i7 + 1;

        goto label03;

     label08:
        exitmonitor r0;

     label09:
        r36 = null;

     label10:
        $r4 = r0.<com.android.server.uri.UriGrantsManagerService: android.util.AtomicFile mGrantFile>;

        r37 = virtualinvoke $r4.<android.util.AtomicFile: java.io.FileOutputStream startWrite(long)>(l0);

     label11:
        r36 = r37;

     label12:
        r1 = new com.android.internal.util.FastXmlSerializer;

     label13:
        r36 = r37;

     label14:
        specialinvoke r1.<com.android.internal.util.FastXmlSerializer: void <init>()>();

     label15:
        r36 = r37;

     label16:
        $r5 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r6 = virtualinvoke $r5.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r37, $r6);

     label17:
        r36 = r37;

     label18:
        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r7);

     label19:
        r36 = r37;

     label20:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "uri-grants");

     label21:
        r36 = r37;

     label22:
        r2 = virtualinvoke r33.<java.util.ArrayList: java.util.Iterator iterator()>();

     label23:
        r36 = r37;

     label24:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label48;

     label25:
        r36 = r37;

     label26:
        $r11 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r38 = (com.android.server.uri.UriPermission$Snapshot) $r11;

     label27:
        r36 = r37;

     label28:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "uri-grant");

     label29:
        r36 = r37;

     label30:
        $r13 = r38.<com.android.server.uri.UriPermission$Snapshot: com.android.server.uri.GrantUri uri>;

        $i2 = $r13.<com.android.server.uri.GrantUri: int sourceUserId>;

        staticinvoke <com.android.internal.util.XmlUtils: void writeIntAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,int)>(r1, "sourceUserId", $i2);

     label31:
        r36 = r37;

     label32:
        $i3 = r38.<com.android.server.uri.UriPermission$Snapshot: int targetUserId>;

        staticinvoke <com.android.internal.util.XmlUtils: void writeIntAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,int)>(r1, "targetUserId", $i3);

     label33:
        r36 = r37;

     label34:
        $r14 = r38.<com.android.server.uri.UriPermission$Snapshot: java.lang.String sourcePkg>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "sourcePkg", $r14);

     label35:
        r36 = r37;

     label36:
        $r16 = r38.<com.android.server.uri.UriPermission$Snapshot: java.lang.String targetPkg>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "targetPkg", $r16);

     label37:
        r36 = r37;

     label38:
        $r18 = r38.<com.android.server.uri.UriPermission$Snapshot: com.android.server.uri.GrantUri uri>;

        $r19 = $r18.<com.android.server.uri.GrantUri: android.net.Uri uri>;

        $r20 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r19);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "uri", $r20);

     label39:
        r36 = r37;

     label40:
        $r22 = r38.<com.android.server.uri.UriPermission$Snapshot: com.android.server.uri.GrantUri uri>;

        $z1 = $r22.<com.android.server.uri.GrantUri: boolean prefix>;

        staticinvoke <com.android.internal.util.XmlUtils: void writeBooleanAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,boolean)>(r1, "prefix", $z1);

     label41:
        r36 = r37;

     label42:
        $i4 = r38.<com.android.server.uri.UriPermission$Snapshot: int persistedModeFlags>;

        staticinvoke <com.android.internal.util.XmlUtils: void writeIntAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,int)>(r1, "modeFlags", $i4);

     label43:
        r36 = r37;

     label44:
        $l5 = r38.<com.android.server.uri.UriPermission$Snapshot: long persistedCreateTime>;

        staticinvoke <com.android.internal.util.XmlUtils: void writeLongAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,long)>(r1, "createdTime", $l5);

     label45:
        r36 = r37;

     label46:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "uri-grant");

     label47:
        goto label23;

     label48:
        r36 = r37;

     label49:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "uri-grants");

     label50:
        r36 = r37;

     label51:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

     label52:
        r36 = r37;

     label53:
        $r10 = r0.<com.android.server.uri.UriGrantsManagerService: android.util.AtomicFile mGrantFile>;

        virtualinvoke $r10.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r37);

     label54:
        goto label56;

     label55:
        $r31 := @caughtexception;

        if r36 == null goto label56;

        $r32 = r0.<com.android.server.uri.UriGrantsManagerService: android.util.AtomicFile mGrantFile>;

        virtualinvoke $r32.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r36);

     label56:
        return;

     label57:
        $r30 := @caughtexception;

     label58:
        exitmonitor r0;

     label59:
        throw $r30;

        catch java.lang.Throwable from label01 to label02 with label57;
        catch java.lang.Throwable from label04 to label05 with label57;
        catch java.lang.Throwable from label05 to label06 with label57;
        catch java.lang.Throwable from label08 to label09 with label57;
        catch java.io.IOException from label10 to label11 with label55;
        catch java.io.IOException from label12 to label13 with label55;
        catch java.io.IOException from label14 to label15 with label55;
        catch java.io.IOException from label16 to label17 with label55;
        catch java.io.IOException from label18 to label19 with label55;
        catch java.io.IOException from label20 to label21 with label55;
        catch java.io.IOException from label22 to label23 with label55;
        catch java.io.IOException from label24 to label25 with label55;
        catch java.io.IOException from label26 to label27 with label55;
        catch java.io.IOException from label28 to label29 with label55;
        catch java.io.IOException from label30 to label31 with label55;
        catch java.io.IOException from label32 to label33 with label55;
        catch java.io.IOException from label34 to label35 with label55;
        catch java.io.IOException from label36 to label37 with label55;
        catch java.io.IOException from label38 to label39 with label55;
        catch java.io.IOException from label40 to label41 with label55;
        catch java.io.IOException from label42 to label43 with label55;
        catch java.io.IOException from label44 to label45 with label55;
        catch java.io.IOException from label46 to label47 with label55;
        catch java.io.IOException from label49 to label50 with label55;
        catch java.io.IOException from label51 to label52 with label55;
        catch java.io.IOException from label53 to label54 with label55;
        catch java.lang.Throwable from label58 to label59 with label57;
    }

    public void clearGrantedUriPermissions(java.lang.String, int)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        int i0;
        java.lang.Object r1;
        android.app.ActivityManagerInternal $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.uri.UriGrantsManagerService;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.uri.UriGrantsManagerService: android.app.ActivityManagerInternal mAmInternal>;

        virtualinvoke $r2.<android.app.ActivityManagerInternal: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.CLEAR_APP_GRANTED_URI_PERMISSIONS", "clearGrantedUriPermissions");

        r1 = r0.<com.android.server.uri.UriGrantsManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: void removeUriPermissionsForPackageLocked(java.lang.String,int,boolean,boolean)>(r4, i0, 1, 1);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.content.pm.ParceledListSlice getGrantedUriPermissions(java.lang.String, int)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        int i0, i1, $i2, $i3, $i4, i5, i6;
        java.lang.Object r2, $r10, $r11;
        android.util.ArrayMap r3;
        com.android.server.uri.UriPermission r4;
        android.app.ActivityManagerInternal $r5;
        java.util.ArrayList $r6;
        android.util.SparseArray $r7, $r9;
        android.content.pm.ParceledListSlice $r8;
        android.app.GrantedUriPermission $r12;
        java.lang.String $r13, r15;
        boolean $z1;
        java.lang.Throwable $r14;

        r0 := @this: com.android.server.uri.UriGrantsManagerService;

        r15 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r5 = r0.<com.android.server.uri.UriGrantsManagerService: android.app.ActivityManagerInternal mAmInternal>;

        virtualinvoke $r5.<android.app.ActivityManagerInternal: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.GET_APP_GRANTED_URI_PERMISSIONS", "getGrantedUriPermissions");

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r2 = r0.<com.android.server.uri.UriGrantsManagerService: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        $r7 = r0.<com.android.server.uri.UriGrantsManagerService: android.util.SparseArray mGrantedUriPermissions>;

        i1 = virtualinvoke $r7.<android.util.SparseArray: int size()>();

     label02:
        i5 = 0;

     label03:
        if i5 >= i1 goto label12;

     label04:
        $r9 = r0.<com.android.server.uri.UriGrantsManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r10 = virtualinvoke $r9.<android.util.SparseArray: java.lang.Object valueAt(int)>(i5);

        r3 = (android.util.ArrayMap) $r10;

     label05:
        i6 = 0;

     label06:
        $i2 = virtualinvoke r3.<android.util.ArrayMap: int size()>();

        if i6 >= $i2 goto label11;

        $r11 = virtualinvoke r3.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i6);

        r4 = (com.android.server.uri.UriPermission) $r11;

     label07:
        if r15 == null goto label09;

     label08:
        $r13 = r4.<com.android.server.uri.UriPermission: java.lang.String targetPkg>;

        $z1 = virtualinvoke r15.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z1 == 0 goto label10;

     label09:
        $i3 = r4.<com.android.server.uri.UriPermission: int targetUserId>;

        if $i3 != i0 goto label10;

        $i4 = r4.<com.android.server.uri.UriPermission: int persistedModeFlags>;

        if $i4 == 0 goto label10;

        $r12 = virtualinvoke r4.<com.android.server.uri.UriPermission: android.app.GrantedUriPermission buildGrantedUriPermission()>();

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r12);

     label10:
        i6 = i6 + 1;

        goto label06;

     label11:
        i5 = i5 + 1;

        goto label03;

     label12:
        exitmonitor r2;

     label13:
        $r8 = new android.content.pm.ParceledListSlice;

        specialinvoke $r8.<android.content.pm.ParceledListSlice: void <init>(java.util.List)>($r6);

        return $r8;

     label14:
        $r14 := @caughtexception;

     label15:
        exitmonitor r2;

     label16:
        throw $r14;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    com.android.server.uri.UriGrantsManagerInternal getLocalService()
    {
        com.android.server.uri.UriGrantsManagerService r0;
        com.android.server.uri.UriGrantsManagerService$LocalService $r1;

        r0 := @this: com.android.server.uri.UriGrantsManagerService;

        $r1 = new com.android.server.uri.UriGrantsManagerService$LocalService;

        specialinvoke $r1.<com.android.server.uri.UriGrantsManagerService$LocalService: void <init>(com.android.server.uri.UriGrantsManagerService,com.android.server.uri.UriGrantsManagerService$1)>(r0, null);

        return $r1;
    }

    public android.content.pm.ParceledListSlice getUriPermissions(java.lang.String, boolean, boolean)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        boolean z0, z1, $z2, $z4;
        java.util.ArrayList r1;
        int i0, $i1, $i2, $i3, $i4, $i5, i7, i8, i9, i10, i11;
        java.lang.Object $r3, $r15, $r16, $r20, $r21, r29;
        android.content.pm.PackageManagerInternal $r4;
        java.lang.StringBuilder $r5, r31;
        java.lang.SecurityException $r10;
        java.lang.String $r11, $r17, $r22, $r26, r28;
        android.util.SparseArray $r12, $r14, $r19;
        android.content.pm.ParceledListSlice $r13;
        android.content.UriPermission $r18, $r23;
        java.lang.Throwable $r27;
        android.util.ArrayMap r30, r33;
        com.android.server.uri.UriPermission r32, r34;

        r0 := @this: com.android.server.uri.UriGrantsManagerService;

        r28 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getUriPermissions");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r28, "packageName");

        i7 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i8 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i7);

        $r3 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/content/pm/PackageManagerInternal;");

        $r4 = (android.content.pm.PackageManagerInternal) $r3;

        $i1 = virtualinvoke $r4.<android.content.pm.PackageManagerInternal: int getPackageUidInternal(java.lang.String,int,int)>(r28, 786432, i8);

        if $i1 != i7 goto label28;

        r1 = staticinvoke <com.google.android.collect.Lists: java.util.ArrayList newArrayList()>();

        r29 = r0.<com.android.server.uri.UriGrantsManagerService: java.lang.Object mLock>;

        entermonitor r29;

        if z0 == 0 goto label12;

     label01:
        $r19 = r0.<com.android.server.uri.UriGrantsManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r20 = virtualinvoke $r19.<android.util.SparseArray: java.lang.Object get(int)>(i7);

        r30 = (android.util.ArrayMap) $r20;

     label02:
        if r30 != null goto label05;

     label03:
        r31 = new java.lang.StringBuilder;

        specialinvoke r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No permission grants found for ");

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);

        $r26 = virtualinvoke r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UriGrantsManagerService", $r26);

     label04:
        goto label11;

     label05:
        i9 = 0;

     label06:
        $i4 = virtualinvoke r30.<android.util.ArrayMap: int size()>();

        if i9 >= $i4 goto label11;

        $r21 = virtualinvoke r30.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i9);

        r32 = (com.android.server.uri.UriPermission) $r21;

        $r22 = r32.<com.android.server.uri.UriPermission: java.lang.String targetPkg>;

        $z4 = virtualinvoke r28.<java.lang.String: boolean equals(java.lang.Object)>($r22);

        if $z4 == 0 goto label10;

     label07:
        if z1 == 0 goto label09;

     label08:
        $i5 = r32.<com.android.server.uri.UriPermission: int persistedModeFlags>;

        if $i5 == 0 goto label10;

     label09:
        $r23 = virtualinvoke r32.<com.android.server.uri.UriPermission: android.content.UriPermission buildPersistedPublicApiObject()>();

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r23);

     label10:
        i9 = i9 + 1;

        goto label06;

     label11:
        goto label23;

     label12:
        $r12 = r0.<com.android.server.uri.UriGrantsManagerService: android.util.SparseArray mGrantedUriPermissions>;

        i0 = virtualinvoke $r12.<android.util.SparseArray: int size()>();

     label13:
        i10 = 0;

     label14:
        if i10 >= i0 goto label23;

     label15:
        $r14 = r0.<com.android.server.uri.UriGrantsManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r15 = virtualinvoke $r14.<android.util.SparseArray: java.lang.Object valueAt(int)>(i10);

        r33 = (android.util.ArrayMap) $r15;

     label16:
        i11 = 0;

     label17:
        $i2 = virtualinvoke r33.<android.util.ArrayMap: int size()>();

        if i11 >= $i2 goto label22;

        $r16 = virtualinvoke r33.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i11);

        r34 = (com.android.server.uri.UriPermission) $r16;

        $r17 = r34.<com.android.server.uri.UriPermission: java.lang.String sourcePkg>;

        $z2 = virtualinvoke r28.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z2 == 0 goto label21;

     label18:
        if z1 == 0 goto label20;

     label19:
        $i3 = r34.<com.android.server.uri.UriPermission: int persistedModeFlags>;

        if $i3 == 0 goto label21;

     label20:
        $r18 = virtualinvoke r34.<com.android.server.uri.UriPermission: android.content.UriPermission buildPersistedPublicApiObject()>();

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r18);

     label21:
        i11 = i11 + 1;

        goto label17;

     label22:
        i10 = i10 + 1;

        goto label14;

     label23:
        exitmonitor r29;

     label24:
        $r13 = new android.content.pm.ParceledListSlice;

        specialinvoke $r13.<android.content.pm.ParceledListSlice: void <init>(java.util.List)>(r1);

        return $r13;

     label25:
        $r27 := @caughtexception;

     label26:
        exitmonitor r29;

     label27:
        throw $r27;

     label28:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not belong to calling UID ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        $r10 = new java.lang.SecurityException;

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.SecurityException: void <init>(java.lang.String)>($r11);

        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label25;
        catch java.lang.Throwable from label03 to label04 with label25;
        catch java.lang.Throwable from label06 to label07 with label25;
        catch java.lang.Throwable from label08 to label09 with label25;
        catch java.lang.Throwable from label09 to label10 with label25;
        catch java.lang.Throwable from label12 to label13 with label25;
        catch java.lang.Throwable from label15 to label16 with label25;
        catch java.lang.Throwable from label17 to label18 with label25;
        catch java.lang.Throwable from label19 to label20 with label25;
        catch java.lang.Throwable from label20 to label21 with label25;
        catch java.lang.Throwable from label23 to label24 with label25;
        catch java.lang.Throwable from label26 to label27 with label25;
    }

    public void grantUriPermissionFromOwner(android.os.IBinder, int, java.lang.String, android.net.Uri, int, int, int)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        android.os.IBinder r1;
        int i0, i1, i2, i3;
        java.lang.String r2;
        android.net.Uri r3;

        r0 := @this: com.android.server.uri.UriGrantsManagerService;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.net.Uri;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: void grantUriPermissionFromOwnerUnlocked(android.os.IBinder,int,java.lang.String,android.net.Uri,int,int,int)>(r1, i0, r2, r3, i1, i2, i3);

        return;
    }

    public void releasePersistableUriPermission(android.net.Uri, int, java.lang.String, int)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        int i0, i2, i3;
        java.lang.Object r1;
        boolean $z1, $z2, z3, z4;
        java.lang.String $r5, $r7, r12;
        android.app.ActivityManagerInternal $r8;
        android.content.pm.PackageManagerInternal $r9;
        java.lang.Throwable $r10;
        android.net.Uri r11;
        com.android.server.uri.GrantUri r13, r15;
        com.android.server.uri.UriPermission r14, r16;
        java.lang.SecurityException r17;
        java.lang.StringBuilder r18;

        r0 := @this: com.android.server.uri.UriGrantsManagerService;

        r11 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        r12 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

        if r12 == null goto label01;

        $r8 = r0.<com.android.server.uri.UriGrantsManagerService: android.app.ActivityManagerInternal mAmInternal>;

        virtualinvoke $r8.<android.app.ActivityManagerInternal: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.FORCE_PERSISTABLE_URI_PERMISSIONS", "releasePersistableUriPermission");

        $r9 = r0.<com.android.server.uri.UriGrantsManagerService: android.content.pm.PackageManagerInternal mPmInternal>;

        i3 = virtualinvoke $r9.<android.content.pm.PackageManagerInternal: int getPackageUidInternal(java.lang.String,int,int)>(r12, 0, i2);

        goto label02;

     label01:
        specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: void enforceNotIsolatedCaller(java.lang.String)>("releasePersistableUriPermission");

        i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

     label02:
        staticinvoke <com.android.internal.util.Preconditions: int checkFlagsArgument(int,int)>(i0, 3);

        r1 = r0.<com.android.server.uri.UriGrantsManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label03:
        r13 = new com.android.server.uri.GrantUri;

        specialinvoke r13.<com.android.server.uri.GrantUri: void <init>(int,android.net.Uri,int)>(i2, r11, 0);

        r14 = specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: com.android.server.uri.UriPermission findUriPermissionLocked(int,com.android.server.uri.GrantUri)>(i3, r13);

        r15 = new com.android.server.uri.GrantUri;

        specialinvoke r15.<com.android.server.uri.GrantUri: void <init>(int,android.net.Uri,int)>(i2, r11, 128);

        r16 = specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: com.android.server.uri.UriPermission findUriPermissionLocked(int,com.android.server.uri.GrantUri)>(i3, r15);

     label04:
        if r14 != null goto label06;

        if r16 != null goto label06;

        if r12 == null goto label05;

        goto label06;

     label05:
        r17 = new java.lang.SecurityException;

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No permission grants found for UID ");

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and Uri ");

        $r5 = virtualinvoke r11.<android.net.Uri: java.lang.String toSafeString()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r17.<java.lang.SecurityException: void <init>(java.lang.String)>($r7);

        throw r17;

     label06:
        z3 = 0;

        if r14 == null goto label08;

     label07:
        $z2 = virtualinvoke r14.<com.android.server.uri.UriPermission: boolean releasePersistableModes(int)>(i0);

        z3 = 0 | $z2;

        specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: void removeUriPermissionIfNeededLocked(com.android.server.uri.UriPermission)>(r14);

     label08:
        z4 = z3;

        if r16 == null goto label10;

     label09:
        $z1 = virtualinvoke r16.<com.android.server.uri.UriPermission: boolean releasePersistableModes(int)>(i0);

        z4 = z3 | $z1;

        specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: void removeUriPermissionIfNeededLocked(com.android.server.uri.UriPermission)>(r16);

     label10:
        if z4 == 0 goto label12;

     label11:
        specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: void schedulePersistUriGrants()>();

     label12:
        exitmonitor r1;

     label13:
        return;

     label14:
        $r10 := @caughtexception;

     label15:
        exitmonitor r1;

     label16:
        throw $r10;

        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label11 to label12 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    public void takePersistableUriPermission(android.net.Uri, int, java.lang.String, int)
    {
        com.android.server.uri.UriGrantsManagerService r0;
        int i0, $i2, $i3, $i4, $i5, i6, i7;
        boolean $z2, $z3, $z4, $z5, z6, z7, z8, z9;
        java.lang.String $r4, $r6, r11;
        android.app.ActivityManagerInternal $r7;
        android.content.pm.PackageManagerInternal $r8;
        java.lang.Throwable $r9;
        android.net.Uri r10;
        java.lang.Object r12;
        com.android.server.uri.GrantUri r13, r15;
        com.android.server.uri.UriPermission r14, r16;
        java.lang.SecurityException r17;
        java.lang.StringBuilder r18;

        r0 := @this: com.android.server.uri.UriGrantsManagerService;

        r10 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        r11 := @parameter2: java.lang.String;

        i6 := @parameter3: int;

        if r11 == null goto label01;

        $r7 = r0.<com.android.server.uri.UriGrantsManagerService: android.app.ActivityManagerInternal mAmInternal>;

        virtualinvoke $r7.<android.app.ActivityManagerInternal: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.FORCE_PERSISTABLE_URI_PERMISSIONS", "takePersistableUriPermission");

        $r8 = r0.<com.android.server.uri.UriGrantsManagerService: android.content.pm.PackageManagerInternal mPmInternal>;

        i7 = virtualinvoke $r8.<android.content.pm.PackageManagerInternal: int getPackageUidInternal(java.lang.String,int,int)>(r11, 0, i6);

        goto label02;

     label01:
        specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: void enforceNotIsolatedCaller(java.lang.String)>("takePersistableUriPermission");

        i7 = staticinvoke <android.os.Binder: int getCallingUid()>();

     label02:
        staticinvoke <com.android.internal.util.Preconditions: int checkFlagsArgument(int,int)>(i0, 3);

        r12 = r0.<com.android.server.uri.UriGrantsManagerService: java.lang.Object mLock>;

        entermonitor r12;

     label03:
        r13 = new com.android.server.uri.GrantUri;

        specialinvoke r13.<com.android.server.uri.GrantUri: void <init>(int,android.net.Uri,int)>(i6, r10, 0);

        r14 = specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: com.android.server.uri.UriPermission findUriPermissionLocked(int,com.android.server.uri.GrantUri)>(i7, r13);

        r15 = new com.android.server.uri.GrantUri;

        specialinvoke r15.<com.android.server.uri.GrantUri: void <init>(int,android.net.Uri,int)>(i6, r10, 128);

        r16 = specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: com.android.server.uri.UriPermission findUriPermissionLocked(int,com.android.server.uri.GrantUri)>(i7, r15);

     label04:
        if r14 == null goto label07;

     label05:
        $i4 = r14.<com.android.server.uri.UriPermission: int persistableModeFlags>;

        $i5 = $i4 & i0;

        if $i5 != i0 goto label07;

     label06:
        z6 = 1;

        goto label08;

     label07:
        z6 = 0;

     label08:
        z7 = 0;

        if r16 == null goto label11;

        z7 = 0;

     label09:
        $i2 = r16.<com.android.server.uri.UriPermission: int persistableModeFlags>;

        $i3 = $i2 & i0;

        if $i3 != i0 goto label11;

     label10:
        z7 = 1;

     label11:
        if z6 != 0 goto label13;

        if z7 == 0 goto label12;

        goto label13;

     label12:
        r17 = new java.lang.SecurityException;

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No persistable permission grants found for UID ");

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and Uri ");

        $r4 = virtualinvoke r10.<android.net.Uri: java.lang.String toSafeString()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r17.<java.lang.SecurityException: void <init>(java.lang.String)>($r6);

        throw r17;

     label13:
        z8 = 0;

        if z6 == 0 goto label15;

     label14:
        $z5 = virtualinvoke r14.<com.android.server.uri.UriPermission: boolean takePersistableModes(int)>(i0);

        z8 = 0 | $z5;

     label15:
        z9 = z8;

        if z7 == 0 goto label17;

     label16:
        $z4 = virtualinvoke r16.<com.android.server.uri.UriPermission: boolean takePersistableModes(int)>(i0);

        z9 = z8 | $z4;

     label17:
        $z2 = specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: boolean maybePrunePersistedUriGrantsLocked(int)>(i7);

        $z3 = z9 | $z2;

        if $z3 == 0 goto label18;

        specialinvoke r0.<com.android.server.uri.UriGrantsManagerService: void schedulePersistUriGrants()>();

     label18:
        exitmonitor r12;

     label19:
        return;

     label20:
        $r9 := @caughtexception;

     label21:
        exitmonitor r12;

     label22:
        throw $r9;

        catch java.lang.Throwable from label03 to label04 with label20;
        catch java.lang.Throwable from label05 to label06 with label20;
        catch java.lang.Throwable from label09 to label10 with label20;
        catch java.lang.Throwable from label12 to label13 with label20;
        catch java.lang.Throwable from label14 to label15 with label20;
        catch java.lang.Throwable from label16 to label17 with label20;
        catch java.lang.Throwable from label17 to label18 with label20;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label21 to label22 with label20;
    }

    public static void <clinit>()
    {
        <com.android.server.uri.UriGrantsManagerService: java.lang.String TAG_URI_GRANTS> = "uri-grants";

        <com.android.server.uri.UriGrantsManagerService: java.lang.String TAG_URI_GRANT> = "uri-grant";

        <com.android.server.uri.UriGrantsManagerService: java.lang.String TAG> = "UriGrantsManagerService";

        <com.android.server.uri.UriGrantsManagerService: int MAX_PERSISTED_URI_GRANTS> = 512;

        <com.android.server.uri.UriGrantsManagerService: boolean ENABLE_DYNAMIC_PERMISSIONS> = 0;

        <com.android.server.uri.UriGrantsManagerService: boolean DEBUG> = 0;

        <com.android.server.uri.UriGrantsManagerService: java.lang.String ATTR_USER_HANDLE> = "userHandle";

        <com.android.server.uri.UriGrantsManagerService: java.lang.String ATTR_URI> = "uri";

        <com.android.server.uri.UriGrantsManagerService: java.lang.String ATTR_TARGET_USER_ID> = "targetUserId";

        <com.android.server.uri.UriGrantsManagerService: java.lang.String ATTR_TARGET_PKG> = "targetPkg";

        <com.android.server.uri.UriGrantsManagerService: java.lang.String ATTR_SOURCE_USER_ID> = "sourceUserId";

        <com.android.server.uri.UriGrantsManagerService: java.lang.String ATTR_SOURCE_PKG> = "sourcePkg";

        <com.android.server.uri.UriGrantsManagerService: java.lang.String ATTR_PREFIX> = "prefix";

        <com.android.server.uri.UriGrantsManagerService: java.lang.String ATTR_MODE_FLAGS> = "modeFlags";

        <com.android.server.uri.UriGrantsManagerService: java.lang.String ATTR_CREATED_TIME> = "createdTime";

        return;
    }
}
