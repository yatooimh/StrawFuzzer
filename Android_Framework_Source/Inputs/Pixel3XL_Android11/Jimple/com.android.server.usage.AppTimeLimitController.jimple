public class com.android.server.usage.AppTimeLimitController extends java.lang.Object
{
    private static final boolean DEBUG;
    private static final long MAX_OBSERVER_PER_UID;
    private static final java.lang.Integer ONE;
    private static final long ONE_MINUTE;
    private static final java.lang.String TAG;
    private final com.android.server.usage.AppTimeLimitController$MyHandler mHandler;
    private com.android.server.usage.AppTimeLimitController$TimeLimitCallbackListener mListener;
    private final com.android.server.usage.AppTimeLimitController$Lock mLock;
    private final android.util.SparseArray mObserverApps;
    private final android.util.SparseArray mUsers;

    static void <clinit>()
    {
        java.lang.Integer $r0;

        <com.android.server.usage.AppTimeLimitController: java.lang.String TAG> = "AppTimeLimitController";

        <com.android.server.usage.AppTimeLimitController: long ONE_MINUTE> = 60000L;

        <com.android.server.usage.AppTimeLimitController: long MAX_OBSERVER_PER_UID> = 1000L;

        <com.android.server.usage.AppTimeLimitController: boolean DEBUG> = 0;

        $r0 = new java.lang.Integer;

        specialinvoke $r0.<java.lang.Integer: void <init>(int)>(1);

        <com.android.server.usage.AppTimeLimitController: java.lang.Integer ONE> = $r0;

        return;
    }

    public void <init>(com.android.server.usage.AppTimeLimitController$TimeLimitCallbackListener, android.os.Looper)
    {
        com.android.server.usage.AppTimeLimitController r0;
        com.android.server.usage.AppTimeLimitController$TimeLimitCallbackListener r1;
        android.os.Looper r2;
        com.android.server.usage.AppTimeLimitController$Lock $r3;
        android.util.SparseArray $r4, $r5;
        com.android.server.usage.AppTimeLimitController$MyHandler $r6;

        r0 := @this: com.android.server.usage.AppTimeLimitController;

        r1 := @parameter0: com.android.server.usage.AppTimeLimitController$TimeLimitCallbackListener;

        r2 := @parameter1: android.os.Looper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new com.android.server.usage.AppTimeLimitController$Lock;

        specialinvoke $r3.<com.android.server.usage.AppTimeLimitController$Lock: void <init>(com.android.server.usage.AppTimeLimitController$1)>(null);

        r0.<com.android.server.usage.AppTimeLimitController: com.android.server.usage.AppTimeLimitController$Lock mLock> = $r3;

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.usage.AppTimeLimitController: android.util.SparseArray mUsers> = $r4;

        $r5 = new android.util.SparseArray;

        specialinvoke $r5.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.usage.AppTimeLimitController: android.util.SparseArray mObserverApps> = $r5;

        $r6 = new com.android.server.usage.AppTimeLimitController$MyHandler;

        specialinvoke $r6.<com.android.server.usage.AppTimeLimitController$MyHandler: void <init>(com.android.server.usage.AppTimeLimitController,android.os.Looper)>(r0, r2);

        r0.<com.android.server.usage.AppTimeLimitController: com.android.server.usage.AppTimeLimitController$MyHandler mHandler> = $r6;

        r0.<com.android.server.usage.AppTimeLimitController: com.android.server.usage.AppTimeLimitController$TimeLimitCallbackListener mListener> = r1;

        return;
    }

    static void access$100(com.android.server.usage.AppTimeLimitController, com.android.server.usage.AppTimeLimitController$UsageGroup, long)
    {
        com.android.server.usage.AppTimeLimitController r0;
        com.android.server.usage.AppTimeLimitController$UsageGroup r1;
        long l0;

        r0 := @parameter0: com.android.server.usage.AppTimeLimitController;

        r1 := @parameter1: com.android.server.usage.AppTimeLimitController$UsageGroup;

        l0 := @parameter2: long;

        specialinvoke r0.<com.android.server.usage.AppTimeLimitController: void postCheckTimeoutLocked(com.android.server.usage.AppTimeLimitController$UsageGroup,long)>(r1, l0);

        return;
    }

    static void access$200(com.android.server.usage.AppTimeLimitController, com.android.server.usage.AppTimeLimitController$UsageGroup)
    {
        com.android.server.usage.AppTimeLimitController r0;
        com.android.server.usage.AppTimeLimitController$UsageGroup r1;

        r0 := @parameter0: com.android.server.usage.AppTimeLimitController;

        r1 := @parameter1: com.android.server.usage.AppTimeLimitController$UsageGroup;

        specialinvoke r0.<com.android.server.usage.AppTimeLimitController: void postInformLimitReachedListenerLocked(com.android.server.usage.AppTimeLimitController$UsageGroup)>(r1);

        return;
    }

    static void access$300(com.android.server.usage.AppTimeLimitController, com.android.server.usage.AppTimeLimitController$UsageGroup)
    {
        com.android.server.usage.AppTimeLimitController r0;
        com.android.server.usage.AppTimeLimitController$UsageGroup r1;

        r0 := @parameter0: com.android.server.usage.AppTimeLimitController;

        r1 := @parameter1: com.android.server.usage.AppTimeLimitController$UsageGroup;

        specialinvoke r0.<com.android.server.usage.AppTimeLimitController: void cancelCheckTimeoutLocked(com.android.server.usage.AppTimeLimitController$UsageGroup)>(r1);

        return;
    }

    static com.android.server.usage.AppTimeLimitController$TimeLimitCallbackListener access$400(com.android.server.usage.AppTimeLimitController)
    {
        com.android.server.usage.AppTimeLimitController r0;
        com.android.server.usage.AppTimeLimitController$TimeLimitCallbackListener $r1;

        r0 := @parameter0: com.android.server.usage.AppTimeLimitController;

        $r1 = r0.<com.android.server.usage.AppTimeLimitController: com.android.server.usage.AppTimeLimitController$TimeLimitCallbackListener mListener>;

        return $r1;
    }

    static void access$600(com.android.server.usage.AppTimeLimitController, com.android.server.usage.AppTimeLimitController$SessionUsageGroup)
    {
        com.android.server.usage.AppTimeLimitController r0;
        com.android.server.usage.AppTimeLimitController$SessionUsageGroup r1;

        r0 := @parameter0: com.android.server.usage.AppTimeLimitController;

        r1 := @parameter1: com.android.server.usage.AppTimeLimitController$SessionUsageGroup;

        specialinvoke r0.<com.android.server.usage.AppTimeLimitController: void cancelInformSessionEndListener(com.android.server.usage.AppTimeLimitController$SessionUsageGroup)>(r1);

        return;
    }

    static void access$700(com.android.server.usage.AppTimeLimitController, com.android.server.usage.AppTimeLimitController$SessionUsageGroup, long)
    {
        com.android.server.usage.AppTimeLimitController r0;
        com.android.server.usage.AppTimeLimitController$SessionUsageGroup r1;
        long l0;

        r0 := @parameter0: com.android.server.usage.AppTimeLimitController;

        r1 := @parameter1: com.android.server.usage.AppTimeLimitController$SessionUsageGroup;

        l0 := @parameter2: long;

        specialinvoke r0.<com.android.server.usage.AppTimeLimitController: void postInformSessionEndListenerLocked(com.android.server.usage.AppTimeLimitController$SessionUsageGroup,long)>(r1, l0);

        return;
    }

    static com.android.server.usage.AppTimeLimitController$Lock access$800(com.android.server.usage.AppTimeLimitController)
    {
        com.android.server.usage.AppTimeLimitController r0;
        com.android.server.usage.AppTimeLimitController$Lock $r1;

        r0 := @parameter0: com.android.server.usage.AppTimeLimitController;

        $r1 = r0.<com.android.server.usage.AppTimeLimitController: com.android.server.usage.AppTimeLimitController$Lock mLock>;

        return $r1;
    }

    private void cancelCheckTimeoutLocked(com.android.server.usage.AppTimeLimitController$UsageGroup)
    {
        com.android.server.usage.AppTimeLimitController r0;
        com.android.server.usage.AppTimeLimitController$UsageGroup r1;
        com.android.server.usage.AppTimeLimitController$MyHandler $r2;

        r0 := @this: com.android.server.usage.AppTimeLimitController;

        r1 := @parameter0: com.android.server.usage.AppTimeLimitController$UsageGroup;

        $r2 = r0.<com.android.server.usage.AppTimeLimitController: com.android.server.usage.AppTimeLimitController$MyHandler mHandler>;

        virtualinvoke $r2.<com.android.server.usage.AppTimeLimitController$MyHandler: void removeMessages(int,java.lang.Object)>(1, r1);

        return;
    }

    private void cancelInformSessionEndListener(com.android.server.usage.AppTimeLimitController$SessionUsageGroup)
    {
        com.android.server.usage.AppTimeLimitController r0;
        com.android.server.usage.AppTimeLimitController$SessionUsageGroup r1;
        com.android.server.usage.AppTimeLimitController$MyHandler $r2;

        r0 := @this: com.android.server.usage.AppTimeLimitController;

        r1 := @parameter0: com.android.server.usage.AppTimeLimitController$SessionUsageGroup;

        $r2 = r0.<com.android.server.usage.AppTimeLimitController: com.android.server.usage.AppTimeLimitController$MyHandler mHandler>;

        virtualinvoke $r2.<com.android.server.usage.AppTimeLimitController$MyHandler: void removeMessages(int,java.lang.Object)>(3, r1);

        return;
    }

    private com.android.server.usage.AppTimeLimitController$ObserverAppData getOrCreateObserverAppDataLocked(int)
    {
        com.android.server.usage.AppTimeLimitController r0;
        int i0;
        com.android.server.usage.AppTimeLimitController$ObserverAppData r1, $r4, r6;
        android.util.SparseArray $r2, $r5;
        java.lang.Object $r3;

        r0 := @this: com.android.server.usage.AppTimeLimitController;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.usage.AppTimeLimitController: android.util.SparseArray mObserverApps>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.usage.AppTimeLimitController$ObserverAppData) $r3;

        r6 = r1;

        if r1 != null goto label1;

        $r4 = new com.android.server.usage.AppTimeLimitController$ObserverAppData;

        specialinvoke $r4.<com.android.server.usage.AppTimeLimitController$ObserverAppData: void <init>(com.android.server.usage.AppTimeLimitController,int,com.android.server.usage.AppTimeLimitController$1)>(r0, i0, null);

        r6 = $r4;

        $r5 = r0.<com.android.server.usage.AppTimeLimitController: android.util.SparseArray mObserverApps>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r4);

     label1:
        return r6;
    }

    private com.android.server.usage.AppTimeLimitController$UserData getOrCreateUserDataLocked(int)
    {
        com.android.server.usage.AppTimeLimitController r0;
        int i0;
        com.android.server.usage.AppTimeLimitController$UserData r1, $r4, r6;
        android.util.SparseArray $r2, $r5;
        java.lang.Object $r3;

        r0 := @this: com.android.server.usage.AppTimeLimitController;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.usage.AppTimeLimitController: android.util.SparseArray mUsers>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.usage.AppTimeLimitController$UserData) $r3;

        r6 = r1;

        if r1 != null goto label1;

        $r4 = new com.android.server.usage.AppTimeLimitController$UserData;

        specialinvoke $r4.<com.android.server.usage.AppTimeLimitController$UserData: void <init>(com.android.server.usage.AppTimeLimitController,int,com.android.server.usage.AppTimeLimitController$1)>(r0, i0, null);

        r6 = $r4;

        $r5 = r0.<com.android.server.usage.AppTimeLimitController: android.util.SparseArray mUsers>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r4);

     label1:
        return r6;
    }

    private void noteActiveLocked(com.android.server.usage.AppTimeLimitController$UserData, com.android.server.usage.AppTimeLimitController$UsageGroup, long)
    {
        com.android.server.usage.AppTimeLimitController r0;
        com.android.server.usage.AppTimeLimitController$UserData r1;
        com.android.server.usage.AppTimeLimitController$UsageGroup r2;
        long l0;
        int i1, i2;
        java.lang.String[] $r3, $r4;
        java.lang.String $r5;
        android.util.ArrayMap $r6;
        boolean $z0;

        r0 := @this: com.android.server.usage.AppTimeLimitController;

        r1 := @parameter0: com.android.server.usage.AppTimeLimitController$UserData;

        r2 := @parameter1: com.android.server.usage.AppTimeLimitController$UsageGroup;

        l0 := @parameter2: long;

        $r3 = r2.<com.android.server.usage.AppTimeLimitController$UsageGroup: java.lang.String[] mObserved>;

        i1 = lengthof $r3;

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        $r6 = r1.<com.android.server.usage.AppTimeLimitController$UserData: android.util.ArrayMap currentlyActive>;

        $r4 = r2.<com.android.server.usage.AppTimeLimitController$UsageGroup: java.lang.String[] mObserved>;

        $r5 = $r4[i2];

        $z0 = virtualinvoke $r6.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

        virtualinvoke r2.<com.android.server.usage.AppTimeLimitController$UsageGroup: void noteUsageStart(long)>(l0);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    private void postCheckTimeoutLocked(com.android.server.usage.AppTimeLimitController$UsageGroup, long)
    {
        com.android.server.usage.AppTimeLimitController r0;
        com.android.server.usage.AppTimeLimitController$UsageGroup r1;
        long l0;
        com.android.server.usage.AppTimeLimitController$MyHandler r2;
        android.os.Message $r3;

        r0 := @this: com.android.server.usage.AppTimeLimitController;

        r1 := @parameter0: com.android.server.usage.AppTimeLimitController$UsageGroup;

        l0 := @parameter1: long;

        r2 = r0.<com.android.server.usage.AppTimeLimitController: com.android.server.usage.AppTimeLimitController$MyHandler mHandler>;

        $r3 = virtualinvoke r2.<com.android.server.usage.AppTimeLimitController$MyHandler: android.os.Message obtainMessage(int,java.lang.Object)>(1, r1);

        virtualinvoke r2.<com.android.server.usage.AppTimeLimitController$MyHandler: boolean sendMessageDelayed(android.os.Message,long)>($r3, l0);

        return;
    }

    private void postInformLimitReachedListenerLocked(com.android.server.usage.AppTimeLimitController$UsageGroup)
    {
        com.android.server.usage.AppTimeLimitController r0;
        com.android.server.usage.AppTimeLimitController$UsageGroup r1;
        com.android.server.usage.AppTimeLimitController$MyHandler r2;
        android.os.Message $r3;

        r0 := @this: com.android.server.usage.AppTimeLimitController;

        r1 := @parameter0: com.android.server.usage.AppTimeLimitController$UsageGroup;

        r2 = r0.<com.android.server.usage.AppTimeLimitController: com.android.server.usage.AppTimeLimitController$MyHandler mHandler>;

        $r3 = virtualinvoke r2.<com.android.server.usage.AppTimeLimitController$MyHandler: android.os.Message obtainMessage(int,java.lang.Object)>(2, r1);

        virtualinvoke r2.<com.android.server.usage.AppTimeLimitController$MyHandler: boolean sendMessage(android.os.Message)>($r3);

        return;
    }

    private void postInformSessionEndListenerLocked(com.android.server.usage.AppTimeLimitController$SessionUsageGroup, long)
    {
        com.android.server.usage.AppTimeLimitController r0;
        com.android.server.usage.AppTimeLimitController$SessionUsageGroup r1;
        long l0;
        com.android.server.usage.AppTimeLimitController$MyHandler r2;
        android.os.Message $r3;

        r0 := @this: com.android.server.usage.AppTimeLimitController;

        r1 := @parameter0: com.android.server.usage.AppTimeLimitController$SessionUsageGroup;

        l0 := @parameter1: long;

        r2 = r0.<com.android.server.usage.AppTimeLimitController: com.android.server.usage.AppTimeLimitController$MyHandler mHandler>;

        $r3 = virtualinvoke r2.<com.android.server.usage.AppTimeLimitController$MyHandler: android.os.Message obtainMessage(int,java.lang.Object)>(3, r1);

        virtualinvoke r2.<com.android.server.usage.AppTimeLimitController$MyHandler: boolean sendMessageDelayed(android.os.Message,long)>($r3, l0);

        return;
    }

    public void addAppUsageLimitObserver(int, int, java.lang.String[], long, long, android.app.PendingIntent, int)
    {
        com.android.server.usage.AppTimeLimitController r0;
        int i0, i1, i4, $i8;
        long l2, l3, $l5, $l7, $l9, $l10, $l13;
        com.android.server.usage.AppTimeLimitController$Lock r1;
        com.android.server.usage.AppTimeLimitController$UserData r2;
        com.android.server.usage.AppTimeLimitController$ObserverAppData r3;
        byte $b6, $b11, $b12;
        java.lang.StringBuilder $r4, r23;
        java.lang.IllegalArgumentException $r7;
        java.lang.String $r8, $r14;
        android.util.SparseArray $r9, $r11, $r15;
        java.lang.Object $r10;
        java.lang.Throwable $r16, $r17, r24;
        java.lang.String[] r18;
        android.app.PendingIntent r19;
        com.android.server.usage.AppTimeLimitController$AppUsageLimitGroup r20, r21;
        java.lang.IllegalStateException r22;

        r0 := @this: com.android.server.usage.AppTimeLimitController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r18 := @parameter2: java.lang.String[];

        l2 := @parameter3: long;

        l3 := @parameter4: long;

        r19 := @parameter5: android.app.PendingIntent;

        i4 := @parameter6: int;

        $l5 = virtualinvoke r0.<com.android.server.usage.AppTimeLimitController: long getMinTimeLimit()>();

        $b6 = l2 cmp $l5;

        if $b6 < 0 goto label14;

        r1 = r0.<com.android.server.usage.AppTimeLimitController: com.android.server.usage.AppTimeLimitController$Lock mLock>;

        entermonitor r1;

     label01:
        r2 = specialinvoke r0.<com.android.server.usage.AppTimeLimitController: com.android.server.usage.AppTimeLimitController$UserData getOrCreateUserDataLocked(int)>(i4);

        r3 = specialinvoke r0.<com.android.server.usage.AppTimeLimitController: com.android.server.usage.AppTimeLimitController$ObserverAppData getOrCreateObserverAppDataLocked(int)>(i0);

        $r9 = r3.<com.android.server.usage.AppTimeLimitController$ObserverAppData: android.util.SparseArray appUsageLimitGroups>;

        $r10 = virtualinvoke $r9.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r20 = (com.android.server.usage.AppTimeLimitController$AppUsageLimitGroup) $r10;

     label02:
        if r20 == null goto label04;

     label03:
        virtualinvoke r20.<com.android.server.usage.AppTimeLimitController$AppUsageLimitGroup: void remove()>();

     label04:
        $r11 = r3.<com.android.server.usage.AppTimeLimitController$ObserverAppData: android.util.SparseArray appUsageLimitGroups>;

        $i8 = virtualinvoke $r11.<android.util.SparseArray: int size()>();

        $l9 = (long) $i8;

        $l10 = virtualinvoke r0.<com.android.server.usage.AppTimeLimitController: long getAppUsageLimitObserverPerUidLimit()>();

        $b11 = $l9 cmp $l10;

        if $b11 >= 0 goto label08;

        r21 = new com.android.server.usage.AppTimeLimitController$AppUsageLimitGroup;

     label05:
        $b12 = l3 cmp l2;

        if $b12 < 0 goto label06;

        r19 = null;

        goto label06;

     label06:
        specialinvoke r21.<com.android.server.usage.AppTimeLimitController$AppUsageLimitGroup: void <init>(com.android.server.usage.AppTimeLimitController,com.android.server.usage.AppTimeLimitController$UserData,com.android.server.usage.AppTimeLimitController$ObserverAppData,int,java.lang.String[],long,long,android.app.PendingIntent)>(r0, r2, r3, i1, r18, l2, l3, r19);

        $r15 = r3.<com.android.server.usage.AppTimeLimitController$ObserverAppData: android.util.SparseArray appUsageLimitGroups>;

        virtualinvoke $r15.<android.util.SparseArray: void append(int,java.lang.Object)>(i1, r21);

        virtualinvoke r2.<com.android.server.usage.AppTimeLimitController$UserData: void addUsageGroup(com.android.server.usage.AppTimeLimitController$UsageGroup)>(r21);

        $l13 = virtualinvoke r0.<com.android.server.usage.AppTimeLimitController: long getUptimeMillis()>();

        specialinvoke r0.<com.android.server.usage.AppTimeLimitController: void noteActiveLocked(com.android.server.usage.AppTimeLimitController$UserData,com.android.server.usage.AppTimeLimitController$UsageGroup,long)>(r2, r21, $l13);

        exitmonitor r1;

     label07:
        return;

     label08:
        r22 = new java.lang.IllegalStateException;

        r23 = new java.lang.StringBuilder;

        specialinvoke r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Too many app usage observers added by uid ");

     label09:
        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r22.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r14);

        throw r22;

     label10:
        $r16 := @caughtexception;

        r24 = $r16;

     label11:
        exitmonitor r1;

     label12:
        throw r24;

     label13:
        $r17 := @caughtexception;

        r24 = $r17;

        goto label11;

     label14:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Time limit must be >= ");

        $l7 = virtualinvoke r0.<com.android.server.usage.AppTimeLimitController: long getMinTimeLimit()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    public void addAppUsageObserver(int, int, java.lang.String[], long, android.app.PendingIntent, int)
    {
        com.android.server.usage.AppTimeLimitController r0;
        int i0, i1, i3, $i7;
        long l2, $l4, $l6, $l8, $l9, $l11;
        com.android.server.usage.AppTimeLimitController$Lock r1;
        com.android.server.usage.AppTimeLimitController$UserData r2;
        com.android.server.usage.AppTimeLimitController$ObserverAppData r3;
        byte $b5, $b10;
        java.lang.StringBuilder $r4, r23;
        java.lang.IllegalArgumentException $r7;
        java.lang.String $r8, $r14;
        android.util.SparseArray $r9, $r11, $r15;
        java.lang.Object $r10;
        java.lang.Throwable $r16, $r17, r24;
        java.lang.String[] r18;
        android.app.PendingIntent r19;
        com.android.server.usage.AppTimeLimitController$AppUsageGroup r20, r21;
        java.lang.IllegalStateException r22;

        r0 := @this: com.android.server.usage.AppTimeLimitController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r18 := @parameter2: java.lang.String[];

        l2 := @parameter3: long;

        r19 := @parameter4: android.app.PendingIntent;

        i3 := @parameter5: int;

        $l4 = virtualinvoke r0.<com.android.server.usage.AppTimeLimitController: long getMinTimeLimit()>();

        $b5 = l2 cmp $l4;

        if $b5 < 0 goto label12;

        r1 = r0.<com.android.server.usage.AppTimeLimitController: com.android.server.usage.AppTimeLimitController$Lock mLock>;

        entermonitor r1;

     label01:
        r2 = specialinvoke r0.<com.android.server.usage.AppTimeLimitController: com.android.server.usage.AppTimeLimitController$UserData getOrCreateUserDataLocked(int)>(i3);

        r3 = specialinvoke r0.<com.android.server.usage.AppTimeLimitController: com.android.server.usage.AppTimeLimitController$ObserverAppData getOrCreateObserverAppDataLocked(int)>(i0);

        $r9 = r3.<com.android.server.usage.AppTimeLimitController$ObserverAppData: android.util.SparseArray appUsageGroups>;

        $r10 = virtualinvoke $r9.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r20 = (com.android.server.usage.AppTimeLimitController$AppUsageGroup) $r10;

     label02:
        if r20 == null goto label04;

     label03:
        virtualinvoke r20.<com.android.server.usage.AppTimeLimitController$AppUsageGroup: void remove()>();

     label04:
        $r11 = r3.<com.android.server.usage.AppTimeLimitController$ObserverAppData: android.util.SparseArray appUsageGroups>;

        $i7 = virtualinvoke $r11.<android.util.SparseArray: int size()>();

        $l8 = (long) $i7;

        $l9 = virtualinvoke r0.<com.android.server.usage.AppTimeLimitController: long getAppUsageObserverPerUidLimit()>();

        $b10 = $l8 cmp $l9;

        if $b10 >= 0 goto label06;

        r21 = new com.android.server.usage.AppTimeLimitController$AppUsageGroup;

        specialinvoke r21.<com.android.server.usage.AppTimeLimitController$AppUsageGroup: void <init>(com.android.server.usage.AppTimeLimitController,com.android.server.usage.AppTimeLimitController$UserData,com.android.server.usage.AppTimeLimitController$ObserverAppData,int,java.lang.String[],long,android.app.PendingIntent)>(r0, r2, r3, i1, r18, l2, r19);

        $r15 = r3.<com.android.server.usage.AppTimeLimitController$ObserverAppData: android.util.SparseArray appUsageGroups>;

        virtualinvoke $r15.<android.util.SparseArray: void append(int,java.lang.Object)>(i1, r21);

        virtualinvoke r2.<com.android.server.usage.AppTimeLimitController$UserData: void addUsageGroup(com.android.server.usage.AppTimeLimitController$UsageGroup)>(r21);

        $l11 = virtualinvoke r0.<com.android.server.usage.AppTimeLimitController: long getUptimeMillis()>();

        specialinvoke r0.<com.android.server.usage.AppTimeLimitController: void noteActiveLocked(com.android.server.usage.AppTimeLimitController$UserData,com.android.server.usage.AppTimeLimitController$UsageGroup,long)>(r2, r21, $l11);

        exitmonitor r1;

     label05:
        return;

     label06:
        r22 = new java.lang.IllegalStateException;

        r23 = new java.lang.StringBuilder;

        specialinvoke r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Too many app usage observers added by uid ");

     label07:
        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r22.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r14);

        throw r22;

     label08:
        $r16 := @caughtexception;

        r24 = $r16;

     label09:
        exitmonitor r1;

     label10:
        throw r24;

     label11:
        $r17 := @caughtexception;

        r24 = $r17;

        goto label09;

     label12:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Time limit must be >= ");

        $l6 = virtualinvoke r0.<com.android.server.usage.AppTimeLimitController: long getMinTimeLimit()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6);

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public void addUsageSessionObserver(int, int, java.lang.String[], long, long, android.app.PendingIntent, android.app.PendingIntent, int)
    {
        com.android.server.usage.AppTimeLimitController r0;
        int i0, i1, i3, $i9;
        long l2, l4, l5, $l6, $l8, l11, l12;
        android.app.PendingIntent r1, r23;
        com.android.server.usage.AppTimeLimitController$Lock r2;
        com.android.server.usage.AppTimeLimitController$UserData r3;
        com.android.server.usage.AppTimeLimitController$ObserverAppData r4;
        byte $b7, $b10;
        java.lang.StringBuilder $r5, r28;
        java.lang.IllegalArgumentException $r8;
        java.lang.String $r9, $r15;
        android.util.SparseArray $r10, $r12, $r16;
        java.lang.Object $r11;
        java.lang.Throwable $r17, $r18, $r19, $r20, $r21, r26;
        java.lang.String[] r22;
        com.android.server.usage.AppTimeLimitController$SessionUsageGroup r24, r25;
        java.lang.IllegalStateException r27;

        r0 := @this: com.android.server.usage.AppTimeLimitController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r22 := @parameter2: java.lang.String[];

        l11 := @parameter3: long;

        l2 := @parameter4: long;

        r23 := @parameter5: android.app.PendingIntent;

        r1 := @parameter6: android.app.PendingIntent;

        i3 := @parameter7: int;

        $l6 = virtualinvoke r0.<com.android.server.usage.AppTimeLimitController: long getMinTimeLimit()>();

        $b7 = l11 cmp $l6;

        if $b7 < 0 goto label20;

        r2 = r0.<com.android.server.usage.AppTimeLimitController: com.android.server.usage.AppTimeLimitController$Lock mLock>;

        entermonitor r2;

     label01:
        r3 = specialinvoke r0.<com.android.server.usage.AppTimeLimitController: com.android.server.usage.AppTimeLimitController$UserData getOrCreateUserDataLocked(int)>(i3);

        r4 = specialinvoke r0.<com.android.server.usage.AppTimeLimitController: com.android.server.usage.AppTimeLimitController$ObserverAppData getOrCreateObserverAppDataLocked(int)>(i0);

        $r10 = r4.<com.android.server.usage.AppTimeLimitController$ObserverAppData: android.util.SparseArray sessionUsageGroups>;

        $r11 = virtualinvoke $r10.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r24 = (com.android.server.usage.AppTimeLimitController$SessionUsageGroup) $r11;

     label02:
        if r24 == null goto label04;

     label03:
        virtualinvoke r24.<com.android.server.usage.AppTimeLimitController$SessionUsageGroup: void remove()>();

     label04:
        $r12 = r4.<com.android.server.usage.AppTimeLimitController$ObserverAppData: android.util.SparseArray sessionUsageGroups>;

        $i9 = virtualinvoke $r12.<android.util.SparseArray: int size()>();

        l4 = (long) $i9;

        l5 = virtualinvoke r0.<com.android.server.usage.AppTimeLimitController: long getUsageSessionObserverPerUidLimit()>();

     label05:
        $b10 = l4 cmp l5;

        if $b10 >= 0 goto label13;

     label06:
        r25 = new com.android.server.usage.AppTimeLimitController$SessionUsageGroup;

     label07:
        specialinvoke r25.<com.android.server.usage.AppTimeLimitController$SessionUsageGroup: void <init>(com.android.server.usage.AppTimeLimitController,com.android.server.usage.AppTimeLimitController$UserData,com.android.server.usage.AppTimeLimitController$ObserverAppData,int,java.lang.String[],long,android.app.PendingIntent,long,android.app.PendingIntent)>(r0, r3, r4, i1, r22, l11, r23, l2, r1);

        $r16 = r4.<com.android.server.usage.AppTimeLimitController$ObserverAppData: android.util.SparseArray sessionUsageGroups>;

        virtualinvoke $r16.<android.util.SparseArray: void append(int,java.lang.Object)>(i1, r25);

        virtualinvoke r3.<com.android.server.usage.AppTimeLimitController$UserData: void addUsageGroup(com.android.server.usage.AppTimeLimitController$UsageGroup)>(r25);

        l12 = virtualinvoke r0.<com.android.server.usage.AppTimeLimitController: long getUptimeMillis()>();

     label08:
        specialinvoke r0.<com.android.server.usage.AppTimeLimitController: void noteActiveLocked(com.android.server.usage.AppTimeLimitController$UserData,com.android.server.usage.AppTimeLimitController$UsageGroup,long)>(r3, r25, l12);

        exitmonitor r2;

     label09:
        return;

     label10:
        $r18 := @caughtexception;

        r26 = $r18;

        goto label12;

     label11:
        $r19 := @caughtexception;

        r26 = $r19;

     label12:
        goto label17;

     label13:
        r27 = new java.lang.IllegalStateException;

        r28 = new java.lang.StringBuilder;

        specialinvoke r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Too many app usage observers added by uid ");

     label14:
        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r27.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r15);

        throw r27;

     label15:
        $r17 := @caughtexception;

        r26 = $r17;

        goto label12;

     label16:
        $r21 := @caughtexception;

        r26 = $r21;

     label17:
        exitmonitor r2;

     label18:
        throw r26;

     label19:
        $r20 := @caughtexception;

        r26 = $r20;

        goto label17;

     label20:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Time limit must be >= ");

        $l8 = virtualinvoke r0.<com.android.server.usage.AppTimeLimitController: long getMinTimeLimit()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l8);

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label04 to label05 with label16;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label14 to label15 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
    }

    void dump(java.lang.String[], java.io.PrintWriter)
    {
        com.android.server.usage.AppTimeLimitController r0;
        int i0, i1, $i2, i3, i4, i5, i6, i7, i8, i9;
        android.util.ArrayMap r1;
        android.util.SparseArray $r2, $r3, $r4, $r7, $r12, $r13;
        java.lang.Object $r5, $r8, $r14, $r16;
        com.android.server.usage.AppTimeLimitController$ObserverAppData $r6;
        com.android.server.usage.AppTimeLimitController$UserData $r9, $r15;
        java.lang.String $r10, $r11, $r17;
        boolean $z0;
        java.lang.Throwable $r18, $r19;
        java.lang.String[] r20;
        java.io.PrintWriter r21;
        com.android.server.usage.AppTimeLimitController$Lock r22, r24;

        r0 := @this: com.android.server.usage.AppTimeLimitController;

        r20 := @parameter0: java.lang.String[];

        r21 := @parameter1: java.io.PrintWriter;

        if r20 == null goto label17;

        i3 = 0;

     label01:
        $i2 = lengthof r20;

        if i3 >= $i2 goto label17;

        $r11 = "actives";

        $r10 = r20[i3];

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z0 == 0 goto label16;

        r22 = r0.<com.android.server.usage.AppTimeLimitController: com.android.server.usage.AppTimeLimitController$Lock mLock>;

        entermonitor r22;

     label02:
        $r12 = r0.<com.android.server.usage.AppTimeLimitController: android.util.SparseArray mUsers>;

        i0 = virtualinvoke $r12.<android.util.SparseArray: int size()>();

     label03:
        i4 = 0;

     label04:
        if i4 >= i0 goto label11;

     label05:
        $r13 = r0.<com.android.server.usage.AppTimeLimitController: android.util.SparseArray mUsers>;

        $r14 = virtualinvoke $r13.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        $r15 = (com.android.server.usage.AppTimeLimitController$UserData) $r14;

        r1 = $r15.<com.android.server.usage.AppTimeLimitController$UserData: android.util.ArrayMap currentlyActive>;

        i1 = virtualinvoke r1.<android.util.ArrayMap: int size()>();

     label06:
        i5 = 0;

     label07:
        if i5 >= i1 goto label10;

     label08:
        $r16 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i5);

        $r17 = (java.lang.String) $r16;

        virtualinvoke r21.<java.io.PrintWriter: void println(java.lang.String)>($r17);

     label09:
        i5 = i5 + 1;

        goto label07;

     label10:
        i4 = i4 + 1;

        goto label04;

     label11:
        exitmonitor r22;

     label12:
        return;

     label13:
        $r18 := @caughtexception;

     label14:
        exitmonitor r22;

     label15:
        throw $r18;

     label16:
        i3 = i3 + 1;

        goto label01;

     label17:
        r24 = r0.<com.android.server.usage.AppTimeLimitController: com.android.server.usage.AppTimeLimitController$Lock mLock>;

        entermonitor r24;

     label18:
        virtualinvoke r21.<java.io.PrintWriter: void println(java.lang.String)>("\n  App Time Limits");

        $r2 = r0.<com.android.server.usage.AppTimeLimitController: android.util.SparseArray mUsers>;

        i6 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

     label19:
        i7 = 0;

     label20:
        if i7 >= i6 goto label23;

     label21:
        virtualinvoke r21.<java.io.PrintWriter: void print(java.lang.String)>("   User ");

        $r7 = r0.<com.android.server.usage.AppTimeLimitController: android.util.SparseArray mUsers>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i7);

        $r9 = (com.android.server.usage.AppTimeLimitController$UserData) $r8;

        virtualinvoke $r9.<com.android.server.usage.AppTimeLimitController$UserData: void dump(java.io.PrintWriter)>(r21);

     label22:
        i7 = i7 + 1;

        goto label20;

     label23:
        virtualinvoke r21.<java.io.PrintWriter: void println()>();

        $r3 = r0.<com.android.server.usage.AppTimeLimitController: android.util.SparseArray mObserverApps>;

        i8 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

     label24:
        i9 = 0;

     label25:
        if i9 >= i8 goto label28;

     label26:
        virtualinvoke r21.<java.io.PrintWriter: void print(java.lang.String)>("   Observer App ");

        $r4 = r0.<com.android.server.usage.AppTimeLimitController: android.util.SparseArray mObserverApps>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i9);

        $r6 = (com.android.server.usage.AppTimeLimitController$ObserverAppData) $r5;

        virtualinvoke $r6.<com.android.server.usage.AppTimeLimitController$ObserverAppData: void dump(java.io.PrintWriter)>(r21);

     label27:
        i9 = i9 + 1;

        goto label25;

     label28:
        exitmonitor r24;

     label29:
        return;

     label30:
        $r19 := @caughtexception;

     label31:
        exitmonitor r24;

     label32:
        throw $r19;

        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.Throwable from label18 to label19 with label30;
        catch java.lang.Throwable from label21 to label22 with label30;
        catch java.lang.Throwable from label23 to label24 with label30;
        catch java.lang.Throwable from label26 to label27 with label30;
        catch java.lang.Throwable from label28 to label29 with label30;
        catch java.lang.Throwable from label31 to label32 with label30;
    }

    com.android.server.usage.AppTimeLimitController$AppUsageGroup getAppUsageGroup(int, int)
    {
        com.android.server.usage.AppTimeLimitController r0;
        int i0, i1;
        com.android.server.usage.AppTimeLimitController$Lock r1;
        com.android.server.usage.AppTimeLimitController$ObserverAppData $r2;
        android.util.SparseArray $r3;
        java.lang.Object $r4;
        java.lang.Throwable $r5;
        com.android.server.usage.AppTimeLimitController$AppUsageGroup r6;

        r0 := @this: com.android.server.usage.AppTimeLimitController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<com.android.server.usage.AppTimeLimitController: com.android.server.usage.AppTimeLimitController$Lock mLock>;

        entermonitor r1;

     label1:
        $r2 = specialinvoke r0.<com.android.server.usage.AppTimeLimitController: com.android.server.usage.AppTimeLimitController$ObserverAppData getOrCreateObserverAppDataLocked(int)>(i0);

        $r3 = $r2.<com.android.server.usage.AppTimeLimitController$ObserverAppData: android.util.SparseArray appUsageGroups>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r6 = (com.android.server.usage.AppTimeLimitController$AppUsageGroup) $r4;

        exitmonitor r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.app.usage.UsageStatsManagerInternal$AppUsageLimitData getAppUsageLimit(java.lang.String, android.os.UserHandle)
    {
        com.android.server.usage.AppTimeLimitController r0;
        com.android.server.usage.AppTimeLimitController$Lock r1;
        android.util.ArraySet r2;
        int $i0, $i1, $i2, $i8, i9, i10, i11;
        android.util.ArrayMap $r3;
        java.lang.Object $r4, $r5, $r6, $r7, $r8;
        boolean $z0, $z1, $z2, $z3;
        long $l3, $l4, $l5, $l6;
        byte $b7;
        java.lang.String[] $r9, $r10;
        java.lang.String $r11, r13;
        java.lang.Throwable $r12;
        android.os.UserHandle r14;
        com.android.server.usage.AppTimeLimitController$UserData r15;
        java.util.ArrayList r16;
        com.android.server.usage.AppTimeLimitController$AppUsageLimitGroup r17, r18, r19, r20;
        android.app.usage.UsageStatsManagerInternal$AppUsageLimitData r21;

        r0 := @this: com.android.server.usage.AppTimeLimitController;

        r13 := @parameter0: java.lang.String;

        r14 := @parameter1: android.os.UserHandle;

        r1 = r0.<com.android.server.usage.AppTimeLimitController: com.android.server.usage.AppTimeLimitController$Lock mLock>;

        entermonitor r1;

     label01:
        $i0 = virtualinvoke r14.<android.os.UserHandle: int getIdentifier()>();

        r15 = specialinvoke r0.<com.android.server.usage.AppTimeLimitController: com.android.server.usage.AppTimeLimitController$UserData getOrCreateUserDataLocked(int)>($i0);

     label02:
        if r15 != null goto label05;

     label03:
        exitmonitor r1;

     label04:
        return null;

     label05:
        $r3 = r15.<com.android.server.usage.AppTimeLimitController$UserData: android.util.ArrayMap observedMap>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r13);

        r16 = (java.util.ArrayList) $r4;

     label06:
        if r16 == null goto label28;

     label07:
        $z0 = virtualinvoke r16.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label09;

     label08:
        goto label28;

     label09:
        r2 = new android.util.ArraySet;

        specialinvoke r2.<android.util.ArraySet: void <init>()>();

     label10:
        i9 = 0;

     label11:
        $i1 = virtualinvoke r16.<java.util.ArrayList: int size()>();

        if i9 >= $i1 goto label17;

        $r7 = virtualinvoke r16.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        $z2 = $r7 instanceof com.android.server.usage.AppTimeLimitController$AppUsageLimitGroup;

        if $z2 == 0 goto label16;

        $r8 = virtualinvoke r16.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        r17 = (com.android.server.usage.AppTimeLimitController$AppUsageLimitGroup) $r8;

     label12:
        i10 = 0;

     label13:
        $r9 = r17.<com.android.server.usage.AppTimeLimitController$AppUsageLimitGroup: java.lang.String[] mObserved>;

        $i8 = lengthof $r9;

        if i10 >= $i8 goto label16;

        $r10 = r17.<com.android.server.usage.AppTimeLimitController$AppUsageLimitGroup: java.lang.String[] mObserved>;

        $r11 = $r10[i10];

        $z3 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r13);

        if $z3 == 0 goto label15;

        virtualinvoke r2.<android.util.ArraySet: boolean add(java.lang.Object)>(r17);

     label14:
        goto label16;

     label15:
        i10 = i10 + 1;

        goto label13;

     label16:
        i9 = i9 + 1;

        goto label11;

     label17:
        $z1 = virtualinvoke r2.<android.util.ArraySet: boolean isEmpty()>();

        if $z1 == 0 goto label19;

        exitmonitor r1;

     label18:
        return null;

     label19:
        $r5 = virtualinvoke r2.<android.util.ArraySet: java.lang.Object valueAt(int)>(0);

        r18 = (com.android.server.usage.AppTimeLimitController$AppUsageLimitGroup) $r5;

     label20:
        i11 = 1;

     label21:
        $i2 = virtualinvoke r2.<android.util.ArraySet: int size()>();

        if i11 >= $i2 goto label26;

        $r6 = virtualinvoke r2.<android.util.ArraySet: java.lang.Object valueAt(int)>(i11);

        r19 = (com.android.server.usage.AppTimeLimitController$AppUsageLimitGroup) $r6;

     label22:
        r20 = r18;

     label23:
        $l5 = virtualinvoke r19.<com.android.server.usage.AppTimeLimitController$AppUsageLimitGroup: long getUsageRemaining()>();

        $l6 = virtualinvoke r18.<com.android.server.usage.AppTimeLimitController$AppUsageLimitGroup: long getUsageRemaining()>();

        $b7 = $l5 cmp $l6;

        if $b7 >= 0 goto label25;

     label24:
        r20 = r19;

     label25:
        i11 = i11 + 1;

        r18 = r20;

        goto label21;

     label26:
        r21 = new android.app.usage.UsageStatsManagerInternal$AppUsageLimitData;

        $l3 = virtualinvoke r18.<com.android.server.usage.AppTimeLimitController$AppUsageLimitGroup: long getTotaUsageLimit()>();

        $l4 = virtualinvoke r18.<com.android.server.usage.AppTimeLimitController$AppUsageLimitGroup: long getUsageRemaining()>();

        specialinvoke r21.<android.app.usage.UsageStatsManagerInternal$AppUsageLimitData: void <init>(long,long)>($l3, $l4);

        exitmonitor r1;

     label27:
        return r21;

     label28:
        exitmonitor r1;

     label29:
        return null;

     label30:
        $r12 := @caughtexception;

     label31:
        exitmonitor r1;

     label32:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label30;
        catch java.lang.Throwable from label03 to label04 with label30;
        catch java.lang.Throwable from label05 to label06 with label30;
        catch java.lang.Throwable from label07 to label08 with label30;
        catch java.lang.Throwable from label09 to label10 with label30;
        catch java.lang.Throwable from label11 to label12 with label30;
        catch java.lang.Throwable from label13 to label14 with label30;
        catch java.lang.Throwable from label17 to label18 with label30;
        catch java.lang.Throwable from label19 to label20 with label30;
        catch java.lang.Throwable from label21 to label22 with label30;
        catch java.lang.Throwable from label23 to label24 with label30;
        catch java.lang.Throwable from label26 to label27 with label30;
        catch java.lang.Throwable from label28 to label29 with label30;
        catch java.lang.Throwable from label31 to label32 with label30;
    }

    com.android.server.usage.AppTimeLimitController$AppUsageLimitGroup getAppUsageLimitGroup(int, int)
    {
        com.android.server.usage.AppTimeLimitController r0;
        int i0, i1;
        com.android.server.usage.AppTimeLimitController$Lock r1;
        com.android.server.usage.AppTimeLimitController$ObserverAppData $r2;
        android.util.SparseArray $r3;
        java.lang.Object $r4;
        java.lang.Throwable $r5;
        com.android.server.usage.AppTimeLimitController$AppUsageLimitGroup r6;

        r0 := @this: com.android.server.usage.AppTimeLimitController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<com.android.server.usage.AppTimeLimitController: com.android.server.usage.AppTimeLimitController$Lock mLock>;

        entermonitor r1;

     label1:
        $r2 = specialinvoke r0.<com.android.server.usage.AppTimeLimitController: com.android.server.usage.AppTimeLimitController$ObserverAppData getOrCreateObserverAppDataLocked(int)>(i0);

        $r3 = $r2.<com.android.server.usage.AppTimeLimitController$ObserverAppData: android.util.SparseArray appUsageLimitGroups>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r6 = (com.android.server.usage.AppTimeLimitController$AppUsageLimitGroup) $r4;

        exitmonitor r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected long getAppUsageLimitObserverPerUidLimit()
    {
        com.android.server.usage.AppTimeLimitController r0;

        r0 := @this: com.android.server.usage.AppTimeLimitController;

        return 1000L;
    }

    protected long getAppUsageObserverPerUidLimit()
    {
        com.android.server.usage.AppTimeLimitController r0;

        r0 := @this: com.android.server.usage.AppTimeLimitController;

        return 1000L;
    }

    protected long getMinTimeLimit()
    {
        com.android.server.usage.AppTimeLimitController r0;

        r0 := @this: com.android.server.usage.AppTimeLimitController;

        return 60000L;
    }

    com.android.server.usage.AppTimeLimitController$SessionUsageGroup getSessionUsageGroup(int, int)
    {
        com.android.server.usage.AppTimeLimitController r0;
        int i0, i1;
        com.android.server.usage.AppTimeLimitController$Lock r1;
        com.android.server.usage.AppTimeLimitController$ObserverAppData $r2;
        android.util.SparseArray $r3;
        java.lang.Object $r4;
        java.lang.Throwable $r5;
        com.android.server.usage.AppTimeLimitController$SessionUsageGroup r6;

        r0 := @this: com.android.server.usage.AppTimeLimitController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<com.android.server.usage.AppTimeLimitController: com.android.server.usage.AppTimeLimitController$Lock mLock>;

        entermonitor r1;

     label1:
        $r2 = specialinvoke r0.<com.android.server.usage.AppTimeLimitController: com.android.server.usage.AppTimeLimitController$ObserverAppData getOrCreateObserverAppDataLocked(int)>(i0);

        $r3 = $r2.<com.android.server.usage.AppTimeLimitController$ObserverAppData: android.util.SparseArray sessionUsageGroups>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r6 = (com.android.server.usage.AppTimeLimitController$SessionUsageGroup) $r4;

        exitmonitor r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected long getUptimeMillis()
    {
        com.android.server.usage.AppTimeLimitController r0;
        long $l0;

        r0 := @this: com.android.server.usage.AppTimeLimitController;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        return $l0;
    }

    protected long getUsageSessionObserverPerUidLimit()
    {
        com.android.server.usage.AppTimeLimitController r0;

        r0 := @this: com.android.server.usage.AppTimeLimitController;

        return 1000L;
    }

    public void noteUsageStart(java.lang.String, int) throws java.lang.IllegalArgumentException
    {
        com.android.server.usage.AppTimeLimitController r0;
        java.lang.String r1;
        int i0;

        r0 := @this: com.android.server.usage.AppTimeLimitController;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.usage.AppTimeLimitController: void noteUsageStart(java.lang.String,int,long)>(r1, i0, 0L);

        return;
    }

    public void noteUsageStart(java.lang.String, int, long) throws java.lang.IllegalArgumentException
    {
        com.android.server.usage.AppTimeLimitController r0;
        long l0, l1, $l3;
        com.android.server.usage.AppTimeLimitController$Lock r1;
        com.android.server.usage.AppTimeLimitController$UserData r2;
        java.lang.Integer r3, $r5, $r15;
        int i2, $i4, $i5, i6, i7, i8;
        android.util.ArrayMap $r4, $r6, $r8, $r12, $r14;
        java.lang.Object $r9, $r10, $r13;
        com.android.server.usage.AppTimeLimitController$UsageGroup $r11;
        java.lang.Throwable $r17;
        java.lang.String r18;
        java.util.ArrayList r19;

        r0 := @this: com.android.server.usage.AppTimeLimitController;

        r18 := @parameter0: java.lang.String;

        i6 := @parameter1: int;

        l0 := @parameter2: long;

        r1 = r0.<com.android.server.usage.AppTimeLimitController: com.android.server.usage.AppTimeLimitController$Lock mLock>;

        entermonitor r1;

     label01:
        r2 = specialinvoke r0.<com.android.server.usage.AppTimeLimitController: com.android.server.usage.AppTimeLimitController$UserData getOrCreateUserDataLocked(int)>(i6);

        $r4 = r2.<com.android.server.usage.AppTimeLimitController$UserData: android.util.ArrayMap currentlyActive>;

        i7 = virtualinvoke $r4.<android.util.ArrayMap: int indexOfKey(java.lang.Object)>(r18);

     label02:
        if i7 < 0 goto label07;

     label03:
        $r12 = r2.<com.android.server.usage.AppTimeLimitController$UserData: android.util.ArrayMap currentlyActive>;

        $r13 = virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i7);

        r3 = (java.lang.Integer) $r13;

     label04:
        if r3 == null goto label07;

     label05:
        $r14 = r2.<com.android.server.usage.AppTimeLimitController$UserData: android.util.ArrayMap currentlyActive>;

        $i4 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        $i5 = $i4 + 1;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        virtualinvoke $r14.<android.util.ArrayMap: java.lang.Object setValueAt(int,java.lang.Object)>(i7, $r15);

        exitmonitor r1;

     label06:
        return;

     label07:
        l1 = virtualinvoke r0.<com.android.server.usage.AppTimeLimitController: long getUptimeMillis()>();

        $r6 = r2.<com.android.server.usage.AppTimeLimitController$UserData: android.util.ArrayMap currentlyActive>;

        $r5 = <com.android.server.usage.AppTimeLimitController: java.lang.Integer ONE>;

        virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r18, $r5);

        $r8 = r2.<com.android.server.usage.AppTimeLimitController$UserData: android.util.ArrayMap observedMap>;

        $r9 = virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r18);

        r19 = (java.util.ArrayList) $r9;

     label08:
        if r19 != null goto label11;

     label09:
        exitmonitor r1;

     label10:
        return;

     label11:
        i2 = virtualinvoke r19.<java.util.ArrayList: int size()>();

     label12:
        i8 = 0;

     label13:
        if i8 >= i2 goto label16;

     label14:
        $r10 = virtualinvoke r19.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        $r11 = (com.android.server.usage.AppTimeLimitController$UsageGroup) $r10;

        $l3 = l1 - l0;

        virtualinvoke $r11.<com.android.server.usage.AppTimeLimitController$UsageGroup: void noteUsageStart(long,long)>($l3, l1);

     label15:
        i8 = i8 + 1;

        goto label13;

     label16:
        exitmonitor r1;

     label17:
        return;

     label18:
        $r17 := @caughtexception;

     label19:
        exitmonitor r1;

     label20:
        throw $r17;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label05 to label06 with label18;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch java.lang.Throwable from label11 to label12 with label18;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
    }

    public void noteUsageStop(java.lang.String, int) throws java.lang.IllegalArgumentException
    {
        com.android.server.usage.AppTimeLimitController r0;
        com.android.server.usage.AppTimeLimitController$Lock r1;
        long l0;
        int i1, $i2, $i3, i4, i5, i6;
        android.util.ArrayMap $r2, $r7, $r10, $r12, $r16;
        java.lang.String $r6, r20;
        java.lang.Object $r8, $r13, $r14;
        java.lang.Integer $r9, $r17, r22;
        boolean $z0;
        com.android.server.usage.AppTimeLimitController$UsageGroup $r15;
        java.lang.Throwable $r19;
        com.android.server.usage.AppTimeLimitController$UserData r21;
        java.util.ArrayList r23;
        java.lang.IllegalArgumentException r24;
        java.lang.StringBuilder r25;

        r0 := @this: com.android.server.usage.AppTimeLimitController;

        r20 := @parameter0: java.lang.String;

        i4 := @parameter1: int;

        r1 = r0.<com.android.server.usage.AppTimeLimitController: com.android.server.usage.AppTimeLimitController$Lock mLock>;

        entermonitor r1;

     label01:
        r21 = specialinvoke r0.<com.android.server.usage.AppTimeLimitController: com.android.server.usage.AppTimeLimitController$UserData getOrCreateUserDataLocked(int)>(i4);

        $r2 = r21.<com.android.server.usage.AppTimeLimitController$UserData: android.util.ArrayMap currentlyActive>;

        i5 = virtualinvoke $r2.<android.util.ArrayMap: int indexOfKey(java.lang.Object)>(r20);

     label02:
        if i5 < 0 goto label16;

     label03:
        $r7 = r21.<com.android.server.usage.AppTimeLimitController$UserData: android.util.ArrayMap currentlyActive>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i5);

        r22 = (java.lang.Integer) $r8;

        $r9 = <com.android.server.usage.AppTimeLimitController: java.lang.Integer ONE>;

        $z0 = virtualinvoke r22.<java.lang.Integer: boolean equals(java.lang.Object)>($r9);

        if $z0 != 0 goto label05;

        $r16 = r21.<com.android.server.usage.AppTimeLimitController$UserData: android.util.ArrayMap currentlyActive>;

        $i2 = virtualinvoke r22.<java.lang.Integer: int intValue()>();

        $i3 = $i2 - 1;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        virtualinvoke $r16.<android.util.ArrayMap: java.lang.Object setValueAt(int,java.lang.Object)>(i5, $r17);

        exitmonitor r1;

     label04:
        return;

     label05:
        $r10 = r21.<com.android.server.usage.AppTimeLimitController$UserData: android.util.ArrayMap currentlyActive>;

        virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i5);

        l0 = virtualinvoke r0.<com.android.server.usage.AppTimeLimitController: long getUptimeMillis()>();

        $r12 = r21.<com.android.server.usage.AppTimeLimitController$UserData: android.util.ArrayMap observedMap>;

        $r13 = virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r20);

        r23 = (java.util.ArrayList) $r13;

     label06:
        if r23 != null goto label09;

     label07:
        exitmonitor r1;

     label08:
        return;

     label09:
        i1 = virtualinvoke r23.<java.util.ArrayList: int size()>();

     label10:
        i6 = 0;

     label11:
        if i6 >= i1 goto label14;

     label12:
        $r14 = virtualinvoke r23.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $r15 = (com.android.server.usage.AppTimeLimitController$UsageGroup) $r14;

        virtualinvoke $r15.<com.android.server.usage.AppTimeLimitController$UsageGroup: void noteUsageStop(long)>(l0);

     label13:
        i6 = i6 + 1;

        goto label11;

     label14:
        exitmonitor r1;

     label15:
        return;

     label16:
        r24 = new java.lang.IllegalArgumentException;

        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to stop usage for ");

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", not in use");

        $r6 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw r24;

     label17:
        $r19 := @caughtexception;

     label18:
        exitmonitor r1;

     label19:
        throw $r19;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label14 to label15 with label17;
        catch java.lang.Throwable from label16 to label17 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    public void onUserRemoved(int)
    {
        com.android.server.usage.AppTimeLimitController r0;
        int i0;
        com.android.server.usage.AppTimeLimitController$Lock r1;
        android.util.SparseArray $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.usage.AppTimeLimitController;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.usage.AppTimeLimitController: com.android.server.usage.AppTimeLimitController$Lock mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.usage.AppTimeLimitController: android.util.SparseArray mUsers>;

        virtualinvoke $r3.<android.util.SparseArray: void remove(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void removeAppUsageLimitObserver(int, int, int)
    {
        com.android.server.usage.AppTimeLimitController r0;
        int i0, i1, i2;
        com.android.server.usage.AppTimeLimitController$Lock r1;
        com.android.server.usage.AppTimeLimitController$ObserverAppData $r2;
        android.util.SparseArray $r3;
        java.lang.Object $r4;
        java.lang.Throwable $r5;
        com.android.server.usage.AppTimeLimitController$AppUsageLimitGroup r6;

        r0 := @this: com.android.server.usage.AppTimeLimitController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 = r0.<com.android.server.usage.AppTimeLimitController: com.android.server.usage.AppTimeLimitController$Lock mLock>;

        entermonitor r1;

     label1:
        $r2 = specialinvoke r0.<com.android.server.usage.AppTimeLimitController: com.android.server.usage.AppTimeLimitController$ObserverAppData getOrCreateObserverAppDataLocked(int)>(i0);

        $r3 = $r2.<com.android.server.usage.AppTimeLimitController$ObserverAppData: android.util.SparseArray appUsageLimitGroups>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r6 = (com.android.server.usage.AppTimeLimitController$AppUsageLimitGroup) $r4;

     label2:
        if r6 == null goto label4;

     label3:
        virtualinvoke r6.<com.android.server.usage.AppTimeLimitController$AppUsageLimitGroup: void remove()>();

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r5 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void removeAppUsageObserver(int, int, int)
    {
        com.android.server.usage.AppTimeLimitController r0;
        int i0, i1, i2;
        com.android.server.usage.AppTimeLimitController$Lock r1;
        com.android.server.usage.AppTimeLimitController$ObserverAppData $r2;
        android.util.SparseArray $r3;
        java.lang.Object $r4;
        java.lang.Throwable $r5;
        com.android.server.usage.AppTimeLimitController$AppUsageGroup r6;

        r0 := @this: com.android.server.usage.AppTimeLimitController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 = r0.<com.android.server.usage.AppTimeLimitController: com.android.server.usage.AppTimeLimitController$Lock mLock>;

        entermonitor r1;

     label1:
        $r2 = specialinvoke r0.<com.android.server.usage.AppTimeLimitController: com.android.server.usage.AppTimeLimitController$ObserverAppData getOrCreateObserverAppDataLocked(int)>(i0);

        $r3 = $r2.<com.android.server.usage.AppTimeLimitController$ObserverAppData: android.util.SparseArray appUsageGroups>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r6 = (com.android.server.usage.AppTimeLimitController$AppUsageGroup) $r4;

     label2:
        if r6 == null goto label4;

     label3:
        virtualinvoke r6.<com.android.server.usage.AppTimeLimitController$AppUsageGroup: void remove()>();

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r5 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void removeUsageSessionObserver(int, int, int)
    {
        com.android.server.usage.AppTimeLimitController r0;
        int i0, i1, i2;
        com.android.server.usage.AppTimeLimitController$Lock r1;
        com.android.server.usage.AppTimeLimitController$ObserverAppData $r2;
        android.util.SparseArray $r3;
        java.lang.Object $r4;
        java.lang.Throwable $r5;
        com.android.server.usage.AppTimeLimitController$SessionUsageGroup r6;

        r0 := @this: com.android.server.usage.AppTimeLimitController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 = r0.<com.android.server.usage.AppTimeLimitController: com.android.server.usage.AppTimeLimitController$Lock mLock>;

        entermonitor r1;

     label1:
        $r2 = specialinvoke r0.<com.android.server.usage.AppTimeLimitController: com.android.server.usage.AppTimeLimitController$ObserverAppData getOrCreateObserverAppDataLocked(int)>(i0);

        $r3 = $r2.<com.android.server.usage.AppTimeLimitController$ObserverAppData: android.util.SparseArray sessionUsageGroups>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r6 = (com.android.server.usage.AppTimeLimitController$SessionUsageGroup) $r4;

     label2:
        if r6 == null goto label4;

     label3:
        virtualinvoke r6.<com.android.server.usage.AppTimeLimitController$SessionUsageGroup: void remove()>();

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r5 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }
}
