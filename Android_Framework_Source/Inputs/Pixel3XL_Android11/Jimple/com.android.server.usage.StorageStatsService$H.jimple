class com.android.server.usage.StorageStatsService$H extends android.os.Handler
{
    private static final boolean DEBUG;
    private static final double MINIMUM_CHANGE_DELTA;
    private static final int MSG_CHECK_STORAGE_DELTA;
    private static final int MSG_LOAD_CACHED_QUOTAS_FROM_FILE;
    private static final int UNSET;
    private double mMinimumThresholdBytes;
    private long mPreviousBytes;
    private final android.os.StatFs mStats;
    final com.android.server.usage.StorageStatsService this$0;

    public void <init>(com.android.server.usage.StorageStatsService, android.os.Looper)
    {
        com.android.server.usage.StorageStatsService$H r0;
        android.os.Looper r1;
        android.os.StatFs $r2, $r5;
        java.io.File $r3;
        java.lang.String $r4;
        long $l0, $l1;
        double $d0, $d1;
        com.android.server.usage.StorageStatsService r6;

        r0 := @this: com.android.server.usage.StorageStatsService$H;

        r6 := @parameter0: com.android.server.usage.StorageStatsService;

        r1 := @parameter1: android.os.Looper;

        r0.<com.android.server.usage.StorageStatsService$H: com.android.server.usage.StorageStatsService this$0> = r6;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r1);

        $r2 = new android.os.StatFs;

        $r3 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r4 = virtualinvoke $r3.<java.io.File: java.lang.String getAbsolutePath()>();

        specialinvoke $r2.<android.os.StatFs: void <init>(java.lang.String)>($r4);

        r0.<com.android.server.usage.StorageStatsService$H: android.os.StatFs mStats> = $r2;

        $l0 = virtualinvoke $r2.<android.os.StatFs: long getAvailableBytes()>();

        r0.<com.android.server.usage.StorageStatsService$H: long mPreviousBytes> = $l0;

        $r5 = r0.<com.android.server.usage.StorageStatsService$H: android.os.StatFs mStats>;

        $l1 = virtualinvoke $r5.<android.os.StatFs: long getTotalBytes()>();

        $d0 = (double) $l1;

        $d1 = $d0 * 0.05;

        r0.<com.android.server.usage.StorageStatsService$H: double mMinimumThresholdBytes> = $d1;

        return;
    }

    private com.android.server.storage.CacheQuotaStrategy getInitializedStrategy()
    {
        com.android.server.usage.StorageStatsService$H r0;
        android.app.usage.UsageStatsManagerInternal r1;
        java.lang.Object $r2;
        com.android.server.storage.CacheQuotaStrategy $r3;
        com.android.server.usage.StorageStatsService $r4, $r6, $r8;
        android.content.Context $r5;
        com.android.server.pm.Installer $r7;
        android.util.ArrayMap $r9;

        r0 := @this: com.android.server.usage.StorageStatsService$H;

        $r2 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/app/usage/UsageStatsManagerInternal;");

        r1 = (android.app.usage.UsageStatsManagerInternal) $r2;

        $r3 = new com.android.server.storage.CacheQuotaStrategy;

        $r4 = r0.<com.android.server.usage.StorageStatsService$H: com.android.server.usage.StorageStatsService this$0>;

        $r5 = staticinvoke <com.android.server.usage.StorageStatsService: android.content.Context access$200(com.android.server.usage.StorageStatsService)>($r4);

        $r6 = r0.<com.android.server.usage.StorageStatsService$H: com.android.server.usage.StorageStatsService this$0>;

        $r7 = staticinvoke <com.android.server.usage.StorageStatsService: com.android.server.pm.Installer access$300(com.android.server.usage.StorageStatsService)>($r6);

        $r8 = r0.<com.android.server.usage.StorageStatsService$H: com.android.server.usage.StorageStatsService this$0>;

        $r9 = staticinvoke <com.android.server.usage.StorageStatsService: android.util.ArrayMap access$400(com.android.server.usage.StorageStatsService)>($r8);

        specialinvoke $r3.<com.android.server.storage.CacheQuotaStrategy: void <init>(android.content.Context,android.app.usage.UsageStatsManagerInternal,com.android.server.pm.Installer,android.util.ArrayMap)>($r5, r1, $r7, $r9);

        return $r3;
    }

    private void recalculateQuotas(com.android.server.storage.CacheQuotaStrategy)
    {
        com.android.server.usage.StorageStatsService$H r0;
        com.android.server.storage.CacheQuotaStrategy r1;

        r0 := @this: com.android.server.usage.StorageStatsService$H;

        r1 := @parameter0: com.android.server.storage.CacheQuotaStrategy;

        virtualinvoke r1.<com.android.server.storage.CacheQuotaStrategy: void recalculateQuotas()>();

        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.server.usage.StorageStatsService$H r0;
        int i0;
        com.android.server.usage.StorageStatsService $r1, $r7;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        boolean $z0;
        android.os.StatFs $r4, $r5, $r8;
        long $l1, $l2, $l3, $l4, $l6, $l7, $l8, $l11;
        double $d0, $d1;
        byte $b5, $b12;
        com.android.server.storage.CacheQuotaStrategy $r6, r12;
        java.lang.Throwable $r9, $r10;
        android.os.Message r11;

        r0 := @this: com.android.server.usage.StorageStatsService$H;

        r11 := @parameter0: android.os.Message;

        $r1 = r0.<com.android.server.usage.StorageStatsService$H: com.android.server.usage.StorageStatsService this$0>;

        $r2 = staticinvoke <com.android.server.usage.StorageStatsService: android.content.Context access$200(com.android.server.usage.StorageStatsService)>($r1);

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $z0 = staticinvoke <com.android.server.usage.StorageStatsService: boolean isCacheQuotaCalculationsEnabled(android.content.ContentResolver)>($r3);

        if $z0 != 0 goto label01;

        return;

     label01:
        i0 = r11.<android.os.Message: int what>;

        if i0 == 100 goto label09;

        if i0 == 101 goto label02;

        return;

     label02:
        r12 = specialinvoke r0.<com.android.server.usage.StorageStatsService$H: com.android.server.storage.CacheQuotaStrategy getInitializedStrategy()>();

        r0.<com.android.server.usage.StorageStatsService$H: long mPreviousBytes> = -1L;

     label03:
        $l7 = virtualinvoke r12.<com.android.server.storage.CacheQuotaStrategy: long setupQuotasFromFile()>();

        r0.<com.android.server.usage.StorageStatsService$H: long mPreviousBytes> = $l7;

     label04:
        goto label07;

     label05:
        $r9 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("StorageStatsService", "Cache quota XML file is malformed?", $r9);

        goto label07;

     label06:
        $r10 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("StorageStatsService", "An error occurred while reading the cache quota file.", $r10);

     label07:
        $l11 = r0.<com.android.server.usage.StorageStatsService$H: long mPreviousBytes>;

        $b12 = $l11 cmp 0L;

        if $b12 >= 0 goto label08;

        $r8 = r0.<com.android.server.usage.StorageStatsService$H: android.os.StatFs mStats>;

        $l8 = virtualinvoke $r8.<android.os.StatFs: long getAvailableBytes()>();

        r0.<com.android.server.usage.StorageStatsService$H: long mPreviousBytes> = $l8;

        specialinvoke r0.<com.android.server.usage.StorageStatsService$H: void recalculateQuotas(com.android.server.storage.CacheQuotaStrategy)>(r12);

     label08:
        virtualinvoke r0.<com.android.server.usage.StorageStatsService$H: boolean sendEmptyMessageDelayed(int,long)>(100, 30000L);

        goto label11;

     label09:
        $l1 = r0.<com.android.server.usage.StorageStatsService$H: long mPreviousBytes>;

        $r4 = r0.<com.android.server.usage.StorageStatsService$H: android.os.StatFs mStats>;

        $l2 = virtualinvoke $r4.<android.os.StatFs: long getAvailableBytes()>();

        $l3 = $l1 - $l2;

        $l4 = staticinvoke <java.lang.Math: long abs(long)>($l3);

        $d1 = (double) $l4;

        $d0 = r0.<com.android.server.usage.StorageStatsService$H: double mMinimumThresholdBytes>;

        $b5 = $d1 cmpl $d0;

        if $b5 <= 0 goto label10;

        $r5 = r0.<com.android.server.usage.StorageStatsService$H: android.os.StatFs mStats>;

        $l6 = virtualinvoke $r5.<android.os.StatFs: long getAvailableBytes()>();

        r0.<com.android.server.usage.StorageStatsService$H: long mPreviousBytes> = $l6;

        $r6 = specialinvoke r0.<com.android.server.usage.StorageStatsService$H: com.android.server.storage.CacheQuotaStrategy getInitializedStrategy()>();

        specialinvoke r0.<com.android.server.usage.StorageStatsService$H: void recalculateQuotas(com.android.server.storage.CacheQuotaStrategy)>($r6);

        $r7 = r0.<com.android.server.usage.StorageStatsService$H: com.android.server.usage.StorageStatsService this$0>;

        virtualinvoke $r7.<com.android.server.usage.StorageStatsService: void notifySignificantDelta()>();

     label10:
        virtualinvoke r0.<com.android.server.usage.StorageStatsService$H: boolean sendEmptyMessageDelayed(int,long)>(100, 30000L);

     label11:
        return;

        catch java.io.IOException from label03 to label04 with label06;
        catch java.lang.IllegalStateException from label03 to label04 with label05;
    }

    public static void <clinit>()
    {
        <com.android.server.usage.StorageStatsService$H: int UNSET> = -1;

        <com.android.server.usage.StorageStatsService$H: int MSG_LOAD_CACHED_QUOTAS_FROM_FILE> = 101;

        <com.android.server.usage.StorageStatsService$H: int MSG_CHECK_STORAGE_DELTA> = 100;

        <com.android.server.usage.StorageStatsService$H: double MINIMUM_CHANGE_DELTA> = 0.05;

        <com.android.server.usage.StorageStatsService$H: boolean DEBUG> = 0;

        return;
    }
}
