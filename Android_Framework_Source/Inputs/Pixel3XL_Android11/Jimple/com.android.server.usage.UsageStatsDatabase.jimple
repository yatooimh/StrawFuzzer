public class com.android.server.usage.UsageStatsDatabase extends java.lang.Object
{
    public static final int BACKUP_VERSION;
    private static final java.lang.String BAK_SUFFIX;
    private static final java.lang.String CHECKED_IN_SUFFIX;
    private static final boolean DEBUG;
    private static final int DEFAULT_CURRENT_VERSION;
    static final boolean KEEP_BACKUP_DIR;
    static final java.lang.String KEY_USAGE_STATS;
    static final int[] MAX_FILES_PER_INTERVAL_TYPE;
    private static final java.lang.String RETENTION_LEN_KEY;
    private static final int SELECTION_LOG_RETENTION_LEN;
    private static final java.lang.String TAG;
    private final java.io.File mBackupsDir;
    private final com.android.server.usage.UnixCalendar mCal;
    private int mCurrentVersion;
    private boolean mFirstUpdate;
    private final java.io.File[] mIntervalDirs;
    private final java.lang.Object mLock;
    private boolean mNewUpdate;
    private final java.io.File mPackageMappingsFile;
    final com.android.server.usage.PackagesTokenData mPackagesTokenData;
    final android.app.usage.TimeSparseArray[] mSortedStatFiles;
    private final java.io.File mUpdateBreadcrumb;
    private boolean mUpgradePerformed;
    private final java.io.File mVersionFile;

    static void <clinit>()
    {
        int[] $r0;
        int $i0;

        <com.android.server.usage.UsageStatsDatabase: java.lang.String TAG> = "UsageStatsDatabase";

        <com.android.server.usage.UsageStatsDatabase: java.lang.String RETENTION_LEN_KEY> = "ro.usagestats.chooser.retention";

        <com.android.server.usage.UsageStatsDatabase: java.lang.String KEY_USAGE_STATS> = "usage_stats";

        <com.android.server.usage.UsageStatsDatabase: boolean KEEP_BACKUP_DIR> = 0;

        <com.android.server.usage.UsageStatsDatabase: int DEFAULT_CURRENT_VERSION> = 5;

        <com.android.server.usage.UsageStatsDatabase: boolean DEBUG> = 0;

        <com.android.server.usage.UsageStatsDatabase: java.lang.String CHECKED_IN_SUFFIX> = "-c";

        <com.android.server.usage.UsageStatsDatabase: java.lang.String BAK_SUFFIX> = ".bak";

        <com.android.server.usage.UsageStatsDatabase: int BACKUP_VERSION> = 4;

        $r0 = newarray (int)[4];

        $r0[0] = 100;

        $r0[1] = 50;

        $r0[2] = 12;

        $r0[3] = 10;

        <com.android.server.usage.UsageStatsDatabase: int[] MAX_FILES_PER_INTERVAL_TYPE> = $r0;

        $i0 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("ro.usagestats.chooser.retention", 14);

        <com.android.server.usage.UsageStatsDatabase: int SELECTION_LOG_RETENTION_LEN> = $i0;

        return;
    }

    public void <init>(java.io.File)
    {
        com.android.server.usage.UsageStatsDatabase r0;
        java.io.File r1;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<com.android.server.usage.UsageStatsDatabase: void <init>(java.io.File,int)>(r1, 5);

        return;
    }

    public void <init>(java.io.File, int)
    {
        com.android.server.usage.UsageStatsDatabase r0;
        java.io.File r1, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r14;
        int i0, $i1;
        java.lang.Object $r2;
        com.android.server.usage.PackagesTokenData $r3;
        java.io.File[] $r4, $r12;
        android.app.usage.TimeSparseArray[] $r13;
        com.android.server.usage.UnixCalendar $r15;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        r1 := @parameter0: java.io.File;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.server.usage.UsageStatsDatabase: java.lang.Object mLock> = $r2;

        $r3 = new com.android.server.usage.PackagesTokenData;

        specialinvoke $r3.<com.android.server.usage.PackagesTokenData: void <init>()>();

        r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.PackagesTokenData mPackagesTokenData> = $r3;

        $r4 = newarray (java.io.File)[4];

        $r5 = new java.io.File;

        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "daily");

        $r4[0] = $r5;

        $r6 = new java.io.File;

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "weekly");

        $r4[1] = $r6;

        $r7 = new java.io.File;

        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "monthly");

        $r4[2] = $r7;

        $r8 = new java.io.File;

        specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "yearly");

        $r4[3] = $r8;

        r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs> = $r4;

        r0.<com.android.server.usage.UsageStatsDatabase: int mCurrentVersion> = i0;

        $r9 = new java.io.File;

        specialinvoke $r9.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "version");

        r0.<com.android.server.usage.UsageStatsDatabase: java.io.File mVersionFile> = $r9;

        $r10 = new java.io.File;

        specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "backups");

        r0.<com.android.server.usage.UsageStatsDatabase: java.io.File mBackupsDir> = $r10;

        $r11 = new java.io.File;

        specialinvoke $r11.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "breadcrumb");

        r0.<com.android.server.usage.UsageStatsDatabase: java.io.File mUpdateBreadcrumb> = $r11;

        $r12 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs>;

        $i1 = lengthof $r12;

        $r13 = newarray (android.app.usage.TimeSparseArray)[$i1];

        r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles> = $r13;

        $r14 = new java.io.File;

        specialinvoke $r14.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "mappings");

        r0.<com.android.server.usage.UsageStatsDatabase: java.io.File mPackageMappingsFile> = $r14;

        $r15 = new com.android.server.usage.UnixCalendar;

        specialinvoke $r15.<com.android.server.usage.UnixCalendar: void <init>(long)>(0L);

        r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.UnixCalendar mCal> = $r15;

        return;
    }

    private void checkVersionAndBuildLocked()
    {
        com.android.server.usage.UsageStatsDatabase r0;
        long l0;
        int i1, $i2, $i3, $i4, $i5, $i7, $i11, i14, $i15;
        java.io.File $r1, $r3, $r5, $r6, $r7, $r8, $r21, $r50, $r59;
        java.lang.String $r2, $r4, $r9, $r10, $r14, $r20, $r33, r40, r43;
        boolean $z0, $z1, $z3, $z4, $z5, $z6;
        java.lang.StringBuilder $r11, $r15, $r28;
        java.lang.Throwable $r22, $r24, $r25, $r26, $r34, $r35, $r36, $r37, $r38;
        java.lang.RuntimeException $r23, $r39;
        java.lang.Exception $r27;
        java.io.BufferedReader r41, r51;
        java.io.FileReader r42, r52;
        java.io.BufferedWriter r57;
        java.io.FileWriter r58;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        r40 = specialinvoke r0.<com.android.server.usage.UsageStatsDatabase: java.lang.String getBuildFingerprint()>();

        r0.<com.android.server.usage.UsageStatsDatabase: boolean mFirstUpdate> = 1;

        r0.<com.android.server.usage.UsageStatsDatabase: boolean mNewUpdate> = 1;

     label01:
        r41 = new java.io.BufferedReader;

        r42 = new java.io.FileReader;

        $r1 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File mVersionFile>;

        specialinvoke r42.<java.io.FileReader: void <init>(java.io.File)>($r1);

        specialinvoke r41.<java.io.BufferedReader: void <init>(java.io.Reader)>(r42);

     label02:
        $r2 = virtualinvoke r41.<java.io.BufferedReader: java.lang.String readLine()>();

        i14 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        r43 = virtualinvoke r41.<java.io.BufferedReader: java.lang.String readLine()>();

     label03:
        if r43 == null goto label05;

     label04:
        r0.<com.android.server.usage.UsageStatsDatabase: boolean mFirstUpdate> = 0;

     label05:
        $z0 = virtualinvoke r40.<java.lang.String: boolean equals(java.lang.Object)>(r43);

        if $z0 == 0 goto label06;

        r0.<com.android.server.usage.UsageStatsDatabase: boolean mNewUpdate> = 0;

     label06:
        virtualinvoke r41.<java.io.BufferedReader: void close()>();

     label07:
        goto label15;

     label08:
        $r36 := @caughtexception;

     label09:
        virtualinvoke r41.<java.io.BufferedReader: void close()>();

     label10:
        goto label13;

     label11:
        $r25 := @caughtexception;

     label12:
        virtualinvoke $r36.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r25);

     label13:
        throw $r36;

     label14:
        $r34 := @caughtexception;

        i14 = 0;

     label15:
        $i2 = r0.<com.android.server.usage.UsageStatsDatabase: int mCurrentVersion>;

        if i14 == $i2 goto label20;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Upgrading from version ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i14);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $i7 = r0.<com.android.server.usage.UsageStatsDatabase: int mCurrentVersion>;

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r20 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("UsageStatsDatabase", $r20);

        $r21 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File mUpdateBreadcrumb>;

        $z4 = virtualinvoke $r21.<java.io.File: boolean exists()>();

        if $z4 != 0 goto label19;

     label16:
        specialinvoke r0.<com.android.server.usage.UsageStatsDatabase: void doUpgradeLocked(int)>(i14);

     label17:
        goto label20;

     label18:
        $r27 := @caughtexception;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to upgrade from version ");

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i14);

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $i11 = r0.<com.android.server.usage.UsageStatsDatabase: int mCurrentVersion>;

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("UsageStatsDatabase", $r33, $r27);

        r0.<com.android.server.usage.UsageStatsDatabase: int mCurrentVersion> = i14;

        return;

     label19:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("UsageStatsDatabase", "Version upgrade breadcrumb found on disk! Continuing version upgrade");

     label20:
        $r50 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File mUpdateBreadcrumb>;

        $z5 = virtualinvoke $r50.<java.io.File: boolean exists()>();

        if $z5 == 0 goto label33;

     label21:
        r51 = new java.io.BufferedReader;

        r52 = new java.io.FileReader;

        $r8 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File mUpdateBreadcrumb>;

        specialinvoke r52.<java.io.FileReader: void <init>(java.io.File)>($r8);

        specialinvoke r51.<java.io.BufferedReader: void <init>(java.io.Reader)>(r52);

     label22:
        $r9 = virtualinvoke r51.<java.io.BufferedReader: java.lang.String readLine()>();

        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r9);

        $r10 = virtualinvoke r51.<java.io.BufferedReader: java.lang.String readLine()>();

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r10);

     label23:
        virtualinvoke r51.<java.io.BufferedReader: void close()>();

     label24:
        $i4 = r0.<com.android.server.usage.UsageStatsDatabase: int mCurrentVersion>;

        if $i4 < 4 goto label25;

        specialinvoke r0.<com.android.server.usage.UsageStatsDatabase: void continueUpgradeLocked(int,long)>(i1, l0);

        goto label33;

     label25:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempting to upgrade to an unsupported version: ");

        $i5 = r0.<com.android.server.usage.UsageStatsDatabase: int mCurrentVersion>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("UsageStatsDatabase", $r14);

        goto label33;

     label26:
        $r37 := @caughtexception;

     label27:
        virtualinvoke r51.<java.io.BufferedReader: void close()>();

     label28:
        goto label31;

     label29:
        $r24 := @caughtexception;

     label30:
        virtualinvoke $r37.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r24);

     label31:
        throw $r37;

     label32:
        $r38 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UsageStatsDatabase", "Failed read version upgrade breadcrumb");

        $r39 = new java.lang.RuntimeException;

        specialinvoke $r39.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r38);

        throw $r39;

     label33:
        $i15 = r0.<com.android.server.usage.UsageStatsDatabase: int mCurrentVersion>;

        if i14 != $i15 goto label34;

        $z3 = r0.<com.android.server.usage.UsageStatsDatabase: boolean mNewUpdate>;

        if $z3 == 0 goto label37;

     label34:
        r57 = new java.io.BufferedWriter;

        r58 = new java.io.FileWriter;

        $r3 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File mVersionFile>;

        specialinvoke r58.<java.io.FileWriter: void <init>(java.io.File)>($r3);

        specialinvoke r57.<java.io.BufferedWriter: void <init>(java.io.Writer)>(r58);

     label35:
        $i3 = r0.<com.android.server.usage.UsageStatsDatabase: int mCurrentVersion>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        virtualinvoke r57.<java.io.BufferedWriter: void write(java.lang.String)>($r4);

        virtualinvoke r57.<java.io.BufferedWriter: void write(java.lang.String)>("\n");

        virtualinvoke r57.<java.io.BufferedWriter: void write(java.lang.String)>(r40);

        virtualinvoke r57.<java.io.BufferedWriter: void write(java.lang.String)>("\n");

        virtualinvoke r57.<java.io.BufferedWriter: void flush()>();

     label36:
        virtualinvoke r57.<java.io.BufferedWriter: void close()>();

     label37:
        $r59 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File mUpdateBreadcrumb>;

        $z6 = virtualinvoke $r59.<java.io.File: boolean exists()>();

        if $z6 == 0 goto label38;

        $r7 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File mUpdateBreadcrumb>;

        virtualinvoke $r7.<java.io.File: boolean delete()>();

        r0.<com.android.server.usage.UsageStatsDatabase: boolean mUpgradePerformed> = 1;

     label38:
        $r5 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File mBackupsDir>;

        $z1 = virtualinvoke $r5.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label39;

        r0.<com.android.server.usage.UsageStatsDatabase: boolean mUpgradePerformed> = 1;

        $r6 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File mBackupsDir>;

        staticinvoke <com.android.server.usage.UsageStatsDatabase: void deleteDirectory(java.io.File)>($r6);

     label39:
        return;

     label40:
        $r26 := @caughtexception;

     label41:
        virtualinvoke r57.<java.io.BufferedWriter: void close()>();

     label42:
        goto label45;

     label43:
        $r35 := @caughtexception;

     label44:
        virtualinvoke $r26.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r35);

     label45:
        throw $r26;

     label46:
        $r22 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UsageStatsDatabase", "Failed to write new version");

        $r23 = new java.lang.RuntimeException;

        specialinvoke $r23.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r22);

        throw $r23;

        catch java.lang.NumberFormatException from label01 to label02 with label14;
        catch java.io.IOException from label01 to label02 with label14;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.NumberFormatException from label06 to label07 with label14;
        catch java.io.IOException from label06 to label07 with label14;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.NumberFormatException from label12 to label13 with label14;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.lang.NumberFormatException from label13 to label14 with label14;
        catch java.io.IOException from label13 to label14 with label14;
        catch java.lang.Exception from label16 to label17 with label18;
        catch java.lang.NumberFormatException from label21 to label22 with label32;
        catch java.io.IOException from label21 to label22 with label32;
        catch java.lang.Throwable from label22 to label23 with label26;
        catch java.lang.NumberFormatException from label23 to label24 with label32;
        catch java.io.IOException from label23 to label24 with label32;
        catch java.lang.Throwable from label27 to label28 with label29;
        catch java.lang.NumberFormatException from label30 to label31 with label32;
        catch java.io.IOException from label30 to label31 with label32;
        catch java.lang.NumberFormatException from label31 to label32 with label32;
        catch java.io.IOException from label31 to label32 with label32;
        catch java.io.IOException from label34 to label35 with label46;
        catch java.lang.Throwable from label35 to label36 with label40;
        catch java.io.IOException from label36 to label37 with label46;
        catch java.lang.Throwable from label41 to label42 with label43;
        catch java.io.IOException from label44 to label45 with label46;
        catch java.io.IOException from label45 to label46 with label46;
    }

    private void continueUpgradeLocked(int, long)
    {
        com.android.server.usage.UsageStatsDatabase r0;
        int i0, $i2, $i3, $i4, $i6, $i7, i11, $i12, i13;
        long l1, $l5;
        java.io.File r2, $r3, $r4, $r6, $r8, $r10, $r13, $r25;
        java.lang.String $r5, $r9, $r14, $r20, $r26, $r28;
        java.io.File[] $r7, $r12, $r30, r31;
        com.android.server.usage.PackagesTokenData $r11, $r15, $r16;
        java.lang.StringBuilder $r17, $r23;
        java.lang.Throwable $r21;
        java.lang.Exception $r22;
        com.android.server.usage.IntervalStats r32;
        android.util.AtomicFile r33, r34;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        if i0 > 3 goto label01;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reading UsageStats as XML; current database version: ");

        $i7 = r0.<com.android.server.usage.UsageStatsDatabase: int mCurrentVersion>;

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UsageStatsDatabase", $r20);

     label01:
        $r3 = new java.io.File;

        $r4 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File mBackupsDir>;

        $r5 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l1);

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, $r5);

        if i0 < 5 goto label02;

        virtualinvoke r0.<com.android.server.usage.UsageStatsDatabase: void readMappingsLocked()>();

     label02:
        i11 = 0;

     label03:
        $r30 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs>;

        $i12 = lengthof $r30;

        if i11 >= $i12 goto label11;

        $r6 = new java.io.File;

        $r7 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs>;

        $r8 = $r7[i11];

        $r9 = virtualinvoke $r8.<java.io.File: java.lang.String getName()>();

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r9);

        r31 = virtualinvoke $r6.<java.io.File: java.io.File[] listFiles()>();

        if r31 == null goto label10;

        i13 = 0;

     label04:
        $i3 = lengthof r31;

        if i13 >= $i3 goto label10;

     label05:
        r32 = new com.android.server.usage.IntervalStats;

        specialinvoke r32.<com.android.server.usage.IntervalStats: void <init>()>();

        r33 = new android.util.AtomicFile;

        $r10 = r31[i13];

        specialinvoke r33.<android.util.AtomicFile: void <init>(java.io.File)>($r10);

        $r11 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.PackagesTokenData mPackagesTokenData>;

        staticinvoke <com.android.server.usage.UsageStatsDatabase: boolean readLocked(android.util.AtomicFile,com.android.server.usage.IntervalStats,int,com.android.server.usage.PackagesTokenData)>(r33, r32, i0, $r11);

        $i4 = r0.<com.android.server.usage.UsageStatsDatabase: int mCurrentVersion>;

        if $i4 < 5 goto label06;

        $r16 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.PackagesTokenData mPackagesTokenData>;

        virtualinvoke r32.<com.android.server.usage.IntervalStats: void obfuscateData(com.android.server.usage.PackagesTokenData)>($r16);

     label06:
        r34 = new android.util.AtomicFile;

        r2 = new java.io.File;

        $r12 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs>;

        $r13 = $r12[i11];

        $l5 = r32.<com.android.server.usage.IntervalStats: long beginTime>;

        $r14 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l5);

        specialinvoke r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r13, $r14);

        specialinvoke r34.<android.util.AtomicFile: void <init>(java.io.File)>(r2);

        $i6 = r0.<com.android.server.usage.UsageStatsDatabase: int mCurrentVersion>;

        $r15 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.PackagesTokenData mPackagesTokenData>;

        staticinvoke <com.android.server.usage.UsageStatsDatabase: void writeLocked(android.util.AtomicFile,com.android.server.usage.IntervalStats,int,com.android.server.usage.PackagesTokenData)>(r34, r32, $i6, $r15);

     label07:
        goto label09;

     label08:
        $r22 := @caughtexception;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to upgrade backup file : ");

        $r25 = r31[i13];

        $r26 = virtualinvoke $r25.<java.io.File: java.lang.String toString()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UsageStatsDatabase", $r28);

     label09:
        i13 = i13 + 1;

        goto label04;

     label10:
        i11 = i11 + 1;

        goto label03;

     label11:
        $i2 = r0.<com.android.server.usage.UsageStatsDatabase: int mCurrentVersion>;

        if $i2 < 5 goto label15;

     label12:
        virtualinvoke r0.<com.android.server.usage.UsageStatsDatabase: void writeMappingsLocked()>();

     label13:
        goto label15;

     label14:
        $r21 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UsageStatsDatabase", "Failed to write the tokens mappings file.");

     label15:
        return;

        catch java.lang.Exception from label05 to label06 with label08;
        catch java.lang.Exception from label06 to label07 with label08;
        catch java.io.IOException from label12 to label13 with label14;
    }

    private static void deleteDirectory(java.io.File)
    {
        java.io.File r0, r2;
        java.io.File[] r1;
        int i0, i1;
        boolean $z1;

        r0 := @parameter0: java.io.File;

        r1 = virtualinvoke r0.<java.io.File: java.io.File[] listFiles()>();

        if r1 == null goto label4;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        r2 = r1[i1];

        $z1 = virtualinvoke r2.<java.io.File: boolean isDirectory()>();

        if $z1 != 0 goto label2;

        virtualinvoke r2.<java.io.File: boolean delete()>();

        goto label3;

     label2:
        staticinvoke <com.android.server.usage.UsageStatsDatabase: void deleteDirectory(java.io.File)>(r2);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        virtualinvoke r0.<java.io.File: boolean delete()>();

        return;
    }

    private static void deleteDirectoryContents(java.io.File)
    {
        int i0, i1;
        java.io.File $r0, r1;
        java.io.File[] r2;

        r1 := @parameter0: java.io.File;

        r2 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles()>();

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r0 = r2[i1];

        staticinvoke <com.android.server.usage.UsageStatsDatabase: void deleteDirectory(java.io.File)>($r0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private com.android.server.usage.IntervalStats deserializeIntervalStats(byte[], int)
    {
        com.android.server.usage.UsageStatsDatabase r0;
        int i0;
        java.io.DataInputStream $r2;
        java.io.ByteArrayInputStream $r3;
        com.android.server.usage.IntervalStats $r4, r8;
        long $l1;
        com.android.server.usage.PackagesTokenData $r5;
        java.lang.Exception $r6;
        byte[] r7;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        r7 := @parameter0: byte[];

        i0 := @parameter1: int;

        $r2 = new java.io.DataInputStream;

        $r3 = new java.io.ByteArrayInputStream;

        specialinvoke $r3.<java.io.ByteArrayInputStream: void <init>(byte[])>(r7);

        specialinvoke $r2.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r3);

        $r4 = new com.android.server.usage.IntervalStats;

        specialinvoke $r4.<com.android.server.usage.IntervalStats: void <init>()>();

        r8 = $r4;

     label1:
        $l1 = virtualinvoke $r2.<java.io.DataInputStream: long readLong()>();

        $r4.<com.android.server.usage.IntervalStats: long beginTime> = $l1;

        $r5 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.PackagesTokenData mPackagesTokenData>;

        staticinvoke <com.android.server.usage.UsageStatsDatabase: boolean readLocked(java.io.InputStream,com.android.server.usage.IntervalStats,int,com.android.server.usage.PackagesTokenData)>($r2, $r4, i0, $r5);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("UsageStatsDatabase", "DeSerializing IntervalStats Failed", $r6);

        r8 = null;

     label4:
        return r8;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void doUpgradeLocked(int)
    {
        com.android.server.usage.UsageStatsDatabase r0;
        long l0;
        java.io.File $r3, $r9, $r10, $r16, $r21, $r28, $r30, $r32, $r37, $r38, $r41, $r48, r73, r74, r75, r76;
        java.lang.String $r4, $r6, $r8, $r11, $r17, $r18, $r22, $r24, $r26, $r31, $r42, $r43, $r49, $r50;
        boolean $z0, $z1;
        java.nio.file.Path $r12, $r33, $r34, r56;
        java.lang.Object[] $r13, $r35;
        java.nio.file.StandardCopyOption $r14, $r36;
        java.io.File[] $r15, $r20, $r27, r53, r54, r59;
        int $i1, $i2, $i3, i4, i5, i6, i7, i8, i9;
        java.lang.Throwable $r39, $r45, $r46, $r52;
        java.io.BufferedWriter r64, r65, r82;
        java.lang.StringBuilder r77, r79, r84, r86;
        java.lang.RuntimeException r78, r83, r85;
        java.lang.IllegalStateException r80, r87;
        java.io.FileWriter r81;
        java.nio.file.CopyOption[] r88, r89;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        i4 := @parameter0: int;

        if i4 >= 2 goto label05;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("UsageStatsDatabase", "Deleting all usage stats files");

        i5 = 0;

     label01:
        r53 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs>;

        $i3 = lengthof r53;

        if i5 >= $i3 goto label04;

        $r37 = r53[i5];

        r54 = virtualinvoke $r37.<java.io.File: java.io.File[] listFiles()>();

        if r54 == null goto label03;

        i6 = lengthof r54;

        i7 = 0;

     label02:
        if i7 >= i6 goto label03;

        $r38 = r54[i7];

        virtualinvoke $r38.<java.io.File: boolean delete()>();

        i7 = i7 + 1;

        goto label02;

     label03:
        i5 = i5 + 1;

        goto label01;

     label04:
        goto label35;

     label05:
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r73 = new java.io.File;

        $r3 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File mBackupsDir>;

        $r4 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        specialinvoke r73.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r4);

        virtualinvoke r73.<java.io.File: boolean mkdirs()>();

        $z0 = virtualinvoke r73.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label47;

     label06:
        $r9 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File mVersionFile>;

        r56 = virtualinvoke $r9.<java.io.File: java.nio.file.Path toPath()>();

        r74 = new java.io.File;

        $r10 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File mVersionFile>;

        $r11 = virtualinvoke $r10.<java.io.File: java.lang.String getName()>();

        specialinvoke r74.<java.io.File: void <init>(java.io.File,java.lang.String)>(r73, $r11);

        $r12 = virtualinvoke r74.<java.io.File: java.nio.file.Path toPath()>();

        $r13 = newarray (java.nio.file.CopyOption)[1];

        $r14 = <java.nio.file.StandardCopyOption: java.nio.file.StandardCopyOption REPLACE_EXISTING>;

        $r13[0] = $r14;

        r88 = (java.nio.file.CopyOption[]) $r13;

        staticinvoke <java.nio.file.Files: java.nio.file.Path copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>(r56, $r12, r88);

     label07:
        i8 = 0;

     label08:
        $r15 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs>;

        $i1 = lengthof $r15;

        if i8 >= $i1 goto label16;

        r75 = new java.io.File;

        $r20 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs>;

        $r21 = $r20[i8];

        $r22 = virtualinvoke $r21.<java.io.File: java.lang.String getName()>();

        specialinvoke r75.<java.io.File: void <init>(java.io.File,java.lang.String)>(r73, $r22);

        virtualinvoke r75.<java.io.File: boolean mkdir()>();

        $z1 = virtualinvoke r75.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label15;

        $r27 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs>;

        $r28 = $r27[i8];

        r59 = virtualinvoke $r28.<java.io.File: java.io.File[] listFiles()>();

        if r59 == null goto label14;

        i9 = 0;

     label09:
        $i2 = lengthof r59;

        if i9 >= $i2 goto label13;

        r76 = new java.io.File;

        $r30 = r59[i9];

        $r31 = virtualinvoke $r30.<java.io.File: java.lang.String getName()>();

        specialinvoke r76.<java.io.File: void <init>(java.io.File,java.lang.String)>(r75, $r31);

     label10:
        $r32 = r59[i9];

        $r33 = virtualinvoke $r32.<java.io.File: java.nio.file.Path toPath()>();

        $r34 = virtualinvoke r76.<java.io.File: java.nio.file.Path toPath()>();

        $r35 = newarray (java.nio.file.CopyOption)[1];

        $r36 = <java.nio.file.StandardCopyOption: java.nio.file.StandardCopyOption REPLACE_EXISTING>;

        $r35[0] = $r36;

        r89 = (java.nio.file.CopyOption[]) $r35;

        staticinvoke <java.nio.file.Files: java.nio.file.Path move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>($r33, $r34, r89);

     label11:
        i9 = i9 + 1;

        goto label09;

     label12:
        $r39 := @caughtexception;

        r77 = new java.lang.StringBuilder;

        specialinvoke r77.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to back up file : ");

        $r41 = r59[i9];

        $r42 = virtualinvoke $r41.<java.io.File: java.lang.String toString()>();

        virtualinvoke r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r43 = virtualinvoke r77.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UsageStatsDatabase", $r43);

        r78 = new java.lang.RuntimeException;

        specialinvoke r78.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r39);

        throw r78;

     label13:
        goto label14;

     label14:
        i8 = i8 + 1;

        goto label08;

     label15:
        r79 = new java.lang.StringBuilder;

        specialinvoke r79.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create interval backup directory ");

        $r24 = virtualinvoke r75.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        r80 = new java.lang.IllegalStateException;

        $r26 = virtualinvoke r79.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r80.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r26);

        throw r80;

     label16:
        r64 = null;

        r65 = null;

     label17:
        r82 = new java.io.BufferedWriter;

     label18:
        r64 = null;

        r65 = null;

     label19:
        r81 = new java.io.FileWriter;

     label20:
        r64 = null;

        r65 = null;

     label21:
        $r16 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File mUpdateBreadcrumb>;

        specialinvoke r81.<java.io.FileWriter: void <init>(java.io.File)>($r16);

     label22:
        r64 = null;

        r65 = null;

     label23:
        specialinvoke r82.<java.io.BufferedWriter: void <init>(java.io.Writer)>(r81);

     label24:
        r64 = r82;

        r65 = r82;

     label25:
        $r17 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        virtualinvoke r82.<java.io.BufferedWriter: void write(java.lang.String)>($r17);

     label26:
        r64 = r82;

        r65 = r82;

     label27:
        virtualinvoke r82.<java.io.BufferedWriter: void write(java.lang.String)>("\n");

     label28:
        r64 = r82;

        r65 = r82;

     label29:
        $r18 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i4);

        virtualinvoke r82.<java.io.BufferedWriter: void write(java.lang.String)>($r18);

     label30:
        r64 = r82;

        r65 = r82;

     label31:
        virtualinvoke r82.<java.io.BufferedWriter: void write(java.lang.String)>("\n");

     label32:
        r64 = r82;

        r65 = r82;

     label33:
        virtualinvoke r82.<java.io.BufferedWriter: void flush()>();

     label34:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r82);

     label35:
        return;

     label36:
        $r52 := @caughtexception;

        goto label45;

     label37:
        $r45 := @caughtexception;

        r64 = r65;

     label38:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UsageStatsDatabase", "Failed to write new version upgrade breadcrumb");

     label39:
        r64 = r65;

     label40:
        r83 = new java.lang.RuntimeException;

     label41:
        r64 = r65;

     label42:
        specialinvoke r83.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r45);

     label43:
        r64 = r65;

     label44:
        throw r83;

     label45:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r64);

        throw $r52;

     label46:
        $r46 := @caughtexception;

        r84 = new java.lang.StringBuilder;

        specialinvoke r84.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to back up version file : ");

        $r48 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File mVersionFile>;

        $r49 = virtualinvoke $r48.<java.io.File: java.lang.String toString()>();

        virtualinvoke r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r50 = virtualinvoke r84.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UsageStatsDatabase", $r50);

        r85 = new java.lang.RuntimeException;

        specialinvoke r85.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r46);

        throw r85;

     label47:
        r86 = new java.lang.StringBuilder;

        specialinvoke r86.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create backup directory ");

        $r6 = virtualinvoke r73.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        r87 = new java.lang.IllegalStateException;

        $r8 = virtualinvoke r86.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r87.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw r87;

        catch java.io.IOException from label06 to label07 with label46;
        catch java.io.IOException from label10 to label11 with label12;
        catch java.io.IOException from label17 to label18 with label37;
        catch java.lang.Throwable from label17 to label18 with label36;
        catch java.io.IOException from label19 to label20 with label37;
        catch java.lang.Throwable from label19 to label20 with label36;
        catch java.io.IOException from label21 to label22 with label37;
        catch java.lang.Throwable from label21 to label22 with label36;
        catch java.io.IOException from label23 to label24 with label37;
        catch java.lang.Throwable from label23 to label24 with label36;
        catch java.io.IOException from label25 to label26 with label37;
        catch java.lang.Throwable from label25 to label26 with label36;
        catch java.io.IOException from label27 to label28 with label37;
        catch java.lang.Throwable from label27 to label28 with label36;
        catch java.io.IOException from label29 to label30 with label37;
        catch java.lang.Throwable from label29 to label30 with label36;
        catch java.io.IOException from label31 to label32 with label37;
        catch java.lang.Throwable from label31 to label32 with label36;
        catch java.io.IOException from label33 to label34 with label37;
        catch java.lang.Throwable from label33 to label34 with label36;
        catch java.lang.Throwable from label38 to label39 with label36;
        catch java.lang.Throwable from label40 to label41 with label36;
        catch java.lang.Throwable from label42 to label43 with label36;
        catch java.lang.Throwable from label44 to label45 with label36;
    }

    private java.lang.String getBuildFingerprint()
    {
        com.android.server.usage.UsageStatsDatabase r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r6, $r9, $r11;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = <android.os.Build$VERSION: java.lang.String RELEASE>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r6 = <android.os.Build$VERSION: java.lang.String CODENAME>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r9 = <android.os.Build$VERSION: java.lang.String INCREMENTAL>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    private static byte[] getIntervalStatsBytes(java.io.DataInputStream) throws java.io.IOException
    {
        java.io.DataInputStream r0;
        int i0;
        byte[] r1;

        r0 := @parameter0: java.io.DataInputStream;

        i0 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>();

        r1 = newarray (byte)[i0];

        virtualinvoke r0.<java.io.DataInputStream: int read(byte[],int,int)>(r1, 0, i0);

        return r1;
    }

    private void indexFilesLocked()
    {
        com.android.server.usage.UsageStatsDatabase r0;
        java.io.File[] r2, $r7;
        com.android.server.usage.UsageStatsDatabase$1 $r4;
        int $i0, $i1, $i2, i6, i7, i8, i9, i10;
        android.app.usage.TimeSparseArray $r5, $r6, $r10, $r19, $r23, $r26, $r27;
        java.io.File $r8, r34;
        android.app.usage.TimeSparseArray[] $r9, $r18, $r22, $r25, r33;
        int[] $r11;
        java.lang.StringBuilder $r12, $r29;
        java.lang.String $r17, $r32;
        java.lang.Object $r20;
        android.util.AtomicFile $r21, $r24;
        long $l4;
        java.lang.Throwable $r28;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        $r4 = new com.android.server.usage.UsageStatsDatabase$1;

        specialinvoke $r4.<com.android.server.usage.UsageStatsDatabase$1: void <init>(com.android.server.usage.UsageStatsDatabase)>(r0);

        i6 = 0;

     label01:
        r33 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $i0 = lengthof r33;

        if i6 >= $i0 goto label13;

        $r5 = r33[i6];

        if $r5 != null goto label02;

        $r27 = new android.app.usage.TimeSparseArray;

        specialinvoke $r27.<android.app.usage.TimeSparseArray: void <init>()>();

        r33[i6] = $r27;

        goto label03;

     label02:
        $r6 = r33[i6];

        virtualinvoke $r6.<android.app.usage.TimeSparseArray: void clear()>();

     label03:
        $r7 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs>;

        $r8 = $r7[i6];

        r2 = virtualinvoke $r8.<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>($r4);

        if r2 == null goto label12;

        i7 = lengthof r2;

        i8 = 0;

     label04:
        if i8 >= i7 goto label09;

        r34 = r2[i8];

        $r24 = new android.util.AtomicFile;

        specialinvoke $r24.<android.util.AtomicFile: void <init>(java.io.File)>(r34);

     label05:
        $r25 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $r26 = $r25[i6];

        $l4 = staticinvoke <com.android.server.usage.UsageStatsDatabase: long parseBeginTime(android.util.AtomicFile)>($r24);

        virtualinvoke $r26.<android.app.usage.TimeSparseArray: void put(long,java.lang.Object)>($l4, $r24);

     label06:
        goto label08;

     label07:
        $r28 := @caughtexception;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to index file: ");

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r34);

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("UsageStatsDatabase", $r32, $r28);

     label08:
        i8 = i8 + 1;

        goto label04;

     label09:
        $r9 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $r10 = $r9[i6];

        $i1 = virtualinvoke $r10.<android.app.usage.TimeSparseArray: int size()>();

        $r11 = <com.android.server.usage.UsageStatsDatabase: int[] MAX_FILES_PER_INTERVAL_TYPE>;

        $i2 = $r11[i6];

        i9 = $i1 - $i2;

        if i9 <= 0 goto label12;

        i10 = 0;

     label10:
        if i10 >= i9 goto label11;

        $r18 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $r19 = $r18[i6];

        $r20 = virtualinvoke $r19.<android.app.usage.TimeSparseArray: java.lang.Object valueAt(int)>(0);

        $r21 = (android.util.AtomicFile) $r20;

        virtualinvoke $r21.<android.util.AtomicFile: void delete()>();

        $r22 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $r23 = $r22[i6];

        virtualinvoke $r23.<android.app.usage.TimeSparseArray: void removeAt(int)>(0);

        i10 = i10 + 1;

        goto label10;

     label11:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleted ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" stat files for interval ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r17 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("UsageStatsDatabase", $r17);

     label12:
        i6 = i6 + 1;

        goto label01;

     label13:
        return;

        catch java.io.IOException from label05 to label06 with label07;
    }

    private com.android.server.usage.IntervalStats mergeStats(com.android.server.usage.IntervalStats, com.android.server.usage.IntervalStats)
    {
        com.android.server.usage.UsageStatsDatabase r0;
        com.android.server.usage.IntervalStats r1, r2;
        android.content.res.Configuration $r3;
        android.util.ArrayMap $r4, $r5;
        android.app.usage.EventList $r6, $r7, $r8;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        r1 := @parameter0: com.android.server.usage.IntervalStats;

        r2 := @parameter1: com.android.server.usage.IntervalStats;

        if r2 != null goto label1;

        return r1;

     label1:
        if r1 != null goto label2;

        return null;

     label2:
        $r3 = r2.<com.android.server.usage.IntervalStats: android.content.res.Configuration activeConfiguration>;

        r1.<com.android.server.usage.IntervalStats: android.content.res.Configuration activeConfiguration> = $r3;

        $r5 = r1.<com.android.server.usage.IntervalStats: android.util.ArrayMap configurations>;

        $r4 = r2.<com.android.server.usage.IntervalStats: android.util.ArrayMap configurations>;

        virtualinvoke $r5.<android.util.ArrayMap: void putAll(android.util.ArrayMap)>($r4);

        $r6 = r1.<com.android.server.usage.IntervalStats: android.app.usage.EventList events>;

        virtualinvoke $r6.<android.app.usage.EventList: void clear()>();

        $r8 = r1.<com.android.server.usage.IntervalStats: android.app.usage.EventList events>;

        $r7 = r2.<com.android.server.usage.IntervalStats: android.app.usage.EventList events>;

        virtualinvoke $r8.<android.app.usage.EventList: void merge(android.app.usage.EventList)>($r7);

        return r1;
    }

    private static long parseBeginTime(android.util.AtomicFile) throws java.io.IOException
    {
        android.util.AtomicFile r0;
        java.io.File $r1;
        long $l0;

        r0 := @parameter0: android.util.AtomicFile;

        $r1 = virtualinvoke r0.<android.util.AtomicFile: java.io.File getBaseFile()>();

        $l0 = staticinvoke <com.android.server.usage.UsageStatsDatabase: long parseBeginTime(java.io.File)>($r1);

        return $l0;
    }

    private static long parseBeginTime(java.io.File) throws java.io.IOException
    {
        java.lang.String r0, r4;
        char c0;
        long l1;
        int $i2, i3;
        java.lang.Throwable $r1;
        java.io.IOException $r2;
        java.io.File r3;

        r3 := @parameter0: java.io.File;

        r0 = virtualinvoke r3.<java.io.File: java.lang.String getName()>();

        i3 = 0;

     label1:
        r4 = r0;

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if i3 >= $i2 goto label4;

        c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        if c0 < 48 goto label3;

        if c0 <= 57 goto label2;

        goto label3;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i3);

     label4:
        l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r4);

     label5:
        return l1;

     label6:
        $r1 := @caughtexception;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.Throwable)>($r1);

        throw $r2;

        catch java.lang.NumberFormatException from label4 to label5 with label6;
    }

    private void pruneChooserCountsOlderThan(java.io.File, long)
    {
        com.android.server.usage.UsageStatsDatabase r0;
        long l0, l6;
        int i1, i2, i5, i7;
        android.app.usage.UsageStats r1;
        byte $b3;
        android.util.ArrayMap $r2, $r3, $r5, $r6;
        java.lang.Object $r4;
        java.lang.Throwable $r7;
        java.lang.Exception $r8;
        java.io.File r9, r11;
        java.io.File[] r10;
        android.util.AtomicFile r13;
        com.android.server.usage.IntervalStats r14;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        r9 := @parameter0: java.io.File;

        l0 := @parameter1: long;

        r10 = virtualinvoke r9.<java.io.File: java.io.File[] listFiles()>();

        if r10 == null goto label15;

        i1 = lengthof r10;

        i5 = 0;

     label01:
        if i5 >= i1 goto label15;

        r11 = r10[i5];

     label02:
        l6 = staticinvoke <com.android.server.usage.UsageStatsDatabase: long parseBeginTime(java.io.File)>(r11);

     label03:
        goto label05;

     label04:
        $r7 := @caughtexception;

        l6 = 0L;

     label05:
        $b3 = l6 cmp l0;

        if $b3 >= 0 goto label14;

     label06:
        r13 = new android.util.AtomicFile;

        specialinvoke r13.<android.util.AtomicFile: void <init>(java.io.File)>(r11);

        r14 = new com.android.server.usage.IntervalStats;

        specialinvoke r14.<com.android.server.usage.IntervalStats: void <init>()>();

        specialinvoke r0.<com.android.server.usage.UsageStatsDatabase: void readLocked(android.util.AtomicFile,com.android.server.usage.IntervalStats)>(r13, r14);

        $r2 = r14.<com.android.server.usage.IntervalStats: android.util.ArrayMap packageStats>;

        i2 = virtualinvoke $r2.<android.util.ArrayMap: int size()>();

     label07:
        i7 = 0;

     label08:
        if i7 >= i2 goto label11;

     label09:
        $r3 = r14.<com.android.server.usage.IntervalStats: android.util.ArrayMap packageStats>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i7);

        r1 = (android.app.usage.UsageStats) $r4;

        $r5 = r1.<android.app.usage.UsageStats: android.util.ArrayMap mChooserCounts>;

        if $r5 == null goto label10;

        $r6 = r1.<android.app.usage.UsageStats: android.util.ArrayMap mChooserCounts>;

        virtualinvoke $r6.<android.util.ArrayMap: void clear()>();

     label10:
        i7 = i7 + 1;

        goto label08;

     label11:
        specialinvoke r0.<com.android.server.usage.UsageStatsDatabase: void writeLocked(android.util.AtomicFile,com.android.server.usage.IntervalStats)>(r13, r14);

     label12:
        goto label14;

     label13:
        $r8 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("UsageStatsDatabase", "Failed to delete chooser counts from usage stats file", $r8);

     label14:
        i5 = i5 + 1;

        goto label01;

     label15:
        return;

        catch java.io.IOException from label02 to label03 with label04;
        catch java.lang.Exception from label06 to label07 with label13;
        catch java.lang.Exception from label09 to label10 with label13;
        catch java.lang.Exception from label11 to label12 with label13;
    }

    private static void pruneFilesOlderThan(java.io.File, long)
    {
        long l0, l4;
        int i1, i3;
        java.io.File r0, r4;
        byte $b2;
        android.util.AtomicFile $r2;
        java.lang.Throwable $r3;
        java.io.File[] r5;

        r4 := @parameter0: java.io.File;

        l0 := @parameter1: long;

        r5 = virtualinvoke r4.<java.io.File: java.io.File[] listFiles()>();

        if r5 == null goto label7;

        i1 = lengthof r5;

        i3 = 0;

     label1:
        if i3 >= i1 goto label7;

        r0 = r5[i3];

     label2:
        l4 = staticinvoke <com.android.server.usage.UsageStatsDatabase: long parseBeginTime(java.io.File)>(r0);

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

        l4 = 0L;

     label5:
        $b2 = l4 cmp l0;

        if $b2 >= 0 goto label6;

        $r2 = new android.util.AtomicFile;

        specialinvoke $r2.<android.util.AtomicFile: void <init>(java.io.File)>(r0);

        virtualinvoke $r2.<android.util.AtomicFile: void delete()>();

     label6:
        i3 = i3 + 1;

        goto label1;

     label7:
        return;

        catch java.io.IOException from label2 to label3 with label4;
    }

    private boolean pruneStats(java.util.HashMap, com.android.server.usage.IntervalStats)
    {
        com.android.server.usage.UsageStatsDatabase r0;
        java.util.HashMap r1;
        com.android.server.usage.IntervalStats r2;
        android.util.ArrayMap $r3, $r11, $r15;
        int $i0, $i1, i8, i9;
        android.app.usage.EventList $r4, $r5, $r8;
        java.lang.String $r6, $r13;
        java.lang.Object $r7, $r12, $r14;
        long $l2, $l3, $l5, $l6;
        byte $b4, $b7;
        android.util.SparseArray $r10;
        boolean z0;
        android.app.usage.UsageStats r17;
        java.lang.Long r18, r20;
        android.app.usage.UsageEvents$Event r19;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        r1 := @parameter0: java.util.HashMap;

        r2 := @parameter1: com.android.server.usage.IntervalStats;

        z0 = 0;

        $r3 = r2.<com.android.server.usage.IntervalStats: android.util.ArrayMap packageStats>;

        $i0 = virtualinvoke $r3.<android.util.ArrayMap: int size()>();

        i8 = $i0 - 1;

     label1:
        if i8 < 0 goto label4;

        $r11 = r2.<com.android.server.usage.IntervalStats: android.util.ArrayMap packageStats>;

        $r12 = virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i8);

        r17 = (android.app.usage.UsageStats) $r12;

        $r13 = r17.<android.app.usage.UsageStats: java.lang.String mPackageName>;

        $r14 = virtualinvoke r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r13);

        r18 = (java.lang.Long) $r14;

        if r18 == null goto label2;

        $l5 = virtualinvoke r18.<java.lang.Long: long longValue()>();

        $l6 = r17.<android.app.usage.UsageStats: long mEndTimeStamp>;

        $b7 = $l5 cmp $l6;

        if $b7 <= 0 goto label3;

     label2:
        $r15 = r2.<com.android.server.usage.IntervalStats: android.util.ArrayMap packageStats>;

        virtualinvoke $r15.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i8);

        z0 = 1;

     label3:
        i8 = i8 + -1;

        goto label1;

     label4:
        if z0 == 0 goto label5;

        $r10 = r2.<com.android.server.usage.IntervalStats: android.util.SparseArray packageStatsObfuscated>;

        virtualinvoke $r10.<android.util.SparseArray: void clear()>();

     label5:
        $r4 = r2.<com.android.server.usage.IntervalStats: android.app.usage.EventList events>;

        $i1 = virtualinvoke $r4.<android.app.usage.EventList: int size()>();

        i9 = $i1 - 1;

     label6:
        if i9 < 0 goto label9;

        $r5 = r2.<com.android.server.usage.IntervalStats: android.app.usage.EventList events>;

        r19 = virtualinvoke $r5.<android.app.usage.EventList: android.app.usage.UsageEvents$Event get(int)>(i9);

        $r6 = r19.<android.app.usage.UsageEvents$Event: java.lang.String mPackage>;

        $r7 = virtualinvoke r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        r20 = (java.lang.Long) $r7;

        if r20 == null goto label7;

        $l2 = virtualinvoke r20.<java.lang.Long: long longValue()>();

        $l3 = r19.<android.app.usage.UsageEvents$Event: long mTimeStamp>;

        $b4 = $l2 cmp $l3;

        if $b4 <= 0 goto label8;

     label7:
        $r8 = r2.<com.android.server.usage.IntervalStats: android.app.usage.EventList events>;

        virtualinvoke $r8.<android.app.usage.EventList: android.app.usage.UsageEvents$Event remove(int)>(i9);

        z0 = 1;

     label8:
        i9 = i9 + -1;

        goto label6;

     label9:
        return z0;
    }

    private void readLocked(android.util.AtomicFile, com.android.server.usage.IntervalStats) throws java.io.IOException, java.lang.RuntimeException
    {
        com.android.server.usage.UsageStatsDatabase r0;
        android.util.AtomicFile r1;
        com.android.server.usage.IntervalStats r2;
        int $i0, $i1, $i2;
        com.android.server.usage.PackagesTokenData $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r8;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        r1 := @parameter0: android.util.AtomicFile;

        r2 := @parameter1: com.android.server.usage.IntervalStats;

        $i0 = r0.<com.android.server.usage.UsageStatsDatabase: int mCurrentVersion>;

        if $i0 > 3 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reading UsageStats as XML; current database version: ");

        $i2 = r0.<com.android.server.usage.UsageStatsDatabase: int mCurrentVersion>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("UsageStatsDatabase", $r8);

     label1:
        $i1 = r0.<com.android.server.usage.UsageStatsDatabase: int mCurrentVersion>;

        $r4 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.PackagesTokenData mPackagesTokenData>;

        staticinvoke <com.android.server.usage.UsageStatsDatabase: boolean readLocked(android.util.AtomicFile,com.android.server.usage.IntervalStats,int,com.android.server.usage.PackagesTokenData)>(r1, r2, $i1, $r4);

        return;
    }

    private static boolean readLocked(android.util.AtomicFile, com.android.server.usage.IntervalStats, int, com.android.server.usage.PackagesTokenData) throws java.io.IOException, java.lang.RuntimeException
    {
        int i0;
        com.android.server.usage.PackagesTokenData r0;
        java.io.FileInputStream r1;
        boolean z0;
        long $l1, $l2;
        java.lang.Throwable $r2, $r3, $r4, $r5;
        android.util.AtomicFile r6;
        com.android.server.usage.IntervalStats r7;

        r6 := @parameter0: android.util.AtomicFile;

        r7 := @parameter1: com.android.server.usage.IntervalStats;

        i0 := @parameter2: int;

        r0 := @parameter3: com.android.server.usage.PackagesTokenData;

     label01:
        r1 = virtualinvoke r6.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

     label02:
        $l1 = staticinvoke <com.android.server.usage.UsageStatsDatabase: long parseBeginTime(android.util.AtomicFile)>(r6);

        r7.<com.android.server.usage.IntervalStats: long beginTime> = $l1;

        z0 = staticinvoke <com.android.server.usage.UsageStatsDatabase: boolean readLocked(java.io.InputStream,com.android.server.usage.IntervalStats,int,com.android.server.usage.PackagesTokenData)>(r1, r7, i0, r0);

        $l2 = virtualinvoke r6.<android.util.AtomicFile: long getLastModifiedTime()>();

        r7.<com.android.server.usage.IntervalStats: long lastTimeSaved> = $l2;

     label03:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label04:
        goto label06;

     label05:
        $r3 := @caughtexception;

     label06:
        return z0;

     label07:
        $r4 := @caughtexception;

     label08:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label09:
        goto label11;

     label10:
        $r2 := @caughtexception;

     label11:
        throw $r4;

     label12:
        $r5 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("UsageStatsDatabase", "UsageStatsDatabase", $r5);

        throw $r5;

        catch java.io.FileNotFoundException from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.io.IOException from label03 to label04 with label05;
        catch java.io.FileNotFoundException from label03 to label04 with label12;
        catch java.io.IOException from label08 to label09 with label10;
        catch java.io.FileNotFoundException from label08 to label09 with label12;
        catch java.io.FileNotFoundException from label11 to label12 with label12;
    }

    private static boolean readLocked(java.io.InputStream, com.android.server.usage.IntervalStats, int, com.android.server.usage.PackagesTokenData) throws java.lang.RuntimeException
    {
        com.android.server.usage.IntervalStats r0;
        int i0;
        java.lang.StringBuilder $r3, $r18;
        java.lang.String $r5, $r9, $r20;
        java.lang.RuntimeException $r8;
        java.lang.Exception $r10, $r11, $r12;
        java.io.InputStream r13;
        com.android.server.usage.PackagesTokenData r14;
        boolean z0;

        r13 := @parameter0: java.io.InputStream;

        r0 := @parameter1: com.android.server.usage.IntervalStats;

        i0 := @parameter2: int;

        r14 := @parameter3: com.android.server.usage.PackagesTokenData;

        z0 = 0;

        if i0 == 1 goto label09;

        if i0 == 2 goto label09;

        if i0 == 3 goto label09;

        if i0 == 4 goto label06;

        if i0 != 5 goto label05;

     label01:
        staticinvoke <com.android.server.usage.UsageStatsProtoV2: void read(java.io.InputStream,com.android.server.usage.IntervalStats)>(r13, r0);

     label02:
        goto label04;

     label03:
        $r12 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("UsageStatsDatabase", "Unable to read interval stats from proto.", $r12);

     label04:
        z0 = virtualinvoke r0.<com.android.server.usage.IntervalStats: boolean deobfuscateData(com.android.server.usage.PackagesTokenData)>(r14);

        goto label13;

     label05:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unhandled UsageStatsDatabase version: ");

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on read.");

        $r8 = new java.lang.RuntimeException;

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label06:
        staticinvoke <com.android.server.usage.UsageStatsProto: void read(java.io.InputStream,com.android.server.usage.IntervalStats)>(r13, r0);

     label07:
        goto label13;

     label08:
        $r11 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("UsageStatsDatabase", "Unable to read interval stats from proto.", $r11);

        goto label13;

     label09:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reading UsageStats as XML; database version: ");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UsageStatsDatabase", $r20);

     label10:
        staticinvoke <com.android.server.usage.UsageStatsXml: void read(java.io.InputStream,com.android.server.usage.IntervalStats)>(r13, r0);

     label11:
        goto label13;

     label12:
        $r10 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("UsageStatsDatabase", "Unable to read interval stats from XML", $r10);

     label13:
        return z0;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.lang.Exception from label06 to label07 with label08;
        catch java.lang.Exception from label10 to label11 with label12;
    }

    private static void sanitizeIntervalStatsForBackup(com.android.server.usage.IntervalStats)
    {
        com.android.server.usage.IntervalStats r0;
        android.util.ArrayMap $r1;
        android.app.usage.EventList $r2;

        r0 := @parameter0: com.android.server.usage.IntervalStats;

        if r0 != null goto label1;

        return;

     label1:
        r0.<com.android.server.usage.IntervalStats: android.content.res.Configuration activeConfiguration> = null;

        $r1 = r0.<com.android.server.usage.IntervalStats: android.util.ArrayMap configurations>;

        virtualinvoke $r1.<android.util.ArrayMap: void clear()>();

        $r2 = r0.<com.android.server.usage.IntervalStats: android.app.usage.EventList events>;

        virtualinvoke $r2.<android.app.usage.EventList: void clear()>();

        return;
    }

    private byte[] serializeIntervalStats(com.android.server.usage.IntervalStats, int)
    {
        com.android.server.usage.UsageStatsDatabase r0;
        int i0;
        java.io.ByteArrayOutputStream $r3;
        java.io.DataOutputStream $r4;
        long $l1;
        com.android.server.usage.PackagesTokenData $r5;
        byte[] $r6;
        java.lang.Exception $r7;
        com.android.server.usage.IntervalStats r8;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        r8 := @parameter0: com.android.server.usage.IntervalStats;

        i0 := @parameter1: int;

        $r3 = new java.io.ByteArrayOutputStream;

        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>();

        $r4 = new java.io.DataOutputStream;

        specialinvoke $r4.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r3);

     label1:
        $l1 = r8.<com.android.server.usage.IntervalStats: long beginTime>;

        virtualinvoke $r4.<java.io.DataOutputStream: void writeLong(long)>($l1);

        $r5 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.PackagesTokenData mPackagesTokenData>;

        staticinvoke <com.android.server.usage.UsageStatsDatabase: void writeLocked(java.io.OutputStream,com.android.server.usage.IntervalStats,int,com.android.server.usage.PackagesTokenData)>($r4, r8, i0, $r5);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("UsageStatsDatabase", "Serializing IntervalStats Failed", $r7);

        virtualinvoke $r3.<java.io.ByteArrayOutputStream: void reset()>();

     label4:
        $r6 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r6;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void writeIntervalStatsToStream(java.io.DataOutputStream, android.util.AtomicFile, int) throws java.io.IOException
    {
        com.android.server.usage.UsageStatsDatabase r0;
        java.io.DataOutputStream r1;
        int i0, $i1;
        com.android.server.usage.IntervalStats $r3;
        java.lang.Throwable $r4;
        android.util.AtomicFile r5;
        byte[] r6;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        r1 := @parameter0: java.io.DataOutputStream;

        r5 := @parameter1: android.util.AtomicFile;

        i0 := @parameter2: int;

        $r3 = new com.android.server.usage.IntervalStats;

        specialinvoke $r3.<com.android.server.usage.IntervalStats: void <init>()>();

     label1:
        specialinvoke r0.<com.android.server.usage.UsageStatsDatabase: void readLocked(android.util.AtomicFile,com.android.server.usage.IntervalStats)>(r5, $r3);

     label2:
        staticinvoke <com.android.server.usage.UsageStatsDatabase: void sanitizeIntervalStatsForBackup(com.android.server.usage.IntervalStats)>($r3);

        r6 = specialinvoke r0.<com.android.server.usage.UsageStatsDatabase: byte[] serializeIntervalStats(com.android.server.usage.IntervalStats,int)>($r3, i0);

        $i1 = lengthof r6;

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>($i1);

        virtualinvoke r1.<java.io.DataOutputStream: void write(byte[])>(r6);

        return;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("UsageStatsDatabase", "Failed to read usage stats file", $r4);

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>(0);

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private void writeLocked(android.util.AtomicFile, com.android.server.usage.IntervalStats) throws java.io.IOException, java.lang.RuntimeException
    {
        com.android.server.usage.UsageStatsDatabase r0;
        com.android.server.usage.IntervalStats r1;
        int i0, $i1;
        com.android.server.usage.PackagesTokenData $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;
        android.util.AtomicFile r7;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        r7 := @parameter0: android.util.AtomicFile;

        r1 := @parameter1: com.android.server.usage.IntervalStats;

        i0 = r0.<com.android.server.usage.UsageStatsDatabase: int mCurrentVersion>;

        if i0 > 3 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempting to write UsageStats as XML with version ");

        $i1 = r0.<com.android.server.usage.UsageStatsDatabase: int mCurrentVersion>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("UsageStatsDatabase", $r6);

        return;

     label1:
        $r2 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.PackagesTokenData mPackagesTokenData>;

        staticinvoke <com.android.server.usage.UsageStatsDatabase: void writeLocked(android.util.AtomicFile,com.android.server.usage.IntervalStats,int,com.android.server.usage.PackagesTokenData)>(r7, r1, i0, $r2);

        return;
    }

    private static void writeLocked(android.util.AtomicFile, com.android.server.usage.IntervalStats, int, com.android.server.usage.PackagesTokenData) throws java.io.IOException, java.lang.RuntimeException
    {
        android.util.AtomicFile r0;
        int i0;
        com.android.server.usage.PackagesTokenData r1;
        java.io.FileOutputStream r2;
        java.lang.Throwable $r3;
        com.android.server.usage.IntervalStats r4;

        r0 := @parameter0: android.util.AtomicFile;

        r4 := @parameter1: com.android.server.usage.IntervalStats;

        i0 := @parameter2: int;

        r1 := @parameter3: com.android.server.usage.PackagesTokenData;

        r2 = virtualinvoke r0.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

     label1:
        staticinvoke <com.android.server.usage.UsageStatsDatabase: void writeLocked(java.io.OutputStream,com.android.server.usage.IntervalStats,int,com.android.server.usage.PackagesTokenData)>(r2, r4, i0, r1);

        virtualinvoke r0.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r2);

     label2:
        virtualinvoke r0.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(null);

        return;

     label3:
        $r3 := @caughtexception;

        virtualinvoke r0.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r2);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private static void writeLocked(java.io.OutputStream, com.android.server.usage.IntervalStats, int, com.android.server.usage.PackagesTokenData) throws java.lang.RuntimeException
    {
        com.android.server.usage.IntervalStats r0;
        int i0;
        com.android.server.usage.PackagesTokenData r1;
        java.lang.StringBuilder $r4, $r17;
        java.lang.String $r6, $r10, $r19;
        java.lang.RuntimeException $r9;
        java.lang.Exception $r11, $r12;
        java.io.OutputStream r13;

        r13 := @parameter0: java.io.OutputStream;

        r0 := @parameter1: com.android.server.usage.IntervalStats;

        i0 := @parameter2: int;

        r1 := @parameter3: com.android.server.usage.PackagesTokenData;

        if i0 == 1 goto label8;

        if i0 == 2 goto label8;

        if i0 == 3 goto label8;

        if i0 == 4 goto label5;

        if i0 != 5 goto label4;

        virtualinvoke r0.<com.android.server.usage.IntervalStats: void obfuscateData(com.android.server.usage.PackagesTokenData)>(r1);

     label1:
        staticinvoke <com.android.server.usage.UsageStatsProtoV2: void write(java.io.OutputStream,com.android.server.usage.IntervalStats)>(r13, r0);

     label2:
        goto label9;

     label3:
        $r12 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("UsageStatsDatabase", "Unable to write interval stats to proto.", $r12);

        goto label9;

     label4:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unhandled UsageStatsDatabase version: ");

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on write.");

        $r9 = new java.lang.RuntimeException;

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label5:
        staticinvoke <com.android.server.usage.UsageStatsProto: void write(java.io.OutputStream,com.android.server.usage.IntervalStats)>(r13, r0);

     label6:
        goto label9;

     label7:
        $r11 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("UsageStatsDatabase", "Unable to write interval stats to proto.", $r11);

        goto label9;

     label8:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempting to write UsageStats as XML with version ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("UsageStatsDatabase", $r19);

     label9:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public void applyRestoredPayload(java.lang.String, byte[])
    {
        com.android.server.usage.UsageStatsDatabase r0;
        byte[] r1, $r10, $r13, $r16, $r19;
        java.lang.Object r2;
        com.android.server.usage.IntervalStats r3, r4, r5, $r11, $r12, $r14, $r15, $r17, $r18, $r20, $r21, r31;
        java.io.DataInputStream r6;
        java.io.ByteArrayInputStream r7;
        int i0, $i1, i3, i4, i5, i6, i7, i8, i9, i10, i11;
        java.lang.String $r8, r30;
        boolean $z0;
        java.io.File[] $r9, $r22;
        java.io.File $r23;
        java.lang.Throwable $r24, $r25, $r26, $r27, $r28, $r29, r32, r33, r34;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        r30 := @parameter0: java.lang.String;

        r1 := @parameter1: byte[];

        r2 = r0.<com.android.server.usage.UsageStatsDatabase: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        $r8 = "usage_stats";

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r30);

        if $z0 == 0 goto label45;

     label02:
        r3 = virtualinvoke r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.IntervalStats getLatestUsageStats(int)>(0);

     label03:
        r31 = virtualinvoke r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.IntervalStats getLatestUsageStats(int)>(1);

     label04:
        r4 = virtualinvoke r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.IntervalStats getLatestUsageStats(int)>(2);

     label05:
        r5 = virtualinvoke r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.IntervalStats getLatestUsageStats(int)>(3);

     label06:
        r6 = new java.io.DataInputStream;

        r7 = new java.io.ByteArrayInputStream;

     label07:
        specialinvoke r7.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1);

        specialinvoke r6.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r7);

        i0 = virtualinvoke r6.<java.io.DataInputStream: int readInt()>();

     label08:
        if i0 < 1 goto label34;

        if i0 <= 4 goto label09;

        goto label34;

     label09:
        i3 = 0;

     label10:
        $r9 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs>;

        $i1 = lengthof $r9;

        if i3 >= $i1 goto label12;

        $r22 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs>;

        $r23 = $r22[i3];

        staticinvoke <com.android.server.usage.UsageStatsDatabase: void deleteDirectoryContents(java.io.File)>($r23);

     label11:
        i3 = i3 + 1;

        goto label10;

     label12:
        i4 = virtualinvoke r6.<java.io.DataInputStream: int readInt()>();

     label13:
        i5 = 0;

     label14:
        if i5 >= i4 goto label17;

     label15:
        $r19 = staticinvoke <com.android.server.usage.UsageStatsDatabase: byte[] getIntervalStatsBytes(java.io.DataInputStream)>(r6);

        $r20 = specialinvoke r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.IntervalStats deserializeIntervalStats(byte[],int)>($r19, i0);

        $r21 = specialinvoke r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.IntervalStats mergeStats(com.android.server.usage.IntervalStats,com.android.server.usage.IntervalStats)>($r20, r3);

        virtualinvoke r0.<com.android.server.usage.UsageStatsDatabase: void putUsageStats(int,com.android.server.usage.IntervalStats)>(0, $r21);

     label16:
        i5 = i5 + 1;

        goto label14;

     label17:
        i6 = virtualinvoke r6.<java.io.DataInputStream: int readInt()>();

     label18:
        i7 = 0;

     label19:
        if i7 >= i6 goto label22;

     label20:
        $r16 = staticinvoke <com.android.server.usage.UsageStatsDatabase: byte[] getIntervalStatsBytes(java.io.DataInputStream)>(r6);

        $r17 = specialinvoke r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.IntervalStats deserializeIntervalStats(byte[],int)>($r16, i0);

        $r18 = specialinvoke r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.IntervalStats mergeStats(com.android.server.usage.IntervalStats,com.android.server.usage.IntervalStats)>($r17, r31);

        virtualinvoke r0.<com.android.server.usage.UsageStatsDatabase: void putUsageStats(int,com.android.server.usage.IntervalStats)>(1, $r18);

     label21:
        i7 = i7 + 1;

        goto label19;

     label22:
        i8 = virtualinvoke r6.<java.io.DataInputStream: int readInt()>();

     label23:
        i9 = 0;

     label24:
        if i9 >= i8 goto label27;

     label25:
        $r13 = staticinvoke <com.android.server.usage.UsageStatsDatabase: byte[] getIntervalStatsBytes(java.io.DataInputStream)>(r6);

        $r14 = specialinvoke r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.IntervalStats deserializeIntervalStats(byte[],int)>($r13, i0);

        $r15 = specialinvoke r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.IntervalStats mergeStats(com.android.server.usage.IntervalStats,com.android.server.usage.IntervalStats)>($r14, r4);

        virtualinvoke r0.<com.android.server.usage.UsageStatsDatabase: void putUsageStats(int,com.android.server.usage.IntervalStats)>(2, $r15);

     label26:
        i9 = i9 + 1;

        goto label24;

     label27:
        i10 = virtualinvoke r6.<java.io.DataInputStream: int readInt()>();

     label28:
        i11 = 0;

     label29:
        if i11 >= i10 goto label32;

     label30:
        $r10 = staticinvoke <com.android.server.usage.UsageStatsDatabase: byte[] getIntervalStatsBytes(java.io.DataInputStream)>(r6);

        $r11 = specialinvoke r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.IntervalStats deserializeIntervalStats(byte[],int)>($r10, i0);

        $r12 = specialinvoke r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.IntervalStats mergeStats(com.android.server.usage.IntervalStats,com.android.server.usage.IntervalStats)>($r11, r5);

        virtualinvoke r0.<com.android.server.usage.UsageStatsDatabase: void putUsageStats(int,com.android.server.usage.IntervalStats)>(3, $r12);

     label31:
        i11 = i11 + 1;

        goto label29;

     label32:
        specialinvoke r0.<com.android.server.usage.UsageStatsDatabase: void indexFilesLocked()>();

     label33:
        goto label41;

     label34:
        specialinvoke r0.<com.android.server.usage.UsageStatsDatabase: void indexFilesLocked()>();

        exitmonitor r2;

     label35:
        return;

     label36:
        $r24 := @caughtexception;

        r32 = $r24;

        goto label39;

     label37:
        $r26 := @caughtexception;

        r33 = $r26;

        goto label43;

     label38:
        $r27 := @caughtexception;

        r32 = $r27;

     label39:
        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("UsageStatsDatabase", "Failed to read data from input stream", r32);

     label40:
        specialinvoke r0.<com.android.server.usage.UsageStatsDatabase: void indexFilesLocked()>();

     label41:
        goto label45;

     label42:
        $r28 := @caughtexception;

        r33 = $r28;

     label43:
        specialinvoke r0.<com.android.server.usage.UsageStatsDatabase: void indexFilesLocked()>();

     label44:
        throw r33;

     label45:
        exitmonitor r2;

     label46:
        return;

     label47:
        $r25 := @caughtexception;

        r34 = $r25;

        goto label48;

     label48:
        exitmonitor r2;

     label49:
        throw r34;

     label50:
        $r29 := @caughtexception;

        r34 = $r29;

        goto label48;

        catch java.lang.Throwable from label01 to label02 with label47;
        catch java.lang.Throwable from label02 to label03 with label47;
        catch java.lang.Throwable from label03 to label04 with label47;
        catch java.lang.Throwable from label04 to label05 with label47;
        catch java.lang.Throwable from label05 to label06 with label47;
        catch java.io.IOException from label06 to label07 with label38;
        catch java.lang.Throwable from label06 to label07 with label37;
        catch java.io.IOException from label07 to label08 with label36;
        catch java.lang.Throwable from label07 to label08 with label42;
        catch java.io.IOException from label10 to label11 with label36;
        catch java.lang.Throwable from label10 to label11 with label42;
        catch java.io.IOException from label12 to label13 with label36;
        catch java.lang.Throwable from label12 to label13 with label42;
        catch java.io.IOException from label15 to label16 with label36;
        catch java.lang.Throwable from label15 to label16 with label42;
        catch java.io.IOException from label17 to label18 with label36;
        catch java.lang.Throwable from label17 to label18 with label42;
        catch java.io.IOException from label20 to label21 with label36;
        catch java.lang.Throwable from label20 to label21 with label42;
        catch java.io.IOException from label22 to label23 with label36;
        catch java.lang.Throwable from label22 to label23 with label42;
        catch java.io.IOException from label25 to label26 with label36;
        catch java.lang.Throwable from label25 to label26 with label42;
        catch java.io.IOException from label27 to label28 with label36;
        catch java.lang.Throwable from label27 to label28 with label42;
        catch java.io.IOException from label30 to label31 with label36;
        catch java.lang.Throwable from label30 to label31 with label42;
        catch java.lang.Throwable from label32 to label33 with label50;
        catch java.lang.Throwable from label34 to label35 with label50;
        catch java.lang.Throwable from label39 to label40 with label42;
        catch java.lang.Throwable from label40 to label41 with label50;
        catch java.lang.Throwable from label43 to label44 with label50;
        catch java.lang.Throwable from label44 to label45 with label50;
        catch java.lang.Throwable from label45 to label46 with label50;
        catch java.lang.Throwable from label48 to label49 with label50;
    }

    public boolean checkinDailyFiles(com.android.server.usage.UsageStatsDatabase$CheckinAction)
    {
        com.android.server.usage.UsageStatsDatabase r0;
        java.lang.Object r1, $r5, $r18, $r20;
        android.app.usage.TimeSparseArray r2;
        int i0, $i1, $i2, $i3, $i4, i7, i8, i9, i10;
        boolean z0, $z1, $z2;
        java.lang.StringBuilder r3, r31;
        android.app.usage.TimeSparseArray[] $r4;
        java.io.File $r6, $r11, $r13, $r22, r30;
        java.lang.String $r7, $r10, $r14, $r17, $r23;
        android.util.AtomicFile $r19, $r21, r29, r32;
        java.lang.Exception $r24;
        java.lang.Throwable $r25;
        com.android.server.usage.UsageStatsDatabase$CheckinAction r26;
        com.android.server.usage.IntervalStats r27;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        r26 := @parameter0: com.android.server.usage.UsageStatsDatabase$CheckinAction;

        r1 = r0.<com.android.server.usage.UsageStatsDatabase: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r4 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        r2 = $r4[0];

        i0 = virtualinvoke r2.<android.app.usage.TimeSparseArray: int size()>();

     label02:
        i7 = -1;

        i8 = 0;

     label03:
        $i1 = i0 - 1;

        if i8 >= $i1 goto label07;

     label04:
        $r20 = virtualinvoke r2.<android.app.usage.TimeSparseArray: java.lang.Object valueAt(int)>(i8);

        $r21 = (android.util.AtomicFile) $r20;

        $r22 = virtualinvoke $r21.<android.util.AtomicFile: java.io.File getBaseFile()>();

        $r23 = virtualinvoke $r22.<java.io.File: java.lang.String getPath()>();

        $z2 = virtualinvoke $r23.<java.lang.String: boolean endsWith(java.lang.String)>("-c");

        if $z2 == 0 goto label06;

     label05:
        i7 = i8;

     label06:
        i8 = i8 + 1;

        goto label03;

     label07:
        i9 = i7 + 1;

        $i2 = i0 - 1;

        if i9 != $i2 goto label10;

     label08:
        exitmonitor r1;

     label09:
        return 1;

     label10:
        i10 = i9;

     label11:
        $i3 = i0 - 1;

        if i10 >= $i3 goto label20;

     label12:
        r27 = new com.android.server.usage.IntervalStats;

        specialinvoke r27.<com.android.server.usage.IntervalStats: void <init>()>();

        $r18 = virtualinvoke r2.<android.app.usage.TimeSparseArray: java.lang.Object valueAt(int)>(i10);

        $r19 = (android.util.AtomicFile) $r18;

        specialinvoke r0.<com.android.server.usage.UsageStatsDatabase: void readLocked(android.util.AtomicFile,com.android.server.usage.IntervalStats)>($r19, r27);

        z0 = interfaceinvoke r26.<com.android.server.usage.UsageStatsDatabase$CheckinAction: boolean checkin(com.android.server.usage.IntervalStats)>(r27);

     label13:
        if z0 != 0 goto label16;

     label14:
        exitmonitor r1;

     label15:
        return 0;

     label16:
        i10 = i10 + 1;

        goto label11;

     label17:
        $r24 := @caughtexception;

     label18:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("UsageStatsDatabase", "Failed to check-in", $r24);

        exitmonitor r1;

     label19:
        return 0;

     label20:
        $i4 = i0 - 1;

        if i9 >= $i4 goto label25;

     label21:
        $r5 = virtualinvoke r2.<android.app.usage.TimeSparseArray: java.lang.Object valueAt(int)>(i9);

        r29 = (android.util.AtomicFile) $r5;

        r30 = new java.io.File;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r29.<android.util.AtomicFile: java.io.File getBaseFile()>();

        $r7 = virtualinvoke $r6.<java.io.File: java.lang.String getPath()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-c");

        $r10 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r30.<java.io.File: void <init>(java.lang.String)>($r10);

        $r11 = virtualinvoke r29.<android.util.AtomicFile: java.io.File getBaseFile()>();

        $z1 = virtualinvoke $r11.<java.io.File: boolean renameTo(java.io.File)>(r30);

        if $z1 != 0 goto label23;

        r31 = new java.lang.StringBuilder;

        specialinvoke r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to mark file ");

        $r13 = virtualinvoke r29.<android.util.AtomicFile: java.io.File getBaseFile()>();

        $r14 = virtualinvoke $r13.<java.io.File: java.lang.String getPath()>();

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as checked-in");

        $r17 = virtualinvoke r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UsageStatsDatabase", $r17);

        exitmonitor r1;

     label22:
        return 1;

     label23:
        r32 = new android.util.AtomicFile;

        specialinvoke r32.<android.util.AtomicFile: void <init>(java.io.File)>(r30);

        virtualinvoke r2.<android.app.usage.TimeSparseArray: void setValueAt(int,java.lang.Object)>(i9, r32);

     label24:
        i9 = i9 + 1;

        goto label20;

     label25:
        exitmonitor r1;

     label26:
        return 1;

     label27:
        $r25 := @caughtexception;

     label28:
        exitmonitor r1;

     label29:
        throw $r25;

        catch java.lang.Throwable from label01 to label02 with label27;
        catch java.lang.Throwable from label04 to label05 with label27;
        catch java.lang.Throwable from label08 to label09 with label27;
        catch java.lang.Exception from label12 to label13 with label17;
        catch java.lang.Throwable from label12 to label13 with label27;
        catch java.lang.Throwable from label14 to label15 with label27;
        catch java.lang.Throwable from label18 to label19 with label27;
        catch java.lang.Throwable from label21 to label22 with label27;
        catch java.lang.Throwable from label23 to label24 with label27;
        catch java.lang.Throwable from label25 to label26 with label27;
        catch java.lang.Throwable from label28 to label29 with label27;
    }

    public void dump(com.android.internal.util.IndentingPrintWriter, boolean)
    {
        com.android.server.usage.UsageStatsDatabase r0;
        boolean z0;
        java.lang.Object r1;
        android.app.usage.TimeSparseArray r2;
        int i0, $i2, i3, i4;
        long l1;
        android.app.usage.TimeSparseArray[] $r6, $r8;
        java.lang.String $r9, $r12, $r13, $r15;
        java.lang.Throwable $r16;
        com.android.internal.util.IndentingPrintWriter r17;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        r17 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        z0 := @parameter1: boolean;

        r1 = r0.<com.android.server.usage.UsageStatsDatabase: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        virtualinvoke r17.<com.android.internal.util.IndentingPrintWriter: void println()>();

        virtualinvoke r17.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("UsageStatsDatabase:");

        virtualinvoke r17.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        virtualinvoke r0.<com.android.server.usage.UsageStatsDatabase: void dumpMappings(com.android.internal.util.IndentingPrintWriter)>(r17);

        virtualinvoke r17.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke r17.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Database Summary:");

        virtualinvoke r17.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

     label02:
        i3 = 0;

     label03:
        $r6 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $i2 = lengthof $r6;

        if i3 >= $i2 goto label15;

        $r8 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        r2 = $r8[i3];

        i0 = virtualinvoke r2.<android.app.usage.TimeSparseArray: int size()>();

        $r9 = staticinvoke <com.android.server.usage.UserUsageStatsService: java.lang.String intervalToString(int)>(i3);

        virtualinvoke r17.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>($r9);

        virtualinvoke r17.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>(" stats files: ");

        virtualinvoke r17.<com.android.internal.util.IndentingPrintWriter: void print(int)>(i0);

        virtualinvoke r17.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>(", sorted list of files:");

        virtualinvoke r17.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

     label04:
        i4 = 0;

     label05:
        if i4 >= i0 goto label13;

     label06:
        l1 = virtualinvoke r2.<android.app.usage.TimeSparseArray: long keyAt(int)>(i4);

     label07:
        if z0 == 0 goto label10;

     label08:
        $r15 = staticinvoke <com.android.server.usage.UserUsageStatsService: java.lang.String formatDateTime(long,boolean)>(l1, 0);

        virtualinvoke r17.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>($r15);

     label09:
        goto label11;

     label10:
        $r12 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l1);

        $r13 = staticinvoke <com.android.server.usage.UserUsageStatsService: java.lang.String formatDateTime(long,boolean)>(l1, 1);

        virtualinvoke r17.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>($r12, $r13);

     label11:
        virtualinvoke r17.<com.android.internal.util.IndentingPrintWriter: void println()>();

     label12:
        i4 = i4 + 1;

        goto label05;

     label13:
        virtualinvoke r17.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

     label14:
        i3 = i3 + 1;

        goto label03;

     label15:
        virtualinvoke r17.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        exitmonitor r1;

     label16:
        return;

     label17:
        $r16 := @caughtexception;

     label18:
        exitmonitor r1;

     label19:
        throw $r16;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    void dumpMappings(com.android.internal.util.IndentingPrintWriter)
    {
        com.android.server.usage.UsageStatsDatabase r0;
        java.lang.Object r1, $r20;
        int i0, $i1, $i2, $i3, i4;
        java.lang.String r2, $r7, $r12, $r27;
        com.android.server.usage.PackagesTokenData $r5, $r9, $r13, $r16, $r18;
        android.util.SparseArray $r10, $r14, $r17, $r19;
        java.lang.Iterable $r21;
        java.lang.Throwable $r28;
        com.android.internal.util.IndentingPrintWriter r29;
        java.lang.StringBuilder r30, r31, r32;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        r29 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        r1 = r0.<com.android.server.usage.UsageStatsDatabase: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        virtualinvoke r29.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Obfuscated Packages Mappings:");

        virtualinvoke r29.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Counter: ");

        $r5 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.PackagesTokenData mPackagesTokenData>;

        $i1 = $r5.<com.android.server.usage.PackagesTokenData: int counter>;

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r29.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r7);

        r31 = new java.lang.StringBuilder;

        specialinvoke r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tokens Map Size: ");

        $r9 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.PackagesTokenData mPackagesTokenData>;

        $r10 = $r9.<com.android.server.usage.PackagesTokenData: android.util.SparseArray tokensToPackagesMap>;

        $i2 = virtualinvoke $r10.<android.util.SparseArray: int size()>();

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r12 = virtualinvoke r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r29.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r12);

     label2:
        i4 = 0;

     label3:
        $r13 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.PackagesTokenData mPackagesTokenData>;

        $r14 = $r13.<com.android.server.usage.PackagesTokenData: android.util.SparseArray tokensToPackagesMap>;

        $i3 = virtualinvoke $r14.<android.util.SparseArray: int size()>();

        if i4 >= $i3 goto label5;

        $r16 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.PackagesTokenData mPackagesTokenData>;

        $r17 = $r16.<com.android.server.usage.PackagesTokenData: android.util.SparseArray tokensToPackagesMap>;

        i0 = virtualinvoke $r17.<android.util.SparseArray: int keyAt(int)>(i4);

        $r18 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.PackagesTokenData mPackagesTokenData>;

        $r19 = $r18.<com.android.server.usage.PackagesTokenData: android.util.SparseArray tokensToPackagesMap>;

        $r20 = virtualinvoke $r19.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        $r21 = (java.lang.Iterable) $r20;

        r2 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(", ", $r21);

        r32 = new java.lang.StringBuilder;

        specialinvoke r32.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Token ");

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": [");

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r27 = virtualinvoke r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r29.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r27);

     label4:
        i4 = i4 + 1;

        goto label3;

     label5:
        virtualinvoke r29.<com.android.internal.util.IndentingPrintWriter: void println()>();

        virtualinvoke r29.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        exitmonitor r1;

     label6:
        return;

     label7:
        $r28 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r28;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    void filterStats(com.android.server.usage.IntervalStats)
    {
        com.android.server.usage.UsageStatsDatabase r0;
        com.android.server.usage.IntervalStats r1;
        android.util.ArrayMap r2, $r4, $r13, $r17;
        int i0, $i1, i8, i9;
        com.android.server.usage.PackagesTokenData $r3, $r5;
        boolean $z0;
        android.app.usage.EventList $r6, $r7, $r10;
        java.lang.String $r8, r19;
        java.lang.Object $r9, $r12, $r14, $r15;
        long $l2, $l3, $l5, $l6;
        byte $b4, $b7;
        java.lang.Long $r16, r22;
        android.app.usage.UsageStats r20;
        android.app.usage.UsageEvents$Event r21;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        r1 := @parameter0: com.android.server.usage.IntervalStats;

        $r3 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.PackagesTokenData mPackagesTokenData>;

        $r4 = $r3.<com.android.server.usage.PackagesTokenData: android.util.ArrayMap removedPackagesMap>;

        $z0 = virtualinvoke $r4.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r5 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.PackagesTokenData mPackagesTokenData>;

        r2 = $r5.<com.android.server.usage.PackagesTokenData: android.util.ArrayMap removedPackagesMap>;

        i0 = virtualinvoke r2.<android.util.ArrayMap: int size()>();

        i8 = 0;

     label2:
        if i8 >= i0 goto label4;

        $r12 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i8);

        r19 = (java.lang.String) $r12;

        $r13 = r1.<com.android.server.usage.IntervalStats: android.util.ArrayMap packageStats>;

        $r14 = virtualinvoke $r13.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r19);

        r20 = (android.app.usage.UsageStats) $r14;

        if r20 == null goto label3;

        $l5 = r20.<android.app.usage.UsageStats: long mEndTimeStamp>;

        $r15 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i8);

        $r16 = (java.lang.Long) $r15;

        $l6 = virtualinvoke $r16.<java.lang.Long: long longValue()>();

        $b7 = $l5 cmp $l6;

        if $b7 >= 0 goto label3;

        $r17 = r1.<com.android.server.usage.IntervalStats: android.util.ArrayMap packageStats>;

        virtualinvoke $r17.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r19);

     label3:
        i8 = i8 + 1;

        goto label2;

     label4:
        $r6 = r1.<com.android.server.usage.IntervalStats: android.app.usage.EventList events>;

        $i1 = virtualinvoke $r6.<android.app.usage.EventList: int size()>();

        i9 = $i1 - 1;

     label5:
        if i9 < 0 goto label7;

        $r7 = r1.<com.android.server.usage.IntervalStats: android.app.usage.EventList events>;

        r21 = virtualinvoke $r7.<android.app.usage.EventList: android.app.usage.UsageEvents$Event get(int)>(i9);

        $r8 = r21.<android.app.usage.UsageEvents$Event: java.lang.String mPackage>;

        $r9 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r8);

        r22 = (java.lang.Long) $r9;

        if r22 == null goto label6;

        $l2 = virtualinvoke r22.<java.lang.Long: long longValue()>();

        $l3 = r21.<android.app.usage.UsageEvents$Event: long mTimeStamp>;

        $b4 = $l2 cmp $l3;

        if $b4 <= 0 goto label6;

        $r10 = r1.<com.android.server.usage.IntervalStats: android.app.usage.EventList events>;

        virtualinvoke $r10.<android.app.usage.EventList: android.app.usage.UsageEvents$Event remove(int)>(i9);

     label6:
        i9 = i9 + -1;

        goto label5;

     label7:
        return;
    }

    public int findBestFitBucket(long, long)
    {
        com.android.server.usage.UsageStatsDatabase r0;
        long l0, l3, $l5, $l6, l8, l10, l13;
        java.lang.Object r1;
        int i1, i2, $i4, i9, i11, i12;
        android.app.usage.TimeSparseArray[] $r3, $r4, $r6, $r8;
        android.app.usage.TimeSparseArray $r5, $r7, $r9;
        byte $b7;
        java.lang.Throwable $r10;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        l0 := @parameter0: long;

        l8 := @parameter1: long;

        r1 = r0.<com.android.server.usage.UsageStatsDatabase: java.lang.Object mLock>;

        entermonitor r1;

        i9 = -1;

        l10 = 9223372036854775807L;

     label01:
        $r3 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $i4 = lengthof $r3;

        i11 = $i4 - 1;

     label02:
        if i11 < 0 goto label08;

     label03:
        $r4 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $r5 = $r4[i11];

        i1 = virtualinvoke $r5.<android.app.usage.TimeSparseArray: int closestIndexOnOrBefore(long)>(l0);

        $r6 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $r7 = $r6[i11];

        i2 = virtualinvoke $r7.<android.app.usage.TimeSparseArray: int size()>();

     label04:
        i12 = i9;

        l13 = l10;

        if i1 < 0 goto label07;

        i12 = i9;

        l13 = l10;

        if i1 >= i2 goto label07;

     label05:
        $r8 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $r9 = $r8[i11];

        $l5 = virtualinvoke $r9.<android.app.usage.TimeSparseArray: long keyAt(int)>(i1);

        $l6 = $l5 - l0;

        l3 = staticinvoke <java.lang.Math: long abs(long)>($l6);

     label06:
        i12 = i9;

        l13 = l10;

        $b7 = l3 cmp l10;

        if $b7 >= 0 goto label07;

        l13 = l3;

        i12 = i11;

     label07:
        i11 = i11 + -1;

        i9 = i12;

        l10 = l13;

        goto label02;

     label08:
        exitmonitor r1;

     label09:
        return i9;

     label10:
        $r10 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    void forceIndexFiles()
    {
        com.android.server.usage.UsageStatsDatabase r0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        r1 = r0.<com.android.server.usage.UsageStatsDatabase: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.server.usage.UsageStatsDatabase: void indexFilesLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    byte[] getBackupPayload(java.lang.String)
    {
        com.android.server.usage.UsageStatsDatabase r0;
        java.lang.String r1;
        byte[] $r2;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.android.server.usage.UsageStatsDatabase: byte[] getBackupPayload(java.lang.String,int)>(r1, 4);

        return $r2;
    }

    public byte[] getBackupPayload(java.lang.String, int)
    {
        com.android.server.usage.UsageStatsDatabase r0;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i12, i13, i14, i15;
        java.lang.Object r1, $r22, $r26, $r30, $r34;
        java.io.ByteArrayOutputStream r2;
        java.lang.String $r3, $r39, r42;
        boolean $z0;
        long $l1;
        android.app.usage.TimeSparseArray[] $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r24, $r28, $r32;
        android.app.usage.TimeSparseArray $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r25, $r29, $r33;
        android.util.AtomicFile $r23, $r27, $r31, $r35;
        java.lang.StringBuilder $r36;
        java.lang.Throwable $r40, $r41;
        java.io.DataOutputStream r44;
        byte[] r46;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        r42 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if i0 < 1 goto label01;

        if i0 > 3 goto label01;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempting to backup UsageStats as XML with version ");

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r39 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("UsageStatsDatabase", $r39);

        return null;

     label01:
        r1 = r0.<com.android.server.usage.UsageStatsDatabase: java.lang.Object mLock>;

        entermonitor r1;

     label02:
        r2 = new java.io.ByteArrayOutputStream;

        specialinvoke r2.<java.io.ByteArrayOutputStream: void <init>()>();

        $r3 = "usage_stats";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r42);

        if $z0 == 0 goto label22;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke r0.<com.android.server.usage.UsageStatsDatabase: void prune(long)>($l1);

        r44 = new java.io.DataOutputStream;

        specialinvoke r44.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r2);

     label03:
        virtualinvoke r44.<java.io.DataOutputStream: void writeInt(int)>(i0);

        $r4 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $r5 = $r4[0];

        $i2 = virtualinvoke $r5.<android.app.usage.TimeSparseArray: int size()>();

        virtualinvoke r44.<java.io.DataOutputStream: void writeInt(int)>($i2);

     label04:
        i12 = 0;

     label05:
        $r6 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $r7 = $r6[0];

        $i3 = virtualinvoke $r7.<android.app.usage.TimeSparseArray: int size()>();

        if i12 >= $i3 goto label07;

        $r32 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $r33 = $r32[0];

        $r34 = virtualinvoke $r33.<android.app.usage.TimeSparseArray: java.lang.Object valueAt(int)>(i12);

        $r35 = (android.util.AtomicFile) $r34;

        specialinvoke r0.<com.android.server.usage.UsageStatsDatabase: void writeIntervalStatsToStream(java.io.DataOutputStream,android.util.AtomicFile,int)>(r44, $r35, i0);

     label06:
        i12 = i12 + 1;

        goto label05;

     label07:
        $r8 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $r9 = $r8[1];

        $i4 = virtualinvoke $r9.<android.app.usage.TimeSparseArray: int size()>();

        virtualinvoke r44.<java.io.DataOutputStream: void writeInt(int)>($i4);

     label08:
        i13 = 0;

     label09:
        $r10 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $r11 = $r10[1];

        $i5 = virtualinvoke $r11.<android.app.usage.TimeSparseArray: int size()>();

        if i13 >= $i5 goto label11;

        $r28 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $r29 = $r28[1];

        $r30 = virtualinvoke $r29.<android.app.usage.TimeSparseArray: java.lang.Object valueAt(int)>(i13);

        $r31 = (android.util.AtomicFile) $r30;

        specialinvoke r0.<com.android.server.usage.UsageStatsDatabase: void writeIntervalStatsToStream(java.io.DataOutputStream,android.util.AtomicFile,int)>(r44, $r31, i0);

     label10:
        i13 = i13 + 1;

        goto label09;

     label11:
        $r12 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $r13 = $r12[2];

        $i6 = virtualinvoke $r13.<android.app.usage.TimeSparseArray: int size()>();

        virtualinvoke r44.<java.io.DataOutputStream: void writeInt(int)>($i6);

     label12:
        i14 = 0;

     label13:
        $r14 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $r15 = $r14[2];

        $i7 = virtualinvoke $r15.<android.app.usage.TimeSparseArray: int size()>();

        if i14 >= $i7 goto label15;

        $r24 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $r25 = $r24[2];

        $r26 = virtualinvoke $r25.<android.app.usage.TimeSparseArray: java.lang.Object valueAt(int)>(i14);

        $r27 = (android.util.AtomicFile) $r26;

        specialinvoke r0.<com.android.server.usage.UsageStatsDatabase: void writeIntervalStatsToStream(java.io.DataOutputStream,android.util.AtomicFile,int)>(r44, $r27, i0);

     label14:
        i14 = i14 + 1;

        goto label13;

     label15:
        $r16 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $r17 = $r16[3];

        $i8 = virtualinvoke $r17.<android.app.usage.TimeSparseArray: int size()>();

        virtualinvoke r44.<java.io.DataOutputStream: void writeInt(int)>($i8);

     label16:
        i15 = 0;

     label17:
        $r18 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $r19 = $r18[3];

        $i9 = virtualinvoke $r19.<android.app.usage.TimeSparseArray: int size()>();

        if i15 >= $i9 goto label19;

        $r20 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $r21 = $r20[3];

        $r22 = virtualinvoke $r21.<android.app.usage.TimeSparseArray: java.lang.Object valueAt(int)>(i15);

        $r23 = (android.util.AtomicFile) $r22;

        specialinvoke r0.<com.android.server.usage.UsageStatsDatabase: void writeIntervalStatsToStream(java.io.DataOutputStream,android.util.AtomicFile,int)>(r44, $r23, i0);

     label18:
        i15 = i15 + 1;

        goto label17;

     label19:
        goto label22;

     label20:
        $r41 := @caughtexception;

     label21:
        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("UsageStatsDatabase", "Failed to write data to output stream", $r41);

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void reset()>();

     label22:
        r46 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        exitmonitor r1;

     label23:
        return r46;

     label24:
        $r40 := @caughtexception;

     label25:
        exitmonitor r1;

     label26:
        throw $r40;

        catch java.lang.Throwable from label02 to label03 with label24;
        catch java.io.IOException from label03 to label04 with label20;
        catch java.lang.Throwable from label03 to label04 with label24;
        catch java.io.IOException from label05 to label06 with label20;
        catch java.lang.Throwable from label05 to label06 with label24;
        catch java.io.IOException from label07 to label08 with label20;
        catch java.lang.Throwable from label07 to label08 with label24;
        catch java.io.IOException from label09 to label10 with label20;
        catch java.lang.Throwable from label09 to label10 with label24;
        catch java.io.IOException from label11 to label12 with label20;
        catch java.lang.Throwable from label11 to label12 with label24;
        catch java.io.IOException from label13 to label14 with label20;
        catch java.lang.Throwable from label13 to label14 with label24;
        catch java.io.IOException from label15 to label16 with label20;
        catch java.lang.Throwable from label15 to label16 with label24;
        catch java.io.IOException from label17 to label18 with label20;
        catch java.lang.Throwable from label17 to label18 with label24;
        catch java.lang.Throwable from label21 to label22 with label24;
        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.Throwable from label25 to label26 with label24;
    }

    public com.android.server.usage.IntervalStats getLatestUsageStats(int)
    {
        com.android.server.usage.UsageStatsDatabase r0;
        int i0, i1, $i2, $i3;
        java.lang.Object r1, $r10;
        java.lang.String $r4;
        java.io.File[] $r5;
        android.app.usage.TimeSparseArray[] $r6, $r8;
        android.app.usage.TimeSparseArray $r7, $r9;
        java.lang.Exception $r11;
        java.lang.Throwable $r12;
        android.util.AtomicFile r13;
        com.android.server.usage.IntervalStats r14;
        java.lang.IllegalArgumentException r16;
        java.lang.StringBuilder r17;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.usage.UsageStatsDatabase: java.lang.Object mLock>;

        entermonitor r1;

        if i0 < 0 goto label12;

     label01:
        $r5 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs>;

        $i2 = lengthof $r5;

        if i0 >= $i2 goto label12;

        $r6 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $r7 = $r6[i0];

        i1 = virtualinvoke $r7.<android.app.usage.TimeSparseArray: int size()>();

     label02:
        if i1 != 0 goto label05;

     label03:
        exitmonitor r1;

     label04:
        return null;

     label05:
        $r8 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $r9 = $r8[i0];

        $i3 = i1 - 1;

        $r10 = virtualinvoke $r9.<android.app.usage.TimeSparseArray: java.lang.Object valueAt(int)>($i3);

        r13 = (android.util.AtomicFile) $r10;

        r14 = new com.android.server.usage.IntervalStats;

        specialinvoke r14.<com.android.server.usage.IntervalStats: void <init>()>();

        specialinvoke r0.<com.android.server.usage.UsageStatsDatabase: void readLocked(android.util.AtomicFile,com.android.server.usage.IntervalStats)>(r13, r14);

     label06:
        exitmonitor r1;

     label07:
        return r14;

     label08:
        $r11 := @caughtexception;

     label09:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("UsageStatsDatabase", "Failed to read usage stats file", $r11);

     label10:
        exitmonitor r1;

     label11:
        return null;

     label12:
        r16 = new java.lang.IllegalArgumentException;

        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad interval type ");

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw r16;

     label13:
        $r12 := @caughtexception;

     label14:
        exitmonitor r1;

     label15:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Exception from label05 to label06 with label08;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label12 to label13 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public void init(long)
    {
        com.android.server.usage.UsageStatsDatabase r0;
        long l0;
        java.lang.Object r1, $r3;
        java.lang.IllegalStateException r2;
        int i1, i2, i3, i5, i6, i7, i8;
        android.util.AtomicFile $r4;
        boolean $z1;
        java.lang.String $r6, $r8;
        java.lang.Throwable $r9;
        java.io.File[] r10;
        java.io.File r11;
        java.lang.StringBuilder r12;
        android.app.usage.TimeSparseArray[] r13;
        android.app.usage.TimeSparseArray r14;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        l0 := @parameter0: long;

        r1 = r0.<com.android.server.usage.UsageStatsDatabase: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        r10 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs>;

        i3 = lengthof r10;

     label02:
        i5 = 0;

     label03:
        if i5 >= i3 goto label07;

        r11 = r10[i5];

     label04:
        virtualinvoke r11.<java.io.File: boolean mkdirs()>();

        $z1 = virtualinvoke r11.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label06;

     label05:
        i5 = i5 + 1;

        goto label03;

     label06:
        r2 = new java.lang.IllegalStateException;

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create directory ");

        $r6 = virtualinvoke r11.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw r2;

     label07:
        specialinvoke r0.<com.android.server.usage.UsageStatsDatabase: void checkVersionAndBuildLocked()>();

        specialinvoke r0.<com.android.server.usage.UsageStatsDatabase: void indexFilesLocked()>();

        r13 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        i1 = lengthof r13;

     label08:
        i6 = 0;

     label09:
        if i6 >= i1 goto label21;

        r14 = r13[i6];

     label10:
        i7 = virtualinvoke r14.<android.app.usage.TimeSparseArray: int closestIndexOnOrAfter(long)>(l0);

     label11:
        if i7 >= 0 goto label12;

        goto label20;

     label12:
        i2 = virtualinvoke r14.<android.app.usage.TimeSparseArray: int size()>();

     label13:
        i8 = i7;

     label14:
        if i8 >= i2 goto label17;

     label15:
        $r3 = virtualinvoke r14.<android.app.usage.TimeSparseArray: java.lang.Object valueAt(int)>(i8);

        $r4 = (android.util.AtomicFile) $r3;

        virtualinvoke $r4.<android.util.AtomicFile: void delete()>();

     label16:
        i8 = i8 + 1;

        goto label14;

     label17:
        if i7 >= i2 goto label20;

     label18:
        virtualinvoke r14.<android.app.usage.TimeSparseArray: void removeAt(int)>(i7);

     label19:
        i7 = i7 + 1;

        goto label17;

     label20:
        i6 = i6 + 1;

        goto label09;

     label21:
        exitmonitor r1;

     label22:
        return;

     label23:
        $r9 := @caughtexception;

     label24:
        exitmonitor r1;

     label25:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label23;
        catch java.lang.Throwable from label04 to label05 with label23;
        catch java.lang.Throwable from label06 to label07 with label23;
        catch java.lang.Throwable from label07 to label08 with label23;
        catch java.lang.Throwable from label10 to label11 with label23;
        catch java.lang.Throwable from label12 to label13 with label23;
        catch java.lang.Throwable from label15 to label16 with label23;
        catch java.lang.Throwable from label18 to label19 with label23;
        catch java.lang.Throwable from label21 to label22 with label23;
        catch java.lang.Throwable from label24 to label25 with label23;
    }

    boolean isFirstUpdate()
    {
        com.android.server.usage.UsageStatsDatabase r0;
        boolean $z0;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        $z0 = r0.<com.android.server.usage.UsageStatsDatabase: boolean mFirstUpdate>;

        return $z0;
    }

    boolean isNewUpdate()
    {
        com.android.server.usage.UsageStatsDatabase r0;
        boolean $z0;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        $z0 = r0.<com.android.server.usage.UsageStatsDatabase: boolean mNewUpdate>;

        return $z0;
    }

    void obfuscateCurrentStats(com.android.server.usage.IntervalStats[])
    {
        com.android.server.usage.UsageStatsDatabase r0;
        com.android.server.usage.IntervalStats[] r1;
        int $i0, $i1, i2;
        com.android.server.usage.PackagesTokenData $r2;
        com.android.server.usage.IntervalStats $r3;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        r1 := @parameter0: com.android.server.usage.IntervalStats[];

        $i0 = r0.<com.android.server.usage.UsageStatsDatabase: int mCurrentVersion>;

        if $i0 >= 5 goto label1;

        return;

     label1:
        i2 = 0;

     label2:
        $i1 = lengthof r1;

        if i2 >= $i1 goto label3;

        $r3 = r1[i2];

        $r2 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.PackagesTokenData mPackagesTokenData>;

        virtualinvoke $r3.<com.android.server.usage.IntervalStats: void obfuscateData(com.android.server.usage.PackagesTokenData)>($r2);

        i2 = i2 + 1;

        goto label2;

     label3:
        return;
    }

    int onPackageRemoved(java.lang.String, long)
    {
        com.android.server.usage.UsageStatsDatabase r0;
        long l0;
        java.lang.Object r1;
        int i1;
        com.android.server.usage.PackagesTokenData $r2;
        java.lang.Throwable $r3;
        java.lang.Exception $r4;
        java.lang.String $r7, r8;
        java.lang.StringBuilder r10;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        r8 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        r1 = r0.<com.android.server.usage.UsageStatsDatabase: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.PackagesTokenData mPackagesTokenData>;

        i1 = virtualinvoke $r2.<com.android.server.usage.PackagesTokenData: int removePackage(java.lang.String,long)>(r8, l0);

     label02:
        virtualinvoke r0.<com.android.server.usage.UsageStatsDatabase: void writeMappingsLocked()>();

     label03:
        goto label06;

     label04:
        $r4 := @caughtexception;

     label05:
        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to update package mappings on disk after removing token ");

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r7 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UsageStatsDatabase", $r7);

     label06:
        exitmonitor r1;

     label07:
        return i1;

     label08:
        $r3 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Exception from label02 to label03 with label04;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void onTimeChanged(long)
    {
        com.android.server.usage.UsageStatsDatabase r0;
        long l0, l4, $l6;
        java.lang.Object r1, $r13;
        java.lang.StringBuilder r2, r27;
        android.app.usage.TimeSparseArray[] r3;
        int i1, i2, i8, i9, i10, i11, i12, i13, i14;
        android.app.usage.TimeSparseArray r4;
        android.util.AtomicFile r5;
        java.lang.String $r12, $r16, r25, r26;
        byte $b7;
        java.io.FileInputStream $r14;
        java.io.File $r15, $r17, $r18, $r19, r28;
        boolean $z0;
        java.lang.Throwable $r22, $r23;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        l0 := @parameter0: long;

        r1 = r0.<com.android.server.usage.UsageStatsDatabase: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Time changed by ");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>(l0, r2);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

     label02:
        i8 = 0;

        i9 = 0;

     label03:
        r3 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        i1 = lengthof r3;

     label04:
        i10 = 0;

     label05:
        if i10 >= i1 goto label25;

        r4 = r3[i10];

     label06:
        i2 = virtualinvoke r4.<android.app.usage.TimeSparseArray: int size()>();

     label07:
        i11 = 0;

        i12 = i9;

        i13 = i8;

     label08:
        if i11 >= i2 goto label23;

     label09:
        $r13 = virtualinvoke r4.<android.app.usage.TimeSparseArray: java.lang.Object valueAt(int)>(i11);

        r5 = (android.util.AtomicFile) $r13;

        $l6 = virtualinvoke r4.<android.app.usage.TimeSparseArray: long keyAt(int)>(i11);

        l4 = $l6 + l0;

     label10:
        $b7 = l4 cmp 0L;

        if $b7 >= 0 goto label13;

        i13 = i13 + 1;

     label11:
        virtualinvoke r5.<android.util.AtomicFile: void delete()>();

     label12:
        goto label22;

     label13:
        $r14 = virtualinvoke r5.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

        virtualinvoke $r14.<java.io.FileInputStream: void close()>();

     label14:
        goto label16;

     label15:
        $r23 := @caughtexception;

     label16:
        r25 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l4);

     label17:
        r26 = r25;

     label18:
        $r15 = virtualinvoke r5.<android.util.AtomicFile: java.io.File getBaseFile()>();

        $r16 = virtualinvoke $r15.<java.io.File: java.lang.String getName()>();

        $z0 = virtualinvoke $r16.<java.lang.String: boolean endsWith(java.lang.String)>("-c");

        if $z0 == 0 goto label19;

        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-c");

        r26 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

     label19:
        r28 = new java.io.File;

        $r17 = virtualinvoke r5.<android.util.AtomicFile: java.io.File getBaseFile()>();

        $r18 = virtualinvoke $r17.<java.io.File: java.io.File getParentFile()>();

        specialinvoke r28.<java.io.File: void <init>(java.io.File,java.lang.String)>($r18, r26);

     label20:
        i12 = i12 + 1;

     label21:
        $r19 = virtualinvoke r5.<android.util.AtomicFile: java.io.File getBaseFile()>();

        virtualinvoke $r19.<java.io.File: boolean renameTo(java.io.File)>(r28);

     label22:
        i11 = i11 + 1;

        goto label08;

     label23:
        virtualinvoke r4.<android.app.usage.TimeSparseArray: void clear()>();

     label24:
        i14 = i10 + 1;

        i8 = i13;

        i9 = i12;

        i10 = i14;

        goto label05;

     label25:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" files deleted: ");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" files moved: ");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        $r12 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("UsageStatsDatabase", $r12);

        specialinvoke r0.<com.android.server.usage.UsageStatsDatabase: void indexFilesLocked()>();

        exitmonitor r1;

     label26:
        return;

     label27:
        $r22 := @caughtexception;

     label28:
        exitmonitor r1;

     label29:
        throw $r22;

        catch java.lang.Throwable from label01 to label02 with label27;
        catch java.lang.Throwable from label03 to label04 with label27;
        catch java.lang.Throwable from label06 to label07 with label27;
        catch java.lang.Throwable from label09 to label10 with label27;
        catch java.lang.Throwable from label11 to label12 with label27;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.lang.Throwable from label13 to label14 with label27;
        catch java.lang.Throwable from label16 to label17 with label27;
        catch java.lang.Throwable from label18 to label19 with label27;
        catch java.lang.Throwable from label19 to label20 with label27;
        catch java.lang.Throwable from label21 to label22 with label27;
        catch java.lang.Throwable from label23 to label24 with label27;
        catch java.lang.Throwable from label25 to label26 with label27;
        catch java.lang.Throwable from label28 to label29 with label27;
    }

    public void prune(long)
    {
        com.android.server.usage.UsageStatsDatabase r0;
        long l0, $l1, $l2, $l3, $l4, $l8;
        java.lang.Object r1;
        com.android.server.usage.UnixCalendar $r3, $r4, $r6, $r8, $r9, $r11, $r13, $r14, $r16, $r18, $r19, $r21, $r23, $r24, $r27;
        java.io.File[] $r5, $r10, $r15, $r20, $r25, $r26;
        java.io.File $r7, $r12, $r17, $r22, $r28;
        int $i5, $i6, $i7, i9;
        java.lang.Throwable $r29;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        l0 := @parameter0: long;

        r1 = r0.<com.android.server.usage.UsageStatsDatabase: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.UnixCalendar mCal>;

        virtualinvoke $r3.<com.android.server.usage.UnixCalendar: void setTimeInMillis(long)>(l0);

        $r4 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.UnixCalendar mCal>;

        virtualinvoke $r4.<com.android.server.usage.UnixCalendar: void addYears(int)>(-3);

        $r5 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs>;

        $r7 = $r5[3];

        $r6 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.UnixCalendar mCal>;

        $l1 = virtualinvoke $r6.<com.android.server.usage.UnixCalendar: long getTimeInMillis()>();

        staticinvoke <com.android.server.usage.UsageStatsDatabase: void pruneFilesOlderThan(java.io.File,long)>($r7, $l1);

        $r8 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.UnixCalendar mCal>;

        virtualinvoke $r8.<com.android.server.usage.UnixCalendar: void setTimeInMillis(long)>(l0);

        $r9 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.UnixCalendar mCal>;

        virtualinvoke $r9.<com.android.server.usage.UnixCalendar: void addMonths(int)>(-6);

        $r10 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs>;

        $r12 = $r10[2];

        $r11 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.UnixCalendar mCal>;

        $l2 = virtualinvoke $r11.<com.android.server.usage.UnixCalendar: long getTimeInMillis()>();

        staticinvoke <com.android.server.usage.UsageStatsDatabase: void pruneFilesOlderThan(java.io.File,long)>($r12, $l2);

        $r13 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.UnixCalendar mCal>;

        virtualinvoke $r13.<com.android.server.usage.UnixCalendar: void setTimeInMillis(long)>(l0);

        $r14 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.UnixCalendar mCal>;

        virtualinvoke $r14.<com.android.server.usage.UnixCalendar: void addWeeks(int)>(-4);

        $r15 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs>;

        $r17 = $r15[1];

        $r16 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.UnixCalendar mCal>;

        $l3 = virtualinvoke $r16.<com.android.server.usage.UnixCalendar: long getTimeInMillis()>();

        staticinvoke <com.android.server.usage.UsageStatsDatabase: void pruneFilesOlderThan(java.io.File,long)>($r17, $l3);

        $r18 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.UnixCalendar mCal>;

        virtualinvoke $r18.<com.android.server.usage.UnixCalendar: void setTimeInMillis(long)>(l0);

        $r19 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.UnixCalendar mCal>;

        virtualinvoke $r19.<com.android.server.usage.UnixCalendar: void addDays(int)>(-10);

        $r20 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs>;

        $r22 = $r20[0];

        $r21 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.UnixCalendar mCal>;

        $l4 = virtualinvoke $r21.<com.android.server.usage.UnixCalendar: long getTimeInMillis()>();

        staticinvoke <com.android.server.usage.UsageStatsDatabase: void pruneFilesOlderThan(java.io.File,long)>($r22, $l4);

        $r23 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.UnixCalendar mCal>;

        virtualinvoke $r23.<com.android.server.usage.UnixCalendar: void setTimeInMillis(long)>(l0);

        $r24 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.UnixCalendar mCal>;

        $i5 = <com.android.server.usage.UsageStatsDatabase: int SELECTION_LOG_RETENTION_LEN>;

        $i6 = neg $i5;

        virtualinvoke $r24.<com.android.server.usage.UnixCalendar: void addDays(int)>($i6);

     label2:
        i9 = 0;

     label3:
        $r25 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs>;

        $i7 = lengthof $r25;

        if i9 >= $i7 goto label5;

        $r26 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs>;

        $r28 = $r26[i9];

        $r27 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.UnixCalendar mCal>;

        $l8 = virtualinvoke $r27.<com.android.server.usage.UnixCalendar: long getTimeInMillis()>();

        specialinvoke r0.<com.android.server.usage.UsageStatsDatabase: void pruneChooserCountsOlderThan(java.io.File,long)>($r28, $l8);

     label4:
        i9 = i9 + 1;

        goto label3;

     label5:
        specialinvoke r0.<com.android.server.usage.UsageStatsDatabase: void indexFilesLocked()>();

        exitmonitor r1;

     label6:
        return;

     label7:
        $r29 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r29;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    void prunePackagesDataOnUpgrade(java.util.HashMap)
    {
        com.android.server.usage.UsageStatsDatabase r0;
        java.lang.Object r1;
        java.io.File[] r2, $r4, $r5;
        int i0, $i1, $i2, $i3, i5, i6;
        com.android.server.usage.IntervalStats r3;
        boolean $z0, $z2;
        java.io.File $r6, $r7, $r12;
        com.android.server.usage.PackagesTokenData $r8, $r9;
        java.lang.Exception $r10;
        java.lang.String $r13, $r15;
        java.lang.Throwable $r16;
        java.util.HashMap r17;
        android.util.AtomicFile r18;
        java.lang.StringBuilder r20;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        r17 := @parameter0: java.util.HashMap;

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.util.Map)>(r17);

        if $z0 == 0 goto label01;

        return;

     label01:
        r1 = r0.<com.android.server.usage.UsageStatsDatabase: java.lang.Object mLock>;

        entermonitor r1;

        i5 = 0;

     label02:
        $r4 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs>;

        $i1 = lengthof $r4;

        if i5 >= $i1 goto label15;

        $r5 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs>;

        $r6 = $r5[i5];

        r2 = virtualinvoke $r6.<java.io.File: java.io.File[] listFiles()>();

     label03:
        if r2 != null goto label04;

        goto label14;

     label04:
        i6 = 0;

     label05:
        i0 = lengthof r2;

     label06:
        if i6 >= i0 goto label14;

     label07:
        r3 = new com.android.server.usage.IntervalStats;

        specialinvoke r3.<com.android.server.usage.IntervalStats: void <init>()>();

        r18 = new android.util.AtomicFile;

        $r7 = r2[i6];

        specialinvoke r18.<android.util.AtomicFile: void <init>(java.io.File)>($r7);

        $i2 = r0.<com.android.server.usage.UsageStatsDatabase: int mCurrentVersion>;

        $r8 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.PackagesTokenData mPackagesTokenData>;

        staticinvoke <com.android.server.usage.UsageStatsDatabase: boolean readLocked(android.util.AtomicFile,com.android.server.usage.IntervalStats,int,com.android.server.usage.PackagesTokenData)>(r18, r3, $i2, $r8);

        $z2 = specialinvoke r0.<com.android.server.usage.UsageStatsDatabase: boolean pruneStats(java.util.HashMap,com.android.server.usage.IntervalStats)>(r17, r3);

        if $z2 != 0 goto label09;

     label08:
        goto label13;

     label09:
        $i3 = r0.<com.android.server.usage.UsageStatsDatabase: int mCurrentVersion>;

        $r9 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.PackagesTokenData mPackagesTokenData>;

        staticinvoke <com.android.server.usage.UsageStatsDatabase: void writeLocked(android.util.AtomicFile,com.android.server.usage.IntervalStats,int,com.android.server.usage.PackagesTokenData)>(r18, r3, $i3, $r9);

     label10:
        goto label13;

     label11:
        $r10 := @caughtexception;

     label12:
        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to prune data from: ");

        $r12 = r2[i6];

        $r13 = virtualinvoke $r12.<java.io.File: java.lang.String toString()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UsageStatsDatabase", $r15);

     label13:
        i6 = i6 + 1;

        goto label05;

     label14:
        i5 = i5 + 1;

        goto label02;

     label15:
        exitmonitor r1;

     label16:
        return;

     label17:
        $r16 := @caughtexception;

     label18:
        exitmonitor r1;

     label19:
        throw $r16;

        catch java.lang.Throwable from label02 to label03 with label17;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Exception from label07 to label08 with label11;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Exception from label09 to label10 with label11;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    boolean pruneUninstalledPackagesData()
    {
        com.android.server.usage.UsageStatsDatabase r0;
        java.lang.Object r1;
        int i0, $i1, $i2, $i3, i6, i7;
        com.android.server.usage.IntervalStats r2;
        java.io.File[] $r3, $r4, r17;
        java.io.File $r5, $r6, $r12;
        com.android.server.usage.PackagesTokenData $r7, $r8;
        boolean $z0;
        java.lang.Throwable $r9, $r16;
        java.lang.Exception $r10;
        java.lang.String $r13, $r15;
        android.util.AtomicFile r18;
        java.lang.StringBuilder r20;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        r1 = r0.<com.android.server.usage.UsageStatsDatabase: java.lang.Object mLock>;

        entermonitor r1;

        i6 = 0;

     label01:
        $r3 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs>;

        $i1 = lengthof $r3;

        if i6 >= $i1 goto label14;

        $r4 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs>;

        $r5 = $r4[i6];

        r17 = virtualinvoke $r5.<java.io.File: java.io.File[] listFiles()>();

     label02:
        if r17 != null goto label03;

        goto label13;

     label03:
        i7 = 0;

     label04:
        i0 = lengthof r17;

     label05:
        if i7 >= i0 goto label13;

     label06:
        r2 = new com.android.server.usage.IntervalStats;

        specialinvoke r2.<com.android.server.usage.IntervalStats: void <init>()>();

        r18 = new android.util.AtomicFile;

        $r6 = r17[i7];

        specialinvoke r18.<android.util.AtomicFile: void <init>(java.io.File)>($r6);

        $i2 = r0.<com.android.server.usage.UsageStatsDatabase: int mCurrentVersion>;

        $r7 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.PackagesTokenData mPackagesTokenData>;

        $z0 = staticinvoke <com.android.server.usage.UsageStatsDatabase: boolean readLocked(android.util.AtomicFile,com.android.server.usage.IntervalStats,int,com.android.server.usage.PackagesTokenData)>(r18, r2, $i2, $r7);

        if $z0 != 0 goto label08;

     label07:
        goto label09;

     label08:
        $i3 = r0.<com.android.server.usage.UsageStatsDatabase: int mCurrentVersion>;

        $r8 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.PackagesTokenData mPackagesTokenData>;

        staticinvoke <com.android.server.usage.UsageStatsDatabase: void writeLocked(android.util.AtomicFile,com.android.server.usage.IntervalStats,int,com.android.server.usage.PackagesTokenData)>(r18, r2, $i3, $r8);

     label09:
        i7 = i7 + 1;

        goto label04;

     label10:
        $r10 := @caughtexception;

     label11:
        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to prune data from: ");

        $r12 = r17[i7];

        $r13 = virtualinvoke $r12.<java.io.File: java.lang.String toString()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UsageStatsDatabase", $r15);

        exitmonitor r1;

     label12:
        return 0;

     label13:
        i6 = i6 + 1;

        goto label01;

     label14:
        virtualinvoke r0.<com.android.server.usage.UsageStatsDatabase: void writeMappingsLocked()>();

     label15:
        exitmonitor r1;

     label16:
        return 1;

     label17:
        $r9 := @caughtexception;

     label18:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UsageStatsDatabase", "Failed to write package mappings after pruning data.");

        exitmonitor r1;

     label19:
        return 0;

     label20:
        $r16 := @caughtexception;

     label21:
        exitmonitor r1;

     label22:
        throw $r16;

        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Throwable from label04 to label05 with label20;
        catch java.lang.Exception from label06 to label07 with label10;
        catch java.lang.Throwable from label06 to label07 with label20;
        catch java.lang.Exception from label08 to label09 with label10;
        catch java.lang.Throwable from label08 to label09 with label20;
        catch java.lang.Throwable from label11 to label12 with label20;
        catch java.io.IOException from label14 to label15 with label17;
        catch java.lang.Throwable from label14 to label15 with label20;
        catch java.lang.Throwable from label15 to label16 with label20;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label21 to label22 with label20;
    }

    public void putUsageStats(int, com.android.server.usage.IntervalStats) throws java.io.IOException
    {
        com.android.server.usage.UsageStatsDatabase r0;
        int i0, $i1;
        java.lang.Object r1, $r8;
        java.lang.String $r4, $r11;
        java.io.File[] $r5, $r9;
        android.app.usage.TimeSparseArray[] $r6, $r12;
        long $l2, $l3, $l4, $l5;
        android.app.usage.TimeSparseArray $r7, $r13;
        java.io.File $r10, r18;
        java.lang.Throwable $r14;
        com.android.server.usage.IntervalStats r15;
        android.util.AtomicFile r16, r17;
        java.lang.IllegalArgumentException r19;
        java.lang.StringBuilder r20;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        i0 := @parameter0: int;

        r15 := @parameter1: com.android.server.usage.IntervalStats;

        if r15 != null goto label01;

        return;

     label01:
        r1 = r0.<com.android.server.usage.UsageStatsDatabase: java.lang.Object mLock>;

        entermonitor r1;

        if i0 < 0 goto label08;

     label02:
        $r5 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs>;

        $i1 = lengthof $r5;

        if i0 >= $i1 goto label08;

        $r6 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $r7 = $r6[i0];

        $l2 = r15.<com.android.server.usage.IntervalStats: long beginTime>;

        $r8 = virtualinvoke $r7.<android.app.usage.TimeSparseArray: java.lang.Object get(long)>($l2);

        r16 = (android.util.AtomicFile) $r8;

     label03:
        r17 = r16;

        if r16 != null goto label06;

     label04:
        r17 = new android.util.AtomicFile;

        r18 = new java.io.File;

        $r9 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs>;

        $r10 = $r9[i0];

        $l4 = r15.<com.android.server.usage.IntervalStats: long beginTime>;

        $r11 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l4);

        specialinvoke r18.<java.io.File: void <init>(java.io.File,java.lang.String)>($r10, $r11);

        specialinvoke r17.<android.util.AtomicFile: void <init>(java.io.File)>(r18);

     label05:
        $r12 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $r13 = $r12[i0];

        $l5 = r15.<com.android.server.usage.IntervalStats: long beginTime>;

        virtualinvoke $r13.<android.app.usage.TimeSparseArray: void put(long,java.lang.Object)>($l5, r17);

     label06:
        specialinvoke r0.<com.android.server.usage.UsageStatsDatabase: void writeLocked(android.util.AtomicFile,com.android.server.usage.IntervalStats)>(r17, r15);

        $l3 = virtualinvoke r17.<android.util.AtomicFile: long getLastModifiedTime()>();

        r15.<com.android.server.usage.IntervalStats: long lastTimeSaved> = $l3;

        exitmonitor r1;

     label07:
        return;

     label08:
        r19 = new java.lang.IllegalArgumentException;

        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad interval type ");

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw r19;

     label09:
        $r14 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r14;

        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public java.util.List queryUsageStats(int, long, long, com.android.server.usage.UsageStatsDatabase$StatCombiner)
    {
        com.android.server.usage.UsageStatsDatabase r0;
        long l0, $l3, l8, l11;
        java.lang.Object r1, $r10;
        android.app.usage.TimeSparseArray r2;
        java.util.ArrayList r3;
        android.util.AtomicFile r4;
        java.lang.String $r7;
        java.io.File[] $r8;
        int $i1, i7, i9, i10;
        android.app.usage.TimeSparseArray[] $r9;
        byte $b2, $b4, $b5;
        java.lang.Exception $r11, $r14, r18;
        java.lang.Throwable $r12, $r13, r19;
        com.android.server.usage.UsageStatsDatabase$StatCombiner r15;
        com.android.server.usage.IntervalStats r17;
        java.lang.IllegalArgumentException r20;
        java.lang.StringBuilder r21;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        i7 := @parameter0: int;

        l0 := @parameter1: long;

        l8 := @parameter2: long;

        r15 := @parameter3: com.android.server.usage.UsageStatsDatabase$StatCombiner;

        r1 = r0.<com.android.server.usage.UsageStatsDatabase: java.lang.Object mLock>;

        entermonitor r1;

        if i7 < 0 goto label31;

     label01:
        $r8 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File[] mIntervalDirs>;

        $i1 = lengthof $r8;

        if i7 >= $i1 goto label31;

        $r9 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        r2 = $r9[i7];

     label02:
        $b2 = l8 cmp l0;

        if $b2 > 0 goto label05;

     label03:
        exitmonitor r1;

     label04:
        return null;

     label05:
        i9 = virtualinvoke r2.<android.app.usage.TimeSparseArray: int closestIndexOnOrBefore(long)>(l0);

     label06:
        if i9 >= 0 goto label07;

        i9 = 0;

        goto label07;

     label07:
        i10 = virtualinvoke r2.<android.app.usage.TimeSparseArray: int closestIndexOnOrBefore(long)>(l8);

     label08:
        if i10 >= 0 goto label11;

     label09:
        exitmonitor r1;

     label10:
        return null;

     label11:
        $l3 = virtualinvoke r2.<android.app.usage.TimeSparseArray: long keyAt(int)>(i10);

        $b4 = $l3 cmp l8;

        if $b4 != 0 goto label16;

     label12:
        i10 = i10 + -1;

        if i10 >= 0 goto label15;

     label13:
        exitmonitor r1;

     label14:
        return null;

     label15:
        goto label16;

     label16:
        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

     label17:
        if i9 > i10 goto label29;

     label18:
        $r10 = virtualinvoke r2.<android.app.usage.TimeSparseArray: java.lang.Object valueAt(int)>(i9);

        r4 = (android.util.AtomicFile) $r10;

        r17 = new com.android.server.usage.IntervalStats;

        specialinvoke r17.<com.android.server.usage.IntervalStats: void <init>()>();

     label19:
        specialinvoke r0.<com.android.server.usage.UsageStatsDatabase: void readLocked(android.util.AtomicFile,com.android.server.usage.IntervalStats)>(r4, r17);

        l11 = r17.<com.android.server.usage.IntervalStats: long endTime>;

     label20:
        $b5 = l0 cmp l11;

        if $b5 >= 0 goto label24;

     label21:
        interfaceinvoke r15.<com.android.server.usage.UsageStatsDatabase$StatCombiner: void combine(com.android.server.usage.IntervalStats,boolean,java.util.List)>(r17, 0, r3);

     label22:
        goto label24;

     label23:
        $r11 := @caughtexception;

        r18 = $r11;

        goto label27;

     label24:
        goto label28;

     label25:
        $r13 := @caughtexception;

        r19 = $r13;

        goto label33;

     label26:
        $r14 := @caughtexception;

        r18 = $r14;

     label27:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("UsageStatsDatabase", "Failed to read usage stats file", r18);

     label28:
        i9 = i9 + 1;

        goto label17;

     label29:
        exitmonitor r1;

     label30:
        return r3;

     label31:
        r20 = new java.lang.IllegalArgumentException;

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad interval type ");

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        $r7 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw r20;

     label32:
        $r12 := @caughtexception;

        r19 = $r12;

     label33:
        exitmonitor r1;

     label34:
        throw r19;

        catch java.lang.Throwable from label01 to label02 with label32;
        catch java.lang.Throwable from label03 to label04 with label32;
        catch java.lang.Throwable from label05 to label06 with label32;
        catch java.lang.Throwable from label07 to label08 with label32;
        catch java.lang.Throwable from label09 to label10 with label32;
        catch java.lang.Throwable from label11 to label12 with label32;
        catch java.lang.Throwable from label13 to label14 with label32;
        catch java.lang.Throwable from label16 to label17 with label32;
        catch java.lang.Throwable from label18 to label19 with label32;
        catch java.lang.Exception from label19 to label20 with label26;
        catch java.lang.Throwable from label19 to label20 with label25;
        catch java.lang.Exception from label21 to label22 with label23;
        catch java.lang.Throwable from label21 to label22 with label32;
        catch java.lang.Throwable from label27 to label28 with label32;
        catch java.lang.Throwable from label29 to label30 with label32;
        catch java.lang.Throwable from label31 to label32 with label32;
        catch java.lang.Throwable from label33 to label34 with label32;
    }

    com.android.server.usage.IntervalStats readIntervalStatsForFile(int, long)
    {
        com.android.server.usage.UsageStatsDatabase r0;
        int i0;
        long l1;
        java.lang.Object r1, $r4;
        android.app.usage.TimeSparseArray[] $r2;
        android.app.usage.TimeSparseArray $r3;
        android.util.AtomicFile $r5;
        java.lang.Exception $r6;
        java.lang.Throwable $r7;
        com.android.server.usage.IntervalStats r8;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 = r0.<com.android.server.usage.UsageStatsDatabase: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        r8 = new com.android.server.usage.IntervalStats;

        specialinvoke r8.<com.android.server.usage.IntervalStats: void <init>()>();

     label02:
        $r2 = r0.<com.android.server.usage.UsageStatsDatabase: android.app.usage.TimeSparseArray[] mSortedStatFiles>;

        $r3 = $r2[i0];

        $r4 = virtualinvoke $r3.<android.app.usage.TimeSparseArray: java.lang.Object get(long,java.lang.Object)>(l1, null);

        $r5 = (android.util.AtomicFile) $r4;

        specialinvoke r0.<com.android.server.usage.UsageStatsDatabase: void readLocked(android.util.AtomicFile,com.android.server.usage.IntervalStats)>($r5, r8);

     label03:
        exitmonitor r1;

     label04:
        return r8;

     label05:
        $r6 := @caughtexception;

     label06:
        exitmonitor r1;

     label07:
        return null;

     label08:
        $r7 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Exception from label02 to label03 with label05;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void readMappingsLocked()
    {
        com.android.server.usage.UsageStatsDatabase r0;
        int i0, i1, i3, i4, i5;
        java.io.File $r2, $r3;
        boolean $z0;
        com.android.server.usage.PackagesTokenData $r4, $r5, $r12;
        java.lang.Object $r6, $r8, $r14, $r17;
        android.util.ArrayMap $r7, $r13;
        java.lang.String $r9, $r15, $r18;
        java.lang.Integer $r10, $r19;
        java.lang.Throwable $r21, $r22;
        java.lang.Exception $r23;
        android.util.AtomicFile r24;
        java.io.FileInputStream r25;
        android.util.SparseArray r26;
        java.util.ArrayList r27;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        $r2 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File mPackageMappingsFile>;

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label01;

        return;

     label01:
        r24 = new android.util.AtomicFile;

        $r3 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File mPackageMappingsFile>;

        specialinvoke r24.<android.util.AtomicFile: void <init>(java.io.File)>($r3);

        r25 = virtualinvoke r24.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

     label02:
        $r4 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.PackagesTokenData mPackagesTokenData>;

        staticinvoke <com.android.server.usage.UsageStatsProtoV2: void readObfuscatedData(java.io.InputStream,com.android.server.usage.PackagesTokenData)>(r25, $r4);

     label03:
        if r25 == null goto label05;

     label04:
        virtualinvoke r25.<java.io.FileInputStream: void close()>();

     label05:
        $r5 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.PackagesTokenData mPackagesTokenData>;

        r26 = $r5.<com.android.server.usage.PackagesTokenData: android.util.SparseArray tokensToPackagesMap>;

        i0 = virtualinvoke r26.<android.util.SparseArray: int size()>();

        i3 = 0;

     label06:
        if i3 >= i0 goto label09;

        i4 = virtualinvoke r26.<android.util.SparseArray: int keyAt(int)>(i3);

        $r6 = virtualinvoke r26.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        r27 = (java.util.ArrayList) $r6;

        $r7 = new android.util.ArrayMap;

        specialinvoke $r7.<android.util.ArrayMap: void <init>()>();

        i1 = virtualinvoke r27.<java.util.ArrayList: int size()>();

        $r8 = virtualinvoke r27.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r9 = (java.lang.String) $r8;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r10);

        i5 = 1;

     label07:
        if i5 >= i1 goto label08;

        $r17 = virtualinvoke r27.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        $r18 = (java.lang.String) $r17;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, $r19);

        i5 = i5 + 1;

        goto label07;

     label08:
        $r12 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.PackagesTokenData mPackagesTokenData>;

        $r13 = $r12.<com.android.server.usage.PackagesTokenData: android.util.ArrayMap packagesToTokensMap>;

        $r14 = virtualinvoke r27.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r15 = (java.lang.String) $r14;

        virtualinvoke $r13.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r7);

        i3 = i3 + 1;

        goto label06;

     label09:
        return;

     label10:
        $r22 := @caughtexception;

        if r25 == null goto label15;

     label11:
        virtualinvoke r25.<java.io.FileInputStream: void close()>();

     label12:
        goto label15;

     label13:
        $r21 := @caughtexception;

     label14:
        virtualinvoke $r22.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r21);

     label15:
        throw $r22;

     label16:
        $r23 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("UsageStatsDatabase", "Failed to read the obfuscated packages mapping file.", $r23);

        return;

        catch java.lang.Exception from label01 to label02 with label16;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Exception from label04 to label05 with label16;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Exception from label14 to label15 with label16;
        catch java.lang.Exception from label15 to label16 with label16;
    }

    boolean wasUpgradePerformed()
    {
        com.android.server.usage.UsageStatsDatabase r0;
        boolean $z0;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        $z0 = r0.<com.android.server.usage.UsageStatsDatabase: boolean mUpgradePerformed>;

        return $z0;
    }

    void writeMappingsLocked() throws java.io.IOException
    {
        com.android.server.usage.UsageStatsDatabase r0;
        android.util.AtomicFile $r2;
        java.io.File $r3;
        com.android.server.usage.PackagesTokenData $r4;
        java.lang.Throwable $r5;
        java.lang.Exception $r6;
        java.io.FileOutputStream r7;

        r0 := @this: com.android.server.usage.UsageStatsDatabase;

        $r2 = new android.util.AtomicFile;

        $r3 = r0.<com.android.server.usage.UsageStatsDatabase: java.io.File mPackageMappingsFile>;

        specialinvoke $r2.<android.util.AtomicFile: void <init>(java.io.File)>($r3);

        r7 = virtualinvoke $r2.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

     label1:
        $r4 = r0.<com.android.server.usage.UsageStatsDatabase: com.android.server.usage.PackagesTokenData mPackagesTokenData>;

        staticinvoke <com.android.server.usage.UsageStatsProtoV2: void writeObfuscatedData(java.io.OutputStream,com.android.server.usage.PackagesTokenData)>(r7, $r4);

        virtualinvoke $r2.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r7);

     label2:
        r7 = null;

     label3:
        virtualinvoke $r2.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r7);

        goto label8;

     label4:
        $r5 := @caughtexception;

        goto label9;

     label5:
        $r6 := @caughtexception;

     label6:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("UsageStatsDatabase", "Unable to write obfuscated data to proto.", $r6);

     label7:
        goto label3;

     label8:
        return;

     label9:
        virtualinvoke $r2.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r7);

        throw $r5;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label6 to label7 with label4;
    }
}
