public class com.android.server.usage.UsageStatsIdleService extends android.app.job.JobService
{
    private static final int PRUNE_JOB_ID;
    private static final int UPDATE_MAPPINGS_JOB_ID;
    private static final java.lang.String USER_ID_KEY;

    public void <init>()
    {
        com.android.server.usage.UsageStatsIdleService r0;

        r0 := @this: com.android.server.usage.UsageStatsIdleService;

        specialinvoke r0.<android.app.job.JobService: void <init>()>();

        return;
    }

    static void cancelJob(android.content.Context, int)
    {
        android.content.Context r0;
        int i0, $i1;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $i1 = 546357475 + i0;

        staticinvoke <com.android.server.usage.UsageStatsIdleService: void cancelJobInternal(android.content.Context,int)>(r0, $i1);

        return;
    }

    private static void cancelJobInternal(android.content.Context, int)
    {
        int i0;
        java.lang.Object $r0;
        android.content.Context r1;
        android.app.job.JobScheduler r2;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r0 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/job/JobScheduler;");

        r2 = (android.app.job.JobScheduler) $r0;

        if r2 == null goto label1;

        virtualinvoke r2.<android.app.job.JobScheduler: void cancel(int)>(i0);

     label1:
        return;
    }

    static void cancelUpdateMappingsJob(android.content.Context)
    {
        android.content.Context r0;

        r0 := @parameter0: android.content.Context;

        staticinvoke <com.android.server.usage.UsageStatsIdleService: void cancelJobInternal(android.content.Context,int)>(r0, 546378950);

        return;
    }

    static void scheduleJob(android.content.Context, int)
    {
        android.content.Context r0;
        int i0, i1;
        android.content.ComponentName $r3;
        java.lang.String $r4, $r6;
        java.lang.Class $r5;
        android.os.PersistableBundle $r7;
        android.app.job.JobInfo$Builder $r8, $r9, $r10, $r11;
        android.app.job.JobInfo $r12;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 = 546357475 + i0;

        $r3 = new android.content.ComponentName;

        $r4 = virtualinvoke r0.<android.content.Context: java.lang.String getPackageName()>();

        $r5 = class "Lcom/android/server/usage/UsageStatsIdleService;";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r3.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r4, $r6);

        $r7 = new android.os.PersistableBundle;

        specialinvoke $r7.<android.os.PersistableBundle: void <init>()>();

        virtualinvoke $r7.<android.os.PersistableBundle: void putInt(java.lang.String,int)>("user_id", i0);

        $r8 = new android.app.job.JobInfo$Builder;

        specialinvoke $r8.<android.app.job.JobInfo$Builder: void <init>(int,android.content.ComponentName)>(i1, $r3);

        $r9 = virtualinvoke $r8.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setRequiresDeviceIdle(boolean)>(1);

        $r10 = virtualinvoke $r9.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setExtras(android.os.PersistableBundle)>($r7);

        $r11 = virtualinvoke $r10.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setPersisted(boolean)>(1);

        $r12 = virtualinvoke $r11.<android.app.job.JobInfo$Builder: android.app.job.JobInfo build()>();

        staticinvoke <com.android.server.usage.UsageStatsIdleService: void scheduleJobInternal(android.content.Context,android.app.job.JobInfo,int)>(r0, $r12, i1);

        return;
    }

    private static void scheduleJobInternal(android.content.Context, android.app.job.JobInfo, int)
    {
        android.app.job.JobInfo r0, $r2;
        int i0;
        java.lang.Object $r1;
        boolean $z0;
        android.content.Context r3;
        android.app.job.JobScheduler r4;

        r3 := @parameter0: android.content.Context;

        r0 := @parameter1: android.app.job.JobInfo;

        i0 := @parameter2: int;

        $r1 = virtualinvoke r3.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/job/JobScheduler;");

        r4 = (android.app.job.JobScheduler) $r1;

        $r2 = virtualinvoke r4.<android.app.job.JobScheduler: android.app.job.JobInfo getPendingJob(int)>(i0);

        $z0 = virtualinvoke r0.<android.app.job.JobInfo: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        virtualinvoke r4.<android.app.job.JobScheduler: void cancel(int)>(i0);

        virtualinvoke r4.<android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>(r0);

     label1:
        return;
    }

    static void scheduleUpdateMappingsJob(android.content.Context)
    {
        android.content.Context r0;
        android.app.job.JobInfo$Builder $r1, $r6, $r8, $r10;
        android.content.ComponentName $r2;
        java.lang.String $r3, $r5;
        java.lang.Class $r4;
        java.util.concurrent.TimeUnit $r7, $r9;
        long $l0, $l1;
        android.app.job.JobInfo $r11;

        r0 := @parameter0: android.content.Context;

        $r1 = new android.app.job.JobInfo$Builder;

        $r2 = new android.content.ComponentName;

        $r3 = virtualinvoke r0.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = class "Lcom/android/server/usage/UsageStatsIdleService;";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r2.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r3, $r5);

        specialinvoke $r1.<android.app.job.JobInfo$Builder: void <init>(int,android.content.ComponentName)>(546378950, $r2);

        $r6 = virtualinvoke $r1.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setPersisted(boolean)>(1);

        $r7 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit DAYS>;

        $l0 = virtualinvoke $r7.<java.util.concurrent.TimeUnit: long toMillis(long)>(1L);

        $r8 = virtualinvoke $r6.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setMinimumLatency(long)>($l0);

        $r9 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit DAYS>;

        $l1 = virtualinvoke $r9.<java.util.concurrent.TimeUnit: long toMillis(long)>(2L);

        $r10 = virtualinvoke $r8.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setOverrideDeadline(long)>($l1);

        $r11 = virtualinvoke $r10.<android.app.job.JobInfo$Builder: android.app.job.JobInfo build()>();

        staticinvoke <com.android.server.usage.UsageStatsIdleService: void scheduleJobInternal(android.content.Context,android.app.job.JobInfo,int)>(r0, $r11, 546378950);

        return;
    }

    public void lambda$onStartJob$0$UsageStatsIdleService(android.app.job.JobParameters, int)
    {
        com.android.server.usage.UsageStatsIdleService r0;
        android.app.job.JobParameters r1;
        int i0, $i1;
        android.app.usage.UsageStatsManagerInternal r2;
        java.lang.Object $r3;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.android.server.usage.UsageStatsIdleService;

        r1 := @parameter0: android.app.job.JobParameters;

        i0 := @parameter1: int;

        $r3 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/app/usage/UsageStatsManagerInternal;");

        r2 = (android.app.usage.UsageStatsManagerInternal) $r3;

        $i1 = virtualinvoke r1.<android.app.job.JobParameters: int getJobId()>();

        if $i1 != 546378950 goto label1;

        $z2 = virtualinvoke r2.<android.app.usage.UsageStatsManagerInternal: boolean updatePackageMappingsData()>();

        $z3 = $z2 ^ 1;

        virtualinvoke r0.<com.android.server.usage.UsageStatsIdleService: void jobFinished(android.app.job.JobParameters,boolean)>(r1, $z3);

        goto label2;

     label1:
        $z0 = virtualinvoke r2.<android.app.usage.UsageStatsManagerInternal: boolean pruneUninstalledPackagesData(int)>(i0);

        $z1 = $z0 ^ 1;

        virtualinvoke r0.<com.android.server.usage.UsageStatsIdleService: void jobFinished(android.app.job.JobParameters,boolean)>(r1, $z1);

     label2:
        return;
    }

    public boolean onStartJob(android.app.job.JobParameters)
    {
        com.android.server.usage.UsageStatsIdleService r0;
        android.app.job.JobParameters r1;
        int i0, $i1;
        android.os.PersistableBundle $r2;
        com.android.server.usage._$$Lambda$UsageStatsIdleService$yCu7ZLOsLXVx3Ko_5w14oCiO5p4 $r3;

        r0 := @this: com.android.server.usage.UsageStatsIdleService;

        r1 := @parameter0: android.app.job.JobParameters;

        $r2 = virtualinvoke r1.<android.app.job.JobParameters: android.os.PersistableBundle getExtras()>();

        i0 = virtualinvoke $r2.<android.os.PersistableBundle: int getInt(java.lang.String,int)>("user_id", -1);

        if i0 != -1 goto label1;

        $i1 = virtualinvoke r1.<android.app.job.JobParameters: int getJobId()>();

        if $i1 == 546378950 goto label1;

        return 0;

     label1:
        $r3 = new com.android.server.usage._$$Lambda$UsageStatsIdleService$yCu7ZLOsLXVx3Ko_5w14oCiO5p4;

        specialinvoke $r3.<com.android.server.usage._$$Lambda$UsageStatsIdleService$yCu7ZLOsLXVx3Ko_5w14oCiO5p4: void <init>(com.android.server.usage.UsageStatsIdleService,android.app.job.JobParameters,int)>(r0, r1, i0);

        staticinvoke <android.os.AsyncTask: void execute(java.lang.Runnable)>($r3);

        return 1;
    }

    public boolean onStopJob(android.app.job.JobParameters)
    {
        com.android.server.usage.UsageStatsIdleService r0;
        android.app.job.JobParameters r1;

        r0 := @this: com.android.server.usage.UsageStatsIdleService;

        r1 := @parameter0: android.app.job.JobParameters;

        return 0;
    }

    public static void <clinit>()
    {
        <com.android.server.usage.UsageStatsIdleService: java.lang.String USER_ID_KEY> = "user_id";

        <com.android.server.usage.UsageStatsIdleService: int UPDATE_MAPPINGS_JOB_ID> = 546378950;

        <com.android.server.usage.UsageStatsIdleService: int PRUNE_JOB_ID> = 546357475;

        return;
    }
}
