final class com.android.server.usage.UsageStatsService$BinderService extends android.app.usage.IUsageStatsManager$Stub
{
    final com.android.server.usage.UsageStatsService this$0;

    private void <init>(com.android.server.usage.UsageStatsService)
    {
        com.android.server.usage.UsageStatsService$BinderService r0;
        com.android.server.usage.UsageStatsService r1;

        r0 := @this: com.android.server.usage.UsageStatsService$BinderService;

        r1 := @parameter0: com.android.server.usage.UsageStatsService;

        r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0> = r1;

        specialinvoke r0.<android.app.usage.IUsageStatsManager$Stub: void <init>()>();

        return;
    }

    void <init>(com.android.server.usage.UsageStatsService, com.android.server.usage.UsageStatsService$1)
    {
        com.android.server.usage.UsageStatsService$BinderService r0;
        com.android.server.usage.UsageStatsService r1;
        com.android.server.usage.UsageStatsService$1 r2;

        r0 := @this: com.android.server.usage.UsageStatsService$BinderService;

        r1 := @parameter0: com.android.server.usage.UsageStatsService;

        r2 := @parameter1: com.android.server.usage.UsageStatsService$1;

        specialinvoke r0.<com.android.server.usage.UsageStatsService$BinderService: void <init>(com.android.server.usage.UsageStatsService)>(r1);

        return;
    }

    private void checkCallerIsSameApp(java.lang.String)
    {
        com.android.server.usage.UsageStatsService$BinderService r0;
        java.lang.String r1, $r11;
        int i0, i1, $i2;
        com.android.server.usage.UsageStatsService $r3;
        android.content.pm.PackageManagerInternal $r4;
        java.lang.StringBuilder $r5;
        java.lang.SecurityException $r10;

        r0 := @this: com.android.server.usage.UsageStatsService$BinderService;

        r1 := @parameter0: java.lang.String;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $r3 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        $r4 = $r3.<com.android.server.usage.UsageStatsService: android.content.pm.PackageManagerInternal mPackageManagerInternal>;

        $i2 = virtualinvoke $r4.<android.content.pm.PackageManagerInternal: int getPackageUid(java.lang.String,int,int)>(r1, 0, i1);

        if $i2 != i0 goto label1;

        return;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling uid ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot query eventsfor package ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = new java.lang.SecurityException;

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.SecurityException: void <init>(java.lang.String)>($r11);

        throw $r10;
    }

    private void checkCallerIsSystemOrSameApp(java.lang.String)
    {
        com.android.server.usage.UsageStatsService$BinderService r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: com.android.server.usage.UsageStatsService$BinderService;

        r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.usage.UsageStatsService$BinderService: boolean isCallingUidSystem()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        specialinvoke r0.<com.android.server.usage.UsageStatsService$BinderService: void checkCallerIsSameApp(java.lang.String)>(r1);

        return;
    }

    private boolean hasObserverPermission()
    {
        com.android.server.usage.UsageStatsService$BinderService r0;
        int i0, $i1;
        android.app.admin.DevicePolicyManagerInternal r1;
        com.android.server.usage.UsageStatsService $r2, $r3;
        android.content.Context $r4;
        boolean $z0, z1;

        r0 := @this: com.android.server.usage.UsageStatsService$BinderService;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r2 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        r1 = staticinvoke <com.android.server.usage.UsageStatsService: android.app.admin.DevicePolicyManagerInternal access$1200(com.android.server.usage.UsageStatsService)>($r2);

        z1 = 1;

        if i0 == 1000 goto label4;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.app.admin.DevicePolicyManagerInternal: boolean isActiveAdminWithPolicy(int,int)>(i0, -1);

        if $z0 == 0 goto label1;

        goto label4;

     label1:
        $r3 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        $r4 = virtualinvoke $r3.<com.android.server.usage.UsageStatsService: android.content.Context getContext()>();

        $i1 = virtualinvoke $r4.<android.content.Context: int checkCallingPermission(java.lang.String)>("android.permission.OBSERVE_APP_USAGE");

        if $i1 != 0 goto label2;

        goto label3;

     label2:
        z1 = 0;

     label3:
        return z1;

     label4:
        return 1;
    }

    private boolean hasPermission(java.lang.String)
    {
        com.android.server.usage.UsageStatsService$BinderService r0;
        java.lang.String r1;
        com.android.server.usage.UsageStatsService $r2, $r4;
        android.app.AppOpsManager $r3;
        android.content.Context $r5;
        int $i0, i1, i2;
        boolean z1, z2;

        r0 := @this: com.android.server.usage.UsageStatsService$BinderService;

        r1 := @parameter0: java.lang.String;

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        z1 = 1;

        if i1 != 1000 goto label1;

        return 1;

     label1:
        $r2 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        $r3 = $r2.<com.android.server.usage.UsageStatsService: android.app.AppOpsManager mAppOps>;

        i2 = virtualinvoke $r3.<android.app.AppOpsManager: int noteOp(int,int,java.lang.String)>(43, i1, r1);

        if i2 != 3 goto label4;

        $r4 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        $r5 = virtualinvoke $r4.<com.android.server.usage.UsageStatsService: android.content.Context getContext()>();

        $i0 = virtualinvoke $r5.<android.content.Context: int checkCallingPermission(java.lang.String)>("android.permission.PACKAGE_USAGE_STATS");

        if $i0 != 0 goto label2;

        goto label3;

     label2:
        z1 = 0;

     label3:
        return z1;

     label4:
        if i2 != 0 goto label5;

        z2 = 1;

        goto label6;

     label5:
        z2 = 0;

     label6:
        return z2;
    }

    private transient boolean hasPermissions(java.lang.String, java.lang.String[])
    {
        com.android.server.usage.UsageStatsService$BinderService r0;
        java.lang.String[] r1;
        int $i0, $i1, $i2, i3;
        com.android.server.usage.UsageStatsService $r2;
        java.lang.String $r3, r4;
        boolean z0;
        android.content.Context r5;

        r0 := @this: com.android.server.usage.UsageStatsService$BinderService;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String[];

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i0 != 1000 goto label1;

        return 1;

     label1:
        z0 = 1;

        $r2 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        r5 = virtualinvoke $r2.<com.android.server.usage.UsageStatsService: android.content.Context getContext()>();

        i3 = 0;

     label2:
        $i1 = lengthof r1;

        if i3 >= $i1 goto label5;

        if z0 == 0 goto label3;

        $r3 = r1[i3];

        $i2 = virtualinvoke r5.<android.content.Context: int checkCallingPermission(java.lang.String)>($r3);

        if $i2 != 0 goto label3;

        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        i3 = i3 + 1;

        goto label2;

     label5:
        return z0;
    }

    private boolean isCallingUidSystem()
    {
        com.android.server.usage.UsageStatsService$BinderService r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.usage.UsageStatsService$BinderService;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i1 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i0);

        if $i1 != 1000 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.usage.UsageStatsService$BinderService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        com.android.server.usage.UsageStatsService $r4, $r6;
        android.content.Context $r5;
        boolean $z0;

        r0 := @this: com.android.server.usage.UsageStatsService$BinderService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r4 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        $r5 = virtualinvoke $r4.<com.android.server.usage.UsageStatsService: android.content.Context getContext()>();

        $z0 = staticinvoke <com.android.internal.util.DumpUtils: boolean checkDumpAndUsageStatsPermission(android.content.Context,java.lang.String,java.io.PrintWriter)>($r5, "UsageStatsService", r2);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r6 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        virtualinvoke $r6.<com.android.server.usage.UsageStatsService: void dump(java.lang.String[],java.io.PrintWriter)>(r3, r2);

        return;
    }

    public void forceUsageSourceSettingRead()
    {
        com.android.server.usage.UsageStatsService$BinderService r0;
        com.android.server.usage.UsageStatsService $r1;

        r0 := @this: com.android.server.usage.UsageStatsService$BinderService;

        $r1 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        staticinvoke <com.android.server.usage.UsageStatsService: void access$1900(com.android.server.usage.UsageStatsService)>($r1);

        return;
    }

    public int getAppStandbyBucket(java.lang.String, java.lang.String, int)
    {
        com.android.server.usage.UsageStatsService$BinderService r0;
        int i0, i1, $i3, i5, i6, i7;
        boolean z0, $z1;
        long l2, $l4;
        android.app.IActivityManager $r1;
        com.android.server.usage.UsageStatsService $r2, $r10, $r11;
        android.content.pm.PackageManagerInternal $r3;
        java.lang.StringBuilder $r4;
        java.lang.IllegalArgumentException $r8;
        java.lang.String $r9, r17, r18;
        com.android.server.usage.AppStandbyInternal $r12;
        java.lang.SecurityException $r13;
        android.os.RemoteException $r14;
        java.lang.RuntimeException $r15;
        java.lang.Throwable $r16;

        r0 := @this: com.android.server.usage.UsageStatsService$BinderService;

        r17 := @parameter0: java.lang.String;

        r18 := @parameter1: java.lang.String;

        i5 := @parameter2: int;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

     label1:
        $r1 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i6 = interfaceinvoke $r1.<android.app.IActivityManager: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>($i3, i0, i5, 0, 0, "getAppStandbyBucket", null);

     label2:
        $r2 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        $r3 = $r2.<com.android.server.usage.UsageStatsService: android.content.pm.PackageManagerInternal mPackageManagerInternal>;

        i1 = virtualinvoke $r3.<android.content.pm.PackageManagerInternal: int getPackageUid(java.lang.String,int,int)>(r17, 0, i6);

        if i1 == i0 goto label4;

        $z1 = specialinvoke r0.<com.android.server.usage.UsageStatsService$BinderService: boolean hasPermission(java.lang.String)>(r18);

        if $z1 == 0 goto label3;

        goto label4;

     label3:
        $r13 = new java.lang.SecurityException;

        specialinvoke $r13.<java.lang.SecurityException: void <init>(java.lang.String)>("Don\'t have permission to query app standby bucket");

        throw $r13;

     label4:
        if i1 < 0 goto label8;

        $r10 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        z0 = staticinvoke <com.android.server.usage.UsageStatsService: boolean access$1300(com.android.server.usage.UsageStatsService,int,int)>($r10, i0, i6);

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label5:
        $r11 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        $r12 = $r11.<com.android.server.usage.UsageStatsService: com.android.server.usage.AppStandbyInternal mAppStandby>;

        $l4 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        i7 = interfaceinvoke $r12.<com.android.server.usage.AppStandbyInternal: int getAppStandbyBucket(java.lang.String,int,long,boolean)>(r17, i6, $l4, z0);

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return i7;

     label7:
        $r16 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r16;

     label8:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot get standby bucket for non existent package (");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label9:
        $r14 := @caughtexception;

        $r15 = virtualinvoke $r14.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r15;

        catch android.os.RemoteException from label1 to label2 with label9;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public android.content.pm.ParceledListSlice getAppStandbyBuckets(java.lang.String, int)
    {
        com.android.server.usage.UsageStatsService$BinderService r0;
        int i0, $i2, i3, i4;
        long l1;
        android.app.IActivityManager $r1;
        boolean $z0;
        java.lang.SecurityException $r2;
        com.android.server.usage.UsageStatsService $r3;
        com.android.server.usage.AppStandbyInternal $r4;
        android.content.pm.ParceledListSlice $r5, r11;
        android.os.RemoteException $r6;
        java.lang.RuntimeException $r7;
        java.lang.Throwable $r8;
        java.lang.String r9;
        java.util.List r10;

        r0 := @this: com.android.server.usage.UsageStatsService$BinderService;

        r9 := @parameter0: java.lang.String;

        i3 := @parameter1: int;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

     label01:
        $r1 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i4 = interfaceinvoke $r1.<android.app.IActivityManager: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>($i2, i0, i3, 0, 0, "getAppStandbyBucket", null);

     label02:
        $z0 = specialinvoke r0.<com.android.server.usage.UsageStatsService$BinderService: boolean hasPermission(java.lang.String)>(r9);

        if $z0 == 0 goto label10;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label03:
        $r3 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        $r4 = $r3.<com.android.server.usage.UsageStatsService: com.android.server.usage.AppStandbyInternal mAppStandby>;

        r10 = interfaceinvoke $r4.<com.android.server.usage.AppStandbyInternal: java.util.List getAppStandbyBuckets(int)>(i4);

     label04:
        if r10 != null goto label07;

     label05:
        r11 = staticinvoke <android.content.pm.ParceledListSlice: android.content.pm.ParceledListSlice emptyList()>();

     label06:
        goto label08;

     label07:
        $r5 = new android.content.pm.ParceledListSlice;

        specialinvoke $r5.<android.content.pm.ParceledListSlice: void <init>(java.util.List)>(r10);

        r11 = $r5;

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return r11;

     label09:
        $r8 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r8;

     label10:
        $r2 = new java.lang.SecurityException;

        specialinvoke $r2.<java.lang.SecurityException: void <init>(java.lang.String)>("Don\'t have permission to query app standby bucket");

        throw $r2;

     label11:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r7;

        catch android.os.RemoteException from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
    }

    public int getUsageSource()
    {
        com.android.server.usage.UsageStatsService$BinderService r0;
        java.lang.Object r1;
        int i0;
        boolean $z0;
        java.lang.SecurityException $r3;
        com.android.server.usage.UsageStatsService $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.usage.UsageStatsService$BinderService;

        $z0 = specialinvoke r0.<com.android.server.usage.UsageStatsService$BinderService: boolean hasObserverPermission()>();

        if $z0 == 0 goto label6;

        $r4 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        r1 = staticinvoke <com.android.server.usage.UsageStatsService: java.lang.Object access$1800(com.android.server.usage.UsageStatsService)>($r4);

        entermonitor r1;

     label1:
        $r5 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        i0 = $r5.<com.android.server.usage.UsageStatsService: int mUsageSource>;

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r6;

     label6:
        $r3 = new java.lang.SecurityException;

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>("Caller doesn\'t have OBSERVE_APP_USAGE permission");

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean isAppInactive(java.lang.String, int, java.lang.String)
    {
        com.android.server.usage.UsageStatsService$BinderService r0;
        java.lang.String r1, r11;
        int i0, $i2, $i4, i5, i6;
        long l1, $l3;
        android.app.IActivityManager $r2;
        boolean $z0, $z1, z2, z3;
        com.android.server.usage.UsageStatsService $r3, $r4, $r6;
        com.android.server.usage.AppStandbyInternal $r5;
        android.content.pm.PackageManagerInternal $r7;
        java.lang.Throwable $r8;
        android.os.RemoteException $r9;
        java.lang.RuntimeException $r10;

        r0 := @this: com.android.server.usage.UsageStatsService$BinderService;

        r11 := @parameter0: java.lang.String;

        i5 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

     label1:
        $r2 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i6 = interfaceinvoke $r2.<android.app.IActivityManager: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>($i2, i0, i5, 0, 0, "isAppInactive", null);

     label2:
        $z0 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label4;

        $r6 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        $r7 = $r6.<com.android.server.usage.UsageStatsService: android.content.pm.PackageManagerInternal mPackageManagerInternal>;

        $i4 = virtualinvoke $r7.<android.content.pm.PackageManagerInternal: int getPackageUidInternal(java.lang.String,int,int)>(r1, 0, i6);

        if $i4 == i0 goto label3;

        return 0;

     label3:
        goto label5;

     label4:
        $z1 = specialinvoke r0.<com.android.server.usage.UsageStatsService$BinderService: boolean hasPermission(java.lang.String)>(r1);

        if $z1 != 0 goto label5;

        return 0;

     label5:
        $r3 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        z2 = staticinvoke <com.android.server.usage.UsageStatsService: boolean access$1300(com.android.server.usage.UsageStatsService,int,int)>($r3, i0, i6);

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label6:
        $r4 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        $r5 = $r4.<com.android.server.usage.UsageStatsService: com.android.server.usage.AppStandbyInternal mAppStandby>;

        $l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        z3 = interfaceinvoke $r5.<com.android.server.usage.AppStandbyInternal: boolean isAppIdleFiltered(java.lang.String,int,long,boolean)>(r11, i6, $l3, z2);

     label7:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return z3;

     label8:
        $r8 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r8;

     label9:
        $r9 := @caughtexception;

        $r10 = virtualinvoke $r9.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r10;

        catch android.os.RemoteException from label1 to label2 with label9;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void onCarrierPrivilegedAppsChanged()
    {
        com.android.server.usage.UsageStatsService$BinderService r0;
        com.android.server.usage.UsageStatsService $r1, $r3;
        android.content.Context $r2;
        com.android.server.usage.AppStandbyInternal $r4;

        r0 := @this: com.android.server.usage.UsageStatsService$BinderService;

        $r1 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.usage.UsageStatsService: android.content.Context getContext()>();

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BIND_CARRIER_SERVICES", "onCarrierPrivilegedAppsChanged can only be called by privileged apps.");

        $r3 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        $r4 = $r3.<com.android.server.usage.UsageStatsService: com.android.server.usage.AppStandbyInternal mAppStandby>;

        interfaceinvoke $r4.<com.android.server.usage.AppStandbyInternal: void clearCarrierPrivilegedApps()>();

        return;
    }

    public android.content.pm.ParceledListSlice queryConfigurationStats(int, long, long, java.lang.String) throws android.os.RemoteException
    {
        com.android.server.usage.UsageStatsService$BinderService r0;
        int i0, i3;
        long l1, l2, l4;
        boolean $z0;
        com.android.server.usage.UsageStatsService $r1;
        android.content.pm.ParceledListSlice $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;
        java.util.List r5;

        r0 := @this: com.android.server.usage.UsageStatsService$BinderService;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        r4 := @parameter3: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.usage.UsageStatsService$BinderService: boolean hasPermission(java.lang.String)>(r4);

        if $z0 != 0 goto label1;

        return null;

     label1:
        i3 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        l4 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r1 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        r5 = virtualinvoke $r1.<com.android.server.usage.UsageStatsService: java.util.List queryConfigurationStats(int,int,long,long)>(i3, i0, l1, l2);

     label3:
        if r5 == null goto label6;

     label4:
        $r2 = new android.content.pm.ParceledListSlice;

        specialinvoke $r2.<android.content.pm.ParceledListSlice: void <init>(java.util.List)>(r5);

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        return $r2;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        return null;

     label7:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        throw $r3;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public android.content.pm.ParceledListSlice queryEventStats(int, long, long, java.lang.String) throws android.os.RemoteException
    {
        com.android.server.usage.UsageStatsService$BinderService r0;
        int i0, i3;
        long l1, l2, l4;
        boolean $z0;
        com.android.server.usage.UsageStatsService $r1;
        android.content.pm.ParceledListSlice $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;
        java.util.List r5;

        r0 := @this: com.android.server.usage.UsageStatsService$BinderService;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        r4 := @parameter3: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.usage.UsageStatsService$BinderService: boolean hasPermission(java.lang.String)>(r4);

        if $z0 != 0 goto label1;

        return null;

     label1:
        i3 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        l4 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r1 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        r5 = virtualinvoke $r1.<com.android.server.usage.UsageStatsService: java.util.List queryEventStats(int,int,long,long)>(i3, i0, l1, l2);

     label3:
        if r5 == null goto label6;

     label4:
        $r2 = new android.content.pm.ParceledListSlice;

        specialinvoke $r2.<android.content.pm.ParceledListSlice: void <init>(java.util.List)>(r5);

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        return $r2;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        return null;

     label7:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        throw $r3;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public android.app.usage.UsageEvents queryEvents(long, long, java.lang.String)
    {
        com.android.server.usage.UsageStatsService$BinderService r0;
        long l0, l1, l3;
        int i2, i4, i5;
        boolean z0, z1, z2, z3, $z4;
        com.android.server.usage.UsageStatsService $r1, $r2, $r3, $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        byte b6, b7, b8, b9;
        android.app.usage.UsageEvents r8;

        r0 := @this: com.android.server.usage.UsageStatsService$BinderService;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r7 := @parameter2: java.lang.String;

        $z4 = specialinvoke r0.<com.android.server.usage.UsageStatsService$BinderService: boolean hasPermission(java.lang.String)>(r7);

        if $z4 != 0 goto label1;

        return null;

     label1:
        i2 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i5 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r1 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        z0 = staticinvoke <com.android.server.usage.UsageStatsService: boolean access$1300(com.android.server.usage.UsageStatsService,int,int)>($r1, i4, i2);

        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r2 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        z1 = staticinvoke <com.android.server.usage.UsageStatsService: boolean access$1400(com.android.server.usage.UsageStatsService,int,java.lang.String,int,int)>($r2, i2, r7, i5, i4);

        $r3 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        z2 = staticinvoke <com.android.server.usage.UsageStatsService: boolean access$1500(com.android.server.usage.UsageStatsService,int,int)>($r3, i5, i4);

        $r4 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        z3 = staticinvoke <com.android.server.usage.UsageStatsService: boolean access$1600(com.android.server.usage.UsageStatsService,int,int)>($r4, i5, i4);

     label3:
        b6 = 0;

        if z0 == 0 goto label4;

        b6 = 0 | 1;

     label4:
        b7 = b6;

        if z1 == 0 goto label5;

        b7 = b6 | 2;

     label5:
        b8 = b7;

        if z2 == 0 goto label6;

        b8 = b7 | 8;

     label6:
        b9 = b8;

        if z3 == 0 goto label7;

        b9 = b8 | 4;

     label7:
        $r5 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        r8 = virtualinvoke $r5.<com.android.server.usage.UsageStatsService: android.app.usage.UsageEvents queryEvents(int,long,long,int)>(i2, l0, l1, b9);

     label8:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        return r8;

     label9:
        $r6 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        throw $r6;

        catch java.lang.Throwable from label2 to label3 with label9;
        catch java.lang.Throwable from label7 to label8 with label9;
    }

    public android.app.usage.UsageEvents queryEventsForPackage(long, long, java.lang.String)
    {
        com.android.server.usage.UsageStatsService$BinderService r0;
        long l0, l1, l3;
        int i2, $i4;
        boolean z0;
        com.android.server.usage.UsageStatsService $r1;
        java.lang.Throwable $r2;
        java.lang.String r3;
        android.app.usage.UsageEvents r4;

        r0 := @this: com.android.server.usage.UsageStatsService$BinderService;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r3 := @parameter2: java.lang.String;

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i4);

        specialinvoke r0.<com.android.server.usage.UsageStatsService$BinderService: void checkCallerIsSameApp(java.lang.String)>(r3);

        z0 = specialinvoke r0.<com.android.server.usage.UsageStatsService$BinderService: boolean hasPermission(java.lang.String)>(r3);

        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        r4 = virtualinvoke $r1.<com.android.server.usage.UsageStatsService: android.app.usage.UsageEvents queryEventsForPackage(int,long,long,java.lang.String,boolean)>(i2, l0, l1, r3, z0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        return r4;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.app.usage.UsageEvents queryEventsForPackageForUser(long, long, int, java.lang.String, java.lang.String)
    {
        com.android.server.usage.UsageStatsService$BinderService r0;
        long l0, l1, l3;
        int i2, $i4;
        java.lang.String r1, r6;
        boolean $z0;
        com.android.server.usage.UsageStatsService $r2, $r3;
        android.content.Context $r4;
        java.lang.Throwable $r5;
        android.app.usage.UsageEvents r7;

        r0 := @this: com.android.server.usage.UsageStatsService$BinderService;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        r6 := @parameter3: java.lang.String;

        r1 := @parameter4: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.usage.UsageStatsService$BinderService: boolean hasPermission(java.lang.String)>(r1);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $i4 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        if i2 == $i4 goto label2;

        $r3 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        $r4 = virtualinvoke $r3.<com.android.server.usage.UsageStatsService: android.content.Context getContext()>();

        virtualinvoke $r4.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL", "No permission to query usage stats for this user");

     label2:
        specialinvoke r0.<com.android.server.usage.UsageStatsService$BinderService: void checkCallerIsSystemOrSameApp(java.lang.String)>(r6);

        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label3:
        $r2 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        r7 = virtualinvoke $r2.<com.android.server.usage.UsageStatsService: android.app.usage.UsageEvents queryEventsForPackage(int,long,long,java.lang.String,boolean)>(i2, l0, l1, r6, 1);

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        return r7;

     label5:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        throw $r5;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.app.usage.UsageEvents queryEventsForUser(long, long, int, java.lang.String)
    {
        com.android.server.usage.UsageStatsService$BinderService r0;
        long l0, l1, l4;
        int i2, i3, i5, i6;
        boolean z0, z1, z2, z3, $z4;
        com.android.server.usage.UsageStatsService $r1, $r2, $r3, $r4, $r5, $r6;
        android.content.Context $r7;
        java.lang.Throwable $r8;
        java.lang.String r9;
        byte b7, b8, b9, b10;
        android.app.usage.UsageEvents r10;

        r0 := @this: com.android.server.usage.UsageStatsService$BinderService;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        r9 := @parameter3: java.lang.String;

        $z4 = specialinvoke r0.<com.android.server.usage.UsageStatsService$BinderService: boolean hasPermission(java.lang.String)>(r9);

        if $z4 != 0 goto label01;

        return null;

     label01:
        i5 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        if i2 == i5 goto label02;

        $r6 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        $r7 = virtualinvoke $r6.<com.android.server.usage.UsageStatsService: android.content.Context getContext()>();

        virtualinvoke $r7.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL", "No permission to query usage stats for this user");

     label02:
        i6 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r1 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        z0 = staticinvoke <com.android.server.usage.UsageStatsService: boolean access$1300(com.android.server.usage.UsageStatsService,int,int)>($r1, i6, i5);

        l4 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label03:
        $r2 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        z1 = staticinvoke <com.android.server.usage.UsageStatsService: boolean access$1400(com.android.server.usage.UsageStatsService,int,java.lang.String,int,int)>($r2, i2, r9, i3, i6);

        $r3 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        z2 = staticinvoke <com.android.server.usage.UsageStatsService: boolean access$1600(com.android.server.usage.UsageStatsService,int,int)>($r3, i3, i6);

        $r4 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        z3 = staticinvoke <com.android.server.usage.UsageStatsService: boolean access$1500(com.android.server.usage.UsageStatsService,int,int)>($r4, i3, i6);

     label04:
        b7 = 0;

        if z0 == 0 goto label05;

        b7 = 0 | 1;

     label05:
        b8 = b7;

        if z1 == 0 goto label06;

        b8 = b7 | 2;

     label06:
        b9 = b8;

        if z3 == 0 goto label07;

        b9 = b8 | 8;

     label07:
        b10 = b9;

        if z2 == 0 goto label08;

        b10 = b9 | 4;

     label08:
        $r5 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        r10 = virtualinvoke $r5.<com.android.server.usage.UsageStatsService: android.app.usage.UsageEvents queryEvents(int,long,long,int)>(i2, l0, l1, b10);

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        return r10;

     label10:
        $r8 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        throw $r8;

        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public android.content.pm.ParceledListSlice queryUsageStats(int, long, long, java.lang.String)
    {
        com.android.server.usage.UsageStatsService$BinderService r0;
        int i0, i3, $i5, $i6;
        long l1, l2, l4;
        boolean z0, $z1;
        com.android.server.usage.UsageStatsService $r1, $r2;
        android.content.pm.ParceledListSlice $r3;
        java.lang.Throwable $r4;
        java.lang.String r5;
        java.util.List r6;

        r0 := @this: com.android.server.usage.UsageStatsService$BinderService;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        r5 := @parameter3: java.lang.String;

        $z1 = specialinvoke r0.<com.android.server.usage.UsageStatsService$BinderService: boolean hasPermission(java.lang.String)>(r5);

        if $z1 != 0 goto label1;

        return null;

     label1:
        $r1 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i6 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        z0 = staticinvoke <com.android.server.usage.UsageStatsService: boolean access$1300(com.android.server.usage.UsageStatsService,int,int)>($r1, $i5, $i6);

        i3 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        l4 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r2 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        r6 = virtualinvoke $r2.<com.android.server.usage.UsageStatsService: java.util.List queryUsageStats(int,int,long,long,boolean)>(i3, i0, l1, l2, z0);

     label3:
        if r6 == null goto label6;

     label4:
        $r3 = new android.content.pm.ParceledListSlice;

        specialinvoke $r3.<android.content.pm.ParceledListSlice: void <init>(java.util.List)>(r6);

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        return $r3;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        return null;

     label7:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        throw $r4;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public void registerAppUsageLimitObserver(int, java.lang.String[], long, long, android.app.PendingIntent, java.lang.String)
    {
        com.android.server.usage.UsageStatsService$BinderService r0;
        int i0, i3, i4, $i6;
        long l1, l2, l5;
        android.app.PendingIntent r1;
        java.lang.String r2;
        android.app.admin.DevicePolicyManagerInternal r3;
        com.android.server.usage.UsageStatsService $r4, $r7;
        java.lang.String[] $r5, r11;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r6;
        byte $b7;
        java.lang.NullPointerException $r8;
        java.lang.SecurityException $r9;
        java.lang.Throwable $r10;

        r0 := @this: com.android.server.usage.UsageStatsService$BinderService;

        i0 := @parameter0: int;

        r11 := @parameter1: java.lang.String[];

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        r1 := @parameter4: android.app.PendingIntent;

        r2 := @parameter5: java.lang.String;

        i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r4 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        r3 = staticinvoke <com.android.server.usage.UsageStatsService: android.app.admin.DevicePolicyManagerInternal access$1200(com.android.server.usage.UsageStatsService)>($r4);

        $r5 = newarray (java.lang.String)[2];

        $r5[0] = "android.permission.SUSPEND_APPS";

        $r5[1] = "android.permission.OBSERVE_APP_USAGE";

        $z0 = specialinvoke r0.<com.android.server.usage.UsageStatsService$BinderService: boolean hasPermissions(java.lang.String,java.lang.String[])>(r2, $r5);

        if $z0 != 0 goto label2;

        if r3 == null goto label1;

        $z1 = virtualinvoke r3.<android.app.admin.DevicePolicyManagerInternal: boolean isActiveSupervisionApp(int)>(i3);

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        $r9 = new java.lang.SecurityException;

        specialinvoke $r9.<java.lang.SecurityException: void <init>(java.lang.String)>("Caller must be the active supervision app or it must have both SUSPEND_APPS and OBSERVE_APP_USAGE permissions");

        throw $r9;

     label2:
        if r11 == null goto label8;

        $i6 = lengthof r11;

        if $i6 == 0 goto label8;

        if r1 != null goto label4;

        $b7 = l2 cmp l1;

        if $b7 < 0 goto label3;

        goto label4;

     label3:
        $r8 = new java.lang.NullPointerException;

        specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>("callbackIntent can\'t be null");

        throw $r8;

     label4:
        i4 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i3);

        l5 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label5:
        $r7 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        virtualinvoke $r7.<com.android.server.usage.UsageStatsService: void registerAppUsageLimitObserver(int,int,java.lang.String[],long,long,android.app.PendingIntent,int)>(i3, i0, r11, l1, l2, r1, i4);

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l5);

        return;

     label7:
        $r10 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l5);

        throw $r10;

     label8:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must specify at least one package");

        throw $r6;

        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public void registerAppUsageObserver(int, java.lang.String[], long, android.app.PendingIntent, java.lang.String)
    {
        com.android.server.usage.UsageStatsService$BinderService r0;
        int i0, i2, i3, $i5;
        long l1, l4;
        android.app.PendingIntent r1;
        java.lang.String r2;
        boolean $z0;
        java.lang.SecurityException $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.NullPointerException $r5;
        com.android.server.usage.UsageStatsService $r6;
        java.lang.Throwable $r7;
        java.lang.String[] r8;

        r0 := @this: com.android.server.usage.UsageStatsService$BinderService;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String[];

        l1 := @parameter2: long;

        r1 := @parameter3: android.app.PendingIntent;

        r2 := @parameter4: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.usage.UsageStatsService$BinderService: boolean hasObserverPermission()>();

        if $z0 == 0 goto label6;

        if r8 == null goto label5;

        $i5 = lengthof r8;

        if $i5 == 0 goto label5;

        if r1 == null goto label4;

        i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i2);

        l4 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r6 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        virtualinvoke $r6.<com.android.server.usage.UsageStatsService: void registerAppUsageObserver(int,int,java.lang.String[],long,android.app.PendingIntent,int)>(i2, i0, r8, l1, r1, i3);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        return;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        throw $r7;

     label4:
        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("callbackIntent can\'t be null");

        throw $r5;

     label5:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must specify at least one package");

        throw $r4;

     label6:
        $r3 = new java.lang.SecurityException;

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>("Caller doesn\'t have OBSERVE_APP_USAGE permission");

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void registerUsageSessionObserver(int, java.lang.String[], long, long, android.app.PendingIntent, android.app.PendingIntent, java.lang.String)
    {
        com.android.server.usage.UsageStatsService$BinderService r0;
        int i0, i3, i4, $i6;
        long l1, l2, l5;
        android.app.PendingIntent r1, r2;
        java.lang.String r3;
        boolean $z0;
        java.lang.SecurityException $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.NullPointerException $r6;
        com.android.server.usage.UsageStatsService $r7;
        java.lang.Throwable $r8;
        java.lang.String[] r9;

        r0 := @this: com.android.server.usage.UsageStatsService$BinderService;

        i0 := @parameter0: int;

        r9 := @parameter1: java.lang.String[];

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        r1 := @parameter4: android.app.PendingIntent;

        r2 := @parameter5: android.app.PendingIntent;

        r3 := @parameter6: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.usage.UsageStatsService$BinderService: boolean hasObserverPermission()>();

        if $z0 == 0 goto label6;

        if r9 == null goto label5;

        $i6 = lengthof r9;

        if $i6 == 0 goto label5;

        if r1 == null goto label4;

        i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i4 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i3);

        l5 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r7 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        virtualinvoke $r7.<com.android.server.usage.UsageStatsService: void registerUsageSessionObserver(int,int,java.lang.String[],long,long,android.app.PendingIntent,android.app.PendingIntent,int)>(i3, i0, r9, l1, l2, r1, r2, i4);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l5);

        return;

     label3:
        $r8 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l5);

        throw $r8;

     label4:
        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("limitReachedCallbackIntent can\'t be null");

        throw $r6;

     label5:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must specify at least one observed entity");

        throw $r5;

     label6:
        $r4 = new java.lang.SecurityException;

        specialinvoke $r4.<java.lang.SecurityException: void <init>(java.lang.String)>("Caller doesn\'t have OBSERVE_APP_USAGE permission");

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void reportChooserSelection(java.lang.String, int, java.lang.String, java.lang.String[], java.lang.String)
    {
        com.android.server.usage.UsageStatsService$BinderService r0;
        java.lang.String r1, r2, r4;
        int i0;
        java.lang.String[] r3;
        android.app.usage.UsageEvents$Event $r6;
        long $l1;
        com.android.server.usage.UsageStatsService $r7;

        r0 := @this: com.android.server.usage.UsageStatsService$BinderService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String[];

        r4 := @parameter4: java.lang.String;

        if r1 != null goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UsageStatsService", "Event report user selecting a null package");

        return;

     label1:
        $r6 = new android.app.usage.UsageEvents$Event;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke $r6.<android.app.usage.UsageEvents$Event: void <init>(int,long)>(9, $l1);

        $r6.<android.app.usage.UsageEvents$Event: java.lang.String mPackage> = r1;

        $r6.<android.app.usage.UsageEvents$Event: java.lang.String mAction> = r4;

        $r6.<android.app.usage.UsageEvents$Event: java.lang.String mContentType> = r2;

        $r6.<android.app.usage.UsageEvents$Event: java.lang.String[] mContentAnnotations> = r3;

        $r7 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        staticinvoke <com.android.server.usage.UsageStatsService: void access$100(com.android.server.usage.UsageStatsService,int,android.app.usage.UsageEvents$Event)>($r7, i0, $r6);

        return;
    }

    public void reportPastUsageStart(android.os.IBinder, java.lang.String, long, java.lang.String)
    {
        com.android.server.usage.UsageStatsService$BinderService r0;
        java.lang.String r1, r2, $r12, $r16;
        long l0, l2;
        int i1, $i3, $i4, $i5;
        android.util.SparseArray r3, $r6, $r18;
        com.android.server.usage.UsageStatsService $r4, $r5, $r13, $r14, $r17;
        java.lang.Object $r7;
        boolean $z0;
        com.android.server.usage.AppTimeLimitController $r15;
        java.lang.Throwable $r19, $r20, $r21;
        android.os.IBinder r22;
        android.util.ArraySet r23, r24;
        java.lang.IllegalArgumentException r25;
        java.lang.StringBuilder r26;

        r0 := @this: com.android.server.usage.UsageStatsService$BinderService;

        r22 := @parameter0: android.os.IBinder;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        r2 := @parameter3: java.lang.String;

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i3);

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        $r4 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        r3 = $r4.<com.android.server.usage.UsageStatsService: android.util.SparseArray mUsageReporters>;

        entermonitor r3;

     label02:
        $r5 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        $r6 = $r5.<com.android.server.usage.UsageStatsService: android.util.SparseArray mUsageReporters>;

        $i4 = virtualinvoke r22.<java.lang.Object: int hashCode()>();

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>($i4);

        r23 = (android.util.ArraySet) $r7;

     label03:
        r24 = r23;

        if r23 != null goto label06;

     label04:
        r24 = new android.util.ArraySet;

        specialinvoke r24.<android.util.ArraySet: void <init>()>();

     label05:
        $r17 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        $r18 = $r17.<com.android.server.usage.UsageStatsService: android.util.SparseArray mUsageReporters>;

        $i5 = virtualinvoke r22.<java.lang.Object: int hashCode()>();

        virtualinvoke $r18.<android.util.SparseArray: void put(int,java.lang.Object)>($i5, r24);

     label06:
        exitmonitor r3;

     label07:
        entermonitor r24;

     label08:
        $z0 = virtualinvoke r24.<android.util.ArraySet: boolean add(java.lang.Object)>(r1);

        if $z0 == 0 goto label11;

        exitmonitor r24;

     label09:
        $r13 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        $r15 = $r13.<com.android.server.usage.UsageStatsService: com.android.server.usage.AppTimeLimitController mAppTimeLimit>;

        $r14 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        $r16 = staticinvoke <com.android.server.usage.UsageStatsService: java.lang.String access$1700(com.android.server.usage.UsageStatsService,java.lang.String,java.lang.String)>($r14, r2, r1);

        virtualinvoke $r15.<com.android.server.usage.AppTimeLimitController: void noteUsageStart(java.lang.String,int,long)>($r16, i1, l0);

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label11:
        r25 = new java.lang.IllegalArgumentException;

        r26 = new java.lang.StringBuilder;

        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is already reported as started for this activity");

        $r12 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw r25;

     label12:
        $r19 := @caughtexception;

     label13:
        exitmonitor r24;

     label14:
        throw $r19;

     label15:
        $r21 := @caughtexception;

     label16:
        exitmonitor r3;

     label17:
        throw $r21;

     label18:
        $r20 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r20;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label02 to label03 with label15;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch java.lang.Throwable from label11 to label12 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label16 to label17 with label15;
        catch java.lang.Throwable from label17 to label18 with label18;
    }

    public void reportUsageStart(android.os.IBinder, java.lang.String, java.lang.String)
    {
        com.android.server.usage.UsageStatsService$BinderService r0;
        android.os.IBinder r1;
        java.lang.String r2, r3;

        r0 := @this: com.android.server.usage.UsageStatsService$BinderService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        virtualinvoke r0.<com.android.server.usage.UsageStatsService$BinderService: void reportPastUsageStart(android.os.IBinder,java.lang.String,long,java.lang.String)>(r1, r2, 0L, r3);

        return;
    }

    public void reportUsageStop(android.os.IBinder, java.lang.String, java.lang.String)
    {
        com.android.server.usage.UsageStatsService$BinderService r0;
        java.lang.String r1, $r10, $r15, $r19, r24;
        int i0, $i2, $i3;
        long l1;
        com.android.server.usage.UsageStatsService $r2, $r3, $r16, $r17;
        android.util.SparseArray $r4, r25;
        java.lang.Object $r5;
        boolean $z0;
        com.android.server.usage.AppTimeLimitController $r18;
        java.lang.Throwable $r20, $r21, $r22;
        android.os.IBinder r23;
        android.util.ArraySet r26;
        java.lang.IllegalArgumentException r27, r30;
        java.lang.StringBuilder r28, r31;

        r0 := @this: com.android.server.usage.UsageStatsService$BinderService;

        r23 := @parameter0: android.os.IBinder;

        r24 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i0 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i2);

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        $r2 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        r25 = $r2.<com.android.server.usage.UsageStatsService: android.util.SparseArray mUsageReporters>;

        entermonitor r25;

     label02:
        $r3 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        $r4 = $r3.<com.android.server.usage.UsageStatsService: android.util.SparseArray mUsageReporters>;

        $i3 = virtualinvoke r23.<java.lang.Object: int hashCode()>();

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>($i3);

        r26 = (android.util.ArraySet) $r5;

     label03:
        if r26 == null goto label13;

     label04:
        exitmonitor r25;

     label05:
        entermonitor r26;

     label06:
        $z0 = virtualinvoke r26.<android.util.ArraySet: boolean remove(java.lang.Object)>(r24);

        if $z0 == 0 goto label09;

        exitmonitor r26;

     label07:
        $r16 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        $r18 = $r16.<com.android.server.usage.UsageStatsService: com.android.server.usage.AppTimeLimitController mAppTimeLimit>;

        $r17 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        $r19 = staticinvoke <com.android.server.usage.UsageStatsService: java.lang.String access$1700(com.android.server.usage.UsageStatsService,java.lang.String,java.lang.String)>($r17, r1, r24);

        virtualinvoke $r18.<com.android.server.usage.AppTimeLimitController: void noteUsageStop(java.lang.String,int)>($r19, i0);

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label09:
        r27 = new java.lang.IllegalArgumentException;

        r28 = new java.lang.StringBuilder;

        specialinvoke r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is already reported as stopped for this activity");

        $r15 = virtualinvoke r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw r27;

     label10:
        $r21 := @caughtexception;

     label11:
        exitmonitor r26;

     label12:
        throw $r21;

     label13:
        r30 = new java.lang.IllegalArgumentException;

        r31 = new java.lang.StringBuilder;

        specialinvoke r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown reporter trying to stop token ");

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r30.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw r30;

     label14:
        $r22 := @caughtexception;

     label15:
        exitmonitor r25;

     label16:
        throw $r22;

     label17:
        $r20 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r20;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label02 to label03 with label14;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label09 to label10 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label13 to label14 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
        catch java.lang.Throwable from label16 to label17 with label17;
    }

    public void setAppInactive(java.lang.String, boolean, int)
    {
        com.android.server.usage.UsageStatsService$BinderService r0;
        boolean z0;
        long l0;
        android.app.IActivityManager $r1;
        int $i1, i2, i3, i4, i5;
        com.android.server.usage.UsageStatsService $r2, $r4, $r6;
        android.content.Context $r3;
        com.android.server.usage.AppStandbyInternal $r5, $r7;
        java.lang.Throwable $r8;
        android.os.RemoteException $r9;
        java.lang.RuntimeException $r10;
        java.lang.String r11;

        r0 := @this: com.android.server.usage.UsageStatsService$BinderService;

        r11 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        i2 := @parameter2: int;

        i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

     label1:
        $r1 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i4 = interfaceinvoke $r1.<android.app.IActivityManager: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>($i1, i3, i2, 0, 1, "setAppInactive", null);

     label2:
        $r2 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        $r3 = virtualinvoke $r2.<com.android.server.usage.UsageStatsService: android.content.Context getContext()>();

        virtualinvoke $r3.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.CHANGE_APP_IDLE_STATE", "No permission to change app idle state");

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label3:
        $r4 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        $r5 = $r4.<com.android.server.usage.UsageStatsService: com.android.server.usage.AppStandbyInternal mAppStandby>;

        i5 = interfaceinvoke $r5.<com.android.server.usage.AppStandbyInternal: int getAppId(java.lang.String)>(r11);

     label4:
        if i5 >= 0 goto label5;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label5:
        $r6 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        $r7 = $r6.<com.android.server.usage.UsageStatsService: com.android.server.usage.AppStandbyInternal mAppStandby>;

        interfaceinvoke $r7.<com.android.server.usage.AppStandbyInternal: void setAppIdleAsync(java.lang.String,boolean,int)>(r11, z0, i4);

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label7:
        $r8 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r8;

     label8:
        $r9 := @caughtexception;

        $r10 = virtualinvoke $r9.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r10;

        catch android.os.RemoteException from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public void setAppStandbyBucket(java.lang.String, int, int)
    {
        com.android.server.usage.UsageStatsService$BinderService r0;
        int i0, i1, i2, i3;
        long l4;
        com.android.server.usage.UsageStatsService $r1, $r3;
        android.content.Context $r2;
        com.android.server.usage.AppStandbyInternal $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;

        r0 := @this: com.android.server.usage.UsageStatsService$BinderService;

        r6 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.usage.UsageStatsService: android.content.Context getContext()>();

        virtualinvoke $r2.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.CHANGE_APP_IDLE_STATE", "No permission to change app standby state");

        i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        l4 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        $r4 = $r3.<com.android.server.usage.UsageStatsService: com.android.server.usage.AppStandbyInternal mAppStandby>;

        interfaceinvoke $r4.<com.android.server.usage.AppStandbyInternal: void setAppStandbyBucket(java.lang.String,int,int,int,int)>(r6, i0, i1, i2, i3);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setAppStandbyBuckets(android.content.pm.ParceledListSlice, int)
    {
        com.android.server.usage.UsageStatsService$BinderService r0;
        int i0, i1, i2;
        long l3;
        com.android.server.usage.UsageStatsService $r1, $r3;
        android.content.Context $r2;
        com.android.server.usage.AppStandbyInternal $r4;
        java.util.List $r5;
        java.lang.Throwable $r6;
        android.content.pm.ParceledListSlice r7;

        r0 := @this: com.android.server.usage.UsageStatsService$BinderService;

        r7 := @parameter0: android.content.pm.ParceledListSlice;

        i0 := @parameter1: int;

        $r1 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.usage.UsageStatsService: android.content.Context getContext()>();

        virtualinvoke $r2.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.CHANGE_APP_IDLE_STATE", "No permission to change app standby state");

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        $r4 = $r3.<com.android.server.usage.UsageStatsService: com.android.server.usage.AppStandbyInternal mAppStandby>;

        $r5 = virtualinvoke r7.<android.content.pm.ParceledListSlice: java.util.List getList()>();

        interfaceinvoke $r4.<com.android.server.usage.AppStandbyInternal: void setAppStandbyBuckets(java.util.List,int,int,int)>($r5, i0, i1, i2);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        return;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void unregisterAppUsageLimitObserver(int, java.lang.String)
    {
        com.android.server.usage.UsageStatsService$BinderService r0;
        int i0, i1, i2;
        android.app.admin.DevicePolicyManagerInternal r1;
        long l3;
        com.android.server.usage.UsageStatsService $r2, $r4;
        java.lang.String[] $r3;
        boolean $z0, $z1;
        java.lang.SecurityException $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: com.android.server.usage.UsageStatsService$BinderService;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r2 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        r1 = staticinvoke <com.android.server.usage.UsageStatsService: android.app.admin.DevicePolicyManagerInternal access$1200(com.android.server.usage.UsageStatsService)>($r2);

        $r3 = newarray (java.lang.String)[2];

        $r3[0] = "android.permission.SUSPEND_APPS";

        $r3[1] = "android.permission.OBSERVE_APP_USAGE";

        $z0 = specialinvoke r0.<com.android.server.usage.UsageStatsService$BinderService: boolean hasPermissions(java.lang.String,java.lang.String[])>(r7, $r3);

        if $z0 != 0 goto label2;

        if r1 == null goto label1;

        $z1 = virtualinvoke r1.<android.app.admin.DevicePolicyManagerInternal: boolean isActiveSupervisionApp(int)>(i1);

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        $r5 = new java.lang.SecurityException;

        specialinvoke $r5.<java.lang.SecurityException: void <init>(java.lang.String)>("Caller must be the active supervision app or it must have both SUSPEND_APPS and OBSERVE_APP_USAGE permissions");

        throw $r5;

     label2:
        i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label3:
        $r4 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        virtualinvoke $r4.<com.android.server.usage.UsageStatsService: void unregisterAppUsageLimitObserver(int,int,int)>(i1, i0, i2);

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        return;

     label5:
        $r6 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        throw $r6;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void unregisterAppUsageObserver(int, java.lang.String)
    {
        com.android.server.usage.UsageStatsService$BinderService r0;
        int i0, i1, i2;
        long l3;
        boolean $z0;
        java.lang.SecurityException $r1;
        com.android.server.usage.UsageStatsService $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.usage.UsageStatsService$BinderService;

        i0 := @parameter0: int;

        r4 := @parameter1: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.usage.UsageStatsService$BinderService: boolean hasObserverPermission()>();

        if $z0 == 0 goto label4;

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        virtualinvoke $r2.<com.android.server.usage.UsageStatsService: void unregisterAppUsageObserver(int,int,int)>(i1, i0, i2);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        return;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        throw $r3;

     label4:
        $r1 = new java.lang.SecurityException;

        specialinvoke $r1.<java.lang.SecurityException: void <init>(java.lang.String)>("Caller doesn\'t have OBSERVE_APP_USAGE permission");

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void unregisterUsageSessionObserver(int, java.lang.String)
    {
        com.android.server.usage.UsageStatsService$BinderService r0;
        int i0, i1, i2;
        long l3;
        boolean $z0;
        java.lang.SecurityException $r1;
        com.android.server.usage.UsageStatsService $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.usage.UsageStatsService$BinderService;

        i0 := @parameter0: int;

        r4 := @parameter1: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.usage.UsageStatsService$BinderService: boolean hasObserverPermission()>();

        if $z0 == 0 goto label4;

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.usage.UsageStatsService$BinderService: com.android.server.usage.UsageStatsService this$0>;

        virtualinvoke $r2.<com.android.server.usage.UsageStatsService: void unregisterUsageSessionObserver(int,int,int)>(i1, i0, i2);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        return;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        throw $r3;

     label4:
        $r1 = new java.lang.SecurityException;

        specialinvoke $r1.<java.lang.SecurityException: void <init>(java.lang.String)>("Caller doesn\'t have OBSERVE_APP_USAGE permission");

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
