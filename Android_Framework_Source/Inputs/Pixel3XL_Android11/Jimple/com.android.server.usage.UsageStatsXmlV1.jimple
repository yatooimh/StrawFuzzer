final class com.android.server.usage.UsageStatsXmlV1 extends java.lang.Object
{
    private static final java.lang.String ACTIVE_ATTR;
    private static final java.lang.String APP_LAUNCH_COUNT_ATTR;
    private static final java.lang.String CATEGORY_TAG;
    private static final java.lang.String CHOOSER_COUNT_TAG;
    private static final java.lang.String CLASS_ATTR;
    private static final java.lang.String CONFIGURATIONS_TAG;
    private static final java.lang.String CONFIG_TAG;
    private static final java.lang.String COUNT;
    private static final java.lang.String COUNT_ATTR;
    private static final java.lang.String END_TIME_ATTR;
    private static final java.lang.String EVENT_LOG_TAG;
    private static final java.lang.String EVENT_TAG;
    private static final java.lang.String FLAGS_ATTR;
    private static final java.lang.String INSTANCE_ID_ATTR;
    private static final java.lang.String INTERACTIVE_TAG;
    private static final java.lang.String KEYGUARD_HIDDEN_TAG;
    private static final java.lang.String KEYGUARD_SHOWN_TAG;
    private static final java.lang.String LAST_EVENT_ATTR;
    private static final java.lang.String LAST_TIME_ACTIVE_ATTR;
    private static final java.lang.String LAST_TIME_SERVICE_USED_ATTR;
    private static final java.lang.String LAST_TIME_VISIBLE_ATTR;
    private static final java.lang.String MAJOR_VERSION_ATTR;
    private static final java.lang.String MINOR_VERSION_ATTR;
    private static final java.lang.String NAME;
    private static final java.lang.String NON_INTERACTIVE_TAG;
    private static final java.lang.String NOTIFICATION_CHANNEL_ATTR;
    private static final java.lang.String PACKAGES_TAG;
    private static final java.lang.String PACKAGE_ATTR;
    private static final java.lang.String PACKAGE_TAG;
    private static final java.lang.String SHORTCUT_ID_ATTR;
    private static final java.lang.String STANDBY_BUCKET_ATTR;
    private static final java.lang.String TAG;
    private static final java.lang.String TIME_ATTR;
    private static final java.lang.String TOTAL_TIME_ACTIVE_ATTR;
    private static final java.lang.String TOTAL_TIME_SERVICE_USED_ATTR;
    private static final java.lang.String TOTAL_TIME_VISIBLE_ATTR;
    private static final java.lang.String TYPE_ATTR;

    private void <init>()
    {
        com.android.server.usage.UsageStatsXmlV1 r0;

        r0 := @this: com.android.server.usage.UsageStatsXmlV1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static void loadChooserCounts(org.xmlpull.v1.XmlPullParser, android.app.usage.UsageStats, java.lang.String) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        android.app.usage.UsageStats r1;
        java.lang.String r2, r15, r16;
        android.util.ArrayMap $r3, $r4, $r5, $r7, $r10, $r11, $r13;
        boolean $z0, $z1, $z2;
        java.lang.Object $r6;
        java.lang.Integer $r8;
        int i0, i1;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: android.app.usage.UsageStats;

        r2 := @parameter2: java.lang.String;

        if r2 != null goto label1;

        return;

     label1:
        $r3 = r1.<android.app.usage.UsageStats: android.util.ArrayMap mChooserCounts>;

        if $r3 != null goto label2;

        $r13 = new android.util.ArrayMap;

        specialinvoke $r13.<android.util.ArrayMap: void <init>()>();

        r1.<android.app.usage.UsageStats: android.util.ArrayMap mChooserCounts> = $r13;

     label2:
        $r4 = r1.<android.app.usage.UsageStats: android.util.ArrayMap mChooserCounts>;

        $z0 = virtualinvoke $r4.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r2);

        if $z0 != 0 goto label3;

        $r10 = new android.util.ArrayMap;

        specialinvoke $r10.<android.util.ArrayMap: void <init>()>();

        $r11 = r1.<android.app.usage.UsageStats: android.util.ArrayMap mChooserCounts>;

        virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r10);

     label3:
        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i0 == 1 goto label7;

        r15 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        if i0 != 3 goto label4;

        $z2 = virtualinvoke r15.<java.lang.String: boolean equals(java.lang.Object)>("chosen_action");

        if $z2 == 0 goto label4;

        goto label7;

     label4:
        if i0 == 2 goto label5;

        goto label3;

     label5:
        $z1 = virtualinvoke r15.<java.lang.String: boolean equals(java.lang.Object)>("category");

        if $z1 == 0 goto label6;

        r16 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.String readStringAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "name");

        i1 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "count");

        $r5 = r1.<android.app.usage.UsageStats: android.util.ArrayMap mChooserCounts>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        $r7 = (android.util.ArrayMap) $r6;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r16, $r8);

     label6:
        goto label3;

     label7:
        return;
    }

    private static void loadConfigStats(org.xmlpull.v1.XmlPullParser, com.android.server.usage.IntervalStats) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        com.android.server.usage.IntervalStats r1;
        android.content.res.Configuration $r2, $r3;
        long $l0, $l1, $l2, $l3;
        int $i4;
        boolean $z0;
        android.app.usage.ConfigurationStats r5;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: com.android.server.usage.IntervalStats;

        $r2 = new android.content.res.Configuration;

        specialinvoke $r2.<android.content.res.Configuration: void <init>()>();

        staticinvoke <android.content.res.Configuration: void readXmlAttrs(org.xmlpull.v1.XmlPullParser,android.content.res.Configuration)>(r0, $r2);

        r5 = virtualinvoke r1.<com.android.server.usage.IntervalStats: android.app.usage.ConfigurationStats getOrCreateConfigurationStats(android.content.res.Configuration)>($r2);

        $l0 = r1.<com.android.server.usage.IntervalStats: long beginTime>;

        $l1 = staticinvoke <com.android.internal.util.XmlUtils: long readLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "lastTimeActive");

        $l2 = $l0 + $l1;

        r5.<android.app.usage.ConfigurationStats: long mLastTimeActive> = $l2;

        $l3 = staticinvoke <com.android.internal.util.XmlUtils: long readLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "timeActive");

        r5.<android.app.usage.ConfigurationStats: long mTotalTimeActive> = $l3;

        $i4 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "count");

        r5.<android.app.usage.ConfigurationStats: int mActivationCount> = $i4;

        $z0 = staticinvoke <com.android.internal.util.XmlUtils: boolean readBooleanAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "active");

        if $z0 == 0 goto label1;

        $r3 = r5.<android.app.usage.ConfigurationStats: android.content.res.Configuration mConfiguration>;

        r1.<com.android.server.usage.IntervalStats: android.content.res.Configuration activeConfiguration> = $r3;

     label1:
        return;
    }

    private static void loadCountAndTime(org.xmlpull.v1.XmlPullParser, com.android.server.usage.IntervalStats$EventTracker) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.XmlPullParser r0;
        com.android.server.usage.IntervalStats$EventTracker r1;
        int $i0;
        long $l1;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: com.android.server.usage.IntervalStats$EventTracker;

        $i0 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r0, "count", 0);

        r1.<com.android.server.usage.IntervalStats$EventTracker: int count> = $i0;

        $l1 = staticinvoke <com.android.internal.util.XmlUtils: long readLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r0, "time", 0L);

        r1.<com.android.server.usage.IntervalStats$EventTracker: long duration> = $l1;

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r0);

        return;
    }

    private static void loadEvent(org.xmlpull.v1.XmlPullParser, com.android.server.usage.IntervalStats) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.usage.IntervalStats r0;
        android.app.usage.UsageEvents$Event r1;
        int i0, $i1, $i5, $i6, $i7;
        java.net.ProtocolException $r2;
        java.lang.String $r3, r8, r9, r10, r11, r12;
        long $l2, $l3, $l4;
        android.content.res.Configuration $r4, $r5;
        java.lang.Throwable $r6;
        org.xmlpull.v1.XmlPullParser r7;

        r7 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r0 := @parameter1: com.android.server.usage.IntervalStats;

        r8 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.String readStringAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r7, "package");

        if r8 == null goto label12;

        $r3 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.String readStringAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r7, "class");

        r1 = virtualinvoke r0.<com.android.server.usage.IntervalStats: android.app.usage.UsageEvents$Event buildEvent(java.lang.String,java.lang.String)>(r8, $r3);

        $i1 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r7, "flags", 0);

        r1.<android.app.usage.UsageEvents$Event: int mFlags> = $i1;

        $l2 = r0.<com.android.server.usage.IntervalStats: long beginTime>;

        $l3 = staticinvoke <com.android.internal.util.XmlUtils: long readLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r7, "time");

        $l4 = $l2 + $l3;

        r1.<android.app.usage.UsageEvents$Event: long mTimeStamp> = $l4;

        $i5 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r7, "type");

        r1.<android.app.usage.UsageEvents$Event: int mEventType> = $i5;

     label01:
        $i6 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r7, "instanceId");

        r1.<android.app.usage.UsageEvents$Event: int mInstanceId> = $i6;

     label02:
        goto label04;

     label03:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("UsageStatsXmlV1", "Failed to parse mInstanceId");

     label04:
        i0 = r1.<android.app.usage.UsageEvents$Event: int mEventType>;

        if i0 == 5 goto label10;

        if i0 == 8 goto label08;

        if i0 == 11 goto label07;

        if i0 == 12 goto label05;

        goto label11;

     label05:
        r9 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.String readStringAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r7, "notificationChannel");

        r10 = null;

        if r9 == null goto label06;

        r10 = virtualinvoke r9.<java.lang.String: java.lang.String intern()>();

     label06:
        r1.<android.app.usage.UsageEvents$Event: java.lang.String mNotificationChannelId> = r10;

        goto label11;

     label07:
        $i7 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r7, "standbyBucket", 0);

        r1.<android.app.usage.UsageEvents$Event: int mBucketAndReason> = $i7;

        goto label11;

     label08:
        r11 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.String readStringAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r7, "shortcutId");

        r12 = null;

        if r11 == null goto label09;

        r12 = virtualinvoke r11.<java.lang.String: java.lang.String intern()>();

     label09:
        r1.<android.app.usage.UsageEvents$Event: java.lang.String mShortcutId> = r12;

        goto label11;

     label10:
        $r4 = new android.content.res.Configuration;

        specialinvoke $r4.<android.content.res.Configuration: void <init>()>();

        r1.<android.app.usage.UsageEvents$Event: android.content.res.Configuration mConfiguration> = $r4;

        $r5 = r1.<android.app.usage.UsageEvents$Event: android.content.res.Configuration mConfiguration>;

        staticinvoke <android.content.res.Configuration: void readXmlAttrs(org.xmlpull.v1.XmlPullParser,android.content.res.Configuration)>(r7, $r5);

     label11:
        virtualinvoke r0.<com.android.server.usage.IntervalStats: void addEvent(android.app.usage.UsageEvents$Event)>(r1);

        return;

     label12:
        $r2 = new java.net.ProtocolException;

        specialinvoke $r2.<java.net.ProtocolException: void <init>(java.lang.String)>("no package attribute present");

        throw $r2;

        catch java.io.IOException from label01 to label02 with label03;
    }

    private static void loadUsageStats(org.xmlpull.v1.XmlPullParser, com.android.server.usage.IntervalStats) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        int i0, $i13, $i14;
        java.net.ProtocolException $r2;
        long $l1, $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l12;
        boolean $z0, $z1;
        java.lang.String $r3, r9, r14;
        java.lang.Throwable $r4, $r5, $r6, $r7;
        com.android.server.usage.IntervalStats r8;
        android.app.usage.UsageStats r10;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r8 := @parameter1: com.android.server.usage.IntervalStats;

        r9 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "package");

        if r9 == null goto label20;

        r10 = virtualinvoke r8.<com.android.server.usage.IntervalStats: android.app.usage.UsageStats getOrCreateUsageStats(java.lang.String)>(r9);

        $l1 = r8.<com.android.server.usage.IntervalStats: long beginTime>;

        $l2 = staticinvoke <com.android.internal.util.XmlUtils: long readLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "lastTimeActive");

        $l3 = $l1 + $l2;

        r10.<android.app.usage.UsageStats: long mLastTimeUsed> = $l3;

     label01:
        $l4 = r8.<com.android.server.usage.IntervalStats: long beginTime>;

        $l5 = staticinvoke <com.android.internal.util.XmlUtils: long readLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "lastTimeVisible");

        $l6 = $l4 + $l5;

        r10.<android.app.usage.UsageStats: long mLastTimeVisible> = $l6;

     label02:
        goto label04;

     label03:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("UsageStatsXmlV1", "Failed to parse mLastTimeVisible");

     label04:
        $l7 = r8.<com.android.server.usage.IntervalStats: long beginTime>;

        $l8 = staticinvoke <com.android.internal.util.XmlUtils: long readLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "lastTimeServiceUsed");

        $l9 = $l7 + $l8;

        r10.<android.app.usage.UsageStats: long mLastTimeForegroundServiceUsed> = $l9;

     label05:
        goto label07;

     label06:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("UsageStatsXmlV1", "Failed to parse mLastTimeForegroundServiceUsed");

     label07:
        $l10 = staticinvoke <com.android.internal.util.XmlUtils: long readLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "timeActive");

        r10.<android.app.usage.UsageStats: long mTotalTimeInForeground> = $l10;

     label08:
        $l11 = staticinvoke <com.android.internal.util.XmlUtils: long readLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "timeVisible");

        r10.<android.app.usage.UsageStats: long mTotalTimeVisible> = $l11;

     label09:
        goto label11;

     label10:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("UsageStatsXmlV1", "Failed to parse mTotalTimeVisible");

     label11:
        $l12 = staticinvoke <com.android.internal.util.XmlUtils: long readLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "timeServiceUsed");

        r10.<android.app.usage.UsageStats: long mTotalTimeForegroundServiceUsed> = $l12;

     label12:
        goto label14;

     label13:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("UsageStatsXmlV1", "Failed to parse mTotalTimeForegroundServiceUsed");

     label14:
        $i13 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "lastEvent");

        r10.<android.app.usage.UsageStats: int mLastEvent> = $i13;

        $i14 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r0, "appLaunchCount", 0);

        r10.<android.app.usage.UsageStats: int mAppLaunchCount> = $i14;

     label15:
        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i0 == 1 goto label19;

        r14 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        if i0 != 3 goto label16;

        $z1 = virtualinvoke r14.<java.lang.String: boolean equals(java.lang.Object)>("package");

        if $z1 == 0 goto label16;

        goto label19;

     label16:
        if i0 == 2 goto label17;

        goto label15;

     label17:
        $z0 = virtualinvoke r14.<java.lang.String: boolean equals(java.lang.Object)>("chosen_action");

        if $z0 == 0 goto label18;

        $r3 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.String readStringAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "name");

        staticinvoke <com.android.server.usage.UsageStatsXmlV1: void loadChooserCounts(org.xmlpull.v1.XmlPullParser,android.app.usage.UsageStats,java.lang.String)>(r0, r10, $r3);

     label18:
        goto label15;

     label19:
        return;

     label20:
        $r2 = new java.net.ProtocolException;

        specialinvoke $r2.<java.net.ProtocolException: void <init>(java.lang.String)>("no package attribute present");

        throw $r2;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.io.IOException from label04 to label05 with label06;
        catch java.io.IOException from label08 to label09 with label10;
        catch java.io.IOException from label11 to label12 with label13;
    }

    public static void read(org.xmlpull.v1.XmlPullParser, com.android.server.usage.IntervalStats) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        com.android.server.usage.IntervalStats r1;
        int i0, i1, $i5, $i6, $i7, $i8;
        android.util.ArrayMap $r2, $r3;
        android.app.usage.EventList $r4;
        long $l2, $l3, $l4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        com.android.server.usage.IntervalStats$EventTracker $r5, $r6, $r7, $r8;
        java.lang.Throwable $r9, $r10;
        byte b11;
        java.lang.String r13;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: com.android.server.usage.IntervalStats;

        $r2 = r1.<com.android.server.usage.IntervalStats: android.util.ArrayMap packageStats>;

        virtualinvoke $r2.<android.util.ArrayMap: void clear()>();

        $r3 = r1.<com.android.server.usage.IntervalStats: android.util.ArrayMap configurations>;

        virtualinvoke $r3.<android.util.ArrayMap: void clear()>();

        r1.<com.android.server.usage.IntervalStats: android.content.res.Configuration activeConfiguration> = null;

        $r4 = r1.<com.android.server.usage.IntervalStats: android.app.usage.EventList events>;

        virtualinvoke $r4.<android.app.usage.EventList: void clear()>();

        $l2 = r1.<com.android.server.usage.IntervalStats: long beginTime>;

        $l3 = staticinvoke <com.android.internal.util.XmlUtils: long readLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "endTime");

        $l4 = $l2 + $l3;

        r1.<com.android.server.usage.IntervalStats: long endTime> = $l4;

     label01:
        $i5 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "majorVersion");

        r1.<com.android.server.usage.IntervalStats: int majorVersion> = $i5;

     label02:
        goto label04;

     label03:
        $r10 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("UsageStatsXmlV1", "Failed to parse majorVersion");

     label04:
        $i6 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "minorVersion");

        r1.<com.android.server.usage.IntervalStats: int minorVersion> = $i6;

     label05:
        goto label07;

     label06:
        $r9 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("UsageStatsXmlV1", "Failed to parse minorVersion");

     label07:
        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label08:
        i1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        b11 = 1;

        if i1 == 1 goto label30;

        if i1 != 3 goto label09;

        $i8 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i8 <= i0 goto label30;

     label09:
        if i1 == 2 goto label10;

        goto label08;

     label10:
        r13 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $i7 = virtualinvoke r13.<java.lang.String: int hashCode()>();

        lookupswitch($i7)
        {
            case -1354792126: goto label18;
            case -1169351247: goto label17;
            case -807157790: goto label16;
            case -807062458: goto label15;
            case 96891546: goto label14;
            case 526608426: goto label13;
            case 1844104930: goto label12;
            default: goto label11;
        };

     label11:
        goto label19;

     label12:
        $z0 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("interactive");

        if $z0 == 0 goto label11;

        b11 = 0;

        goto label20;

     label13:
        $z1 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("keyguard-shown");

        if $z1 == 0 goto label11;

        b11 = 2;

        goto label20;

     label14:
        $z2 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("event");

        if $z2 == 0 goto label11;

        b11 = 6;

        goto label20;

     label15:
        $z3 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("package");

        if $z3 == 0 goto label11;

        b11 = 4;

        goto label20;

     label16:
        $z4 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("non-interactive");

        if $z4 == 0 goto label11;

        goto label20;

     label17:
        $z5 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("keyguard-hidden");

        if $z5 == 0 goto label11;

        b11 = 3;

        goto label20;

     label18:
        $z6 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("config");

        if $z6 == 0 goto label11;

        b11 = 5;

        goto label20;

     label19:
        b11 = -1;

     label20:
        tableswitch(b11)
        {
            case 0: goto label28;
            case 1: goto label27;
            case 2: goto label26;
            case 3: goto label25;
            case 4: goto label24;
            case 5: goto label23;
            case 6: goto label22;
            default: goto label21;
        };

     label21:
        goto label29;

     label22:
        staticinvoke <com.android.server.usage.UsageStatsXmlV1: void loadEvent(org.xmlpull.v1.XmlPullParser,com.android.server.usage.IntervalStats)>(r0, r1);

        goto label29;

     label23:
        staticinvoke <com.android.server.usage.UsageStatsXmlV1: void loadConfigStats(org.xmlpull.v1.XmlPullParser,com.android.server.usage.IntervalStats)>(r0, r1);

        goto label29;

     label24:
        staticinvoke <com.android.server.usage.UsageStatsXmlV1: void loadUsageStats(org.xmlpull.v1.XmlPullParser,com.android.server.usage.IntervalStats)>(r0, r1);

        goto label29;

     label25:
        $r5 = r1.<com.android.server.usage.IntervalStats: com.android.server.usage.IntervalStats$EventTracker keyguardHiddenTracker>;

        staticinvoke <com.android.server.usage.UsageStatsXmlV1: void loadCountAndTime(org.xmlpull.v1.XmlPullParser,com.android.server.usage.IntervalStats$EventTracker)>(r0, $r5);

        goto label29;

     label26:
        $r6 = r1.<com.android.server.usage.IntervalStats: com.android.server.usage.IntervalStats$EventTracker keyguardShownTracker>;

        staticinvoke <com.android.server.usage.UsageStatsXmlV1: void loadCountAndTime(org.xmlpull.v1.XmlPullParser,com.android.server.usage.IntervalStats$EventTracker)>(r0, $r6);

        goto label29;

     label27:
        $r7 = r1.<com.android.server.usage.IntervalStats: com.android.server.usage.IntervalStats$EventTracker nonInteractiveTracker>;

        staticinvoke <com.android.server.usage.UsageStatsXmlV1: void loadCountAndTime(org.xmlpull.v1.XmlPullParser,com.android.server.usage.IntervalStats$EventTracker)>(r0, $r7);

        goto label29;

     label28:
        $r8 = r1.<com.android.server.usage.IntervalStats: com.android.server.usage.IntervalStats$EventTracker interactiveTracker>;

        staticinvoke <com.android.server.usage.UsageStatsXmlV1: void loadCountAndTime(org.xmlpull.v1.XmlPullParser,com.android.server.usage.IntervalStats$EventTracker)>(r0, $r8);

     label29:
        goto label08;

     label30:
        return;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.io.IOException from label04 to label05 with label06;
    }

    public static void <clinit>()
    {
        <com.android.server.usage.UsageStatsXmlV1: java.lang.String TYPE_ATTR> = "type";

        <com.android.server.usage.UsageStatsXmlV1: java.lang.String TOTAL_TIME_VISIBLE_ATTR> = "timeVisible";

        <com.android.server.usage.UsageStatsXmlV1: java.lang.String TOTAL_TIME_SERVICE_USED_ATTR> = "timeServiceUsed";

        <com.android.server.usage.UsageStatsXmlV1: java.lang.String TOTAL_TIME_ACTIVE_ATTR> = "timeActive";

        <com.android.server.usage.UsageStatsXmlV1: java.lang.String TIME_ATTR> = "time";

        <com.android.server.usage.UsageStatsXmlV1: java.lang.String TAG> = "UsageStatsXmlV1";

        <com.android.server.usage.UsageStatsXmlV1: java.lang.String STANDBY_BUCKET_ATTR> = "standbyBucket";

        <com.android.server.usage.UsageStatsXmlV1: java.lang.String SHORTCUT_ID_ATTR> = "shortcutId";

        <com.android.server.usage.UsageStatsXmlV1: java.lang.String PACKAGE_TAG> = "package";

        <com.android.server.usage.UsageStatsXmlV1: java.lang.String PACKAGE_ATTR> = "package";

        <com.android.server.usage.UsageStatsXmlV1: java.lang.String PACKAGES_TAG> = "packages";

        <com.android.server.usage.UsageStatsXmlV1: java.lang.String NOTIFICATION_CHANNEL_ATTR> = "notificationChannel";

        <com.android.server.usage.UsageStatsXmlV1: java.lang.String NON_INTERACTIVE_TAG> = "non-interactive";

        <com.android.server.usage.UsageStatsXmlV1: java.lang.String NAME> = "name";

        <com.android.server.usage.UsageStatsXmlV1: java.lang.String MINOR_VERSION_ATTR> = "minorVersion";

        <com.android.server.usage.UsageStatsXmlV1: java.lang.String MAJOR_VERSION_ATTR> = "majorVersion";

        <com.android.server.usage.UsageStatsXmlV1: java.lang.String LAST_TIME_VISIBLE_ATTR> = "lastTimeVisible";

        <com.android.server.usage.UsageStatsXmlV1: java.lang.String LAST_TIME_SERVICE_USED_ATTR> = "lastTimeServiceUsed";

        <com.android.server.usage.UsageStatsXmlV1: java.lang.String LAST_TIME_ACTIVE_ATTR> = "lastTimeActive";

        <com.android.server.usage.UsageStatsXmlV1: java.lang.String LAST_EVENT_ATTR> = "lastEvent";

        <com.android.server.usage.UsageStatsXmlV1: java.lang.String KEYGUARD_SHOWN_TAG> = "keyguard-shown";

        <com.android.server.usage.UsageStatsXmlV1: java.lang.String KEYGUARD_HIDDEN_TAG> = "keyguard-hidden";

        <com.android.server.usage.UsageStatsXmlV1: java.lang.String INTERACTIVE_TAG> = "interactive";

        <com.android.server.usage.UsageStatsXmlV1: java.lang.String INSTANCE_ID_ATTR> = "instanceId";

        <com.android.server.usage.UsageStatsXmlV1: java.lang.String FLAGS_ATTR> = "flags";

        <com.android.server.usage.UsageStatsXmlV1: java.lang.String EVENT_TAG> = "event";

        <com.android.server.usage.UsageStatsXmlV1: java.lang.String EVENT_LOG_TAG> = "event-log";

        <com.android.server.usage.UsageStatsXmlV1: java.lang.String END_TIME_ATTR> = "endTime";

        <com.android.server.usage.UsageStatsXmlV1: java.lang.String COUNT_ATTR> = "count";

        <com.android.server.usage.UsageStatsXmlV1: java.lang.String COUNT> = "count";

        <com.android.server.usage.UsageStatsXmlV1: java.lang.String CONFIG_TAG> = "config";

        <com.android.server.usage.UsageStatsXmlV1: java.lang.String CONFIGURATIONS_TAG> = "configurations";

        <com.android.server.usage.UsageStatsXmlV1: java.lang.String CLASS_ATTR> = "class";

        <com.android.server.usage.UsageStatsXmlV1: java.lang.String CHOOSER_COUNT_TAG> = "chosen_action";

        <com.android.server.usage.UsageStatsXmlV1: java.lang.String CATEGORY_TAG> = "category";

        <com.android.server.usage.UsageStatsXmlV1: java.lang.String APP_LAUNCH_COUNT_ATTR> = "appLaunchCount";

        <com.android.server.usage.UsageStatsXmlV1: java.lang.String ACTIVE_ATTR> = "active";

        return;
    }
}
