public final class com.android.server.usb.UsbAlsaDevice extends java.lang.Object
{
    protected static final boolean DEBUG;
    private static final java.lang.String TAG;
    private android.media.IAudioService mAudioService;
    private final int mCardNum;
    private final java.lang.String mDeviceAddress;
    private java.lang.String mDeviceDescription;
    private java.lang.String mDeviceName;
    private final int mDeviceNum;
    private final boolean mHasInput;
    private final boolean mHasOutput;
    private int mInputState;
    private final boolean mIsInputHeadset;
    private final boolean mIsOutputHeadset;
    private com.android.server.usb.UsbAlsaJackDetector mJackDetector;
    private int mOutputState;
    private boolean mSelected;

    public void <init>(android.media.IAudioService, int, int, java.lang.String, boolean, boolean, boolean, boolean)
    {
        com.android.server.usb.UsbAlsaDevice r0;
        android.media.IAudioService r1;
        int i0, i1;
        java.lang.String r2;
        boolean z0, z1, z2, z3;

        r0 := @this: com.android.server.usb.UsbAlsaDevice;

        r1 := @parameter0: android.media.IAudioService;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        z2 := @parameter6: boolean;

        z3 := @parameter7: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.usb.UsbAlsaDevice: boolean mSelected> = 0;

        r0.<com.android.server.usb.UsbAlsaDevice: java.lang.String mDeviceName> = "";

        r0.<com.android.server.usb.UsbAlsaDevice: java.lang.String mDeviceDescription> = "";

        r0.<com.android.server.usb.UsbAlsaDevice: android.media.IAudioService mAudioService> = r1;

        r0.<com.android.server.usb.UsbAlsaDevice: int mCardNum> = i0;

        r0.<com.android.server.usb.UsbAlsaDevice: int mDeviceNum> = i1;

        r0.<com.android.server.usb.UsbAlsaDevice: java.lang.String mDeviceAddress> = r2;

        r0.<com.android.server.usb.UsbAlsaDevice: boolean mHasOutput> = z0;

        r0.<com.android.server.usb.UsbAlsaDevice: boolean mHasInput> = z1;

        r0.<com.android.server.usb.UsbAlsaDevice: boolean mIsInputHeadset> = z2;

        r0.<com.android.server.usb.UsbAlsaDevice: boolean mIsOutputHeadset> = z3;

        return;
    }

    private boolean isInputJackConnected()
    {
        com.android.server.usb.UsbAlsaDevice r0;
        boolean z0;
        com.android.server.usb.UsbAlsaJackDetector $r1, r3;
        java.lang.Throwable $r2;

        r0 := @this: com.android.server.usb.UsbAlsaDevice;

        entermonitor r0;

     label1:
        r3 = r0.<com.android.server.usb.UsbAlsaDevice: com.android.server.usb.UsbAlsaJackDetector mJackDetector>;

     label2:
        if r3 != null goto label3;

        exitmonitor r0;

        return 1;

     label3:
        $r1 = r0.<com.android.server.usb.UsbAlsaDevice: com.android.server.usb.UsbAlsaJackDetector mJackDetector>;

        z0 = virtualinvoke $r1.<com.android.server.usb.UsbAlsaJackDetector: boolean isInputJackConnected()>();

     label4:
        exitmonitor r0;

        return z0;

     label5:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    private boolean isOutputJackConnected()
    {
        com.android.server.usb.UsbAlsaDevice r0;
        boolean z0;
        com.android.server.usb.UsbAlsaJackDetector $r1, r3;
        java.lang.Throwable $r2;

        r0 := @this: com.android.server.usb.UsbAlsaDevice;

        entermonitor r0;

     label1:
        r3 = r0.<com.android.server.usb.UsbAlsaDevice: com.android.server.usb.UsbAlsaJackDetector mJackDetector>;

     label2:
        if r3 != null goto label3;

        exitmonitor r0;

        return 1;

     label3:
        $r1 = r0.<com.android.server.usb.UsbAlsaDevice: com.android.server.usb.UsbAlsaJackDetector mJackDetector>;

        z0 = virtualinvoke $r1.<com.android.server.usb.UsbAlsaJackDetector: boolean isOutputJackConnected()>();

     label4:
        exitmonitor r0;

        return z0;

     label5:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    private void startJackDetect()
    {
        com.android.server.usb.UsbAlsaDevice r0;
        com.android.server.usb.UsbAlsaJackDetector $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.usb.UsbAlsaDevice;

        entermonitor r0;

     label1:
        $r2 = staticinvoke <com.android.server.usb.UsbAlsaJackDetector: com.android.server.usb.UsbAlsaJackDetector startJackDetect(com.android.server.usb.UsbAlsaDevice)>(r0);

        r0.<com.android.server.usb.UsbAlsaDevice: com.android.server.usb.UsbAlsaJackDetector mJackDetector> = $r2;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void stopJackDetect()
    {
        com.android.server.usb.UsbAlsaDevice r0;
        com.android.server.usb.UsbAlsaJackDetector $r2, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.usb.UsbAlsaDevice;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.usb.UsbAlsaDevice: com.android.server.usb.UsbAlsaJackDetector mJackDetector>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.server.usb.UsbAlsaDevice: com.android.server.usb.UsbAlsaJackDetector mJackDetector>;

        virtualinvoke $r3.<com.android.server.usb.UsbAlsaJackDetector: void pleaseStop()>();

     label2:
        r0.<com.android.server.usb.UsbAlsaDevice: com.android.server.usb.UsbAlsaJackDetector mJackDetector> = null;

     label3:
        exitmonitor r0;

        return;

     label4:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public void dump(com.android.internal.util.dump.DualDumpOutputStream, java.lang.String, long)
    {
        com.android.server.usb.UsbAlsaDevice r0;
        java.lang.String r1, $r2, $r3;
        int $i0, $i1;
        boolean $z0, $z1;
        java.lang.Throwable $r4;
        com.android.internal.util.dump.DualDumpOutputStream r5;
        long l2, l3;

        r0 := @this: com.android.server.usb.UsbAlsaDevice;

        r5 := @parameter0: com.android.internal.util.dump.DualDumpOutputStream;

        r1 := @parameter1: java.lang.String;

        l2 := @parameter2: long;

        entermonitor r0;

     label1:
        l3 = virtualinvoke r5.<com.android.internal.util.dump.DualDumpOutputStream: long start(java.lang.String,long)>(r1, l2);

        $i0 = r0.<com.android.server.usb.UsbAlsaDevice: int mCardNum>;

        virtualinvoke r5.<com.android.internal.util.dump.DualDumpOutputStream: void write(java.lang.String,long,int)>("card", 1120986464257L, $i0);

        $i1 = r0.<com.android.server.usb.UsbAlsaDevice: int mDeviceNum>;

        virtualinvoke r5.<com.android.internal.util.dump.DualDumpOutputStream: void write(java.lang.String,long,int)>("device", 1120986464258L, $i1);

        $r2 = r0.<com.android.server.usb.UsbAlsaDevice: java.lang.String mDeviceName>;

        virtualinvoke r5.<com.android.internal.util.dump.DualDumpOutputStream: void write(java.lang.String,long,java.lang.String)>("name", 1138166333443L, $r2);

        $z0 = r0.<com.android.server.usb.UsbAlsaDevice: boolean mHasOutput>;

        virtualinvoke r5.<com.android.internal.util.dump.DualDumpOutputStream: void write(java.lang.String,long,boolean)>("has_output", 1133871366148L, $z0);

        $z1 = r0.<com.android.server.usb.UsbAlsaDevice: boolean mHasInput>;

        virtualinvoke r5.<com.android.internal.util.dump.DualDumpOutputStream: void write(java.lang.String,long,boolean)>("has_input", 1133871366149L, $z1);

        $r3 = r0.<com.android.server.usb.UsbAlsaDevice: java.lang.String mDeviceAddress>;

        virtualinvoke r5.<com.android.internal.util.dump.DualDumpOutputStream: void write(java.lang.String,long,java.lang.String)>("address", 1138166333446L, $r3);

        virtualinvoke r5.<com.android.internal.util.dump.DualDumpOutputStream: void end(long)>(l3);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean equals(java.lang.Object)
    {
        com.android.server.usb.UsbAlsaDevice r0, r2;
        int $i0, $i1, $i2, $i3;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, z10;
        java.lang.Object r1;

        r0 := @this: com.android.server.usb.UsbAlsaDevice;

        r1 := @parameter0: java.lang.Object;

        z9 = r1 instanceof com.android.server.usb.UsbAlsaDevice;

        if z9 != 0 goto label1;

        return 0;

     label1:
        r2 = (com.android.server.usb.UsbAlsaDevice) r1;

        z10 = 0;

        $i1 = r0.<com.android.server.usb.UsbAlsaDevice: int mCardNum>;

        $i0 = r2.<com.android.server.usb.UsbAlsaDevice: int mCardNum>;

        if $i1 != $i0 goto label2;

        z10 = 0;

        $i3 = r0.<com.android.server.usb.UsbAlsaDevice: int mDeviceNum>;

        $i2 = r2.<com.android.server.usb.UsbAlsaDevice: int mDeviceNum>;

        if $i3 != $i2 goto label2;

        z10 = 0;

        $z2 = r0.<com.android.server.usb.UsbAlsaDevice: boolean mHasOutput>;

        $z1 = r2.<com.android.server.usb.UsbAlsaDevice: boolean mHasOutput>;

        if $z2 != $z1 goto label2;

        z10 = 0;

        $z4 = r0.<com.android.server.usb.UsbAlsaDevice: boolean mHasInput>;

        $z3 = r2.<com.android.server.usb.UsbAlsaDevice: boolean mHasInput>;

        if $z4 != $z3 goto label2;

        z10 = 0;

        $z6 = r0.<com.android.server.usb.UsbAlsaDevice: boolean mIsInputHeadset>;

        $z5 = r2.<com.android.server.usb.UsbAlsaDevice: boolean mIsInputHeadset>;

        if $z6 != $z5 goto label2;

        z10 = 0;

        $z8 = r0.<com.android.server.usb.UsbAlsaDevice: boolean mIsOutputHeadset>;

        $z7 = r2.<com.android.server.usb.UsbAlsaDevice: boolean mIsOutputHeadset>;

        if $z8 != $z7 goto label2;

        z10 = 1;

     label2:
        return z10;
    }

    public java.lang.String getAlsaCardDeviceString()
    {
        com.android.server.usb.UsbAlsaDevice r0;
        int i0, i1, $i2, $i3;
        java.lang.StringBuilder $r2;
        java.lang.String $r7, $r8;

        r0 := @this: com.android.server.usb.UsbAlsaDevice;

        i0 = r0.<com.android.server.usb.UsbAlsaDevice: int mCardNum>;

        if i0 < 0 goto label2;

        i1 = r0.<com.android.server.usb.UsbAlsaDevice: int mDeviceNum>;

        if i1 >= 0 goto label1;

        goto label2;

     label1:
        $r8 = staticinvoke <com.android.server.audio.AudioService: java.lang.String makeAlsaAddressString(int,int)>(i0, i1);

        return $r8;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid alsa card or device alsaCard: ");

        $i2 = r0.<com.android.server.usb.UsbAlsaDevice: int mCardNum>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" alsaDevice: ");

        $i3 = r0.<com.android.server.usb.UsbAlsaDevice: int mDeviceNum>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UsbAlsaDevice", $r7);

        return null;
    }

    public int getCardNum()
    {
        com.android.server.usb.UsbAlsaDevice r0;
        int $i0;

        r0 := @this: com.android.server.usb.UsbAlsaDevice;

        $i0 = r0.<com.android.server.usb.UsbAlsaDevice: int mCardNum>;

        return $i0;
    }

    public java.lang.String getDeviceAddress()
    {
        com.android.server.usb.UsbAlsaDevice r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.usb.UsbAlsaDevice;

        $r1 = r0.<com.android.server.usb.UsbAlsaDevice: java.lang.String mDeviceAddress>;

        return $r1;
    }

    java.lang.String getDeviceName()
    {
        com.android.server.usb.UsbAlsaDevice r0;
        java.lang.Throwable $r1;
        java.lang.String r2;

        r0 := @this: com.android.server.usb.UsbAlsaDevice;

        entermonitor r0;

     label1:
        r2 = r0.<com.android.server.usb.UsbAlsaDevice: java.lang.String mDeviceName>;

     label2:
        exitmonitor r0;

        return r2;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getDeviceNum()
    {
        com.android.server.usb.UsbAlsaDevice r0;
        int $i0;

        r0 := @this: com.android.server.usb.UsbAlsaDevice;

        $i0 = r0.<com.android.server.usb.UsbAlsaDevice: int mDeviceNum>;

        return $i0;
    }

    public boolean hasInput()
    {
        com.android.server.usb.UsbAlsaDevice r0;
        boolean $z0;

        r0 := @this: com.android.server.usb.UsbAlsaDevice;

        $z0 = r0.<com.android.server.usb.UsbAlsaDevice: boolean mHasInput>;

        return $z0;
    }

    public boolean hasOutput()
    {
        com.android.server.usb.UsbAlsaDevice r0;
        boolean $z0;

        r0 := @this: com.android.server.usb.UsbAlsaDevice;

        $z0 = r0.<com.android.server.usb.UsbAlsaDevice: boolean mHasOutput>;

        return $z0;
    }

    public int hashCode()
    {
        com.android.server.usb.UsbAlsaDevice r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16, i17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;

        r0 := @this: com.android.server.usb.UsbAlsaDevice;

        $i1 = 1 * 31;

        $i0 = r0.<com.android.server.usb.UsbAlsaDevice: int mCardNum>;

        $i2 = $i1 + $i0;

        $i4 = $i2 * 31;

        $i3 = r0.<com.android.server.usb.UsbAlsaDevice: int mDeviceNum>;

        $i5 = $i4 + $i3;

        $i6 = $i5 * 31;

        $z0 = r0.<com.android.server.usb.UsbAlsaDevice: boolean mHasOutput>;

        $z1 = $z0 ^ 1;

        i14 = (int) $z1;

        $i7 = $i6 + i14;

        $i8 = $i7 * 31;

        $z2 = r0.<com.android.server.usb.UsbAlsaDevice: boolean mHasInput>;

        $z3 = $z2 ^ 1;

        i15 = (int) $z3;

        $i9 = $i8 + i15;

        $i10 = $i9 * 31;

        $z4 = r0.<com.android.server.usb.UsbAlsaDevice: boolean mIsInputHeadset>;

        $z5 = $z4 ^ 1;

        i16 = (int) $z5;

        $i11 = $i10 + i16;

        $i12 = $i11 * 31;

        $z6 = r0.<com.android.server.usb.UsbAlsaDevice: boolean mIsOutputHeadset>;

        $z7 = $z6 ^ 1;

        i17 = (int) $z7;

        $i13 = $i12 + i17;

        return $i13;
    }

    public boolean isInputHeadset()
    {
        com.android.server.usb.UsbAlsaDevice r0;
        boolean $z0;

        r0 := @this: com.android.server.usb.UsbAlsaDevice;

        $z0 = r0.<com.android.server.usb.UsbAlsaDevice: boolean mIsInputHeadset>;

        return $z0;
    }

    public boolean isOutputHeadset()
    {
        com.android.server.usb.UsbAlsaDevice r0;
        boolean $z0;

        r0 := @this: com.android.server.usb.UsbAlsaDevice;

        $z0 = r0.<com.android.server.usb.UsbAlsaDevice: boolean mIsOutputHeadset>;

        return $z0;
    }

    void setDeviceNameAndDescription(java.lang.String, java.lang.String)
    {
        com.android.server.usb.UsbAlsaDevice r0;
        java.lang.String r1, r3;
        java.lang.Throwable $r2;

        r0 := @this: com.android.server.usb.UsbAlsaDevice;

        r3 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        entermonitor r0;

     label1:
        r0.<com.android.server.usb.UsbAlsaDevice: java.lang.String mDeviceName> = r3;

        r0.<com.android.server.usb.UsbAlsaDevice: java.lang.String mDeviceDescription> = r1;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void start()
    {
        com.android.server.usb.UsbAlsaDevice r0;
        java.lang.Throwable $r2;

        r0 := @this: com.android.server.usb.UsbAlsaDevice;

        entermonitor r0;

     label1:
        r0.<com.android.server.usb.UsbAlsaDevice: boolean mSelected> = 1;

        r0.<com.android.server.usb.UsbAlsaDevice: int mInputState> = 0;

        r0.<com.android.server.usb.UsbAlsaDevice: int mOutputState> = 0;

        specialinvoke r0.<com.android.server.usb.UsbAlsaDevice: void startJackDetect()>();

        virtualinvoke r0.<com.android.server.usb.UsbAlsaDevice: void updateWiredDeviceConnectionState(boolean)>(1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void stop()
    {
        com.android.server.usb.UsbAlsaDevice r0;
        java.lang.Throwable $r2;

        r0 := @this: com.android.server.usb.UsbAlsaDevice;

        entermonitor r0;

     label1:
        specialinvoke r0.<com.android.server.usb.UsbAlsaDevice: void stopJackDetect()>();

        virtualinvoke r0.<com.android.server.usb.UsbAlsaDevice: void updateWiredDeviceConnectionState(boolean)>(0);

        r0.<com.android.server.usb.UsbAlsaDevice: boolean mSelected> = 0;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    java.lang.String toShortString()
    {
        com.android.server.usb.UsbAlsaDevice r0;
        int $i0, $i1;
        java.lang.String $r6, r11;
        java.lang.Throwable $r9;
        java.lang.StringBuilder r10;

        r0 := @this: com.android.server.usb.UsbAlsaDevice;

        entermonitor r0;

     label1:
        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[card:");

        $i0 = r0.<com.android.server.usb.UsbAlsaDevice: int mCardNum>;

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" device:");

        $i1 = r0.<com.android.server.usb.UsbAlsaDevice: int mDeviceNum>;

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r6 = r0.<com.android.server.usb.UsbAlsaDevice: java.lang.String mDeviceName>;

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        r11 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        exitmonitor r0;

        return r11;

     label3:
        $r9 := @caughtexception;

        exitmonitor r0;

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.String toString()
    {
        com.android.server.usb.UsbAlsaDevice r0;
        int $i0, $i1;
        java.lang.String $r6, r15;
        boolean $z0, $z1;
        java.lang.Throwable $r13;
        java.lang.StringBuilder r14;

        r0 := @this: com.android.server.usb.UsbAlsaDevice;

        entermonitor r0;

     label1:
        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UsbAlsaDevice: [card: ");

        $i0 = r0.<com.android.server.usb.UsbAlsaDevice: int mCardNum>;

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", device: ");

        $i1 = r0.<com.android.server.usb.UsbAlsaDevice: int mDeviceNum>;

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", name: ");

        $r6 = r0.<com.android.server.usb.UsbAlsaDevice: java.lang.String mDeviceName>;

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", hasOutput: ");

        $z0 = r0.<com.android.server.usb.UsbAlsaDevice: boolean mHasOutput>;

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", hasInput: ");

        $z1 = r0.<com.android.server.usb.UsbAlsaDevice: boolean mHasInput>;

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        r15 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        exitmonitor r0;

        return r15;

     label3:
        $r13 := @caughtexception;

        exitmonitor r0;

        throw $r13;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void updateWiredDeviceConnectionState(boolean)
    {
        com.android.server.usb.UsbAlsaDevice r0;
        boolean z0, $z1, $z2, $z3, z4, z5, $z6, z7;
        java.lang.String $r3, $r4, $r8, $r9, r13;
        android.media.IAudioService $r5, $r10;
        java.lang.Throwable $r11;
        android.os.RemoteException $r12;
        int i5, $i7, i8, $i10;
        java.lang.StringBuilder r14, r15;
        byte b6, b9;

        r0 := @this: com.android.server.usb.UsbAlsaDevice;

        z0 := @parameter0: boolean;

        entermonitor r0;

     label01:
        $z1 = r0.<com.android.server.usb.UsbAlsaDevice: boolean mSelected>;

        if $z1 != 0 goto label03;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UsbAlsaDevice", "updateWiredDeviceConnectionState on unselected AlsaDevice!");

     label02:
        exitmonitor r0;

        return;

     label03:
        r13 = virtualinvoke r0.<com.android.server.usb.UsbAlsaDevice: java.lang.String getAlsaCardDeviceString()>();

     label04:
        if r13 != null goto label05;

        exitmonitor r0;

        return;

     label05:
        z4 = r0.<com.android.server.usb.UsbAlsaDevice: boolean mHasOutput>;

     label06:
        if z4 == 0 goto label14;

     label07:
        $z3 = r0.<com.android.server.usb.UsbAlsaDevice: boolean mIsOutputHeadset>;

        if $z3 == 0 goto label09;

     label08:
        i5 = 67108864;

        goto label10;

     label09:
        i5 = 16384;

     label10:
        z5 = specialinvoke r0.<com.android.server.usb.UsbAlsaDevice: boolean isOutputJackConnected()>();

        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OUTPUT JACK connected: ");

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z5);

        $r8 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("UsbAlsaDevice", $r8);

     label11:
        if z0 == 0 goto label12;

        if z5 == 0 goto label12;

        b6 = 1;

        goto label13;

     label12:
        b6 = 0;

     label13:
        $i7 = r0.<com.android.server.usb.UsbAlsaDevice: int mOutputState>;

        if b6 == $i7 goto label14;

        r0.<com.android.server.usb.UsbAlsaDevice: int mOutputState> = b6;

        $r10 = r0.<com.android.server.usb.UsbAlsaDevice: android.media.IAudioService mAudioService>;

        $r9 = r0.<com.android.server.usb.UsbAlsaDevice: java.lang.String mDeviceName>;

        interfaceinvoke $r10.<android.media.IAudioService: void setWiredDeviceConnectionState(int,int,java.lang.String,java.lang.String,java.lang.String)>(i5, b6, r13, $r9, "UsbAlsaDevice");

     label14:
        $z6 = r0.<com.android.server.usb.UsbAlsaDevice: boolean mHasInput>;

        if $z6 == 0 goto label21;

        $z2 = r0.<com.android.server.usb.UsbAlsaDevice: boolean mIsInputHeadset>;

        if $z2 == 0 goto label16;

     label15:
        i8 = -2113929216;

        goto label17;

     label16:
        i8 = -2147479552;

     label17:
        z7 = specialinvoke r0.<com.android.server.usb.UsbAlsaDevice: boolean isInputJackConnected()>();

        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INPUT JACK connected: ");

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z7);

        $r3 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("UsbAlsaDevice", $r3);

     label18:
        if z0 == 0 goto label19;

        if z7 == 0 goto label19;

        b9 = 1;

        goto label20;

     label19:
        b9 = 0;

     label20:
        $i10 = r0.<com.android.server.usb.UsbAlsaDevice: int mInputState>;

        if b9 == $i10 goto label21;

        r0.<com.android.server.usb.UsbAlsaDevice: int mInputState> = b9;

        $r5 = r0.<com.android.server.usb.UsbAlsaDevice: android.media.IAudioService mAudioService>;

        $r4 = r0.<com.android.server.usb.UsbAlsaDevice: java.lang.String mDeviceName>;

        interfaceinvoke $r5.<android.media.IAudioService: void setWiredDeviceConnectionState(int,int,java.lang.String,java.lang.String,java.lang.String)>(i8, b9, r13, $r4, "UsbAlsaDevice");

     label21:
        goto label24;

     label22:
        $r12 := @caughtexception;

     label23:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UsbAlsaDevice", "RemoteException in setWiredDeviceConnectionState");

     label24:
        exitmonitor r0;

        return;

     label25:
        $r11 := @caughtexception;

        exitmonitor r0;

        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label25;
        catch java.lang.Throwable from label03 to label04 with label25;
        catch android.os.RemoteException from label05 to label06 with label22;
        catch java.lang.Throwable from label05 to label06 with label25;
        catch android.os.RemoteException from label07 to label08 with label22;
        catch java.lang.Throwable from label07 to label08 with label25;
        catch android.os.RemoteException from label10 to label11 with label22;
        catch java.lang.Throwable from label10 to label11 with label25;
        catch android.os.RemoteException from label13 to label14 with label22;
        catch java.lang.Throwable from label13 to label14 with label25;
        catch android.os.RemoteException from label14 to label15 with label22;
        catch java.lang.Throwable from label14 to label15 with label25;
        catch android.os.RemoteException from label17 to label18 with label22;
        catch java.lang.Throwable from label17 to label18 with label25;
        catch android.os.RemoteException from label20 to label21 with label22;
        catch java.lang.Throwable from label20 to label21 with label25;
        catch java.lang.Throwable from label23 to label24 with label25;
    }

    public static void <clinit>()
    {
        <com.android.server.usb.UsbAlsaDevice: java.lang.String TAG> = "UsbAlsaDevice";

        <com.android.server.usb.UsbAlsaDevice: boolean DEBUG> = 0;

        return;
    }
}
