final class com.android.server.usb.UsbDeviceManager$UsbHandlerHal extends com.android.server.usb.UsbDeviceManager$UsbHandler
{
    private static final int ENUMERATION_TIME_OUT_MS;
    protected static final java.lang.String GADGET_HAL_FQ_NAME;
    private static final int SET_FUNCTIONS_LEEWAY_MS;
    private static final int SET_FUNCTIONS_TIMEOUT_MS;
    private static final int USB_GADGET_HAL_DEATH_COOKIE;
    private int mCurrentRequest;
    protected boolean mCurrentUsbFunctionsRequested;
    private android.hardware.usb.gadget.V1_0.IUsbGadget mGadgetProxy;
    private final java.lang.Object mGadgetProxyLock;

    void <init>(android.os.Looper, android.content.Context, com.android.server.usb.UsbDeviceManager, com.android.server.usb.UsbAlsaManager, com.android.server.usb.UsbPermissionManager)
    {
        com.android.server.usb.UsbDeviceManager$UsbHandlerHal r0;
        com.android.server.usb.UsbAlsaManager r1;
        com.android.server.usb.UsbPermissionManager r2;
        java.lang.Object $r3, r19;
        android.hidl.manager.V1_0.IServiceManager $r4;
        boolean $z0;
        java.lang.String $r5, $r6, $r7, $r9, $r11, $r14;
        java.lang.Throwable $r8, $r12;
        android.os.RemoteException $r10;
        java.lang.Exception $r13;
        android.os.Looper r15;
        android.content.Context r16;
        com.android.server.usb.UsbDeviceManager r17;
        com.android.server.usb.UsbDeviceManager$UsbHandlerHal$ServiceNotification r18;
        android.hardware.usb.gadget.V1_0.IUsbGadget r20, r22;
        com.android.server.usb.UsbDeviceManager$UsbHandlerHal$UsbGadgetDeathRecipient r21;
        com.android.server.usb.UsbDeviceManager$UsbHandlerHal$UsbGadgetCallback r23;
        java.io.File r24;

        r0 := @this: com.android.server.usb.UsbDeviceManager$UsbHandlerHal;

        r15 := @parameter0: android.os.Looper;

        r16 := @parameter1: android.content.Context;

        r17 := @parameter2: com.android.server.usb.UsbDeviceManager;

        r1 := @parameter3: com.android.server.usb.UsbAlsaManager;

        r2 := @parameter4: com.android.server.usb.UsbPermissionManager;

        specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: void <init>(android.os.Looper,android.content.Context,com.android.server.usb.UsbDeviceManager,com.android.server.usb.UsbAlsaManager,com.android.server.usb.UsbPermissionManager)>(r15, r16, r17, r1, r2);

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: java.lang.Object mGadgetProxyLock> = $r3;

        r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: int mCurrentRequest> = 0;

     label01:
        r18 = new com.android.server.usb.UsbDeviceManager$UsbHandlerHal$ServiceNotification;

        specialinvoke r18.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal$ServiceNotification: void <init>(com.android.server.usb.UsbDeviceManager$UsbHandlerHal)>(r0);

        $r4 = staticinvoke <android.hidl.manager.V1_0.IServiceManager: android.hidl.manager.V1_0.IServiceManager getService()>();

        $z0 = interfaceinvoke $r4.<android.hidl.manager.V1_0.IServiceManager: boolean registerForNotifications(java.lang.String,java.lang.String,android.hidl.manager.V1_0.IServiceNotification)>("android.hardware.usb.gadget@1.0::IUsbGadget", "", r18);

        if $z0 != 0 goto label03;

        $r7 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$300()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r7, "Failed to register usb gadget service start notification");

     label02:
        return;

     label03:
        r19 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: java.lang.Object mGadgetProxyLock>;

        entermonitor r19;

     label04:
        r20 = staticinvoke <android.hardware.usb.gadget.V1_0.IUsbGadget: android.hardware.usb.gadget.V1_0.IUsbGadget getService(boolean)>(1);

        r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: android.hardware.usb.gadget.V1_0.IUsbGadget mGadgetProxy> = r20;

        r21 = new com.android.server.usb.UsbDeviceManager$UsbHandlerHal$UsbGadgetDeathRecipient;

        specialinvoke r21.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal$UsbGadgetDeathRecipient: void <init>(com.android.server.usb.UsbDeviceManager$UsbHandlerHal)>(r0);

        interfaceinvoke r20.<android.hardware.usb.gadget.V1_0.IUsbGadget: boolean linkToDeath(android.os.IHwBinder$DeathRecipient,long)>(r21, 2000L);

        r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: long mCurrentFunctions> = 0L;

        r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: boolean mCurrentUsbFunctionsRequested> = 1;

        r22 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: android.hardware.usb.gadget.V1_0.IUsbGadget mGadgetProxy>;

        r23 = new com.android.server.usb.UsbDeviceManager$UsbHandlerHal$UsbGadgetCallback;

        specialinvoke r23.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal$UsbGadgetCallback: void <init>(com.android.server.usb.UsbDeviceManager$UsbHandlerHal)>(r0);

        interfaceinvoke r22.<android.hardware.usb.gadget.V1_0.IUsbGadget: void getCurrentUsbFunctions(android.hardware.usb.gadget.V1_0.IUsbGadgetCallback)>(r23);

        exitmonitor r19;

     label05:
        r24 = new java.io.File;

        specialinvoke r24.<java.io.File: void <init>(java.lang.String)>("/sys/class/android_usb/android0/state");

        $r5 = staticinvoke <android.os.FileUtils: java.lang.String readTextFile(java.io.File,int,java.lang.String)>(r24, 0, null);

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

        virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: void updateState(java.lang.String)>($r6);

     label06:
        goto label13;

     label07:
        $r12 := @caughtexception;

     label08:
        exitmonitor r19;

     label09:
        throw $r12;

     label10:
        $r13 := @caughtexception;

        $r14 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$300()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r14, "Error initializing UsbHandler", $r13);

        goto label13;

     label11:
        $r10 := @caughtexception;

        $r11 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$300()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r11, "Usb Gadget hal not responding", $r10);

        goto label13;

     label12:
        $r8 := @caughtexception;

        $r9 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$300()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r9, "Usb gadget hal not found", $r8);

     label13:
        return;

        catch java.util.NoSuchElementException from label01 to label02 with label12;
        catch android.os.RemoteException from label01 to label02 with label11;
        catch java.lang.Exception from label01 to label02 with label10;
        catch java.util.NoSuchElementException from label03 to label04 with label12;
        catch android.os.RemoteException from label03 to label04 with label11;
        catch java.lang.Exception from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.util.NoSuchElementException from label05 to label06 with label12;
        catch android.os.RemoteException from label05 to label06 with label11;
        catch java.lang.Exception from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.util.NoSuchElementException from label09 to label10 with label12;
        catch android.os.RemoteException from label09 to label10 with label11;
        catch java.lang.Exception from label09 to label10 with label10;
    }

    static java.lang.Object access$500(com.android.server.usb.UsbDeviceManager$UsbHandlerHal)
    {
        com.android.server.usb.UsbDeviceManager$UsbHandlerHal r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.usb.UsbDeviceManager$UsbHandlerHal;

        $r1 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: java.lang.Object mGadgetProxyLock>;

        return $r1;
    }

    static android.hardware.usb.gadget.V1_0.IUsbGadget access$602(com.android.server.usb.UsbDeviceManager$UsbHandlerHal, android.hardware.usb.gadget.V1_0.IUsbGadget)
    {
        com.android.server.usb.UsbDeviceManager$UsbHandlerHal r0;
        android.hardware.usb.gadget.V1_0.IUsbGadget r1;

        r0 := @parameter0: com.android.server.usb.UsbDeviceManager$UsbHandlerHal;

        r1 := @parameter1: android.hardware.usb.gadget.V1_0.IUsbGadget;

        r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: android.hardware.usb.gadget.V1_0.IUsbGadget mGadgetProxy> = r1;

        return r1;
    }

    static int access$700(com.android.server.usb.UsbDeviceManager$UsbHandlerHal)
    {
        com.android.server.usb.UsbDeviceManager$UsbHandlerHal r0;
        int $i0;

        r0 := @parameter0: com.android.server.usb.UsbDeviceManager$UsbHandlerHal;

        $i0 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: int mCurrentRequest>;

        return $i0;
    }

    private void setUsbConfig(long, boolean)
    {
        com.android.server.usb.UsbDeviceManager$UsbHandlerHal r0;
        long l0, $l4;
        boolean z0, $z1;
        int i1, $i2, $i6;
        java.lang.StringBuilder $r1;
        java.lang.String $r6, $r13, $r15, r17;
        android.hardware.usb.gadget.V1_0.IUsbGadget $r7, $r10;
        byte $b5;
        java.lang.Object $r8, $r11, r19;
        android.debug.AdbManagerInternal $r9, $r12;
        android.os.RemoteException $r14;
        java.lang.Throwable $r16;
        com.android.server.usb.UsbDeviceManager$UsbHandlerHal$UsbGadgetCallback r20;

        r0 := @this: com.android.server.usb.UsbDeviceManager$UsbHandlerHal;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        r17 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$300()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setUsbConfig(");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") request:");

        $i2 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: int mCurrentRequest>;

        i1 = $i2 + 1;

        r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: int mCurrentRequest> = i1;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>(r17, $r6);

        virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: void removeMessages(int)>(17);

        virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: void removeMessages(int)>(15);

        virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: void removeMessages(int)>(14);

        r19 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: java.lang.Object mGadgetProxyLock>;

        entermonitor r19;

     label01:
        $r7 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: android.hardware.usb.gadget.V1_0.IUsbGadget mGadgetProxy>;

        if $r7 != null goto label03;

        $r13 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$300()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r13, "setUsbConfig mGadgetProxy is null");

        exitmonitor r19;

     label02:
        return;

     label03:
        $l4 = 1L & l0;

        $b5 = $l4 cmp 0L;

        if $b5 == 0 goto label06;

     label04:
        $r11 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/debug/AdbManagerInternal;");

        $r12 = (android.debug.AdbManagerInternal) $r11;

        virtualinvoke $r12.<android.debug.AdbManagerInternal: void startAdbdForTransport(byte)>(0);

     label05:
        goto label07;

     label06:
        $r8 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/debug/AdbManagerInternal;");

        $r9 = (android.debug.AdbManagerInternal) $r8;

        virtualinvoke $r9.<android.debug.AdbManagerInternal: void stopAdbdForTransport(byte)>(0);

     label07:
        r20 = new com.android.server.usb.UsbDeviceManager$UsbHandlerHal$UsbGadgetCallback;

        $i6 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: int mCurrentRequest>;

        specialinvoke r20.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal$UsbGadgetCallback: void <init>(com.android.server.usb.UsbDeviceManager$UsbHandlerHal,int,long,boolean)>(r0, $i6, l0, z0);

        $r10 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: android.hardware.usb.gadget.V1_0.IUsbGadget mGadgetProxy>;

        interfaceinvoke $r10.<android.hardware.usb.gadget.V1_0.IUsbGadget: void setCurrentUsbFunctions(long,android.hardware.usb.gadget.V1_0.IUsbGadgetCallback,long)>(l0, r20, 2500L);

        virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: void sendMessageDelayed(int,boolean,long)>(15, z0, 3000L);

        $z1 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: boolean mConnected>;

        if $z1 == 0 goto label08;

        virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: void sendMessageDelayed(int,boolean,long)>(17, z0, 5000L);

     label08:
        goto label11;

     label09:
        $r14 := @caughtexception;

     label10:
        $r15 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$300()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r15, "Remoteexception while calling setCurrentUsbFunctions", $r14);

     label11:
        exitmonitor r19;

     label12:
        return;

     label13:
        $r16 := @caughtexception;

     label14:
        exitmonitor r19;

     label15:
        throw $r16;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch android.os.RemoteException from label04 to label05 with label09;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch android.os.RemoteException from label06 to label07 with label09;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch android.os.RemoteException from label07 to label08 with label09;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.server.usb.UsbDeviceManager$UsbHandlerHal r0;
        int i0, $i3, $i5, $i12, $i14, $i16;
        android.hardware.usb.gadget.V1_0.IUsbGadget $r1, $r2, r29;
        android.hardware.usb.gadget.V1_1.IUsbGadget $r3;
        java.lang.String $r4, $r5, $r6, $r14, $r15, $r17, $r19, $r21, r34;
        boolean $z1, $z2, z3, z4;
        long $l4, $l6, $l9, $l10, $l11, $l17;
        java.lang.Object $r7, r25, r28;
        java.lang.Long $r8;
        java.lang.StringBuilder $r9;
        android.os.RemoteException $r16, $r20;
        java.lang.Throwable $r18, $r22, $r23;
        android.os.Message r24;
        com.android.server.usb.UsbDeviceManager$UsbHandlerHal$UsbGadgetDeathRecipient r30;

        r0 := @this: com.android.server.usb.UsbDeviceManager$UsbHandlerHal;

        r24 := @parameter0: android.os.Message;

        i0 = r24.<android.os.Message: int what>;

        z3 = 0;

        z4 = 1;

        tableswitch(i0)
        {
            case 14: goto label36;
            case 15: goto label35;
            case 16: goto label32;
            case 17: goto label31;
            case 18: goto label14;
            case 19: goto label02;
            default: goto label01;
        };

     label01:
        specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: void handleMessage(android.os.Message)>(r24);

        goto label37;

     label02:
        r25 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: java.lang.Object mGadgetProxyLock>;

        entermonitor r25;

     label03:
        $r1 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: android.hardware.usb.gadget.V1_0.IUsbGadget mGadgetProxy>;

        if $r1 != null goto label05;

        $r4 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$300()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r4, "reset Usb Gadget mGadgetProxy is null");

        exitmonitor r25;

     label04:
        goto label37;

     label05:
        $r2 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: android.hardware.usb.gadget.V1_0.IUsbGadget mGadgetProxy>;

        $r3 = staticinvoke <android.hardware.usb.gadget.V1_1.IUsbGadget: android.hardware.usb.gadget.V1_1.IUsbGadget castFrom(android.os.IHwInterface)>($r2);

        interfaceinvoke $r3.<android.hardware.usb.gadget.V1_1.IUsbGadget: int reset()>();

     label06:
        goto label09;

     label07:
        $r20 := @caughtexception;

     label08:
        $r21 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$300()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r21, "reset Usb Gadget failed", $r20);

     label09:
        exitmonitor r25;

     label10:
        goto label37;

     label11:
        $r22 := @caughtexception;

     label12:
        exitmonitor r25;

     label13:
        throw $r22;

     label14:
        $i3 = r24.<android.os.Message: int arg1>;

        if $i3 != 1 goto label15;

        goto label16;

     label15:
        z4 = 0;

     label16:
        r28 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: java.lang.Object mGadgetProxyLock>;

        entermonitor r28;

     label17:
        r29 = staticinvoke <android.hardware.usb.gadget.V1_0.IUsbGadget: android.hardware.usb.gadget.V1_0.IUsbGadget getService()>();

        r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: android.hardware.usb.gadget.V1_0.IUsbGadget mGadgetProxy> = r29;

        r30 = new com.android.server.usb.UsbDeviceManager$UsbHandlerHal$UsbGadgetDeathRecipient;

        specialinvoke r30.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal$UsbGadgetDeathRecipient: void <init>(com.android.server.usb.UsbDeviceManager$UsbHandlerHal)>(r0);

        interfaceinvoke r29.<android.hardware.usb.gadget.V1_0.IUsbGadget: boolean linkToDeath(android.os.IHwBinder$DeathRecipient,long)>(r30, 2000L);

        $z1 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: boolean mCurrentFunctionsApplied>;

        if $z1 != 0 goto label20;

     label18:
        if z4 != 0 goto label20;

     label19:
        $l4 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: long mCurrentFunctions>;

        virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: void setEnabledFunctions(long,boolean)>($l4, 0);

     label20:
        goto label27;

     label21:
        $r23 := @caughtexception;

        goto label29;

     label22:
        $r16 := @caughtexception;

     label23:
        $r17 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$300()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r17, "Usb Gadget hal not responding", $r16);

     label24:
        goto label27;

     label25:
        $r18 := @caughtexception;

     label26:
        $r19 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$300()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r19, "Usb gadget hal not found", $r18);

     label27:
        exitmonitor r28;

     label28:
        goto label37;

     label29:
        exitmonitor r28;

     label30:
        throw $r23;

     label31:
        $i5 = r24.<android.os.Message: int arg1>;

        if $i5 == 1 goto label37;

        $l6 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: long mScreenUnlockedFunctions>;

        virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: void setEnabledFunctions(long,boolean)>($l6, 0);

        goto label37;

     label32:
        $r5 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$300()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r5, "prcessing MSG_GET_CURRENT_USB_FUNCTIONS");

        r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: boolean mCurrentUsbFunctionsReceived> = 1;

        $z2 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: boolean mCurrentUsbFunctionsRequested>;

        if $z2 == 0 goto label34;

        $r6 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$300()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r6, "updating mCurrentFunctions");

        $r7 = r24.<android.os.Message: java.lang.Object obj>;

        $r8 = (java.lang.Long) $r7;

        $l9 = virtualinvoke $r8.<java.lang.Long: long longValue()>();

        $l10 = $l9 & -2L;

        r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: long mCurrentFunctions> = $l10;

        r34 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$300()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mCurrentFunctions:");

        $l11 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: long mCurrentFunctions>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l11);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("applied:");

        $i12 = r24.<android.os.Message: int arg1>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>(r34, $r14);

        $i14 = r24.<android.os.Message: int arg1>;

        if $i14 != 1 goto label33;

        z3 = 1;

     label33:
        r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: boolean mCurrentFunctionsApplied> = z3;

     label34:
        virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: void finishBoot()>();

        goto label37;

     label35:
        $r15 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$300()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r15, "Set functions timed out! no reply from usb hal");

        $i16 = r24.<android.os.Message: int arg1>;

        if $i16 == 1 goto label37;

        $l17 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: long mScreenUnlockedFunctions>;

        virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: void setEnabledFunctions(long,boolean)>($l17, 0);

        goto label37;

     label36:
        virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: void setEnabledFunctions(long,boolean)>(0L, 0);

     label37:
        return;

        catch java.lang.Throwable from label03 to label04 with label11;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.util.NoSuchElementException from label17 to label18 with label25;
        catch android.os.RemoteException from label17 to label18 with label22;
        catch java.lang.Throwable from label17 to label18 with label21;
        catch java.util.NoSuchElementException from label19 to label20 with label25;
        catch android.os.RemoteException from label19 to label20 with label22;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label23 to label24 with label21;
        catch java.lang.Throwable from label26 to label27 with label21;
        catch java.lang.Throwable from label27 to label28 with label21;
        catch java.lang.Throwable from label29 to label30 with label21;
    }

    protected void setEnabledFunctions(long, boolean)
    {
        com.android.server.usb.UsbDeviceManager$UsbHandlerHal r0;
        java.lang.String r1, $r6, $r7;
        long $l0, l3, l5;
        byte $b1, $b4;
        boolean $z0, $z1, $z2, z3, z4;
        java.lang.StringBuilder $r5;

        r0 := @this: com.android.server.usb.UsbDeviceManager$UsbHandlerHal;

        l3 := @parameter0: long;

        z3 := @parameter1: boolean;

        $l0 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: long mCurrentFunctions>;

        $b1 = $l0 cmp l3;

        if $b1 != 0 goto label1;

        $z2 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: boolean mCurrentFunctionsApplied>;

        if $z2 == 0 goto label1;

        if z3 == 0 goto label3;

     label1:
        r1 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$300()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting USB config to ");

        $r6 = staticinvoke <android.hardware.usb.UsbManager: java.lang.String usbFunctionsToString(long)>(l3);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r1, $r7);

        r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: long mCurrentFunctions> = l3;

        z4 = 0;

        r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: boolean mCurrentFunctionsApplied> = 0;

        r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: boolean mCurrentUsbFunctionsRequested> = 0;

        $b4 = l3 cmp 0L;

        if $b4 != 0 goto label2;

        z4 = 1;

     label2:
        l5 = virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: long getAppliedFunctions(long)>(l3);

        specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: void setUsbConfig(long,boolean)>(l5, z4);

        $z0 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: boolean mBootCompleted>;

        if $z0 == 0 goto label3;

        $z1 = virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: boolean isUsbDataTransferActive(long)>(l5);

        if $z1 == 0 goto label3;

        virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerHal: void updateUsbStateBroadcastIfNeeded(long)>(l5);

     label3:
        return;
    }

    public static void <clinit>()
    {
        <com.android.server.usb.UsbDeviceManager$UsbHandlerHal: int USB_GADGET_HAL_DEATH_COOKIE> = 2000;

        <com.android.server.usb.UsbDeviceManager$UsbHandlerHal: int SET_FUNCTIONS_TIMEOUT_MS> = 3000;

        <com.android.server.usb.UsbDeviceManager$UsbHandlerHal: int SET_FUNCTIONS_LEEWAY_MS> = 500;

        <com.android.server.usb.UsbDeviceManager$UsbHandlerHal: java.lang.String GADGET_HAL_FQ_NAME> = "android.hardware.usb.gadget@1.0::IUsbGadget";

        <com.android.server.usb.UsbDeviceManager$UsbHandlerHal: int ENUMERATION_TIME_OUT_MS> = 2000;

        return;
    }
}
