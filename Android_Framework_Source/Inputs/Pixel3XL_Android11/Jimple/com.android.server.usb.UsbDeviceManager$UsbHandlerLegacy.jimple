final class com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy extends com.android.server.usb.UsbDeviceManager$UsbHandler
{
    private static final java.lang.String USB_CONFIG_PROPERTY;
    private static final java.lang.String USB_STATE_PROPERTY;
    private java.lang.String mCurrentFunctionsStr;
    private java.lang.String mCurrentOemFunctions;
    private java.util.HashMap mOemModeMap;
    private boolean mUsbDataUnlocked;

    void <init>(android.os.Looper, android.content.Context, com.android.server.usb.UsbDeviceManager, com.android.server.usb.UsbAlsaManager, com.android.server.usb.UsbPermissionManager)
    {
        com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy r0;
        android.content.Context r1;
        com.android.server.usb.UsbDeviceManager r2;
        com.android.server.usb.UsbAlsaManager r3;
        com.android.server.usb.UsbPermissionManager r4;
        boolean z0, $z1, $z2;
        java.lang.String $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r15, r17;
        java.lang.Exception $r14;
        android.os.Looper r16;
        java.io.File r18;

        r0 := @this: com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy;

        r16 := @parameter0: android.os.Looper;

        r1 := @parameter1: android.content.Context;

        r2 := @parameter2: com.android.server.usb.UsbDeviceManager;

        r3 := @parameter3: com.android.server.usb.UsbAlsaManager;

        r4 := @parameter4: com.android.server.usb.UsbPermissionManager;

        specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: void <init>(android.os.Looper,android.content.Context,com.android.server.usb.UsbDeviceManager,com.android.server.usb.UsbAlsaManager,com.android.server.usb.UsbPermissionManager)>(r16, r1, r2, r3, r4);

     label01:
        specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: void readOemUsbOverrideConfig(android.content.Context)>(r1);

        $r5 = specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: java.lang.String getPersistProp(boolean)>(0);

        $r6 = virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>($r5, "none");

        r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: java.lang.String mCurrentOemFunctions> = $r6;

        z0 = specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: boolean isNormalBoot()>();

     label02:
        if z0 == 0 goto label06;

     label03:
        r17 = virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>("sys.usb.config", "none");

        r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: java.lang.String mCurrentFunctionsStr> = r17;

     label04:
        $r13 = virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>("sys.usb.state", "none");

        $z2 = virtualinvoke r17.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: boolean mCurrentFunctionsApplied> = $z2;

     label05:
        goto label07;

     label06:
        $r7 = specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: java.lang.String getPersistProp(boolean)>(1);

        $r8 = virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>($r7, "none");

        r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: java.lang.String mCurrentFunctionsStr> = $r8;

        $r9 = virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>("sys.usb.config", "none");

        $r10 = virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>("sys.usb.state", "none");

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: boolean mCurrentFunctionsApplied> = $z1;

     label07:
        r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: long mCurrentFunctions> = 0L;

        r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: boolean mCurrentUsbFunctionsReceived> = 1;

        r18 = new java.io.File;

        specialinvoke r18.<java.io.File: void <init>(java.lang.String)>("/sys/class/android_usb/android0/state");

        $r11 = staticinvoke <android.os.FileUtils: java.lang.String readTextFile(java.io.File,int,java.lang.String)>(r18, 0, null);

        $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String trim()>();

        virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: void updateState(java.lang.String)>($r12);

     label08:
        goto label10;

     label09:
        $r14 := @caughtexception;

        $r15 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$300()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r15, "Error initializing UsbHandler", $r14);

     label10:
        return;

        catch java.lang.Exception from label01 to label02 with label09;
        catch java.lang.Exception from label03 to label04 with label09;
        catch java.lang.Exception from label04 to label05 with label09;
        catch java.lang.Exception from label06 to label07 with label09;
        catch java.lang.Exception from label07 to label08 with label09;
    }

    private static java.lang.String addFunction(java.lang.String, java.lang.String)
    {
        java.lang.String r0, $r1, r8, r9, r10;
        boolean $z0, $z1;
        int $i0;
        java.lang.StringBuilder $r2, $r5;

        r8 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        $r1 = "none";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z0 == 0 goto label1;

        return r0;

     label1:
        r9 = r8;

        $z1 = staticinvoke <com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: boolean containsFunction(java.lang.String,java.lang.String)>(r8, r0);

        if $z1 != 0 goto label3;

        r10 = r8;

        $i0 = virtualinvoke r8.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        return r9;
    }

    private java.lang.String applyOemOverrideFunction(java.lang.String)
    {
        com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy r0;
        java.util.HashMap $r1, $r8;
        java.lang.StringBuilder $r2, $r13, $r28;
        java.lang.String $r7, $r11, $r12, $r18, $r22, $r24, $r26, $r32, $r34, $r35, $r37, r38, r39, r40, r44, r46, r47, $r50, r51;
        java.lang.Object $r9, $r10, $r17, $r21, $r25, $r27, $r36, $r49;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Map r42;
        android.util.Pair r43;

        r0 := @this: com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy;

        r38 := @parameter0: java.lang.String;

        if r38 == null goto label8;

        $r1 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: java.util.HashMap mOemModeMap>;

        if $r1 != null goto label1;

        goto label8;

     label1:
        r39 = virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>("ro.bootmode", "unknown");

        r40 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$300()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("applyOemOverride usbfunctions=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bootmode=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r39);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>(r40, $r7);

        $r8 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: java.util.HashMap mOemModeMap>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r39);

        r42 = (java.util.Map) $r9;

        if r42 == null goto label7;

        $z0 = virtualinvoke r39.<java.lang.String: boolean equals(java.lang.Object)>("normal");

        if $z0 != 0 goto label7;

        $z1 = virtualinvoke r39.<java.lang.String: boolean equals(java.lang.Object)>("unknown");

        if $z1 != 0 goto label7;

        $r10 = interfaceinvoke r42.<java.util.Map: java.lang.Object get(java.lang.Object)>(r38);

        r43 = (android.util.Pair) $r10;

        if r43 == null goto label5;

        r44 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$300()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OEM USB override: ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ==> ");

        $r17 = r43.<android.util.Pair: java.lang.Object first>;

        $r18 = (java.lang.String) $r17;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" persist across reboot ");

        $r21 = r43.<android.util.Pair: java.lang.Object second>;

        $r22 = (java.lang.String) $r21;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>(r44, $r24);

        $r25 = r43.<android.util.Pair: java.lang.Object second>;

        $r26 = (java.lang.String) $r25;

        $z3 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z3 != 0 goto label4;

        $z4 = virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: boolean isAdbEnabled()>();

        if $z4 == 0 goto label2;

        $r36 = r43.<android.util.Pair: java.lang.Object second>;

        $r37 = (java.lang.String) $r36;

        r46 = staticinvoke <com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: java.lang.String addFunction(java.lang.String,java.lang.String)>($r37, "adb");

        goto label3;

     label2:
        $r27 = r43.<android.util.Pair: java.lang.Object second>;

        r46 = (java.lang.String) $r27;

     label3:
        r47 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$300()>();

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OEM USB override persisting: ");

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r46);

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in prop: ");

        $r32 = specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: java.lang.String getPersistProp(boolean)>(0);

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>(r47, $r34);

        $r35 = specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: java.lang.String getPersistProp(boolean)>(0);

        virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: void setSystemProperty(java.lang.String,java.lang.String)>($r35, r46);

     label4:
        $r49 = r43.<android.util.Pair: java.lang.Object first>;

        $r50 = (java.lang.String) $r49;

        return $r50;

     label5:
        $z2 = virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: boolean isAdbEnabled()>();

        if $z2 == 0 goto label6;

        r51 = staticinvoke <com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: java.lang.String addFunction(java.lang.String,java.lang.String)>("none", "adb");

        $r12 = specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: java.lang.String getPersistProp(boolean)>(0);

        virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: void setSystemProperty(java.lang.String,java.lang.String)>($r12, r51);

        goto label7;

     label6:
        $r11 = specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: java.lang.String getPersistProp(boolean)>(0);

        virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: void setSystemProperty(java.lang.String,java.lang.String)>($r11, "none");

     label7:
        return r38;

     label8:
        return r38;
    }

    static boolean containsFunction(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        int $i0, $i1, $i3, i5, i6;
        char $c2, $c4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i5 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(r1);

        if i5 >= 0 goto label1;

        return 0;

     label1:
        if i5 <= 0 goto label2;

        $i3 = i5 - 1;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3);

        if $c4 == 44 goto label2;

        return 0;

     label2:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        i6 = $i0 + i5;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if i6 >= $i1 goto label3;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i6);

        if $c2 == 44 goto label3;

        return 0;

     label3:
        return 1;
    }

    private java.lang.String getPersistProp(boolean)
    {
        com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy r0;
        boolean z0, $z1, $z2;
        java.lang.String r1, r11;
        java.lang.StringBuilder $r3, $r7;

        r0 := @this: com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy;

        z0 := @parameter0: boolean;

        r1 = virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>("ro.bootmode", "unknown");

        r11 = "persist.sys.usb.config";

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("normal");

        if $z1 != 0 goto label2;

        r11 = "persist.sys.usb.config";

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("unknown");

        if $z2 != 0 goto label2;

        if z0 == 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("persist.sys.usb.");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".func");

        r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("persist.sys.usb.");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".config");

        r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return r11;
    }

    private boolean isNormalBoot()
    {
        com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy r0;
        java.lang.String r1;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy;

        r1 = virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>("ro.bootmode", "unknown");

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("normal");

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("unknown");

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    private void readOemUsbOverrideConfig(android.content.Context)
    {
        com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy r0;
        java.lang.String[] r1, r2;
        int i0, $i1, $i2, $i3, i4;
        java.util.HashMap r3, $r6, $r8, $r20, $r22, $r24, r26;
        android.content.res.Resources $r4;
        java.lang.String $r5, $r7, $r10, $r12, $r13, $r14, $r17, $r18, $r21;
        java.lang.Object $r9;
        boolean $z0;
        android.util.Pair $r11, $r16;
        android.content.Context r25;

        r0 := @this: com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy;

        r25 := @parameter0: android.content.Context;

        $r4 = virtualinvoke r25.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(17236063);

        if r1 == null goto label7;

        i0 = lengthof r1;

        i4 = 0;

     label1:
        if i4 >= i0 goto label7;

        $r5 = r1[i4];

        r2 = virtualinvoke $r5.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $i1 = lengthof r2;

        if $i1 == 3 goto label2;

        $i3 = lengthof r2;

        if $i3 != 4 goto label6;

     label2:
        $r6 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: java.util.HashMap mOemModeMap>;

        if $r6 != null goto label3;

        $r24 = new java.util.HashMap;

        specialinvoke $r24.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: java.util.HashMap mOemModeMap> = $r24;

     label3:
        $r8 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: java.util.HashMap mOemModeMap>;

        $r7 = r2[0];

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r7);

        r3 = (java.util.HashMap) $r9;

        r26 = r3;

        if r3 != null goto label4;

        $r20 = new java.util.HashMap;

        specialinvoke $r20.<java.util.HashMap: void <init>()>();

        r26 = $r20;

        $r22 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: java.util.HashMap mOemModeMap>;

        $r21 = r2[0];

        virtualinvoke $r22.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r20);

     label4:
        $r10 = r2[1];

        $z0 = virtualinvoke r26.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r10);

        if $z0 != 0 goto label6;

        $i2 = lengthof r2;

        if $i2 != 3 goto label5;

        $r18 = r2[1];

        $r16 = new android.util.Pair;

        $r17 = r2[2];

        specialinvoke $r16.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r17, "");

        virtualinvoke r26.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, $r16);

        goto label6;

     label5:
        $r14 = r2[1];

        $r11 = new android.util.Pair;

        $r13 = r2[2];

        $r12 = r2[3];

        specialinvoke $r11.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r13, $r12);

        virtualinvoke r26.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r11);

     label6:
        i4 = i4 + 1;

        goto label1;

     label7:
        return;
    }

    private static java.lang.String removeFunction(java.lang.String, java.lang.String)
    {
        java.lang.String r0, $r2, $r5, $r6, r7, r8;
        int $i0, $i1, $i2, i3, i4, $i5;
        java.lang.StringBuilder $r1;
        boolean $z0;
        java.lang.String[] r9;

        r7 := @parameter0: java.lang.String;

        r8 := @parameter1: java.lang.String;

        r9 = virtualinvoke r7.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        i3 = 0;

     label1:
        $i0 = lengthof r9;

        if i3 >= $i0 goto label3;

        $r6 = r9[i3];

        $z0 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label2;

        r9[i3] = null;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $i1 = lengthof r9;

        if $i1 != 1 goto label4;

        $r5 = r9[0];

        if $r5 != null goto label4;

        return "none";

     label4:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        i4 = 0;

     label5:
        $i5 = lengthof r9;

        if i4 >= $i5 goto label8;

        r0 = r9[i4];

        if r0 == null goto label7;

        $i2 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        if $i2 <= 0 goto label6;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label6:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

     label7:
        i4 = i4 + 1;

        goto label5;

     label8:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    private void setUsbConfig(java.lang.String)
    {
        com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy r0;
        java.lang.String r1;

        r0 := @this: com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: void setSystemProperty(java.lang.String,java.lang.String)>("sys.usb.config", r1);

        return;
    }

    private boolean trySetEnabledFunctions(long, boolean)
    {
        com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy r0;
        long l0, $l2, $l5, $l6;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        java.lang.String r1, $r2, $r8, $r9, $r10, $r11, $r12, $r13, r14, r15, r16, r17, $r20, r21;
        byte $b1;
        java.lang.StringBuilder $r5, $r18;

        r0 := @this: com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        r14 = null;

        $b1 = l0 cmp 0L;

        if $b1 == 0 goto label01;

        r14 = staticinvoke <android.hardware.usb.UsbManager: java.lang.String usbFunctionsToString(long)>(l0);

     label01:
        r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: long mCurrentFunctions> = l0;

        if r14 == null goto label02;

        r15 = r14;

        $r13 = virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: java.lang.String applyAdbFunction(java.lang.String)>(r14);

        $z8 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("none");

        if $z8 == 0 goto label03;

     label02:
        $l2 = virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: long getChargingFunctions()>();

        r15 = staticinvoke <android.hardware.usb.UsbManager: java.lang.String usbFunctionsToString(long)>($l2);

     label03:
        r16 = virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: java.lang.String applyAdbFunction(java.lang.String)>(r15);

        r1 = specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: java.lang.String applyOemOverrideFunction(java.lang.String)>(r16);

        $z9 = specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: boolean isNormalBoot()>();

        if $z9 != 0 goto label04;

        $r11 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: java.lang.String mCurrentFunctionsStr>;

        $z7 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r16);

        if $z7 != 0 goto label04;

        $r12 = specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: java.lang.String getPersistProp(boolean)>(1);

        virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: void setSystemProperty(java.lang.String,java.lang.String)>($r12, r16);

     label04:
        $z10 = virtualinvoke r16.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z10 != 0 goto label05;

        $r10 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: java.lang.String mCurrentOemFunctions>;

        $z6 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z6 == 0 goto label06;

     label05:
        $r2 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: java.lang.String mCurrentFunctionsStr>;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r16);

        if $z1 == 0 goto label06;

        $z5 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: boolean mCurrentFunctionsApplied>;

        if $z5 == 0 goto label06;

        if z0 == 0 goto label11;

     label06:
        r17 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$300()>();

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting USB config to ");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r17, $r20);

        r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: java.lang.String mCurrentFunctionsStr> = r16;

        r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: java.lang.String mCurrentOemFunctions> = r1;

        r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: boolean mCurrentFunctionsApplied> = 0;

        specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: void setUsbConfig(java.lang.String)>("none");

        $z11 = specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: boolean waitForState(java.lang.String)>("none");

        if $z11 != 0 goto label07;

        $r9 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$300()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r9, "Failed to kick USB config");

        return 0;

     label07:
        specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: void setUsbConfig(java.lang.String)>(r1);

        $z2 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: boolean mBootCompleted>;

        if $z2 == 0 goto label09;

        $z3 = staticinvoke <com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: boolean containsFunction(java.lang.String,java.lang.String)>(r16, "mtp");

        if $z3 != 0 goto label08;

        $z4 = staticinvoke <com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: boolean containsFunction(java.lang.String,java.lang.String)>(r16, "ptp");

        if $z4 == 0 goto label09;

     label08:
        $l5 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: long mCurrentFunctions>;

        $l6 = virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: long getAppliedFunctions(long)>($l5);

        virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: void updateUsbStateBroadcastIfNeeded(long)>($l6);

     label09:
        $z12 = specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: boolean waitForState(java.lang.String)>(r1);

        if $z12 != 0 goto label10;

        r21 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$300()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to switch USB config to ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>(r21, $r8);

        return 0;

     label10:
        r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: boolean mCurrentFunctionsApplied> = 1;

     label11:
        return 1;
    }

    private boolean waitForState(java.lang.String)
    {
        com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy r0;
        java.lang.String r1, r2, $r9, r10;
        java.lang.StringBuilder $r4;
        boolean $z0;
        int i1;

        r0 := @this: com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy;

        r1 := @parameter0: java.lang.String;

        r10 = null;

        i1 = 0;

     label1:
        if i1 >= 20 goto label3;

        r10 = virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>("sys.usb.state", "");

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        staticinvoke <android.os.SystemClock: void sleep(long)>(50L);

        i1 = i1 + 1;

        goto label1;

     label3:
        r2 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$300()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("waitForState(");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") FAILED: got ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>(r2, $r9);

        return 0;
    }

    protected java.lang.String applyAdbFunction(java.lang.String)
    {
        com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy r0;
        boolean $z0;
        java.lang.String r1, r2, r3;

        r0 := @this: com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy;

        r1 := @parameter0: java.lang.String;

        r2 = r1;

        if r1 != null goto label1;

        r2 = "";

     label1:
        $z0 = virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: boolean isAdbEnabled()>();

        if $z0 == 0 goto label2;

        r3 = staticinvoke <com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: java.lang.String addFunction(java.lang.String,java.lang.String)>(r2, "adb");

        goto label3;

     label2:
        r3 = staticinvoke <com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: java.lang.String removeFunction(java.lang.String,java.lang.String)>(r2, "adb");

     label3:
        return r3;
    }

    protected void setEnabledFunctions(long, boolean)
    {
        com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy r0;
        long l0, l1;
        boolean $z0, $z1, $z2, $z3, z4, z5, z6, $z7;
        java.lang.String $r1, $r2, $r3, $r4;
        byte $b5;

        r0 := @this: com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy;

        l0 := @parameter0: long;

        z4 := @parameter1: boolean;

        z5 = virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: boolean isUsbDataTransferActive(long)>(l0);

        $z0 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: boolean mUsbDataUnlocked>;

        if z5 == $z0 goto label1;

        r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: boolean mUsbDataUnlocked> = z5;

        virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: void updateUsbNotification(boolean)>(0);

        z4 = 1;

     label1:
        l1 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: long mCurrentFunctions>;

        z6 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: boolean mCurrentFunctionsApplied>;

        $z1 = specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: boolean trySetEnabledFunctions(long,boolean)>(l0, z4);

        if $z1 == 0 goto label2;

        return;

     label2:
        if z6 == 0 goto label3;

        $b5 = l1 cmp l0;

        if $b5 == 0 goto label3;

        $r3 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$300()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r3, "Failsafe 1: Restoring previous USB functions.");

        $z3 = specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: boolean trySetEnabledFunctions(long,boolean)>(l1, 0);

        if $z3 == 0 goto label3;

        return;

     label3:
        $r4 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$300()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r4, "Failsafe 2: Restoring default USB functions.");

        $z7 = specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: boolean trySetEnabledFunctions(long,boolean)>(0L, 0);

        if $z7 == 0 goto label4;

        return;

     label4:
        $r1 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$300()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r1, "Failsafe 3: Restoring empty function list (with ADB if enabled).");

        $z2 = specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: boolean trySetEnabledFunctions(long,boolean)>(0L, 0);

        if $z2 == 0 goto label5;

        return;

     label5:
        $r2 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$300()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r2, "Unable to set any USB functions!");

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: java.lang.String USB_STATE_PROPERTY> = "sys.usb.state";

        <com.android.server.usb.UsbDeviceManager$UsbHandlerLegacy: java.lang.String USB_CONFIG_PROPERTY> = "sys.usb.config";

        return;
    }
}
