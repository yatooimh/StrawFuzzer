class com.android.server.usb.UsbHostManager$ConnectionRecord extends java.lang.Object
{
    static final int CONNECT;
    static final int CONNECT_BADDEVICE;
    static final int CONNECT_BADPARSE;
    static final int DISCONNECT;
    private static final int kDumpBytesPerLine;
    final byte[] mDescriptors;
    java.lang.String mDeviceAddress;
    final int mMode;
    long mTimestamp;
    final com.android.server.usb.UsbHostManager this$0;

    void <init>(com.android.server.usb.UsbHostManager, java.lang.String, int, byte[])
    {
        com.android.server.usb.UsbHostManager$ConnectionRecord r0;
        com.android.server.usb.UsbHostManager r1;
        java.lang.String r2;
        int i0;
        byte[] r3;
        long $l1;

        r0 := @this: com.android.server.usb.UsbHostManager$ConnectionRecord;

        r1 := @parameter0: com.android.server.usb.UsbHostManager;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: byte[];

        r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: com.android.server.usb.UsbHostManager this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: long mTimestamp> = $l1;

        r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: java.lang.String mDeviceAddress> = r2;

        r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: int mMode> = i0;

        r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: byte[] mDescriptors> = r3;

        return;
    }

    private java.lang.String formatTime()
    {
        com.android.server.usb.UsbHostManager$ConnectionRecord r0;
        java.lang.StringBuilder $r1;
        java.util.Date $r2;
        long $l0;
        java.text.SimpleDateFormat $r3;
        java.lang.String $r4, $r5;

        r0 := @this: com.android.server.usb.UsbHostManager$ConnectionRecord;

        $r1 = new java.lang.StringBuilder;

        $r3 = <com.android.server.usb.UsbHostManager: java.text.SimpleDateFormat sFormat>;

        $r2 = new java.util.Date;

        $l0 = r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: long mTimestamp>;

        specialinvoke $r2.<java.util.Date: void <init>(long)>($l0);

        $r4 = virtualinvoke $r3.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r2);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    void dump(com.android.internal.util.dump.DualDumpOutputStream, java.lang.String, long)
    {
        com.android.server.usb.UsbHostManager$ConnectionRecord r0;
        com.android.internal.util.dump.DualDumpOutputStream r1;
        long l0, $l2, l6, l7;
        java.lang.String $r3, $r6, r7;
        int $i1, $i3, $i4, $i5;
        com.android.server.usb.descriptors.UsbDescriptorParser $r4;
        byte[] $r5;
        boolean $z0, $z1;
        com.android.server.usb.descriptors.UsbDeviceDescriptor r8;

        r0 := @this: com.android.server.usb.UsbHostManager$ConnectionRecord;

        r1 := @parameter0: com.android.internal.util.dump.DualDumpOutputStream;

        r7 := @parameter1: java.lang.String;

        l6 := @parameter2: long;

        l7 = virtualinvoke r1.<com.android.internal.util.dump.DualDumpOutputStream: long start(java.lang.String,long)>(r7, l6);

        $r3 = r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: java.lang.String mDeviceAddress>;

        virtualinvoke r1.<com.android.internal.util.dump.DualDumpOutputStream: void write(java.lang.String,long,java.lang.String)>("device_address", 1138166333441L, $r3);

        $i1 = r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: int mMode>;

        virtualinvoke r1.<com.android.internal.util.dump.DualDumpOutputStream: void write(java.lang.String,long,int)>("mode", 1159641169922L, $i1);

        $l2 = r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: long mTimestamp>;

        virtualinvoke r1.<com.android.internal.util.dump.DualDumpOutputStream: void write(java.lang.String,long,long)>("timestamp", 1112396529667L, $l2);

        $i3 = r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: int mMode>;

        if $i3 == -1 goto label1;

        $r4 = new com.android.server.usb.descriptors.UsbDescriptorParser;

        $r6 = r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: java.lang.String mDeviceAddress>;

        $r5 = r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: byte[] mDescriptors>;

        specialinvoke $r4.<com.android.server.usb.descriptors.UsbDescriptorParser: void <init>(java.lang.String,byte[])>($r6, $r5);

        r8 = virtualinvoke $r4.<com.android.server.usb.descriptors.UsbDescriptorParser: com.android.server.usb.descriptors.UsbDeviceDescriptor getDeviceDescriptor()>();

        $i4 = virtualinvoke r8.<com.android.server.usb.descriptors.UsbDeviceDescriptor: int getVendorID()>();

        virtualinvoke r1.<com.android.internal.util.dump.DualDumpOutputStream: void write(java.lang.String,long,int)>("manufacturer", 1120986464260L, $i4);

        $i5 = virtualinvoke r8.<com.android.server.usb.descriptors.UsbDeviceDescriptor: int getProductID()>();

        virtualinvoke r1.<com.android.internal.util.dump.DualDumpOutputStream: void write(java.lang.String,long,int)>("product", 1120986464261L, $i5);

        l0 = virtualinvoke r1.<com.android.internal.util.dump.DualDumpOutputStream: long start(java.lang.String,long)>("is_headset", 1146756268038L);

        $z0 = virtualinvoke $r4.<com.android.server.usb.descriptors.UsbDescriptorParser: boolean isInputHeadset()>();

        virtualinvoke r1.<com.android.internal.util.dump.DualDumpOutputStream: void write(java.lang.String,long,boolean)>("in", 1133871366145L, $z0);

        $z1 = virtualinvoke $r4.<com.android.server.usb.descriptors.UsbDescriptorParser: boolean isOutputHeadset()>();

        virtualinvoke r1.<com.android.internal.util.dump.DualDumpOutputStream: void write(java.lang.String,long,boolean)>("out", 1133871366146L, $z1);

        virtualinvoke r1.<com.android.internal.util.dump.DualDumpOutputStream: void end(long)>(l0);

     label1:
        virtualinvoke r1.<com.android.internal.util.dump.DualDumpOutputStream: void end(long)>(l7);

        return;
    }

    void dumpList(com.android.internal.util.IndentingPrintWriter)
    {
        com.android.server.usb.UsbHostManager$ConnectionRecord r0;
        com.android.internal.util.IndentingPrintWriter r1;
        int $i0, $i1;
        java.lang.StringBuilder $r4, $r11, $r23, $r27;
        java.lang.String $r5, $r8, $r10, $r12, $r15, $r19, $r22, $r26, $r33;
        com.android.server.usb.descriptors.UsbDescriptorParser $r20;
        byte[] $r21;
        com.android.server.usb.descriptors.report.TextReportCanvas $r24;
        java.util.ArrayList $r25;
        boolean $z0, $z1, $z2;
        java.lang.Object $r34;
        com.android.server.usb.descriptors.UsbDescriptor $r35;
        java.util.Iterator r38;

        r0 := @this: com.android.server.usb.UsbHostManager$ConnectionRecord;

        r1 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        $i0 = r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: int mMode>;

        if $i0 == -1 goto label3;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = specialinvoke r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: java.lang.String formatTime()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Connect ");

        $r15 = r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: java.lang.String mDeviceAddress>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mode:");

        $i1 = r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: int mMode>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r19 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r19);

        $r20 = new com.android.server.usb.descriptors.UsbDescriptorParser;

        $r22 = r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: java.lang.String mDeviceAddress>;

        $r21 = r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: byte[] mDescriptors>;

        specialinvoke $r20.<com.android.server.usb.descriptors.UsbDescriptorParser: void <init>(java.lang.String,byte[])>($r22, $r21);

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = new com.android.server.usb.descriptors.report.TextReportCanvas;

        specialinvoke $r24.<com.android.server.usb.descriptors.report.TextReportCanvas: void <init>(com.android.server.usb.descriptors.UsbDescriptorParser,java.lang.StringBuilder)>($r20, $r23);

        $r25 = virtualinvoke $r20.<com.android.server.usb.descriptors.UsbDescriptorParser: java.util.ArrayList getDescriptors()>();

        r38 = virtualinvoke $r25.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r34 = interfaceinvoke r38.<java.util.Iterator: java.lang.Object next()>();

        $r35 = (com.android.server.usb.descriptors.UsbDescriptor) $r34;

        virtualinvoke $r35.<com.android.server.usb.descriptors.UsbDescriptor: void report(com.android.server.usb.descriptors.report.ReportCanvas)>($r24);

        goto label1;

     label2:
        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r26);

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isHeadset[in: ");

        $z1 = virtualinvoke $r20.<com.android.server.usb.descriptors.UsbDescriptorParser: boolean isInputHeadset()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , out: ");

        $z2 = virtualinvoke $r20.<com.android.server.usb.descriptors.UsbDescriptorParser: boolean isOutputHeadset()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r33 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r33);

        goto label4;

     label3:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = specialinvoke r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: java.lang.String formatTime()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Disconnect ");

        $r8 = r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: java.lang.String mDeviceAddress>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r10);

     label4:
        return;
    }

    void dumpRaw(com.android.internal.util.IndentingPrintWriter)
    {
        com.android.server.usb.UsbHostManager$ConnectionRecord r0;
        com.android.internal.util.IndentingPrintWriter r1;
        int i0, $i1, $i2, $i3, i6, i7, i8;
        java.lang.StringBuilder $r2, $r9, $r19, $r24, $r33;
        java.lang.String $r3, $r6, $r8, $r10, $r13, $r17, $r23, $r25, $r30, $r34, $r39;
        byte[] $r18, $r28, $r37;
        java.lang.Object[] $r27, $r36;
        byte $b4, $b5;
        java.lang.Byte $r29, $r38;

        r0 := @this: com.android.server.usb.UsbHostManager$ConnectionRecord;

        r1 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        $i1 = r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: int mMode>;

        if $i1 == -1 goto label7;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = specialinvoke r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: java.lang.String formatTime()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Connect ");

        $r13 = r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: java.lang.String mDeviceAddress>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mode:");

        $i2 = r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: int mMode>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r17 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r17);

        $r18 = r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: byte[] mDescriptors>;

        i0 = lengthof $r18;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Raw Descriptors ");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes");

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r23);

        i6 = 0;

        i7 = 0;

     label1:
        $i3 = i0 / 16;

        if i7 >= $i3 goto label4;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        i8 = 0;

     label2:
        if i8 >= 16 goto label3;

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");

        $r36 = newarray (java.lang.Object)[1];

        $r37 = r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: byte[] mDescriptors>;

        $b5 = $r37[i6];

        $r38 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b5);

        $r36[0] = $r38;

        $r39 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("0x%02X", $r36);

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        i8 = i8 + 1;

        i6 = i6 + 1;

        goto label2;

     label3:
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r34);

        i7 = i7 + 1;

        goto label1;

     label4:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

     label5:
        if i6 >= i0 goto label6;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");

        $r27 = newarray (java.lang.Object)[1];

        $r28 = r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: byte[] mDescriptors>;

        $b4 = $r28[i6];

        $r29 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b4);

        $r27[0] = $r29;

        $r30 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("0x%02X", $r27);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        i6 = i6 + 1;

        goto label5;

     label6:
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r25);

        goto label8;

     label7:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = specialinvoke r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: java.lang.String formatTime()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Disconnect ");

        $r6 = r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: java.lang.String mDeviceAddress>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r8);

     label8:
        return;
    }

    void dumpShort(com.android.internal.util.IndentingPrintWriter)
    {
        com.android.server.usb.UsbHostManager$ConnectionRecord r0;
        com.android.internal.util.IndentingPrintWriter r1;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r3, $r10, $r22, $r30;
        java.lang.String $r4, $r7, $r9, $r11, $r14, $r18, $r21, $r24, $r27, $r29, $r36;
        com.android.server.usb.descriptors.UsbDescriptorParser $r19;
        byte[] $r20;
        boolean $z0, $z1;
        com.android.server.usb.descriptors.UsbDeviceDescriptor r39;

        r0 := @this: com.android.server.usb.UsbHostManager$ConnectionRecord;

        r1 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        $i0 = r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: int mMode>;

        if $i0 == -1 goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = specialinvoke r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: java.lang.String formatTime()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Connect ");

        $r14 = r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: java.lang.String mDeviceAddress>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mode:");

        $i1 = r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: int mMode>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r18 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r18);

        $r19 = new com.android.server.usb.descriptors.UsbDescriptorParser;

        $r21 = r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: java.lang.String mDeviceAddress>;

        $r20 = r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: byte[] mDescriptors>;

        specialinvoke $r19.<com.android.server.usb.descriptors.UsbDescriptorParser: void <init>(java.lang.String,byte[])>($r21, $r20);

        r39 = virtualinvoke $r19.<com.android.server.usb.descriptors.UsbDescriptorParser: com.android.server.usb.descriptors.UsbDeviceDescriptor getDeviceDescriptor()>();

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("manfacturer:0x");

        $i2 = virtualinvoke r39.<com.android.server.usb.descriptors.UsbDeviceDescriptor: int getVendorID()>();

        $r24 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i2);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" product:");

        $i3 = virtualinvoke r39.<com.android.server.usb.descriptors.UsbDeviceDescriptor: int getProductID()>();

        $r27 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i3);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r29);

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isHeadset[in: ");

        $z0 = virtualinvoke $r19.<com.android.server.usb.descriptors.UsbDescriptorParser: boolean isInputHeadset()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , out: ");

        $z1 = virtualinvoke $r19.<com.android.server.usb.descriptors.UsbDescriptorParser: boolean isOutputHeadset()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r36 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r36);

        goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = specialinvoke r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: java.lang.String formatTime()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Disconnect ");

        $r7 = r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: java.lang.String mDeviceAddress>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r9);

     label2:
        return;
    }

    void dumpTree(com.android.internal.util.IndentingPrintWriter)
    {
        com.android.server.usb.UsbHostManager$ConnectionRecord r0;
        com.android.internal.util.IndentingPrintWriter r1;
        int $i0, $i1;
        java.lang.StringBuilder $r3, $r10, $r22, $r25;
        java.lang.String $r4, $r7, $r9, $r11, $r14, $r18, $r21, $r31, $r33;
        com.android.server.usb.descriptors.UsbDescriptorParser $r19;
        byte[] $r20;
        com.android.server.usb.descriptors.tree.UsbDescriptorsTree $r23;
        com.android.server.usb.descriptors.report.TextReportCanvas $r24;
        boolean $z0, $z1;

        r0 := @this: com.android.server.usb.UsbHostManager$ConnectionRecord;

        r1 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        $i0 = r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: int mMode>;

        if $i0 == -1 goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = specialinvoke r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: java.lang.String formatTime()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Connect ");

        $r14 = r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: java.lang.String mDeviceAddress>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mode:");

        $i1 = r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: int mMode>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r18 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r18);

        $r19 = new com.android.server.usb.descriptors.UsbDescriptorParser;

        $r21 = r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: java.lang.String mDeviceAddress>;

        $r20 = r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: byte[] mDescriptors>;

        specialinvoke $r19.<com.android.server.usb.descriptors.UsbDescriptorParser: void <init>(java.lang.String,byte[])>($r21, $r20);

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = new com.android.server.usb.descriptors.tree.UsbDescriptorsTree;

        specialinvoke $r23.<com.android.server.usb.descriptors.tree.UsbDescriptorsTree: void <init>()>();

        virtualinvoke $r23.<com.android.server.usb.descriptors.tree.UsbDescriptorsTree: void parse(com.android.server.usb.descriptors.UsbDescriptorParser)>($r19);

        $r24 = new com.android.server.usb.descriptors.report.TextReportCanvas;

        specialinvoke $r24.<com.android.server.usb.descriptors.report.TextReportCanvas: void <init>(com.android.server.usb.descriptors.UsbDescriptorParser,java.lang.StringBuilder)>($r19, $r22);

        virtualinvoke $r23.<com.android.server.usb.descriptors.tree.UsbDescriptorsTree: void report(com.android.server.usb.descriptors.report.ReportCanvas)>($r24);

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isHeadset[in: ");

        $z0 = virtualinvoke $r19.<com.android.server.usb.descriptors.UsbDescriptorParser: boolean isInputHeadset()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , out: ");

        $z1 = virtualinvoke $r19.<com.android.server.usb.descriptors.UsbDescriptorParser: boolean isOutputHeadset()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r31 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r33);

        goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = specialinvoke r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: java.lang.String formatTime()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Disconnect ");

        $r7 = r0.<com.android.server.usb.UsbHostManager$ConnectionRecord: java.lang.String mDeviceAddress>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r9);

     label2:
        return;
    }

    public static void <clinit>()
    {
        <com.android.server.usb.UsbHostManager$ConnectionRecord: int kDumpBytesPerLine> = 16;

        <com.android.server.usb.UsbHostManager$ConnectionRecord: int DISCONNECT> = -1;

        <com.android.server.usb.UsbHostManager$ConnectionRecord: int CONNECT_BADPARSE> = 1;

        <com.android.server.usb.UsbHostManager$ConnectionRecord: int CONNECT_BADDEVICE> = 2;

        <com.android.server.usb.UsbHostManager$ConnectionRecord: int CONNECT> = 0;

        return;
    }
}
