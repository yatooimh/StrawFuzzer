class com.android.server.usb.UsbPermissionManager extends java.lang.Object
{
    private static final boolean DEBUG;
    private static final java.lang.String LOG_TAG;
    private final android.content.Context mContext;
    private final android.util.SparseArray mPermissionsByUser;
    final com.android.server.usb.UsbService mUsbService;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <com.android.server.usb.UsbPermissionManager: boolean DEBUG> = 0;

        $r0 = class "Lcom/android/server/usb/UsbPermissionManager;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.server.usb.UsbPermissionManager: java.lang.String LOG_TAG> = $r1;

        return;
    }

    void <init>(android.content.Context, com.android.server.usb.UsbService)
    {
        com.android.server.usb.UsbPermissionManager r0;
        android.content.Context r1;
        com.android.server.usb.UsbService r2;
        android.util.SparseArray $r3;

        r0 := @this: com.android.server.usb.UsbPermissionManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.usb.UsbService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.usb.UsbPermissionManager: android.util.SparseArray mPermissionsByUser> = $r3;

        r0.<com.android.server.usb.UsbPermissionManager: android.content.Context mContext> = r1;

        r0.<com.android.server.usb.UsbPermissionManager: com.android.server.usb.UsbService mUsbService> = r2;

        return;
    }

    void dump(com.android.internal.util.dump.DualDumpOutputStream, java.lang.String, long)
    {
        com.android.server.usb.UsbPermissionManager r0;
        int i0, $i1, i4;
        android.content.Context $r1;
        java.lang.Object $r2, $r3;
        android.content.pm.UserInfo $r4;
        com.android.server.usb.UsbUserPermissionManager $r5;
        java.lang.Throwable $r6;
        com.android.internal.util.dump.DualDumpOutputStream r7;
        java.lang.String r8;
        long l2, l3;
        android.os.UserManager r9;
        android.util.SparseArray r10;
        java.util.List r11;

        r0 := @this: com.android.server.usb.UsbPermissionManager;

        r7 := @parameter0: com.android.internal.util.dump.DualDumpOutputStream;

        r8 := @parameter1: java.lang.String;

        l2 := @parameter2: long;

        l3 = virtualinvoke r7.<com.android.internal.util.dump.DualDumpOutputStream: long start(java.lang.String,long)>(r8, l2);

        $r1 = r0.<com.android.server.usb.UsbPermissionManager: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/os/UserManager;");

        r9 = (android.os.UserManager) $r2;

        r10 = r0.<com.android.server.usb.UsbPermissionManager: android.util.SparseArray mPermissionsByUser>;

        entermonitor r10;

     label01:
        r11 = virtualinvoke r9.<android.os.UserManager: java.util.List getUsers()>();

        i0 = interfaceinvoke r11.<java.util.List: int size()>();

     label02:
        i4 = 0;

     label03:
        if i4 >= i0 goto label06;

     label04:
        $r3 = interfaceinvoke r11.<java.util.List: java.lang.Object get(int)>(i4);

        $r4 = (android.content.pm.UserInfo) $r3;

        $i1 = $r4.<android.content.pm.UserInfo: int id>;

        $r5 = virtualinvoke r0.<com.android.server.usb.UsbPermissionManager: com.android.server.usb.UsbUserPermissionManager getPermissionsForUser(int)>($i1);

        virtualinvoke $r5.<com.android.server.usb.UsbUserPermissionManager: void dump(com.android.internal.util.dump.DualDumpOutputStream,java.lang.String,long)>(r7, "user_permissions", 2246267895809L);

     label05:
        i4 = i4 + 1;

        goto label03;

     label06:
        exitmonitor r10;

     label07:
        virtualinvoke r7.<com.android.internal.util.dump.DualDumpOutputStream: void end(long)>(l3);

        return;

     label08:
        $r6 := @caughtexception;

     label09:
        exitmonitor r10;

     label10:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    com.android.server.usb.UsbUserPermissionManager getPermissionsForUser(int)
    {
        com.android.server.usb.UsbPermissionManager r0;
        int i0;
        android.util.SparseArray r1, $r3, $r10;
        com.android.server.usb.UsbUserPermissionManager r2, r12;
        java.lang.Object $r4;
        android.content.Context $r5, $r7;
        android.os.UserHandle $r6;
        com.android.server.usb.UsbService $r8;
        com.android.server.usb.UsbUserSettingsManager $r9;
        java.lang.Throwable $r11;

        r0 := @this: com.android.server.usb.UsbPermissionManager;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.usb.UsbPermissionManager: android.util.SparseArray mPermissionsByUser>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.usb.UsbPermissionManager: android.util.SparseArray mPermissionsByUser>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.usb.UsbUserPermissionManager) $r4;

     label2:
        r12 = r2;

        if r2 != null goto label5;

     label3:
        r12 = new com.android.server.usb.UsbUserPermissionManager;

        $r5 = r0.<com.android.server.usb.UsbPermissionManager: android.content.Context mContext>;

        $r6 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>(i0);

        $r7 = virtualinvoke $r5.<android.content.Context: android.content.Context createContextAsUser(android.os.UserHandle,int)>($r6, 0);

        $r8 = r0.<com.android.server.usb.UsbPermissionManager: com.android.server.usb.UsbService mUsbService>;

        $r9 = virtualinvoke $r8.<com.android.server.usb.UsbService: com.android.server.usb.UsbUserSettingsManager getSettingsForUser(int)>(i0);

        specialinvoke r12.<com.android.server.usb.UsbUserPermissionManager: void <init>(android.content.Context,com.android.server.usb.UsbUserSettingsManager)>($r7, $r9);

     label4:
        $r10 = r0.<com.android.server.usb.UsbPermissionManager: android.util.SparseArray mPermissionsByUser>;

        virtualinvoke $r10.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r12);

     label5:
        exitmonitor r1;

     label6:
        return r12;

     label7:
        $r11 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    com.android.server.usb.UsbUserPermissionManager getPermissionsForUser(android.os.UserHandle)
    {
        com.android.server.usb.UsbPermissionManager r0;
        android.os.UserHandle r1;
        int $i0;
        com.android.server.usb.UsbUserPermissionManager $r2;

        r0 := @this: com.android.server.usb.UsbPermissionManager;

        r1 := @parameter0: android.os.UserHandle;

        $i0 = virtualinvoke r1.<android.os.UserHandle: int getIdentifier()>();

        $r2 = virtualinvoke r0.<com.android.server.usb.UsbPermissionManager: com.android.server.usb.UsbUserPermissionManager getPermissionsForUser(int)>($i0);

        return $r2;
    }

    void remove(android.os.UserHandle)
    {
        com.android.server.usb.UsbPermissionManager r0;
        android.util.SparseArray r1, $r2;
        int $i0;
        java.lang.Throwable $r3;
        android.os.UserHandle r4;

        r0 := @this: com.android.server.usb.UsbPermissionManager;

        r4 := @parameter0: android.os.UserHandle;

        r1 = r0.<com.android.server.usb.UsbPermissionManager: android.util.SparseArray mPermissionsByUser>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.usb.UsbPermissionManager: android.util.SparseArray mPermissionsByUser>;

        $i0 = virtualinvoke r4.<android.os.UserHandle: int getIdentifier()>();

        virtualinvoke $r2.<android.util.SparseArray: void remove(int)>($i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void usbAccessoryRemoved(android.hardware.usb.UsbAccessory)
    {
        com.android.server.usb.UsbPermissionManager r0;
        android.util.SparseArray $r1, $r7, r12;
        int $i0, i1;
        android.content.Intent $r2;
        android.os.UserHandle $r5;
        android.content.Context $r6;
        java.lang.Object $r8;
        com.android.server.usb.UsbUserPermissionManager $r9;
        java.lang.Throwable $r10;
        android.hardware.usb.UsbAccessory r11;

        r0 := @this: com.android.server.usb.UsbPermissionManager;

        r11 := @parameter0: android.hardware.usb.UsbAccessory;

        r12 = r0.<com.android.server.usb.UsbPermissionManager: android.util.SparseArray mPermissionsByUser>;

        entermonitor r12;

        i1 = 0;

     label1:
        $r1 = r0.<com.android.server.usb.UsbPermissionManager: android.util.SparseArray mPermissionsByUser>;

        $i0 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        if i1 >= $i0 goto label3;

        $r7 = r0.<com.android.server.usb.UsbPermissionManager: android.util.SparseArray mPermissionsByUser>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r9 = (com.android.server.usb.UsbUserPermissionManager) $r8;

        virtualinvoke $r9.<com.android.server.usb.UsbUserPermissionManager: void removeAccessoryPermissions(android.hardware.usb.UsbAccessory)>(r11);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        exitmonitor r12;

     label4:
        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.hardware.usb.action.USB_ACCESSORY_DETACHED");

        virtualinvoke $r2.<android.content.Intent: android.content.Intent addFlags(int)>(16777216);

        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("accessory", r11);

        $r6 = r0.<com.android.server.usb.UsbPermissionManager: android.content.Context mContext>;

        $r5 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r6.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r2, $r5);

        return;

     label5:
        $r10 := @caughtexception;

     label6:
        exitmonitor r12;

     label7:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    void usbDeviceRemoved(android.hardware.usb.UsbDevice)
    {
        com.android.server.usb.UsbPermissionManager r0;
        android.util.SparseArray $r1, $r7, r12;
        int $i0, i1;
        android.content.Intent $r2;
        android.os.UserHandle $r5;
        android.content.Context $r6;
        java.lang.Object $r8;
        com.android.server.usb.UsbUserPermissionManager $r9;
        java.lang.Throwable $r10;
        android.hardware.usb.UsbDevice r11;

        r0 := @this: com.android.server.usb.UsbPermissionManager;

        r11 := @parameter0: android.hardware.usb.UsbDevice;

        r12 = r0.<com.android.server.usb.UsbPermissionManager: android.util.SparseArray mPermissionsByUser>;

        entermonitor r12;

        i1 = 0;

     label1:
        $r1 = r0.<com.android.server.usb.UsbPermissionManager: android.util.SparseArray mPermissionsByUser>;

        $i0 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        if i1 >= $i0 goto label3;

        $r7 = r0.<com.android.server.usb.UsbPermissionManager: android.util.SparseArray mPermissionsByUser>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r9 = (com.android.server.usb.UsbUserPermissionManager) $r8;

        virtualinvoke $r9.<com.android.server.usb.UsbUserPermissionManager: void removeDevicePermissions(android.hardware.usb.UsbDevice)>(r11);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        exitmonitor r12;

     label4:
        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.hardware.usb.action.USB_DEVICE_DETACHED");

        virtualinvoke $r2.<android.content.Intent: android.content.Intent addFlags(int)>(16777216);

        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("device", r11);

        $r6 = r0.<com.android.server.usb.UsbPermissionManager: android.content.Context mContext>;

        $r5 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r6.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r2, $r5);

        return;

     label5:
        $r10 := @caughtexception;

     label6:
        exitmonitor r12;

     label7:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }
}
