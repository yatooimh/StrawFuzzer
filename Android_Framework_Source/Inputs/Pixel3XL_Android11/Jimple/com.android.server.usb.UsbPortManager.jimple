public class com.android.server.usb.UsbPortManager extends java.lang.Object
{
    private static final int COMBO_SINK_DEVICE;
    private static final int COMBO_SINK_HOST;
    private static final int COMBO_SOURCE_DEVICE;
    private static final int COMBO_SOURCE_HOST;
    private static final int MSG_SYSTEM_READY;
    private static final int MSG_UPDATE_PORTS;
    private static final java.lang.String PORT_INFO;
    private static final java.lang.String TAG;
    private static final int USB_HAL_DEATH_COOKIE;
    private final android.util.ArrayMap mConnected;
    private final android.util.ArrayMap mContaminantStatus;
    private final android.content.Context mContext;
    private com.android.server.usb.UsbPortManager$HALCallback mHALCallback;
    private final android.os.Handler mHandler;
    private int mIsPortContaminatedNotificationId;
    private final java.lang.Object mLock;
    private android.app.NotificationManager mNotificationManager;
    private final android.util.ArrayMap mPorts;
    private android.hardware.usb.V1_0.IUsb mProxy;
    private final android.util.ArrayMap mSimulatedPorts;
    private boolean mSystemReady;

    static void <clinit>()
    {
        int $i0, $i1, $i2, $i3;

        <com.android.server.usb.UsbPortManager: int USB_HAL_DEATH_COOKIE> = 1000;

        <com.android.server.usb.UsbPortManager: java.lang.String TAG> = "UsbPortManager";

        <com.android.server.usb.UsbPortManager: java.lang.String PORT_INFO> = "port_info";

        <com.android.server.usb.UsbPortManager: int MSG_UPDATE_PORTS> = 1;

        <com.android.server.usb.UsbPortManager: int MSG_SYSTEM_READY> = 2;

        $i0 = staticinvoke <android.hardware.usb.UsbPort: int combineRolesAsBit(int,int)>(1, 1);

        <com.android.server.usb.UsbPortManager: int COMBO_SOURCE_HOST> = $i0;

        $i1 = staticinvoke <android.hardware.usb.UsbPort: int combineRolesAsBit(int,int)>(1, 2);

        <com.android.server.usb.UsbPortManager: int COMBO_SOURCE_DEVICE> = $i1;

        $i2 = staticinvoke <android.hardware.usb.UsbPort: int combineRolesAsBit(int,int)>(2, 1);

        <com.android.server.usb.UsbPortManager: int COMBO_SINK_HOST> = $i2;

        $i3 = staticinvoke <android.hardware.usb.UsbPort: int combineRolesAsBit(int,int)>(2, 2);

        <com.android.server.usb.UsbPortManager: int COMBO_SINK_DEVICE> = $i3;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.server.usb.UsbPortManager r0;
        com.android.server.usb.UsbPortManager$HALCallback $r1;
        java.lang.Object $r2;
        android.util.ArrayMap $r3, $r4, $r5, $r6;
        com.android.server.usb.UsbPortManager$1 $r7;
        com.android.server.FgThread $r8;
        android.os.Looper $r9;
        android.hidl.manager.V1_0.IServiceManager $r10;
        boolean $z0;
        android.os.RemoteException $r11;
        android.content.Context r12;
        com.android.server.usb.UsbPortManager$ServiceNotification r13;

        r0 := @this: com.android.server.usb.UsbPortManager;

        r12 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.usb.UsbPortManager: android.hardware.usb.V1_0.IUsb mProxy> = null;

        $r1 = new com.android.server.usb.UsbPortManager$HALCallback;

        specialinvoke $r1.<com.android.server.usb.UsbPortManager$HALCallback: void <init>(com.android.internal.util.IndentingPrintWriter,com.android.server.usb.UsbPortManager)>(null, r0);

        r0.<com.android.server.usb.UsbPortManager: com.android.server.usb.UsbPortManager$HALCallback mHALCallback> = $r1;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.server.usb.UsbPortManager: java.lang.Object mLock> = $r2;

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mPorts> = $r3;

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mSimulatedPorts> = $r4;

        $r5 = new android.util.ArrayMap;

        specialinvoke $r5.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mConnected> = $r5;

        $r6 = new android.util.ArrayMap;

        specialinvoke $r6.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mContaminantStatus> = $r6;

        $r7 = new com.android.server.usb.UsbPortManager$1;

        $r8 = staticinvoke <com.android.server.FgThread: com.android.server.FgThread get()>();

        $r9 = virtualinvoke $r8.<com.android.server.FgThread: android.os.Looper getLooper()>();

        specialinvoke $r7.<com.android.server.usb.UsbPortManager$1: void <init>(com.android.server.usb.UsbPortManager,android.os.Looper)>(r0, $r9);

        r0.<com.android.server.usb.UsbPortManager: android.os.Handler mHandler> = $r7;

        r0.<com.android.server.usb.UsbPortManager: android.content.Context mContext> = r12;

     label1:
        r13 = new com.android.server.usb.UsbPortManager$ServiceNotification;

        specialinvoke r13.<com.android.server.usb.UsbPortManager$ServiceNotification: void <init>(com.android.server.usb.UsbPortManager)>(r0);

        $r10 = staticinvoke <android.hidl.manager.V1_0.IServiceManager: android.hidl.manager.V1_0.IServiceManager getService()>();

        $z0 = interfaceinvoke $r10.<android.hidl.manager.V1_0.IServiceManager: boolean registerForNotifications(java.lang.String,java.lang.String,android.hidl.manager.V1_0.IServiceNotification)>("android.hardware.usb@1.0::IUsb", "", r13);

        if $z0 != 0 goto label2;

        staticinvoke <com.android.server.usb.UsbPortManager: void logAndPrint(int,com.android.internal.util.IndentingPrintWriter,java.lang.String)>(6, null, "Failed to register service start notification");

     label2:
        specialinvoke r0.<com.android.server.usb.UsbPortManager: void connectToProxy(com.android.internal.util.IndentingPrintWriter)>(null);

        return;

     label3:
        $r11 := @caughtexception;

        staticinvoke <com.android.server.usb.UsbPortManager: void logAndPrintException(com.android.internal.util.IndentingPrintWriter,java.lang.String,java.lang.Exception)>(null, "Failed to register service start notification", $r11);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    static boolean access$000(com.android.server.usb.UsbPortManager)
    {
        com.android.server.usb.UsbPortManager r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.usb.UsbPortManager;

        $z0 = r0.<com.android.server.usb.UsbPortManager: boolean mSystemReady>;

        return $z0;
    }

    static void access$100(int, com.android.internal.util.IndentingPrintWriter, java.lang.String)
    {
        int i0;
        com.android.internal.util.IndentingPrintWriter r0;
        java.lang.String r1;

        i0 := @parameter0: int;

        r0 := @parameter1: com.android.internal.util.IndentingPrintWriter;

        r1 := @parameter2: java.lang.String;

        staticinvoke <com.android.server.usb.UsbPortManager: void logAndPrint(int,com.android.internal.util.IndentingPrintWriter,java.lang.String)>(i0, r0, r1);

        return;
    }

    static android.os.Handler access$200(com.android.server.usb.UsbPortManager)
    {
        com.android.server.usb.UsbPortManager r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.usb.UsbPortManager;

        $r1 = r0.<com.android.server.usb.UsbPortManager: android.os.Handler mHandler>;

        return $r1;
    }

    static java.lang.Object access$300(com.android.server.usb.UsbPortManager)
    {
        com.android.server.usb.UsbPortManager r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.usb.UsbPortManager;

        $r1 = r0.<com.android.server.usb.UsbPortManager: java.lang.Object mLock>;

        return $r1;
    }

    static android.hardware.usb.V1_0.IUsb access$402(com.android.server.usb.UsbPortManager, android.hardware.usb.V1_0.IUsb)
    {
        com.android.server.usb.UsbPortManager r0;
        android.hardware.usb.V1_0.IUsb r1;

        r0 := @parameter0: com.android.server.usb.UsbPortManager;

        r1 := @parameter1: android.hardware.usb.V1_0.IUsb;

        r0.<com.android.server.usb.UsbPortManager: android.hardware.usb.V1_0.IUsb mProxy> = r1;

        return r1;
    }

    static void access$500(com.android.server.usb.UsbPortManager, com.android.internal.util.IndentingPrintWriter)
    {
        com.android.server.usb.UsbPortManager r0;
        com.android.internal.util.IndentingPrintWriter r1;

        r0 := @parameter0: com.android.server.usb.UsbPortManager;

        r1 := @parameter1: com.android.internal.util.IndentingPrintWriter;

        specialinvoke r0.<com.android.server.usb.UsbPortManager: void connectToProxy(com.android.internal.util.IndentingPrintWriter)>(r1);

        return;
    }

    static void access$600(com.android.server.usb.UsbPortManager, com.android.internal.util.IndentingPrintWriter, java.util.ArrayList)
    {
        com.android.server.usb.UsbPortManager r0;
        com.android.internal.util.IndentingPrintWriter r1;
        java.util.ArrayList r2;

        r0 := @parameter0: com.android.server.usb.UsbPortManager;

        r1 := @parameter1: com.android.internal.util.IndentingPrintWriter;

        r2 := @parameter2: java.util.ArrayList;

        specialinvoke r0.<com.android.server.usb.UsbPortManager: void updatePortsLocked(com.android.internal.util.IndentingPrintWriter,java.util.ArrayList)>(r1, r2);

        return;
    }

    static android.app.NotificationManager access$702(com.android.server.usb.UsbPortManager, android.app.NotificationManager)
    {
        com.android.server.usb.UsbPortManager r0;
        android.app.NotificationManager r1;

        r0 := @parameter0: com.android.server.usb.UsbPortManager;

        r1 := @parameter1: android.app.NotificationManager;

        r0.<com.android.server.usb.UsbPortManager: android.app.NotificationManager mNotificationManager> = r1;

        return r1;
    }

    static android.content.Context access$800(com.android.server.usb.UsbPortManager)
    {
        com.android.server.usb.UsbPortManager r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.server.usb.UsbPortManager;

        $r1 = r0.<com.android.server.usb.UsbPortManager: android.content.Context mContext>;

        return $r1;
    }

    private void addOrUpdatePortLocked(java.lang.String, int, int, int, boolean, int, boolean, int, boolean, boolean, int, boolean, int, com.android.internal.util.IndentingPrintWriter)
    {
        com.android.server.usb.UsbPortManager r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, i26, i27;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8, z10;
        android.hardware.usb.UsbPort $r1, $r2, $r3, $r6, $r13, $r20;
        java.lang.StringBuilder $r4, $r11, $r18, $r33;
        java.lang.String $r10, $r17, $r21, $r24, $r26, $r35, $r38, $r40, r41;
        com.android.server.usb.UsbPortManager$PortInfo $r27, r46;
        android.content.Context $r28;
        java.lang.Object $r29, $r45;
        android.hardware.usb.UsbManager $r30;
        android.util.ArrayMap $r31, $r44;
        com.android.internal.util.IndentingPrintWriter r42;

        r0 := @this: com.android.server.usb.UsbPortManager;

        r41 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i25 := @parameter3: int;

        z10 := @parameter4: boolean;

        i2 := @parameter5: int;

        z0 := @parameter6: boolean;

        i3 := @parameter7: int;

        z1 := @parameter8: boolean;

        z2 := @parameter9: boolean;

        i4 := @parameter10: int;

        z3 := @parameter11: boolean;

        i5 := @parameter12: int;

        r42 := @parameter13: com.android.internal.util.IndentingPrintWriter;

        $i6 = i0 & 3;

        if $i6 == 3 goto label02;

        if i25 == 0 goto label01;

        if i25 == i0 goto label01;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring inconsistent current mode from USB port driver: supportedModes=");

        $r35 = staticinvoke <android.hardware.usb.UsbPort: java.lang.String modeToString(int)>(i0);

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", currentMode=");

        $r38 = staticinvoke <android.hardware.usb.UsbPort: java.lang.String modeToString(int)>(i25);

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.usb.UsbPortManager: void logAndPrint(int,com.android.internal.util.IndentingPrintWriter,java.lang.String)>(5, r42, $r40);

        i26 = 0;

        z10 = 0;

        goto label03;

     label01:
        z10 = 0;

        i26 = i25;

        goto label03;

     label02:
        i26 = i25;

     label03:
        i27 = staticinvoke <android.hardware.usb.UsbPort: int combineRolesAsBit(int,int)>(i2, i3);

        if i26 == 0 goto label07;

        if i2 == 0 goto label07;

        if i3 == 0 goto label07;

        if z0 == 0 goto label04;

        if z1 == 0 goto label04;

        $i19 = <com.android.server.usb.UsbPortManager: int COMBO_SOURCE_HOST>;

        $i18 = <com.android.server.usb.UsbPortManager: int COMBO_SOURCE_DEVICE>;

        $i21 = $i19 | $i18;

        $i20 = <com.android.server.usb.UsbPortManager: int COMBO_SINK_HOST>;

        $i23 = $i21 | $i20;

        $i22 = <com.android.server.usb.UsbPortManager: int COMBO_SINK_DEVICE>;

        $i24 = $i23 | $i22;

        i27 = i27 | $i24;

        goto label07;

     label04:
        if z0 == 0 goto label05;

        $i15 = staticinvoke <android.hardware.usb.UsbPort: int combineRolesAsBit(int,int)>(1, i3);

        $i16 = i27 | $i15;

        $i17 = staticinvoke <android.hardware.usb.UsbPort: int combineRolesAsBit(int,int)>(2, i3);

        i27 = $i16 | $i17;

        goto label07;

     label05:
        if z1 == 0 goto label06;

        $i12 = staticinvoke <android.hardware.usb.UsbPort: int combineRolesAsBit(int,int)>(i2, 1);

        $i13 = i27 | $i12;

        $i14 = staticinvoke <android.hardware.usb.UsbPort: int combineRolesAsBit(int,int)>(i2, 2);

        i27 = $i13 | $i14;

        goto label07;

     label06:
        if z10 == 0 goto label07;

        $i10 = <com.android.server.usb.UsbPortManager: int COMBO_SOURCE_HOST>;

        $i9 = <com.android.server.usb.UsbPortManager: int COMBO_SINK_DEVICE>;

        $i11 = $i10 | $i9;

        i27 = i27 | $i11;

        goto label07;

     label07:
        $r44 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mPorts>;

        $r45 = virtualinvoke $r44.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r41);

        r46 = (com.android.server.usb.UsbPortManager$PortInfo) $r45;

        if r46 != null goto label08;

        $r27 = new com.android.server.usb.UsbPortManager$PortInfo;

        $r28 = r0.<com.android.server.usb.UsbPortManager: android.content.Context mContext>;

        $r29 = virtualinvoke $r28.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/hardware/usb/UsbManager;");

        $r30 = (android.hardware.usb.UsbManager) $r29;

        specialinvoke $r27.<com.android.server.usb.UsbPortManager$PortInfo: void <init>(android.hardware.usb.UsbManager,java.lang.String,int,int,boolean,boolean)>($r30, r41, i0, i1, z2, z3);

        virtualinvoke $r27.<com.android.server.usb.UsbPortManager$PortInfo: boolean setStatus(int,boolean,int,boolean,int,boolean,int,int,int)>(i26, z10, i2, z0, i3, z1, i27, i4, i5);

        $r31 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mPorts>;

        virtualinvoke $r31.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r41, $r27);

        goto label13;

     label08:
        $r1 = r46.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPort mUsbPort>;

        $i7 = virtualinvoke $r1.<android.hardware.usb.UsbPort: int getSupportedModes()>();

        if i0 == $i7 goto label09;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring inconsistent list of supported modes from USB port driver (should be immutable): previous=");

        $r20 = r46.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPort mUsbPort>;

        $i8 = virtualinvoke $r20.<android.hardware.usb.UsbPort: int getSupportedModes()>();

        $r21 = staticinvoke <android.hardware.usb.UsbPort: java.lang.String modeToString(int)>($i8);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", current=");

        $r24 = staticinvoke <android.hardware.usb.UsbPort: java.lang.String modeToString(int)>(i0);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.usb.UsbPortManager: void logAndPrint(int,com.android.internal.util.IndentingPrintWriter,java.lang.String)>(5, r42, $r26);

     label09:
        $r2 = r46.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPort mUsbPort>;

        $z4 = virtualinvoke $r2.<android.hardware.usb.UsbPort: boolean supportsEnableContaminantPresenceProtection()>();

        if z2 == $z4 goto label10;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring inconsistent supportsEnableContaminantPresenceProtectionUSB port driver (should be immutable): previous=");

        $r13 = r46.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPort mUsbPort>;

        $z8 = virtualinvoke $r13.<android.hardware.usb.UsbPort: boolean supportsEnableContaminantPresenceProtection()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z8);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", current=");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z2);

        $r17 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.usb.UsbPortManager: void logAndPrint(int,com.android.internal.util.IndentingPrintWriter,java.lang.String)>(5, r42, $r17);

     label10:
        $r3 = r46.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPort mUsbPort>;

        $z5 = virtualinvoke $r3.<android.hardware.usb.UsbPort: boolean supportsEnableContaminantPresenceDetection()>();

        if z3 == $z5 goto label11;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring inconsistent supportsEnableContaminantPresenceDetection USB port driver (should be immutable): previous=");

        $r6 = r46.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPort mUsbPort>;

        $z7 = virtualinvoke $r6.<android.hardware.usb.UsbPort: boolean supportsEnableContaminantPresenceDetection()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z7);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", current=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z3);

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.usb.UsbPortManager: void logAndPrint(int,com.android.internal.util.IndentingPrintWriter,java.lang.String)>(5, r42, $r10);

     label11:
        $z6 = virtualinvoke r46.<com.android.server.usb.UsbPortManager$PortInfo: boolean setStatus(int,boolean,int,boolean,int,boolean,int,int,int)>(i26, z10, i2, z0, i3, z1, i27, i4, i5);

        if $z6 == 0 goto label12;

        r46.<com.android.server.usb.UsbPortManager$PortInfo: int mDisposition> = 1;

        goto label13;

     label12:
        r46.<com.android.server.usb.UsbPortManager$PortInfo: int mDisposition> = 2;

     label13:
        return;
    }

    private void connectToProxy(com.android.internal.util.IndentingPrintWriter)
    {
        com.android.server.usb.UsbPortManager r0;
        java.lang.Object r1;
        android.hardware.usb.V1_0.IUsb $r3, $r5, $r6, r11;
        com.android.server.usb.UsbPortManager$HALCallback $r4;
        java.lang.Throwable $r7, $r9;
        android.os.RemoteException $r8;
        com.android.internal.util.IndentingPrintWriter r10;
        com.android.server.usb.UsbPortManager$DeathRecipient r15;
        java.lang.Exception r16;

        r0 := @this: com.android.server.usb.UsbPortManager;

        r10 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        r1 = r0.<com.android.server.usb.UsbPortManager: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.usb.UsbPortManager: android.hardware.usb.V1_0.IUsb mProxy>;

        if $r3 == null goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        r11 = staticinvoke <android.hardware.usb.V1_0.IUsb: android.hardware.usb.V1_0.IUsb getService()>();

        r0.<com.android.server.usb.UsbPortManager: android.hardware.usb.V1_0.IUsb mProxy> = r11;

        r15 = new com.android.server.usb.UsbPortManager$DeathRecipient;

        specialinvoke r15.<com.android.server.usb.UsbPortManager$DeathRecipient: void <init>(com.android.server.usb.UsbPortManager,com.android.internal.util.IndentingPrintWriter)>(r0, r10);

        interfaceinvoke r11.<android.hardware.usb.V1_0.IUsb: boolean linkToDeath(android.os.IHwBinder$DeathRecipient,long)>(r15, 1000L);

        $r5 = r0.<com.android.server.usb.UsbPortManager: android.hardware.usb.V1_0.IUsb mProxy>;

        $r4 = r0.<com.android.server.usb.UsbPortManager: com.android.server.usb.UsbPortManager$HALCallback mHALCallback>;

        interfaceinvoke $r5.<android.hardware.usb.V1_0.IUsb: void setCallback(android.hardware.usb.V1_0.IUsbCallback)>($r4);

        $r6 = r0.<com.android.server.usb.UsbPortManager: android.hardware.usb.V1_0.IUsb mProxy>;

        interfaceinvoke $r6.<android.hardware.usb.V1_0.IUsb: void queryPortStatus()>();

     label04:
        goto label10;

     label05:
        $r8 := @caughtexception;

     label06:
        staticinvoke <com.android.server.usb.UsbPortManager: void logAndPrintException(com.android.internal.util.IndentingPrintWriter,java.lang.String,java.lang.Exception)>(r10, "connectToProxy: usb hal service not responding", $r8);

     label07:
        goto label10;

     label08:
        $r7 := @caughtexception;

     label09:
        r16 = (java.lang.Exception) $r7;

        staticinvoke <com.android.server.usb.UsbPortManager: void logAndPrintException(com.android.internal.util.IndentingPrintWriter,java.lang.String,java.lang.Exception)>(r10, "connectToProxy: usb hal service not found. Did the service fail to start?", r16);

     label10:
        exitmonitor r1;

     label11:
        return;

     label12:
        $r9 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.util.NoSuchElementException from label03 to label04 with label08;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    private static int convertContaminantDetectionStatusToProto(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 0 goto label4;

        if i0 == 1 goto label3;

        if i0 == 2 goto label2;

        if i0 == 3 goto label1;

        return 0;

     label1:
        return 4;

     label2:
        return 3;

     label3:
        return 2;

     label4:
        return 1;
    }

    private void enableContaminantDetectionIfNeeded(com.android.server.usb.UsbPortManager$PortInfo, com.android.internal.util.IndentingPrintWriter)
    {
        com.android.server.usb.UsbPortManager r0;
        com.android.server.usb.UsbPortManager$PortInfo r1;
        com.android.internal.util.IndentingPrintWriter r2;
        android.hardware.usb.UsbPort $r3, $r6, $r13;
        android.util.ArrayMap $r4, $r7;
        java.lang.String $r5, $r8, $r14;
        boolean $z0, $z1, $z2;
        java.lang.Object $r9;
        java.lang.Boolean $r10;
        android.hardware.usb.UsbPortStatus $r11, $r12;
        int $i0;

        r0 := @this: com.android.server.usb.UsbPortManager;

        r1 := @parameter0: com.android.server.usb.UsbPortManager$PortInfo;

        r2 := @parameter1: com.android.internal.util.IndentingPrintWriter;

        $r4 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mConnected>;

        $r3 = r1.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPort mUsbPort>;

        $r5 = virtualinvoke $r3.<android.hardware.usb.UsbPort: java.lang.String getId()>();

        $z0 = virtualinvoke $r4.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>($r5);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r7 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mConnected>;

        $r6 = r1.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPort mUsbPort>;

        $r8 = virtualinvoke $r6.<android.hardware.usb.UsbPort: java.lang.String getId()>();

        $r9 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r8);

        $r10 = (java.lang.Boolean) $r9;

        $z1 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label2;

        $r11 = r1.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPortStatus mUsbPortStatus>;

        $z2 = virtualinvoke $r11.<android.hardware.usb.UsbPortStatus: boolean isConnected()>();

        if $z2 != 0 goto label2;

        $r12 = r1.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPortStatus mUsbPortStatus>;

        $i0 = virtualinvoke $r12.<android.hardware.usb.UsbPortStatus: int getContaminantDetectionStatus()>();

        if $i0 != 1 goto label2;

        $r13 = r1.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPort mUsbPort>;

        $r14 = virtualinvoke $r13.<android.hardware.usb.UsbPort: java.lang.String getId()>();

        virtualinvoke r0.<com.android.server.usb.UsbPortManager: void enableContaminantDetection(java.lang.String,boolean,com.android.internal.util.IndentingPrintWriter)>($r14, 1, r2);

     label2:
        return;
    }

    private void handlePortAddedLocked(com.android.server.usb.UsbPortManager$PortInfo, com.android.internal.util.IndentingPrintWriter)
    {
        com.android.server.usb.UsbPortManager r0;
        com.android.server.usb.UsbPortManager$PortInfo r1;
        com.android.internal.util.IndentingPrintWriter r2;
        java.lang.StringBuilder $r4;
        java.lang.String $r7;

        r0 := @this: com.android.server.usb.UsbPortManager;

        r1 := @parameter0: com.android.server.usb.UsbPortManager$PortInfo;

        r2 := @parameter1: com.android.internal.util.IndentingPrintWriter;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("USB port added: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.usb.UsbPortManager: void logAndPrint(int,com.android.internal.util.IndentingPrintWriter,java.lang.String)>(4, r2, $r7);

        specialinvoke r0.<com.android.server.usb.UsbPortManager: void handlePortLocked(com.android.server.usb.UsbPortManager$PortInfo,com.android.internal.util.IndentingPrintWriter)>(r1, r2);

        return;
    }

    private void handlePortChangedLocked(com.android.server.usb.UsbPortManager$PortInfo, com.android.internal.util.IndentingPrintWriter)
    {
        com.android.server.usb.UsbPortManager r0;
        com.android.server.usb.UsbPortManager$PortInfo r1;
        com.android.internal.util.IndentingPrintWriter r2;
        java.lang.StringBuilder $r4;
        java.lang.String $r7;

        r0 := @this: com.android.server.usb.UsbPortManager;

        r1 := @parameter0: com.android.server.usb.UsbPortManager$PortInfo;

        r2 := @parameter1: com.android.internal.util.IndentingPrintWriter;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("USB port changed: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.usb.UsbPortManager: void logAndPrint(int,com.android.internal.util.IndentingPrintWriter,java.lang.String)>(4, r2, $r7);

        specialinvoke r0.<com.android.server.usb.UsbPortManager: void enableContaminantDetectionIfNeeded(com.android.server.usb.UsbPortManager$PortInfo,com.android.internal.util.IndentingPrintWriter)>(r1, r2);

        specialinvoke r0.<com.android.server.usb.UsbPortManager: void handlePortLocked(com.android.server.usb.UsbPortManager$PortInfo,com.android.internal.util.IndentingPrintWriter)>(r1, r2);

        return;
    }

    private void handlePortLocked(com.android.server.usb.UsbPortManager$PortInfo, com.android.internal.util.IndentingPrintWriter)
    {
        com.android.server.usb.UsbPortManager r0;
        com.android.server.usb.UsbPortManager$PortInfo r1;
        com.android.internal.util.IndentingPrintWriter r2;

        r0 := @this: com.android.server.usb.UsbPortManager;

        r1 := @parameter0: com.android.server.usb.UsbPortManager$PortInfo;

        r2 := @parameter1: com.android.internal.util.IndentingPrintWriter;

        specialinvoke r0.<com.android.server.usb.UsbPortManager: void sendPortChangedBroadcastLocked(com.android.server.usb.UsbPortManager$PortInfo)>(r1);

        specialinvoke r0.<com.android.server.usb.UsbPortManager: void logToStatsd(com.android.server.usb.UsbPortManager$PortInfo,com.android.internal.util.IndentingPrintWriter)>(r1, r2);

        specialinvoke r0.<com.android.server.usb.UsbPortManager: void updateContaminantNotification()>();

        return;
    }

    private void handlePortRemovedLocked(com.android.server.usb.UsbPortManager$PortInfo, com.android.internal.util.IndentingPrintWriter)
    {
        com.android.server.usb.UsbPortManager r0;
        com.android.server.usb.UsbPortManager$PortInfo r1;
        com.android.internal.util.IndentingPrintWriter r2;
        java.lang.StringBuilder $r4;
        java.lang.String $r7;

        r0 := @this: com.android.server.usb.UsbPortManager;

        r1 := @parameter0: com.android.server.usb.UsbPortManager$PortInfo;

        r2 := @parameter1: com.android.internal.util.IndentingPrintWriter;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("USB port removed: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.usb.UsbPortManager: void logAndPrint(int,com.android.internal.util.IndentingPrintWriter,java.lang.String)>(4, r2, $r7);

        specialinvoke r0.<com.android.server.usb.UsbPortManager: void handlePortLocked(com.android.server.usb.UsbPortManager$PortInfo,com.android.internal.util.IndentingPrintWriter)>(r1, r2);

        return;
    }

    private static void logAndPrint(int, com.android.internal.util.IndentingPrintWriter, java.lang.String)
    {
        int i0;
        com.android.internal.util.IndentingPrintWriter r0;
        java.lang.String r1;

        i0 := @parameter0: int;

        r0 := @parameter1: com.android.internal.util.IndentingPrintWriter;

        r1 := @parameter2: java.lang.String;

        staticinvoke <android.util.Slog: int println(int,java.lang.String,java.lang.String)>(i0, "UsbPortManager", r1);

        if r0 == null goto label1;

        virtualinvoke r0.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>(r1);

     label1:
        return;
    }

    private static void logAndPrintException(com.android.internal.util.IndentingPrintWriter, java.lang.String, java.lang.Exception)
    {
        com.android.internal.util.IndentingPrintWriter r0;
        java.lang.String r1, $r7;
        java.lang.Exception r2;
        java.lang.StringBuilder $r4;

        r0 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Exception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("UsbPortManager", r1, r2);

        if r0 == null goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r7);

     label1:
        return;
    }

    private void logToStatsd(com.android.server.usb.UsbPortManager$PortInfo, com.android.internal.util.IndentingPrintWriter)
    {
        com.android.server.usb.UsbPortManager r0;
        com.android.server.usb.UsbPortManager$PortInfo r1;
        android.hardware.usb.UsbPort $r2, $r5, $r12, $r14, $r20, $r23, $r29, $r35, $r38, $r43, $r47, $r49, $r54, $r58, $r63, $r66;
        android.util.ArrayMap $r3, $r6, $r15, $r24, $r30, $r36, $r39, $r44, $r50, $r55, $r62, $r65;
        java.lang.String $r4, $r7, $r13, $r16, $r21, $r25, $r31, $r37, $r40, $r45, $r48, $r51, $r56, $r59, $r64, $r67;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        android.hardware.usb.UsbPortStatus $r8, $r11, $r17, $r22, $r28, $r34, r61;
        java.lang.Boolean $r9, $r33, $r53;
        long $l0, $l8;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.Integer $r18, $r27, $r42;
        java.lang.Object $r26, $r32, $r41, $r52;
        com.android.internal.util.IndentingPrintWriter r60;
        byte b9;

        r0 := @this: com.android.server.usb.UsbPortManager;

        r1 := @parameter0: com.android.server.usb.UsbPortManager$PortInfo;

        r60 := @parameter1: com.android.internal.util.IndentingPrintWriter;

        r61 = r1.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPortStatus mUsbPortStatus>;

        b9 = 0;

        if r61 != null goto label05;

        $r36 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mConnected>;

        $r35 = r1.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPort mUsbPort>;

        $r37 = virtualinvoke $r35.<android.hardware.usb.UsbPort: java.lang.String getId()>();

        $z5 = virtualinvoke $r36.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>($r37);

        if $z5 == 0 goto label02;

        $r50 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mConnected>;

        $r49 = r1.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPort mUsbPort>;

        $r51 = virtualinvoke $r49.<android.hardware.usb.UsbPort: java.lang.String getId()>();

        $r52 = virtualinvoke $r50.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r51);

        $r53 = (java.lang.Boolean) $r52;

        $z6 = virtualinvoke $r53.<java.lang.Boolean: boolean booleanValue()>();

        if $z6 == 0 goto label01;

        $r58 = r1.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPort mUsbPort>;

        $r59 = virtualinvoke $r58.<android.hardware.usb.UsbPort: java.lang.String getId()>();

        $l8 = r1.<com.android.server.usb.UsbPortManager$PortInfo: long mLastConnectDurationMillis>;

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,long)>(70, 0, $r59, $l8);

     label01:
        $r55 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mConnected>;

        $r54 = r1.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPort mUsbPort>;

        $r56 = virtualinvoke $r54.<android.hardware.usb.UsbPort: java.lang.String getId()>();

        virtualinvoke $r55.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r56);

     label02:
        $r62 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mContaminantStatus>;

        $r63 = r1.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPort mUsbPort>;

        $r64 = virtualinvoke $r63.<android.hardware.usb.UsbPort: java.lang.String getId()>();

        $z7 = virtualinvoke $r62.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>($r64);

        if $z7 == 0 goto label04;

        $r39 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mContaminantStatus>;

        $r38 = r1.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPort mUsbPort>;

        $r40 = virtualinvoke $r38.<android.hardware.usb.UsbPort: java.lang.String getId()>();

        $r41 = virtualinvoke $r39.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r40);

        $r42 = (java.lang.Integer) $r41;

        $i6 = virtualinvoke $r42.<java.lang.Integer: int intValue()>();

        if $i6 != 3 goto label03;

        $r47 = r1.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPort mUsbPort>;

        $r48 = virtualinvoke $r47.<android.hardware.usb.UsbPort: java.lang.String getId()>();

        $i7 = staticinvoke <com.android.server.usb.UsbPortManager: int convertContaminantDetectionStatusToProto(int)>(2);

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,java.lang.String,int)>(146, $r48, $i7);

     label03:
        $r44 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mContaminantStatus>;

        $r43 = r1.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPort mUsbPort>;

        $r45 = virtualinvoke $r43.<android.hardware.usb.UsbPort: java.lang.String getId()>();

        virtualinvoke $r44.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r45);

     label04:
        return;

     label05:
        $r3 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mConnected>;

        $r2 = r1.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPort mUsbPort>;

        $r4 = virtualinvoke $r2.<android.hardware.usb.UsbPort: java.lang.String getId()>();

        $z0 = virtualinvoke $r3.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>($r4);

        if $z0 == 0 goto label06;

        $r30 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mConnected>;

        $r29 = r1.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPort mUsbPort>;

        $r31 = virtualinvoke $r29.<android.hardware.usb.UsbPort: java.lang.String getId()>();

        $r32 = virtualinvoke $r30.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r31);

        $r33 = (java.lang.Boolean) $r32;

        $z3 = virtualinvoke $r33.<java.lang.Boolean: boolean booleanValue()>();

        $r34 = r1.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPortStatus mUsbPortStatus>;

        $z4 = virtualinvoke $r34.<android.hardware.usb.UsbPortStatus: boolean isConnected()>();

        if $z3 == $z4 goto label08;

     label06:
        $r6 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mConnected>;

        $r5 = r1.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPort mUsbPort>;

        $r7 = virtualinvoke $r5.<android.hardware.usb.UsbPort: java.lang.String getId()>();

        $r8 = r1.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPortStatus mUsbPortStatus>;

        $z1 = virtualinvoke $r8.<android.hardware.usb.UsbPortStatus: boolean isConnected()>();

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r9);

        $r11 = r1.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPortStatus mUsbPortStatus>;

        $z2 = virtualinvoke $r11.<android.hardware.usb.UsbPortStatus: boolean isConnected()>();

        if $z2 == 0 goto label07;

        b9 = 1;

        goto label07;

     label07:
        $r12 = r1.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPort mUsbPort>;

        $r13 = virtualinvoke $r12.<android.hardware.usb.UsbPort: java.lang.String getId()>();

        $l0 = r1.<com.android.server.usb.UsbPortManager$PortInfo: long mLastConnectDurationMillis>;

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,long)>(70, b9, $r13, $l0);

     label08:
        $r65 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mContaminantStatus>;

        $r66 = r1.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPort mUsbPort>;

        $r67 = virtualinvoke $r66.<android.hardware.usb.UsbPort: java.lang.String getId()>();

        $z8 = virtualinvoke $r65.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>($r67);

        if $z8 == 0 goto label09;

        $r24 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mContaminantStatus>;

        $r23 = r1.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPort mUsbPort>;

        $r25 = virtualinvoke $r23.<android.hardware.usb.UsbPort: java.lang.String getId()>();

        $r26 = virtualinvoke $r24.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r25);

        $r27 = (java.lang.Integer) $r26;

        $i4 = virtualinvoke $r27.<java.lang.Integer: int intValue()>();

        $r28 = r1.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPortStatus mUsbPortStatus>;

        $i5 = virtualinvoke $r28.<android.hardware.usb.UsbPortStatus: int getContaminantDetectionStatus()>();

        if $i4 == $i5 goto label10;

     label09:
        $r15 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mContaminantStatus>;

        $r14 = r1.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPort mUsbPort>;

        $r16 = virtualinvoke $r14.<android.hardware.usb.UsbPort: java.lang.String getId()>();

        $r17 = r1.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPortStatus mUsbPortStatus>;

        $i1 = virtualinvoke $r17.<android.hardware.usb.UsbPortStatus: int getContaminantDetectionStatus()>();

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke $r15.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r18);

        $r20 = r1.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPort mUsbPort>;

        $r21 = virtualinvoke $r20.<android.hardware.usb.UsbPort: java.lang.String getId()>();

        $r22 = r1.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPortStatus mUsbPortStatus>;

        $i2 = virtualinvoke $r22.<android.hardware.usb.UsbPortStatus: int getContaminantDetectionStatus()>();

        $i3 = staticinvoke <com.android.server.usb.UsbPortManager: int convertContaminantDetectionStatusToProto(int)>($i2);

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,java.lang.String,int)>(146, $r21, $i3);

     label10:
        return;
    }

    private void sendPortChangedBroadcastLocked(com.android.server.usb.UsbPortManager$PortInfo)
    {
        com.android.server.usb.UsbPortManager r0;
        com.android.server.usb.UsbPortManager$PortInfo r1;
        android.content.Intent $r3;
        android.hardware.usb.UsbPort $r5;
        android.hardware.usb.ParcelableUsbPort $r6;
        android.hardware.usb.UsbPortStatus $r8;
        com.android.server.usb._$$Lambda$UsbPortManager$FUqGOOupcl6RrRkZBk_BnrRQyPI $r10;
        android.os.Handler $r11;

        r0 := @this: com.android.server.usb.UsbPortManager;

        r1 := @parameter0: com.android.server.usb.UsbPortManager$PortInfo;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.hardware.usb.action.USB_PORT_CHANGED");

        virtualinvoke $r3.<android.content.Intent: android.content.Intent addFlags(int)>(285212672);

        $r5 = r1.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPort mUsbPort>;

        $r6 = staticinvoke <android.hardware.usb.ParcelableUsbPort: android.hardware.usb.ParcelableUsbPort of(android.hardware.usb.UsbPort)>($r5);

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("port", $r6);

        $r8 = r1.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPortStatus mUsbPortStatus>;

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("portStatus", $r8);

        $r11 = r0.<com.android.server.usb.UsbPortManager: android.os.Handler mHandler>;

        $r10 = new com.android.server.usb._$$Lambda$UsbPortManager$FUqGOOupcl6RrRkZBk_BnrRQyPI;

        specialinvoke $r10.<com.android.server.usb._$$Lambda$UsbPortManager$FUqGOOupcl6RrRkZBk_BnrRQyPI: void <init>(com.android.server.usb.UsbPortManager,android.content.Intent)>(r0, $r3);

        virtualinvoke $r11.<android.os.Handler: boolean post(java.lang.Runnable)>($r10);

        return;
    }

    private void updateContaminantNotification()
    {
        com.android.server.usb.UsbPortManager r0;
        java.lang.CharSequence r1, r53, r56, r58;
        android.content.Context $r3, $r9, $r12, $r28, $r30, $r33;
        android.util.ArrayMap $r4;
        java.util.Collection $r5;
        boolean $z0;
        android.os.UserHandle $r6, $r20, $r27, $r43, $r45;
        android.app.NotificationManager $r7, $r21, $r44, $r46;
        android.app.Notification$Builder $r8, $r10, $r11, $r13, $r14, $r15, $r16, $r19, $r29, $r31, $r32, $r34, $r35, $r36, $r37, $r38, $r39, $r42;
        int $i0, $i1, $i2, $i3, i4, i5, i6;
        android.app.Notification$BigTextStyle $r17, $r18, $r40, $r41;
        android.content.Intent $r22;
        java.lang.String $r23, r52, r57;
        android.content.ComponentName $r24;
        android.hardware.usb.UsbPort $r25;
        android.hardware.usb.ParcelableUsbPort $r26;
        java.lang.Object $r47;
        android.hardware.usb.UsbPortStatus $r48;
        android.content.res.Resources r49;
        java.util.Iterator r50;
        com.android.server.usb.UsbPortManager$PortInfo r51;
        android.app.PendingIntent r54;
        android.app.Notification r55, r59;

        r0 := @this: com.android.server.usb.UsbPortManager;

        $r3 = r0.<com.android.server.usb.UsbPortManager: android.content.Context mContext>;

        r49 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        i4 = 2;

        $r4 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mPorts>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.util.Collection values()>();

        r50 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        r51 = null;

        $z0 = interfaceinvoke r50.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r47 = interfaceinvoke r50.<java.util.Iterator: java.lang.Object next()>();

        r51 = (com.android.server.usb.UsbPortManager$PortInfo) $r47;

        $r48 = r51.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPortStatus mUsbPortStatus>;

        i4 = virtualinvoke $r48.<android.hardware.usb.UsbPortStatus: int getContaminantDetectionStatus()>();

        if i4 == 3 goto label3;

        if i4 != 1 goto label2;

        goto label3;

     label2:
        goto label1;

     label3:
        if i4 != 3 goto label5;

        i5 = r0.<com.android.server.usb.UsbPortManager: int mIsPortContaminatedNotificationId>;

        if i5 == 52 goto label5;

        if i5 != 53 goto label4;

        $r46 = r0.<com.android.server.usb.UsbPortManager: android.app.NotificationManager mNotificationManager>;

        $r45 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r46.<android.app.NotificationManager: void cancelAsUser(java.lang.String,int,android.os.UserHandle)>(null, i5, $r45);

     label4:
        r0.<com.android.server.usb.UsbPortManager: int mIsPortContaminatedNotificationId> = 52;

        r1 = virtualinvoke r49.<android.content.res.Resources: java.lang.CharSequence getText(int)>(17041384);

        r52 = <com.android.internal.notification.SystemNotificationChannels: java.lang.String ALERTS>;

        r53 = virtualinvoke r49.<android.content.res.Resources: java.lang.CharSequence getText(int)>(17041383);

        $r22 = new android.content.Intent;

        specialinvoke $r22.<android.content.Intent: void <init>()>();

        virtualinvoke $r22.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        $r23 = virtualinvoke r49.<android.content.res.Resources: java.lang.String getString(int)>(17039956);

        $r24 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>($r23);

        virtualinvoke $r22.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r24);

        $r25 = r51.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPort mUsbPort>;

        $r26 = staticinvoke <android.hardware.usb.ParcelableUsbPort: android.hardware.usb.ParcelableUsbPort of(android.hardware.usb.UsbPort)>($r25);

        virtualinvoke $r22.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("port", $r26);

        $r28 = r0.<com.android.server.usb.UsbPortManager: android.content.Context mContext>;

        $r27 = <android.os.UserHandle: android.os.UserHandle CURRENT>;

        r54 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getActivityAsUser(android.content.Context,int,android.content.Intent,int,android.os.Bundle,android.os.UserHandle)>($r28, 0, $r22, 0, null, $r27);

        $r29 = new android.app.Notification$Builder;

        $r30 = r0.<com.android.server.usb.UsbPortManager: android.content.Context mContext>;

        specialinvoke $r29.<android.app.Notification$Builder: void <init>(android.content.Context,java.lang.String)>($r30, r52);

        $r31 = virtualinvoke $r29.<android.app.Notification$Builder: android.app.Notification$Builder setOngoing(boolean)>(1);

        $r32 = virtualinvoke $r31.<android.app.Notification$Builder: android.app.Notification$Builder setTicker(java.lang.CharSequence)>(r1);

        $r33 = r0.<com.android.server.usb.UsbPortManager: android.content.Context mContext>;

        $i2 = virtualinvoke $r33.<android.content.Context: int getColor(int)>(17170460);

        $r34 = virtualinvoke $r32.<android.app.Notification$Builder: android.app.Notification$Builder setColor(int)>($i2);

        $r35 = virtualinvoke $r34.<android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)>(r54);

        $r36 = virtualinvoke $r35.<android.app.Notification$Builder: android.app.Notification$Builder setContentTitle(java.lang.CharSequence)>(r1);

        $r37 = virtualinvoke $r36.<android.app.Notification$Builder: android.app.Notification$Builder setContentText(java.lang.CharSequence)>(r53);

        $r38 = virtualinvoke $r37.<android.app.Notification$Builder: android.app.Notification$Builder setVisibility(int)>(1);

        $r39 = virtualinvoke $r38.<android.app.Notification$Builder: android.app.Notification$Builder setSmallIcon(int)>(17301642);

        $r40 = new android.app.Notification$BigTextStyle;

        specialinvoke $r40.<android.app.Notification$BigTextStyle: void <init>()>();

        $r41 = virtualinvoke $r40.<android.app.Notification$BigTextStyle: android.app.Notification$BigTextStyle bigText(java.lang.CharSequence)>(r53);

        $r42 = virtualinvoke $r39.<android.app.Notification$Builder: android.app.Notification$Builder setStyle(android.app.Notification$Style)>($r41);

        r55 = virtualinvoke $r42.<android.app.Notification$Builder: android.app.Notification build()>();

        $r44 = r0.<com.android.server.usb.UsbPortManager: android.app.NotificationManager mNotificationManager>;

        $i3 = r0.<com.android.server.usb.UsbPortManager: int mIsPortContaminatedNotificationId>;

        $r43 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r44.<android.app.NotificationManager: void notifyAsUser(java.lang.String,int,android.app.Notification,android.os.UserHandle)>(null, $i3, r55, $r43);

        goto label6;

     label5:
        if i4 == 3 goto label6;

        i6 = r0.<com.android.server.usb.UsbPortManager: int mIsPortContaminatedNotificationId>;

        if i6 != 52 goto label6;

        $r7 = r0.<com.android.server.usb.UsbPortManager: android.app.NotificationManager mNotificationManager>;

        $r6 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r7.<android.app.NotificationManager: void cancelAsUser(java.lang.String,int,android.os.UserHandle)>(null, i6, $r6);

        r0.<com.android.server.usb.UsbPortManager: int mIsPortContaminatedNotificationId> = 0;

        if i4 != 2 goto label6;

        r0.<com.android.server.usb.UsbPortManager: int mIsPortContaminatedNotificationId> = 53;

        r56 = virtualinvoke r49.<android.content.res.Resources: java.lang.CharSequence getText(int)>(17041386);

        r57 = <com.android.internal.notification.SystemNotificationChannels: java.lang.String ALERTS>;

        r58 = virtualinvoke r49.<android.content.res.Resources: java.lang.CharSequence getText(int)>(17041385);

        $r8 = new android.app.Notification$Builder;

        $r9 = r0.<com.android.server.usb.UsbPortManager: android.content.Context mContext>;

        specialinvoke $r8.<android.app.Notification$Builder: void <init>(android.content.Context,java.lang.String)>($r9, r57);

        $r10 = virtualinvoke $r8.<android.app.Notification$Builder: android.app.Notification$Builder setSmallIcon(int)>(17302855);

        $r11 = virtualinvoke $r10.<android.app.Notification$Builder: android.app.Notification$Builder setTicker(java.lang.CharSequence)>(r56);

        $r12 = r0.<com.android.server.usb.UsbPortManager: android.content.Context mContext>;

        $i0 = virtualinvoke $r12.<android.content.Context: int getColor(int)>(17170460);

        $r13 = virtualinvoke $r11.<android.app.Notification$Builder: android.app.Notification$Builder setColor(int)>($i0);

        $r14 = virtualinvoke $r13.<android.app.Notification$Builder: android.app.Notification$Builder setContentTitle(java.lang.CharSequence)>(r56);

        $r15 = virtualinvoke $r14.<android.app.Notification$Builder: android.app.Notification$Builder setContentText(java.lang.CharSequence)>(r58);

        $r16 = virtualinvoke $r15.<android.app.Notification$Builder: android.app.Notification$Builder setVisibility(int)>(1);

        $r17 = new android.app.Notification$BigTextStyle;

        specialinvoke $r17.<android.app.Notification$BigTextStyle: void <init>()>();

        $r18 = virtualinvoke $r17.<android.app.Notification$BigTextStyle: android.app.Notification$BigTextStyle bigText(java.lang.CharSequence)>(r58);

        $r19 = virtualinvoke $r16.<android.app.Notification$Builder: android.app.Notification$Builder setStyle(android.app.Notification$Style)>($r18);

        r59 = virtualinvoke $r19.<android.app.Notification$Builder: android.app.Notification build()>();

        $r21 = r0.<com.android.server.usb.UsbPortManager: android.app.NotificationManager mNotificationManager>;

        $i1 = r0.<com.android.server.usb.UsbPortManager: int mIsPortContaminatedNotificationId>;

        $r20 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r21.<android.app.NotificationManager: void notifyAsUser(java.lang.String,int,android.app.Notification,android.os.UserHandle)>(null, $i1, r59, $r20);

        goto label6;

     label6:
        return;
    }

    private void updatePortsLocked(com.android.internal.util.IndentingPrintWriter, java.util.ArrayList)
    {
        com.android.server.usb.UsbPortManager r0;
        com.android.internal.util.IndentingPrintWriter r1;
        java.util.Iterator r2;
        android.util.ArrayMap $r3, $r4, $r5, $r6, $r8, $r12, $r13, $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.lang.Object $r7, $r10, $r14, $r17;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16, i17, i18, i19, i20;
        java.lang.String $r11, $r15;
        com.android.server.usb.UsbPortManager$PortInfo $r18, r22;
        java.util.ArrayList r19;
        com.android.server.usb.UsbPortManager$RawPortInfo r20, r21;

        r0 := @this: com.android.server.usb.UsbPortManager;

        r1 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        r19 := @parameter1: java.util.ArrayList;

        $r3 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mPorts>;

        i14 = virtualinvoke $r3.<android.util.ArrayMap: int size()>();

     label01:
        i15 = i14 - 1;

        if i14 <= 0 goto label02;

        $r16 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mPorts>;

        $r17 = virtualinvoke $r16.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i15);

        $r18 = (com.android.server.usb.UsbPortManager$PortInfo) $r17;

        $r18.<com.android.server.usb.UsbPortManager$PortInfo: int mDisposition> = 3;

        i14 = i15;

        goto label01;

     label02:
        $r4 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mSimulatedPorts>;

        $z0 = virtualinvoke $r4.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 != 0 goto label05;

        $r12 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mSimulatedPorts>;

        i16 = virtualinvoke $r12.<android.util.ArrayMap: int size()>();

        i17 = 0;

     label03:
        if i17 >= i16 goto label04;

        $r13 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mSimulatedPorts>;

        $r14 = virtualinvoke $r13.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i17);

        r20 = (com.android.server.usb.UsbPortManager$RawPortInfo) $r14;

        $r15 = r20.<com.android.server.usb.UsbPortManager$RawPortInfo: java.lang.String portId>;

        $i13 = r20.<com.android.server.usb.UsbPortManager$RawPortInfo: int supportedModes>;

        $i12 = r20.<com.android.server.usb.UsbPortManager$RawPortInfo: int supportedContaminantProtectionModes>;

        $i11 = r20.<com.android.server.usb.UsbPortManager$RawPortInfo: int currentMode>;

        $z11 = r20.<com.android.server.usb.UsbPortManager$RawPortInfo: boolean canChangeMode>;

        $i10 = r20.<com.android.server.usb.UsbPortManager$RawPortInfo: int currentPowerRole>;

        $z10 = r20.<com.android.server.usb.UsbPortManager$RawPortInfo: boolean canChangePowerRole>;

        $i9 = r20.<com.android.server.usb.UsbPortManager$RawPortInfo: int currentDataRole>;

        $z9 = r20.<com.android.server.usb.UsbPortManager$RawPortInfo: boolean canChangeDataRole>;

        $z8 = r20.<com.android.server.usb.UsbPortManager$RawPortInfo: boolean supportsEnableContaminantPresenceProtection>;

        $i8 = r20.<com.android.server.usb.UsbPortManager$RawPortInfo: int contaminantProtectionStatus>;

        $z7 = r20.<com.android.server.usb.UsbPortManager$RawPortInfo: boolean supportsEnableContaminantPresenceDetection>;

        $i7 = r20.<com.android.server.usb.UsbPortManager$RawPortInfo: int contaminantDetectionStatus>;

        specialinvoke r0.<com.android.server.usb.UsbPortManager: void addOrUpdatePortLocked(java.lang.String,int,int,int,boolean,int,boolean,int,boolean,boolean,int,boolean,int,com.android.internal.util.IndentingPrintWriter)>($r15, $i13, $i12, $i11, $z11, $i10, $z10, $i9, $z9, $z8, $i8, $z7, $i7, r1);

        i17 = i17 + 1;

        goto label03;

     label04:
        goto label07;

     label05:
        r2 = virtualinvoke r19.<java.util.ArrayList: java.util.Iterator iterator()>();

     label06:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r21 = (com.android.server.usb.UsbPortManager$RawPortInfo) $r10;

        $r11 = r21.<com.android.server.usb.UsbPortManager$RawPortInfo: java.lang.String portId>;

        $i6 = r21.<com.android.server.usb.UsbPortManager$RawPortInfo: int supportedModes>;

        $i5 = r21.<com.android.server.usb.UsbPortManager$RawPortInfo: int supportedContaminantProtectionModes>;

        $i4 = r21.<com.android.server.usb.UsbPortManager$RawPortInfo: int currentMode>;

        $z6 = r21.<com.android.server.usb.UsbPortManager$RawPortInfo: boolean canChangeMode>;

        $i3 = r21.<com.android.server.usb.UsbPortManager$RawPortInfo: int currentPowerRole>;

        $z5 = r21.<com.android.server.usb.UsbPortManager$RawPortInfo: boolean canChangePowerRole>;

        $i2 = r21.<com.android.server.usb.UsbPortManager$RawPortInfo: int currentDataRole>;

        $z4 = r21.<com.android.server.usb.UsbPortManager$RawPortInfo: boolean canChangeDataRole>;

        $z3 = r21.<com.android.server.usb.UsbPortManager$RawPortInfo: boolean supportsEnableContaminantPresenceProtection>;

        $i1 = r21.<com.android.server.usb.UsbPortManager$RawPortInfo: int contaminantProtectionStatus>;

        $z2 = r21.<com.android.server.usb.UsbPortManager$RawPortInfo: boolean supportsEnableContaminantPresenceDetection>;

        $i0 = r21.<com.android.server.usb.UsbPortManager$RawPortInfo: int contaminantDetectionStatus>;

        specialinvoke r0.<com.android.server.usb.UsbPortManager: void addOrUpdatePortLocked(java.lang.String,int,int,int,boolean,int,boolean,int,boolean,boolean,int,boolean,int,com.android.internal.util.IndentingPrintWriter)>($r11, $i6, $i5, $i4, $z6, $i3, $z5, $i2, $z4, $z3, $i1, $z2, $i0, r1);

        goto label06;

     label07:
        $r5 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mPorts>;

        i18 = virtualinvoke $r5.<android.util.ArrayMap: int size()>();

     label08:
        i19 = i18 - 1;

        if i18 <= 0 goto label13;

        $r6 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mPorts>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i19);

        r22 = (com.android.server.usb.UsbPortManager$PortInfo) $r7;

        i20 = r22.<com.android.server.usb.UsbPortManager$PortInfo: int mDisposition>;

        if i20 == 0 goto label11;

        if i20 == 1 goto label10;

        if i20 == 3 goto label09;

        goto label12;

     label09:
        $r8 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mPorts>;

        virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i19);

        r22.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPortStatus mUsbPortStatus> = null;

        specialinvoke r0.<com.android.server.usb.UsbPortManager: void handlePortRemovedLocked(com.android.server.usb.UsbPortManager$PortInfo,com.android.internal.util.IndentingPrintWriter)>(r22, r1);

        goto label12;

     label10:
        specialinvoke r0.<com.android.server.usb.UsbPortManager: void handlePortChangedLocked(com.android.server.usb.UsbPortManager$PortInfo,com.android.internal.util.IndentingPrintWriter)>(r22, r1);

        r22.<com.android.server.usb.UsbPortManager$PortInfo: int mDisposition> = 2;

        goto label12;

     label11:
        specialinvoke r0.<com.android.server.usb.UsbPortManager: void handlePortAddedLocked(com.android.server.usb.UsbPortManager$PortInfo,com.android.internal.util.IndentingPrintWriter)>(r22, r1);

        r22.<com.android.server.usb.UsbPortManager$PortInfo: int mDisposition> = 2;

     label12:
        i18 = i19;

        goto label08;

     label13:
        return;
    }

    public void addSimulatedPort(java.lang.String, int, com.android.internal.util.IndentingPrintWriter)
    {
        com.android.server.usb.UsbPortManager r0;
        int i0;
        com.android.internal.util.IndentingPrintWriter r1;
        java.lang.Object r2;
        com.android.server.usb.UsbPortManager$RawPortInfo r3;
        android.util.ArrayMap $r4, r15;
        boolean $z0;
        java.lang.String $r8, $r10, r13;
        java.lang.Throwable $r12;
        java.lang.StringBuilder r14;

        r0 := @this: com.android.server.usb.UsbPortManager;

        r13 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: com.android.internal.util.IndentingPrintWriter;

        r2 = r0.<com.android.server.usb.UsbPortManager: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        $r4 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mSimulatedPorts>;

        $z0 = virtualinvoke $r4.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r13);

        if $z0 == 0 goto label3;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Port with same name already exists.  Please remove it first.");

        exitmonitor r2;

     label2:
        return;

     label3:
        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding simulated port: portId=");

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", supportedModes=");

        $r8 = staticinvoke <android.hardware.usb.UsbPort: java.lang.String modeToString(int)>(i0);

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r10);

        r15 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mSimulatedPorts>;

        r3 = new com.android.server.usb.UsbPortManager$RawPortInfo;

        specialinvoke r3.<com.android.server.usb.UsbPortManager$RawPortInfo: void <init>(java.lang.String,int)>(r13, i0);

        virtualinvoke r15.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r13, r3);

        specialinvoke r0.<com.android.server.usb.UsbPortManager: void updatePortsLocked(com.android.internal.util.IndentingPrintWriter,java.util.ArrayList)>(r1, null);

        exitmonitor r2;

     label4:
        return;

     label5:
        $r12 := @caughtexception;

     label6:
        exitmonitor r2;

     label7:
        throw $r12;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void connectSimulatedPort(java.lang.String, int, boolean, int, boolean, int, boolean, com.android.internal.util.IndentingPrintWriter)
    {
        com.android.server.usb.UsbPortManager r0;
        int i0, i1, i2, $i3, $i4;
        boolean z0, z1, z2;
        com.android.internal.util.IndentingPrintWriter r1;
        java.lang.Object r2, $r6;
        com.android.server.usb.UsbPortManager$RawPortInfo r3;
        java.lang.StringBuilder r4, r31;
        android.util.ArrayMap $r5;
        java.lang.String $r10, $r15, $r20, $r24, $r26, $r28, r30;
        java.lang.Throwable $r29;

        r0 := @this: com.android.server.usb.UsbPortManager;

        r30 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        i1 := @parameter3: int;

        z1 := @parameter4: boolean;

        i2 := @parameter5: int;

        z2 := @parameter6: boolean;

        r1 := @parameter7: com.android.internal.util.IndentingPrintWriter;

        r2 = r0.<com.android.server.usb.UsbPortManager: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        $r5 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mSimulatedPorts>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r30);

        r3 = (com.android.server.usb.UsbPortManager$RawPortInfo) $r6;

     label02:
        if r3 != null goto label05;

     label03:
        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Cannot connect simulated port which does not exist.");

        exitmonitor r2;

     label04:
        return;

     label05:
        if i0 == 0 goto label10;

        if i1 == 0 goto label10;

        if i2 != 0 goto label06;

        goto label10;

     label06:
        $i3 = r3.<com.android.server.usb.UsbPortManager$RawPortInfo: int supportedModes>;

        $i4 = $i3 & i0;

        if $i4 != 0 goto label08;

        r31 = new java.lang.StringBuilder;

        specialinvoke r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Simulated port does not support mode: ");

        $r26 = staticinvoke <android.hardware.usb.UsbPort: java.lang.String modeToString(int)>(i0);

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r28);

        exitmonitor r2;

     label07:
        return;

     label08:
        r4 = new java.lang.StringBuilder;

        specialinvoke r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connecting simulated port: portId=");

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mode=");

        $r10 = staticinvoke <android.hardware.usb.UsbPort: java.lang.String modeToString(int)>(i0);

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", canChangeMode=");

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", powerRole=");

        $r15 = staticinvoke <android.hardware.usb.UsbPort: java.lang.String powerRoleToString(int)>(i1);

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", canChangePowerRole=");

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", dataRole=");

        $r20 = staticinvoke <android.hardware.usb.UsbPort: java.lang.String dataRoleToString(int)>(i2);

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", canChangeDataRole=");

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z2);

        $r24 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r24);

        r3.<com.android.server.usb.UsbPortManager$RawPortInfo: int currentMode> = i0;

        r3.<com.android.server.usb.UsbPortManager$RawPortInfo: boolean canChangeMode> = z0;

        r3.<com.android.server.usb.UsbPortManager$RawPortInfo: int currentPowerRole> = i1;

        r3.<com.android.server.usb.UsbPortManager$RawPortInfo: boolean canChangePowerRole> = z1;

        r3.<com.android.server.usb.UsbPortManager$RawPortInfo: int currentDataRole> = i2;

        r3.<com.android.server.usb.UsbPortManager$RawPortInfo: boolean canChangeDataRole> = z2;

        specialinvoke r0.<com.android.server.usb.UsbPortManager: void updatePortsLocked(com.android.internal.util.IndentingPrintWriter,java.util.ArrayList)>(r1, null);

        exitmonitor r2;

     label09:
        return;

     label10:
        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Cannot connect simulated port in null mode, power role, or data role.");

        exitmonitor r2;

     label11:
        return;

     label12:
        $r29 := @caughtexception;

     label13:
        exitmonitor r2;

     label14:
        throw $r29;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void disconnectSimulatedPort(java.lang.String, com.android.internal.util.IndentingPrintWriter)
    {
        com.android.server.usb.UsbPortManager r0;
        com.android.internal.util.IndentingPrintWriter r1;
        java.lang.Object r2, $r6;
        com.android.server.usb.UsbPortManager$RawPortInfo r3;
        java.lang.StringBuilder r4;
        android.util.ArrayMap $r5;
        java.lang.String $r9, r11;
        java.lang.Throwable $r10;

        r0 := @this: com.android.server.usb.UsbPortManager;

        r11 := @parameter0: java.lang.String;

        r1 := @parameter1: com.android.internal.util.IndentingPrintWriter;

        r2 = r0.<com.android.server.usb.UsbPortManager: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        $r5 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mSimulatedPorts>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r11);

        r3 = (com.android.server.usb.UsbPortManager$RawPortInfo) $r6;

     label2:
        if r3 != null goto label5;

     label3:
        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Cannot disconnect simulated port which does not exist.");

        exitmonitor r2;

     label4:
        return;

     label5:
        r4 = new java.lang.StringBuilder;

        specialinvoke r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Disconnecting simulated port: portId=");

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r9 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r9);

        r3.<com.android.server.usb.UsbPortManager$RawPortInfo: int currentMode> = 0;

        r3.<com.android.server.usb.UsbPortManager$RawPortInfo: boolean canChangeMode> = 0;

        r3.<com.android.server.usb.UsbPortManager$RawPortInfo: int currentPowerRole> = 0;

        r3.<com.android.server.usb.UsbPortManager$RawPortInfo: boolean canChangePowerRole> = 0;

        r3.<com.android.server.usb.UsbPortManager$RawPortInfo: int currentDataRole> = 0;

        r3.<com.android.server.usb.UsbPortManager$RawPortInfo: boolean canChangeDataRole> = 0;

        specialinvoke r0.<com.android.server.usb.UsbPortManager: void updatePortsLocked(com.android.internal.util.IndentingPrintWriter,java.util.ArrayList)>(r1, null);

        exitmonitor r2;

     label6:
        return;

     label7:
        $r10 := @caughtexception;

     label8:
        exitmonitor r2;

     label9:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void dump(com.android.internal.util.dump.DualDumpOutputStream, java.lang.String, long)
    {
        com.android.server.usb.UsbPortManager r0;
        java.util.Iterator r1;
        android.util.ArrayMap $r2, $r3;
        boolean $z0, z1, $z2;
        java.util.Collection $r4;
        java.lang.Object $r5, r10;
        com.android.server.usb.UsbPortManager$PortInfo $r6;
        java.lang.Throwable $r7;
        com.android.internal.util.dump.DualDumpOutputStream r8;
        java.lang.String r9;
        long l0, l1;

        r0 := @this: com.android.server.usb.UsbPortManager;

        r8 := @parameter0: com.android.internal.util.dump.DualDumpOutputStream;

        r9 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        l1 = virtualinvoke r8.<com.android.internal.util.dump.DualDumpOutputStream: long start(java.lang.String,long)>(r9, l0);

        r10 = r0.<com.android.server.usb.UsbPortManager: java.lang.Object mLock>;

        entermonitor r10;

     label01:
        $r2 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mSimulatedPorts>;

        $z0 = virtualinvoke $r2.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 != 0 goto label03;

     label02:
        z1 = 1;

        goto label04;

     label03:
        z1 = 0;

     label04:
        virtualinvoke r8.<com.android.internal.util.dump.DualDumpOutputStream: void write(java.lang.String,long,boolean)>("is_simulation_active", 1133871366145L, z1);

        $r3 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mPorts>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label05:
        $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label07;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.android.server.usb.UsbPortManager$PortInfo) $r5;

        virtualinvoke $r6.<com.android.server.usb.UsbPortManager$PortInfo: void dump(com.android.internal.util.dump.DualDumpOutputStream,java.lang.String,long)>(r8, "usb_ports", 2246267895810L);

     label06:
        goto label05;

     label07:
        exitmonitor r10;

     label08:
        virtualinvoke r8.<com.android.internal.util.dump.DualDumpOutputStream: void end(long)>(l1);

        return;

     label09:
        $r7 := @caughtexception;

     label10:
        exitmonitor r10;

     label11:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void enableContaminantDetection(java.lang.String, boolean, com.android.internal.util.IndentingPrintWriter)
    {
        com.android.server.usb.UsbPortManager r0;
        boolean z0, $z1;
        com.android.internal.util.IndentingPrintWriter r1;
        android.util.ArrayMap $r2;
        java.lang.Object $r3;
        android.hardware.usb.UsbPort $r4;
        android.hardware.usb.UsbPortStatus $r5, $r8, $r9;
        int $i0, $i1, $i2;
        android.hardware.usb.V1_0.IUsb $r6;
        android.hardware.usb.V1_2.IUsb $r7;
        java.lang.StringBuilder $r10;
        java.lang.String $r13, r16;
        android.os.RemoteException $r14;
        java.lang.ClassCastException $r15;
        com.android.server.usb.UsbPortManager$PortInfo r17;

        r0 := @this: com.android.server.usb.UsbPortManager;

        r16 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r1 := @parameter2: com.android.internal.util.IndentingPrintWriter;

        $r2 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mPorts>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r16);

        r17 = (com.android.server.usb.UsbPortManager$PortInfo) $r3;

        if r17 != null goto label02;

        if r1 == null goto label01;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No such USB port: ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r13);

     label01:
        return;

     label02:
        $r4 = r17.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPort mUsbPort>;

        $z1 = virtualinvoke $r4.<android.hardware.usb.UsbPort: boolean supportsEnableContaminantPresenceDetection()>();

        if $z1 != 0 goto label03;

        return;

     label03:
        if z0 == 0 goto label04;

        $r9 = r17.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPortStatus mUsbPortStatus>;

        $i2 = virtualinvoke $r9.<android.hardware.usb.UsbPortStatus: int getContaminantDetectionStatus()>();

        if $i2 != 1 goto label06;

     label04:
        if z0 != 0 goto label05;

        $r8 = r17.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPortStatus mUsbPortStatus>;

        $i1 = virtualinvoke $r8.<android.hardware.usb.UsbPortStatus: int getContaminantDetectionStatus()>();

        if $i1 == 1 goto label06;

     label05:
        $r5 = r17.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPortStatus mUsbPortStatus>;

        $i0 = virtualinvoke $r5.<android.hardware.usb.UsbPortStatus: int getContaminantDetectionStatus()>();

        if $i0 != 0 goto label07;

     label06:
        return;

     label07:
        $r6 = r0.<com.android.server.usb.UsbPortManager: android.hardware.usb.V1_0.IUsb mProxy>;

        $r7 = staticinvoke <android.hardware.usb.V1_2.IUsb: android.hardware.usb.V1_2.IUsb castFrom(android.os.IHwInterface)>($r6);

        interfaceinvoke $r7.<android.hardware.usb.V1_2.IUsb: void enableContaminantPresenceDetection(java.lang.String,boolean)>(r16, z0);

     label08:
        goto label11;

     label09:
        $r15 := @caughtexception;

        staticinvoke <com.android.server.usb.UsbPortManager: void logAndPrintException(com.android.internal.util.IndentingPrintWriter,java.lang.String,java.lang.Exception)>(r1, "Method only applicable to V1.2 or above implementation", $r15);

        goto label11;

     label10:
        $r14 := @caughtexception;

        staticinvoke <com.android.server.usb.UsbPortManager: void logAndPrintException(com.android.internal.util.IndentingPrintWriter,java.lang.String,java.lang.Exception)>(r1, "Failed to set contaminant detection", $r14);

     label11:
        return;

        catch android.os.RemoteException from label07 to label08 with label10;
        catch java.lang.ClassCastException from label07 to label08 with label09;
    }

    public android.hardware.usb.UsbPortStatus getPortStatus(java.lang.String)
    {
        com.android.server.usb.UsbPortManager r0;
        java.lang.Object r1, $r3;
        android.util.ArrayMap $r2;
        java.lang.Throwable $r4;
        java.lang.String r5;
        com.android.server.usb.UsbPortManager$PortInfo r6;
        android.hardware.usb.UsbPortStatus r7;

        r0 := @this: com.android.server.usb.UsbPortManager;

        r5 := @parameter0: java.lang.String;

        r1 = r0.<com.android.server.usb.UsbPortManager: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mPorts>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r5);

        r6 = (com.android.server.usb.UsbPortManager$PortInfo) $r3;

     label02:
        if r6 == null goto label05;

     label03:
        r7 = r6.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPortStatus mUsbPortStatus>;

     label04:
        goto label06;

     label05:
        r7 = null;

     label06:
        exitmonitor r1;

     label07:
        return r7;

     label08:
        $r4 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public android.hardware.usb.UsbPort[] getPorts()
    {
        com.android.server.usb.UsbPortManager r0;
        java.lang.Object r1, $r4;
        int i0, i1;
        android.util.ArrayMap $r2, $r3;
        com.android.server.usb.UsbPortManager$PortInfo $r5;
        android.hardware.usb.UsbPort $r6;
        java.lang.Throwable $r7;
        android.hardware.usb.UsbPort[] r8;

        r0 := @this: com.android.server.usb.UsbPortManager;

        r1 = r0.<com.android.server.usb.UsbPortManager: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mPorts>;

        i0 = virtualinvoke $r2.<android.util.ArrayMap: int size()>();

        r8 = newarray (android.hardware.usb.UsbPort)[i0];

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label06;

     label04:
        $r3 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mPorts>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        $r5 = (com.android.server.usb.UsbPortManager$PortInfo) $r4;

        $r6 = $r5.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPort mUsbPort>;

        r8[i1] = $r6;

     label05:
        i1 = i1 + 1;

        goto label03;

     label06:
        exitmonitor r1;

     label07:
        return r8;

     label08:
        $r7 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void lambda$sendPortChangedBroadcastLocked$0$UsbPortManager(android.content.Intent)
    {
        com.android.server.usb.UsbPortManager r0;
        android.content.Intent r1;
        android.os.UserHandle $r2;
        android.content.Context $r3;

        r0 := @this: com.android.server.usb.UsbPortManager;

        r1 := @parameter0: android.content.Intent;

        $r3 = r0.<com.android.server.usb.UsbPortManager: android.content.Context mContext>;

        $r2 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r3.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>(r1, $r2, "android.permission.MANAGE_USB");

        return;
    }

    public void removeSimulatedPort(java.lang.String, com.android.internal.util.IndentingPrintWriter)
    {
        com.android.server.usb.UsbPortManager r0;
        com.android.internal.util.IndentingPrintWriter r1;
        java.lang.Object r2;
        int i0;
        java.lang.StringBuilder r3;
        android.util.ArrayMap $r4, $r8;
        java.lang.String $r7, r11;
        java.lang.Throwable $r10;

        r0 := @this: com.android.server.usb.UsbPortManager;

        r11 := @parameter0: java.lang.String;

        r1 := @parameter1: com.android.internal.util.IndentingPrintWriter;

        r2 = r0.<com.android.server.usb.UsbPortManager: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        $r4 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mSimulatedPorts>;

        i0 = virtualinvoke $r4.<android.util.ArrayMap: int indexOfKey(java.lang.Object)>(r11);

     label2:
        if i0 >= 0 goto label5;

     label3:
        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Cannot remove simulated port which does not exist.");

        exitmonitor r2;

     label4:
        return;

     label5:
        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Disconnecting simulated port: portId=");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r7 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r7);

        $r8 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mSimulatedPorts>;

        virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i0);

        specialinvoke r0.<com.android.server.usb.UsbPortManager: void updatePortsLocked(com.android.internal.util.IndentingPrintWriter,java.util.ArrayList)>(r1, null);

        exitmonitor r2;

     label6:
        return;

     label7:
        $r10 := @caughtexception;

     label8:
        exitmonitor r2;

     label9:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void resetSimulation(com.android.internal.util.IndentingPrintWriter)
    {
        com.android.server.usb.UsbPortManager r0;
        java.lang.Object r1;
        android.util.ArrayMap $r2, $r3;
        boolean $z0;
        java.lang.Throwable $r4;
        com.android.internal.util.IndentingPrintWriter r5;

        r0 := @this: com.android.server.usb.UsbPortManager;

        r5 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        r1 = r0.<com.android.server.usb.UsbPortManager: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        virtualinvoke r5.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Removing all simulated ports and ending simulation.");

        $r2 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mSimulatedPorts>;

        $z0 = virtualinvoke $r2.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r3 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mSimulatedPorts>;

        virtualinvoke $r3.<android.util.ArrayMap: void clear()>();

        specialinvoke r0.<com.android.server.usb.UsbPortManager: void updatePortsLocked(com.android.internal.util.IndentingPrintWriter,java.util.ArrayList)>(r5, null);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void setPortRoles(java.lang.String, int, int, com.android.internal.util.IndentingPrintWriter)
    {
        com.android.server.usb.UsbPortManager r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, i8;
        com.android.internal.util.IndentingPrintWriter r1;
        java.lang.Object r2, $r4, $r90;
        boolean z0, z1, z2, $z3;
        android.util.ArrayMap $r3, $r89;
        android.hardware.usb.UsbPortStatus $r5, $r6, $r7, $r8;
        android.hardware.usb.V1_0.IUsb $r23, $r24, $r25, $r32;
        java.lang.String $r29, $r31, $r42, $r45, $r47, $r50, $r56, $r58, $r63, $r65, $r70, $r72, r73, $r78, $r79, $r80, $r82, $r83, $r84, $r85, $r86, $r87, $r88;
        java.lang.Throwable $r51;
        android.os.RemoteException $r52, $r59, $r66;
        com.android.server.usb.UsbPortManager$PortInfo r74;
        java.lang.StringBuilder r75, r76, r77, r81, r92, r95, r98, r101;
        com.android.server.usb.UsbPortManager$RawPortInfo r91;
        android.hardware.usb.V1_0.PortRole r93, r96, r99;

        r0 := @this: com.android.server.usb.UsbPortManager;

        r73 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: com.android.internal.util.IndentingPrintWriter;

        r2 = r0.<com.android.server.usb.UsbPortManager: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        $r3 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mPorts>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r73);

        r74 = (com.android.server.usb.UsbPortManager$PortInfo) $r4;

     label02:
        if r74 != null goto label06;

        if r1 == null goto label04;

     label03:
        r75 = new java.lang.StringBuilder;

        specialinvoke r75.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No such USB port: ");

        virtualinvoke r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r73);

        $r50 = virtualinvoke r75.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r50);

     label04:
        exitmonitor r2;

     label05:
        return;

     label06:
        $r5 = r74.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPortStatus mUsbPortStatus>;

        $z3 = virtualinvoke $r5.<android.hardware.usb.UsbPortStatus: boolean isRoleCombinationSupported(int,int)>(i0, i1);

        if $z3 != 0 goto label08;

        r76 = new java.lang.StringBuilder;

        specialinvoke r76.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted to set USB port into unsupported role combination: portId=");

        virtualinvoke r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r73);

        virtualinvoke r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newPowerRole=");

        $r42 = staticinvoke <android.hardware.usb.UsbPort: java.lang.String powerRoleToString(int)>(i0);

        virtualinvoke r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        virtualinvoke r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newDataRole=");

        $r45 = staticinvoke <android.hardware.usb.UsbPort: java.lang.String dataRoleToString(int)>(i1);

        virtualinvoke r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r47 = virtualinvoke r76.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.usb.UsbPortManager: void logAndPrint(int,com.android.internal.util.IndentingPrintWriter,java.lang.String)>(6, r1, $r47);

        exitmonitor r2;

     label07:
        return;

     label08:
        $r6 = r74.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPortStatus mUsbPortStatus>;

        i2 = virtualinvoke $r6.<android.hardware.usb.UsbPortStatus: int getCurrentDataRole()>();

        $r7 = r74.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPortStatus mUsbPortStatus>;

        i3 = virtualinvoke $r7.<android.hardware.usb.UsbPortStatus: int getCurrentPowerRole()>();

     label09:
        if i2 != i1 goto label13;

        if i3 != i0 goto label13;

        if r1 == null goto label11;

     label10:
        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("No change.");

     label11:
        exitmonitor r2;

     label12:
        return;

     label13:
        z0 = r74.<com.android.server.usb.UsbPortManager$PortInfo: boolean mCanChangeMode>;

        z1 = r74.<com.android.server.usb.UsbPortManager$PortInfo: boolean mCanChangePowerRole>;

        z2 = r74.<com.android.server.usb.UsbPortManager$PortInfo: boolean mCanChangeDataRole>;

        $r8 = r74.<com.android.server.usb.UsbPortManager$PortInfo: android.hardware.usb.UsbPortStatus mUsbPortStatus>;

        i4 = virtualinvoke $r8.<android.hardware.usb.UsbPortStatus: int getCurrentMode()>();

     label14:
        if z1 != 0 goto label15;

        if i3 != i0 goto label16;

     label15:
        if z2 != 0 goto label20;

        if i2 == i1 goto label20;

     label16:
        if z0 == 0 goto label17;

        if i0 != 1 goto label17;

        if i1 != 1 goto label17;

        i8 = 2;

        goto label21;

     label17:
        if z0 == 0 goto label18;

        if i0 != 2 goto label18;

        if i1 != 2 goto label18;

        i8 = 1;

        goto label21;

     label18:
        r77 = new java.lang.StringBuilder;

        specialinvoke r77.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found mismatch in supported USB role combinations while attempting to change role: ");

        virtualinvoke r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r74);

        virtualinvoke r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newPowerRole=");

        $r78 = staticinvoke <android.hardware.usb.UsbPort: java.lang.String powerRoleToString(int)>(i0);

        virtualinvoke r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r78);

        virtualinvoke r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newDataRole=");

        $r79 = staticinvoke <android.hardware.usb.UsbPort: java.lang.String dataRoleToString(int)>(i1);

        virtualinvoke r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r79);

        $r80 = virtualinvoke r77.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.usb.UsbPortManager: void logAndPrint(int,com.android.internal.util.IndentingPrintWriter,java.lang.String)>(6, r1, $r80);

        exitmonitor r2;

     label19:
        return;

     label20:
        i8 = i4;

     label21:
        r81 = new java.lang.StringBuilder;

        specialinvoke r81.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting USB port mode and role: portId=");

        virtualinvoke r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r73);

        virtualinvoke r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", currentMode=");

        $r82 = staticinvoke <android.hardware.usb.UsbPort: java.lang.String modeToString(int)>(i4);

        virtualinvoke r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r82);

        virtualinvoke r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", currentPowerRole=");

        $r83 = staticinvoke <android.hardware.usb.UsbPort: java.lang.String powerRoleToString(int)>(i3);

        virtualinvoke r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r83);

        virtualinvoke r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", currentDataRole=");

        $r84 = staticinvoke <android.hardware.usb.UsbPort: java.lang.String dataRoleToString(int)>(i2);

        virtualinvoke r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r84);

        virtualinvoke r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newMode=");

        $r85 = staticinvoke <android.hardware.usb.UsbPort: java.lang.String modeToString(int)>(i8);

        virtualinvoke r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r85);

        virtualinvoke r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newPowerRole=");

        $r86 = staticinvoke <android.hardware.usb.UsbPort: java.lang.String powerRoleToString(int)>(i0);

        virtualinvoke r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r86);

        virtualinvoke r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newDataRole=");

        $r87 = staticinvoke <android.hardware.usb.UsbPort: java.lang.String dataRoleToString(int)>(i1);

        virtualinvoke r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r87);

        $r88 = virtualinvoke r81.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.usb.UsbPortManager: void logAndPrint(int,com.android.internal.util.IndentingPrintWriter,java.lang.String)>(4, r1, $r88);

        $r89 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mSimulatedPorts>;

        $r90 = virtualinvoke $r89.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r73);

        r91 = (com.android.server.usb.UsbPortManager$RawPortInfo) $r90;

     label22:
        if r91 == null goto label25;

     label23:
        r91.<com.android.server.usb.UsbPortManager$RawPortInfo: int currentMode> = i8;

        r91.<com.android.server.usb.UsbPortManager$RawPortInfo: int currentPowerRole> = i0;

        r91.<com.android.server.usb.UsbPortManager$RawPortInfo: int currentDataRole> = i1;

        specialinvoke r0.<com.android.server.usb.UsbPortManager: void updatePortsLocked(com.android.internal.util.IndentingPrintWriter,java.util.ArrayList)>(r1, null);

     label24:
        goto label47;

     label25:
        $r23 = r0.<com.android.server.usb.UsbPortManager: android.hardware.usb.V1_0.IUsb mProxy>;

        if $r23 == null goto label47;

     label26:
        if i4 == i8 goto label33;

     label27:
        r92 = new java.lang.StringBuilder;

        specialinvoke r92.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to set the USB port mode: portId=");

        virtualinvoke r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r73);

        virtualinvoke r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newMode=");

        $r29 = staticinvoke <android.hardware.usb.UsbPort: java.lang.String modeToString(int)>(i8);

        virtualinvoke r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke r92.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.usb.UsbPortManager: void logAndPrint(int,com.android.internal.util.IndentingPrintWriter,java.lang.String)>(6, r1, $r31);

        r93 = new android.hardware.usb.V1_0.PortRole;

        specialinvoke r93.<android.hardware.usb.V1_0.PortRole: void <init>()>();

        r93.<android.hardware.usb.V1_0.PortRole: int type> = 2;

        r93.<android.hardware.usb.V1_0.PortRole: int role> = i8;

     label28:
        $r32 = r0.<com.android.server.usb.UsbPortManager: android.hardware.usb.V1_0.IUsb mProxy>;

        interfaceinvoke $r32.<android.hardware.usb.V1_0.IUsb: void switchRole(java.lang.String,android.hardware.usb.V1_0.PortRole)>(r73, r93);

     label29:
        goto label32;

     label30:
        $r66 := @caughtexception;

     label31:
        r95 = new java.lang.StringBuilder;

        specialinvoke r95.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to set the USB port mode: portId=");

        virtualinvoke r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r73);

        virtualinvoke r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newMode=");

        $i7 = r93.<android.hardware.usb.V1_0.PortRole: int role>;

        $r70 = staticinvoke <android.hardware.usb.UsbPort: java.lang.String modeToString(int)>($i7);

        virtualinvoke r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r70);

        $r72 = virtualinvoke r95.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.usb.UsbPortManager: void logAndPrintException(com.android.internal.util.IndentingPrintWriter,java.lang.String,java.lang.Exception)>(r1, $r72, $r66);

     label32:
        goto label47;

     label33:
        if i3 == i0 goto label40;

     label34:
        r96 = new android.hardware.usb.V1_0.PortRole;

        specialinvoke r96.<android.hardware.usb.V1_0.PortRole: void <init>()>();

        r96.<android.hardware.usb.V1_0.PortRole: int type> = 1;

        r96.<android.hardware.usb.V1_0.PortRole: int role> = i0;

     label35:
        $r25 = r0.<com.android.server.usb.UsbPortManager: android.hardware.usb.V1_0.IUsb mProxy>;

        interfaceinvoke $r25.<android.hardware.usb.V1_0.IUsb: void switchRole(java.lang.String,android.hardware.usb.V1_0.PortRole)>(r73, r96);

     label36:
        goto label40;

     label37:
        $r52 := @caughtexception;

     label38:
        r98 = new java.lang.StringBuilder;

        specialinvoke r98.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to set the USB port power role: portId=");

        virtualinvoke r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r73);

        virtualinvoke r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newPowerRole=");

        $i5 = r96.<android.hardware.usb.V1_0.PortRole: int role>;

        $r56 = staticinvoke <android.hardware.usb.UsbPort: java.lang.String powerRoleToString(int)>($i5);

        virtualinvoke r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);

        $r58 = virtualinvoke r98.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.usb.UsbPortManager: void logAndPrintException(com.android.internal.util.IndentingPrintWriter,java.lang.String,java.lang.Exception)>(r1, $r58, $r52);

        exitmonitor r2;

     label39:
        return;

     label40:
        if i2 == i1 goto label47;

     label41:
        r99 = new android.hardware.usb.V1_0.PortRole;

        specialinvoke r99.<android.hardware.usb.V1_0.PortRole: void <init>()>();

        r99.<android.hardware.usb.V1_0.PortRole: int type> = 0;

        r99.<android.hardware.usb.V1_0.PortRole: int role> = i1;

     label42:
        $r24 = r0.<com.android.server.usb.UsbPortManager: android.hardware.usb.V1_0.IUsb mProxy>;

        interfaceinvoke $r24.<android.hardware.usb.V1_0.IUsb: void switchRole(java.lang.String,android.hardware.usb.V1_0.PortRole)>(r73, r99);

     label43:
        goto label47;

     label44:
        $r59 := @caughtexception;

     label45:
        r101 = new java.lang.StringBuilder;

        specialinvoke r101.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to set the USB port data role: portId=");

        virtualinvoke r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r73);

        virtualinvoke r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newDataRole=");

        $i6 = r99.<android.hardware.usb.V1_0.PortRole: int role>;

        $r63 = staticinvoke <android.hardware.usb.UsbPort: java.lang.String dataRoleToString(int)>($i6);

        virtualinvoke r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63);

        $r65 = virtualinvoke r101.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.usb.UsbPortManager: void logAndPrintException(com.android.internal.util.IndentingPrintWriter,java.lang.String,java.lang.Exception)>(r1, $r65, $r59);

     label46:
        goto label47;

     label47:
        exitmonitor r2;

     label48:
        return;

     label49:
        $r51 := @caughtexception;

     label50:
        exitmonitor r2;

     label51:
        throw $r51;

        catch java.lang.Throwable from label01 to label02 with label49;
        catch java.lang.Throwable from label03 to label04 with label49;
        catch java.lang.Throwable from label04 to label05 with label49;
        catch java.lang.Throwable from label06 to label07 with label49;
        catch java.lang.Throwable from label08 to label09 with label49;
        catch java.lang.Throwable from label10 to label11 with label49;
        catch java.lang.Throwable from label11 to label12 with label49;
        catch java.lang.Throwable from label13 to label14 with label49;
        catch java.lang.Throwable from label18 to label19 with label49;
        catch java.lang.Throwable from label21 to label22 with label49;
        catch java.lang.Throwable from label23 to label24 with label49;
        catch java.lang.Throwable from label25 to label26 with label49;
        catch java.lang.Throwable from label27 to label28 with label49;
        catch android.os.RemoteException from label28 to label29 with label30;
        catch java.lang.Throwable from label28 to label29 with label49;
        catch java.lang.Throwable from label31 to label32 with label49;
        catch java.lang.Throwable from label34 to label35 with label49;
        catch android.os.RemoteException from label35 to label36 with label37;
        catch java.lang.Throwable from label35 to label36 with label49;
        catch java.lang.Throwable from label38 to label39 with label49;
        catch java.lang.Throwable from label41 to label42 with label49;
        catch android.os.RemoteException from label42 to label43 with label44;
        catch java.lang.Throwable from label42 to label43 with label49;
        catch java.lang.Throwable from label45 to label46 with label49;
        catch java.lang.Throwable from label47 to label48 with label49;
        catch java.lang.Throwable from label50 to label51 with label49;
    }

    public void simulateContaminantStatus(java.lang.String, boolean, com.android.internal.util.IndentingPrintWriter)
    {
        com.android.server.usb.UsbPortManager r0;
        boolean z0;
        com.android.internal.util.IndentingPrintWriter r1;
        java.lang.Object r2, $r6;
        com.android.server.usb.UsbPortManager$RawPortInfo r3;
        java.lang.StringBuilder r4;
        android.util.ArrayMap $r5;
        java.lang.String $r11, r13;
        java.lang.Throwable $r12;
        byte b0;

        r0 := @this: com.android.server.usb.UsbPortManager;

        r13 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r1 := @parameter2: com.android.internal.util.IndentingPrintWriter;

        r2 = r0.<com.android.server.usb.UsbPortManager: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        $r5 = r0.<com.android.server.usb.UsbPortManager: android.util.ArrayMap mSimulatedPorts>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r13);

        r3 = (com.android.server.usb.UsbPortManager$RawPortInfo) $r6;

     label02:
        if r3 != null goto label05;

     label03:
        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Simulated port not found.");

        exitmonitor r2;

     label04:
        return;

     label05:
        r4 = new java.lang.StringBuilder;

        specialinvoke r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Simulating wet port: portId=");

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", wet=");

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r11 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r11);

     label06:
        if z0 == 0 goto label07;

        b0 = 3;

        goto label08;

     label07:
        b0 = 2;

     label08:
        r3.<com.android.server.usb.UsbPortManager$RawPortInfo: int contaminantDetectionStatus> = b0;

        specialinvoke r0.<com.android.server.usb.UsbPortManager: void updatePortsLocked(com.android.internal.util.IndentingPrintWriter,java.util.ArrayList)>(r1, null);

        exitmonitor r2;

     label09:
        return;

     label10:
        $r12 := @caughtexception;

     label11:
        exitmonitor r2;

     label12:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void systemReady()
    {
        com.android.server.usb.UsbPortManager r0;
        android.os.RemoteException $r1;
        android.hardware.usb.V1_0.IUsb r2;
        android.os.Handler $r4;

        r0 := @this: com.android.server.usb.UsbPortManager;

        r0.<com.android.server.usb.UsbPortManager: boolean mSystemReady> = 1;

        r2 = r0.<com.android.server.usb.UsbPortManager: android.hardware.usb.V1_0.IUsb mProxy>;

        if r2 == null goto label4;

     label1:
        interfaceinvoke r2.<android.hardware.usb.V1_0.IUsb: void queryPortStatus()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        staticinvoke <com.android.server.usb.UsbPortManager: void logAndPrintException(com.android.internal.util.IndentingPrintWriter,java.lang.String,java.lang.Exception)>(null, "ServiceStart: Failed to query port status", $r1);

     label4:
        $r4 = r0.<com.android.server.usb.UsbPortManager: android.os.Handler mHandler>;

        virtualinvoke $r4.<android.os.Handler: boolean sendEmptyMessage(int)>(2);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
