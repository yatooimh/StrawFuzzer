class com.android.server.usb.UsbSerialReader extends android.hardware.usb.IUsbSerialReader$Stub
{
    private final android.content.Context mContext;
    private java.lang.Object mDevice;
    private final com.android.server.usb.UsbPermissionManager mPermissionManager;
    private final java.lang.String mSerialNumber;

    void <init>(android.content.Context, com.android.server.usb.UsbPermissionManager, java.lang.String)
    {
        com.android.server.usb.UsbSerialReader r0;
        android.content.Context r1;
        com.android.server.usb.UsbPermissionManager r2;
        java.lang.String r3;

        r0 := @this: com.android.server.usb.UsbSerialReader;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.usb.UsbPermissionManager;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<android.hardware.usb.IUsbSerialReader$Stub: void <init>()>();

        r0.<com.android.server.usb.UsbSerialReader: android.content.Context mContext> = r1;

        r0.<com.android.server.usb.UsbSerialReader: com.android.server.usb.UsbPermissionManager mPermissionManager> = r2;

        r0.<com.android.server.usb.UsbSerialReader: java.lang.String mSerialNumber> = r3;

        return;
    }

    private void enforcePackageBelongsToUid(int, java.lang.String)
    {
        com.android.server.usb.UsbSerialReader r0;
        int i0;
        java.lang.String r1, $r11;
        android.content.Context $r3;
        android.content.pm.PackageManager $r4;
        java.lang.String[] $r5;
        boolean $z0;
        java.lang.StringBuilder $r6;
        java.lang.IllegalArgumentException $r10;

        r0 := @this: com.android.server.usb.UsbSerialReader;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.usb.UsbSerialReader: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r5 = virtualinvoke $r4.<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>(i0);

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>($r5, r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does to belong to the ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r10;
    }

    public java.lang.String getSerial(java.lang.String) throws android.os.RemoteException
    {
        com.android.server.usb.UsbSerialReader r0;
        int i0, i1, i3, $i4, $i5, $i6;
        long l2;
        java.lang.StringBuilder r1;
        java.lang.String $r2, $r21, r22;
        android.content.Context $r3, $r6;
        android.content.pm.PackageManager $r4;
        android.content.pm.ApplicationInfo $r5;
        java.lang.Object $r7, $r10, $r14;
        boolean $z0;
        com.android.server.usb.UsbPermissionManager $r8, $r12;
        com.android.server.usb.UsbUserPermissionManager $r9, $r13;
        android.hardware.usb.UsbAccessory $r11;
        android.hardware.usb.UsbDevice $r15;
        java.lang.Throwable $r16;
        android.content.pm.PackageManager$NameNotFoundException $r17;
        android.os.UserHandle r23;
        android.content.pm.PackageInfo r24;
        android.os.RemoteException r27;

        r0 := @this: com.android.server.usb.UsbSerialReader;

        r22 := @parameter0: java.lang.String;

        i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i1 == 1000 goto label10;

        specialinvoke r0.<com.android.server.usb.UsbSerialReader: void enforcePackageBelongsToUid(int,java.lang.String)>(i1, r22);

        r23 = staticinvoke <android.os.Binder: android.os.UserHandle getCallingUserHandle()>();

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        $r3 = r0.<com.android.server.usb.UsbSerialReader: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $i4 = virtualinvoke r23.<android.os.UserHandle: int getIdentifier()>();

        r24 = virtualinvoke $r4.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfoAsUser(java.lang.String,int,int)>(r22, 0, $i4);

     label02:
        $r5 = r24.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i5 = $r5.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i5 < 29 goto label05;

        $r6 = r0.<com.android.server.usb.UsbSerialReader: android.content.Context mContext>;

        $i6 = virtualinvoke $r6.<android.content.Context: int checkPermission(java.lang.String,int,int)>("android.permission.MANAGE_USB", i0, i1);

        if $i6 != -1 goto label05;

        i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

        $r7 = r0.<com.android.server.usb.UsbSerialReader: java.lang.Object mDevice>;

        $z0 = $r7 instanceof android.hardware.usb.UsbDevice;

        if $z0 == 0 goto label04;

        $r12 = r0.<com.android.server.usb.UsbSerialReader: com.android.server.usb.UsbPermissionManager mPermissionManager>;

        $r13 = virtualinvoke $r12.<com.android.server.usb.UsbPermissionManager: com.android.server.usb.UsbUserPermissionManager getPermissionsForUser(int)>(i3);

        $r14 = r0.<com.android.server.usb.UsbSerialReader: java.lang.Object mDevice>;

        $r15 = (android.hardware.usb.UsbDevice) $r14;

        virtualinvoke $r13.<com.android.server.usb.UsbUserPermissionManager: void checkPermission(android.hardware.usb.UsbDevice,java.lang.String,int,int)>($r15, r22, i0, i1);

     label03:
        goto label05;

     label04:
        $r8 = r0.<com.android.server.usb.UsbSerialReader: com.android.server.usb.UsbPermissionManager mPermissionManager>;

        $r9 = virtualinvoke $r8.<com.android.server.usb.UsbPermissionManager: com.android.server.usb.UsbUserPermissionManager getPermissionsForUser(int)>(i3);

        $r10 = r0.<com.android.server.usb.UsbSerialReader: java.lang.Object mDevice>;

        $r11 = (android.hardware.usb.UsbAccessory) $r10;

        virtualinvoke $r9.<com.android.server.usb.UsbUserPermissionManager: void checkPermission(android.hardware.usb.UsbAccessory,int)>($r11, i1);

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label10;

     label06:
        $r16 := @caughtexception;

        goto label09;

     label07:
        $r17 := @caughtexception;

     label08:
        r27 = new android.os.RemoteException;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("package ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be found");

        $r21 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r27.<android.os.RemoteException: void <init>(java.lang.String)>($r21);

        throw r27;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r16;

     label10:
        $r2 = r0.<com.android.server.usb.UsbSerialReader: java.lang.String mSerialNumber>;

        return $r2;

        catch android.content.pm.PackageManager$NameNotFoundException from label01 to label02 with label07;
        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label08 to label09 with label06;
    }

    public void setDevice(java.lang.Object)
    {
        com.android.server.usb.UsbSerialReader r0;
        java.lang.Object r1;

        r0 := @this: com.android.server.usb.UsbSerialReader;

        r1 := @parameter0: java.lang.Object;

        r0.<com.android.server.usb.UsbSerialReader: java.lang.Object mDevice> = r1;

        return;
    }
}
