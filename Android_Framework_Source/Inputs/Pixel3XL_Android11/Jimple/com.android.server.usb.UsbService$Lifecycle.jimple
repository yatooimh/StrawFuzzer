public class com.android.server.usb.UsbService$Lifecycle extends com.android.server.SystemService
{
    private final java.util.concurrent.CompletableFuture mOnActivityManagerPhaseFinished;
    private final java.util.concurrent.CompletableFuture mOnStartFinished;
    private com.android.server.usb.UsbService mUsbService;

    public void <init>(android.content.Context)
    {
        com.android.server.usb.UsbService$Lifecycle r0;
        android.content.Context r1;
        java.util.concurrent.CompletableFuture $r2, $r3;

        r0 := @this: com.android.server.usb.UsbService$Lifecycle;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.server.SystemService: void <init>(android.content.Context)>(r1);

        $r2 = new java.util.concurrent.CompletableFuture;

        specialinvoke $r2.<java.util.concurrent.CompletableFuture: void <init>()>();

        r0.<com.android.server.usb.UsbService$Lifecycle: java.util.concurrent.CompletableFuture mOnStartFinished> = $r2;

        $r3 = new java.util.concurrent.CompletableFuture;

        specialinvoke $r3.<java.util.concurrent.CompletableFuture: void <init>()>();

        r0.<com.android.server.usb.UsbService$Lifecycle: java.util.concurrent.CompletableFuture mOnActivityManagerPhaseFinished> = $r3;

        return;
    }

    public void lambda$onBootPhase$1$UsbService$Lifecycle()
    {
        com.android.server.usb.UsbService$Lifecycle r0;
        java.util.concurrent.CompletableFuture $r1, $r4;
        com.android.server.usb.UsbService $r3;

        r0 := @this: com.android.server.usb.UsbService$Lifecycle;

        $r1 = r0.<com.android.server.usb.UsbService$Lifecycle: java.util.concurrent.CompletableFuture mOnStartFinished>;

        virtualinvoke $r1.<java.util.concurrent.CompletableFuture: java.lang.Object join()>();

        $r3 = r0.<com.android.server.usb.UsbService$Lifecycle: com.android.server.usb.UsbService mUsbService>;

        virtualinvoke $r3.<com.android.server.usb.UsbService: void systemReady()>();

        $r4 = r0.<com.android.server.usb.UsbService$Lifecycle: java.util.concurrent.CompletableFuture mOnActivityManagerPhaseFinished>;

        virtualinvoke $r4.<java.util.concurrent.CompletableFuture: boolean complete(java.lang.Object)>(null);

        return;
    }

    public void lambda$onStart$0$UsbService$Lifecycle()
    {
        com.android.server.usb.UsbService$Lifecycle r0;
        com.android.server.usb.UsbService $r2;
        android.content.Context $r3;
        java.util.concurrent.CompletableFuture $r4;

        r0 := @this: com.android.server.usb.UsbService$Lifecycle;

        $r2 = new com.android.server.usb.UsbService;

        $r3 = virtualinvoke r0.<com.android.server.usb.UsbService$Lifecycle: android.content.Context getContext()>();

        specialinvoke $r2.<com.android.server.usb.UsbService: void <init>(android.content.Context)>($r3);

        r0.<com.android.server.usb.UsbService$Lifecycle: com.android.server.usb.UsbService mUsbService> = $r2;

        virtualinvoke r0.<com.android.server.usb.UsbService$Lifecycle: void publishBinderService(java.lang.String,android.os.IBinder)>("usb", $r2);

        $r4 = r0.<com.android.server.usb.UsbService$Lifecycle: java.util.concurrent.CompletableFuture mOnStartFinished>;

        virtualinvoke $r4.<java.util.concurrent.CompletableFuture: boolean complete(java.lang.Object)>(null);

        return;
    }

    public void lambda$onUserSwitching$2$UsbService$Lifecycle(com.android.server.SystemService$TargetUser)
    {
        com.android.server.usb.UsbService$Lifecycle r0;
        com.android.server.SystemService$TargetUser r1;
        com.android.server.usb.UsbService $r2;
        int $i0;

        r0 := @this: com.android.server.usb.UsbService$Lifecycle;

        r1 := @parameter0: com.android.server.SystemService$TargetUser;

        $r2 = r0.<com.android.server.usb.UsbService$Lifecycle: com.android.server.usb.UsbService mUsbService>;

        $i0 = virtualinvoke r1.<com.android.server.SystemService$TargetUser: int getUserIdentifier()>();

        staticinvoke <com.android.server.usb.UsbService: void access$100(com.android.server.usb.UsbService,int)>($r2, $i0);

        return;
    }

    public void onBootPhase(int)
    {
        com.android.server.usb.UsbService$Lifecycle r0;
        int i0;
        java.util.concurrent.CompletableFuture $r1;
        com.android.server.usb.UsbService $r3;
        com.android.server.usb._$$Lambda$UsbService$Lifecycle$sV0bZ5BCi6DR9FlGZbY2PyYUP58 $r4;

        r0 := @this: com.android.server.usb.UsbService$Lifecycle;

        i0 := @parameter0: int;

        if i0 != 550 goto label1;

        $r4 = new com.android.server.usb._$$Lambda$UsbService$Lifecycle$sV0bZ5BCi6DR9FlGZbY2PyYUP58;

        specialinvoke $r4.<com.android.server.usb._$$Lambda$UsbService$Lifecycle$sV0bZ5BCi6DR9FlGZbY2PyYUP58: void <init>(com.android.server.usb.UsbService$Lifecycle)>(r0);

        staticinvoke <com.android.server.SystemServerInitThreadPool: java.util.concurrent.Future submit(java.lang.Runnable,java.lang.String)>($r4, "UsbService$Lifecycle#onBootPhase");

        goto label2;

     label1:
        if i0 != 1000 goto label2;

        $r1 = r0.<com.android.server.usb.UsbService$Lifecycle: java.util.concurrent.CompletableFuture mOnActivityManagerPhaseFinished>;

        virtualinvoke $r1.<java.util.concurrent.CompletableFuture: java.lang.Object join()>();

        $r3 = r0.<com.android.server.usb.UsbService$Lifecycle: com.android.server.usb.UsbService mUsbService>;

        virtualinvoke $r3.<com.android.server.usb.UsbService: void bootCompleted()>();

     label2:
        return;
    }

    public void onStart()
    {
        com.android.server.usb.UsbService$Lifecycle r0;
        com.android.server.usb._$$Lambda$UsbService$Lifecycle$KjOG0MXO3C0J_L5Ymrj6FnSwXwQ $r1;

        r0 := @this: com.android.server.usb.UsbService$Lifecycle;

        $r1 = new com.android.server.usb._$$Lambda$UsbService$Lifecycle$KjOG0MXO3C0J_L5Ymrj6FnSwXwQ;

        specialinvoke $r1.<com.android.server.usb._$$Lambda$UsbService$Lifecycle$KjOG0MXO3C0J_L5Ymrj6FnSwXwQ: void <init>(com.android.server.usb.UsbService$Lifecycle)>(r0);

        staticinvoke <com.android.server.SystemServerInitThreadPool: java.util.concurrent.Future submit(java.lang.Runnable,java.lang.String)>($r1, "UsbService$Lifecycle#onStart");

        return;
    }

    public void onUserStopping(com.android.server.SystemService$TargetUser)
    {
        com.android.server.usb.UsbService$Lifecycle r0;
        com.android.server.SystemService$TargetUser r1;
        com.android.server.usb.UsbService $r2;
        android.os.UserHandle $r3;

        r0 := @this: com.android.server.usb.UsbService$Lifecycle;

        r1 := @parameter0: com.android.server.SystemService$TargetUser;

        $r2 = r0.<com.android.server.usb.UsbService$Lifecycle: com.android.server.usb.UsbService mUsbService>;

        $r3 = virtualinvoke r1.<com.android.server.SystemService$TargetUser: android.os.UserHandle getUserHandle()>();

        staticinvoke <com.android.server.usb.UsbService: void access$000(com.android.server.usb.UsbService,android.os.UserHandle)>($r2, $r3);

        return;
    }

    public void onUserSwitching(com.android.server.SystemService$TargetUser, com.android.server.SystemService$TargetUser)
    {
        com.android.server.usb.UsbService$Lifecycle r0;
        com.android.server.SystemService$TargetUser r1, r2;
        android.os.Handler $r3;
        com.android.server.usb._$$Lambda$UsbService$Lifecycle$uW1Zp8w_9pHt_c93nC2qQFOakXo $r4;

        r0 := @this: com.android.server.usb.UsbService$Lifecycle;

        r1 := @parameter0: com.android.server.SystemService$TargetUser;

        r2 := @parameter1: com.android.server.SystemService$TargetUser;

        $r3 = staticinvoke <com.android.server.FgThread: android.os.Handler getHandler()>();

        $r4 = new com.android.server.usb._$$Lambda$UsbService$Lifecycle$uW1Zp8w_9pHt_c93nC2qQFOakXo;

        specialinvoke $r4.<com.android.server.usb._$$Lambda$UsbService$Lifecycle$uW1Zp8w_9pHt_c93nC2qQFOakXo: void <init>(com.android.server.usb.UsbService$Lifecycle,com.android.server.SystemService$TargetUser)>(r0, r2);

        virtualinvoke $r3.<android.os.Handler: boolean postAtFrontOfQueue(java.lang.Runnable)>($r4);

        return;
    }

    public void onUserUnlocking(com.android.server.SystemService$TargetUser)
    {
        com.android.server.usb.UsbService$Lifecycle r0;
        com.android.server.SystemService$TargetUser r1;
        com.android.server.usb.UsbService $r2;
        int $i0;

        r0 := @this: com.android.server.usb.UsbService$Lifecycle;

        r1 := @parameter0: com.android.server.SystemService$TargetUser;

        $r2 = r0.<com.android.server.usb.UsbService$Lifecycle: com.android.server.usb.UsbService mUsbService>;

        $i0 = virtualinvoke r1.<com.android.server.SystemService$TargetUser: int getUserIdentifier()>();

        virtualinvoke $r2.<com.android.server.usb.UsbService: void onUnlockUser(int)>($i0);

        return;
    }
}
