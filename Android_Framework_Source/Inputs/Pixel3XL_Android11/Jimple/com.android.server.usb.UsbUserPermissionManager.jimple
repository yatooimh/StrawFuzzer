class com.android.server.usb.UsbUserPermissionManager extends java.lang.Object
{
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    private final android.util.ArrayMap mAccessoryPermissionMap;
    private final android.util.ArrayMap mAccessoryPersistentPermissionMap;
    private final android.content.Context mContext;
    private final android.util.ArrayMap mDevicePermissionMap;
    private final android.util.ArrayMap mDevicePersistentPermissionMap;
    private final boolean mDisablePermissionDialogs;
    private boolean mIsCopyPermissionsScheduled;
    private final java.lang.Object mLock;
    private final android.util.AtomicFile mPermissionsFile;
    private final com.android.server.usb.UsbUserSettingsManager mUsbUserSettingsManager;
    private final android.os.UserHandle mUser;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <com.android.server.usb.UsbUserPermissionManager: boolean DEBUG> = 0;

        $r0 = class "Lcom/android/server/usb/UsbUserPermissionManager;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.server.usb.UsbUserPermissionManager: java.lang.String TAG> = $r1;

        return;
    }

    void <init>(android.content.Context, com.android.server.usb.UsbUserSettingsManager)
    {
        com.android.server.usb.UsbUserPermissionManager r0;
        android.util.ArrayMap $r1, $r2, $r3, $r4;
        java.lang.Object $r5, r15;
        android.os.UserHandle $r6, $r10;
        android.content.res.Resources $r7;
        boolean $z0;
        android.util.AtomicFile $r8;
        java.io.File $r9, $r11;
        int $i0;
        java.lang.Throwable $r12;
        android.content.Context r13;
        com.android.server.usb.UsbUserSettingsManager r14;

        r0 := @this: com.android.server.usb.UsbUserPermissionManager;

        r13 := @parameter0: android.content.Context;

        r14 := @parameter1: com.android.server.usb.UsbUserSettingsManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.util.ArrayMap;

        specialinvoke $r1.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mDevicePermissionMap> = $r1;

        $r2 = new android.util.ArrayMap;

        specialinvoke $r2.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mAccessoryPermissionMap> = $r2;

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mDevicePersistentPermissionMap> = $r3;

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mAccessoryPersistentPermissionMap> = $r4;

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        r0.<com.android.server.usb.UsbUserPermissionManager: java.lang.Object mLock> = $r5;

        r0.<com.android.server.usb.UsbUserPermissionManager: android.content.Context mContext> = r13;

        $r6 = virtualinvoke r13.<android.content.Context: android.os.UserHandle getUser()>();

        r0.<com.android.server.usb.UsbUserPermissionManager: android.os.UserHandle mUser> = $r6;

        r0.<com.android.server.usb.UsbUserPermissionManager: com.android.server.usb.UsbUserSettingsManager mUsbUserSettingsManager> = r14;

        $r7 = virtualinvoke r13.<android.content.Context: android.content.res.Resources getResources()>();

        $z0 = virtualinvoke $r7.<android.content.res.Resources: boolean getBoolean(int)>(17891414);

        r0.<com.android.server.usb.UsbUserPermissionManager: boolean mDisablePermissionDialogs> = $z0;

        $r8 = new android.util.AtomicFile;

        $r9 = new java.io.File;

        $r10 = r0.<com.android.server.usb.UsbUserPermissionManager: android.os.UserHandle mUser>;

        $i0 = virtualinvoke $r10.<android.os.UserHandle: int getIdentifier()>();

        $r11 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>($i0);

        specialinvoke $r9.<java.io.File: void <init>(java.io.File,java.lang.String)>($r11, "usb_permissions.xml");

        specialinvoke $r8.<android.util.AtomicFile: void <init>(java.io.File,java.lang.String)>($r9, "usb-permissions");

        r0.<com.android.server.usb.UsbUserPermissionManager: android.util.AtomicFile mPermissionsFile> = $r8;

        r15 = r0.<com.android.server.usb.UsbUserPermissionManager: java.lang.Object mLock>;

        entermonitor r15;

     label1:
        specialinvoke r0.<com.android.server.usb.UsbUserPermissionManager: void readPermissionsLocked()>();

        exitmonitor r15;

     label2:
        return;

     label3:
        $r12 := @caughtexception;

     label4:
        exitmonitor r15;

     label5:
        throw $r12;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private boolean isCameraDevicePresent(android.hardware.usb.UsbDevice)
    {
        com.android.server.usb.UsbUserPermissionManager r0;
        android.hardware.usb.UsbDevice r1;
        int $i0, $i1, $i2, i3;
        android.hardware.usb.UsbInterface $r2;

        r0 := @this: com.android.server.usb.UsbUserPermissionManager;

        r1 := @parameter0: android.hardware.usb.UsbDevice;

        $i0 = virtualinvoke r1.<android.hardware.usb.UsbDevice: int getDeviceClass()>();

        if $i0 != 14 goto label1;

        return 1;

     label1:
        i3 = 0;

     label2:
        $i1 = virtualinvoke r1.<android.hardware.usb.UsbDevice: int getInterfaceCount()>();

        if i3 >= $i1 goto label4;

        $r2 = virtualinvoke r1.<android.hardware.usb.UsbDevice: android.hardware.usb.UsbInterface getInterface(int)>(i3);

        $i2 = virtualinvoke $r2.<android.hardware.usb.UsbInterface: int getInterfaceClass()>();

        if $i2 != 14 goto label3;

        return 1;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        return 0;
    }

    private boolean isCameraPermissionGranted(java.lang.String, int, int)
    {
        com.android.server.usb.UsbUserPermissionManager r0;
        int i0, i1, i2, $i3, $i4;
        java.lang.StringBuilder r1;
        android.content.Context $r2, $r4;
        android.content.pm.PackageManager $r3;
        java.lang.String $r5, $r10, $r12, r13, r15;
        android.content.pm.PackageManager$NameNotFoundException $r11;
        android.content.pm.ApplicationInfo r14;

        r0 := @this: com.android.server.usb.UsbUserPermissionManager;

        r13 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r2 = r0.<com.android.server.usb.UsbUserPermissionManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r14 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r13, 0);

        $i3 = r14.<android.content.pm.ApplicationInfo: int uid>;

        if $i3 == i1 goto label3;

        r15 = <com.android.server.usb.UsbUserPermissionManager: java.lang.String TAG>;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not match caller\'s uid ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r10 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r15, $r10);

     label2:
        return 0;

     label3:
        i2 = r14.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

     label4:
        if i2 < 28 goto label5;

        $r4 = r0.<com.android.server.usb.UsbUserPermissionManager: android.content.Context mContext>;

        $i4 = virtualinvoke $r4.<android.content.Context: int checkPermission(java.lang.String,int,int)>("android.permission.CAMERA", i0, i1);

        if -1 != $i4 goto label5;

        $r5 = <com.android.server.usb.UsbUserPermissionManager: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>($r5, "Camera permission required for USB video class devices");

        return 0;

     label5:
        return 1;

     label6:
        $r11 := @caughtexception;

        $r12 = <com.android.server.usb.UsbUserPermissionManager: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>($r12, "Package not found, likely due to invalid package name!");

        return 0;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label6;
        catch android.content.pm.PackageManager$NameNotFoundException from label3 to label4 with label6;
    }

    private void readPermission(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.usb.UsbUserPermissionManager r0;
        int i0, i3, i4;
        boolean z0, $z1, $z2, $z3, $z4;
        java.lang.String $r1, $r3, $r5, $r6, $r7, $r8, $r9, $r25, $r27, r29;
        java.lang.Boolean $r2, $r4, $r24;
        android.util.ArrayMap $r10, $r12, $r14, $r17, $r19, $r21;
        android.util.SparseBooleanArray $r11, $r16, $r18, $r23;
        java.lang.Object $r15, $r22;
        java.lang.Throwable $r26;
        org.xmlpull.v1.XmlPullParser r28;
        android.hardware.usb.DeviceFilter r30;
        android.hardware.usb.AccessoryFilter r32;

        r0 := @this: com.android.server.usb.UsbUserPermissionManager;

        r28 := @parameter0: org.xmlpull.v1.XmlPullParser;

     label1:
        i0 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r28, "uid");

     label2:
        r29 = interfaceinvoke r28.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "granted");

        if r29 == null goto label8;

        $r2 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r3 = virtualinvoke $r2.<java.lang.Boolean: java.lang.String toString()>();

        $z1 = virtualinvoke r29.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label3;

        $r24 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r25 = virtualinvoke $r24.<java.lang.Boolean: java.lang.String toString()>();

        $z4 = virtualinvoke r29.<java.lang.String: boolean equals(java.lang.Object)>($r25);

        if $z4 != 0 goto label3;

        goto label8;

     label3:
        $r4 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r5 = virtualinvoke $r4.<java.lang.Boolean: java.lang.String toString()>();

        z0 = virtualinvoke r29.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        staticinvoke <com.android.internal.util.XmlUtils: void nextElement(org.xmlpull.v1.XmlPullParser)>(r28);

        $r6 = "usb-device";

        $r7 = interfaceinvoke r28.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z2 == 0 goto label5;

        r30 = staticinvoke <android.hardware.usb.DeviceFilter: android.hardware.usb.DeviceFilter read(org.xmlpull.v1.XmlPullParser)>(r28);

        $r17 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mDevicePersistentPermissionMap>;

        i3 = virtualinvoke $r17.<android.util.ArrayMap: int indexOfKey(java.lang.Object)>(r30);

        if i3 < 0 goto label4;

        $r21 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mDevicePersistentPermissionMap>;

        $r22 = virtualinvoke $r21.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i3);

        $r23 = (android.util.SparseBooleanArray) $r22;

        virtualinvoke $r23.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, z0);

        goto label7;

     label4:
        $r18 = new android.util.SparseBooleanArray;

        specialinvoke $r18.<android.util.SparseBooleanArray: void <init>()>();

        $r19 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mDevicePersistentPermissionMap>;

        virtualinvoke $r19.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r30, $r18);

        virtualinvoke $r18.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, z0);

        goto label7;

     label5:
        $r8 = "usb-accessory";

        $r9 = interfaceinvoke r28.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z3 == 0 goto label7;

        r32 = staticinvoke <android.hardware.usb.AccessoryFilter: android.hardware.usb.AccessoryFilter read(org.xmlpull.v1.XmlPullParser)>(r28);

        $r10 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mAccessoryPersistentPermissionMap>;

        i4 = virtualinvoke $r10.<android.util.ArrayMap: int indexOfKey(java.lang.Object)>(r32);

        if i4 < 0 goto label6;

        $r14 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mAccessoryPersistentPermissionMap>;

        $r15 = virtualinvoke $r14.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i4);

        $r16 = (android.util.SparseBooleanArray) $r15;

        virtualinvoke $r16.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, z0);

        goto label7;

     label6:
        $r11 = new android.util.SparseBooleanArray;

        specialinvoke $r11.<android.util.SparseBooleanArray: void <init>()>();

        $r12 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mAccessoryPersistentPermissionMap>;

        virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r32, $r11);

        virtualinvoke $r11.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, z0);

        goto label7;

     label7:
        return;

     label8:
        $r1 = <com.android.server.usb.UsbUserPermissionManager: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r1, "error reading usb permission granted state");

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r28);

        return;

     label9:
        $r26 := @caughtexception;

        $r27 = <com.android.server.usb.UsbUserPermissionManager: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r27, "error reading usb permission uid", $r26);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r28);

        return;

        catch java.lang.NumberFormatException from label1 to label2 with label9;
    }

    private void readPermissionsLocked()
    {
        com.android.server.usb.UsbUserPermissionManager r0;
        android.util.ArrayMap $r1, $r2;
        android.util.AtomicFile $r3, $r12;
        java.nio.charset.Charset $r4;
        java.lang.String $r5, $r6, $r7, $r11;
        int $i0;
        boolean $z0;
        java.lang.Throwable $r8, $r9, $r13;
        java.lang.Exception $r10;
        java.io.FileInputStream r14;
        org.xmlpull.v1.XmlPullParser r15;

        r0 := @this: com.android.server.usb.UsbUserPermissionManager;

        $r1 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mDevicePersistentPermissionMap>;

        virtualinvoke $r1.<android.util.ArrayMap: void clear()>();

        $r2 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mAccessoryPersistentPermissionMap>;

        virtualinvoke $r2.<android.util.ArrayMap: void clear()>();

     label01:
        $r3 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.AtomicFile mPermissionsFile>;

        r14 = virtualinvoke $r3.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

     label02:
        r15 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        $r4 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r5 = virtualinvoke $r4.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r15.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r14, $r5);

        staticinvoke <com.android.internal.util.XmlUtils: void nextElement(org.xmlpull.v1.XmlPullParser)>(r15);

     label03:
        $i0 = interfaceinvoke r15.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i0 == 1 goto label07;

        $r6 = "permission";

        $r7 = interfaceinvoke r15.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label05;

        specialinvoke r0.<com.android.server.usb.UsbUserPermissionManager: void readPermission(org.xmlpull.v1.XmlPullParser)>(r15);

     label04:
        goto label06;

     label05:
        staticinvoke <com.android.internal.util.XmlUtils: void nextElement(org.xmlpull.v1.XmlPullParser)>(r15);

     label06:
        goto label03;

     label07:
        if r14 == null goto label18;

     label08:
        virtualinvoke r14.<java.io.FileInputStream: void close()>();

     label09:
        goto label18;

     label10:
        $r9 := @caughtexception;

        if r14 == null goto label15;

     label11:
        virtualinvoke r14.<java.io.FileInputStream: void close()>();

     label12:
        goto label15;

     label13:
        $r13 := @caughtexception;

     label14:
        virtualinvoke $r9.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r13);

     label15:
        throw $r9;

     label16:
        $r10 := @caughtexception;

        $r11 = <com.android.server.usb.UsbUserPermissionManager: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r11, "error reading usb permissions file, deleting to start fresh", $r10);

        $r12 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.AtomicFile mPermissionsFile>;

        virtualinvoke $r12.<android.util.AtomicFile: void delete()>();

        goto label18;

     label17:
        $r8 := @caughtexception;

     label18:
        return;

        catch java.io.FileNotFoundException from label01 to label02 with label17;
        catch java.lang.Exception from label01 to label02 with label16;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.io.FileNotFoundException from label08 to label09 with label17;
        catch java.lang.Exception from label08 to label09 with label16;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.io.FileNotFoundException from label14 to label15 with label17;
        catch java.lang.Exception from label14 to label15 with label16;
        catch java.io.FileNotFoundException from label15 to label16 with label17;
        catch java.lang.Exception from label15 to label16 with label16;
    }

    private void requestPermissionDialog(android.hardware.usb.UsbDevice, android.hardware.usb.UsbAccessory, boolean, java.lang.String, android.app.PendingIntent, int)
    {
        com.android.server.usb.UsbUserPermissionManager r0;
        boolean z0;
        java.lang.String r1, $r10, $r18;
        android.app.PendingIntent r2;
        int i0, i1;
        android.content.Context $r3, $r11;
        android.content.pm.PackageManager $r4;
        android.content.pm.ApplicationInfo $r5;
        android.content.pm.PackageManager$NameNotFoundException $r12;
        java.lang.StringBuilder $r13, r22;
        java.lang.IllegalArgumentException $r17, r21;
        android.hardware.usb.UsbDevice r19;
        android.hardware.usb.UsbAccessory r20;

        r0 := @this: com.android.server.usb.UsbUserPermissionManager;

        r19 := @parameter0: android.hardware.usb.UsbDevice;

        r20 := @parameter1: android.hardware.usb.UsbAccessory;

        z0 := @parameter2: boolean;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: android.app.PendingIntent;

        i0 := @parameter5: int;

     label1:
        $r3 = r0.<com.android.server.usb.UsbUserPermissionManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r5 = virtualinvoke $r4.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r1, 0);

        i1 = $r5.<android.content.pm.ApplicationInfo: int uid>;

     label2:
        if i1 != i0 goto label3;

        $r11 = r0.<com.android.server.usb.UsbUserPermissionManager: android.content.Context mContext>;

        virtualinvoke r0.<com.android.server.usb.UsbUserPermissionManager: void requestPermissionDialog(android.hardware.usb.UsbDevice,android.hardware.usb.UsbAccessory,boolean,java.lang.String,int,android.content.Context,android.app.PendingIntent)>(r19, r20, z0, r1, i0, $r11, r2);

        return;

     label3:
        r21 = new java.lang.IllegalArgumentException;

        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("package ");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not match caller\'s uid ");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw r21;

     label4:
        $r12 := @caughtexception;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("package ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found");

        $r17 = new java.lang.IllegalArgumentException;

        $r18 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r17;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label4;
        catch android.content.pm.PackageManager$NameNotFoundException from label3 to label4 with label4;
    }

    private void scheduleWritePermissionsLocked()
    {
        com.android.server.usb.UsbUserPermissionManager r0;
        boolean $z0;
        com.android.server.usb._$$Lambda$UsbUserPermissionManager$BTAX99j1EqZh54vMSYn4PHxEgrA $r1;

        r0 := @this: com.android.server.usb.UsbUserPermissionManager;

        $z0 = r0.<com.android.server.usb.UsbUserPermissionManager: boolean mIsCopyPermissionsScheduled>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<com.android.server.usb.UsbUserPermissionManager: boolean mIsCopyPermissionsScheduled> = 1;

        $r1 = new com.android.server.usb._$$Lambda$UsbUserPermissionManager$BTAX99j1EqZh54vMSYn4PHxEgrA;

        specialinvoke $r1.<com.android.server.usb._$$Lambda$UsbUserPermissionManager$BTAX99j1EqZh54vMSYn4PHxEgrA: void <init>(com.android.server.usb.UsbUserPermissionManager)>(r0);

        staticinvoke <android.os.AsyncTask: void execute(java.lang.Runnable)>($r1);

        return;
    }

    public void checkPermission(android.hardware.usb.UsbAccessory, int)
    {
        com.android.server.usb.UsbUserPermissionManager r0;
        android.hardware.usb.UsbAccessory r1;
        int i0;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.SecurityException $r8;
        java.lang.String $r9;

        r0 := @this: com.android.server.usb.UsbUserPermissionManager;

        r1 := @parameter0: android.hardware.usb.UsbAccessory;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<com.android.server.usb.UsbUserPermissionManager: boolean hasPermission(android.hardware.usb.UsbAccessory,int)>(r1, i0);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User has not given ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" permission to accessory ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = new java.lang.SecurityException;

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.SecurityException: void <init>(java.lang.String)>($r9);

        throw $r8;
    }

    public void checkPermission(android.hardware.usb.UsbDevice, java.lang.String, int, int)
    {
        com.android.server.usb.UsbUserPermissionManager r0;
        android.hardware.usb.UsbDevice r1;
        java.lang.String r2, $r10, $r13;
        int i0, i1;
        boolean $z0;
        java.lang.StringBuilder $r4;
        java.lang.SecurityException $r12;

        r0 := @this: com.android.server.usb.UsbUserPermissionManager;

        r1 := @parameter0: android.hardware.usb.UsbDevice;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $z0 = virtualinvoke r0.<com.android.server.usb.UsbUserPermissionManager: boolean hasPermission(android.hardware.usb.UsbDevice,java.lang.String,int,int)>(r1, r2, i0, i1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User has not given ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" permission to access device ");

        $r10 = virtualinvoke r1.<android.hardware.usb.UsbDevice: java.lang.String getDeviceName()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = new java.lang.SecurityException;

        $r13 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.SecurityException: void <init>(java.lang.String)>($r13);

        throw $r12;
    }

    void dump(com.android.internal.util.dump.DualDumpOutputStream, java.lang.String, long)
    {
        com.android.server.usb.UsbUserPermissionManager r0;
        java.lang.Object r1, $r9, $r11, $r13, $r15, $r17, $r20, $r22, $r24;
        android.util.SparseBooleanArray r2, r32, r34, r38;
        boolean z0, $z1;
        android.os.UserHandle $r3;
        int $i0, $i1, $i2, $i3, $i4, i7, i8, i10, i11, i12, i13, i15, i16, i17, i18, i20, i21, i29, i30, i37, i38;
        android.util.ArrayMap $r4, $r5, $r6, $r7, $r8, $r10, $r12, $r14, $r16, $r19, $r21, $r23;
        java.lang.String $r18, r30, r31;
        java.lang.Throwable $r25, $r26, $r27, $r28, r36;
        com.android.internal.util.dump.DualDumpOutputStream r29;
        long l5, l6, l9, l14, l19, l22, l28, l33, l40;
        android.hardware.usb.UsbAccessory r33;
        android.hardware.usb.DeviceFilter r35;
        android.hardware.usb.AccessoryFilter r37;

        r0 := @this: com.android.server.usb.UsbUserPermissionManager;

        r29 := @parameter0: com.android.internal.util.dump.DualDumpOutputStream;

        r30 := @parameter1: java.lang.String;

        l5 := @parameter2: long;

        l6 = virtualinvoke r29.<com.android.internal.util.dump.DualDumpOutputStream: long start(java.lang.String,long)>(r30, l5);

        r1 = r0.<com.android.server.usb.UsbUserPermissionManager: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.usb.UsbUserPermissionManager: android.os.UserHandle mUser>;

        $i0 = virtualinvoke $r3.<android.os.UserHandle: int getIdentifier()>();

        virtualinvoke r29.<com.android.internal.util.dump.DualDumpOutputStream: void write(java.lang.String,long,int)>("user_id", 1120986464257L, $i0);

        $r4 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mDevicePermissionMap>;

        i7 = virtualinvoke $r4.<android.util.ArrayMap: int size()>();

     label02:
        i8 = 0;

     label03:
        if i8 >= i7 goto label11;

     label04:
        $r21 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mDevicePermissionMap>;

        $r22 = virtualinvoke $r21.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i8);

        r31 = (java.lang.String) $r22;

        l9 = virtualinvoke r29.<com.android.internal.util.dump.DualDumpOutputStream: long start(java.lang.String,long)>("device_permissions", 2246267895810L);

        virtualinvoke r29.<com.android.internal.util.dump.DualDumpOutputStream: void write(java.lang.String,long,java.lang.String)>("device_name", 1138166333441L, r31);

        $r23 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mDevicePermissionMap>;

        $r24 = virtualinvoke $r23.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i8);

        r32 = (android.util.SparseBooleanArray) $r24;

        i10 = virtualinvoke r32.<android.util.SparseBooleanArray: int size()>();

     label05:
        i11 = 0;

     label06:
        if i11 >= i10 goto label09;

     label07:
        $i4 = virtualinvoke r32.<android.util.SparseBooleanArray: int keyAt(int)>(i11);

        virtualinvoke r29.<com.android.internal.util.dump.DualDumpOutputStream: void write(java.lang.String,long,int)>("uids", 2220498092034L, $i4);

     label08:
        i11 = i11 + 1;

        goto label06;

     label09:
        virtualinvoke r29.<com.android.internal.util.dump.DualDumpOutputStream: void end(long)>(l9);

     label10:
        i8 = i8 + 1;

        goto label03;

     label11:
        $r5 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mAccessoryPermissionMap>;

        i12 = virtualinvoke $r5.<android.util.ArrayMap: int size()>();

     label12:
        i13 = 0;

     label13:
        if i13 >= i12 goto label21;

     label14:
        $r16 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mAccessoryPermissionMap>;

        $r17 = virtualinvoke $r16.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i13);

        r33 = (android.hardware.usb.UsbAccessory) $r17;

        l14 = virtualinvoke r29.<com.android.internal.util.dump.DualDumpOutputStream: long start(java.lang.String,long)>("accessory_permissions", 2246267895811L);

        $r18 = virtualinvoke r33.<android.hardware.usb.UsbAccessory: java.lang.String getDescription()>();

        virtualinvoke r29.<com.android.internal.util.dump.DualDumpOutputStream: void write(java.lang.String,long,java.lang.String)>("accessory_description", 1138166333441L, $r18);

        $r19 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mAccessoryPermissionMap>;

        $r20 = virtualinvoke $r19.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i13);

        r34 = (android.util.SparseBooleanArray) $r20;

        i15 = virtualinvoke r34.<android.util.SparseBooleanArray: int size()>();

     label15:
        i16 = 0;

     label16:
        if i16 >= i15 goto label19;

     label17:
        $i3 = virtualinvoke r34.<android.util.SparseBooleanArray: int keyAt(int)>(i16);

        virtualinvoke r29.<com.android.internal.util.dump.DualDumpOutputStream: void write(java.lang.String,long,int)>("uids", 2220498092034L, $i3);

     label18:
        i16 = i16 + 1;

        goto label16;

     label19:
        virtualinvoke r29.<com.android.internal.util.dump.DualDumpOutputStream: void end(long)>(l14);

     label20:
        i13 = i13 + 1;

        goto label13;

     label21:
        $r6 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mDevicePersistentPermissionMap>;

        i17 = virtualinvoke $r6.<android.util.ArrayMap: int size()>();

     label22:
        i18 = 0;

     label23:
        if i18 >= i17 goto label34;

     label24:
        $r12 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mDevicePersistentPermissionMap>;

        $r13 = virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i18);

        r35 = (android.hardware.usb.DeviceFilter) $r13;

        l19 = virtualinvoke r29.<com.android.internal.util.dump.DualDumpOutputStream: long start(java.lang.String,long)>("device_persistent_permissions", 2246267895812L);

        virtualinvoke r35.<android.hardware.usb.DeviceFilter: void dump(com.android.internal.util.dump.DualDumpOutputStream,java.lang.String,long)>(r29, "device", 1146756268033L);

        $r14 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mDevicePersistentPermissionMap>;

        $r15 = virtualinvoke $r14.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i18);

        r2 = (android.util.SparseBooleanArray) $r15;

        i20 = virtualinvoke r2.<android.util.SparseBooleanArray: int size()>();

     label25:
        i21 = 0;

     label26:
        if i21 >= i20 goto label31;

     label27:
        l22 = virtualinvoke r29.<com.android.internal.util.dump.DualDumpOutputStream: long start(java.lang.String,long)>("uid_permission", 2246267895810L);

        $i2 = virtualinvoke r2.<android.util.SparseBooleanArray: int keyAt(int)>(i21);

        virtualinvoke r29.<com.android.internal.util.dump.DualDumpOutputStream: void write(java.lang.String,long,int)>("uid", 1120986464257L, $i2);

        z0 = virtualinvoke r2.<android.util.SparseBooleanArray: boolean valueAt(int)>(i21);

     label28:
        virtualinvoke r29.<com.android.internal.util.dump.DualDumpOutputStream: void write(java.lang.String,long,boolean)>("is_granted", 1133871366146L, z0);

     label29:
        virtualinvoke r29.<com.android.internal.util.dump.DualDumpOutputStream: void end(long)>(l22);

     label30:
        i21 = i21 + 1;

        goto label26;

     label31:
        virtualinvoke r29.<com.android.internal.util.dump.DualDumpOutputStream: void end(long)>(l19);

     label32:
        i18 = i18 + 1;

        goto label23;

     label33:
        $r25 := @caughtexception;

        r36 = $r25;

        goto label57;

     label34:
        l28 = l6;

     label35:
        $r7 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mAccessoryPersistentPermissionMap>;

        i29 = virtualinvoke $r7.<android.util.ArrayMap: int size()>();

     label36:
        i30 = 0;

     label37:
        if i30 >= i29 goto label53;

     label38:
        $r8 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mAccessoryPersistentPermissionMap>;

        $r9 = virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i30);

        r37 = (android.hardware.usb.AccessoryFilter) $r9;

     label39:
        l33 = virtualinvoke r29.<com.android.internal.util.dump.DualDumpOutputStream: long start(java.lang.String,long)>("accessory_persistent_permissions", 2246267895813L);

     label40:
        virtualinvoke r37.<android.hardware.usb.AccessoryFilter: void dump(com.android.internal.util.dump.DualDumpOutputStream,java.lang.String,long)>(r29, "accessory", 1146756268033L);

     label41:
        $r10 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mAccessoryPersistentPermissionMap>;

        $r11 = virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i30);

        r38 = (android.util.SparseBooleanArray) $r11;

     label42:
        i37 = virtualinvoke r38.<android.util.SparseBooleanArray: int size()>();

     label43:
        i38 = 0;

     label44:
        if i38 >= i37 goto label50;

     label45:
        l40 = virtualinvoke r29.<com.android.internal.util.dump.DualDumpOutputStream: long start(java.lang.String,long)>("uid_permission", 2246267895810L);

     label46:
        $i1 = virtualinvoke r38.<android.util.SparseBooleanArray: int keyAt(int)>(i38);

        virtualinvoke r29.<com.android.internal.util.dump.DualDumpOutputStream: void write(java.lang.String,long,int)>("uid", 1120986464257L, $i1);

     label47:
        $z1 = virtualinvoke r38.<android.util.SparseBooleanArray: boolean valueAt(int)>(i38);

        virtualinvoke r29.<com.android.internal.util.dump.DualDumpOutputStream: void write(java.lang.String,long,boolean)>("is_granted", 1133871366146L, $z1);

     label48:
        virtualinvoke r29.<com.android.internal.util.dump.DualDumpOutputStream: void end(long)>(l40);

     label49:
        i38 = i38 + 1;

        goto label44;

     label50:
        virtualinvoke r29.<com.android.internal.util.dump.DualDumpOutputStream: void end(long)>(l33);

     label51:
        i30 = i30 + 1;

        goto label37;

     label52:
        $r27 := @caughtexception;

        r36 = $r27;

        goto label57;

     label53:
        exitmonitor r1;

     label54:
        virtualinvoke r29.<com.android.internal.util.dump.DualDumpOutputStream: void end(long)>(l28);

        return;

     label55:
        $r26 := @caughtexception;

        r36 = $r26;

        goto label57;

     label56:
        $r28 := @caughtexception;

        r36 = $r28;

     label57:
        exitmonitor r1;

     label58:
        throw r36;

        catch java.lang.Throwable from label01 to label02 with label56;
        catch java.lang.Throwable from label04 to label05 with label56;
        catch java.lang.Throwable from label07 to label08 with label56;
        catch java.lang.Throwable from label09 to label10 with label56;
        catch java.lang.Throwable from label11 to label12 with label56;
        catch java.lang.Throwable from label14 to label15 with label56;
        catch java.lang.Throwable from label17 to label18 with label56;
        catch java.lang.Throwable from label19 to label20 with label56;
        catch java.lang.Throwable from label21 to label22 with label56;
        catch java.lang.Throwable from label24 to label25 with label33;
        catch java.lang.Throwable from label27 to label28 with label33;
        catch java.lang.Throwable from label28 to label29 with label52;
        catch java.lang.Throwable from label29 to label30 with label52;
        catch java.lang.Throwable from label31 to label32 with label52;
        catch java.lang.Throwable from label35 to label36 with label55;
        catch java.lang.Throwable from label38 to label39 with label52;
        catch java.lang.Throwable from label39 to label40 with label52;
        catch java.lang.Throwable from label40 to label41 with label52;
        catch java.lang.Throwable from label41 to label42 with label52;
        catch java.lang.Throwable from label42 to label43 with label52;
        catch java.lang.Throwable from label45 to label46 with label52;
        catch java.lang.Throwable from label46 to label47 with label52;
        catch java.lang.Throwable from label47 to label48 with label52;
        catch java.lang.Throwable from label48 to label49 with label52;
        catch java.lang.Throwable from label50 to label51 with label52;
        catch java.lang.Throwable from label53 to label54 with label55;
        catch java.lang.Throwable from label57 to label58 with label56;
    }

    void grantAccessoryPermission(android.hardware.usb.UsbAccessory, int)
    {
        com.android.server.usb.UsbUserPermissionManager r0;
        int i0;
        java.lang.Object r1, $r4;
        android.util.SparseBooleanArray r2, r9;
        android.util.ArrayMap $r3, $r5;
        java.lang.Throwable $r7;
        android.hardware.usb.UsbAccessory r8;

        r0 := @this: com.android.server.usb.UsbUserPermissionManager;

        r8 := @parameter0: android.hardware.usb.UsbAccessory;

        i0 := @parameter1: int;

        r1 = r0.<com.android.server.usb.UsbUserPermissionManager: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mAccessoryPermissionMap>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r8);

        r2 = (android.util.SparseBooleanArray) $r4;

     label2:
        r9 = r2;

        if r2 != null goto label5;

     label3:
        r9 = new android.util.SparseBooleanArray;

        specialinvoke r9.<android.util.SparseBooleanArray: void <init>(int)>(1);

     label4:
        $r5 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mAccessoryPermissionMap>;

        virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, r9);

     label5:
        virtualinvoke r9.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, 1);

        exitmonitor r1;

     label6:
        return;

     label7:
        $r7 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    void grantDevicePermission(android.hardware.usb.UsbDevice, int)
    {
        com.android.server.usb.UsbUserPermissionManager r0;
        int i0;
        java.lang.Object r1, $r5;
        java.lang.String r2;
        android.util.SparseBooleanArray r3, r10;
        android.util.ArrayMap $r4, $r6;
        java.lang.Throwable $r8;
        android.hardware.usb.UsbDevice r9;

        r0 := @this: com.android.server.usb.UsbUserPermissionManager;

        r9 := @parameter0: android.hardware.usb.UsbDevice;

        i0 := @parameter1: int;

        r1 = r0.<com.android.server.usb.UsbUserPermissionManager: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r2 = virtualinvoke r9.<android.hardware.usb.UsbDevice: java.lang.String getDeviceName()>();

        $r4 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mDevicePermissionMap>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (android.util.SparseBooleanArray) $r5;

     label2:
        r10 = r3;

        if r3 != null goto label5;

     label3:
        r10 = new android.util.SparseBooleanArray;

        specialinvoke r10.<android.util.SparseBooleanArray: void <init>(int)>(1);

     label4:
        $r6 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mDevicePermissionMap>;

        virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r10);

     label5:
        virtualinvoke r10.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, 1);

        exitmonitor r1;

     label6:
        return;

     label7:
        $r8 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    boolean hasPermission(android.hardware.usb.UsbAccessory, int)
    {
        com.android.server.usb.UsbUserPermissionManager r0;
        int i0, i1;
        java.lang.Object r1, $r3, $r5;
        boolean $z0, z1, z2;
        android.util.ArrayMap $r2, $r4;
        java.lang.Throwable $r6;
        android.hardware.usb.UsbAccessory r7;
        android.hardware.usb.AccessoryFilter r8;
        android.util.SparseBooleanArray r9, r10;

        r0 := @this: com.android.server.usb.UsbUserPermissionManager;

        r7 := @parameter0: android.hardware.usb.UsbAccessory;

        i0 := @parameter1: int;

        r1 = r0.<com.android.server.usb.UsbUserPermissionManager: java.lang.Object mLock>;

        entermonitor r1;

        if i0 == 1000 goto label15;

     label01:
        $z0 = r0.<com.android.server.usb.UsbUserPermissionManager: boolean mDisablePermissionDialogs>;

        if $z0 == 0 goto label03;

     label02:
        goto label15;

     label03:
        r8 = new android.hardware.usb.AccessoryFilter;

        specialinvoke r8.<android.hardware.usb.AccessoryFilter: void <init>(android.hardware.usb.UsbAccessory)>(r7);

        $r2 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mAccessoryPersistentPermissionMap>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r8);

        r9 = (android.util.SparseBooleanArray) $r3;

     label04:
        if r9 == null goto label09;

     label05:
        i1 = virtualinvoke r9.<android.util.SparseBooleanArray: int indexOfKey(int)>(i0);

     label06:
        if i1 < 0 goto label09;

     label07:
        z1 = virtualinvoke r9.<android.util.SparseBooleanArray: boolean valueAt(int)>(i1);

        exitmonitor r1;

     label08:
        return z1;

     label09:
        $r4 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mAccessoryPermissionMap>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r7);

        r10 = (android.util.SparseBooleanArray) $r5;

     label10:
        if r10 != null goto label13;

     label11:
        exitmonitor r1;

     label12:
        return 0;

     label13:
        z2 = virtualinvoke r10.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        exitmonitor r1;

     label14:
        return z2;

     label15:
        exitmonitor r1;

     label16:
        return 1;

     label17:
        $r6 := @caughtexception;

     label18:
        exitmonitor r1;

     label19:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    boolean hasPermission(android.hardware.usb.UsbDevice, java.lang.String, int, int)
    {
        com.android.server.usb.UsbUserPermissionManager r0;
        int i0, i1, i2;
        boolean $z0, $z1, $z2, z3, z4;
        android.util.ArrayMap $r1, $r3;
        java.lang.Object $r2, $r5, r9;
        java.lang.String $r4, r8;
        java.lang.Throwable $r6;
        android.hardware.usb.UsbDevice r7;
        android.hardware.usb.DeviceFilter r10;
        android.util.SparseBooleanArray r11, r12;

        r0 := @this: com.android.server.usb.UsbUserPermissionManager;

        r7 := @parameter0: android.hardware.usb.UsbDevice;

        r8 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        i0 := @parameter3: int;

        $z0 = specialinvoke r0.<com.android.server.usb.UsbUserPermissionManager: boolean isCameraDevicePresent(android.hardware.usb.UsbDevice)>(r7);

        if $z0 == 0 goto label01;

        $z2 = specialinvoke r0.<com.android.server.usb.UsbUserPermissionManager: boolean isCameraPermissionGranted(java.lang.String,int,int)>(r8, i1, i0);

        if $z2 != 0 goto label01;

        return 0;

     label01:
        r9 = r0.<com.android.server.usb.UsbUserPermissionManager: java.lang.Object mLock>;

        entermonitor r9;

        if i0 == 1000 goto label16;

     label02:
        $z1 = r0.<com.android.server.usb.UsbUserPermissionManager: boolean mDisablePermissionDialogs>;

        if $z1 == 0 goto label04;

     label03:
        goto label16;

     label04:
        r10 = new android.hardware.usb.DeviceFilter;

        specialinvoke r10.<android.hardware.usb.DeviceFilter: void <init>(android.hardware.usb.UsbDevice)>(r7);

        $r1 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mDevicePersistentPermissionMap>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r10);

        r11 = (android.util.SparseBooleanArray) $r2;

     label05:
        if r11 == null goto label10;

     label06:
        i2 = virtualinvoke r11.<android.util.SparseBooleanArray: int indexOfKey(int)>(i0);

     label07:
        if i2 < 0 goto label10;

     label08:
        z3 = virtualinvoke r11.<android.util.SparseBooleanArray: boolean valueAt(int)>(i2);

        exitmonitor r9;

     label09:
        return z3;

     label10:
        $r3 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mDevicePermissionMap>;

        $r4 = virtualinvoke r7.<android.hardware.usb.UsbDevice: java.lang.String getDeviceName()>();

        $r5 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r4);

        r12 = (android.util.SparseBooleanArray) $r5;

     label11:
        if r12 != null goto label14;

     label12:
        exitmonitor r9;

     label13:
        return 0;

     label14:
        z4 = virtualinvoke r12.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        exitmonitor r9;

     label15:
        return z4;

     label16:
        exitmonitor r9;

     label17:
        return 1;

     label18:
        $r6 := @caughtexception;

     label19:
        exitmonitor r9;

     label20:
        throw $r6;

        catch java.lang.Throwable from label02 to label03 with label18;
        catch java.lang.Throwable from label04 to label05 with label18;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch java.lang.Throwable from label08 to label09 with label18;
        catch java.lang.Throwable from label10 to label11 with label18;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
    }

    public void lambda$scheduleWritePermissionsLocked$0$UsbUserPermissionManager()
    {
        com.android.server.usb.UsbUserPermissionManager r0;
        android.hardware.usb.DeviceFilter[] r1;
        boolean[][] r2, r55;
        android.hardware.usb.AccessoryFilter[] r3;
        int[][] r4, r52;
        android.util.AtomicFile r5, $r9, $r13, $r46;
        com.android.internal.util.FastXmlSerializer r6;
        android.util.ArrayMap $r7, $r8, $r25, $r28, $r34, $r37;
        java.nio.charset.Charset $r10;
        java.lang.String $r11, $r16, $r18, $r23, r60, $r63;
        java.lang.Boolean $r12;
        int[] $r14, $r15, $r20, $r21, $r30, $r32, $r39, $r41;
        int $i0, $i1, $i2, $i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17;
        boolean[] $r17, $r22, $r31, $r33, $r40, $r42;
        boolean $z0, $z1, $z2, $z3;
        android.hardware.usb.AccessoryFilter $r19, $r27, r56;
        android.hardware.usb.DeviceFilter $r24, $r36, r53;
        java.lang.Object $r26, $r29, $r35, $r38, r51;
        java.lang.Throwable $r43, $r44, $r45, $r47, $r48, $r49, $r50, r61, r62;
        android.util.SparseBooleanArray r54, r57;
        java.io.FileOutputStream r58, r59;

        r0 := @this: com.android.server.usb.UsbUserPermissionManager;

        r51 = r0.<com.android.server.usb.UsbUserPermissionManager: java.lang.Object mLock>;

        entermonitor r51;

     label01:
        $r7 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mDevicePersistentPermissionMap>;

        i4 = virtualinvoke $r7.<android.util.ArrayMap: int size()>();

        r1 = newarray (android.hardware.usb.DeviceFilter)[i4];

        r52 = newarray (int[])[i4];

        r2 = newarray (boolean[])[i4];

     label02:
        i5 = 0;

     label03:
        if i5 >= i4 goto label12;

     label04:
        r53 = new android.hardware.usb.DeviceFilter;

        $r34 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mDevicePersistentPermissionMap>;

        $r35 = virtualinvoke $r34.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i5);

        $r36 = (android.hardware.usb.DeviceFilter) $r35;

        specialinvoke r53.<android.hardware.usb.DeviceFilter: void <init>(android.hardware.usb.DeviceFilter)>($r36);

     label05:
        r1[i5] = r53;

     label06:
        $r37 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mDevicePersistentPermissionMap>;

        $r38 = virtualinvoke $r37.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i5);

        r54 = (android.util.SparseBooleanArray) $r38;

        i6 = virtualinvoke r54.<android.util.SparseBooleanArray: int size()>();

        $r39 = newarray (int)[i6];

        r52[i5] = $r39;

        $r40 = newarray (boolean)[i6];

        r2[i5] = $r40;

     label07:
        i7 = 0;

     label08:
        if i7 >= i6 goto label11;

     label09:
        $r41 = r52[i5];

        $i3 = virtualinvoke r54.<android.util.SparseBooleanArray: int keyAt(int)>(i7);

        $r41[i7] = $i3;

        $r42 = r2[i5];

        $z3 = virtualinvoke r54.<android.util.SparseBooleanArray: boolean valueAt(int)>(i7);

        $r42[i7] = $z3;

     label10:
        i7 = i7 + 1;

        goto label08;

     label11:
        i5 = i5 + 1;

        goto label03;

     label12:
        $r8 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mAccessoryPersistentPermissionMap>;

        i8 = virtualinvoke $r8.<android.util.ArrayMap: int size()>();

        r3 = newarray (android.hardware.usb.AccessoryFilter)[i8];

        r4 = newarray (int[])[i8];

        r55 = newarray (boolean[])[i8];

     label13:
        i9 = 0;

     label14:
        if i9 >= i8 goto label23;

     label15:
        r56 = new android.hardware.usb.AccessoryFilter;

        $r25 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mAccessoryPersistentPermissionMap>;

        $r26 = virtualinvoke $r25.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i9);

        $r27 = (android.hardware.usb.AccessoryFilter) $r26;

        specialinvoke r56.<android.hardware.usb.AccessoryFilter: void <init>(android.hardware.usb.AccessoryFilter)>($r27);

     label16:
        r3[i9] = r56;

     label17:
        $r28 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mAccessoryPersistentPermissionMap>;

        $r29 = virtualinvoke $r28.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i9);

        r57 = (android.util.SparseBooleanArray) $r29;

        i10 = virtualinvoke r57.<android.util.SparseBooleanArray: int size()>();

        $r30 = newarray (int)[i10];

        r4[i9] = $r30;

        $r31 = newarray (boolean)[i10];

        r55[i9] = $r31;

     label18:
        i11 = 0;

     label19:
        if i11 >= i10 goto label22;

     label20:
        $r32 = r4[i9];

        $i2 = virtualinvoke r57.<android.util.SparseBooleanArray: int keyAt(int)>(i11);

        $r32[i11] = $i2;

        $r33 = r55[i9];

        $z2 = virtualinvoke r57.<android.util.SparseBooleanArray: boolean valueAt(int)>(i11);

        $r33[i11] = $z2;

     label21:
        i11 = i11 + 1;

        goto label19;

     label22:
        i9 = i9 + 1;

        goto label14;

     label23:
        r0.<com.android.server.usb.UsbUserPermissionManager: boolean mIsCopyPermissionsScheduled> = 0;

        exitmonitor r51;

     label24:
        r5 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.AtomicFile mPermissionsFile>;

        entermonitor r5;

        r58 = null;

     label25:
        $r9 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.AtomicFile mPermissionsFile>;

        r59 = virtualinvoke $r9.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

     label26:
        r58 = r59;

     label27:
        r6 = new com.android.internal.util.FastXmlSerializer;

     label28:
        r58 = r59;

     label29:
        specialinvoke r6.<com.android.internal.util.FastXmlSerializer: void <init>()>();

     label30:
        r58 = r59;

     label31:
        $r10 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r11 = virtualinvoke $r10.<java.nio.charset.Charset: java.lang.String name()>();

        virtualinvoke r6.<com.android.internal.util.FastXmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r59, $r11);

     label32:
        r58 = r59;

     label33:
        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke r6.<com.android.internal.util.FastXmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r12);

     label34:
        r58 = r59;

     label35:
        virtualinvoke r6.<com.android.internal.util.FastXmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "permissions");

     label36:
        i12 = 0;

     label37:
        if i12 >= i4 goto label47;

        r58 = r59;

     label38:
        $r20 = r52[i12];

        i13 = lengthof $r20;

     label39:
        i14 = 0;

     label40:
        if i14 >= i13 goto label46;

     label41:
        virtualinvoke r6.<com.android.internal.util.FastXmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "permission");

        $r21 = r52[i12];

        $i1 = $r21[i14];

        r60 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

     label42:
        virtualinvoke r6.<com.android.internal.util.FastXmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "uid", r60);

        $r22 = r2[i12];

        $z1 = $r22[i14];

        $r23 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z1);

        virtualinvoke r6.<com.android.internal.util.FastXmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "granted", $r23);

        $r24 = r1[i12];

        virtualinvoke $r24.<android.hardware.usb.DeviceFilter: void write(org.xmlpull.v1.XmlSerializer)>(r6);

        virtualinvoke r6.<com.android.internal.util.FastXmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "permission");

     label43:
        i14 = i14 + 1;

        goto label40;

     label44:
        $r43 := @caughtexception;

        r61 = $r43;

        goto label66;

     label45:
        $r47 := @caughtexception;

        r62 = $r47;

        r58 = r59;

        goto label60;

     label46:
        i12 = i12 + 1;

        goto label37;

     label47:
        i15 = 0;

     label48:
        if i15 >= i8 goto label55;

     label49:
        $r14 = r4[i15];

        i16 = lengthof $r14;

     label50:
        i17 = 0;

     label51:
        if i17 >= i16 goto label54;

     label52:
        virtualinvoke r6.<com.android.internal.util.FastXmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "permission");

        $r15 = r4[i15];

        $i0 = $r15[i17];

        $r16 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        virtualinvoke r6.<com.android.internal.util.FastXmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "uid", $r16);

        $r17 = r2[i15];

        $z0 = $r17[i17];

        $r18 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z0);

        virtualinvoke r6.<com.android.internal.util.FastXmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "granted", $r18);

        $r19 = r3[i15];

        virtualinvoke $r19.<android.hardware.usb.AccessoryFilter: void write(org.xmlpull.v1.XmlSerializer)>(r6);

        virtualinvoke r6.<com.android.internal.util.FastXmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "permission");

     label53:
        i17 = i17 + 1;

        goto label51;

     label54:
        i15 = i15 + 1;

        goto label48;

     label55:
        virtualinvoke r6.<com.android.internal.util.FastXmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "permissions");

        virtualinvoke r6.<com.android.internal.util.FastXmlSerializer: void endDocument()>();

        $r13 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.AtomicFile mPermissionsFile>;

        virtualinvoke $r13.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r59);

     label56:
        goto label63;

     label57:
        $r45 := @caughtexception;

        r62 = $r45;

        r58 = r59;

        goto label60;

     label58:
        $r49 := @caughtexception;

        r61 = $r49;

        goto label66;

     label59:
        $r50 := @caughtexception;

        r62 = $r50;

     label60:
        $r63 = <com.android.server.usb.UsbUserPermissionManager: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r63, "Failed to write permissions", r62);

     label61:
        if r58 == null goto label63;

     label62:
        $r46 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.AtomicFile mPermissionsFile>;

        virtualinvoke $r46.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r58);

     label63:
        exitmonitor r5;

     label64:
        return;

     label65:
        $r48 := @caughtexception;

        r61 = $r48;

     label66:
        exitmonitor r5;

     label67:
        throw r61;

     label68:
        $r44 := @caughtexception;

     label69:
        exitmonitor r51;

     label70:
        throw $r44;

        catch java.lang.Throwable from label01 to label02 with label68;
        catch java.lang.Throwable from label04 to label05 with label68;
        catch java.lang.Throwable from label06 to label07 with label68;
        catch java.lang.Throwable from label09 to label10 with label68;
        catch java.lang.Throwable from label12 to label13 with label68;
        catch java.lang.Throwable from label15 to label16 with label68;
        catch java.lang.Throwable from label17 to label18 with label68;
        catch java.lang.Throwable from label20 to label21 with label68;
        catch java.lang.Throwable from label23 to label24 with label68;
        catch java.io.IOException from label25 to label26 with label59;
        catch java.lang.Throwable from label25 to label26 with label58;
        catch java.io.IOException from label27 to label28 with label59;
        catch java.lang.Throwable from label27 to label28 with label58;
        catch java.io.IOException from label29 to label30 with label59;
        catch java.lang.Throwable from label29 to label30 with label58;
        catch java.io.IOException from label31 to label32 with label59;
        catch java.lang.Throwable from label31 to label32 with label58;
        catch java.io.IOException from label33 to label34 with label59;
        catch java.lang.Throwable from label33 to label34 with label58;
        catch java.io.IOException from label35 to label36 with label59;
        catch java.lang.Throwable from label35 to label36 with label58;
        catch java.io.IOException from label38 to label39 with label59;
        catch java.lang.Throwable from label38 to label39 with label58;
        catch java.io.IOException from label41 to label42 with label45;
        catch java.lang.Throwable from label41 to label42 with label44;
        catch java.io.IOException from label42 to label43 with label57;
        catch java.lang.Throwable from label42 to label43 with label65;
        catch java.io.IOException from label49 to label50 with label57;
        catch java.lang.Throwable from label49 to label50 with label65;
        catch java.io.IOException from label52 to label53 with label57;
        catch java.lang.Throwable from label52 to label53 with label65;
        catch java.io.IOException from label55 to label56 with label57;
        catch java.lang.Throwable from label55 to label56 with label65;
        catch java.lang.Throwable from label60 to label61 with label65;
        catch java.lang.Throwable from label62 to label63 with label65;
        catch java.lang.Throwable from label63 to label64 with label65;
        catch java.lang.Throwable from label66 to label67 with label65;
        catch java.lang.Throwable from label69 to label70 with label68;
    }

    void removeAccessoryPermissions(android.hardware.usb.UsbAccessory)
    {
        com.android.server.usb.UsbUserPermissionManager r0;
        java.lang.Object r1;
        android.util.ArrayMap $r2;
        java.lang.Throwable $r4;
        android.hardware.usb.UsbAccessory r5;

        r0 := @this: com.android.server.usb.UsbUserPermissionManager;

        r5 := @parameter0: android.hardware.usb.UsbAccessory;

        r1 = r0.<com.android.server.usb.UsbUserPermissionManager: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mAccessoryPermissionMap>;

        virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r5);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void removeDevicePermissions(android.hardware.usb.UsbDevice)
    {
        com.android.server.usb.UsbUserPermissionManager r0;
        java.lang.Object r1;
        android.util.ArrayMap $r2;
        java.lang.String $r3;
        java.lang.Throwable $r5;
        android.hardware.usb.UsbDevice r6;

        r0 := @this: com.android.server.usb.UsbUserPermissionManager;

        r6 := @parameter0: android.hardware.usb.UsbDevice;

        r1 = r0.<com.android.server.usb.UsbUserPermissionManager: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mDevicePermissionMap>;

        $r3 = virtualinvoke r6.<android.hardware.usb.UsbDevice: java.lang.String getDeviceName()>();

        virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r3);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void requestPermission(android.hardware.usb.UsbAccessory, java.lang.String, android.app.PendingIntent, int)
    {
        com.android.server.usb.UsbUserPermissionManager r0;
        android.app.PendingIntent r1;
        int i0;
        boolean $z0, $z1;
        com.android.server.usb.UsbUserSettingsManager $r2;
        android.content.Intent $r3;
        android.content.Context $r6;
        android.app.PendingIntent$CanceledException $r7;
        android.hardware.usb.UsbAccessory r8;
        java.lang.String r9;

        r0 := @this: com.android.server.usb.UsbUserPermissionManager;

        r8 := @parameter0: android.hardware.usb.UsbAccessory;

        r9 := @parameter1: java.lang.String;

        r1 := @parameter2: android.app.PendingIntent;

        i0 := @parameter3: int;

        $z0 = virtualinvoke r0.<com.android.server.usb.UsbUserPermissionManager: boolean hasPermission(android.hardware.usb.UsbAccessory,int)>(r8, i0);

        if $z0 == 0 goto label5;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>()>();

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("accessory", r8);

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("permission", 1);

     label1:
        $r6 = r0.<com.android.server.usb.UsbUserPermissionManager: android.content.Context mContext>;

        virtualinvoke r1.<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)>($r6, 0, $r3);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

     label4:
        return;

     label5:
        $r2 = r0.<com.android.server.usb.UsbUserPermissionManager: com.android.server.usb.UsbUserSettingsManager mUsbUserSettingsManager>;

        $z1 = virtualinvoke $r2.<com.android.server.usb.UsbUserSettingsManager: boolean canBeDefault(android.hardware.usb.UsbAccessory,java.lang.String)>(r8, r9);

        specialinvoke r0.<com.android.server.usb.UsbUserPermissionManager: void requestPermissionDialog(android.hardware.usb.UsbDevice,android.hardware.usb.UsbAccessory,boolean,java.lang.String,android.app.PendingIntent,int)>(null, r8, $z1, r9, r1, i0);

        return;

        catch android.app.PendingIntent$CanceledException from label1 to label2 with label3;
    }

    public void requestPermission(android.hardware.usb.UsbDevice, java.lang.String, android.app.PendingIntent, int, int)
    {
        com.android.server.usb.UsbUserPermissionManager r0;
        java.lang.String r1;
        android.app.PendingIntent r2;
        int i0, i1;
        android.content.Intent $r4;
        boolean $z0, $z1, $z2, $z3;
        com.android.server.usb.UsbUserSettingsManager $r5;
        android.content.Context $r8, $r11;
        android.app.PendingIntent$CanceledException $r12, $r13;
        android.hardware.usb.UsbDevice r14;

        r0 := @this: com.android.server.usb.UsbUserPermissionManager;

        r14 := @parameter0: android.hardware.usb.UsbDevice;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.app.PendingIntent;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>()>();

        $z0 = virtualinvoke r0.<com.android.server.usb.UsbUserPermissionManager: boolean hasPermission(android.hardware.usb.UsbDevice,java.lang.String,int,int)>(r14, r1, i0, i1);

        if $z0 == 0 goto label05;

        virtualinvoke $r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("device", r14);

        virtualinvoke $r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("permission", 1);

     label01:
        $r11 = r0.<com.android.server.usb.UsbUserPermissionManager: android.content.Context mContext>;

        virtualinvoke r2.<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)>($r11, 0, $r4);

     label02:
        goto label04;

     label03:
        $r12 := @caughtexception;

     label04:
        return;

     label05:
        $z1 = specialinvoke r0.<com.android.server.usb.UsbUserPermissionManager: boolean isCameraDevicePresent(android.hardware.usb.UsbDevice)>(r14);

        if $z1 == 0 goto label10;

        $z3 = specialinvoke r0.<com.android.server.usb.UsbUserPermissionManager: boolean isCameraPermissionGranted(java.lang.String,int,int)>(r1, i0, i1);

        if $z3 != 0 goto label10;

        virtualinvoke $r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("device", r14);

        virtualinvoke $r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("permission", 0);

     label06:
        $r8 = r0.<com.android.server.usb.UsbUserPermissionManager: android.content.Context mContext>;

        virtualinvoke r2.<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)>($r8, 0, $r4);

     label07:
        goto label09;

     label08:
        $r13 := @caughtexception;

     label09:
        return;

     label10:
        $r5 = r0.<com.android.server.usb.UsbUserPermissionManager: com.android.server.usb.UsbUserSettingsManager mUsbUserSettingsManager>;

        $z2 = virtualinvoke $r5.<com.android.server.usb.UsbUserSettingsManager: boolean canBeDefault(android.hardware.usb.UsbDevice,java.lang.String)>(r14, r1);

        specialinvoke r0.<com.android.server.usb.UsbUserPermissionManager: void requestPermissionDialog(android.hardware.usb.UsbDevice,android.hardware.usb.UsbAccessory,boolean,java.lang.String,android.app.PendingIntent,int)>(r14, null, $z2, r1, r2, i1);

        return;

        catch android.app.PendingIntent$CanceledException from label01 to label02 with label03;
        catch android.app.PendingIntent$CanceledException from label06 to label07 with label08;
    }

    void requestPermissionDialog(android.hardware.usb.UsbDevice, android.hardware.usb.UsbAccessory, boolean, java.lang.String, int, android.content.Context, android.app.PendingIntent)
    {
        com.android.server.usb.UsbUserPermissionManager r0;
        android.hardware.usb.UsbAccessory r1;
        boolean z0;
        java.lang.String r2, $r13, $r21;
        int i0;
        android.content.Context r3;
        android.app.PendingIntent r4;
        long l1;
        android.content.Intent $r6;
        android.content.res.Resources $r12;
        android.content.ComponentName $r14;
        android.os.UserHandle $r17;
        java.lang.Throwable $r19;
        android.content.ActivityNotFoundException $r20;
        android.hardware.usb.UsbDevice r22;

        r0 := @this: com.android.server.usb.UsbUserPermissionManager;

        r22 := @parameter0: android.hardware.usb.UsbDevice;

        r1 := @parameter1: android.hardware.usb.UsbAccessory;

        z0 := @parameter2: boolean;

        r2 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        r3 := @parameter5: android.content.Context;

        r4 := @parameter6: android.app.PendingIntent;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r6 = new android.content.Intent;

        specialinvoke $r6.<android.content.Intent: void <init>()>();

        if r22 == null goto label01;

        virtualinvoke $r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("device", r22);

        goto label02;

     label01:
        virtualinvoke $r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("accessory", r1);

     label02:
        virtualinvoke $r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.INTENT", r4);

        virtualinvoke $r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.UID", i0);

        virtualinvoke $r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("android.hardware.usb.extra.CAN_BE_DEFAULT", z0);

        virtualinvoke $r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.hardware.usb.extra.PACKAGE", r2);

        $r12 = virtualinvoke r3.<android.content.Context: android.content.res.Resources getResources()>();

        $r13 = virtualinvoke $r12.<android.content.res.Resources: java.lang.String getString(int)>(17039957);

        $r14 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>($r13);

        virtualinvoke $r6.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r14);

        virtualinvoke $r6.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

     label03:
        $r17 = r0.<com.android.server.usb.UsbUserPermissionManager: android.os.UserHandle mUser>;

        virtualinvoke r3.<android.content.Context: void startActivityAsUser(android.content.Intent,android.os.UserHandle)>($r6, $r17);

     label04:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label09;

     label05:
        $r19 := @caughtexception;

        goto label10;

     label06:
        $r20 := @caughtexception;

     label07:
        $r21 = <com.android.server.usb.UsbUserPermissionManager: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r21, "unable to start UsbPermissionActivity");

     label08:
        goto label04;

     label09:
        return;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r19;

        catch android.content.ActivityNotFoundException from label03 to label04 with label06;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label07 to label08 with label05;
    }

    void setAccessoryPersistentPermission(android.hardware.usb.UsbAccessory, int, boolean)
    {
        com.android.server.usb.UsbUserPermissionManager r0;
        boolean z0, $z1, z2;
        java.lang.Object r2, $r6;
        android.util.SparseBooleanArray r3, r11;
        android.hardware.usb.AccessoryFilter $r4;
        android.util.ArrayMap $r5, $r7;
        java.lang.Throwable $r9;
        android.hardware.usb.UsbAccessory r10;
        int i0, i1;

        r0 := @this: com.android.server.usb.UsbUserPermissionManager;

        r10 := @parameter0: android.hardware.usb.UsbAccessory;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r4 = new android.hardware.usb.AccessoryFilter;

        specialinvoke $r4.<android.hardware.usb.AccessoryFilter: void <init>(android.hardware.usb.UsbAccessory)>(r10);

        r2 = r0.<com.android.server.usb.UsbUserPermissionManager: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        $r5 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mAccessoryPersistentPermissionMap>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r4);

        r3 = (android.util.SparseBooleanArray) $r6;

     label02:
        r11 = r3;

        if r3 != null goto label05;

     label03:
        r11 = new android.util.SparseBooleanArray;

        specialinvoke r11.<android.util.SparseBooleanArray: void <init>()>();

     label04:
        $r7 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mAccessoryPersistentPermissionMap>;

        virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r11);

     label05:
        i1 = virtualinvoke r11.<android.util.SparseBooleanArray: int indexOfKey(int)>(i0);

     label06:
        if i1 < 0 goto label12;

     label07:
        $z1 = virtualinvoke r11.<android.util.SparseBooleanArray: boolean valueAt(int)>(i1);

        if $z1 == z0 goto label09;

     label08:
        z2 = 1;

        goto label10;

     label09:
        z2 = 0;

     label10:
        virtualinvoke r11.<android.util.SparseBooleanArray: void setValueAt(int,boolean)>(i1, z0);

     label11:
        goto label14;

     label12:
        virtualinvoke r11.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, z0);

     label13:
        z2 = 1;

     label14:
        if z2 == 0 goto label16;

     label15:
        specialinvoke r0.<com.android.server.usb.UsbUserPermissionManager: void scheduleWritePermissionsLocked()>();

     label16:
        exitmonitor r2;

     label17:
        return;

     label18:
        $r9 := @caughtexception;

     label19:
        exitmonitor r2;

     label20:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label04 to label05 with label18;
        catch java.lang.Throwable from label05 to label06 with label18;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.lang.Throwable from label10 to label11 with label18;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.lang.Throwable from label15 to label16 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
    }

    void setDevicePersistentPermission(android.hardware.usb.UsbDevice, int, boolean)
    {
        com.android.server.usb.UsbUserPermissionManager r0;
        boolean z0, $z1, z2;
        java.lang.Object r2, $r6;
        android.util.SparseBooleanArray r3, r11;
        android.hardware.usb.DeviceFilter $r4;
        android.util.ArrayMap $r5, $r7;
        java.lang.Throwable $r9;
        android.hardware.usb.UsbDevice r10;
        int i0, i1;

        r0 := @this: com.android.server.usb.UsbUserPermissionManager;

        r10 := @parameter0: android.hardware.usb.UsbDevice;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r4 = new android.hardware.usb.DeviceFilter;

        specialinvoke $r4.<android.hardware.usb.DeviceFilter: void <init>(android.hardware.usb.UsbDevice)>(r10);

        r2 = r0.<com.android.server.usb.UsbUserPermissionManager: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        $r5 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mDevicePersistentPermissionMap>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r4);

        r3 = (android.util.SparseBooleanArray) $r6;

     label02:
        r11 = r3;

        if r3 != null goto label05;

     label03:
        r11 = new android.util.SparseBooleanArray;

        specialinvoke r11.<android.util.SparseBooleanArray: void <init>()>();

     label04:
        $r7 = r0.<com.android.server.usb.UsbUserPermissionManager: android.util.ArrayMap mDevicePersistentPermissionMap>;

        virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r11);

     label05:
        i1 = virtualinvoke r11.<android.util.SparseBooleanArray: int indexOfKey(int)>(i0);

     label06:
        if i1 < 0 goto label12;

     label07:
        $z1 = virtualinvoke r11.<android.util.SparseBooleanArray: boolean valueAt(int)>(i1);

        if $z1 == z0 goto label09;

     label08:
        z2 = 1;

        goto label10;

     label09:
        z2 = 0;

     label10:
        virtualinvoke r11.<android.util.SparseBooleanArray: void setValueAt(int,boolean)>(i1, z0);

     label11:
        goto label14;

     label12:
        virtualinvoke r11.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, z0);

     label13:
        z2 = 1;

     label14:
        if z2 == 0 goto label16;

     label15:
        specialinvoke r0.<com.android.server.usb.UsbUserPermissionManager: void scheduleWritePermissionsLocked()>();

     label16:
        exitmonitor r2;

     label17:
        return;

     label18:
        $r9 := @caughtexception;

     label19:
        exitmonitor r2;

     label20:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label04 to label05 with label18;
        catch java.lang.Throwable from label05 to label06 with label18;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.lang.Throwable from label10 to label11 with label18;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.lang.Throwable from label15 to label16 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
    }
}
