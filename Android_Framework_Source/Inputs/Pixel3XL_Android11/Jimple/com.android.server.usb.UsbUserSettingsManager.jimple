class com.android.server.usb.UsbUserSettingsManager extends java.lang.Object
{
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    private final java.lang.Object mLock;
    private final android.content.pm.PackageManager mPackageManager;
    private final android.os.UserHandle mUser;
    private final android.content.Context mUserContext;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <com.android.server.usb.UsbUserSettingsManager: boolean DEBUG> = 0;

        $r0 = class "Lcom/android/server/usb/UsbUserSettingsManager;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.server.usb.UsbUserSettingsManager: java.lang.String TAG> = $r1;

        return;
    }

    void <init>(android.content.Context, android.os.UserHandle)
    {
        com.android.server.usb.UsbUserSettingsManager r0;
        android.os.UserHandle r1;
        java.lang.Object $r2;
        android.content.pm.PackageManager $r3;
        android.content.pm.PackageManager$NameNotFoundException $r4;
        java.lang.RuntimeException $r5;
        android.content.Context r6, r7;

        r0 := @this: com.android.server.usb.UsbUserSettingsManager;

        r6 := @parameter0: android.content.Context;

        r1 := @parameter1: android.os.UserHandle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.server.usb.UsbUserSettingsManager: java.lang.Object mLock> = $r2;

     label1:
        r7 = virtualinvoke r6.<android.content.Context: android.content.Context createPackageContextAsUser(java.lang.String,int,android.os.UserHandle)>("android", 0, r1);

        r0.<com.android.server.usb.UsbUserSettingsManager: android.content.Context mUserContext> = r7;

     label2:
        $r3 = virtualinvoke r7.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r0.<com.android.server.usb.UsbUserSettingsManager: android.content.pm.PackageManager mPackageManager> = $r3;

        r0.<com.android.server.usb.UsbUserSettingsManager: android.os.UserHandle mUser> = r1;

        return;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("Missing android package");

        throw $r5;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    private android.content.pm.ActivityInfo[] getPackageActivities(java.lang.String)
    {
        com.android.server.usb.UsbUserSettingsManager r0;
        android.content.pm.PackageManager $r1;
        android.content.pm.PackageInfo $r2;
        android.content.pm.PackageManager$NameNotFoundException $r3;
        java.lang.String r4;
        android.content.pm.ActivityInfo[] r5;

        r0 := @this: com.android.server.usb.UsbUserSettingsManager;

        r4 := @parameter0: java.lang.String;

     label1:
        $r1 = r0.<com.android.server.usb.UsbUserSettingsManager: android.content.pm.PackageManager mPackageManager>;

        $r2 = virtualinvoke $r1.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r4, 129);

        r5 = $r2.<android.content.pm.PackageInfo: android.content.pm.ActivityInfo[] activities>;

     label2:
        return r5;

     label3:
        $r3 := @caughtexception;

        return null;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    boolean canBeDefault(android.hardware.usb.UsbAccessory, java.lang.String)
    {
        com.android.server.usb.UsbUserSettingsManager r0;
        android.hardware.usb.UsbAccessory r1;
        int i0, $i1, i3;
        android.content.pm.ActivityInfo r2;
        boolean z0, $z1;
        android.content.pm.PackageManager $r4;
        java.lang.String $r5, $r6, $r13, $r15, r16, r22;
        android.hardware.usb.AccessoryFilter $r7;
        java.lang.Throwable $r8, $r9;
        java.lang.Exception $r10;
        java.lang.StringBuilder $r11;
        android.content.pm.ActivityInfo[] r17;
        android.content.res.XmlResourceParser r18;

        r0 := @this: com.android.server.usb.UsbUserSettingsManager;

        r1 := @parameter0: android.hardware.usb.UsbAccessory;

        r16 := @parameter1: java.lang.String;

        r17 = specialinvoke r0.<com.android.server.usb.UsbUserSettingsManager: android.content.pm.ActivityInfo[] getPackageActivities(java.lang.String)>(r16);

        if r17 == null goto label24;

        i0 = lengthof r17;

        i3 = 0;

     label01:
        if i3 >= i0 goto label24;

        r2 = r17[i3];

     label02:
        $r4 = r0.<com.android.server.usb.UsbUserSettingsManager: android.content.pm.PackageManager mPackageManager>;

        r18 = virtualinvoke r2.<android.content.pm.ActivityInfo: android.content.res.XmlResourceParser loadXmlMetaData(android.content.pm.PackageManager,java.lang.String)>($r4, "android.hardware.usb.action.USB_ACCESSORY_ATTACHED");

     label03:
        if r18 != null goto label06;

        if r18 == null goto label05;

     label04:
        interfaceinvoke r18.<android.content.res.XmlResourceParser: void close()>();

     label05:
        goto label23;

     label06:
        staticinvoke <com.android.internal.util.XmlUtils: void nextElement(org.xmlpull.v1.XmlPullParser)>(r18);

     label07:
        $i1 = interfaceinvoke r18.<android.content.res.XmlResourceParser: int getEventType()>();

        if $i1 == 1 goto label13;

        $r5 = "usb-accessory";

        $r6 = interfaceinvoke r18.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label11;

        $r7 = staticinvoke <android.hardware.usb.AccessoryFilter: android.hardware.usb.AccessoryFilter read(org.xmlpull.v1.XmlPullParser)>(r18);

        z0 = virtualinvoke $r7.<android.hardware.usb.AccessoryFilter: boolean matches(android.hardware.usb.UsbAccessory)>(r1);

     label08:
        if z0 == 0 goto label11;

        if r18 == null goto label10;

     label09:
        interfaceinvoke r18.<android.content.res.XmlResourceParser: void close()>();

     label10:
        return 1;

     label11:
        staticinvoke <com.android.internal.util.XmlUtils: void nextElement(org.xmlpull.v1.XmlPullParser)>(r18);

     label12:
        goto label07;

     label13:
        if r18 == null goto label15;

     label14:
        interfaceinvoke r18.<android.content.res.XmlResourceParser: void close()>();

     label15:
        goto label23;

     label16:
        $r9 := @caughtexception;

        if r18 == null goto label21;

     label17:
        interfaceinvoke r18.<android.content.res.XmlResourceParser: void close()>();

     label18:
        goto label21;

     label19:
        $r8 := @caughtexception;

     label20:
        virtualinvoke $r9.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r8);

     label21:
        throw $r9;

     label22:
        $r10 := @caughtexception;

        r22 = <com.android.server.usb.UsbUserSettingsManager: java.lang.String TAG>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to load component info ");

        $r13 = virtualinvoke r2.<android.content.pm.ActivityInfo: java.lang.String toString()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>(r22, $r15, $r10);

     label23:
        i3 = i3 + 1;

        goto label01;

     label24:
        return 0;

        catch java.lang.Exception from label02 to label03 with label22;
        catch java.lang.Exception from label04 to label05 with label22;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Exception from label09 to label10 with label22;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Exception from label14 to label15 with label22;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Exception from label20 to label21 with label22;
        catch java.lang.Exception from label21 to label22 with label22;
    }

    boolean canBeDefault(android.hardware.usb.UsbDevice, java.lang.String)
    {
        com.android.server.usb.UsbUserSettingsManager r0;
        android.hardware.usb.UsbDevice r1;
        int i0, $i1, i3;
        android.content.pm.ActivityInfo r2;
        boolean z0, $z1;
        android.content.pm.PackageManager $r4;
        java.lang.String $r5, $r6, $r13, $r15, r16, r22;
        android.hardware.usb.DeviceFilter $r7;
        java.lang.Throwable $r8, $r9;
        java.lang.Exception $r10;
        java.lang.StringBuilder $r11;
        android.content.pm.ActivityInfo[] r17;
        android.content.res.XmlResourceParser r18;

        r0 := @this: com.android.server.usb.UsbUserSettingsManager;

        r1 := @parameter0: android.hardware.usb.UsbDevice;

        r16 := @parameter1: java.lang.String;

        r17 = specialinvoke r0.<com.android.server.usb.UsbUserSettingsManager: android.content.pm.ActivityInfo[] getPackageActivities(java.lang.String)>(r16);

        if r17 == null goto label24;

        i0 = lengthof r17;

        i3 = 0;

     label01:
        if i3 >= i0 goto label24;

        r2 = r17[i3];

     label02:
        $r4 = r0.<com.android.server.usb.UsbUserSettingsManager: android.content.pm.PackageManager mPackageManager>;

        r18 = virtualinvoke r2.<android.content.pm.ActivityInfo: android.content.res.XmlResourceParser loadXmlMetaData(android.content.pm.PackageManager,java.lang.String)>($r4, "android.hardware.usb.action.USB_DEVICE_ATTACHED");

     label03:
        if r18 != null goto label06;

        if r18 == null goto label05;

     label04:
        interfaceinvoke r18.<android.content.res.XmlResourceParser: void close()>();

     label05:
        goto label23;

     label06:
        staticinvoke <com.android.internal.util.XmlUtils: void nextElement(org.xmlpull.v1.XmlPullParser)>(r18);

     label07:
        $i1 = interfaceinvoke r18.<android.content.res.XmlResourceParser: int getEventType()>();

        if $i1 == 1 goto label13;

        $r5 = "usb-device";

        $r6 = interfaceinvoke r18.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label11;

        $r7 = staticinvoke <android.hardware.usb.DeviceFilter: android.hardware.usb.DeviceFilter read(org.xmlpull.v1.XmlPullParser)>(r18);

        z0 = virtualinvoke $r7.<android.hardware.usb.DeviceFilter: boolean matches(android.hardware.usb.UsbDevice)>(r1);

     label08:
        if z0 == 0 goto label11;

        if r18 == null goto label10;

     label09:
        interfaceinvoke r18.<android.content.res.XmlResourceParser: void close()>();

     label10:
        return 1;

     label11:
        staticinvoke <com.android.internal.util.XmlUtils: void nextElement(org.xmlpull.v1.XmlPullParser)>(r18);

     label12:
        goto label07;

     label13:
        if r18 == null goto label15;

     label14:
        interfaceinvoke r18.<android.content.res.XmlResourceParser: void close()>();

     label15:
        goto label23;

     label16:
        $r9 := @caughtexception;

        if r18 == null goto label21;

     label17:
        interfaceinvoke r18.<android.content.res.XmlResourceParser: void close()>();

     label18:
        goto label21;

     label19:
        $r8 := @caughtexception;

     label20:
        virtualinvoke $r9.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r8);

     label21:
        throw $r9;

     label22:
        $r10 := @caughtexception;

        r22 = <com.android.server.usb.UsbUserSettingsManager: java.lang.String TAG>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to load component info ");

        $r13 = virtualinvoke r2.<android.content.pm.ActivityInfo: java.lang.String toString()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>(r22, $r15, $r10);

     label23:
        i3 = i3 + 1;

        goto label01;

     label24:
        return 0;

        catch java.lang.Exception from label02 to label03 with label22;
        catch java.lang.Exception from label04 to label05 with label22;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Exception from label09 to label10 with label22;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Exception from label14 to label15 with label22;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Exception from label20 to label21 with label22;
        catch java.lang.Exception from label21 to label22 with label22;
    }

    public void dump(com.android.internal.util.dump.DualDumpOutputStream, java.lang.String, long)
    {
        com.android.server.usb.UsbUserSettingsManager r0;
        java.lang.Object r1, $r4, $r10, $r12, $r18;
        int i0, $i1, i4, i5, i7, i8, i9, i12, i13;
        android.content.pm.ResolveInfo r2, r25;
        android.os.UserHandle $r3;
        android.content.pm.ActivityInfo $r5, $r6, $r13, $r14;
        java.lang.String $r7, $r8, $r15, $r16, r22;
        android.content.pm.PackageManager $r9, $r17;
        android.hardware.usb.AccessoryFilter $r11;
        android.hardware.usb.DeviceFilter $r19;
        java.lang.Throwable $r20;
        com.android.internal.util.dump.DualDumpOutputStream r21;
        long l2, l3, l6, l11;
        android.content.Intent r23, r28;
        java.util.List r24, r29;
        android.content.ComponentName r26, r31;
        java.util.ArrayList r27, r32;

        r0 := @this: com.android.server.usb.UsbUserSettingsManager;

        r21 := @parameter0: com.android.internal.util.dump.DualDumpOutputStream;

        r22 := @parameter1: java.lang.String;

        l2 := @parameter2: long;

        l3 = virtualinvoke r21.<com.android.internal.util.dump.DualDumpOutputStream: long start(java.lang.String,long)>(r22, l2);

        r1 = r0.<com.android.server.usb.UsbUserSettingsManager: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.usb.UsbUserSettingsManager: android.os.UserHandle mUser>;

        $i1 = virtualinvoke $r3.<android.os.UserHandle: int getIdentifier()>();

        virtualinvoke r21.<com.android.internal.util.dump.DualDumpOutputStream: void write(java.lang.String,long,int)>("user_id", 1120986464257L, $i1);

        r23 = new android.content.Intent;

        specialinvoke r23.<android.content.Intent: void <init>(java.lang.String)>("android.hardware.usb.action.USB_DEVICE_ATTACHED");

        r24 = virtualinvoke r0.<com.android.server.usb.UsbUserSettingsManager: java.util.List queryIntentActivities(android.content.Intent)>(r23);

        i4 = interfaceinvoke r24.<java.util.List: int size()>();

     label02:
        i5 = 0;

     label03:
        if i5 >= i4 goto label14;

     label04:
        $r12 = interfaceinvoke r24.<java.util.List: java.lang.Object get(int)>(i5);

        r25 = (android.content.pm.ResolveInfo) $r12;

        l6 = virtualinvoke r21.<com.android.internal.util.dump.DualDumpOutputStream: long start(java.lang.String,long)>("device_attached_activities", 2246267895812L);

        r26 = new android.content.ComponentName;

        $r13 = r25.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r16 = $r13.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r14 = r25.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r15 = $r14.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke r26.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r16, $r15);

        staticinvoke <com.android.internal.util.dump.DumpUtils: void writeComponentName(com.android.internal.util.dump.DualDumpOutputStream,java.lang.String,long,android.content.ComponentName)>(r21, "activity", 1146756268033L, r26);

        $r17 = r0.<com.android.server.usb.UsbUserSettingsManager: android.content.pm.PackageManager mPackageManager>;

        r27 = staticinvoke <com.android.server.usb.UsbProfileGroupSettingsManager: java.util.ArrayList getDeviceFilters(android.content.pm.PackageManager,android.content.pm.ResolveInfo)>($r17, r25);

     label05:
        if r27 == null goto label12;

     label06:
        i7 = virtualinvoke r27.<java.util.ArrayList: int size()>();

     label07:
        i8 = 0;

     label08:
        if i8 >= i7 goto label11;

     label09:
        $r18 = virtualinvoke r27.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        $r19 = (android.hardware.usb.DeviceFilter) $r18;

        virtualinvoke $r19.<android.hardware.usb.DeviceFilter: void dump(com.android.internal.util.dump.DualDumpOutputStream,java.lang.String,long)>(r21, "filters", 2246267895810L);

     label10:
        i8 = i8 + 1;

        goto label08;

     label11:
        goto label12;

     label12:
        virtualinvoke r21.<com.android.internal.util.dump.DualDumpOutputStream: void end(long)>(l6);

     label13:
        i5 = i5 + 1;

        goto label03;

     label14:
        r28 = new android.content.Intent;

        specialinvoke r28.<android.content.Intent: void <init>(java.lang.String)>("android.hardware.usb.action.USB_ACCESSORY_ATTACHED");

        r29 = virtualinvoke r0.<com.android.server.usb.UsbUserSettingsManager: java.util.List queryIntentActivities(android.content.Intent)>(r28);

        i0 = interfaceinvoke r29.<java.util.List: int size()>();

     label15:
        i9 = 0;

     label16:
        if i9 >= i0 goto label28;

     label17:
        $r4 = interfaceinvoke r29.<java.util.List: java.lang.Object get(int)>(i9);

        r2 = (android.content.pm.ResolveInfo) $r4;

        l11 = virtualinvoke r21.<com.android.internal.util.dump.DualDumpOutputStream: long start(java.lang.String,long)>("accessory_attached_activities", 2246267895813L);

        r31 = new android.content.ComponentName;

        $r5 = r2.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r8 = $r5.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r6 = r2.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r7 = $r6.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke r31.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r8, $r7);

     label18:
        staticinvoke <com.android.internal.util.dump.DumpUtils: void writeComponentName(com.android.internal.util.dump.DualDumpOutputStream,java.lang.String,long,android.content.ComponentName)>(r21, "activity", 1146756268033L, r31);

        $r9 = r0.<com.android.server.usb.UsbUserSettingsManager: android.content.pm.PackageManager mPackageManager>;

        r32 = staticinvoke <com.android.server.usb.UsbProfileGroupSettingsManager: java.util.ArrayList getAccessoryFilters(android.content.pm.PackageManager,android.content.pm.ResolveInfo)>($r9, r2);

     label19:
        if r32 == null goto label26;

     label20:
        i12 = virtualinvoke r32.<java.util.ArrayList: int size()>();

     label21:
        i13 = 0;

     label22:
        if i13 >= i12 goto label25;

     label23:
        $r10 = virtualinvoke r32.<java.util.ArrayList: java.lang.Object get(int)>(i13);

        $r11 = (android.hardware.usb.AccessoryFilter) $r10;

        virtualinvoke $r11.<android.hardware.usb.AccessoryFilter: void dump(com.android.internal.util.dump.DualDumpOutputStream,java.lang.String,long)>(r21, "filters", 2246267895810L);

     label24:
        i13 = i13 + 1;

        goto label22;

     label25:
        goto label26;

     label26:
        virtualinvoke r21.<com.android.internal.util.dump.DualDumpOutputStream: void end(long)>(l11);

     label27:
        i9 = i9 + 1;

        goto label16;

     label28:
        exitmonitor r1;

     label29:
        virtualinvoke r21.<com.android.internal.util.dump.DualDumpOutputStream: void end(long)>(l3);

        return;

     label30:
        $r20 := @caughtexception;

     label31:
        exitmonitor r1;

     label32:
        throw $r20;

        catch java.lang.Throwable from label01 to label02 with label30;
        catch java.lang.Throwable from label04 to label05 with label30;
        catch java.lang.Throwable from label06 to label07 with label30;
        catch java.lang.Throwable from label09 to label10 with label30;
        catch java.lang.Throwable from label12 to label13 with label30;
        catch java.lang.Throwable from label14 to label15 with label30;
        catch java.lang.Throwable from label17 to label18 with label30;
        catch java.lang.Throwable from label18 to label19 with label30;
        catch java.lang.Throwable from label20 to label21 with label30;
        catch java.lang.Throwable from label23 to label24 with label30;
        catch java.lang.Throwable from label26 to label27 with label30;
        catch java.lang.Throwable from label28 to label29 with label30;
        catch java.lang.Throwable from label31 to label32 with label30;
    }

    java.util.List queryIntentActivities(android.content.Intent)
    {
        com.android.server.usb.UsbUserSettingsManager r0;
        android.content.Intent r1;
        android.os.UserHandle $r2;
        android.content.pm.PackageManager $r3;
        int $i0;
        java.util.List $r4;

        r0 := @this: com.android.server.usb.UsbUserSettingsManager;

        r1 := @parameter0: android.content.Intent;

        $r3 = r0.<com.android.server.usb.UsbUserSettingsManager: android.content.pm.PackageManager mPackageManager>;

        $r2 = r0.<com.android.server.usb.UsbUserSettingsManager: android.os.UserHandle mUser>;

        $i0 = virtualinvoke $r2.<android.os.UserHandle: int getIdentifier()>();

        $r4 = virtualinvoke $r3.<android.content.pm.PackageManager: java.util.List queryIntentActivitiesAsUser(android.content.Intent,int,int)>(r1, 128, $i0);

        return $r4;
    }
}
