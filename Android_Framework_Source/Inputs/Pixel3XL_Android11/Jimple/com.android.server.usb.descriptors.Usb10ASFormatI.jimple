public final class com.android.server.usb.descriptors.Usb10ASFormatI extends com.android.server.usb.descriptors.UsbASFormat
{
    private static final java.lang.String TAG;
    private byte mBitResolution;
    private byte mNumChannels;
    private byte mSampleFreqType;
    private int[] mSampleRates;
    private byte mSubframeSize;

    public void <init>(int, byte, byte, byte, int)
    {
        com.android.server.usb.descriptors.Usb10ASFormatI r0;
        int i0, i4;
        byte b1, b2, b3;

        r0 := @this: com.android.server.usb.descriptors.Usb10ASFormatI;

        i0 := @parameter0: int;

        b1 := @parameter1: byte;

        b2 := @parameter2: byte;

        b3 := @parameter3: byte;

        i4 := @parameter4: int;

        specialinvoke r0.<com.android.server.usb.descriptors.UsbASFormat: void <init>(int,byte,byte,byte,int)>(i0, b1, b2, b3, i4);

        return;
    }

    public int[] getBitDepths()
    {
        com.android.server.usb.descriptors.Usb10ASFormatI r0;
        int[] $r1;
        byte $b0;

        r0 := @this: com.android.server.usb.descriptors.Usb10ASFormatI;

        $r1 = newarray (int)[1];

        $b0 = r0.<com.android.server.usb.descriptors.Usb10ASFormatI: byte mBitResolution>;

        $r1[0] = $b0;

        return $r1;
    }

    public byte getBitResolution()
    {
        com.android.server.usb.descriptors.Usb10ASFormatI r0;
        byte $b0;

        r0 := @this: com.android.server.usb.descriptors.Usb10ASFormatI;

        $b0 = r0.<com.android.server.usb.descriptors.Usb10ASFormatI: byte mBitResolution>;

        return $b0;
    }

    public int[] getChannelCounts()
    {
        com.android.server.usb.descriptors.Usb10ASFormatI r0;
        int[] $r1;
        byte $b0;

        r0 := @this: com.android.server.usb.descriptors.Usb10ASFormatI;

        $r1 = newarray (int)[1];

        $b0 = r0.<com.android.server.usb.descriptors.Usb10ASFormatI: byte mNumChannels>;

        $r1[0] = $b0;

        return $r1;
    }

    public byte getNumChannels()
    {
        com.android.server.usb.descriptors.Usb10ASFormatI r0;
        byte $b0;

        r0 := @this: com.android.server.usb.descriptors.Usb10ASFormatI;

        $b0 = r0.<com.android.server.usb.descriptors.Usb10ASFormatI: byte mNumChannels>;

        return $b0;
    }

    public byte getSampleFreqType()
    {
        com.android.server.usb.descriptors.Usb10ASFormatI r0;
        byte $b0;

        r0 := @this: com.android.server.usb.descriptors.Usb10ASFormatI;

        $b0 = r0.<com.android.server.usb.descriptors.Usb10ASFormatI: byte mSampleFreqType>;

        return $b0;
    }

    public int[] getSampleRates()
    {
        com.android.server.usb.descriptors.Usb10ASFormatI r0;
        int[] $r1;

        r0 := @this: com.android.server.usb.descriptors.Usb10ASFormatI;

        $r1 = r0.<com.android.server.usb.descriptors.Usb10ASFormatI: int[] mSampleRates>;

        return $r1;
    }

    public byte getSubframeSize()
    {
        com.android.server.usb.descriptors.Usb10ASFormatI r0;
        byte $b0;

        r0 := @this: com.android.server.usb.descriptors.Usb10ASFormatI;

        $b0 = r0.<com.android.server.usb.descriptors.Usb10ASFormatI: byte mSubframeSize>;

        return $b0;
    }

    public int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)
    {
        com.android.server.usb.descriptors.Usb10ASFormatI r0;
        com.android.server.usb.descriptors.ByteStream r1;
        int[] r2, $r3, $r4, $r5;
        byte $b0, $b1, $b2, $b3, $b4, b9;
        int $i5, $i6, $i7, $i8, i10;

        r0 := @this: com.android.server.usb.descriptors.Usb10ASFormatI;

        r1 := @parameter0: com.android.server.usb.descriptors.ByteStream;

        $b0 = virtualinvoke r1.<com.android.server.usb.descriptors.ByteStream: byte getByte()>();

        r0.<com.android.server.usb.descriptors.Usb10ASFormatI: byte mNumChannels> = $b0;

        $b1 = virtualinvoke r1.<com.android.server.usb.descriptors.ByteStream: byte getByte()>();

        r0.<com.android.server.usb.descriptors.Usb10ASFormatI: byte mSubframeSize> = $b1;

        $b2 = virtualinvoke r1.<com.android.server.usb.descriptors.ByteStream: byte getByte()>();

        r0.<com.android.server.usb.descriptors.Usb10ASFormatI: byte mBitResolution> = $b2;

        b9 = virtualinvoke r1.<com.android.server.usb.descriptors.ByteStream: byte getByte()>();

        $b3 = (byte) b9;

        r0.<com.android.server.usb.descriptors.Usb10ASFormatI: byte mSampleFreqType> = $b3;

        if b9 != 0 goto label1;

        r2 = newarray (int)[2];

        r0.<com.android.server.usb.descriptors.Usb10ASFormatI: int[] mSampleRates> = r2;

        $i7 = virtualinvoke r1.<com.android.server.usb.descriptors.ByteStream: int unpackUsbTriple()>();

        r2[0] = $i7;

        $r5 = r0.<com.android.server.usb.descriptors.Usb10ASFormatI: int[] mSampleRates>;

        $i8 = virtualinvoke r1.<com.android.server.usb.descriptors.ByteStream: int unpackUsbTriple()>();

        $r5[1] = $i8;

        goto label3;

     label1:
        $r3 = newarray (int)[b9];

        r0.<com.android.server.usb.descriptors.Usb10ASFormatI: int[] mSampleRates> = $r3;

        i10 = 0;

     label2:
        $b4 = r0.<com.android.server.usb.descriptors.Usb10ASFormatI: byte mSampleFreqType>;

        if i10 >= $b4 goto label3;

        $r4 = r0.<com.android.server.usb.descriptors.Usb10ASFormatI: int[] mSampleRates>;

        $i6 = virtualinvoke r1.<com.android.server.usb.descriptors.ByteStream: int unpackUsbTriple()>();

        $r4[i10] = $i6;

        i10 = i10 + 1;

        goto label2;

     label3:
        $i5 = r0.<com.android.server.usb.descriptors.Usb10ASFormatI: int mLength>;

        return $i5;
    }

    public void report(com.android.server.usb.descriptors.report.ReportCanvas)
    {
        com.android.server.usb.descriptors.Usb10ASFormatI r0;
        com.android.server.usb.descriptors.report.ReportCanvas r1;
        byte b0, $b1, $b2, $b3;
        java.lang.StringBuilder $r2, $r7, $r11, $r15, $r19, $r23, $r27;
        java.lang.String $r6, $r10, $r14, $r18, $r22, $r26, $r30;
        int $i4, $i5, $i6, i7;
        int[] r34;

        r0 := @this: com.android.server.usb.descriptors.Usb10ASFormatI;

        r1 := @parameter0: com.android.server.usb.descriptors.report.ReportCanvas;

        specialinvoke r0.<com.android.server.usb.descriptors.UsbASFormat: void report(com.android.server.usb.descriptors.report.ReportCanvas)>(r1);

        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void openList()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $b1 = virtualinvoke r0.<com.android.server.usb.descriptors.Usb10ASFormatI: byte getNumChannels()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Channels.");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void writeListItem(java.lang.String)>($r6);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Subframe Size: ");

        $b2 = virtualinvoke r0.<com.android.server.usb.descriptors.Usb10ASFormatI: byte getSubframeSize()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b2);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void writeListItem(java.lang.String)>($r10);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bit Resolution: ");

        $b3 = virtualinvoke r0.<com.android.server.usb.descriptors.Usb10ASFormatI: byte getBitResolution()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b3);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void writeListItem(java.lang.String)>($r14);

        b0 = virtualinvoke r0.<com.android.server.usb.descriptors.Usb10ASFormatI: byte getSampleFreqType()>();

        r34 = virtualinvoke r0.<com.android.server.usb.descriptors.Usb10ASFormatI: int[] getSampleRates()>();

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sample Freq Type: ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void writeListItem(java.lang.String)>($r18);

        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void openList()>();

        if b0 != 0 goto label1;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("min: ");

        $i5 = r34[0];

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void writeListItem(java.lang.String)>($r26);

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("max: ");

        $i6 = r34[1];

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void writeListItem(java.lang.String)>($r30);

        goto label3;

     label1:
        i7 = 0;

     label2:
        if i7 >= b0 goto label3;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $i4 = r34[i7];

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void writeListItem(java.lang.String)>($r22);

        i7 = i7 + 1;

        goto label2;

     label3:
        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void closeList()>();

        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void closeList()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.usb.descriptors.Usb10ASFormatI: java.lang.String TAG> = "Usb10ASFormatI";

        return;
    }
}
