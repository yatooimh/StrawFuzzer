public class com.android.server.usb.descriptors.UsbACAudioControlEndpoint extends com.android.server.usb.descriptors.UsbACEndpoint
{
    static final byte ADDRESSMASK_DIRECTION;
    static final byte ADDRESSMASK_ENDPOINT;
    static final byte ATTRIBMASK_TRANS;
    static final byte ATTRIBSMASK_SYNC;
    private static final java.lang.String TAG;
    private byte mAddress;
    private byte mAttribs;
    private byte mInterval;
    private int mMaxPacketSize;

    public void <init>(int, byte, int)
    {
        com.android.server.usb.descriptors.UsbACAudioControlEndpoint r0;
        int i0, i2;
        byte b1;

        r0 := @this: com.android.server.usb.descriptors.UsbACAudioControlEndpoint;

        i0 := @parameter0: int;

        b1 := @parameter1: byte;

        i2 := @parameter2: int;

        specialinvoke r0.<com.android.server.usb.descriptors.UsbACEndpoint: void <init>(int,byte,int)>(i0, b1, i2);

        return;
    }

    public byte getAddress()
    {
        com.android.server.usb.descriptors.UsbACAudioControlEndpoint r0;
        byte $b0;

        r0 := @this: com.android.server.usb.descriptors.UsbACAudioControlEndpoint;

        $b0 = r0.<com.android.server.usb.descriptors.UsbACAudioControlEndpoint: byte mAddress>;

        return $b0;
    }

    public byte getAttribs()
    {
        com.android.server.usb.descriptors.UsbACAudioControlEndpoint r0;
        byte $b0;

        r0 := @this: com.android.server.usb.descriptors.UsbACAudioControlEndpoint;

        $b0 = r0.<com.android.server.usb.descriptors.UsbACAudioControlEndpoint: byte mAttribs>;

        return $b0;
    }

    public byte getInterval()
    {
        com.android.server.usb.descriptors.UsbACAudioControlEndpoint r0;
        byte $b0;

        r0 := @this: com.android.server.usb.descriptors.UsbACAudioControlEndpoint;

        $b0 = r0.<com.android.server.usb.descriptors.UsbACAudioControlEndpoint: byte mInterval>;

        return $b0;
    }

    public int getMaxPacketSize()
    {
        com.android.server.usb.descriptors.UsbACAudioControlEndpoint r0;
        int $i0;

        r0 := @this: com.android.server.usb.descriptors.UsbACAudioControlEndpoint;

        $i0 = r0.<com.android.server.usb.descriptors.UsbACAudioControlEndpoint: int mMaxPacketSize>;

        return $i0;
    }

    public volatile int getSubclass()
    {
        com.android.server.usb.descriptors.UsbACAudioControlEndpoint r0;
        int $i0;

        r0 := @this: com.android.server.usb.descriptors.UsbACAudioControlEndpoint;

        $i0 = specialinvoke r0.<com.android.server.usb.descriptors.UsbACEndpoint: int getSubclass()>();

        return $i0;
    }

    public volatile byte getSubtype()
    {
        com.android.server.usb.descriptors.UsbACAudioControlEndpoint r0;
        byte $b0;

        r0 := @this: com.android.server.usb.descriptors.UsbACAudioControlEndpoint;

        $b0 = specialinvoke r0.<com.android.server.usb.descriptors.UsbACEndpoint: byte getSubtype()>();

        return $b0;
    }

    public int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)
    {
        com.android.server.usb.descriptors.UsbACAudioControlEndpoint r0;
        com.android.server.usb.descriptors.ByteStream r1;
        byte $b1, $b2, $b4;
        int $i3, $i5;

        r0 := @this: com.android.server.usb.descriptors.UsbACAudioControlEndpoint;

        r1 := @parameter0: com.android.server.usb.descriptors.ByteStream;

        specialinvoke r0.<com.android.server.usb.descriptors.UsbACEndpoint: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>(r1);

        $b1 = virtualinvoke r1.<com.android.server.usb.descriptors.ByteStream: byte getByte()>();

        r0.<com.android.server.usb.descriptors.UsbACAudioControlEndpoint: byte mAddress> = $b1;

        $b2 = virtualinvoke r1.<com.android.server.usb.descriptors.ByteStream: byte getByte()>();

        r0.<com.android.server.usb.descriptors.UsbACAudioControlEndpoint: byte mAttribs> = $b2;

        $i3 = virtualinvoke r1.<com.android.server.usb.descriptors.ByteStream: int unpackUsbShort()>();

        r0.<com.android.server.usb.descriptors.UsbACAudioControlEndpoint: int mMaxPacketSize> = $i3;

        $b4 = virtualinvoke r1.<com.android.server.usb.descriptors.ByteStream: byte getByte()>();

        r0.<com.android.server.usb.descriptors.UsbACAudioControlEndpoint: byte mInterval> = $b4;

        $i5 = r0.<com.android.server.usb.descriptors.UsbACAudioControlEndpoint: int mLength>;

        return $i5;
    }

    public static void <clinit>()
    {
        <com.android.server.usb.descriptors.UsbACAudioControlEndpoint: java.lang.String TAG> = "UsbACAudioControlEndpoint";

        <com.android.server.usb.descriptors.UsbACAudioControlEndpoint: byte ATTRIBSMASK_SYNC> = 12;

        <com.android.server.usb.descriptors.UsbACAudioControlEndpoint: byte ATTRIBMASK_TRANS> = 3;

        <com.android.server.usb.descriptors.UsbACAudioControlEndpoint: byte ADDRESSMASK_ENDPOINT> = 15;

        <com.android.server.usb.descriptors.UsbACAudioControlEndpoint: byte ADDRESSMASK_DIRECTION> = -128;

        return;
    }
}
