public abstract class com.android.server.usb.descriptors.UsbACInterface extends com.android.server.usb.descriptors.UsbDescriptor
{
    public static final byte ACI_CLOCK_MULTIPLIER;
    public static final byte ACI_CLOCK_SELECTOR;
    public static final byte ACI_CLOCK_SOURCE;
    public static final byte ACI_EXTENSION_UNIT;
    public static final byte ACI_FEATURE_UNIT;
    public static final byte ACI_HEADER;
    public static final byte ACI_INPUT_TERMINAL;
    public static final byte ACI_MIXER_UNIT;
    public static final byte ACI_OUTPUT_TERMINAL;
    public static final byte ACI_PROCESSING_UNIT;
    public static final byte ACI_SAMPLE_RATE_CONVERTER;
    public static final byte ACI_SELECTOR_UNIT;
    public static final byte ACI_UNDEFINED;
    public static final byte ASI_FORMAT_SPECIFIC;
    public static final byte ASI_FORMAT_TYPE;
    public static final byte ASI_GENERAL;
    public static final byte ASI_UNDEFINED;
    public static final int FORMAT_III_IEC1937AC3;
    public static final int FORMAT_III_IEC1937_MPEG1_Layer1;
    public static final int FORMAT_III_IEC1937_MPEG1_Layer2;
    public static final int FORMAT_III_IEC1937_MPEG2_EXT;
    public static final int FORMAT_III_IEC1937_MPEG2_Layer1LS;
    public static final int FORMAT_III_UNDEFINED;
    public static final int FORMAT_II_AC3;
    public static final int FORMAT_II_MPEG;
    public static final int FORMAT_II_UNDEFINED;
    public static final int FORMAT_I_ALAW;
    public static final int FORMAT_I_IEEE_FLOAT;
    public static final int FORMAT_I_MULAW;
    public static final int FORMAT_I_PCM;
    public static final int FORMAT_I_PCM8;
    public static final int FORMAT_I_UNDEFINED;
    public static final byte MSI_ELEMENT;
    public static final byte MSI_HEADER;
    public static final byte MSI_IN_JACK;
    public static final byte MSI_OUT_JACK;
    public static final byte MSI_UNDEFINED;
    private static final java.lang.String TAG;
    protected final int mSubclass;
    protected final byte mSubtype;

    public void <init>(int, byte, byte, int)
    {
        com.android.server.usb.descriptors.UsbACInterface r0;
        int i0, i3;
        byte b1, b2, $b4;

        r0 := @this: com.android.server.usb.descriptors.UsbACInterface;

        i0 := @parameter0: int;

        b1 := @parameter1: byte;

        b2 := @parameter2: byte;

        i3 := @parameter3: int;

        specialinvoke r0.<com.android.server.usb.descriptors.UsbDescriptor: void <init>(int,byte)>(i0, b1);

        $b4 = (byte) b2;

        r0.<com.android.server.usb.descriptors.UsbACInterface: byte mSubtype> = $b4;

        r0.<com.android.server.usb.descriptors.UsbACInterface: int mSubclass> = i3;

        return;
    }

    private static com.android.server.usb.descriptors.UsbDescriptor allocAudioControlDescriptor(com.android.server.usb.descriptors.UsbDescriptorParser, com.android.server.usb.descriptors.ByteStream, int, byte, byte, int)
    {
        com.android.server.usb.descriptors.ByteStream r0;
        int i0, i3, i4, $i5, $i6, $i7;
        byte b1, b2;
        com.android.server.usb.descriptors.UsbACFeatureUnit $r1;
        com.android.server.usb.descriptors.UsbACSelectorUnit $r2;
        com.android.server.usb.descriptors.Usb10ACMixerUnit $r3;
        com.android.server.usb.descriptors.Usb20ACMixerUnit $r4;
        com.android.server.usb.descriptors.Usb10ACOutputTerminal $r5;
        com.android.server.usb.descriptors.Usb20ACOutputTerminal $r6;
        com.android.server.usb.descriptors.Usb10ACInputTerminal $r7;
        com.android.server.usb.descriptors.Usb20ACInputTerminal $r8;
        com.android.server.usb.descriptors.Usb10ACHeader $r9;
        com.android.server.usb.descriptors.Usb20ACHeader $r10;
        java.lang.StringBuilder $r11;
        java.lang.String $r13, $r15;
        com.android.server.usb.descriptors.UsbACInterfaceUnparsed $r16;
        com.android.server.usb.descriptors.UsbDescriptorParser r17;

        r17 := @parameter0: com.android.server.usb.descriptors.UsbDescriptorParser;

        r0 := @parameter1: com.android.server.usb.descriptors.ByteStream;

        i0 := @parameter2: int;

        b1 := @parameter3: byte;

        b2 := @parameter4: byte;

        i3 := @parameter5: int;

        tableswitch(b2)
        {
            case 1: goto label10;
            case 2: goto label08;
            case 3: goto label06;
            case 4: goto label04;
            case 5: goto label03;
            case 6: goto label02;
            default: goto label01;
        };

     label01:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown Audio Class Interface subtype:0x");

        $r13 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(b2);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("UsbACInterface", $r15);

        $r16 = new com.android.server.usb.descriptors.UsbACInterfaceUnparsed;

        specialinvoke $r16.<com.android.server.usb.descriptors.UsbACInterfaceUnparsed: void <init>(int,byte,byte,int)>(i0, b1, b2, i3);

        return $r16;

     label02:
        $r1 = new com.android.server.usb.descriptors.UsbACFeatureUnit;

        specialinvoke $r1.<com.android.server.usb.descriptors.UsbACFeatureUnit: void <init>(int,byte,byte,int)>(i0, b1, b2, i3);

        return $r1;

     label03:
        $r2 = new com.android.server.usb.descriptors.UsbACSelectorUnit;

        specialinvoke $r2.<com.android.server.usb.descriptors.UsbACSelectorUnit: void <init>(int,byte,byte,int)>(i0, b1, b2, i3);

        return $r2;

     label04:
        $i5 = virtualinvoke r17.<com.android.server.usb.descriptors.UsbDescriptorParser: int getACInterfaceSpec()>();

        if $i5 != 512 goto label05;

        $r4 = new com.android.server.usb.descriptors.Usb20ACMixerUnit;

        specialinvoke $r4.<com.android.server.usb.descriptors.Usb20ACMixerUnit: void <init>(int,byte,byte,int)>(i0, b1, b2, i3);

        return $r4;

     label05:
        $r3 = new com.android.server.usb.descriptors.Usb10ACMixerUnit;

        specialinvoke $r3.<com.android.server.usb.descriptors.Usb10ACMixerUnit: void <init>(int,byte,byte,int)>(i0, b1, b2, i3);

        return $r3;

     label06:
        $i6 = virtualinvoke r17.<com.android.server.usb.descriptors.UsbDescriptorParser: int getACInterfaceSpec()>();

        if $i6 != 512 goto label07;

        $r6 = new com.android.server.usb.descriptors.Usb20ACOutputTerminal;

        specialinvoke $r6.<com.android.server.usb.descriptors.Usb20ACOutputTerminal: void <init>(int,byte,byte,int)>(i0, b1, b2, i3);

        return $r6;

     label07:
        $r5 = new com.android.server.usb.descriptors.Usb10ACOutputTerminal;

        specialinvoke $r5.<com.android.server.usb.descriptors.Usb10ACOutputTerminal: void <init>(int,byte,byte,int)>(i0, b1, b2, i3);

        return $r5;

     label08:
        $i7 = virtualinvoke r17.<com.android.server.usb.descriptors.UsbDescriptorParser: int getACInterfaceSpec()>();

        if $i7 != 512 goto label09;

        $r8 = new com.android.server.usb.descriptors.Usb20ACInputTerminal;

        specialinvoke $r8.<com.android.server.usb.descriptors.Usb20ACInputTerminal: void <init>(int,byte,byte,int)>(i0, b1, b2, i3);

        return $r8;

     label09:
        $r7 = new com.android.server.usb.descriptors.Usb10ACInputTerminal;

        specialinvoke $r7.<com.android.server.usb.descriptors.Usb10ACInputTerminal: void <init>(int,byte,byte,int)>(i0, b1, b2, i3);

        return $r7;

     label10:
        i4 = virtualinvoke r0.<com.android.server.usb.descriptors.ByteStream: int unpackUsbShort()>();

        virtualinvoke r17.<com.android.server.usb.descriptors.UsbDescriptorParser: void setACInterfaceSpec(int)>(i4);

        if i4 != 512 goto label11;

        $r10 = new com.android.server.usb.descriptors.Usb20ACHeader;

        specialinvoke $r10.<com.android.server.usb.descriptors.Usb20ACHeader: void <init>(int,byte,byte,int,int)>(i0, b1, b2, i3, i4);

        return $r10;

     label11:
        $r9 = new com.android.server.usb.descriptors.Usb10ACHeader;

        specialinvoke $r9.<com.android.server.usb.descriptors.Usb10ACHeader: void <init>(int,byte,byte,int,int)>(i0, b1, b2, i3, i4);

        return $r9;
    }

    private static com.android.server.usb.descriptors.UsbDescriptor allocAudioStreamingDescriptor(com.android.server.usb.descriptors.UsbDescriptorParser, com.android.server.usb.descriptors.ByteStream, int, byte, byte, int)
    {
        com.android.server.usb.descriptors.ByteStream r0;
        int i0, i3, i4;
        byte b1, b2;
        com.android.server.usb.descriptors.Usb10ASGeneral $r1;
        com.android.server.usb.descriptors.Usb20ASGeneral $r2;
        com.android.server.usb.descriptors.UsbDescriptor $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r6, $r8;
        com.android.server.usb.descriptors.UsbDescriptorParser r9;

        r9 := @parameter0: com.android.server.usb.descriptors.UsbDescriptorParser;

        r0 := @parameter1: com.android.server.usb.descriptors.ByteStream;

        i0 := @parameter2: int;

        b1 := @parameter3: byte;

        b2 := @parameter4: byte;

        i3 := @parameter5: int;

        i4 = virtualinvoke r9.<com.android.server.usb.descriptors.UsbDescriptorParser: int getACInterfaceSpec()>();

        if b2 == 1 goto label2;

        if b2 == 2 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown Audio Streaming Interface subtype:0x");

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(b2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("UsbACInterface", $r8);

        return null;

     label1:
        $r3 = staticinvoke <com.android.server.usb.descriptors.UsbASFormat: com.android.server.usb.descriptors.UsbDescriptor allocDescriptor(com.android.server.usb.descriptors.UsbDescriptorParser,com.android.server.usb.descriptors.ByteStream,int,byte,byte,int)>(r9, r0, i0, b1, b2, i3);

        return $r3;

     label2:
        if i4 != 512 goto label3;

        $r2 = new com.android.server.usb.descriptors.Usb20ASGeneral;

        specialinvoke $r2.<com.android.server.usb.descriptors.Usb20ASGeneral: void <init>(int,byte,byte,int)>(i0, b1, b2, i3);

        return $r2;

     label3:
        $r1 = new com.android.server.usb.descriptors.Usb10ASGeneral;

        specialinvoke $r1.<com.android.server.usb.descriptors.Usb10ASGeneral: void <init>(int,byte,byte,int)>(i0, b1, b2, i3);

        return $r1;
    }

    public static com.android.server.usb.descriptors.UsbDescriptor allocDescriptor(com.android.server.usb.descriptors.UsbDescriptorParser, com.android.server.usb.descriptors.ByteStream, int, byte)
    {
        com.android.server.usb.descriptors.ByteStream r0;
        int i0, i3;
        byte b1, b2;
        com.android.server.usb.descriptors.UsbInterfaceDescriptor $r1;
        com.android.server.usb.descriptors.UsbDescriptor $r2, $r3, $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r7, $r9;
        com.android.server.usb.descriptors.UsbDescriptorParser r10;

        r10 := @parameter0: com.android.server.usb.descriptors.UsbDescriptorParser;

        r0 := @parameter1: com.android.server.usb.descriptors.ByteStream;

        i0 := @parameter2: int;

        b1 := @parameter3: byte;

        b2 = virtualinvoke r0.<com.android.server.usb.descriptors.ByteStream: byte getByte()>();

        $r1 = virtualinvoke r10.<com.android.server.usb.descriptors.UsbDescriptorParser: com.android.server.usb.descriptors.UsbInterfaceDescriptor getCurInterface()>();

        i3 = virtualinvoke $r1.<com.android.server.usb.descriptors.UsbInterfaceDescriptor: int getUsbSubclass()>();

        if i3 == 1 goto label3;

        if i3 == 2 goto label2;

        if i3 == 3 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown Audio Class Interface Subclass: 0x");

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i3);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("UsbACInterface", $r9);

        return null;

     label1:
        $r4 = staticinvoke <com.android.server.usb.descriptors.UsbACInterface: com.android.server.usb.descriptors.UsbDescriptor allocMidiStreamingDescriptor(int,byte,byte,int)>(i0, b1, b2, i3);

        return $r4;

     label2:
        $r3 = staticinvoke <com.android.server.usb.descriptors.UsbACInterface: com.android.server.usb.descriptors.UsbDescriptor allocAudioStreamingDescriptor(com.android.server.usb.descriptors.UsbDescriptorParser,com.android.server.usb.descriptors.ByteStream,int,byte,byte,int)>(r10, r0, i0, b1, b2, i3);

        return $r3;

     label3:
        $r2 = staticinvoke <com.android.server.usb.descriptors.UsbACInterface: com.android.server.usb.descriptors.UsbDescriptor allocAudioControlDescriptor(com.android.server.usb.descriptors.UsbDescriptorParser,com.android.server.usb.descriptors.ByteStream,int,byte,byte,int)>(r10, r0, i0, b1, b2, i3);

        return $r2;
    }

    private static com.android.server.usb.descriptors.UsbDescriptor allocMidiStreamingDescriptor(int, byte, byte, int)
    {
        int i0, i3;
        byte b1, b2;
        com.android.server.usb.descriptors.UsbMSMidiHeader $r1;
        com.android.server.usb.descriptors.UsbMSMidiInputJack $r2;
        com.android.server.usb.descriptors.UsbMSMidiOutputJack $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r6, $r8;

        i0 := @parameter0: int;

        b1 := @parameter1: byte;

        b2 := @parameter2: byte;

        i3 := @parameter3: int;

        if b2 == 1 goto label3;

        if b2 == 2 goto label2;

        if b2 == 3 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown MIDI Streaming Interface subtype:0x");

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(b2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("UsbACInterface", $r8);

        return null;

     label1:
        $r3 = new com.android.server.usb.descriptors.UsbMSMidiOutputJack;

        specialinvoke $r3.<com.android.server.usb.descriptors.UsbMSMidiOutputJack: void <init>(int,byte,byte,int)>(i0, b1, b2, i3);

        return $r3;

     label2:
        $r2 = new com.android.server.usb.descriptors.UsbMSMidiInputJack;

        specialinvoke $r2.<com.android.server.usb.descriptors.UsbMSMidiInputJack: void <init>(int,byte,byte,int)>(i0, b1, b2, i3);

        return $r2;

     label3:
        $r1 = new com.android.server.usb.descriptors.UsbMSMidiHeader;

        specialinvoke $r1.<com.android.server.usb.descriptors.UsbMSMidiHeader: void <init>(int,byte,byte,int)>(i0, b1, b2, i3);

        return $r1;
    }

    public int getSubclass()
    {
        com.android.server.usb.descriptors.UsbACInterface r0;
        int $i0;

        r0 := @this: com.android.server.usb.descriptors.UsbACInterface;

        $i0 = r0.<com.android.server.usb.descriptors.UsbACInterface: int mSubclass>;

        return $i0;
    }

    public byte getSubtype()
    {
        com.android.server.usb.descriptors.UsbACInterface r0;
        byte $b0;

        r0 := @this: com.android.server.usb.descriptors.UsbACInterface;

        $b0 = r0.<com.android.server.usb.descriptors.UsbACInterface: byte mSubtype>;

        return $b0;
    }

    public void report(com.android.server.usb.descriptors.report.ReportCanvas)
    {
        com.android.server.usb.descriptors.UsbACInterface r0;
        com.android.server.usb.descriptors.report.ReportCanvas r1;
        int i0;
        byte b1;
        java.lang.String r2, $r6, $r10, $r13, $r17, r18;
        java.lang.StringBuilder $r4, $r11;

        r0 := @this: com.android.server.usb.descriptors.UsbACInterface;

        r1 := @parameter0: com.android.server.usb.descriptors.report.ReportCanvas;

        specialinvoke r0.<com.android.server.usb.descriptors.UsbDescriptor: void report(com.android.server.usb.descriptors.report.ReportCanvas)>(r1);

        i0 = virtualinvoke r0.<com.android.server.usb.descriptors.UsbACInterface: int getSubclass()>();

        r18 = staticinvoke <com.android.server.usb.descriptors.report.UsbStrings: java.lang.String getACInterfaceSubclassName(int)>(i0);

        b1 = virtualinvoke r0.<com.android.server.usb.descriptors.UsbACInterface: byte getSubtype()>();

        r2 = staticinvoke <com.android.server.usb.descriptors.report.UsbStrings: java.lang.String getACControlInterfaceName(byte)>(b1);

        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void openList()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Subclass: ");

        $r6 = staticinvoke <com.android.server.usb.descriptors.report.ReportCanvas: java.lang.String getHexString(int)>(i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void writeListItem(java.lang.String)>($r10);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Subtype: ");

        $r13 = staticinvoke <com.android.server.usb.descriptors.report.ReportCanvas: java.lang.String getHexString(byte)>(b1);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r17 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void writeListItem(java.lang.String)>($r17);

        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void closeList()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.usb.descriptors.UsbACInterface: java.lang.String TAG> = "UsbACInterface";

        <com.android.server.usb.descriptors.UsbACInterface: byte MSI_UNDEFINED> = 0;

        <com.android.server.usb.descriptors.UsbACInterface: byte MSI_OUT_JACK> = 3;

        <com.android.server.usb.descriptors.UsbACInterface: byte MSI_IN_JACK> = 2;

        <com.android.server.usb.descriptors.UsbACInterface: byte MSI_HEADER> = 1;

        <com.android.server.usb.descriptors.UsbACInterface: byte MSI_ELEMENT> = 4;

        <com.android.server.usb.descriptors.UsbACInterface: int FORMAT_I_UNDEFINED> = 0;

        <com.android.server.usb.descriptors.UsbACInterface: int FORMAT_I_PCM8> = 2;

        <com.android.server.usb.descriptors.UsbACInterface: int FORMAT_I_PCM> = 1;

        <com.android.server.usb.descriptors.UsbACInterface: int FORMAT_I_MULAW> = 5;

        <com.android.server.usb.descriptors.UsbACInterface: int FORMAT_I_IEEE_FLOAT> = 3;

        <com.android.server.usb.descriptors.UsbACInterface: int FORMAT_I_ALAW> = 4;

        <com.android.server.usb.descriptors.UsbACInterface: int FORMAT_II_UNDEFINED> = 4096;

        <com.android.server.usb.descriptors.UsbACInterface: int FORMAT_II_MPEG> = 4097;

        <com.android.server.usb.descriptors.UsbACInterface: int FORMAT_II_AC3> = 4098;

        <com.android.server.usb.descriptors.UsbACInterface: int FORMAT_III_UNDEFINED> = 8192;

        <com.android.server.usb.descriptors.UsbACInterface: int FORMAT_III_IEC1937_MPEG2_Layer1LS> = 8197;

        <com.android.server.usb.descriptors.UsbACInterface: int FORMAT_III_IEC1937_MPEG2_EXT> = 8196;

        <com.android.server.usb.descriptors.UsbACInterface: int FORMAT_III_IEC1937_MPEG1_Layer2> = 8195;

        <com.android.server.usb.descriptors.UsbACInterface: int FORMAT_III_IEC1937_MPEG1_Layer1> = 8194;

        <com.android.server.usb.descriptors.UsbACInterface: int FORMAT_III_IEC1937AC3> = 8193;

        <com.android.server.usb.descriptors.UsbACInterface: byte ASI_UNDEFINED> = 0;

        <com.android.server.usb.descriptors.UsbACInterface: byte ASI_GENERAL> = 1;

        <com.android.server.usb.descriptors.UsbACInterface: byte ASI_FORMAT_TYPE> = 2;

        <com.android.server.usb.descriptors.UsbACInterface: byte ASI_FORMAT_SPECIFIC> = 3;

        <com.android.server.usb.descriptors.UsbACInterface: byte ACI_UNDEFINED> = 0;

        <com.android.server.usb.descriptors.UsbACInterface: byte ACI_SELECTOR_UNIT> = 5;

        <com.android.server.usb.descriptors.UsbACInterface: byte ACI_SAMPLE_RATE_CONVERTER> = 13;

        <com.android.server.usb.descriptors.UsbACInterface: byte ACI_PROCESSING_UNIT> = 7;

        <com.android.server.usb.descriptors.UsbACInterface: byte ACI_OUTPUT_TERMINAL> = 3;

        <com.android.server.usb.descriptors.UsbACInterface: byte ACI_MIXER_UNIT> = 4;

        <com.android.server.usb.descriptors.UsbACInterface: byte ACI_INPUT_TERMINAL> = 2;

        <com.android.server.usb.descriptors.UsbACInterface: byte ACI_HEADER> = 1;

        <com.android.server.usb.descriptors.UsbACInterface: byte ACI_FEATURE_UNIT> = 6;

        <com.android.server.usb.descriptors.UsbACInterface: byte ACI_EXTENSION_UNIT> = 8;

        <com.android.server.usb.descriptors.UsbACInterface: byte ACI_CLOCK_SOURCE> = 10;

        <com.android.server.usb.descriptors.UsbACInterface: byte ACI_CLOCK_SELECTOR> = 11;

        <com.android.server.usb.descriptors.UsbACInterface: byte ACI_CLOCK_MULTIPLIER> = 12;

        return;
    }
}
