public abstract class com.android.server.usb.descriptors.UsbACTerminal extends com.android.server.usb.descriptors.UsbACInterface
{
    private static final java.lang.String TAG;
    protected byte mAssocTerminal;
    protected byte mTerminalID;
    protected int mTerminalType;

    public void <init>(int, byte, byte, int)
    {
        com.android.server.usb.descriptors.UsbACTerminal r0;
        int i0, i3;
        byte b1, b2;

        r0 := @this: com.android.server.usb.descriptors.UsbACTerminal;

        i0 := @parameter0: int;

        b1 := @parameter1: byte;

        b2 := @parameter2: byte;

        i3 := @parameter3: int;

        specialinvoke r0.<com.android.server.usb.descriptors.UsbACInterface: void <init>(int,byte,byte,int)>(i0, b1, b2, i3);

        return;
    }

    public byte getAssocTerminal()
    {
        com.android.server.usb.descriptors.UsbACTerminal r0;
        byte $b0;

        r0 := @this: com.android.server.usb.descriptors.UsbACTerminal;

        $b0 = r0.<com.android.server.usb.descriptors.UsbACTerminal: byte mAssocTerminal>;

        return $b0;
    }

    public byte getTerminalID()
    {
        com.android.server.usb.descriptors.UsbACTerminal r0;
        byte $b0;

        r0 := @this: com.android.server.usb.descriptors.UsbACTerminal;

        $b0 = r0.<com.android.server.usb.descriptors.UsbACTerminal: byte mTerminalID>;

        return $b0;
    }

    public int getTerminalType()
    {
        com.android.server.usb.descriptors.UsbACTerminal r0;
        int $i0;

        r0 := @this: com.android.server.usb.descriptors.UsbACTerminal;

        $i0 = r0.<com.android.server.usb.descriptors.UsbACTerminal: int mTerminalType>;

        return $i0;
    }

    public int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)
    {
        com.android.server.usb.descriptors.UsbACTerminal r0;
        com.android.server.usb.descriptors.ByteStream r1;
        byte $b0, $b2;
        int $i1, $i3;

        r0 := @this: com.android.server.usb.descriptors.UsbACTerminal;

        r1 := @parameter0: com.android.server.usb.descriptors.ByteStream;

        $b0 = virtualinvoke r1.<com.android.server.usb.descriptors.ByteStream: byte getByte()>();

        r0.<com.android.server.usb.descriptors.UsbACTerminal: byte mTerminalID> = $b0;

        $i1 = virtualinvoke r1.<com.android.server.usb.descriptors.ByteStream: int unpackUsbShort()>();

        r0.<com.android.server.usb.descriptors.UsbACTerminal: int mTerminalType> = $i1;

        $b2 = virtualinvoke r1.<com.android.server.usb.descriptors.ByteStream: byte getByte()>();

        r0.<com.android.server.usb.descriptors.UsbACTerminal: byte mAssocTerminal> = $b2;

        $i3 = r0.<com.android.server.usb.descriptors.UsbACTerminal: int mLength>;

        return $i3;
    }

    public void report(com.android.server.usb.descriptors.report.ReportCanvas)
    {
        com.android.server.usb.descriptors.UsbACTerminal r0;
        com.android.server.usb.descriptors.report.ReportCanvas r1;
        int i0;
        java.lang.StringBuilder $r2, $r10;
        java.lang.String $r4, $r7, $r9, $r12, $r14;
        byte $b1;

        r0 := @this: com.android.server.usb.descriptors.UsbACTerminal;

        r1 := @parameter0: com.android.server.usb.descriptors.report.ReportCanvas;

        specialinvoke r0.<com.android.server.usb.descriptors.UsbACInterface: void report(com.android.server.usb.descriptors.report.ReportCanvas)>(r1);

        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void openList()>();

        i0 = virtualinvoke r0.<com.android.server.usb.descriptors.UsbACTerminal: int getTerminalType()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Type: ");

        $r4 = staticinvoke <com.android.server.usb.descriptors.report.ReportCanvas: java.lang.String getHexString(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r7 = staticinvoke <com.android.server.usb.descriptors.report.UsbStrings: java.lang.String getTerminalName(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void writeListItem(java.lang.String)>($r9);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ID: ");

        $b1 = virtualinvoke r0.<com.android.server.usb.descriptors.UsbACTerminal: byte getTerminalID()>();

        $r12 = staticinvoke <com.android.server.usb.descriptors.report.ReportCanvas: java.lang.String getHexString(byte)>($b1);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void writeListItem(java.lang.String)>($r14);

        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void closeList()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.usb.descriptors.UsbACTerminal: java.lang.String TAG> = "UsbACTerminal";

        return;
    }
}
