public final class com.android.server.usb.descriptors.UsbBinaryParser extends java.lang.Object
{
    private static final boolean LOGGING;
    private static final java.lang.String TAG;

    public void <init>()
    {
        com.android.server.usb.descriptors.UsbBinaryParser r0;

        r0 := @this: com.android.server.usb.descriptors.UsbBinaryParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private void dumpDescriptor(com.android.server.usb.descriptors.ByteStream, int, byte, java.lang.StringBuilder)
    {
        com.android.server.usb.descriptors.UsbBinaryParser r0;
        com.android.server.usb.descriptors.ByteStream r1;
        int i0, i4;
        byte b1, $b2;
        java.lang.StringBuilder r2, $r4, $r17;
        java.lang.String $r8, $r11, $r14, $r19, $r22;
        short $s3;

        r0 := @this: com.android.server.usb.descriptors.UsbBinaryParser;

        r1 := @parameter0: com.android.server.usb.descriptors.ByteStream;

        i0 := @parameter1: int;

        b1 := @parameter2: byte;

        r2 := @parameter3: java.lang.StringBuilder;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<p>");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<b> l: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" t:0x");

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(b1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r11 = staticinvoke <com.android.server.usb.descriptors.report.UsbStrings: java.lang.String getDescriptorName(byte)>(b1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</b><br>");

        $r14 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        i4 = 2;

     label1:
        if i4 >= i0 goto label2;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");

        $b2 = virtualinvoke r1.<com.android.server.usb.descriptors.ByteStream: byte getByte()>();

        $s3 = $b2 & 255;

        $r19 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s3);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r22 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        i4 = i4 + 1;

        goto label1;

     label2:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</p>");

        return;
    }

    public void parseDescriptors(android.hardware.usb.UsbDeviceConnection, byte[], java.lang.StringBuilder)
    {
        com.android.server.usb.descriptors.UsbBinaryParser r0;
        byte[] r1;
        java.lang.StringBuilder r2;
        com.android.server.usb.descriptors.ByteStream $r4;
        int $i0;
        byte $b1, $b3;
        short $s2;
        android.hardware.usb.UsbDeviceConnection r6;

        r0 := @this: com.android.server.usb.descriptors.UsbBinaryParser;

        r6 := @parameter0: android.hardware.usb.UsbDeviceConnection;

        r1 := @parameter1: byte[];

        r2 := @parameter2: java.lang.StringBuilder;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<tt>");

        $r4 = new com.android.server.usb.descriptors.ByteStream;

        specialinvoke $r4.<com.android.server.usb.descriptors.ByteStream: void <init>(byte[])>(r1);

     label1:
        $i0 = virtualinvoke $r4.<com.android.server.usb.descriptors.ByteStream: int available()>();

        if $i0 <= 0 goto label2;

        $b1 = virtualinvoke $r4.<com.android.server.usb.descriptors.ByteStream: byte getByte()>();

        $s2 = $b1 & 255;

        $b3 = virtualinvoke $r4.<com.android.server.usb.descriptors.ByteStream: byte getByte()>();

        specialinvoke r0.<com.android.server.usb.descriptors.UsbBinaryParser: void dumpDescriptor(com.android.server.usb.descriptors.ByteStream,int,byte,java.lang.StringBuilder)>($r4, $s2, $b3, r2);

        goto label1;

     label2:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</tt>");

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.usb.descriptors.UsbBinaryParser: java.lang.String TAG> = "UsbBinaryParser";

        <com.android.server.usb.descriptors.UsbBinaryParser: boolean LOGGING> = 0;

        return;
    }
}
