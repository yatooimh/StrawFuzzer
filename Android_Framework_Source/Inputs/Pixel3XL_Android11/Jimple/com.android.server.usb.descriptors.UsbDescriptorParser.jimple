public final class com.android.server.usb.descriptors.UsbDescriptorParser extends java.lang.Object
{
    public static final boolean DEBUG;
    private static final int DESCRIPTORS_ALLOC_SIZE;
    private static final float IN_HEADSET_TRIGGER;
    private static final float OUT_HEADSET_TRIGGER;
    private static final java.lang.String TAG;
    private int mACInterfacesSpec;
    private com.android.server.usb.descriptors.UsbConfigDescriptor mCurConfigDescriptor;
    private com.android.server.usb.descriptors.UsbInterfaceDescriptor mCurInterfaceDescriptor;
    private final java.util.ArrayList mDescriptors;
    private final java.lang.String mDeviceAddr;
    private com.android.server.usb.descriptors.UsbDeviceDescriptor mDeviceDescriptor;
    private int mVCInterfacesSpec;

    public void <init>(java.lang.String, java.util.ArrayList)
    {
        com.android.server.usb.descriptors.UsbDescriptorParser r0;
        java.lang.String r1;
        java.util.ArrayList r2;
        java.lang.Object $r3;
        com.android.server.usb.descriptors.UsbDeviceDescriptor $r4;

        r0 := @this: com.android.server.usb.descriptors.UsbDescriptorParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.ArrayList;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.usb.descriptors.UsbDescriptorParser: int mACInterfacesSpec> = 256;

        r0.<com.android.server.usb.descriptors.UsbDescriptorParser: int mVCInterfacesSpec> = 256;

        r0.<com.android.server.usb.descriptors.UsbDescriptorParser: java.lang.String mDeviceAddr> = r1;

        r0.<com.android.server.usb.descriptors.UsbDescriptorParser: java.util.ArrayList mDescriptors> = r2;

        $r3 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r4 = (com.android.server.usb.descriptors.UsbDeviceDescriptor) $r3;

        r0.<com.android.server.usb.descriptors.UsbDescriptorParser: com.android.server.usb.descriptors.UsbDeviceDescriptor mDeviceDescriptor> = $r4;

        return;
    }

    public void <init>(java.lang.String, byte[])
    {
        com.android.server.usb.descriptors.UsbDescriptorParser r0;
        java.lang.String r1;
        byte[] r2;
        java.util.ArrayList $r3;

        r0 := @this: com.android.server.usb.descriptors.UsbDescriptorParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.usb.descriptors.UsbDescriptorParser: int mACInterfacesSpec> = 256;

        r0.<com.android.server.usb.descriptors.UsbDescriptorParser: int mVCInterfacesSpec> = 256;

        r0.<com.android.server.usb.descriptors.UsbDescriptorParser: java.lang.String mDeviceAddr> = r1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(128);

        r0.<com.android.server.usb.descriptors.UsbDescriptorParser: java.util.ArrayList mDescriptors> = $r3;

        virtualinvoke r0.<com.android.server.usb.descriptors.UsbDescriptorParser: void parseDescriptors(byte[])>(r2);

        return;
    }

    private com.android.server.usb.descriptors.UsbDescriptor allocDescriptor(com.android.server.usb.descriptors.ByteStream) throws com.android.server.usb.descriptors.UsbDescriptorParser$UsbDescriptorsStreamFormatException
    {
        com.android.server.usb.descriptors.UsbDescriptorParser r0;
        int i0, i4, i5;
        byte b1, $b2, $b3;
        com.android.server.usb.descriptors.UsbInterfaceDescriptor r1, r20, r21, r32;
        com.android.server.usb.descriptors.UsbEndpointDescriptor $r10, r30;
        java.lang.Byte $r13;
        java.lang.String $r15, $r16;
        com.android.server.usb.descriptors.ByteStream r17;
        com.android.server.usb.descriptors.UsbDescriptor r18, r26;
        com.android.server.usb.descriptors.UsbConfigDescriptor r23, r34;
        com.android.server.usb.descriptors.UsbDeviceDescriptor r25, r36, r38;
        java.lang.StringBuilder r27;
        com.android.server.usb.descriptors.UsbHIDDescriptor r28;
        com.android.server.usb.descriptors.UsbInterfaceAssoc r29;
        com.android.server.usb.descriptors.UsbDescriptorParser$UsbDescriptorsStreamFormatException r31, r33, r35;
        com.android.server.usb.descriptors.UsbUnknown r37;

        r0 := @this: com.android.server.usb.descriptors.UsbDescriptorParser;

        r17 := @parameter0: com.android.server.usb.descriptors.ByteStream;

        virtualinvoke r17.<com.android.server.usb.descriptors.ByteStream: void resetReadCount()>();

        i0 = virtualinvoke r17.<com.android.server.usb.descriptors.ByteStream: int getUnsignedByte()>();

        b1 = virtualinvoke r17.<com.android.server.usb.descriptors.ByteStream: byte getByte()>();

        staticinvoke <com.android.server.usb.descriptors.UsbDescriptor: void logDescriptorName(byte,int)>(b1, i0);

        if b1 == 1 goto label18;

        if b1 == 2 goto label16;

        if b1 == 4 goto label14;

        if b1 == 5 goto label12;

        if b1 == 11 goto label11;

        if b1 == 33 goto label10;

        if b1 == 36 goto label06;

        if b1 == 37 goto label01;

        r18 = null;

        goto label19;

     label01:
        r1 = r0.<com.android.server.usb.descriptors.UsbDescriptorParser: com.android.server.usb.descriptors.UsbInterfaceDescriptor mCurInterfaceDescriptor>;

        r18 = null;

        if r1 == null goto label19;

        i4 = virtualinvoke r1.<com.android.server.usb.descriptors.UsbInterfaceDescriptor: int getUsbClass()>();

        if i4 == 1 goto label04;

        if i4 == 14 goto label03;

        if i4 == 16 goto label02;

        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Unparsed Class-specific Endpoint:0x");

        $r15 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i4);

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r16 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("UsbDescriptorParser", $r16);

        r18 = null;

        goto label05;

     label02:
        r18 = null;

        goto label05;

     label03:
        $b2 = virtualinvoke r17.<com.android.server.usb.descriptors.ByteStream: byte getByte()>();

        $r13 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $b3 = virtualinvoke $r13.<java.lang.Byte: byte byteValue()>();

        r18 = staticinvoke <com.android.server.usb.descriptors.UsbVCEndpoint: com.android.server.usb.descriptors.UsbDescriptor allocDescriptor(com.android.server.usb.descriptors.UsbDescriptorParser,int,byte,byte)>(r0, i0, b1, $b3);

        goto label05;

     label04:
        r18 = staticinvoke <com.android.server.usb.descriptors.UsbACEndpoint: com.android.server.usb.descriptors.UsbDescriptor allocDescriptor(com.android.server.usb.descriptors.UsbDescriptorParser,int,byte)>(r0, i0, b1);

     label05:
        goto label19;

     label06:
        r20 = r0.<com.android.server.usb.descriptors.UsbDescriptorParser: com.android.server.usb.descriptors.UsbInterfaceDescriptor mCurInterfaceDescriptor>;

        r18 = null;

        if r20 == null goto label19;

        i5 = virtualinvoke r20.<com.android.server.usb.descriptors.UsbInterfaceDescriptor: int getUsbClass()>();

        if i5 == 1 goto label09;

        if i5 == 14 goto label08;

        if i5 == 16 goto label07;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("UsbDescriptorParser", "  Unparsed Class-specific");

        r18 = null;

        goto label19;

     label07:
        r18 = null;

        goto label19;

     label08:
        r18 = staticinvoke <com.android.server.usb.descriptors.UsbVCInterface: com.android.server.usb.descriptors.UsbDescriptor allocDescriptor(com.android.server.usb.descriptors.UsbDescriptorParser,com.android.server.usb.descriptors.ByteStream,int,byte)>(r0, r17, i0, b1);

        goto label19;

     label09:
        r18 = staticinvoke <com.android.server.usb.descriptors.UsbACInterface: com.android.server.usb.descriptors.UsbDescriptor allocDescriptor(com.android.server.usb.descriptors.UsbDescriptorParser,com.android.server.usb.descriptors.ByteStream,int,byte)>(r0, r17, i0, b1);

        goto label19;

     label10:
        r28 = new com.android.server.usb.descriptors.UsbHIDDescriptor;

        specialinvoke r28.<com.android.server.usb.descriptors.UsbHIDDescriptor: void <init>(int,byte)>(i0, b1);

        r18 = r28;

        goto label19;

     label11:
        r29 = new com.android.server.usb.descriptors.UsbInterfaceAssoc;

        specialinvoke r29.<com.android.server.usb.descriptors.UsbInterfaceAssoc: void <init>(int,byte)>(i0, b1);

        r18 = r29;

        goto label19;

     label12:
        r30 = new com.android.server.usb.descriptors.UsbEndpointDescriptor;

        specialinvoke r30.<com.android.server.usb.descriptors.UsbEndpointDescriptor: void <init>(int,byte)>(i0, b1);

        r18 = r30;

        r21 = r0.<com.android.server.usb.descriptors.UsbDescriptorParser: com.android.server.usb.descriptors.UsbInterfaceDescriptor mCurInterfaceDescriptor>;

        if r21 == null goto label13;

        $r10 = (com.android.server.usb.descriptors.UsbEndpointDescriptor) r30;

        virtualinvoke r21.<com.android.server.usb.descriptors.UsbInterfaceDescriptor: void addEndpointDescriptor(com.android.server.usb.descriptors.UsbEndpointDescriptor)>($r10);

        goto label19;

     label13:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("UsbDescriptorParser", "Endpoint Descriptor found with no associated Interface Descriptor!");

        r31 = new com.android.server.usb.descriptors.UsbDescriptorParser$UsbDescriptorsStreamFormatException;

        specialinvoke r31.<com.android.server.usb.descriptors.UsbDescriptorParser$UsbDescriptorsStreamFormatException: void <init>(com.android.server.usb.descriptors.UsbDescriptorParser,java.lang.String)>(r0, "Endpoint Descriptor found with no associated Interface Descriptor!");

        throw r31;

     label14:
        r32 = new com.android.server.usb.descriptors.UsbInterfaceDescriptor;

        specialinvoke r32.<com.android.server.usb.descriptors.UsbInterfaceDescriptor: void <init>(int,byte)>(i0, b1);

        r0.<com.android.server.usb.descriptors.UsbDescriptorParser: com.android.server.usb.descriptors.UsbInterfaceDescriptor mCurInterfaceDescriptor> = r32;

        r18 = r32;

        r23 = r0.<com.android.server.usb.descriptors.UsbDescriptorParser: com.android.server.usb.descriptors.UsbConfigDescriptor mCurConfigDescriptor>;

        if r23 == null goto label15;

        virtualinvoke r23.<com.android.server.usb.descriptors.UsbConfigDescriptor: void addInterfaceDescriptor(com.android.server.usb.descriptors.UsbInterfaceDescriptor)>(r32);

        goto label19;

     label15:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("UsbDescriptorParser", "Interface Descriptor found with no associated Config Descriptor!");

        r33 = new com.android.server.usb.descriptors.UsbDescriptorParser$UsbDescriptorsStreamFormatException;

        specialinvoke r33.<com.android.server.usb.descriptors.UsbDescriptorParser$UsbDescriptorsStreamFormatException: void <init>(com.android.server.usb.descriptors.UsbDescriptorParser,java.lang.String)>(r0, "Interface Descriptor found with no associated Config Descriptor!");

        throw r33;

     label16:
        r34 = new com.android.server.usb.descriptors.UsbConfigDescriptor;

        specialinvoke r34.<com.android.server.usb.descriptors.UsbConfigDescriptor: void <init>(int,byte)>(i0, b1);

        r0.<com.android.server.usb.descriptors.UsbDescriptorParser: com.android.server.usb.descriptors.UsbConfigDescriptor mCurConfigDescriptor> = r34;

        r18 = r34;

        r25 = r0.<com.android.server.usb.descriptors.UsbDescriptorParser: com.android.server.usb.descriptors.UsbDeviceDescriptor mDeviceDescriptor>;

        if r25 == null goto label17;

        virtualinvoke r25.<com.android.server.usb.descriptors.UsbDeviceDescriptor: void addConfigDescriptor(com.android.server.usb.descriptors.UsbConfigDescriptor)>(r34);

        goto label19;

     label17:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("UsbDescriptorParser", "Config Descriptor found with no associated Device Descriptor!");

        r35 = new com.android.server.usb.descriptors.UsbDescriptorParser$UsbDescriptorsStreamFormatException;

        specialinvoke r35.<com.android.server.usb.descriptors.UsbDescriptorParser$UsbDescriptorsStreamFormatException: void <init>(com.android.server.usb.descriptors.UsbDescriptorParser,java.lang.String)>(r0, "Config Descriptor found with no associated Device Descriptor!");

        throw r35;

     label18:
        r36 = new com.android.server.usb.descriptors.UsbDeviceDescriptor;

        specialinvoke r36.<com.android.server.usb.descriptors.UsbDeviceDescriptor: void <init>(int,byte)>(i0, b1);

        r18 = r36;

        r38 = (com.android.server.usb.descriptors.UsbDeviceDescriptor) r36;

        r0.<com.android.server.usb.descriptors.UsbDescriptorParser: com.android.server.usb.descriptors.UsbDeviceDescriptor mDeviceDescriptor> = r38;

     label19:
        r26 = r18;

        if r18 != null goto label20;

        r37 = new com.android.server.usb.descriptors.UsbUnknown;

        specialinvoke r37.<com.android.server.usb.descriptors.UsbUnknown: void <init>(int,byte)>(i0, b1);

        r26 = r37;

     label20:
        return r26;
    }

    private native java.lang.String getDescriptorString_native(java.lang.String, int);

    private native byte[] getRawDescriptors_native(java.lang.String);

    public java.util.ArrayList getACInterfaceDescriptors(byte, int)
    {
        com.android.server.usb.descriptors.UsbDescriptorParser r0;
        byte b0, $b2, $b4, $b6;
        int i1, $i3, $i7;
        java.util.Iterator r2;
        com.android.server.usb.descriptors.UsbDescriptor r3;
        java.util.ArrayList $r4, $r5;
        boolean $z0, $z1;
        java.lang.Object $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r11, $r13;
        com.android.server.usb.descriptors.UsbACInterface r14;

        r0 := @this: com.android.server.usb.descriptors.UsbDescriptorParser;

        b0 := @parameter0: byte;

        i1 := @parameter1: int;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = r0.<com.android.server.usb.descriptors.UsbDescriptorParser: java.util.ArrayList mDescriptors>;

        r2 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.usb.descriptors.UsbDescriptor) $r6;

        $b2 = virtualinvoke r3.<com.android.server.usb.descriptors.UsbDescriptor: byte getType()>();

        if $b2 != 36 goto label4;

        $z1 = r3 instanceof com.android.server.usb.descriptors.UsbACInterface;

        if $z1 == 0 goto label3;

        r14 = (com.android.server.usb.descriptors.UsbACInterface) r3;

        $b6 = virtualinvoke r14.<com.android.server.usb.descriptors.UsbACInterface: byte getSubtype()>();

        if $b6 != b0 goto label2;

        $i7 = virtualinvoke r14.<com.android.server.usb.descriptors.UsbACInterface: int getSubclass()>();

        if $i7 != i1 goto label2;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label2:
        goto label4;

     label3:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized Audio Interface len: ");

        $i3 = virtualinvoke r3.<com.android.server.usb.descriptors.UsbDescriptor: int getLength()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type:0x");

        $b4 = virtualinvoke r3.<com.android.server.usb.descriptors.UsbDescriptor: byte getType()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($b4);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("UsbDescriptorParser", $r13);

     label4:
        goto label1;

     label5:
        return $r4;
    }

    public int getACInterfaceSpec()
    {
        com.android.server.usb.descriptors.UsbDescriptorParser r0;
        int $i0;

        r0 := @this: com.android.server.usb.descriptors.UsbDescriptorParser;

        $i0 = r0.<com.android.server.usb.descriptors.UsbDescriptorParser: int mACInterfacesSpec>;

        return $i0;
    }

    public com.android.server.usb.descriptors.UsbInterfaceDescriptor getCurInterface()
    {
        com.android.server.usb.descriptors.UsbDescriptorParser r0;
        com.android.server.usb.descriptors.UsbInterfaceDescriptor $r1;

        r0 := @this: com.android.server.usb.descriptors.UsbDescriptorParser;

        $r1 = r0.<com.android.server.usb.descriptors.UsbDescriptorParser: com.android.server.usb.descriptors.UsbInterfaceDescriptor mCurInterfaceDescriptor>;

        return $r1;
    }

    public java.lang.String getDescriptorString(int)
    {
        com.android.server.usb.descriptors.UsbDescriptorParser r0;
        int i0;
        java.lang.String $r1, $r2;

        r0 := @this: com.android.server.usb.descriptors.UsbDescriptorParser;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.usb.descriptors.UsbDescriptorParser: java.lang.String mDeviceAddr>;

        $r2 = specialinvoke r0.<com.android.server.usb.descriptors.UsbDescriptorParser: java.lang.String getDescriptorString_native(java.lang.String,int)>($r1, i0);

        return $r2;
    }

    public java.util.ArrayList getDescriptors()
    {
        com.android.server.usb.descriptors.UsbDescriptorParser r0;
        java.util.ArrayList $r1;

        r0 := @this: com.android.server.usb.descriptors.UsbDescriptorParser;

        $r1 = r0.<com.android.server.usb.descriptors.UsbDescriptorParser: java.util.ArrayList mDescriptors>;

        return $r1;
    }

    public java.util.ArrayList getDescriptors(byte)
    {
        com.android.server.usb.descriptors.UsbDescriptorParser r0;
        byte b0, $b1;
        java.util.Iterator r2;
        com.android.server.usb.descriptors.UsbDescriptor r3;
        java.util.ArrayList $r4, $r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: com.android.server.usb.descriptors.UsbDescriptorParser;

        b0 := @parameter0: byte;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = r0.<com.android.server.usb.descriptors.UsbDescriptorParser: java.util.ArrayList mDescriptors>;

        r2 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.usb.descriptors.UsbDescriptor) $r6;

        $b1 = virtualinvoke r3.<com.android.server.usb.descriptors.UsbDescriptor: byte getType()>();

        if $b1 != b0 goto label2;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label2:
        goto label1;

     label3:
        return $r4;
    }

    public java.lang.String getDeviceAddr()
    {
        com.android.server.usb.descriptors.UsbDescriptorParser r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.usb.descriptors.UsbDescriptorParser;

        $r1 = r0.<com.android.server.usb.descriptors.UsbDescriptorParser: java.lang.String mDeviceAddr>;

        return $r1;
    }

    public com.android.server.usb.descriptors.UsbDeviceDescriptor getDeviceDescriptor()
    {
        com.android.server.usb.descriptors.UsbDescriptorParser r0;
        com.android.server.usb.descriptors.UsbDeviceDescriptor $r1;

        r0 := @this: com.android.server.usb.descriptors.UsbDescriptorParser;

        $r1 = r0.<com.android.server.usb.descriptors.UsbDescriptorParser: com.android.server.usb.descriptors.UsbDeviceDescriptor mDeviceDescriptor>;

        return $r1;
    }

    public float getInputHeadsetProbability()
    {
        com.android.server.usb.descriptors.UsbDescriptorParser r0;
        boolean z0, z1, $z2, $z3;
        float f1, f2;

        r0 := @this: com.android.server.usb.descriptors.UsbDescriptorParser;

        $z2 = virtualinvoke r0.<com.android.server.usb.descriptors.UsbDescriptorParser: boolean hasMIDIInterface()>();

        if $z2 == 0 goto label1;

        return 0.0F;

     label1:
        z0 = virtualinvoke r0.<com.android.server.usb.descriptors.UsbDescriptorParser: boolean hasMic()>();

        z1 = virtualinvoke r0.<com.android.server.usb.descriptors.UsbDescriptorParser: boolean hasSpeaker()>();

        f1 = 0.0F;

        if z0 == 0 goto label2;

        f1 = 0.0F;

        if z1 == 0 goto label2;

        f1 = 0.0F + 0.75F;

     label2:
        f2 = f1;

        if z0 == 0 goto label3;

        f2 = f1;

        $z3 = virtualinvoke r0.<com.android.server.usb.descriptors.UsbDescriptorParser: boolean hasHIDInterface()>();

        if $z3 == 0 goto label3;

        f2 = f1 + 0.25F;

     label3:
        return f2;
    }

    public java.util.ArrayList getInterfaceDescriptorsForClass(int)
    {
        com.android.server.usb.descriptors.UsbDescriptorParser r0;
        int i0, $i2, $i5;
        java.util.Iterator r2;
        com.android.server.usb.descriptors.UsbDescriptor r3;
        java.util.ArrayList $r5, $r6;
        boolean $z0, $z1;
        java.lang.Object $r7;
        byte $b1, $b3;
        java.lang.StringBuilder $r8;
        java.lang.String $r12, $r14;
        com.android.server.usb.descriptors.UsbInterfaceDescriptor $r15;

        r0 := @this: com.android.server.usb.descriptors.UsbDescriptorParser;

        i0 := @parameter0: int;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r6 = r0.<com.android.server.usb.descriptors.UsbDescriptorParser: java.util.ArrayList mDescriptors>;

        r2 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.usb.descriptors.UsbDescriptor) $r7;

        $b1 = virtualinvoke r3.<com.android.server.usb.descriptors.UsbDescriptor: byte getType()>();

        if $b1 != 4 goto label4;

        $z1 = r3 instanceof com.android.server.usb.descriptors.UsbInterfaceDescriptor;

        if $z1 == 0 goto label3;

        $r15 = (com.android.server.usb.descriptors.UsbInterfaceDescriptor) r3;

        $i5 = virtualinvoke $r15.<com.android.server.usb.descriptors.UsbInterfaceDescriptor: int getUsbClass()>();

        if $i5 != i0 goto label2;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label2:
        goto label4;

     label3:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized Interface l: ");

        $i2 = virtualinvoke r3.<com.android.server.usb.descriptors.UsbDescriptor: int getLength()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" t:0x");

        $b3 = virtualinvoke r3.<com.android.server.usb.descriptors.UsbDescriptor: byte getType()>();

        $r12 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($b3);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("UsbDescriptorParser", $r14);

     label4:
        goto label1;

     label5:
        return $r5;
    }

    public float getOutputHeadsetProbability()
    {
        com.android.server.usb.descriptors.UsbDescriptorParser r0;
        java.util.Iterator r1;
        boolean $z1, $z2, $z3, $z4, z5;
        java.util.ArrayList $r3;
        java.lang.Object $r4;
        java.lang.StringBuilder $r5;
        int $i0, $i3, $i4, $i5;
        byte $b1;
        java.lang.String $r9, $r11;
        float f0, f1;
        com.android.server.usb.descriptors.UsbDescriptor r12;
        com.android.server.usb.descriptors.UsbACTerminal r13;

        r0 := @this: com.android.server.usb.descriptors.UsbDescriptorParser;

        $z1 = virtualinvoke r0.<com.android.server.usb.descriptors.UsbDescriptorParser: boolean hasMIDIInterface()>();

        if $z1 == 0 goto label1;

        return 0.0F;

     label1:
        f0 = 0.0F;

        $r3 = virtualinvoke r0.<com.android.server.usb.descriptors.UsbDescriptorParser: java.util.ArrayList getACInterfaceDescriptors(byte,int)>(3, 1);

        r1 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        z5 = 0;

        $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r12 = (com.android.server.usb.descriptors.UsbDescriptor) $r4;

        $z4 = r12 instanceof com.android.server.usb.descriptors.UsbACTerminal;

        if $z4 == 0 goto label5;

        r13 = (com.android.server.usb.descriptors.UsbACTerminal) r12;

        $i3 = virtualinvoke r13.<com.android.server.usb.descriptors.UsbACTerminal: int getTerminalType()>();

        if $i3 == 769 goto label4;

        $i4 = virtualinvoke r13.<com.android.server.usb.descriptors.UsbACTerminal: int getTerminalType()>();

        if $i4 == 770 goto label4;

        $i5 = virtualinvoke r13.<com.android.server.usb.descriptors.UsbACTerminal: int getTerminalType()>();

        if $i5 != 1026 goto label3;

        goto label4;

     label3:
        goto label6;

     label4:
        z5 = 1;

        goto label7;

     label5:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Undefined Audio Output terminal l: ");

        $i0 = virtualinvoke r12.<com.android.server.usb.descriptors.UsbDescriptor: int getLength()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" t:0x");

        $b1 = virtualinvoke r12.<com.android.server.usb.descriptors.UsbDescriptor: byte getType()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($b1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("UsbDescriptorParser", $r11);

     label6:
        goto label2;

     label7:
        if z5 == 0 goto label8;

        f0 = 0.0F + 0.75F;

     label8:
        f1 = f0;

        if z5 == 0 goto label9;

        f1 = f0;

        $z3 = virtualinvoke r0.<com.android.server.usb.descriptors.UsbDescriptorParser: boolean hasHIDInterface()>();

        if $z3 == 0 goto label9;

        f1 = f0 + 0.25F;

     label9:
        return f1;
    }

    public int getParsingSpec()
    {
        com.android.server.usb.descriptors.UsbDescriptorParser r0;
        com.android.server.usb.descriptors.UsbDeviceDescriptor r1;
        int i0;

        r0 := @this: com.android.server.usb.descriptors.UsbDescriptorParser;

        r1 = r0.<com.android.server.usb.descriptors.UsbDescriptorParser: com.android.server.usb.descriptors.UsbDeviceDescriptor mDeviceDescriptor>;

        if r1 == null goto label1;

        i0 = virtualinvoke r1.<com.android.server.usb.descriptors.UsbDeviceDescriptor: int getSpec()>();

        goto label2;

     label1:
        i0 = 0;

     label2:
        return i0;
    }

    public byte[] getRawDescriptors()
    {
        com.android.server.usb.descriptors.UsbDescriptorParser r0;
        java.lang.String $r1;
        byte[] $r2;

        r0 := @this: com.android.server.usb.descriptors.UsbDescriptorParser;

        $r1 = r0.<com.android.server.usb.descriptors.UsbDescriptorParser: java.lang.String mDeviceAddr>;

        $r2 = specialinvoke r0.<com.android.server.usb.descriptors.UsbDescriptorParser: byte[] getRawDescriptors_native(java.lang.String)>($r1);

        return $r2;
    }

    public int getUsbSpec()
    {
        com.android.server.usb.descriptors.UsbDescriptorParser r0;
        com.android.server.usb.descriptors.UsbDeviceDescriptor r1;
        java.lang.IllegalArgumentException $r2;
        int $i0;

        r0 := @this: com.android.server.usb.descriptors.UsbDescriptorParser;

        r1 = r0.<com.android.server.usb.descriptors.UsbDescriptorParser: com.android.server.usb.descriptors.UsbDeviceDescriptor mDeviceDescriptor>;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<com.android.server.usb.descriptors.UsbDeviceDescriptor: int getSpec()>();

        return $i0;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;
    }

    public int getVCInterfaceSpec()
    {
        com.android.server.usb.descriptors.UsbDescriptorParser r0;
        int $i0;

        r0 := @this: com.android.server.usb.descriptors.UsbDescriptorParser;

        $i0 = r0.<com.android.server.usb.descriptors.UsbDescriptorParser: int mVCInterfacesSpec>;

        return $i0;
    }

    public boolean hasAudioCapture()
    {
        com.android.server.usb.descriptors.UsbDescriptorParser r0;
        boolean $z0;

        r0 := @this: com.android.server.usb.descriptors.UsbDescriptorParser;

        $z0 = virtualinvoke r0.<com.android.server.usb.descriptors.UsbDescriptorParser: boolean hasAudioTerminal(int)>(2);

        return $z0;
    }

    public boolean hasAudioInterface()
    {
        com.android.server.usb.descriptors.UsbDescriptorParser r0;
        java.util.ArrayList $r1;
        boolean $z0, $z1;

        r0 := @this: com.android.server.usb.descriptors.UsbDescriptorParser;

        $r1 = virtualinvoke r0.<com.android.server.usb.descriptors.UsbDescriptorParser: java.util.ArrayList getInterfaceDescriptorsForClass(int)>(1);

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean isEmpty()>();

        $z1 = 1 ^ $z0;

        return $z1;
    }

    public boolean hasAudioPlayback()
    {
        com.android.server.usb.descriptors.UsbDescriptorParser r0;
        boolean $z0;

        r0 := @this: com.android.server.usb.descriptors.UsbDescriptorParser;

        $z0 = virtualinvoke r0.<com.android.server.usb.descriptors.UsbDescriptorParser: boolean hasAudioTerminal(int)>(3);

        return $z0;
    }

    public boolean hasAudioTerminal(int)
    {
        com.android.server.usb.descriptors.UsbDescriptorParser r0;
        int i0, $i1;
        java.util.Iterator r1;
        com.android.server.usb.descriptors.UsbDescriptor r2;
        java.util.ArrayList $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        com.android.server.usb.descriptors.UsbACInterface $r5, $r6;
        byte $b2;

        r0 := @this: com.android.server.usb.descriptors.UsbDescriptorParser;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.usb.descriptors.UsbDescriptorParser: java.util.ArrayList mDescriptors>;

        r1 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.server.usb.descriptors.UsbDescriptor) $r4;

        $z1 = r2 instanceof com.android.server.usb.descriptors.UsbACInterface;

        if $z1 == 0 goto label2;

        $r5 = (com.android.server.usb.descriptors.UsbACInterface) r2;

        $i1 = virtualinvoke $r5.<com.android.server.usb.descriptors.UsbACInterface: int getSubclass()>();

        if $i1 != 1 goto label2;

        $r6 = (com.android.server.usb.descriptors.UsbACInterface) r2;

        $b2 = virtualinvoke $r6.<com.android.server.usb.descriptors.UsbACInterface: byte getSubtype()>();

        if $b2 != i0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public boolean hasHIDInterface()
    {
        com.android.server.usb.descriptors.UsbDescriptorParser r0;
        java.util.ArrayList $r1;
        boolean $z0, $z1;

        r0 := @this: com.android.server.usb.descriptors.UsbDescriptorParser;

        $r1 = virtualinvoke r0.<com.android.server.usb.descriptors.UsbDescriptorParser: java.util.ArrayList getInterfaceDescriptorsForClass(int)>(3);

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean isEmpty()>();

        $z1 = $z0 ^ 1;

        return $z1;
    }

    public boolean hasInput()
    {
        com.android.server.usb.descriptors.UsbDescriptorParser r0;
        java.util.Iterator r1;
        com.android.server.usb.descriptors.UsbDescriptor r2;
        int i0, $i1, $i4;
        boolean $z1, $z2, z3;
        java.lang.Object $r3;
        java.lang.StringBuilder $r4;
        byte $b2;
        java.lang.String $r8, $r10;
        com.android.server.usb.descriptors.UsbACTerminal $r11;
        java.util.ArrayList r12;

        r0 := @this: com.android.server.usb.descriptors.UsbDescriptorParser;

        r12 = virtualinvoke r0.<com.android.server.usb.descriptors.UsbDescriptorParser: java.util.ArrayList getACInterfaceDescriptors(byte,int)>(2, 1);

        r1 = virtualinvoke r12.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        z3 = 0;

        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.server.usb.descriptors.UsbDescriptor) $r3;

        $z2 = r2 instanceof com.android.server.usb.descriptors.UsbACTerminal;

        if $z2 == 0 goto label3;

        $r11 = (com.android.server.usb.descriptors.UsbACTerminal) r2;

        $i4 = virtualinvoke $r11.<com.android.server.usb.descriptors.UsbACTerminal: int getTerminalType()>();

        i0 = $i4 & -256;

        if i0 == 256 goto label2;

        if i0 == 768 goto label2;

        z3 = 1;

        goto label5;

     label2:
        goto label4;

     label3:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Undefined Audio Input terminal l: ");

        $i1 = virtualinvoke r2.<com.android.server.usb.descriptors.UsbDescriptor: int getLength()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" t:0x");

        $b2 = virtualinvoke r2.<com.android.server.usb.descriptors.UsbDescriptor: byte getType()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($b2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("UsbDescriptorParser", $r10);

     label4:
        goto label1;

     label5:
        return z3;
    }

    public boolean hasMIDIInterface()
    {
        com.android.server.usb.descriptors.UsbDescriptorParser r0;
        java.util.Iterator r1;
        com.android.server.usb.descriptors.UsbDescriptor r2;
        java.util.ArrayList $r4;
        boolean $z0, $z1;
        java.lang.Object $r5;
        java.lang.StringBuilder $r6;
        int $i0, $i3;
        byte $b1;
        java.lang.String $r10, $r12;
        com.android.server.usb.descriptors.UsbInterfaceDescriptor $r13;

        r0 := @this: com.android.server.usb.descriptors.UsbDescriptorParser;

        $r4 = virtualinvoke r0.<com.android.server.usb.descriptors.UsbDescriptorParser: java.util.ArrayList getInterfaceDescriptorsForClass(int)>(1);

        r1 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.server.usb.descriptors.UsbDescriptor) $r5;

        $z1 = r2 instanceof com.android.server.usb.descriptors.UsbInterfaceDescriptor;

        if $z1 == 0 goto label3;

        $r13 = (com.android.server.usb.descriptors.UsbInterfaceDescriptor) r2;

        $i3 = virtualinvoke $r13.<com.android.server.usb.descriptors.UsbInterfaceDescriptor: int getUsbSubclass()>();

        if $i3 != 3 goto label2;

        return 1;

     label2:
        goto label4;

     label3:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Undefined Audio Class Interface l: ");

        $i0 = virtualinvoke r2.<com.android.server.usb.descriptors.UsbDescriptor: int getLength()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" t:0x");

        $b1 = virtualinvoke r2.<com.android.server.usb.descriptors.UsbDescriptor: byte getType()>();

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($b1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("UsbDescriptorParser", $r12);

     label4:
        goto label1;

     label5:
        return 0;
    }

    public boolean hasMic()
    {
        com.android.server.usb.descriptors.UsbDescriptorParser r0;
        java.util.Iterator r1;
        java.util.ArrayList $r3;
        boolean $z1, $z2, z3;
        java.lang.Object $r4;
        java.lang.StringBuilder $r5;
        int $i0, $i3, $i4, $i5, $i6;
        byte $b1;
        java.lang.String $r9, $r11;
        com.android.server.usb.descriptors.UsbDescriptor r12;
        com.android.server.usb.descriptors.UsbACTerminal r13;

        r0 := @this: com.android.server.usb.descriptors.UsbDescriptorParser;

        $r3 = virtualinvoke r0.<com.android.server.usb.descriptors.UsbDescriptorParser: java.util.ArrayList getACInterfaceDescriptors(byte,int)>(2, 1);

        r1 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        z3 = 0;

        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r12 = (com.android.server.usb.descriptors.UsbDescriptor) $r4;

        $z2 = r12 instanceof com.android.server.usb.descriptors.UsbACTerminal;

        if $z2 == 0 goto label4;

        r13 = (com.android.server.usb.descriptors.UsbACTerminal) r12;

        $i3 = virtualinvoke r13.<com.android.server.usb.descriptors.UsbACTerminal: int getTerminalType()>();

        if $i3 == 513 goto label3;

        $i4 = virtualinvoke r13.<com.android.server.usb.descriptors.UsbACTerminal: int getTerminalType()>();

        if $i4 == 1026 goto label3;

        $i5 = virtualinvoke r13.<com.android.server.usb.descriptors.UsbACTerminal: int getTerminalType()>();

        if $i5 == 1024 goto label3;

        $i6 = virtualinvoke r13.<com.android.server.usb.descriptors.UsbACTerminal: int getTerminalType()>();

        if $i6 != 1539 goto label2;

        goto label3;

     label2:
        goto label5;

     label3:
        z3 = 1;

        goto label6;

     label4:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Undefined Audio Input terminal l: ");

        $i0 = virtualinvoke r12.<com.android.server.usb.descriptors.UsbDescriptor: int getLength()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" t:0x");

        $b1 = virtualinvoke r12.<com.android.server.usb.descriptors.UsbDescriptor: byte getType()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($b1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("UsbDescriptorParser", $r11);

     label5:
        goto label1;

     label6:
        return z3;
    }

    public boolean hasOutput()
    {
        com.android.server.usb.descriptors.UsbDescriptorParser r0;
        java.util.Iterator r1;
        com.android.server.usb.descriptors.UsbDescriptor r2;
        int i0, $i1, $i4;
        boolean $z1, $z2, z3;
        java.lang.Object $r3;
        java.lang.StringBuilder $r4;
        byte $b2;
        java.lang.String $r8, $r10;
        com.android.server.usb.descriptors.UsbACTerminal $r11;
        java.util.ArrayList r12;

        r0 := @this: com.android.server.usb.descriptors.UsbDescriptorParser;

        r12 = virtualinvoke r0.<com.android.server.usb.descriptors.UsbDescriptorParser: java.util.ArrayList getACInterfaceDescriptors(byte,int)>(3, 1);

        r1 = virtualinvoke r12.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        z3 = 0;

        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.server.usb.descriptors.UsbDescriptor) $r3;

        $z2 = r2 instanceof com.android.server.usb.descriptors.UsbACTerminal;

        if $z2 == 0 goto label3;

        $r11 = (com.android.server.usb.descriptors.UsbACTerminal) r2;

        $i4 = virtualinvoke $r11.<com.android.server.usb.descriptors.UsbACTerminal: int getTerminalType()>();

        i0 = $i4 & -256;

        if i0 == 256 goto label2;

        if i0 == 512 goto label2;

        z3 = 1;

        goto label5;

     label2:
        goto label4;

     label3:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Undefined Audio Input terminal l: ");

        $i1 = virtualinvoke r2.<com.android.server.usb.descriptors.UsbDescriptor: int getLength()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" t:0x");

        $b2 = virtualinvoke r2.<com.android.server.usb.descriptors.UsbDescriptor: byte getType()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($b2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("UsbDescriptorParser", $r10);

     label4:
        goto label1;

     label5:
        return z3;
    }

    public boolean hasSpeaker()
    {
        com.android.server.usb.descriptors.UsbDescriptorParser r0;
        java.util.Iterator r1;
        com.android.server.usb.descriptors.UsbDescriptor r2;
        java.util.ArrayList $r3;
        boolean $z1, $z2, z3;
        java.lang.Object $r4;
        java.lang.StringBuilder $r5;
        int $i0, $i3, $i4, $i5;
        byte $b1;
        java.lang.String $r9, $r11;
        com.android.server.usb.descriptors.UsbACTerminal r12;

        r0 := @this: com.android.server.usb.descriptors.UsbDescriptorParser;

        $r3 = virtualinvoke r0.<com.android.server.usb.descriptors.UsbDescriptorParser: java.util.ArrayList getACInterfaceDescriptors(byte,int)>(3, 1);

        r1 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        z3 = 0;

        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.server.usb.descriptors.UsbDescriptor) $r4;

        $z2 = r2 instanceof com.android.server.usb.descriptors.UsbACTerminal;

        if $z2 == 0 goto label4;

        r12 = (com.android.server.usb.descriptors.UsbACTerminal) r2;

        $i3 = virtualinvoke r12.<com.android.server.usb.descriptors.UsbACTerminal: int getTerminalType()>();

        if $i3 == 769 goto label3;

        $i4 = virtualinvoke r12.<com.android.server.usb.descriptors.UsbACTerminal: int getTerminalType()>();

        if $i4 == 770 goto label3;

        $i5 = virtualinvoke r12.<com.android.server.usb.descriptors.UsbACTerminal: int getTerminalType()>();

        if $i5 != 1026 goto label2;

        goto label3;

     label2:
        goto label5;

     label3:
        z3 = 1;

        goto label6;

     label4:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Undefined Audio Output terminal l: ");

        $i0 = virtualinvoke r2.<com.android.server.usb.descriptors.UsbDescriptor: int getLength()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" t:0x");

        $b1 = virtualinvoke r2.<com.android.server.usb.descriptors.UsbDescriptor: byte getType()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($b1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("UsbDescriptorParser", $r11);

     label5:
        goto label1;

     label6:
        return z3;
    }

    public boolean hasStorageInterface()
    {
        com.android.server.usb.descriptors.UsbDescriptorParser r0;
        java.util.ArrayList $r1;
        boolean $z0, $z1;

        r0 := @this: com.android.server.usb.descriptors.UsbDescriptorParser;

        $r1 = virtualinvoke r0.<com.android.server.usb.descriptors.UsbDescriptorParser: java.util.ArrayList getInterfaceDescriptorsForClass(int)>(8);

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean isEmpty()>();

        $z1 = $z0 ^ 1;

        return $z1;
    }

    public boolean hasVideoCapture()
    {
        com.android.server.usb.descriptors.UsbDescriptorParser r0;
        java.util.Iterator r1;
        java.util.ArrayList $r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        com.android.server.usb.descriptors.UsbDescriptor $r4;

        r0 := @this: com.android.server.usb.descriptors.UsbDescriptorParser;

        $r2 = r0.<com.android.server.usb.descriptors.UsbDescriptorParser: java.util.ArrayList mDescriptors>;

        r1 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.android.server.usb.descriptors.UsbDescriptor) $r3;

        $z1 = $r4 instanceof com.android.server.usb.descriptors.UsbVCInputTerminal;

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public boolean hasVideoPlayback()
    {
        com.android.server.usb.descriptors.UsbDescriptorParser r0;
        java.util.Iterator r1;
        java.util.ArrayList $r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        com.android.server.usb.descriptors.UsbDescriptor $r4;

        r0 := @this: com.android.server.usb.descriptors.UsbDescriptorParser;

        $r2 = r0.<com.android.server.usb.descriptors.UsbDescriptorParser: java.util.ArrayList mDescriptors>;

        r1 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.android.server.usb.descriptors.UsbDescriptor) $r3;

        $z1 = $r4 instanceof com.android.server.usb.descriptors.UsbVCOutputTerminal;

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public boolean isInputHeadset()
    {
        com.android.server.usb.descriptors.UsbDescriptorParser r0;
        float $f0;
        byte $b0;
        boolean z0;

        r0 := @this: com.android.server.usb.descriptors.UsbDescriptorParser;

        $f0 = virtualinvoke r0.<com.android.server.usb.descriptors.UsbDescriptorParser: float getInputHeadsetProbability()>();

        $b0 = $f0 cmpl 0.75F;

        if $b0 < 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isOutputHeadset()
    {
        com.android.server.usb.descriptors.UsbDescriptorParser r0;
        float $f0;
        byte $b0;
        boolean z0;

        r0 := @this: com.android.server.usb.descriptors.UsbDescriptorParser;

        $f0 = virtualinvoke r0.<com.android.server.usb.descriptors.UsbDescriptorParser: float getOutputHeadsetProbability()>();

        $b0 = $f0 cmpl 0.75F;

        if $b0 < 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void parseDescriptors(byte[])
    {
        com.android.server.usb.descriptors.UsbDescriptorParser r0;
        int i0, $i1, $i5, $i7, $i8, $i10;
        com.android.server.usb.descriptors.ByteStream $r2;
        java.util.ArrayList $r3, $r6;
        java.lang.Exception $r4, $r7;
        java.lang.Throwable $r5;
        byte $b4;
        java.lang.String $r12, $r15, $r20, $r23, $r28;
        java.lang.StackTraceElement $r14, $r18, $r22, $r26;
        byte[] r29;
        com.android.server.usb.descriptors.UsbDescriptor r30, r31;
        java.lang.StringBuilder r35, r37, r38;
        java.lang.StackTraceElement[] r36;

        r0 := @this: com.android.server.usb.descriptors.UsbDescriptorParser;

        r29 := @parameter0: byte[];

        $r2 = new com.android.server.usb.descriptors.ByteStream;

        specialinvoke $r2.<com.android.server.usb.descriptors.ByteStream: void <init>(byte[])>(r29);

     label01:
        $i1 = virtualinvoke $r2.<com.android.server.usb.descriptors.ByteStream: int available()>();

        if $i1 <= 0 goto label18;

        r30 = null;

     label02:
        r31 = specialinvoke r0.<com.android.server.usb.descriptors.UsbDescriptorParser: com.android.server.usb.descriptors.UsbDescriptor allocDescriptor(com.android.server.usb.descriptors.ByteStream)>($r2);

     label03:
        r30 = r31;

        goto label05;

     label04:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("UsbDescriptorParser", "Exception allocating USB descriptor.", $r4);

     label05:
        if r30 == null goto label17;

     label06:
        virtualinvoke r30.<com.android.server.usb.descriptors.UsbDescriptor: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>($r2);

        virtualinvoke r30.<com.android.server.usb.descriptors.UsbDescriptor: void postParse(com.android.server.usb.descriptors.ByteStream)>($r2);

     label07:
        $r3 = r0.<com.android.server.usb.descriptors.UsbDescriptorParser: java.util.ArrayList mDescriptors>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r30);

        goto label17;

     label08:
        $r5 := @caughtexception;

        goto label16;

     label09:
        $r7 := @caughtexception;

     label10:
        virtualinvoke r30.<com.android.server.usb.descriptors.UsbDescriptor: void postParse(com.android.server.usb.descriptors.ByteStream)>($r2);

        r35 = new java.lang.StringBuilder;

        specialinvoke r35.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception parsing USB descriptors. type:0x");

        $b4 = virtualinvoke r30.<com.android.server.usb.descriptors.UsbDescriptor: byte getType()>();

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b4);

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" status:");

        $i5 = virtualinvoke r30.<com.android.server.usb.descriptors.UsbDescriptor: int getStatus()>();

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r12 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("UsbDescriptorParser", $r12);

        r36 = virtualinvoke $r7.<java.lang.Exception: java.lang.StackTraceElement[] getStackTrace()>();

        i0 = lengthof r36;

     label11:
        if i0 <= 0 goto label13;

     label12:
        r37 = new java.lang.StringBuilder;

        specialinvoke r37.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  class:");

        $r22 = r36[0];

        $r23 = virtualinvoke $r22.<java.lang.StackTraceElement: java.lang.String getClassName()>();

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" @ ");

        $r26 = r36[0];

        $i10 = virtualinvoke $r26.<java.lang.StackTraceElement: int getLineNumber()>();

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r28 = virtualinvoke r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("UsbDescriptorParser", $r28);

     label13:
        $i7 = lengthof r36;

        if $i7 <= 1 goto label14;

        r38 = new java.lang.StringBuilder;

        specialinvoke r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  class:");

        $r14 = r36[1];

        $r15 = virtualinvoke $r14.<java.lang.StackTraceElement: java.lang.String getClassName()>();

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" @ ");

        $r18 = r36[1];

        $i8 = virtualinvoke $r18.<java.lang.StackTraceElement: int getLineNumber()>();

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r20 = virtualinvoke r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("UsbDescriptorParser", $r20);

     label14:
        virtualinvoke r30.<com.android.server.usb.descriptors.UsbDescriptor: void setStatus(int)>(4);

     label15:
        goto label07;

     label16:
        $r6 = r0.<com.android.server.usb.descriptors.UsbDescriptorParser: java.util.ArrayList mDescriptors>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r30);

        throw $r5;

     label17:
        goto label01;

     label18:
        return;

        catch java.lang.Exception from label02 to label03 with label04;
        catch java.lang.Exception from label06 to label07 with label09;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label10 to label11 with label08;
        catch java.lang.Throwable from label12 to label13 with label08;
        catch java.lang.Throwable from label13 to label14 with label08;
        catch java.lang.Throwable from label14 to label15 with label08;
    }

    public void setACInterfaceSpec(int)
    {
        com.android.server.usb.descriptors.UsbDescriptorParser r0;
        int i0;

        r0 := @this: com.android.server.usb.descriptors.UsbDescriptorParser;

        i0 := @parameter0: int;

        r0.<com.android.server.usb.descriptors.UsbDescriptorParser: int mACInterfacesSpec> = i0;

        return;
    }

    public void setVCInterfaceSpec(int)
    {
        com.android.server.usb.descriptors.UsbDescriptorParser r0;
        int i0;

        r0 := @this: com.android.server.usb.descriptors.UsbDescriptorParser;

        i0 := @parameter0: int;

        r0.<com.android.server.usb.descriptors.UsbDescriptorParser: int mVCInterfacesSpec> = i0;

        return;
    }

    public android.hardware.usb.UsbDevice$Builder toAndroidUsbDeviceBuilder()
    {
        com.android.server.usb.descriptors.UsbDescriptorParser r0;
        com.android.server.usb.descriptors.UsbDeviceDescriptor r1;
        android.hardware.usb.UsbDevice$Builder r2;

        r0 := @this: com.android.server.usb.descriptors.UsbDescriptorParser;

        r1 = r0.<com.android.server.usb.descriptors.UsbDescriptorParser: com.android.server.usb.descriptors.UsbDeviceDescriptor mDeviceDescriptor>;

        if r1 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("UsbDescriptorParser", "toAndroidUsbDevice() ERROR - No Device Descriptor");

        return null;

     label1:
        r2 = virtualinvoke r1.<com.android.server.usb.descriptors.UsbDeviceDescriptor: android.hardware.usb.UsbDevice$Builder toAndroid(com.android.server.usb.descriptors.UsbDescriptorParser)>(r0);

        if r2 != null goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("UsbDescriptorParser", "toAndroidUsbDevice() ERROR Creating Device");

     label2:
        return r2;
    }

    public static void <clinit>()
    {
        <com.android.server.usb.descriptors.UsbDescriptorParser: java.lang.String TAG> = "UsbDescriptorParser";

        <com.android.server.usb.descriptors.UsbDescriptorParser: float OUT_HEADSET_TRIGGER> = 0.75F;

        <com.android.server.usb.descriptors.UsbDescriptorParser: float IN_HEADSET_TRIGGER> = 0.75F;

        <com.android.server.usb.descriptors.UsbDescriptorParser: int DESCRIPTORS_ALLOC_SIZE> = 128;

        <com.android.server.usb.descriptors.UsbDescriptorParser: boolean DEBUG> = 0;

        return;
    }
}
