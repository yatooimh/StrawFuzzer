public class com.android.server.usb.descriptors.UsbEndpointDescriptor extends com.android.server.usb.descriptors.UsbDescriptor
{
    public static final int DIRECTION_INPUT;
    public static final int DIRECTION_OUTPUT;
    public static final byte MASK_ATTRIBS_SYNCTYPE;
    public static final int MASK_ATTRIBS_TRANSTYPE;
    public static final int MASK_ATTRIBS_USEAGE;
    public static final int MASK_ENDPOINT_ADDRESS;
    public static final int MASK_ENDPOINT_DIRECTION;
    public static final byte SYNCTYPE_ADAPTSYNC;
    public static final byte SYNCTYPE_ASYNC;
    public static final byte SYNCTYPE_NONE;
    public static final byte SYNCTYPE_RESERVED;
    private static final java.lang.String TAG;
    public static final int TRANSTYPE_BULK;
    public static final int TRANSTYPE_CONTROL;
    public static final int TRANSTYPE_INTERRUPT;
    public static final int TRANSTYPE_ISO;
    public static final int USEAGE_DATA;
    public static final int USEAGE_EXPLICIT;
    public static final int USEAGE_FEEDBACK;
    public static final int USEAGE_RESERVED;
    private int mAttributes;
    private int mEndpointAddress;
    private int mInterval;
    private int mPacketSize;
    private byte mRefresh;
    private byte mSyncAddress;

    public void <init>(int, byte)
    {
        com.android.server.usb.descriptors.UsbEndpointDescriptor r0;
        int i0;
        byte b1;

        r0 := @this: com.android.server.usb.descriptors.UsbEndpointDescriptor;

        i0 := @parameter0: int;

        b1 := @parameter1: byte;

        specialinvoke r0.<com.android.server.usb.descriptors.UsbDescriptor: void <init>(int,byte)>(i0, b1);

        r0.<com.android.server.usb.descriptors.UsbEndpointDescriptor: int mHierarchyLevel> = 4;

        return;
    }

    public int getAttributes()
    {
        com.android.server.usb.descriptors.UsbEndpointDescriptor r0;
        int $i0;

        r0 := @this: com.android.server.usb.descriptors.UsbEndpointDescriptor;

        $i0 = r0.<com.android.server.usb.descriptors.UsbEndpointDescriptor: int mAttributes>;

        return $i0;
    }

    public int getDirection()
    {
        com.android.server.usb.descriptors.UsbEndpointDescriptor r0;
        int $i0, $i1;

        r0 := @this: com.android.server.usb.descriptors.UsbEndpointDescriptor;

        $i0 = r0.<com.android.server.usb.descriptors.UsbEndpointDescriptor: int mEndpointAddress>;

        $i1 = $i0 & -128;

        return $i1;
    }

    public int getEndpointAddress()
    {
        com.android.server.usb.descriptors.UsbEndpointDescriptor r0;
        int $i0, $i1;

        r0 := @this: com.android.server.usb.descriptors.UsbEndpointDescriptor;

        $i0 = r0.<com.android.server.usb.descriptors.UsbEndpointDescriptor: int mEndpointAddress>;

        $i1 = $i0 & 15;

        return $i1;
    }

    public int getInterval()
    {
        com.android.server.usb.descriptors.UsbEndpointDescriptor r0;
        int $i0;

        r0 := @this: com.android.server.usb.descriptors.UsbEndpointDescriptor;

        $i0 = r0.<com.android.server.usb.descriptors.UsbEndpointDescriptor: int mInterval>;

        return $i0;
    }

    public int getPacketSize()
    {
        com.android.server.usb.descriptors.UsbEndpointDescriptor r0;
        int $i0;

        r0 := @this: com.android.server.usb.descriptors.UsbEndpointDescriptor;

        $i0 = r0.<com.android.server.usb.descriptors.UsbEndpointDescriptor: int mPacketSize>;

        return $i0;
    }

    public byte getRefresh()
    {
        com.android.server.usb.descriptors.UsbEndpointDescriptor r0;
        byte $b0;

        r0 := @this: com.android.server.usb.descriptors.UsbEndpointDescriptor;

        $b0 = r0.<com.android.server.usb.descriptors.UsbEndpointDescriptor: byte mRefresh>;

        return $b0;
    }

    public byte getSyncAddress()
    {
        com.android.server.usb.descriptors.UsbEndpointDescriptor r0;
        byte $b0;

        r0 := @this: com.android.server.usb.descriptors.UsbEndpointDescriptor;

        $b0 = r0.<com.android.server.usb.descriptors.UsbEndpointDescriptor: byte mSyncAddress>;

        return $b0;
    }

    public int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)
    {
        com.android.server.usb.descriptors.UsbEndpointDescriptor r0;
        com.android.server.usb.descriptors.ByteStream r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        byte $b6, $b7;

        r0 := @this: com.android.server.usb.descriptors.UsbEndpointDescriptor;

        r1 := @parameter0: com.android.server.usb.descriptors.ByteStream;

        $i0 = virtualinvoke r1.<com.android.server.usb.descriptors.ByteStream: int getUnsignedByte()>();

        r0.<com.android.server.usb.descriptors.UsbEndpointDescriptor: int mEndpointAddress> = $i0;

        $i1 = virtualinvoke r1.<com.android.server.usb.descriptors.ByteStream: int getUnsignedByte()>();

        r0.<com.android.server.usb.descriptors.UsbEndpointDescriptor: int mAttributes> = $i1;

        $i2 = virtualinvoke r1.<com.android.server.usb.descriptors.ByteStream: int unpackUsbShort()>();

        r0.<com.android.server.usb.descriptors.UsbEndpointDescriptor: int mPacketSize> = $i2;

        $i3 = virtualinvoke r1.<com.android.server.usb.descriptors.ByteStream: int getUnsignedByte()>();

        r0.<com.android.server.usb.descriptors.UsbEndpointDescriptor: int mInterval> = $i3;

        $i4 = r0.<com.android.server.usb.descriptors.UsbEndpointDescriptor: int mLength>;

        if $i4 != 9 goto label1;

        $b6 = virtualinvoke r1.<com.android.server.usb.descriptors.ByteStream: byte getByte()>();

        r0.<com.android.server.usb.descriptors.UsbEndpointDescriptor: byte mRefresh> = $b6;

        $b7 = virtualinvoke r1.<com.android.server.usb.descriptors.ByteStream: byte getByte()>();

        r0.<com.android.server.usb.descriptors.UsbEndpointDescriptor: byte mSyncAddress> = $b7;

     label1:
        $i5 = r0.<com.android.server.usb.descriptors.UsbEndpointDescriptor: int mLength>;

        return $i5;
    }

    public void report(com.android.server.usb.descriptors.report.ReportCanvas)
    {
        com.android.server.usb.descriptors.UsbEndpointDescriptor r0;
        com.android.server.usb.descriptors.report.ReportCanvas r1;
        java.lang.StringBuilder $r3, $r9, $r21, $r24;
        int $i0, $i1, i2, i3, $i4, i5, i6, $i7, $i8;
        java.lang.String $r5, $r8, $r11, $r14, r19, $r23, $r26;

        r0 := @this: com.android.server.usb.descriptors.UsbEndpointDescriptor;

        r1 := @parameter0: com.android.server.usb.descriptors.report.ReportCanvas;

        specialinvoke r0.<com.android.server.usb.descriptors.UsbDescriptor: void report(com.android.server.usb.descriptors.report.ReportCanvas)>(r1);

        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void openList()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Address: ");

        $i0 = virtualinvoke r0.<com.android.server.usb.descriptors.UsbEndpointDescriptor: int getEndpointAddress()>();

        $r5 = staticinvoke <com.android.server.usb.descriptors.report.ReportCanvas: java.lang.String getHexString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $i1 = virtualinvoke r0.<com.android.server.usb.descriptors.UsbEndpointDescriptor: int getDirection()>();

        if $i1 != 0 goto label01;

        r19 = " [out]";

        goto label02;

     label01:
        r19 = " [in]";

     label02:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void writeListItem(java.lang.String)>($r8);

        i2 = virtualinvoke r0.<com.android.server.usb.descriptors.UsbEndpointDescriptor: int getAttributes()>();

        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void openListItem()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attributes: ");

        $r11 = staticinvoke <com.android.server.usb.descriptors.report.ReportCanvas: java.lang.String getHexString(int)>(i2);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void write(java.lang.String)>($r14);

        i3 = i2 & 3;

        if i3 == 0 goto label06;

        if i3 == 1 goto label05;

        if i3 == 2 goto label04;

        if i3 == 3 goto label03;

        goto label07;

     label03:
        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void write(java.lang.String)>("Interrupt");

        goto label07;

     label04:
        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void write(java.lang.String)>("Bulk");

        goto label07;

     label05:
        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void write(java.lang.String)>("Iso");

        goto label07;

     label06:
        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void write(java.lang.String)>("Control");

     label07:
        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void closeListItem()>();

        $i4 = i2 & 3;

        if $i4 != 1 goto label17;

        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void openListItem()>();

        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void write(java.lang.String)>("Aync: ");

        i5 = i2 & 12;

        if i5 == 0 goto label10;

        if i5 == 4 goto label09;

        if i5 == 8 goto label08;

        goto label11;

     label08:
        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void write(java.lang.String)>("ADAPTIVE ASYNC");

        goto label11;

     label09:
        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void write(java.lang.String)>("ASYNC");

        goto label11;

     label10:
        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void write(java.lang.String)>("NONE");

     label11:
        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void closeListItem()>();

        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void openListItem()>();

        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void write(java.lang.String)>("Useage: ");

        i6 = i2 & 48;

        if i6 == 0 goto label15;

        if i6 == 16 goto label14;

        if i6 == 32 goto label13;

        if i6 == 48 goto label12;

        goto label16;

     label12:
        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void write(java.lang.String)>("RESERVED");

        goto label16;

     label13:
        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void write(java.lang.String)>("EXPLICIT FEEDBACK");

        goto label16;

     label14:
        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void write(java.lang.String)>("FEEDBACK");

        goto label16;

     label15:
        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void write(java.lang.String)>("DATA");

     label16:
        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void closeListItem()>();

     label17:
        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package Size: ");

        $i7 = virtualinvoke r0.<com.android.server.usb.descriptors.UsbEndpointDescriptor: int getPacketSize()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void writeListItem(java.lang.String)>($r23);

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Interval: ");

        $i8 = virtualinvoke r0.<com.android.server.usb.descriptors.UsbEndpointDescriptor: int getInterval()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void writeListItem(java.lang.String)>($r26);

        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void closeList()>();

        return;
    }

    android.hardware.usb.UsbEndpoint toAndroid(com.android.server.usb.descriptors.UsbDescriptorParser)
    {
        com.android.server.usb.descriptors.UsbEndpointDescriptor r0;
        com.android.server.usb.descriptors.UsbDescriptorParser r1;
        android.hardware.usb.UsbEndpoint $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.android.server.usb.descriptors.UsbEndpointDescriptor;

        r1 := @parameter0: com.android.server.usb.descriptors.UsbDescriptorParser;

        $r2 = new android.hardware.usb.UsbEndpoint;

        $i3 = r0.<com.android.server.usb.descriptors.UsbEndpointDescriptor: int mEndpointAddress>;

        $i2 = r0.<com.android.server.usb.descriptors.UsbEndpointDescriptor: int mAttributes>;

        $i1 = r0.<com.android.server.usb.descriptors.UsbEndpointDescriptor: int mPacketSize>;

        $i0 = r0.<com.android.server.usb.descriptors.UsbEndpointDescriptor: int mInterval>;

        specialinvoke $r2.<android.hardware.usb.UsbEndpoint: void <init>(int,int,int,int)>($i3, $i2, $i1, $i0);

        return $r2;
    }

    public static void <clinit>()
    {
        <com.android.server.usb.descriptors.UsbEndpointDescriptor: int USEAGE_RESERVED> = 48;

        <com.android.server.usb.descriptors.UsbEndpointDescriptor: int USEAGE_FEEDBACK> = 16;

        <com.android.server.usb.descriptors.UsbEndpointDescriptor: int USEAGE_EXPLICIT> = 32;

        <com.android.server.usb.descriptors.UsbEndpointDescriptor: int USEAGE_DATA> = 0;

        <com.android.server.usb.descriptors.UsbEndpointDescriptor: int TRANSTYPE_ISO> = 1;

        <com.android.server.usb.descriptors.UsbEndpointDescriptor: int TRANSTYPE_INTERRUPT> = 3;

        <com.android.server.usb.descriptors.UsbEndpointDescriptor: int TRANSTYPE_CONTROL> = 0;

        <com.android.server.usb.descriptors.UsbEndpointDescriptor: int TRANSTYPE_BULK> = 2;

        <com.android.server.usb.descriptors.UsbEndpointDescriptor: java.lang.String TAG> = "UsbEndpointDescriptor";

        <com.android.server.usb.descriptors.UsbEndpointDescriptor: byte SYNCTYPE_RESERVED> = 12;

        <com.android.server.usb.descriptors.UsbEndpointDescriptor: byte SYNCTYPE_NONE> = 0;

        <com.android.server.usb.descriptors.UsbEndpointDescriptor: byte SYNCTYPE_ASYNC> = 4;

        <com.android.server.usb.descriptors.UsbEndpointDescriptor: byte SYNCTYPE_ADAPTSYNC> = 8;

        <com.android.server.usb.descriptors.UsbEndpointDescriptor: int MASK_ENDPOINT_DIRECTION> = -128;

        <com.android.server.usb.descriptors.UsbEndpointDescriptor: int MASK_ENDPOINT_ADDRESS> = 15;

        <com.android.server.usb.descriptors.UsbEndpointDescriptor: int MASK_ATTRIBS_USEAGE> = 48;

        <com.android.server.usb.descriptors.UsbEndpointDescriptor: int MASK_ATTRIBS_TRANSTYPE> = 3;

        <com.android.server.usb.descriptors.UsbEndpointDescriptor: byte MASK_ATTRIBS_SYNCTYPE> = 12;

        <com.android.server.usb.descriptors.UsbEndpointDescriptor: int DIRECTION_OUTPUT> = 0;

        <com.android.server.usb.descriptors.UsbEndpointDescriptor: int DIRECTION_INPUT> = 128;

        return;
    }
}
