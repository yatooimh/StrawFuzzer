public final class com.android.server.usb.descriptors.UsbHIDDescriptor extends com.android.server.usb.descriptors.UsbDescriptor
{
    private static final java.lang.String TAG;
    private byte mCountryCode;
    private int mDescriptorLen;
    private byte mDescriptorType;
    private byte mNumDescriptors;
    private int mRelease;

    public void <init>(int, byte)
    {
        com.android.server.usb.descriptors.UsbHIDDescriptor r0;
        int i0;
        byte b1;

        r0 := @this: com.android.server.usb.descriptors.UsbHIDDescriptor;

        i0 := @parameter0: int;

        b1 := @parameter1: byte;

        specialinvoke r0.<com.android.server.usb.descriptors.UsbDescriptor: void <init>(int,byte)>(i0, b1);

        r0.<com.android.server.usb.descriptors.UsbHIDDescriptor: int mHierarchyLevel> = 3;

        return;
    }

    public byte getCountryCode()
    {
        com.android.server.usb.descriptors.UsbHIDDescriptor r0;
        byte $b0;

        r0 := @this: com.android.server.usb.descriptors.UsbHIDDescriptor;

        $b0 = r0.<com.android.server.usb.descriptors.UsbHIDDescriptor: byte mCountryCode>;

        return $b0;
    }

    public int getDescriptorLen()
    {
        com.android.server.usb.descriptors.UsbHIDDescriptor r0;
        int $i0;

        r0 := @this: com.android.server.usb.descriptors.UsbHIDDescriptor;

        $i0 = r0.<com.android.server.usb.descriptors.UsbHIDDescriptor: int mDescriptorLen>;

        return $i0;
    }

    public byte getDescriptorType()
    {
        com.android.server.usb.descriptors.UsbHIDDescriptor r0;
        byte $b0;

        r0 := @this: com.android.server.usb.descriptors.UsbHIDDescriptor;

        $b0 = r0.<com.android.server.usb.descriptors.UsbHIDDescriptor: byte mDescriptorType>;

        return $b0;
    }

    public byte getNumDescriptors()
    {
        com.android.server.usb.descriptors.UsbHIDDescriptor r0;
        byte $b0;

        r0 := @this: com.android.server.usb.descriptors.UsbHIDDescriptor;

        $b0 = r0.<com.android.server.usb.descriptors.UsbHIDDescriptor: byte mNumDescriptors>;

        return $b0;
    }

    public int getRelease()
    {
        com.android.server.usb.descriptors.UsbHIDDescriptor r0;
        int $i0;

        r0 := @this: com.android.server.usb.descriptors.UsbHIDDescriptor;

        $i0 = r0.<com.android.server.usb.descriptors.UsbHIDDescriptor: int mRelease>;

        return $i0;
    }

    public int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)
    {
        com.android.server.usb.descriptors.UsbHIDDescriptor r0;
        com.android.server.usb.descriptors.ByteStream r1;
        int $i0, $i4, $i5;
        byte $b1, $b2, $b3;

        r0 := @this: com.android.server.usb.descriptors.UsbHIDDescriptor;

        r1 := @parameter0: com.android.server.usb.descriptors.ByteStream;

        $i0 = virtualinvoke r1.<com.android.server.usb.descriptors.ByteStream: int unpackUsbShort()>();

        r0.<com.android.server.usb.descriptors.UsbHIDDescriptor: int mRelease> = $i0;

        $b1 = virtualinvoke r1.<com.android.server.usb.descriptors.ByteStream: byte getByte()>();

        r0.<com.android.server.usb.descriptors.UsbHIDDescriptor: byte mCountryCode> = $b1;

        $b2 = virtualinvoke r1.<com.android.server.usb.descriptors.ByteStream: byte getByte()>();

        r0.<com.android.server.usb.descriptors.UsbHIDDescriptor: byte mNumDescriptors> = $b2;

        $b3 = virtualinvoke r1.<com.android.server.usb.descriptors.ByteStream: byte getByte()>();

        r0.<com.android.server.usb.descriptors.UsbHIDDescriptor: byte mDescriptorType> = $b3;

        $i4 = virtualinvoke r1.<com.android.server.usb.descriptors.ByteStream: int unpackUsbShort()>();

        r0.<com.android.server.usb.descriptors.UsbHIDDescriptor: int mDescriptorLen> = $i4;

        $i5 = r0.<com.android.server.usb.descriptors.UsbHIDDescriptor: int mLength>;

        return $i5;
    }

    public void report(com.android.server.usb.descriptors.report.ReportCanvas)
    {
        com.android.server.usb.descriptors.UsbHIDDescriptor r0;
        com.android.server.usb.descriptors.report.ReportCanvas r1;
        java.lang.StringBuilder $r2, $r7, $r12;
        int $i0, $i3;
        java.lang.String $r4, $r6, $r9, $r11, $r17;
        byte $b1, $b2;

        r0 := @this: com.android.server.usb.descriptors.UsbHIDDescriptor;

        r1 := @parameter0: com.android.server.usb.descriptors.report.ReportCanvas;

        specialinvoke r0.<com.android.server.usb.descriptors.UsbDescriptor: void report(com.android.server.usb.descriptors.report.ReportCanvas)>(r1);

        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void openList()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Spec: ");

        $i0 = virtualinvoke r0.<com.android.server.usb.descriptors.UsbHIDDescriptor: int getRelease()>();

        $r4 = staticinvoke <com.android.server.usb.descriptors.report.ReportCanvas: java.lang.String getBCDString(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void writeListItem(java.lang.String)>($r6);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Type: ");

        $b1 = virtualinvoke r0.<com.android.server.usb.descriptors.UsbHIDDescriptor: byte getDescriptorType()>();

        $r9 = staticinvoke <com.android.server.usb.descriptors.report.ReportCanvas: java.lang.String getBCDString(int)>($b1);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void writeListItem(java.lang.String)>($r11);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $b2 = virtualinvoke r0.<com.android.server.usb.descriptors.UsbHIDDescriptor: byte getNumDescriptors()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b2);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Descriptors Len: ");

        $i3 = virtualinvoke r0.<com.android.server.usb.descriptors.UsbHIDDescriptor: int getDescriptorLen()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r17 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void writeListItem(java.lang.String)>($r17);

        virtualinvoke r1.<com.android.server.usb.descriptors.report.ReportCanvas: void closeList()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.usb.descriptors.UsbHIDDescriptor: java.lang.String TAG> = "UsbHIDDescriptor";

        return;
    }
}
