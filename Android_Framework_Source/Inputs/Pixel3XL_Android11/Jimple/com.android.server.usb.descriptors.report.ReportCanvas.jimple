public abstract class com.android.server.usb.descriptors.report.ReportCanvas extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final com.android.server.usb.descriptors.UsbDescriptorParser mParser;

    public void <init>(com.android.server.usb.descriptors.UsbDescriptorParser)
    {
        com.android.server.usb.descriptors.report.ReportCanvas r0;
        com.android.server.usb.descriptors.UsbDescriptorParser r1;

        r0 := @this: com.android.server.usb.descriptors.report.ReportCanvas;

        r1 := @parameter0: com.android.server.usb.descriptors.UsbDescriptorParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.usb.descriptors.report.ReportCanvas: com.android.server.usb.descriptors.UsbDescriptorParser mParser> = r1;

        return;
    }

    public static java.lang.String getBCDString(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.StringBuilder $r1;
        java.lang.String $r7;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $i1 = i0 >> 8;

        $i2 = $i1 & 15;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $i3 = i0 >> 4;

        $i4 = $i3 & 15;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $i5 = i0 & 15;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public static java.lang.String getHexString(byte)
    {
        byte b0;
        java.lang.StringBuilder $r1;
        short $s1;
        java.lang.String $r3, $r4, $r6;

        b0 := @parameter0: byte;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");

        $s1 = b0 & 255;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s1);

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String toUpperCase()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public static java.lang.String getHexString(int)
    {
        int i0, $i1;
        java.lang.StringBuilder $r1;
        java.lang.String $r3, $r4, $r6;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");

        $i1 = 65535 & i0;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String toUpperCase()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public abstract void closeHeader(int);

    public abstract void closeList();

    public abstract void closeListItem();

    public abstract void closeParagraph();

    public void dumpHexArray(byte[], java.lang.StringBuilder)
    {
        com.android.server.usb.descriptors.report.ReportCanvas r0;
        byte[] r1;
        java.lang.StringBuilder r2, $r4;
        int $i0, i2;
        byte $b1;
        java.lang.String $r5, $r8;

        r0 := @this: com.android.server.usb.descriptors.report.ReportCanvas;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.lang.StringBuilder;

        if r1 == null goto label3;

        virtualinvoke r0.<com.android.server.usb.descriptors.report.ReportCanvas: void openParagraph(boolean)>(0);

        i2 = 0;

     label1:
        $i0 = lengthof r1;

        if i2 >= $i0 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $b1 = r1[i2];

        $r5 = staticinvoke <com.android.server.usb.descriptors.report.ReportCanvas: java.lang.String getHexString(byte)>($b1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        i2 = i2 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<com.android.server.usb.descriptors.report.ReportCanvas: void closeParagraph()>();

     label3:
        return;
    }

    public com.android.server.usb.descriptors.UsbDescriptorParser getParser()
    {
        com.android.server.usb.descriptors.report.ReportCanvas r0;
        com.android.server.usb.descriptors.UsbDescriptorParser $r1;

        r0 := @this: com.android.server.usb.descriptors.report.ReportCanvas;

        $r1 = r0.<com.android.server.usb.descriptors.report.ReportCanvas: com.android.server.usb.descriptors.UsbDescriptorParser mParser>;

        return $r1;
    }

    public abstract void openHeader(int);

    public abstract void openList();

    public abstract void openListItem();

    public abstract void openParagraph(boolean);

    public abstract void write(java.lang.String);

    public void writeHeader(int, java.lang.String)
    {
        com.android.server.usb.descriptors.report.ReportCanvas r0;
        int i0;
        java.lang.String r1;

        r0 := @this: com.android.server.usb.descriptors.report.ReportCanvas;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.usb.descriptors.report.ReportCanvas: void openHeader(int)>(i0);

        virtualinvoke r0.<com.android.server.usb.descriptors.report.ReportCanvas: void write(java.lang.String)>(r1);

        virtualinvoke r0.<com.android.server.usb.descriptors.report.ReportCanvas: void closeHeader(int)>(i0);

        return;
    }

    public void writeListItem(java.lang.String)
    {
        com.android.server.usb.descriptors.report.ReportCanvas r0;
        java.lang.String r1;

        r0 := @this: com.android.server.usb.descriptors.report.ReportCanvas;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.android.server.usb.descriptors.report.ReportCanvas: void openListItem()>();

        virtualinvoke r0.<com.android.server.usb.descriptors.report.ReportCanvas: void write(java.lang.String)>(r1);

        virtualinvoke r0.<com.android.server.usb.descriptors.report.ReportCanvas: void closeListItem()>();

        return;
    }

    public abstract void writeParagraph(java.lang.String, boolean);

    public static void <clinit>()
    {
        <com.android.server.usb.descriptors.report.ReportCanvas: java.lang.String TAG> = "ReportCanvas";

        return;
    }
}
