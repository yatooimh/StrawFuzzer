public class com.android.server.utils.ManagedApplicationService extends java.lang.Object
{
    private static final int MAX_RETRY_COUNT;
    private static final long MAX_RETRY_DURATION_MS;
    private static final long MIN_RETRY_DURATION_MS;
    public static final int RETRY_BEST_EFFORT;
    public static final int RETRY_FOREVER;
    public static final int RETRY_NEVER;
    private static final long RETRY_RESET_TIME_MS;
    private final java.lang.String TAG;
    private android.os.IInterface mBoundInterface;
    private final com.android.server.utils.ManagedApplicationService$BinderChecker mChecker;
    private final int mClientLabel;
    private final android.content.ComponentName mComponent;
    private android.content.ServiceConnection mConnection;
    private final android.content.Context mContext;
    private final com.android.server.utils.ManagedApplicationService$EventCallback mEventCb;
    private final android.os.Handler mHandler;
    private final boolean mIsImportant;
    private long mLastRetryTimeMs;
    private final java.lang.Object mLock;
    private long mNextRetryDurationMs;
    private com.android.server.utils.ManagedApplicationService$PendingEvent mPendingEvent;
    private int mRetryCount;
    private final java.lang.Runnable mRetryRunnable;
    private final int mRetryType;
    private boolean mRetrying;
    private final java.lang.String mSettingsAction;
    private final int mUserId;

    private void <init>(android.content.Context, android.content.ComponentName, int, int, java.lang.String, com.android.server.utils.ManagedApplicationService$BinderChecker, boolean, int, android.os.Handler, com.android.server.utils.ManagedApplicationService$EventCallback)
    {
        com.android.server.utils.ManagedApplicationService r0;
        android.content.Context r1;
        android.content.ComponentName r2;
        int i0, i1, i2;
        java.lang.String r3, $r8;
        com.android.server.utils.ManagedApplicationService$BinderChecker r4;
        boolean z0;
        android.os.Handler r5;
        com.android.server.utils.ManagedApplicationService$EventCallback r6;
        java.lang.Class $r7;
        com.android.server.utils._$$Lambda$ManagedApplicationService$TUtdiUHqGW7Fae8jX7ATvPxzdeM $r9;
        java.lang.Object $r10;

        r0 := @this: com.android.server.utils.ManagedApplicationService;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.ComponentName;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: com.android.server.utils.ManagedApplicationService$BinderChecker;

        z0 := @parameter6: boolean;

        i2 := @parameter7: int;

        r5 := @parameter8: android.os.Handler;

        r6 := @parameter9: com.android.server.utils.ManagedApplicationService$EventCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r7 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getSimpleName()>();

        r0.<com.android.server.utils.ManagedApplicationService: java.lang.String TAG> = $r8;

        $r9 = new com.android.server.utils._$$Lambda$ManagedApplicationService$TUtdiUHqGW7Fae8jX7ATvPxzdeM;

        specialinvoke $r9.<com.android.server.utils._$$Lambda$ManagedApplicationService$TUtdiUHqGW7Fae8jX7ATvPxzdeM: void <init>(com.android.server.utils.ManagedApplicationService)>(r0);

        r0.<com.android.server.utils.ManagedApplicationService: java.lang.Runnable mRetryRunnable> = $r9;

        $r10 = new java.lang.Object;

        specialinvoke $r10.<java.lang.Object: void <init>()>();

        r0.<com.android.server.utils.ManagedApplicationService: java.lang.Object mLock> = $r10;

        r0.<com.android.server.utils.ManagedApplicationService: long mNextRetryDurationMs> = 2000L;

        r0.<com.android.server.utils.ManagedApplicationService: android.content.Context mContext> = r1;

        r0.<com.android.server.utils.ManagedApplicationService: android.content.ComponentName mComponent> = r2;

        r0.<com.android.server.utils.ManagedApplicationService: int mUserId> = i0;

        r0.<com.android.server.utils.ManagedApplicationService: int mClientLabel> = i1;

        r0.<com.android.server.utils.ManagedApplicationService: java.lang.String mSettingsAction> = r3;

        r0.<com.android.server.utils.ManagedApplicationService: com.android.server.utils.ManagedApplicationService$BinderChecker mChecker> = r4;

        r0.<com.android.server.utils.ManagedApplicationService: boolean mIsImportant> = z0;

        r0.<com.android.server.utils.ManagedApplicationService: int mRetryType> = i2;

        r0.<com.android.server.utils.ManagedApplicationService: android.os.Handler mHandler> = r5;

        r0.<com.android.server.utils.ManagedApplicationService: com.android.server.utils.ManagedApplicationService$EventCallback mEventCb> = r6;

        return;
    }

    static java.lang.String access$000(com.android.server.utils.ManagedApplicationService)
    {
        com.android.server.utils.ManagedApplicationService r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.server.utils.ManagedApplicationService;

        $r1 = r0.<com.android.server.utils.ManagedApplicationService: java.lang.String TAG>;

        return $r1;
    }

    static java.lang.Object access$100(com.android.server.utils.ManagedApplicationService)
    {
        com.android.server.utils.ManagedApplicationService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.utils.ManagedApplicationService;

        $r1 = r0.<com.android.server.utils.ManagedApplicationService: java.lang.Object mLock>;

        return $r1;
    }

    static com.android.server.utils.ManagedApplicationService$EventCallback access$1000(com.android.server.utils.ManagedApplicationService)
    {
        com.android.server.utils.ManagedApplicationService r0;
        com.android.server.utils.ManagedApplicationService$EventCallback $r1;

        r0 := @parameter0: com.android.server.utils.ManagedApplicationService;

        $r1 = r0.<com.android.server.utils.ManagedApplicationService: com.android.server.utils.ManagedApplicationService$EventCallback mEventCb>;

        return $r1;
    }

    static android.content.ServiceConnection access$200(com.android.server.utils.ManagedApplicationService)
    {
        com.android.server.utils.ManagedApplicationService r0;
        android.content.ServiceConnection $r1;

        r0 := @parameter0: com.android.server.utils.ManagedApplicationService;

        $r1 = r0.<com.android.server.utils.ManagedApplicationService: android.content.ServiceConnection mConnection>;

        return $r1;
    }

    static android.os.Handler access$300(com.android.server.utils.ManagedApplicationService)
    {
        com.android.server.utils.ManagedApplicationService r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.utils.ManagedApplicationService;

        $r1 = r0.<com.android.server.utils.ManagedApplicationService: android.os.Handler mHandler>;

        return $r1;
    }

    static android.os.IInterface access$400(com.android.server.utils.ManagedApplicationService)
    {
        com.android.server.utils.ManagedApplicationService r0;
        android.os.IInterface $r1;

        r0 := @parameter0: com.android.server.utils.ManagedApplicationService;

        $r1 = r0.<com.android.server.utils.ManagedApplicationService: android.os.IInterface mBoundInterface>;

        return $r1;
    }

    static android.os.IInterface access$402(com.android.server.utils.ManagedApplicationService, android.os.IInterface)
    {
        com.android.server.utils.ManagedApplicationService r0;
        android.os.IInterface r1;

        r0 := @parameter0: com.android.server.utils.ManagedApplicationService;

        r1 := @parameter1: android.os.IInterface;

        r0.<com.android.server.utils.ManagedApplicationService: android.os.IInterface mBoundInterface> = r1;

        return r1;
    }

    static void access$500(com.android.server.utils.ManagedApplicationService)
    {
        com.android.server.utils.ManagedApplicationService r0;

        r0 := @parameter0: com.android.server.utils.ManagedApplicationService;

        specialinvoke r0.<com.android.server.utils.ManagedApplicationService: void startRetriesLocked()>();

        return;
    }

    static void access$600(com.android.server.utils.ManagedApplicationService)
    {
        com.android.server.utils.ManagedApplicationService r0;

        r0 := @parameter0: com.android.server.utils.ManagedApplicationService;

        specialinvoke r0.<com.android.server.utils.ManagedApplicationService: void stopRetriesLocked()>();

        return;
    }

    static com.android.server.utils.ManagedApplicationService$BinderChecker access$700(com.android.server.utils.ManagedApplicationService)
    {
        com.android.server.utils.ManagedApplicationService r0;
        com.android.server.utils.ManagedApplicationService$BinderChecker $r1;

        r0 := @parameter0: com.android.server.utils.ManagedApplicationService;

        $r1 = r0.<com.android.server.utils.ManagedApplicationService: com.android.server.utils.ManagedApplicationService$BinderChecker mChecker>;

        return $r1;
    }

    static com.android.server.utils.ManagedApplicationService$PendingEvent access$800(com.android.server.utils.ManagedApplicationService)
    {
        com.android.server.utils.ManagedApplicationService r0;
        com.android.server.utils.ManagedApplicationService$PendingEvent $r1;

        r0 := @parameter0: com.android.server.utils.ManagedApplicationService;

        $r1 = r0.<com.android.server.utils.ManagedApplicationService: com.android.server.utils.ManagedApplicationService$PendingEvent mPendingEvent>;

        return $r1;
    }

    static com.android.server.utils.ManagedApplicationService$PendingEvent access$802(com.android.server.utils.ManagedApplicationService, com.android.server.utils.ManagedApplicationService$PendingEvent)
    {
        com.android.server.utils.ManagedApplicationService r0;
        com.android.server.utils.ManagedApplicationService$PendingEvent r1;

        r0 := @parameter0: com.android.server.utils.ManagedApplicationService;

        r1 := @parameter1: com.android.server.utils.ManagedApplicationService$PendingEvent;

        r0.<com.android.server.utils.ManagedApplicationService: com.android.server.utils.ManagedApplicationService$PendingEvent mPendingEvent> = r1;

        return r1;
    }

    static android.content.ComponentName access$900(com.android.server.utils.ManagedApplicationService)
    {
        com.android.server.utils.ManagedApplicationService r0;
        android.content.ComponentName $r1;

        r0 := @parameter0: com.android.server.utils.ManagedApplicationService;

        $r1 = r0.<com.android.server.utils.ManagedApplicationService: android.content.ComponentName mComponent>;

        return $r1;
    }

    public static com.android.server.utils.ManagedApplicationService build(android.content.Context, android.content.ComponentName, int, int, java.lang.String, com.android.server.utils.ManagedApplicationService$BinderChecker, boolean, int, android.os.Handler, com.android.server.utils.ManagedApplicationService$EventCallback)
    {
        android.content.Context r0;
        android.content.ComponentName r1;
        int i0, i1, i2;
        java.lang.String r2;
        com.android.server.utils.ManagedApplicationService$BinderChecker r3;
        boolean z0;
        android.os.Handler r4;
        com.android.server.utils.ManagedApplicationService$EventCallback r5;
        com.android.server.utils.ManagedApplicationService $r6;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.content.ComponentName;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: java.lang.String;

        r3 := @parameter5: com.android.server.utils.ManagedApplicationService$BinderChecker;

        z0 := @parameter6: boolean;

        i2 := @parameter7: int;

        r4 := @parameter8: android.os.Handler;

        r5 := @parameter9: com.android.server.utils.ManagedApplicationService$EventCallback;

        $r6 = new com.android.server.utils.ManagedApplicationService;

        specialinvoke $r6.<com.android.server.utils.ManagedApplicationService: void <init>(android.content.Context,android.content.ComponentName,int,int,java.lang.String,com.android.server.utils.ManagedApplicationService$BinderChecker,boolean,int,android.os.Handler,com.android.server.utils.ManagedApplicationService$EventCallback)>(r0, r1, i0, i1, r2, r3, z0, i2, r4, r5);

        return $r6;
    }

    private boolean checkAndDeliverServiceDiedCbLocked()
    {
        com.android.server.utils.ManagedApplicationService r0;
        int i0, $i3;
        java.lang.String r1, $r8;
        long l1;
        java.lang.StringBuilder $r3;
        android.content.ComponentName $r5;
        com.android.server.utils.ManagedApplicationService$EventCallback $r9;
        com.android.server.utils._$$Lambda$ManagedApplicationService$7a_sAFwcUuC9yt8nXYlr0jScFcs $r10;
        android.os.Handler $r11;

        r0 := @this: com.android.server.utils.ManagedApplicationService;

        i0 = r0.<com.android.server.utils.ManagedApplicationService: int mRetryType>;

        if i0 == 2 goto label2;

        if i0 != 3 goto label1;

        $i3 = r0.<com.android.server.utils.ManagedApplicationService: int mRetryCount>;

        if $i3 < 4 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        r1 = r0.<com.android.server.utils.ManagedApplicationService: java.lang.String TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service ");

        $r5 = r0.<com.android.server.utils.ManagedApplicationService: android.content.ComponentName mComponent>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has died too much, not retrying.");

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>(r1, $r8);

        $r9 = r0.<com.android.server.utils.ManagedApplicationService: com.android.server.utils.ManagedApplicationService$EventCallback mEventCb>;

        if $r9 == null goto label3;

        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r11 = r0.<com.android.server.utils.ManagedApplicationService: android.os.Handler mHandler>;

        $r10 = new com.android.server.utils._$$Lambda$ManagedApplicationService$7a_sAFwcUuC9yt8nXYlr0jScFcs;

        specialinvoke $r10.<com.android.server.utils._$$Lambda$ManagedApplicationService$7a_sAFwcUuC9yt8nXYlr0jScFcs: void <init>(com.android.server.utils.ManagedApplicationService,long)>(r0, l1);

        virtualinvoke $r11.<android.os.Handler: boolean post(java.lang.Runnable)>($r10);

     label3:
        return 1;
    }

    private void doRetry()
    {
        com.android.server.utils.ManagedApplicationService r0;
        java.lang.Object r1;
        java.lang.String r2, $r8;
        android.content.ServiceConnection $r3;
        boolean $z0, $z1;
        android.content.ComponentName $r5;
        java.lang.Throwable $r9;
        java.lang.StringBuilder r10;

        r0 := @this: com.android.server.utils.ManagedApplicationService;

        r1 = r0.<com.android.server.utils.ManagedApplicationService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.utils.ManagedApplicationService: android.content.ServiceConnection mConnection>;

        if $r3 != null goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        $z0 = r0.<com.android.server.utils.ManagedApplicationService: boolean mRetrying>;

        if $z0 != 0 goto label05;

        exitmonitor r1;

     label04:
        return;

     label05:
        r2 = r0.<com.android.server.utils.ManagedApplicationService: java.lang.String TAG>;

        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempting to reconnect ");

        $r5 = r0.<com.android.server.utils.ManagedApplicationService: android.content.ComponentName mComponent>;

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...");

        $r8 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r2, $r8);

        virtualinvoke r0.<com.android.server.utils.ManagedApplicationService: void disconnect()>();

        $z1 = specialinvoke r0.<com.android.server.utils.ManagedApplicationService: boolean checkAndDeliverServiceDiedCbLocked()>();

        if $z1 == 0 goto label07;

        exitmonitor r1;

     label06:
        return;

     label07:
        specialinvoke r0.<com.android.server.utils.ManagedApplicationService: void queueRetryLocked()>();

        virtualinvoke r0.<com.android.server.utils.ManagedApplicationService: void connect()>();

        exitmonitor r1;

     label08:
        return;

     label09:
        $r9 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public static void lambda$TUtdiUHqGW7Fae8jX7ATvPxzdeM(com.android.server.utils.ManagedApplicationService)
    {
        com.android.server.utils.ManagedApplicationService r0;

        r0 := @parameter0: com.android.server.utils.ManagedApplicationService;

        specialinvoke r0.<com.android.server.utils.ManagedApplicationService: void doRetry()>();

        return;
    }

    private boolean matches(android.content.ComponentName, int)
    {
        com.android.server.utils.ManagedApplicationService r0;
        android.content.ComponentName r1, $r2;
        int i0, $i1;
        boolean $z0, z1;

        r0 := @this: com.android.server.utils.ManagedApplicationService;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.utils.ManagedApplicationService: android.content.ComponentName mComponent>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r2, r1);

        if $z0 == 0 goto label1;

        $i1 = r0.<com.android.server.utils.ManagedApplicationService: int mUserId>;

        if $i1 != i0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    private void queueRetryLocked()
    {
        com.android.server.utils.ManagedApplicationService r0;
        long l0, $l1, $l2, $l4, $l5, $l6, $l7;
        byte $b3;
        java.lang.Runnable $r1;
        android.os.Handler $r2;
        int $i8, $i9;

        r0 := @this: com.android.server.utils.ManagedApplicationService;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l1 = r0.<com.android.server.utils.ManagedApplicationService: long mLastRetryTimeMs>;

        $l2 = l0 - $l1;

        $b3 = $l2 cmp 64000L;

        if $b3 <= 0 goto label1;

        r0.<com.android.server.utils.ManagedApplicationService: long mNextRetryDurationMs> = 2000L;

        r0.<com.android.server.utils.ManagedApplicationService: int mRetryCount> = 0;

     label1:
        r0.<com.android.server.utils.ManagedApplicationService: long mLastRetryTimeMs> = l0;

        $r2 = r0.<com.android.server.utils.ManagedApplicationService: android.os.Handler mHandler>;

        $r1 = r0.<com.android.server.utils.ManagedApplicationService: java.lang.Runnable mRetryRunnable>;

        $l4 = r0.<com.android.server.utils.ManagedApplicationService: long mNextRetryDurationMs>;

        virtualinvoke $r2.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r1, $l4);

        $l5 = r0.<com.android.server.utils.ManagedApplicationService: long mNextRetryDurationMs>;

        $l6 = $l5 * 2L;

        $l7 = staticinvoke <java.lang.Math: long min(long,long)>($l6, 16000L);

        r0.<com.android.server.utils.ManagedApplicationService: long mNextRetryDurationMs> = $l7;

        $i8 = r0.<com.android.server.utils.ManagedApplicationService: int mRetryCount>;

        $i9 = $i8 + 1;

        r0.<com.android.server.utils.ManagedApplicationService: int mRetryCount> = $i9;

        return;
    }

    private void startRetriesLocked()
    {
        com.android.server.utils.ManagedApplicationService r0;
        boolean $z0, $z1;

        r0 := @this: com.android.server.utils.ManagedApplicationService;

        $z0 = specialinvoke r0.<com.android.server.utils.ManagedApplicationService: boolean checkAndDeliverServiceDiedCbLocked()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.server.utils.ManagedApplicationService: void disconnect()>();

        return;

     label1:
        $z1 = r0.<com.android.server.utils.ManagedApplicationService: boolean mRetrying>;

        if $z1 == 0 goto label2;

        return;

     label2:
        r0.<com.android.server.utils.ManagedApplicationService: boolean mRetrying> = 1;

        specialinvoke r0.<com.android.server.utils.ManagedApplicationService: void queueRetryLocked()>();

        return;
    }

    private void stopRetriesLocked()
    {
        com.android.server.utils.ManagedApplicationService r0;
        java.lang.Runnable $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.server.utils.ManagedApplicationService;

        r0.<com.android.server.utils.ManagedApplicationService: boolean mRetrying> = 0;

        $r2 = r0.<com.android.server.utils.ManagedApplicationService: android.os.Handler mHandler>;

        $r1 = r0.<com.android.server.utils.ManagedApplicationService: java.lang.Runnable mRetryRunnable>;

        virtualinvoke $r2.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r1);

        return;
    }

    public void connect()
    {
        com.android.server.utils.ManagedApplicationService r0;
        java.lang.Object r1;
        boolean z0, $z1;
        android.content.ServiceConnection $r2, r23;
        android.content.ComponentName $r3;
        int $i0, $i1, $i3, i5;
        java.lang.String $r4, $r7, $r8, $r16, r25, r28;
        android.app.PendingIntent $r9;
        java.lang.Throwable $r12, $r13;
        android.content.Intent r17, r18, r20;
        android.content.Context r19, r22;
        com.android.server.utils.ManagedApplicationService$1 r21;
        android.os.UserHandle r24;
        java.lang.StringBuilder r26, r29;

        r0 := @this: com.android.server.utils.ManagedApplicationService;

        r1 = r0.<com.android.server.utils.ManagedApplicationService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.utils.ManagedApplicationService: android.content.ServiceConnection mConnection>;

        if $r2 == null goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        r17 = new android.content.Intent;

        specialinvoke r17.<android.content.Intent: void <init>()>();

        $r3 = r0.<com.android.server.utils.ManagedApplicationService: android.content.ComponentName mComponent>;

        r18 = virtualinvoke r17.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r3);

        $i0 = r0.<com.android.server.utils.ManagedApplicationService: int mClientLabel>;

        if $i0 == 0 goto label04;

        $i3 = r0.<com.android.server.utils.ManagedApplicationService: int mClientLabel>;

        virtualinvoke r18.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.client_label", $i3);

     label04:
        $r4 = r0.<com.android.server.utils.ManagedApplicationService: java.lang.String mSettingsAction>;

        if $r4 == null goto label05;

        r19 = r0.<com.android.server.utils.ManagedApplicationService: android.content.Context mContext>;

        r20 = new android.content.Intent;

        $r8 = r0.<com.android.server.utils.ManagedApplicationService: java.lang.String mSettingsAction>;

        specialinvoke r20.<android.content.Intent: void <init>(java.lang.String)>($r8);

        $r9 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>(r19, 0, r20, 0);

        virtualinvoke r18.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.client_intent", $r9);

     label05:
        r21 = new com.android.server.utils.ManagedApplicationService$1;

        specialinvoke r21.<com.android.server.utils.ManagedApplicationService$1: void <init>(com.android.server.utils.ManagedApplicationService)>(r0);

        r0.<com.android.server.utils.ManagedApplicationService: android.content.ServiceConnection mConnection> = r21;

     label06:
        i5 = 67108865;

     label07:
        z0 = r0.<com.android.server.utils.ManagedApplicationService: boolean mIsImportant>;

     label08:
        if z0 == 0 goto label09;

        i5 = 67108865 | 64;

     label09:
        r22 = r0.<com.android.server.utils.ManagedApplicationService: android.content.Context mContext>;

        r23 = r0.<com.android.server.utils.ManagedApplicationService: android.content.ServiceConnection mConnection>;

        r24 = new android.os.UserHandle;

        $i1 = r0.<com.android.server.utils.ManagedApplicationService: int mUserId>;

        specialinvoke r24.<android.os.UserHandle: void <init>(int)>($i1);

        $z1 = virtualinvoke r22.<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>(r18, r23, i5, r24);

        if $z1 != 0 goto label10;

        r25 = r0.<com.android.server.utils.ManagedApplicationService: java.lang.String TAG>;

        r26 = new java.lang.StringBuilder;

        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to bind service: ");

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r18);

        $r7 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r25, $r7);

        specialinvoke r0.<com.android.server.utils.ManagedApplicationService: void startRetriesLocked()>();

     label10:
        goto label13;

     label11:
        $r13 := @caughtexception;

     label12:
        r28 = r0.<com.android.server.utils.ManagedApplicationService: java.lang.String TAG>;

        r29 = new java.lang.StringBuilder;

        specialinvoke r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to bind service: ");

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r18);

        $r16 = virtualinvoke r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>(r28, $r16, $r13);

        specialinvoke r0.<com.android.server.utils.ManagedApplicationService: void startRetriesLocked()>();

     label13:
        exitmonitor r1;

     label14:
        return;

     label15:
        $r12 := @caughtexception;

     label16:
        exitmonitor r1;

     label17:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.SecurityException from label09 to label10 with label11;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public void disconnect()
    {
        com.android.server.utils.ManagedApplicationService r0;
        java.lang.Object r1;
        android.content.ServiceConnection $r3, $r4;
        android.content.Context $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.utils.ManagedApplicationService;

        r1 = r0.<com.android.server.utils.ManagedApplicationService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.utils.ManagedApplicationService: android.content.ServiceConnection mConnection>;

        if $r3 != null goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 = r0.<com.android.server.utils.ManagedApplicationService: android.content.Context mContext>;

        $r4 = r0.<com.android.server.utils.ManagedApplicationService: android.content.ServiceConnection mConnection>;

        virtualinvoke $r5.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r4);

        r0.<com.android.server.utils.ManagedApplicationService: android.content.ServiceConnection mConnection> = null;

        r0.<com.android.server.utils.ManagedApplicationService: android.os.IInterface mBoundInterface> = null;

        exitmonitor r1;

     label4:
        return;

     label5:
        $r6 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public boolean disconnectIfNotMatching(android.content.ComponentName, int)
    {
        com.android.server.utils.ManagedApplicationService r0;
        android.content.ComponentName r1;
        int i0;
        boolean $z0;

        r0 := @this: com.android.server.utils.ManagedApplicationService;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.server.utils.ManagedApplicationService: boolean matches(android.content.ComponentName,int)>(r1, i0);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        virtualinvoke r0.<com.android.server.utils.ManagedApplicationService: void disconnect()>();

        return 1;
    }

    public android.content.ComponentName getComponent()
    {
        com.android.server.utils.ManagedApplicationService r0;
        android.content.ComponentName $r1;

        r0 := @this: com.android.server.utils.ManagedApplicationService;

        $r1 = r0.<com.android.server.utils.ManagedApplicationService: android.content.ComponentName mComponent>;

        return $r1;
    }

    public int getUserId()
    {
        com.android.server.utils.ManagedApplicationService r0;
        int $i0;

        r0 := @this: com.android.server.utils.ManagedApplicationService;

        $i0 = r0.<com.android.server.utils.ManagedApplicationService: int mUserId>;

        return $i0;
    }

    public void lambda$checkAndDeliverServiceDiedCbLocked$0$ManagedApplicationService(long)
    {
        com.android.server.utils.ManagedApplicationService r0;
        long l0;
        com.android.server.utils.ManagedApplicationService$LogEvent $r1;
        android.content.ComponentName $r2;
        com.android.server.utils.ManagedApplicationService$EventCallback $r3;

        r0 := @this: com.android.server.utils.ManagedApplicationService;

        l0 := @parameter0: long;

        $r3 = r0.<com.android.server.utils.ManagedApplicationService: com.android.server.utils.ManagedApplicationService$EventCallback mEventCb>;

        $r1 = new com.android.server.utils.ManagedApplicationService$LogEvent;

        $r2 = r0.<com.android.server.utils.ManagedApplicationService: android.content.ComponentName mComponent>;

        specialinvoke $r1.<com.android.server.utils.ManagedApplicationService$LogEvent: void <init>(long,android.content.ComponentName,int)>(l0, $r2, 4);

        interfaceinvoke $r3.<com.android.server.utils.ManagedApplicationService$EventCallback: void onServiceEvent(com.android.server.utils.ManagedApplicationService$LogEvent)>($r1);

        return;
    }

    public void sendEvent(com.android.server.utils.ManagedApplicationService$PendingEvent)
    {
        com.android.server.utils.ManagedApplicationService r0;
        java.lang.Object r1;
        android.os.IInterface r2;
        java.lang.Exception $r3;
        java.lang.String $r4;
        java.lang.Throwable $r5;
        com.android.server.utils.ManagedApplicationService$PendingEvent r6;

        r0 := @this: com.android.server.utils.ManagedApplicationService;

        r6 := @parameter0: com.android.server.utils.ManagedApplicationService$PendingEvent;

        r1 = r0.<com.android.server.utils.ManagedApplicationService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        r2 = r0.<com.android.server.utils.ManagedApplicationService: android.os.IInterface mBoundInterface>;

     label02:
        if r2 != null goto label04;

     label03:
        r0.<com.android.server.utils.ManagedApplicationService: com.android.server.utils.ManagedApplicationService$PendingEvent mPendingEvent> = r6;

     label04:
        exitmonitor r1;

     label05:
        if r2 == null goto label09;

     label06:
        interfaceinvoke r6.<com.android.server.utils.ManagedApplicationService$PendingEvent: void runEvent(android.os.IInterface)>(r2);

     label07:
        goto label09;

     label08:
        $r3 := @caughtexception;

        $r4 = r0.<com.android.server.utils.ManagedApplicationService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "Received exception from user service: ", $r3);

     label09:
        return;

     label10:
        $r5 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.RuntimeException from label06 to label07 with label08;
        catch android.os.RemoteException from label06 to label07 with label08;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public static void <clinit>()
    {
        <com.android.server.utils.ManagedApplicationService: long RETRY_RESET_TIME_MS> = 64000L;

        <com.android.server.utils.ManagedApplicationService: int RETRY_NEVER> = 2;

        <com.android.server.utils.ManagedApplicationService: int RETRY_FOREVER> = 1;

        <com.android.server.utils.ManagedApplicationService: int RETRY_BEST_EFFORT> = 3;

        <com.android.server.utils.ManagedApplicationService: long MIN_RETRY_DURATION_MS> = 2000L;

        <com.android.server.utils.ManagedApplicationService: long MAX_RETRY_DURATION_MS> = 16000L;

        <com.android.server.utils.ManagedApplicationService: int MAX_RETRY_COUNT> = 4;

        return;
    }
}
