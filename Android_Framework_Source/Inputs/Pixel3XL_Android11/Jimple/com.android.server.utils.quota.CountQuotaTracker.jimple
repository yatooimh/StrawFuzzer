public class com.android.server.utils.quota.CountQuotaTracker extends com.android.server.utils.quota.QuotaTracker
{
    private static final java.lang.String ALARM_TAG_CLEANUP;
    private static final boolean DEBUG;
    private static final int MSG_CLEAN_UP_EVENTS;
    private static final java.lang.String TAG;
    private final android.util.ArrayMap mCategoryCountWindowSizesMs;
    private java.util.function.Function mCreateExecutionStats;
    private java.util.function.Function mCreateLongArrayQueue;
    private final com.android.server.utils.quota.CountQuotaTracker$DeleteEventTimesFunctor mDeleteOldEventTimesFunctor;
    private final com.android.server.utils.quota.CountQuotaTracker$EarliestEventTimeFunctor mEarliestEventTimeFunctor;
    private final android.app.AlarmManager$OnAlarmListener mEventCleanupAlarmListener;
    private final com.android.server.utils.quota.UptcMap mEventTimes;
    private final com.android.server.utils.quota.UptcMap mExecutionStatsCache;
    private final android.os.Handler mHandler;
    private final android.util.ArrayMap mMaxCategoryCounts;
    private long mMaxPeriodMs;
    private long mNextCleanupTimeElapsed;

    static void <clinit>()
    {
        java.lang.Class $r1;
        java.lang.String $r2, $r5, $r8;
        java.lang.StringBuilder $r3;

        <com.android.server.utils.quota.CountQuotaTracker: int MSG_CLEAN_UP_EVENTS> = 1;

        <com.android.server.utils.quota.CountQuotaTracker: boolean DEBUG> = 0;

        $r1 = class "Lcom/android/server/utils/quota/CountQuotaTracker;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.server.utils.quota.CountQuotaTracker: java.lang.String TAG> = $r2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");

        $r5 = <com.android.server.utils.quota.CountQuotaTracker: java.lang.String TAG>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".cleanup*");

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.android.server.utils.quota.CountQuotaTracker: java.lang.String ALARM_TAG_CLEANUP> = $r8;

        return;
    }

    public void <init>(android.content.Context, com.android.server.utils.quota.Categorizer)
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        android.content.Context r1;
        com.android.server.utils.quota.Categorizer r2;
        com.android.server.utils.quota.QuotaTracker$Injector $r3;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.utils.quota.Categorizer;

        $r3 = new com.android.server.utils.quota.QuotaTracker$Injector;

        specialinvoke $r3.<com.android.server.utils.quota.QuotaTracker$Injector: void <init>()>();

        specialinvoke r0.<com.android.server.utils.quota.CountQuotaTracker: void <init>(android.content.Context,com.android.server.utils.quota.Categorizer,com.android.server.utils.quota.QuotaTracker$Injector)>(r1, r2, $r3);

        return;
    }

    void <init>(android.content.Context, com.android.server.utils.quota.Categorizer, com.android.server.utils.quota.QuotaTracker$Injector)
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        android.content.Context r1;
        com.android.server.utils.quota.Categorizer r2;
        com.android.server.utils.quota.QuotaTracker$Injector r3;
        com.android.server.utils.quota.'-$$Lambda$CountQuotaTracker$V8_P5m4uQVKMpyfUCyH32qDbyt4' $r11;
        com.android.server.utils.quota.'-$$Lambda$CountQuotaTracker$giodBFjkV0qAORwrWZQrMAgSRaY' $r12;
        android.os.Looper $r14;
        com.android.server.utils.quota.UptcMap r15, r16;
        com.android.server.utils.quota._$$Lambda$CountQuotaTracker$gcuaahwgCbmI2MO_9858jGPxPGM r17;
        android.util.ArrayMap r18, r19;
        com.android.server.utils.quota.CountQuotaTracker$EarliestEventTimeFunctor r20;
        com.android.server.utils.quota.CountQuotaTracker$DeleteEventTimesFunctor r21;
        com.android.server.utils.quota.CountQuotaTracker$CqtHandler r22;
        java.util.function.Function r23, r24;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.utils.quota.Categorizer;

        r3 := @parameter2: com.android.server.utils.quota.QuotaTracker$Injector;

        specialinvoke r0.<com.android.server.utils.quota.QuotaTracker: void <init>(android.content.Context,com.android.server.utils.quota.Categorizer,com.android.server.utils.quota.QuotaTracker$Injector)>(r1, r2, r3);

        r15 = new com.android.server.utils.quota.UptcMap;

        specialinvoke r15.<com.android.server.utils.quota.UptcMap: void <init>()>();

        r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.UptcMap mEventTimes> = r15;

        r16 = new com.android.server.utils.quota.UptcMap;

        specialinvoke r16.<com.android.server.utils.quota.UptcMap: void <init>()>();

        r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.UptcMap mExecutionStatsCache> = r16;

        r0.<com.android.server.utils.quota.CountQuotaTracker: long mNextCleanupTimeElapsed> = 0L;

        r17 = new com.android.server.utils.quota._$$Lambda$CountQuotaTracker$gcuaahwgCbmI2MO_9858jGPxPGM;

        specialinvoke r17.<com.android.server.utils.quota._$$Lambda$CountQuotaTracker$gcuaahwgCbmI2MO_9858jGPxPGM: void <init>(com.android.server.utils.quota.CountQuotaTracker)>(r0);

        r0.<com.android.server.utils.quota.CountQuotaTracker: android.app.AlarmManager$OnAlarmListener mEventCleanupAlarmListener> = r17;

        r18 = new android.util.ArrayMap;

        specialinvoke r18.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.utils.quota.CountQuotaTracker: android.util.ArrayMap mCategoryCountWindowSizesMs> = r18;

        r19 = new android.util.ArrayMap;

        specialinvoke r19.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.utils.quota.CountQuotaTracker: android.util.ArrayMap mMaxCategoryCounts> = r19;

        r0.<com.android.server.utils.quota.CountQuotaTracker: long mMaxPeriodMs> = 0L;

        r20 = new com.android.server.utils.quota.CountQuotaTracker$EarliestEventTimeFunctor;

        specialinvoke r20.<com.android.server.utils.quota.CountQuotaTracker$EarliestEventTimeFunctor: void <init>(com.android.server.utils.quota.CountQuotaTracker$1)>(null);

        r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.CountQuotaTracker$EarliestEventTimeFunctor mEarliestEventTimeFunctor> = r20;

        r21 = new com.android.server.utils.quota.CountQuotaTracker$DeleteEventTimesFunctor;

        specialinvoke r21.<com.android.server.utils.quota.CountQuotaTracker$DeleteEventTimesFunctor: void <init>(com.android.server.utils.quota.CountQuotaTracker,com.android.server.utils.quota.CountQuotaTracker$1)>(r0, null);

        r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.CountQuotaTracker$DeleteEventTimesFunctor mDeleteOldEventTimesFunctor> = r21;

        $r11 = <com.android.server.utils.quota._$$Lambda$CountQuotaTracker$V8_P5m4uQVKMpyfUCyH32qDbyt4: com.android.server.utils.quota.'-$$Lambda$CountQuotaTracker$V8_P5m4uQVKMpyfUCyH32qDbyt4' INSTANCE>;

        r23 = (java.util.function.Function) $r11;

        r0.<com.android.server.utils.quota.CountQuotaTracker: java.util.function.Function mCreateLongArrayQueue> = r23;

        $r12 = <com.android.server.utils.quota._$$Lambda$CountQuotaTracker$giodBFjkV0qAORwrWZQrMAgSRaY: com.android.server.utils.quota.'-$$Lambda$CountQuotaTracker$giodBFjkV0qAORwrWZQrMAgSRaY' INSTANCE>;

        r24 = (java.util.function.Function) $r12;

        r0.<com.android.server.utils.quota.CountQuotaTracker: java.util.function.Function mCreateExecutionStats> = r24;

        r22 = new com.android.server.utils.quota.CountQuotaTracker$CqtHandler;

        $r14 = virtualinvoke r1.<android.content.Context: android.os.Looper getMainLooper()>();

        specialinvoke r22.<com.android.server.utils.quota.CountQuotaTracker$CqtHandler: void <init>(com.android.server.utils.quota.CountQuotaTracker,android.os.Looper)>(r0, $r14);

        r0.<com.android.server.utils.quota.CountQuotaTracker: android.os.Handler mHandler> = r22;

        return;
    }

    static android.util.ArrayMap access$300(com.android.server.utils.quota.CountQuotaTracker)
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        android.util.ArrayMap $r1;

        r0 := @parameter0: com.android.server.utils.quota.CountQuotaTracker;

        $r1 = r0.<com.android.server.utils.quota.CountQuotaTracker: android.util.ArrayMap mCategoryCountWindowSizesMs>;

        return $r1;
    }

    private com.android.server.utils.quota.CountQuotaTracker$ExecutionStats getExecutionStatsLocked(int, java.lang.String, java.lang.String, boolean)
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        int i0, i2, $i8;
        java.lang.String r1, r2;
        boolean z0;
        com.android.server.utils.quota.CountQuotaTracker$ExecutionStats r3;
        com.android.server.utils.quota.Category r4;
        long l1, $l3, $l4, $l6;
        java.util.function.Function $r5;
        com.android.server.utils.quota.UptcMap $r6;
        java.lang.Object $r7, $r11, $r15;
        com.android.server.utils.quota.Categorizer $r8;
        android.util.ArrayMap $r9, $r13;
        java.lang.Long $r10, $r12;
        java.lang.Integer $r14, $r16;
        com.android.server.utils.quota.QuotaTracker$Injector $r17;
        byte $b5, $b7;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        $r6 = r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.UptcMap mExecutionStatsCache>;

        $r5 = r0.<com.android.server.utils.quota.CountQuotaTracker: java.util.function.Function mCreateExecutionStats>;

        $r7 = virtualinvoke $r6.<com.android.server.utils.quota.UptcMap: java.lang.Object getOrCreate(int,java.lang.String,java.lang.String,java.util.function.Function)>(i0, r1, r2, $r5);

        r3 = (com.android.server.utils.quota.CountQuotaTracker$ExecutionStats) $r7;

        if z0 == 0 goto label2;

        $r8 = r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.Categorizer mCategorizer>;

        r4 = interfaceinvoke $r8.<com.android.server.utils.quota.Categorizer: com.android.server.utils.quota.Category getCategory(int,java.lang.String,java.lang.String)>(i0, r1, r2);

        $r9 = r0.<com.android.server.utils.quota.CountQuotaTracker: android.util.ArrayMap mCategoryCountWindowSizesMs>;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(9223372036854775807L);

        $r11 = virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>(r4, $r10);

        $r12 = (java.lang.Long) $r11;

        l1 = virtualinvoke $r12.<java.lang.Long: long longValue()>();

        $r13 = r0.<com.android.server.utils.quota.CountQuotaTracker: android.util.ArrayMap mMaxCategoryCounts>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2147483647);

        $r15 = virtualinvoke $r13.<android.util.ArrayMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>(r4, $r14);

        $r16 = (java.lang.Integer) $r15;

        i2 = virtualinvoke $r16.<java.lang.Integer: int intValue()>();

        $l3 = r3.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: long expirationTimeElapsed>;

        $r17 = r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.QuotaTracker$Injector mInjector>;

        $l4 = virtualinvoke $r17.<com.android.server.utils.quota.QuotaTracker$Injector: long getElapsedRealtime()>();

        $b5 = $l3 cmp $l4;

        if $b5 <= 0 goto label1;

        $l6 = r3.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: long windowSizeMs>;

        $b7 = $l6 cmp l1;

        if $b7 != 0 goto label1;

        $i8 = r3.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: int countLimit>;

        if $i8 == i2 goto label2;

     label1:
        r3.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: long windowSizeMs> = l1;

        r3.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: int countLimit> = i2;

        virtualinvoke r0.<com.android.server.utils.quota.CountQuotaTracker: void updateExecutionStatsLocked(int,java.lang.String,java.lang.String,com.android.server.utils.quota.CountQuotaTracker$ExecutionStats)>(i0, r1, r2, r3);

     label2:
        return r3;
    }

    private void invalidateAllExecutionStatsLocked()
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        long l0;
        com.android.server.utils.quota.QuotaTracker$Injector $r1;
        com.android.server.utils.quota._$$Lambda$CountQuotaTracker$YGSPs4eBXm5g9fUsluToPq543sk $r2;
        com.android.server.utils.quota.UptcMap $r3;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        $r1 = r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.QuotaTracker$Injector mInjector>;

        l0 = virtualinvoke $r1.<com.android.server.utils.quota.QuotaTracker$Injector: long getElapsedRealtime()>();

        $r3 = r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.UptcMap mExecutionStatsCache>;

        $r2 = new com.android.server.utils.quota._$$Lambda$CountQuotaTracker$YGSPs4eBXm5g9fUsluToPq543sk;

        specialinvoke $r2.<com.android.server.utils.quota._$$Lambda$CountQuotaTracker$YGSPs4eBXm5g9fUsluToPq543sk: void <init>(long)>(l0);

        virtualinvoke $r3.<com.android.server.utils.quota.UptcMap: void forEach(java.util.function.Consumer)>($r2);

        return;
    }

    private void invalidateAllExecutionStatsLocked(int, java.lang.String)
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        android.util.ArrayMap r1;
        long l0;
        int i1, i2, i3;
        com.android.server.utils.quota.UptcMap $r2;
        com.android.server.utils.quota.QuotaTracker$Injector $r3;
        java.lang.Object $r4;
        java.lang.String r5;
        com.android.server.utils.quota.CountQuotaTracker$ExecutionStats r6;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        i2 := @parameter0: int;

        r5 := @parameter1: java.lang.String;

        $r2 = r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.UptcMap mExecutionStatsCache>;

        r1 = virtualinvoke $r2.<com.android.server.utils.quota.UptcMap: android.util.ArrayMap get(int,java.lang.String)>(i2, r5);

        if r1 == null goto label3;

        $r3 = r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.QuotaTracker$Injector mInjector>;

        l0 = virtualinvoke $r3.<com.android.server.utils.quota.QuotaTracker$Injector: long getElapsedRealtime()>();

        i1 = virtualinvoke r1.<android.util.ArrayMap: int size()>();

        i3 = 0;

     label1:
        if i3 >= i1 goto label3;

        $r4 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i3);

        r6 = (com.android.server.utils.quota.CountQuotaTracker$ExecutionStats) $r4;

        if r6 == null goto label2;

        r6.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: long expirationTimeElapsed> = l0;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return;
    }

    private void invalidateExecutionStatsLocked(int, java.lang.String, java.lang.String)
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        int i0;
        java.lang.String r1, r5;
        com.android.server.utils.quota.UptcMap $r2;
        java.lang.Object $r3;
        com.android.server.utils.quota.QuotaTracker$Injector $r4;
        long $l1;
        com.android.server.utils.quota.CountQuotaTracker$ExecutionStats r6;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        i0 := @parameter0: int;

        r5 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        $r2 = r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.UptcMap mExecutionStatsCache>;

        $r3 = virtualinvoke $r2.<com.android.server.utils.quota.UptcMap: java.lang.Object get(int,java.lang.String,java.lang.String)>(i0, r5, r1);

        r6 = (com.android.server.utils.quota.CountQuotaTracker$ExecutionStats) $r3;

        if r6 == null goto label1;

        $r4 = r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.QuotaTracker$Injector mInjector>;

        $l1 = virtualinvoke $r4.<com.android.server.utils.quota.QuotaTracker$Injector: long getElapsedRealtime()>();

        r6.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: long expirationTimeElapsed> = $l1;

     label1:
        return;
    }

    private boolean isUnderCountQuotaLocked(com.android.server.utils.quota.CountQuotaTracker$ExecutionStats)
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        com.android.server.utils.quota.CountQuotaTracker$ExecutionStats r1;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        r1 := @parameter0: com.android.server.utils.quota.CountQuotaTracker$ExecutionStats;

        $i1 = r1.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: int countInWindow>;

        $i0 = r1.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: int countLimit>;

        if $i1 >= $i0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean isWithinQuotaLocked(com.android.server.utils.quota.CountQuotaTracker$ExecutionStats)
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        com.android.server.utils.quota.CountQuotaTracker$ExecutionStats r1;
        boolean $z0;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        r1 := @parameter0: com.android.server.utils.quota.CountQuotaTracker$ExecutionStats;

        $z0 = specialinvoke r0.<com.android.server.utils.quota.CountQuotaTracker: boolean isUnderCountQuotaLocked(com.android.server.utils.quota.CountQuotaTracker$ExecutionStats)>(r1);

        return $z0;
    }

    static void lambda$dump$6(com.android.internal.util.IndentingPrintWriter, int, java.lang.String, java.lang.String, android.util.LongArrayQueue)
    {
        com.android.internal.util.IndentingPrintWriter r0;
        java.lang.String r1, r2, $r4;
        android.util.LongArrayQueue r3;
        int $i0, $i2, i4, i5;
        long $l1, $l3;

        r0 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        i4 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: android.util.LongArrayQueue;

        $i0 = virtualinvoke r3.<android.util.LongArrayQueue: int size()>();

        if $i0 <= 0 goto label3;

        $r4 = staticinvoke <com.android.server.utils.quota.Uptc: java.lang.String string(int,java.lang.String,java.lang.String)>(i4, r1, r2);

        virtualinvoke r0.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>($r4);

        virtualinvoke r0.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>(":");

        virtualinvoke r0.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        $l1 = virtualinvoke r3.<android.util.LongArrayQueue: long get(int)>(0);

        virtualinvoke r0.<com.android.internal.util.IndentingPrintWriter: void print(long)>($l1);

        i5 = 1;

     label1:
        $i2 = virtualinvoke r3.<android.util.LongArrayQueue: int size()>();

        if i5 >= $i2 goto label2;

        virtualinvoke r0.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>(", ");

        $l3 = virtualinvoke r3.<android.util.LongArrayQueue: long get(int)>(i5);

        virtualinvoke r0.<com.android.internal.util.IndentingPrintWriter: void print(long)>($l3);

        i5 = i5 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke r0.<com.android.internal.util.IndentingPrintWriter: void println()>();

     label3:
        return;
    }

    static void lambda$dump$7(com.android.internal.util.IndentingPrintWriter, int, java.lang.String, java.lang.String, com.android.server.utils.quota.CountQuotaTracker$ExecutionStats)
    {
        com.android.internal.util.IndentingPrintWriter r0;
        int i0;
        java.lang.String r1, r2, $r4;
        com.android.server.utils.quota.CountQuotaTracker$ExecutionStats r3;

        r0 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: com.android.server.utils.quota.CountQuotaTracker$ExecutionStats;

        if r3 == null goto label1;

        $r4 = staticinvoke <com.android.server.utils.quota.Uptc: java.lang.String string(int,java.lang.String,java.lang.String)>(i0, r1, r2);

        virtualinvoke r0.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>($r4);

        virtualinvoke r0.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>(":");

        virtualinvoke r0.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        virtualinvoke r0.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.Object)>(r3);

        virtualinvoke r0.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

     label1:
        return;
    }

    static void lambda$invalidateAllExecutionStatsLocked$2(long, com.android.server.utils.quota.CountQuotaTracker$ExecutionStats)
    {
        long l0;
        com.android.server.utils.quota.CountQuotaTracker$ExecutionStats r0;

        l0 := @parameter0: long;

        r0 := @parameter1: com.android.server.utils.quota.CountQuotaTracker$ExecutionStats;

        if r0 == null goto label1;

        r0.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: long expirationTimeElapsed> = l0;

     label1:
        return;
    }

    static android.util.LongArrayQueue lambda$new$4(java.lang.Void)
    {
        java.lang.Void r0;
        android.util.LongArrayQueue $r1;

        r0 := @parameter0: java.lang.Void;

        $r1 = new android.util.LongArrayQueue;

        specialinvoke $r1.<android.util.LongArrayQueue: void <init>()>();

        return $r1;
    }

    static com.android.server.utils.quota.CountQuotaTracker$ExecutionStats lambda$new$5(java.lang.Void)
    {
        java.lang.Void r0;
        com.android.server.utils.quota.CountQuotaTracker$ExecutionStats $r1;

        r0 := @parameter0: java.lang.Void;

        $r1 = new com.android.server.utils.quota.CountQuotaTracker$ExecutionStats;

        specialinvoke $r1.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: void <init>()>();

        return $r1;
    }

    private boolean maybeUpdateStatusForPkgLocked(int, java.lang.String)
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        int i0;
        java.lang.String r1, $r9, $r11, r13;
        com.android.server.utils.quota.UptcMap $r3, $r4, $r5;
        boolean $z0, $z1;
        com.android.server.utils.quota._$$Lambda$CountQuotaTracker$4HkN_fmWmlx7JUhhSIp_xzSqM_k $r6;
        java.lang.StringBuilder $r7;
        android.util.ArrayMap r12;
        boolean[] r15;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r3 = new com.android.server.utils.quota.UptcMap;

        specialinvoke $r3.<com.android.server.utils.quota.UptcMap: void <init>()>();

        $r4 = r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.UptcMap mEventTimes>;

        $z0 = virtualinvoke $r4.<com.android.server.utils.quota.UptcMap: boolean contains(int,java.lang.String)>(i0, r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r5 = r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.UptcMap mEventTimes>;

        r12 = virtualinvoke $r5.<com.android.server.utils.quota.UptcMap: android.util.ArrayMap get(int,java.lang.String)>(i0, r1);

        if r12 != null goto label2;

        r13 = <com.android.server.utils.quota.CountQuotaTracker: java.lang.String TAG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Events map was null even though mEventTimes said it contained ");

        $r9 = staticinvoke <com.android.server.utils.quota.Uptc: java.lang.String string(int,java.lang.String,java.lang.String)>(i0, r1, null);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>(r13, $r11);

        return 0;

     label2:
        r15 = newarray (boolean)[1];

        r15[0] = 0;

        $r6 = new com.android.server.utils.quota._$$Lambda$CountQuotaTracker$4HkN_fmWmlx7JUhhSIp_xzSqM_k;

        specialinvoke $r6.<com.android.server.utils.quota._$$Lambda$CountQuotaTracker$4HkN_fmWmlx7JUhhSIp_xzSqM_k: void <init>(com.android.server.utils.quota.CountQuotaTracker,com.android.server.utils.quota.UptcMap,int,java.lang.String,boolean[])>(r0, $r3, i0, r1, r15);

        virtualinvoke r12.<android.util.ArrayMap: void forEach(java.util.function.BiConsumer)>($r6);

        $z1 = r15[0];

        return $z1;
    }

    private boolean maybeUpdateStatusForUptcLocked(int, java.lang.String, java.lang.String)
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        int i0;
        java.lang.String r1, r2;
        boolean z0, $z1, $z2, z3;
        com.android.server.utils.quota.CountQuotaTracker$ExecutionStats $r3, $r4;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = specialinvoke r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.CountQuotaTracker$ExecutionStats getExecutionStatsLocked(int,java.lang.String,java.lang.String,boolean)>(i0, r1, r2, 0);

        z0 = specialinvoke r0.<com.android.server.utils.quota.CountQuotaTracker: boolean isWithinQuotaLocked(com.android.server.utils.quota.CountQuotaTracker$ExecutionStats)>($r3);

        $z1 = virtualinvoke r0.<com.android.server.utils.quota.CountQuotaTracker: boolean isEnabledLocked()>();

        if $z1 == 0 goto label2;

        $z2 = virtualinvoke r0.<com.android.server.utils.quota.CountQuotaTracker: boolean isQuotaFreeLocked(int,java.lang.String)>(i0, r1);

        if $z2 == 0 goto label1;

        goto label2;

     label1:
        $r4 = specialinvoke r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.CountQuotaTracker$ExecutionStats getExecutionStatsLocked(int,java.lang.String,java.lang.String,boolean)>(i0, r1, r2, 1);

        z3 = specialinvoke r0.<com.android.server.utils.quota.CountQuotaTracker: boolean isWithinQuotaLocked(com.android.server.utils.quota.CountQuotaTracker$ExecutionStats)>($r4);

        goto label3;

     label2:
        z3 = 1;

     label3:
        if z3 != 0 goto label4;

        virtualinvoke r0.<com.android.server.utils.quota.CountQuotaTracker: void maybeScheduleStartAlarmLocked(int,java.lang.String,java.lang.String)>(i0, r1, r2);

        goto label5;

     label4:
        virtualinvoke r0.<com.android.server.utils.quota.CountQuotaTracker: void cancelScheduledStartAlarmLocked(int,java.lang.String,java.lang.String)>(i0, r1, r2);

     label5:
        if z0 == z3 goto label6;

        virtualinvoke r0.<com.android.server.utils.quota.CountQuotaTracker: void postQuotaStatusChanged(int,java.lang.String,java.lang.String)>(i0, r1, r2);

        return 1;

     label6:
        return 0;
    }

    public volatile void clear()
    {
        com.android.server.utils.quota.CountQuotaTracker r0;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        specialinvoke r0.<com.android.server.utils.quota.QuotaTracker: void clear()>();

        return;
    }

    void deleteObsoleteEventsLocked()
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        com.android.server.utils.quota.CountQuotaTracker$DeleteEventTimesFunctor $r1;
        com.android.server.utils.quota.UptcMap $r2;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        $r2 = r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.UptcMap mEventTimes>;

        $r1 = r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.CountQuotaTracker$DeleteEventTimesFunctor mDeleteOldEventTimesFunctor>;

        virtualinvoke $r2.<com.android.server.utils.quota.UptcMap: void forEach(java.util.function.Consumer)>($r1);

        return;
    }

    void dropEverythingLocked()
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        com.android.server.utils.quota.UptcMap $r1, $r2;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        $r1 = r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.UptcMap mExecutionStatsCache>;

        virtualinvoke $r1.<com.android.server.utils.quota.UptcMap: void clear()>();

        $r2 = r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.UptcMap mEventTimes>;

        virtualinvoke $r2.<com.android.server.utils.quota.UptcMap: void clear()>();

        return;
    }

    public void dump(android.util.proto.ProtoOutputStream, long)
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        java.lang.Object r1, $r5, $r7, $r10;
        long l0, $l3, l4, l5;
        com.android.server.utils.quota.UptcMap r2;
        android.util.ArrayMap $r3, $r4, $r6, $r9;
        int $i1, $i2, i6;
        java.lang.Integer $r8;
        java.lang.Long $r11;
        java.lang.Throwable $r12;
        android.util.proto.ProtoOutputStream r13;
        com.android.server.utils.quota.Category r14;
        com.android.server.utils.quota._$$Lambda$CountQuotaTracker$cN0cbPv_XamMCffwzXBT1y5wiSs r15;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        r13 := @parameter0: android.util.proto.ProtoOutputStream;

        l4 := @parameter1: long;

        l5 = virtualinvoke r13.<android.util.proto.ProtoOutputStream: long start(long)>(l4);

        r1 = r0.<com.android.server.utils.quota.CountQuotaTracker: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.server.utils.quota.QuotaTracker: void dump(android.util.proto.ProtoOutputStream,long)>(r13, 1146756268033L);

     label2:
        i6 = 0;

     label3:
        $r3 = r0.<com.android.server.utils.quota.CountQuotaTracker: android.util.ArrayMap mCategoryCountWindowSizesMs>;

        $i1 = virtualinvoke $r3.<android.util.ArrayMap: int size()>();

        if i6 >= $i1 goto label5;

        $r4 = r0.<com.android.server.utils.quota.CountQuotaTracker: android.util.ArrayMap mCategoryCountWindowSizesMs>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i6);

        r14 = (com.android.server.utils.quota.Category) $r5;

        l0 = virtualinvoke r13.<android.util.proto.ProtoOutputStream: long start(long)>(2246267895810L);

        virtualinvoke r14.<com.android.server.utils.quota.Category: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r13, 1146756268033L);

        $r6 = r0.<com.android.server.utils.quota.CountQuotaTracker: android.util.ArrayMap mMaxCategoryCounts>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r14);

        $r8 = (java.lang.Integer) $r7;

        $i2 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        virtualinvoke r13.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464258L, $i2);

        $r9 = r0.<com.android.server.utils.quota.CountQuotaTracker: android.util.ArrayMap mCategoryCountWindowSizesMs>;

        $r10 = virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r14);

        $r11 = (java.lang.Long) $r10;

        $l3 = virtualinvoke $r11.<java.lang.Long: long longValue()>();

        virtualinvoke r13.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529667L, $l3);

        virtualinvoke r13.<android.util.proto.ProtoOutputStream: void end(long)>(l0);

     label4:
        i6 = i6 + 1;

        goto label3;

     label5:
        r2 = r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.UptcMap mExecutionStatsCache>;

        r15 = new com.android.server.utils.quota._$$Lambda$CountQuotaTracker$cN0cbPv_XamMCffwzXBT1y5wiSs;

        specialinvoke r15.<com.android.server.utils.quota._$$Lambda$CountQuotaTracker$cN0cbPv_XamMCffwzXBT1y5wiSs: void <init>(com.android.server.utils.quota.CountQuotaTracker,android.util.proto.ProtoOutputStream)>(r0, r13);

        virtualinvoke r2.<com.android.server.utils.quota.UptcMap: void forEach(com.android.server.utils.quota.UptcMap$UptcDataConsumer)>(r15);

        virtualinvoke r13.<android.util.proto.ProtoOutputStream: void end(long)>(l5);

        exitmonitor r1;

     label6:
        return;

     label7:
        $r12 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r12;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void dump(com.android.internal.util.IndentingPrintWriter)
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        java.lang.Object r1, $r13, $r15, $r17;
        int i0, i2;
        java.lang.String $r2, $r19;
        android.util.ArrayMap $r9, $r12, $r14, $r16;
        java.lang.Long $r18;
        long $l1;
        java.lang.Throwable $r20;
        com.android.internal.util.IndentingPrintWriter r21;
        com.android.server.utils.quota.UptcMap r22, r24;
        com.android.server.utils.quota._$$Lambda$CountQuotaTracker$txEUpjjjfBHHIwaoIrBUanoDtpI r23;
        com.android.server.utils.quota._$$Lambda$CountQuotaTracker$JPiaaEfenxacor9EsTZts7yjmfo r25;
        com.android.server.utils.quota.Category r26;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        r21 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        $r2 = <com.android.server.utils.quota.CountQuotaTracker: java.lang.String TAG>;

        virtualinvoke r21.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>($r2);

        virtualinvoke r21.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>(":");

        virtualinvoke r21.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        r1 = r0.<com.android.server.utils.quota.CountQuotaTracker: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        specialinvoke r0.<com.android.server.utils.quota.QuotaTracker: void dump(com.android.internal.util.IndentingPrintWriter)>(r21);

        virtualinvoke r21.<com.android.internal.util.IndentingPrintWriter: void println()>();

        virtualinvoke r21.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Instantaneous events:");

        virtualinvoke r21.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        r22 = r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.UptcMap mEventTimes>;

        r23 = new com.android.server.utils.quota._$$Lambda$CountQuotaTracker$txEUpjjjfBHHIwaoIrBUanoDtpI;

        specialinvoke r23.<com.android.server.utils.quota._$$Lambda$CountQuotaTracker$txEUpjjjfBHHIwaoIrBUanoDtpI: void <init>(com.android.internal.util.IndentingPrintWriter)>(r21);

        virtualinvoke r22.<com.android.server.utils.quota.UptcMap: void forEach(com.android.server.utils.quota.UptcMap$UptcDataConsumer)>(r23);

        virtualinvoke r21.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke r21.<com.android.internal.util.IndentingPrintWriter: void println()>();

        virtualinvoke r21.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Cached execution stats:");

        virtualinvoke r21.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        r24 = r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.UptcMap mExecutionStatsCache>;

        r25 = new com.android.server.utils.quota._$$Lambda$CountQuotaTracker$JPiaaEfenxacor9EsTZts7yjmfo;

        specialinvoke r25.<com.android.server.utils.quota._$$Lambda$CountQuotaTracker$JPiaaEfenxacor9EsTZts7yjmfo: void <init>(com.android.internal.util.IndentingPrintWriter)>(r21);

        virtualinvoke r24.<com.android.server.utils.quota.UptcMap: void forEach(com.android.server.utils.quota.UptcMap$UptcDataConsumer)>(r25);

        virtualinvoke r21.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke r21.<com.android.internal.util.IndentingPrintWriter: void println()>();

        virtualinvoke r21.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Limits:");

        virtualinvoke r21.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        $r9 = r0.<com.android.server.utils.quota.CountQuotaTracker: android.util.ArrayMap mCategoryCountWindowSizesMs>;

        i0 = virtualinvoke $r9.<android.util.ArrayMap: int size()>();

     label02:
        i2 = 0;

     label03:
        if i2 >= i0 goto label06;

     label04:
        $r12 = r0.<com.android.server.utils.quota.CountQuotaTracker: android.util.ArrayMap mCategoryCountWindowSizesMs>;

        $r13 = virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i2);

        r26 = (com.android.server.utils.quota.Category) $r13;

        virtualinvoke r21.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.Object)>(r26);

        virtualinvoke r21.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>(": ");

        $r14 = r0.<com.android.server.utils.quota.CountQuotaTracker: android.util.ArrayMap mMaxCategoryCounts>;

        $r15 = virtualinvoke $r14.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r26);

        virtualinvoke r21.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.Object)>($r15);

        virtualinvoke r21.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>(" events in ");

        $r16 = r0.<com.android.server.utils.quota.CountQuotaTracker: android.util.ArrayMap mCategoryCountWindowSizesMs>;

        $r17 = virtualinvoke $r16.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r26);

        $r18 = (java.lang.Long) $r17;

        $l1 = virtualinvoke $r18.<java.lang.Long: long longValue()>();

        $r19 = staticinvoke <android.util.TimeUtils: java.lang.String formatDuration(long)>($l1);

        virtualinvoke r21.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r19);

     label05:
        i2 = i2 + 1;

        goto label03;

     label06:
        virtualinvoke r21.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

     label07:
        exitmonitor r1;

     label08:
        virtualinvoke r21.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        return;

     label09:
        $r20 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r20;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    android.util.LongArrayQueue getEvents(int, java.lang.String, java.lang.String)
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        int i0;
        java.lang.String r1, r2;
        com.android.server.utils.quota.UptcMap $r3;
        java.lang.Object $r4;
        android.util.LongArrayQueue $r5;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.UptcMap mEventTimes>;

        $r4 = virtualinvoke $r3.<com.android.server.utils.quota.UptcMap: java.lang.Object get(int,java.lang.String,java.lang.String)>(i0, r1, r2);

        $r5 = (android.util.LongArrayQueue) $r4;

        return $r5;
    }

    com.android.server.utils.quota.CountQuotaTracker$ExecutionStats getExecutionStatsLocked(int, java.lang.String, java.lang.String)
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        int i0;
        java.lang.String r1, r2;
        com.android.server.utils.quota.CountQuotaTracker$ExecutionStats $r3;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = specialinvoke r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.CountQuotaTracker$ExecutionStats getExecutionStatsLocked(int,java.lang.String,java.lang.String,boolean)>(i0, r1, r2, 1);

        return $r3;
    }

    android.os.Handler getHandler()
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        android.os.Handler $r1;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        $r1 = r0.<com.android.server.utils.quota.CountQuotaTracker: android.os.Handler mHandler>;

        return $r1;
    }

    long getInQuotaTimeElapsedLocked(int, java.lang.String, java.lang.String)
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        int i0;
        java.lang.String r1, r2;
        com.android.server.utils.quota.CountQuotaTracker$ExecutionStats $r3;
        long $l1;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = virtualinvoke r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.CountQuotaTracker$ExecutionStats getExecutionStatsLocked(int,java.lang.String,java.lang.String)>(i0, r1, r2);

        $l1 = $r3.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: long inQuotaTimeElapsed>;

        return $l1;
    }

    public int getLimit(com.android.server.utils.quota.Category)
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        java.lang.Object r1, $r4;
        int i0;
        java.lang.StringBuilder r2;
        android.util.ArrayMap $r3;
        java.lang.String $r8;
        java.lang.Throwable $r9;
        com.android.server.utils.quota.Category r10;
        java.lang.Integer r11;
        java.lang.IllegalArgumentException r12;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        r10 := @parameter0: com.android.server.utils.quota.Category;

        r1 = r0.<com.android.server.utils.quota.CountQuotaTracker: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.utils.quota.CountQuotaTracker: android.util.ArrayMap mMaxCategoryCounts>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r10);

        r11 = (java.lang.Integer) $r4;

     label2:
        if r11 == null goto label5;

     label3:
        i0 = virtualinvoke r11.<java.lang.Integer: int intValue()>();

        exitmonitor r1;

     label4:
        return i0;

     label5:
        r12 = new java.lang.IllegalArgumentException;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Limit for ");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not defined");

        $r8 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw r12;

     label6:
        $r9 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public long getWindowSizeMs(com.android.server.utils.quota.Category)
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        java.lang.Object r1, $r4;
        long l0;
        java.lang.IllegalArgumentException r2;
        android.util.ArrayMap $r3;
        java.lang.String $r8;
        java.lang.Throwable $r9;
        com.android.server.utils.quota.Category r10;
        java.lang.Long r11;
        java.lang.StringBuilder r12;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        r10 := @parameter0: com.android.server.utils.quota.Category;

        r1 = r0.<com.android.server.utils.quota.CountQuotaTracker: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.utils.quota.CountQuotaTracker: android.util.ArrayMap mCategoryCountWindowSizesMs>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r10);

        r11 = (java.lang.Long) $r4;

     label2:
        if r11 == null goto label5;

     label3:
        l0 = virtualinvoke r11.<java.lang.Long: long longValue()>();

        exitmonitor r1;

     label4:
        return l0;

     label5:
        r2 = new java.lang.IllegalArgumentException;

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Limit for ");

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not defined");

        $r8 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw r2;

     label6:
        $r9 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    void handleRemovedAppLocked(java.lang.String, int)
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        java.lang.String r1, $r6;
        com.android.server.utils.quota.UptcMap $r2, $r4;
        int i1, i2;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        r1 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        if r1 != null goto label1;

        $r6 = <com.android.server.utils.quota.CountQuotaTracker: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>($r6, "Told app removed but given null package name.");

        return;

     label1:
        i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

        $r2 = r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.UptcMap mEventTimes>;

        virtualinvoke $r2.<com.android.server.utils.quota.UptcMap: android.util.ArrayMap delete(int,java.lang.String)>(i2, r1);

        $r4 = r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.UptcMap mExecutionStatsCache>;

        virtualinvoke $r4.<com.android.server.utils.quota.UptcMap: android.util.ArrayMap delete(int,java.lang.String)>(i2, r1);

        return;
    }

    void handleRemovedUserLocked(int)
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        int i0;
        com.android.server.utils.quota.UptcMap $r1, $r2;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.UptcMap mEventTimes>;

        virtualinvoke $r1.<com.android.server.utils.quota.UptcMap: void delete(int)>(i0);

        $r2 = r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.UptcMap mExecutionStatsCache>;

        virtualinvoke $r2.<com.android.server.utils.quota.UptcMap: void delete(int)>(i0);

        return;
    }

    public volatile boolean isWithinQuota(int, java.lang.String, java.lang.String)
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        int i0;
        java.lang.String r1, r2;
        boolean $z0;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.utils.quota.QuotaTracker: boolean isWithinQuota(int,java.lang.String,java.lang.String)>(i0, r1, r2);

        return $z0;
    }

    boolean isWithinQuotaLocked(int, java.lang.String, java.lang.String)
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        int i0;
        java.lang.String r1, r2;
        boolean $z0, $z1, $z2;
        com.android.server.utils.quota.CountQuotaTracker$ExecutionStats $r3;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $z0 = virtualinvoke r0.<com.android.server.utils.quota.CountQuotaTracker: boolean isEnabledLocked()>();

        if $z0 != 0 goto label1;

        return 1;

     label1:
        $z1 = virtualinvoke r0.<com.android.server.utils.quota.CountQuotaTracker: boolean isQuotaFreeLocked(int,java.lang.String)>(i0, r1);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $r3 = virtualinvoke r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.CountQuotaTracker$ExecutionStats getExecutionStatsLocked(int,java.lang.String,java.lang.String)>(i0, r1, r2);

        $z2 = specialinvoke r0.<com.android.server.utils.quota.CountQuotaTracker: boolean isWithinQuotaLocked(com.android.server.utils.quota.CountQuotaTracker$ExecutionStats)>($r3);

        return $z2;
    }

    public void lambda$dump$8$CountQuotaTracker(android.util.proto.ProtoOutputStream, int, java.lang.String, java.lang.String, com.android.server.utils.quota.CountQuotaTracker$ExecutionStats)
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        android.util.proto.ProtoOutputStream r1;
        java.lang.String r2, r7;
        com.android.server.utils.quota.CountQuotaTracker$ExecutionStats r3;
        boolean z0;
        long l0, $l1, $l2, $l5, $l7, l10, l11;
        com.android.server.utils.quota.Uptc $r4;
        com.android.server.utils.quota.UptcMap $r5;
        java.lang.Object $r6;
        int $i3, $i4, $i6, i8, i9;
        android.util.LongArrayQueue r8;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        i8 := @parameter1: int;

        r7 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: com.android.server.utils.quota.CountQuotaTracker$ExecutionStats;

        z0 = virtualinvoke r0.<com.android.server.utils.quota.CountQuotaTracker: boolean isIndividualQuotaFreeLocked(int,java.lang.String)>(i8, r7);

        l0 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(2246267895811L);

        $r4 = new com.android.server.utils.quota.Uptc;

        specialinvoke $r4.<com.android.server.utils.quota.Uptc: void <init>(int,java.lang.String,java.lang.String)>(i8, r7, r2);

        virtualinvoke $r4.<com.android.server.utils.quota.Uptc: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r1, 1146756268033L);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366146L, z0);

        $r5 = r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.UptcMap mEventTimes>;

        $r6 = virtualinvoke $r5.<com.android.server.utils.quota.UptcMap: java.lang.Object get(int,java.lang.String,java.lang.String)>(i8, r7, r2);

        r8 = (android.util.LongArrayQueue) $r6;

        if r8 == null goto label2;

        $i6 = virtualinvoke r8.<android.util.LongArrayQueue: int size()>();

        i9 = $i6 - 1;

     label1:
        if i9 < 0 goto label2;

        l10 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(2246267895811L);

        $l7 = virtualinvoke r8.<android.util.LongArrayQueue: long get(int)>(i9);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529665L, $l7);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l10);

        i9 = i9 + -1;

        goto label1;

     label2:
        l11 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(2246267895812L);

        $l1 = r3.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: long expirationTimeElapsed>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529665L, $l1);

        $l2 = r3.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: long windowSizeMs>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529666L, $l2);

        $i3 = r3.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: int countLimit>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464259L, $i3);

        $i4 = r3.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: int countInWindow>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464260L, $i4);

        $l5 = r3.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: long inQuotaTimeElapsed>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529669L, $l5);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l11);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l0);

        return;
    }

    public void lambda$maybeUpdateAllQuotaStatusLocked$1$CountQuotaTracker(com.android.server.utils.quota.UptcMap, int, java.lang.String, java.lang.String, android.util.LongArrayQueue)
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        com.android.server.utils.quota.UptcMap r1;
        int i0;
        java.lang.String r2, r3;
        android.util.LongArrayQueue r4;
        boolean $z0;
        java.lang.Boolean $r5;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        r1 := @parameter0: com.android.server.utils.quota.UptcMap;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.util.LongArrayQueue;

        $z0 = virtualinvoke r1.<com.android.server.utils.quota.UptcMap: boolean contains(int,java.lang.String,java.lang.String)>(i0, r2, r3);

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.android.server.utils.quota.CountQuotaTracker: boolean maybeUpdateStatusForUptcLocked(int,java.lang.String,java.lang.String)>(i0, r2, r3);

        $r5 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke r1.<com.android.server.utils.quota.UptcMap: void add(int,java.lang.String,java.lang.String,java.lang.Object)>(i0, r2, r3, $r5);

     label1:
        return;
    }

    public void lambda$maybeUpdateStatusForPkgLocked$3$CountQuotaTracker(com.android.server.utils.quota.UptcMap, int, java.lang.String, boolean[], java.lang.String, android.util.LongArrayQueue)
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        com.android.server.utils.quota.UptcMap r1;
        int i0;
        java.lang.String r2, r4;
        boolean[] r3;
        android.util.LongArrayQueue r5;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Boolean $r6;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        r1 := @parameter0: com.android.server.utils.quota.UptcMap;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: boolean[];

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: android.util.LongArrayQueue;

        $z0 = virtualinvoke r1.<com.android.server.utils.quota.UptcMap: boolean contains(int,java.lang.String,java.lang.String)>(i0, r2, r4);

        if $z0 != 0 goto label1;

        $z1 = r3[0];

        $z2 = specialinvoke r0.<com.android.server.utils.quota.CountQuotaTracker: boolean maybeUpdateStatusForUptcLocked(int,java.lang.String,java.lang.String)>(i0, r2, r4);

        $z3 = $z1 | $z2;

        r3[0] = $z3;

        $r6 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke r1.<com.android.server.utils.quota.UptcMap: void add(int,java.lang.String,java.lang.String,java.lang.Object)>(i0, r2, r4, $r6);

     label1:
        return;
    }

    public void lambda$new$0$CountQuotaTracker()
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        android.os.Handler $r1;
        android.os.Message $r2;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        $r1 = r0.<com.android.server.utils.quota.CountQuotaTracker: android.os.Handler mHandler>;

        $r2 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int)>(1);

        virtualinvoke $r2.<android.os.Message: void sendToTarget()>();

        return;
    }

    void maybeScheduleCleanupAlarmLocked()
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        long l0, $l1, $l2, $l5, $l6, $l7, l9, l10;
        com.android.server.utils.quota.QuotaTracker$Injector $r1;
        byte $b3, $b4, $b8;
        com.android.server.utils.quota.CountQuotaTracker$EarliestEventTimeFunctor $r2, $r3, $r5;
        com.android.server.utils.quota.UptcMap $r4;
        android.app.AlarmManager$OnAlarmListener $r6;
        java.lang.String $r7;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        $l1 = r0.<com.android.server.utils.quota.CountQuotaTracker: long mNextCleanupTimeElapsed>;

        $r1 = r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.QuotaTracker$Injector mInjector>;

        $l2 = virtualinvoke $r1.<com.android.server.utils.quota.QuotaTracker$Injector: long getElapsedRealtime()>();

        $b3 = $l1 cmp $l2;

        if $b3 <= 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.CountQuotaTracker$EarliestEventTimeFunctor mEarliestEventTimeFunctor>;

        virtualinvoke $r2.<com.android.server.utils.quota.CountQuotaTracker$EarliestEventTimeFunctor: void reset()>();

        $r4 = r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.UptcMap mEventTimes>;

        $r3 = r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.CountQuotaTracker$EarliestEventTimeFunctor mEarliestEventTimeFunctor>;

        virtualinvoke $r4.<com.android.server.utils.quota.UptcMap: void forEach(java.util.function.Consumer)>($r3);

        $r5 = r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.CountQuotaTracker$EarliestEventTimeFunctor mEarliestEventTimeFunctor>;

        l9 = $r5.<com.android.server.utils.quota.CountQuotaTracker$EarliestEventTimeFunctor: long earliestTimeElapsed>;

        $b4 = l9 cmp 9223372036854775807L;

        if $b4 != 0 goto label2;

        return;

     label2:
        $l5 = r0.<com.android.server.utils.quota.CountQuotaTracker: long mMaxPeriodMs>;

        l0 = $l5 + l9;

        l10 = l0;

        $l6 = r0.<com.android.server.utils.quota.CountQuotaTracker: long mNextCleanupTimeElapsed>;

        $l7 = l0 - $l6;

        $b8 = $l7 cmp 600000L;

        if $b8 > 0 goto label3;

        l10 = l0 + 600000L;

     label3:
        r0.<com.android.server.utils.quota.CountQuotaTracker: long mNextCleanupTimeElapsed> = l10;

        $r7 = <com.android.server.utils.quota.CountQuotaTracker: java.lang.String ALARM_TAG_CLEANUP>;

        $r6 = r0.<com.android.server.utils.quota.CountQuotaTracker: android.app.AlarmManager$OnAlarmListener mEventCleanupAlarmListener>;

        virtualinvoke r0.<com.android.server.utils.quota.CountQuotaTracker: void scheduleAlarm(int,long,java.lang.String,android.app.AlarmManager$OnAlarmListener)>(3, l10, $r7, $r6);

        return;
    }

    void maybeUpdateAllQuotaStatusLocked()
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        com.android.server.utils.quota.UptcMap $r2, $r4;
        com.android.server.utils.quota._$$Lambda$CountQuotaTracker$KhSu52UVcmIwsRTTPJOPkxx5QBg $r3;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        $r2 = new com.android.server.utils.quota.UptcMap;

        specialinvoke $r2.<com.android.server.utils.quota.UptcMap: void <init>()>();

        $r4 = r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.UptcMap mEventTimes>;

        $r3 = new com.android.server.utils.quota._$$Lambda$CountQuotaTracker$KhSu52UVcmIwsRTTPJOPkxx5QBg;

        specialinvoke $r3.<com.android.server.utils.quota._$$Lambda$CountQuotaTracker$KhSu52UVcmIwsRTTPJOPkxx5QBg: void <init>(com.android.server.utils.quota.CountQuotaTracker,com.android.server.utils.quota.UptcMap)>(r0, $r2);

        virtualinvoke $r4.<com.android.server.utils.quota.UptcMap: void forEach(com.android.server.utils.quota.UptcMap$UptcDataConsumer)>($r3);

        return;
    }

    void maybeUpdateQuotaStatus(int, java.lang.String, java.lang.String)
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        int i0;
        java.lang.String r1, r4;
        java.lang.Object r2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        i0 := @parameter0: int;

        r4 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 = r0.<com.android.server.utils.quota.CountQuotaTracker: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        specialinvoke r0.<com.android.server.utils.quota.CountQuotaTracker: boolean maybeUpdateStatusForUptcLocked(int,java.lang.String,java.lang.String)>(i0, r4, r1);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean noteEvent(int, java.lang.String, java.lang.String)
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        int i0, $i3, $i4, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i18;
        java.lang.String r1, r4, $r9, $r13, r15;
        java.lang.Object r2, $r8;
        long l1, l2, $l5, $l6, $l7, $l8, $l19, $l20, $l21, $l22, $l23;
        com.android.server.utils.quota.CountQuotaTracker$ExecutionStats r3;
        boolean z0, $z1, $z2;
        com.android.server.utils.quota.QuotaTracker$Injector $r5;
        java.util.function.Function $r6;
        com.android.server.utils.quota.UptcMap $r7;
        byte $b24;
        java.lang.Throwable $r14;
        android.util.LongArrayQueue r16;
        java.lang.StringBuilder r17;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        i0 := @parameter0: int;

        r15 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 = r0.<com.android.server.utils.quota.CountQuotaTracker: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        $z1 = virtualinvoke r0.<com.android.server.utils.quota.CountQuotaTracker: boolean isEnabledLocked()>();

        if $z1 == 0 goto label12;

        $z2 = virtualinvoke r0.<com.android.server.utils.quota.CountQuotaTracker: boolean isQuotaFreeLocked(int,java.lang.String)>(i0, r15);

        if $z2 == 0 goto label03;

     label02:
        goto label12;

     label03:
        $r5 = r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.QuotaTracker$Injector mInjector>;

        l1 = virtualinvoke $r5.<com.android.server.utils.quota.QuotaTracker$Injector: long getElapsedRealtime()>();

        $r7 = r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.UptcMap mEventTimes>;

        $r6 = r0.<com.android.server.utils.quota.CountQuotaTracker: java.util.function.Function mCreateLongArrayQueue>;

        $r8 = virtualinvoke $r7.<com.android.server.utils.quota.UptcMap: java.lang.Object getOrCreate(int,java.lang.String,java.lang.String,java.util.function.Function)>(i0, r15, r1, $r6);

        r16 = (android.util.LongArrayQueue) $r8;

        virtualinvoke r16.<android.util.LongArrayQueue: void addLast(long)>(l1);

        r3 = virtualinvoke r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.CountQuotaTracker$ExecutionStats getExecutionStatsLocked(int,java.lang.String,java.lang.String)>(i0, r15, r1);

        $i3 = r3.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: int countInWindow>;

        $i4 = $i3 + 1;

        r3.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: int countInWindow> = $i4;

        $l7 = r3.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: long expirationTimeElapsed>;

        $l5 = r3.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: long windowSizeMs>;

        $l6 = $l5 + l1;

        $l8 = staticinvoke <java.lang.Math: long min(long,long)>($l7, $l6);

        r3.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: long expirationTimeElapsed> = $l8;

        $i10 = r3.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: int countInWindow>;

        $i9 = r3.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: int countLimit>;

        if $i10 != $i9 goto label08;

        l2 = r3.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: long windowSizeMs>;

     label04:
        $i18 = virtualinvoke r16.<android.util.LongArrayQueue: int size()>();

        if $i18 <= 0 goto label06;

        $l22 = virtualinvoke r16.<android.util.LongArrayQueue: long peekFirst()>();

        $l23 = l1 - l2;

        $b24 = $l22 cmp $l23;

        if $b24 >= 0 goto label06;

        virtualinvoke r16.<android.util.LongArrayQueue: long removeFirst()>();

     label05:
        goto label04;

     label06:
        $l19 = virtualinvoke r16.<android.util.LongArrayQueue: long peekFirst()>();

        $l20 = r3.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: long windowSizeMs>;

        $l21 = $l19 + $l20;

        r3.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: long inQuotaTimeElapsed> = $l21;

        virtualinvoke r0.<com.android.server.utils.quota.CountQuotaTracker: void postQuotaStatusChanged(int,java.lang.String,java.lang.String)>(i0, r15, r1);

     label07:
        goto label10;

     label08:
        $i11 = r3.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: int countLimit>;

        if $i11 <= 9 goto label10;

        $i15 = r3.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: int countInWindow>;

        $i12 = r3.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: int countLimit>;

        $i13 = $i12 * 4;

        $i14 = $i13 / 5;

        if $i15 != $i14 goto label10;

        r4 = <com.android.server.utils.quota.CountQuotaTracker: java.lang.String TAG>;

        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        $r9 = staticinvoke <com.android.server.utils.quota.Uptc: java.lang.String string(int,java.lang.String,java.lang.String)>(i0, r15, r1);

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has reached 80% of it\'s count limit of ");

        $i16 = r3.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: int countLimit>;

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i16);

        $r13 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r4, $r13);

     label09:
        goto label10;

     label10:
        virtualinvoke r0.<com.android.server.utils.quota.CountQuotaTracker: void maybeScheduleCleanupAlarmLocked()>();

        z0 = specialinvoke r0.<com.android.server.utils.quota.CountQuotaTracker: boolean isWithinQuotaLocked(com.android.server.utils.quota.CountQuotaTracker$ExecutionStats)>(r3);

        exitmonitor r2;

     label11:
        return z0;

     label12:
        exitmonitor r2;

     label13:
        return 1;

     label14:
        $r14 := @caughtexception;

     label15:
        exitmonitor r2;

     label16:
        throw $r14;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    void onQuotaFreeChangedLocked(int, java.lang.String, boolean)
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        int i0;
        java.lang.String r1;
        boolean z0;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.server.utils.quota.CountQuotaTracker: boolean maybeUpdateStatusForPkgLocked(int,java.lang.String)>(i0, r1);

        return;
    }

    void onQuotaFreeChangedLocked(boolean)
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        boolean z0;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        z0 := @parameter0: boolean;

        return;
    }

    public volatile void registerQuotaChangeListener(com.android.server.utils.quota.QuotaChangeListener)
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        com.android.server.utils.quota.QuotaChangeListener r1;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        r1 := @parameter0: com.android.server.utils.quota.QuotaChangeListener;

        specialinvoke r0.<com.android.server.utils.quota.QuotaTracker: void registerQuotaChangeListener(com.android.server.utils.quota.QuotaChangeListener)>(r1);

        return;
    }

    public void setCountLimit(com.android.server.utils.quota.Category, int, long)
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        int i0, $i3;
        java.lang.Object r1, $r6, $r9;
        java.lang.Integer r2, $r5;
        java.lang.IllegalArgumentException $r3;
        byte $b1, $b5;
        android.util.ArrayMap $r4, $r7;
        long $l2, $l4, l6, l7, $l8;
        java.lang.Long $r8, r12;
        java.lang.Throwable $r10;
        com.android.server.utils.quota.Category r11;
        com.android.server.utils.quota.CountQuotaTracker$DeleteEventTimesFunctor $r13, $r14;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        r11 := @parameter0: com.android.server.utils.quota.Category;

        i0 := @parameter1: int;

        l6 := @parameter2: long;

        if i0 < 0 goto label10;

        $b1 = l6 cmp 0L;

        if $b1 < 0 goto label10;

        r1 = r0.<com.android.server.utils.quota.CountQuotaTracker: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r4 = r0.<com.android.server.utils.quota.CountQuotaTracker: android.util.ArrayMap mMaxCategoryCounts>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, $r5);

        r2 = (java.lang.Integer) $r6;

        $l2 = staticinvoke <java.lang.Math: long min(long,long)>(l6, 2592000000L);

        l7 = staticinvoke <java.lang.Math: long max(long,long)>(30000L, $l2);

        $r7 = r0.<com.android.server.utils.quota.CountQuotaTracker: android.util.ArrayMap mCategoryCountWindowSizesMs>;

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l7);

        $r9 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, $r8);

        r12 = (java.lang.Long) $r9;

     label02:
        if r2 == null goto label05;

        if r12 == null goto label05;

     label03:
        $i3 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        if $i3 != i0 goto label05;

        $l4 = virtualinvoke r12.<java.lang.Long: long longValue()>();

        $b5 = $l4 cmp l7;

        if $b5 != 0 goto label05;

        exitmonitor r1;

     label04:
        return;

     label05:
        $r13 = r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.CountQuotaTracker$DeleteEventTimesFunctor mDeleteOldEventTimesFunctor>;

        staticinvoke <com.android.server.utils.quota.CountQuotaTracker$DeleteEventTimesFunctor: void access$000(com.android.server.utils.quota.CountQuotaTracker$DeleteEventTimesFunctor)>($r13);

        $r14 = r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.CountQuotaTracker$DeleteEventTimesFunctor mDeleteOldEventTimesFunctor>;

        $l8 = staticinvoke <com.android.server.utils.quota.CountQuotaTracker$DeleteEventTimesFunctor: long access$100(com.android.server.utils.quota.CountQuotaTracker$DeleteEventTimesFunctor)>($r14);

        r0.<com.android.server.utils.quota.CountQuotaTracker: long mMaxPeriodMs> = $l8;

        specialinvoke r0.<com.android.server.utils.quota.CountQuotaTracker: void invalidateAllExecutionStatsLocked()>();

        exitmonitor r1;

     label06:
        virtualinvoke r0.<com.android.server.utils.quota.CountQuotaTracker: void scheduleQuotaCheck()>();

        return;

     label07:
        $r10 := @caughtexception;

     label08:
        exitmonitor r1;

     label09:
        throw $r10;

     label10:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Limit and window size must be nonnegative.");

        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    public volatile void setEnabled(boolean)
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        boolean z0;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.android.server.utils.quota.QuotaTracker: void setEnabled(boolean)>(z0);

        return;
    }

    public volatile void setQuotaFree(int, java.lang.String, boolean)
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        int i0;
        java.lang.String r1;
        boolean z0;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.server.utils.quota.QuotaTracker: void setQuotaFree(int,java.lang.String,boolean)>(i0, r1, z0);

        return;
    }

    public volatile void setQuotaFree(boolean)
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        boolean z0;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.android.server.utils.quota.QuotaTracker: void setQuotaFree(boolean)>(z0);

        return;
    }

    public volatile void unregisterQuotaChangeListener(com.android.server.utils.quota.QuotaChangeListener)
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        com.android.server.utils.quota.QuotaChangeListener r1;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        r1 := @parameter0: com.android.server.utils.quota.QuotaChangeListener;

        specialinvoke r0.<com.android.server.utils.quota.QuotaTracker: void unregisterQuotaChangeListener(com.android.server.utils.quota.QuotaChangeListener)>(r1);

        return;
    }

    void updateExecutionStatsLocked(int, java.lang.String, java.lang.String, com.android.server.utils.quota.CountQuotaTracker$ExecutionStats)
    {
        com.android.server.utils.quota.CountQuotaTracker r0;
        java.lang.String r1, r6;
        com.android.server.utils.quota.CountQuotaTracker$ExecutionStats r2;
        long l0, l1, l2, $l4, $l5, $l6, $l8, $l12, $l15, $l16, $l17, $l18, l20;
        int $i3, $i7, $i10, $i11, $i13, $i14, i19, i21;
        com.android.server.utils.quota.QuotaTracker$Injector $r3;
        com.android.server.utils.quota.UptcMap $r4;
        java.lang.Object $r5;
        byte $b9;
        android.util.LongArrayQueue r7;

        r0 := @this: com.android.server.utils.quota.CountQuotaTracker;

        i19 := @parameter0: int;

        r6 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: com.android.server.utils.quota.CountQuotaTracker$ExecutionStats;

        r2.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: int countInWindow> = 0;

        $i3 = r2.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: int countLimit>;

        if $i3 != 0 goto label1;

        r2.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: long inQuotaTimeElapsed> = 9223372036854775807L;

        goto label2;

     label1:
        r2.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: long inQuotaTimeElapsed> = 0L;

     label2:
        $r3 = r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.QuotaTracker$Injector mInjector>;

        l0 = virtualinvoke $r3.<com.android.server.utils.quota.QuotaTracker$Injector: long getElapsedRealtime()>();

        $l4 = r0.<com.android.server.utils.quota.CountQuotaTracker: long mMaxPeriodMs>;

        $l5 = $l4 + l0;

        r2.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: long expirationTimeElapsed> = $l5;

        $r4 = r0.<com.android.server.utils.quota.CountQuotaTracker: com.android.server.utils.quota.UptcMap mEventTimes>;

        $r5 = virtualinvoke $r4.<com.android.server.utils.quota.UptcMap: java.lang.Object get(int,java.lang.String,java.lang.String)>(i19, r6, r1);

        r7 = (android.util.LongArrayQueue) $r5;

        if r7 != null goto label3;

        return;

     label3:
        l20 = 9223372036854775807L - l0;

        $l6 = r2.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: long windowSizeMs>;

        l1 = l0 - $l6;

        $i7 = virtualinvoke r7.<android.util.LongArrayQueue: int size()>();

        i21 = $i7 - 1;

     label4:
        if i21 < 0 goto label7;

        l2 = virtualinvoke r7.<android.util.LongArrayQueue: long get(int)>(i21);

        $b9 = l2 cmp l1;

        if $b9 >= 0 goto label5;

        goto label7;

     label5:
        $i10 = r2.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: int countInWindow>;

        $i11 = $i10 + 1;

        r2.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: int countInWindow> = $i11;

        $l12 = l2 - l1;

        l20 = staticinvoke <java.lang.Math: long min(long,long)>(l20, $l12);

        $i14 = r2.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: int countInWindow>;

        $i13 = r2.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: int countLimit>;

        if $i14 < $i13 goto label6;

        $l17 = r2.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: long inQuotaTimeElapsed>;

        $l15 = r2.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: long windowSizeMs>;

        $l16 = $l15 + l2;

        $l18 = staticinvoke <java.lang.Math: long max(long,long)>($l17, $l16);

        r2.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: long inQuotaTimeElapsed> = $l18;

        goto label6;

     label6:
        i21 = i21 + -1;

        goto label4;

     label7:
        $l8 = l0 + l20;

        r2.<com.android.server.utils.quota.CountQuotaTracker$ExecutionStats: long expirationTimeElapsed> = $l8;

        return;
    }
}
