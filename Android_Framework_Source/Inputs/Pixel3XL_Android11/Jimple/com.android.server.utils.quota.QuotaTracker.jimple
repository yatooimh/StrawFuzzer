abstract class com.android.server.utils.quota.QuotaTracker extends java.lang.Object
{
    private static final java.lang.String ALARM_TAG_QUOTA_CHECK;
    private static final boolean DEBUG;
    static final long MAX_WINDOW_SIZE_MS;
    static final long MIN_WINDOW_SIZE_MS;
    private static final java.lang.String TAG;
    private final android.app.AlarmManager mAlarmManager;
    private final android.content.BroadcastReceiver mBroadcastReceiver;
    final com.android.server.utils.quota.Categorizer mCategorizer;
    protected final android.content.Context mContext;
    private final android.util.SparseArrayMap mFreeQuota;
    private final com.android.server.utils.quota.QuotaTracker$InQuotaAlarmListener mInQuotaAlarmListener;
    protected final com.android.server.utils.quota.QuotaTracker$Injector mInjector;
    private boolean mIsEnabled;
    private boolean mIsQuotaFree;
    final java.lang.Object mLock;
    private final android.util.ArraySet mQuotaChangeListeners;

    static void <clinit>()
    {
        java.lang.Class $r1;
        java.lang.String $r2, $r5, $r8;
        java.lang.StringBuilder $r3;

        <com.android.server.utils.quota.QuotaTracker: long MIN_WINDOW_SIZE_MS> = 30000L;

        <com.android.server.utils.quota.QuotaTracker: long MAX_WINDOW_SIZE_MS> = 2592000000L;

        <com.android.server.utils.quota.QuotaTracker: boolean DEBUG> = 0;

        $r1 = class "Lcom/android/server/utils/quota/QuotaTracker;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.server.utils.quota.QuotaTracker: java.lang.String TAG> = $r2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");

        $r5 = <com.android.server.utils.quota.QuotaTracker: java.lang.String TAG>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".quota_check*");

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.android.server.utils.quota.QuotaTracker: java.lang.String ALARM_TAG_QUOTA_CHECK> = $r8;

        return;
    }

    void <init>(android.content.Context, com.android.server.utils.quota.Categorizer, com.android.server.utils.quota.QuotaTracker$Injector)
    {
        com.android.server.utils.quota.QuotaTracker r0;
        android.content.Context r1;
        com.android.server.utils.quota.QuotaTracker$Injector r2;
        java.lang.Object $r3, $r8;
        android.util.ArraySet $r4;
        com.android.server.utils.quota.QuotaTracker$InQuotaAlarmListener $r5;
        android.util.SparseArrayMap $r6;
        com.android.server.utils.quota.QuotaTracker$1 $r7;
        android.app.AlarmManager $r9;
        android.content.IntentFilter $r10, $r15;
        android.content.BroadcastReceiver $r11, $r16;
        android.os.UserHandle $r12, $r17;
        android.os.Handler $r13, $r18;
        com.android.server.utils.quota.Categorizer r20;

        r0 := @this: com.android.server.utils.quota.QuotaTracker;

        r1 := @parameter0: android.content.Context;

        r20 := @parameter1: com.android.server.utils.quota.Categorizer;

        r2 := @parameter2: com.android.server.utils.quota.QuotaTracker$Injector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<com.android.server.utils.quota.QuotaTracker: java.lang.Object mLock> = $r3;

        $r4 = new android.util.ArraySet;

        specialinvoke $r4.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.utils.quota.QuotaTracker: android.util.ArraySet mQuotaChangeListeners> = $r4;

        $r5 = new com.android.server.utils.quota.QuotaTracker$InQuotaAlarmListener;

        specialinvoke $r5.<com.android.server.utils.quota.QuotaTracker$InQuotaAlarmListener: void <init>(com.android.server.utils.quota.QuotaTracker,com.android.server.utils.quota.QuotaTracker$1)>(r0, null);

        r0.<com.android.server.utils.quota.QuotaTracker: com.android.server.utils.quota.QuotaTracker$InQuotaAlarmListener mInQuotaAlarmListener> = $r5;

        $r6 = new android.util.SparseArrayMap;

        specialinvoke $r6.<android.util.SparseArrayMap: void <init>()>();

        r0.<com.android.server.utils.quota.QuotaTracker: android.util.SparseArrayMap mFreeQuota> = $r6;

        r0.<com.android.server.utils.quota.QuotaTracker: boolean mIsEnabled> = 1;

        $r7 = new com.android.server.utils.quota.QuotaTracker$1;

        specialinvoke $r7.<com.android.server.utils.quota.QuotaTracker$1: void <init>(com.android.server.utils.quota.QuotaTracker)>(r0);

        r0.<com.android.server.utils.quota.QuotaTracker: android.content.BroadcastReceiver mBroadcastReceiver> = $r7;

        r0.<com.android.server.utils.quota.QuotaTracker: com.android.server.utils.quota.Categorizer mCategorizer> = r20;

        r0.<com.android.server.utils.quota.QuotaTracker: android.content.Context mContext> = r1;

        r0.<com.android.server.utils.quota.QuotaTracker: com.android.server.utils.quota.QuotaTracker$Injector mInjector> = r2;

        $r8 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/AlarmManager;");

        $r9 = (android.app.AlarmManager) $r8;

        r0.<com.android.server.utils.quota.QuotaTracker: android.app.AlarmManager mAlarmManager> = $r9;

        $r10 = new android.content.IntentFilter;

        specialinvoke $r10.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r10.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_FULLY_REMOVED");

        virtualinvoke $r10.<android.content.IntentFilter: void addDataScheme(java.lang.String)>("package");

        $r11 = r0.<com.android.server.utils.quota.QuotaTracker: android.content.BroadcastReceiver mBroadcastReceiver>;

        $r12 = <android.os.UserHandle: android.os.UserHandle ALL>;

        $r13 = staticinvoke <com.android.internal.os.BackgroundThread: android.os.Handler getHandler()>();

        virtualinvoke r1.<android.content.Context: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r11, $r12, $r10, null, $r13);

        $r15 = new android.content.IntentFilter;

        specialinvoke $r15.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.USER_REMOVED");

        $r16 = r0.<com.android.server.utils.quota.QuotaTracker: android.content.BroadcastReceiver mBroadcastReceiver>;

        $r17 = <android.os.UserHandle: android.os.UserHandle ALL>;

        $r18 = staticinvoke <com.android.internal.os.BackgroundThread: android.os.Handler getHandler()>();

        virtualinvoke r1.<android.content.Context: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r16, $r17, $r15, null, $r18);

        return;
    }

    static java.lang.String access$100()
    {
        java.lang.String $r0;

        $r0 = <com.android.server.utils.quota.QuotaTracker: java.lang.String TAG>;

        return $r0;
    }

    static void access$200(com.android.server.utils.quota.QuotaTracker, java.lang.String, int)
    {
        com.android.server.utils.quota.QuotaTracker r0;
        java.lang.String r1;
        int i0;

        r0 := @parameter0: com.android.server.utils.quota.QuotaTracker;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.utils.quota.QuotaTracker: void onAppRemovedLocked(java.lang.String,int)>(r1, i0);

        return;
    }

    static void access$300(com.android.server.utils.quota.QuotaTracker, int)
    {
        com.android.server.utils.quota.QuotaTracker r0;
        int i0;

        r0 := @parameter0: com.android.server.utils.quota.QuotaTracker;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.utils.quota.QuotaTracker: void onUserRemovedLocked(int)>(i0);

        return;
    }

    static java.lang.String access$400()
    {
        java.lang.String $r0;

        $r0 = <com.android.server.utils.quota.QuotaTracker: java.lang.String ALARM_TAG_QUOTA_CHECK>;

        return $r0;
    }

    private void onAppRemovedLocked(java.lang.String, int)
    {
        com.android.server.utils.quota.QuotaTracker r0;
        java.lang.String r1, $r5;
        int i0, i1;
        com.android.server.utils.quota.QuotaTracker$InQuotaAlarmListener $r2;
        android.util.SparseArrayMap $r3;

        r0 := @this: com.android.server.utils.quota.QuotaTracker;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        $r5 = <com.android.server.utils.quota.QuotaTracker: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>($r5, "Told app removed but given null package name.");

        return;

     label1:
        i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $r2 = r0.<com.android.server.utils.quota.QuotaTracker: com.android.server.utils.quota.QuotaTracker$InQuotaAlarmListener mInQuotaAlarmListener>;

        virtualinvoke $r2.<com.android.server.utils.quota.QuotaTracker$InQuotaAlarmListener: void removeAlarmsLocked(int,java.lang.String)>(i1, r1);

        $r3 = r0.<com.android.server.utils.quota.QuotaTracker: android.util.SparseArrayMap mFreeQuota>;

        virtualinvoke $r3.<android.util.SparseArrayMap: java.lang.Object delete(int,java.lang.String)>(i1, r1);

        virtualinvoke r0.<com.android.server.utils.quota.QuotaTracker: void handleRemovedAppLocked(java.lang.String,int)>(r1, i0);

        return;
    }

    private void onUserRemovedLocked(int)
    {
        com.android.server.utils.quota.QuotaTracker r0;
        int i0;
        com.android.server.utils.quota.QuotaTracker$InQuotaAlarmListener $r1;
        android.util.SparseArrayMap $r2;

        r0 := @this: com.android.server.utils.quota.QuotaTracker;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.utils.quota.QuotaTracker: com.android.server.utils.quota.QuotaTracker$InQuotaAlarmListener mInQuotaAlarmListener>;

        virtualinvoke $r1.<com.android.server.utils.quota.QuotaTracker$InQuotaAlarmListener: void removeAlarmsLocked(int)>(i0);

        $r2 = r0.<com.android.server.utils.quota.QuotaTracker: android.util.SparseArrayMap mFreeQuota>;

        virtualinvoke $r2.<android.util.SparseArrayMap: void delete(int)>(i0);

        virtualinvoke r0.<com.android.server.utils.quota.QuotaTracker: void handleRemovedUserLocked(int)>(i0);

        return;
    }

    void cancelAlarm(android.app.AlarmManager$OnAlarmListener)
    {
        com.android.server.utils.quota.QuotaTracker r0;
        android.app.AlarmManager$OnAlarmListener r1;
        android.os.Handler $r2;
        com.android.server.utils.quota._$$Lambda$QuotaTracker$v5weP48tcgV_Pr7kzEEv4AvPw_k $r3;

        r0 := @this: com.android.server.utils.quota.QuotaTracker;

        r1 := @parameter0: android.app.AlarmManager$OnAlarmListener;

        $r2 = staticinvoke <com.android.server.FgThread: android.os.Handler getHandler()>();

        $r3 = new com.android.server.utils.quota._$$Lambda$QuotaTracker$v5weP48tcgV_Pr7kzEEv4AvPw_k;

        specialinvoke $r3.<com.android.server.utils.quota._$$Lambda$QuotaTracker$v5weP48tcgV_Pr7kzEEv4AvPw_k: void <init>(com.android.server.utils.quota.QuotaTracker,android.app.AlarmManager$OnAlarmListener)>(r0, r1);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    void cancelScheduledStartAlarmLocked(int, java.lang.String, java.lang.String)
    {
        com.android.server.utils.quota.QuotaTracker r0;
        int i0;
        java.lang.String r1, r2;
        com.android.server.utils.quota.Uptc $r3;
        com.android.server.utils.quota.QuotaTracker$InQuotaAlarmListener $r4;

        r0 := @this: com.android.server.utils.quota.QuotaTracker;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r4 = r0.<com.android.server.utils.quota.QuotaTracker: com.android.server.utils.quota.QuotaTracker$InQuotaAlarmListener mInQuotaAlarmListener>;

        $r3 = new com.android.server.utils.quota.Uptc;

        specialinvoke $r3.<com.android.server.utils.quota.Uptc: void <init>(int,java.lang.String,java.lang.String)>(i0, r1, r2);

        virtualinvoke $r4.<com.android.server.utils.quota.QuotaTracker$InQuotaAlarmListener: void removeAlarmLocked(com.android.server.utils.quota.Uptc)>($r3);

        return;
    }

    public void clear()
    {
        com.android.server.utils.quota.QuotaTracker r0;
        java.lang.Object r1;
        com.android.server.utils.quota.QuotaTracker$InQuotaAlarmListener $r3;
        android.util.SparseArrayMap $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.utils.quota.QuotaTracker;

        r1 = r0.<com.android.server.utils.quota.QuotaTracker: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.utils.quota.QuotaTracker: com.android.server.utils.quota.QuotaTracker$InQuotaAlarmListener mInQuotaAlarmListener>;

        virtualinvoke $r3.<com.android.server.utils.quota.QuotaTracker$InQuotaAlarmListener: void clearLocked()>();

        $r4 = r0.<com.android.server.utils.quota.QuotaTracker: android.util.SparseArrayMap mFreeQuota>;

        virtualinvoke $r4.<android.util.SparseArrayMap: void clear()>();

        virtualinvoke r0.<com.android.server.utils.quota.QuotaTracker: void dropEverythingLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    abstract void dropEverythingLocked();

    public void dump(android.util.proto.ProtoOutputStream, long)
    {
        com.android.server.utils.quota.QuotaTracker r0;
        java.lang.Object r1;
        boolean $z0, $z1;
        com.android.server.utils.quota.QuotaTracker$Injector $r2;
        long $l0, l1, l2;
        com.android.server.utils.quota.QuotaTracker$InQuotaAlarmListener $r3;
        java.lang.Throwable $r4;
        android.util.proto.ProtoOutputStream r5;

        r0 := @this: com.android.server.utils.quota.QuotaTracker;

        r5 := @parameter0: android.util.proto.ProtoOutputStream;

        l1 := @parameter1: long;

        l2 = virtualinvoke r5.<android.util.proto.ProtoOutputStream: long start(long)>(l1);

        r1 = r0.<com.android.server.utils.quota.QuotaTracker: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z0 = r0.<com.android.server.utils.quota.QuotaTracker: boolean mIsEnabled>;

        virtualinvoke r5.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366145L, $z0);

        $z1 = r0.<com.android.server.utils.quota.QuotaTracker: boolean mIsQuotaFree>;

        virtualinvoke r5.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366146L, $z1);

        $r2 = r0.<com.android.server.utils.quota.QuotaTracker: com.android.server.utils.quota.QuotaTracker$Injector mInjector>;

        $l0 = virtualinvoke $r2.<com.android.server.utils.quota.QuotaTracker$Injector: long getElapsedRealtime()>();

        virtualinvoke r5.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529667L, $l0);

        $r3 = r0.<com.android.server.utils.quota.QuotaTracker: com.android.server.utils.quota.QuotaTracker$InQuotaAlarmListener mInQuotaAlarmListener>;

        virtualinvoke $r3.<com.android.server.utils.quota.QuotaTracker$InQuotaAlarmListener: void dumpLocked(android.util.proto.ProtoOutputStream,long)>(r5, 1146756268036L);

        exitmonitor r1;

     label2:
        virtualinvoke r5.<android.util.proto.ProtoOutputStream: void end(long)>(l2);

        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void dump(com.android.internal.util.IndentingPrintWriter)
    {
        com.android.server.utils.quota.QuotaTracker r0;
        java.lang.Object r1, $r21;
        int i0, $i2, $i3, i4, i5;
        boolean $z0, $z1;
        java.lang.String $r4, $r7, $r11, $r19, r27;
        com.android.server.utils.quota.QuotaTracker$Injector $r9;
        long $l1;
        com.android.server.utils.quota.QuotaTracker$InQuotaAlarmListener $r12;
        android.util.SparseArrayMap $r14, $r16, $r17, $r18, $r20;
        java.lang.Throwable $r22;
        com.android.internal.util.IndentingPrintWriter r23;
        java.lang.StringBuilder r24, r25, r26;

        r0 := @this: com.android.server.utils.quota.QuotaTracker;

        r23 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        r1 = r0.<com.android.server.utils.quota.QuotaTracker: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Is enabled: ");

        $z0 = r0.<com.android.server.utils.quota.QuotaTracker: boolean mIsEnabled>;

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r4 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r23.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r4);

        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Is global quota free: ");

        $z1 = r0.<com.android.server.utils.quota.QuotaTracker: boolean mIsQuotaFree>;

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r7 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r23.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r7);

        r26 = new java.lang.StringBuilder;

        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current elapsed time: ");

        $r9 = r0.<com.android.server.utils.quota.QuotaTracker: com.android.server.utils.quota.QuotaTracker$Injector mInjector>;

        $l1 = virtualinvoke $r9.<com.android.server.utils.quota.QuotaTracker$Injector: long getElapsedRealtime()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r11 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r23.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r11);

        virtualinvoke r23.<com.android.internal.util.IndentingPrintWriter: void println()>();

        virtualinvoke r23.<com.android.internal.util.IndentingPrintWriter: void println()>();

        $r12 = r0.<com.android.server.utils.quota.QuotaTracker: com.android.server.utils.quota.QuotaTracker$InQuotaAlarmListener mInQuotaAlarmListener>;

        virtualinvoke $r12.<com.android.server.utils.quota.QuotaTracker$InQuotaAlarmListener: void dumpLocked(com.android.internal.util.IndentingPrintWriter)>(r23);

        virtualinvoke r23.<com.android.internal.util.IndentingPrintWriter: void println()>();

        virtualinvoke r23.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Per-app free quota:");

        virtualinvoke r23.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

     label02:
        i4 = 0;

     label03:
        $r14 = r0.<com.android.server.utils.quota.QuotaTracker: android.util.SparseArrayMap mFreeQuota>;

        $i2 = virtualinvoke $r14.<android.util.SparseArrayMap: int numMaps()>();

        if i4 >= $i2 goto label08;

        $r16 = r0.<com.android.server.utils.quota.QuotaTracker: android.util.SparseArrayMap mFreeQuota>;

        i0 = virtualinvoke $r16.<android.util.SparseArrayMap: int keyAt(int)>(i4);

     label04:
        i5 = 0;

     label05:
        $r17 = r0.<com.android.server.utils.quota.QuotaTracker: android.util.SparseArrayMap mFreeQuota>;

        $i3 = virtualinvoke $r17.<android.util.SparseArrayMap: int numElementsForKey(int)>(i0);

        if i5 >= $i3 goto label07;

        $r18 = r0.<com.android.server.utils.quota.QuotaTracker: android.util.SparseArrayMap mFreeQuota>;

        r27 = virtualinvoke $r18.<android.util.SparseArrayMap: java.lang.String keyAt(int,int)>(i4, i5);

        $r19 = staticinvoke <com.android.server.utils.quota.Uptc: java.lang.String string(int,java.lang.String,java.lang.String)>(i0, r27, null);

        virtualinvoke r23.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>($r19);

        virtualinvoke r23.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>(": ");

        $r20 = r0.<com.android.server.utils.quota.QuotaTracker: android.util.SparseArrayMap mFreeQuota>;

        $r21 = virtualinvoke $r20.<android.util.SparseArrayMap: java.lang.Object get(int,java.lang.String)>(i0, r27);

        virtualinvoke r23.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.Object)>($r21);

     label06:
        i5 = i5 + 1;

        goto label05;

     label07:
        i4 = i4 + 1;

        goto label03;

     label08:
        virtualinvoke r23.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        exitmonitor r1;

     label09:
        return;

     label10:
        $r22 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r22;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    abstract android.os.Handler getHandler();

    abstract long getInQuotaTimeElapsedLocked(int, java.lang.String, java.lang.String);

    abstract void handleRemovedAppLocked(java.lang.String, int);

    abstract void handleRemovedUserLocked(int);

    boolean isEnabledLocked()
    {
        com.android.server.utils.quota.QuotaTracker r0;
        boolean $z0;

        r0 := @this: com.android.server.utils.quota.QuotaTracker;

        $z0 = r0.<com.android.server.utils.quota.QuotaTracker: boolean mIsEnabled>;

        return $z0;
    }

    boolean isIndividualQuotaFreeLocked(int, java.lang.String)
    {
        com.android.server.utils.quota.QuotaTracker r0;
        int i0;
        java.lang.String r1;
        java.lang.Boolean $r2, $r5;
        android.util.SparseArrayMap $r3;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: com.android.server.utils.quota.QuotaTracker;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.utils.quota.QuotaTracker: android.util.SparseArrayMap mFreeQuota>;

        $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r4 = virtualinvoke $r3.<android.util.SparseArrayMap: java.lang.Object getOrDefault(int,java.lang.String,java.lang.Object)>(i0, r1, $r2);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    boolean isQuotaFreeLocked()
    {
        com.android.server.utils.quota.QuotaTracker r0;
        boolean $z0;

        r0 := @this: com.android.server.utils.quota.QuotaTracker;

        $z0 = r0.<com.android.server.utils.quota.QuotaTracker: boolean mIsQuotaFree>;

        return $z0;
    }

    boolean isQuotaFreeLocked(int, java.lang.String)
    {
        com.android.server.utils.quota.QuotaTracker r0;
        int i0;
        java.lang.String r1;
        boolean $z0, $z1, z2;
        java.lang.Boolean $r2, $r5;
        android.util.SparseArrayMap $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.server.utils.quota.QuotaTracker;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $z0 = r0.<com.android.server.utils.quota.QuotaTracker: boolean mIsQuotaFree>;

        if $z0 != 0 goto label2;

        $r3 = r0.<com.android.server.utils.quota.QuotaTracker: android.util.SparseArrayMap mFreeQuota>;

        $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r4 = virtualinvoke $r3.<android.util.SparseArrayMap: java.lang.Object getOrDefault(int,java.lang.String,java.lang.Object)>(i0, r1, $r2);

        $r5 = (java.lang.Boolean) $r4;

        $z1 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    public boolean isWithinQuota(int, java.lang.String, java.lang.String)
    {
        com.android.server.utils.quota.QuotaTracker r0;
        int i0;
        java.lang.String r1, r4;
        java.lang.Object r2;
        boolean z0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.utils.quota.QuotaTracker;

        i0 := @parameter0: int;

        r4 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 = r0.<com.android.server.utils.quota.QuotaTracker: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        z0 = virtualinvoke r0.<com.android.server.utils.quota.QuotaTracker: boolean isWithinQuotaLocked(int,java.lang.String,java.lang.String)>(i0, r4, r1);

        exitmonitor r2;

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    abstract boolean isWithinQuotaLocked(int, java.lang.String, java.lang.String);

    public void lambda$cancelAlarm$1$QuotaTracker(android.app.AlarmManager$OnAlarmListener)
    {
        com.android.server.utils.quota.QuotaTracker r0;
        android.app.AlarmManager$OnAlarmListener r1;
        com.android.server.utils.quota.QuotaTracker$Injector $r2;
        boolean $z0;
        java.lang.String $r3;
        android.app.AlarmManager $r4;

        r0 := @this: com.android.server.utils.quota.QuotaTracker;

        r1 := @parameter0: android.app.AlarmManager$OnAlarmListener;

        $r2 = r0.<com.android.server.utils.quota.QuotaTracker: com.android.server.utils.quota.QuotaTracker$Injector mInjector>;

        $z0 = virtualinvoke $r2.<com.android.server.utils.quota.QuotaTracker$Injector: boolean isAlarmManagerReady()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.server.utils.quota.QuotaTracker: android.app.AlarmManager mAlarmManager>;

        virtualinvoke $r4.<android.app.AlarmManager: void cancel(android.app.AlarmManager$OnAlarmListener)>(r1);

        goto label2;

     label1:
        $r3 = <com.android.server.utils.quota.QuotaTracker: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r3, "Alarm not cancelled because boot isn\'t completed");

     label2:
        return;
    }

    public void lambda$postQuotaStatusChanged$3$QuotaTracker(int, java.lang.String, java.lang.String)
    {
        com.android.server.utils.quota.QuotaTracker r0;
        int i0, i1, $i2, i3;
        java.lang.String r1, r10;
        java.lang.Object r2;
        com.android.server.utils.quota.QuotaChangeListener[] r3, $r6;
        android.util.ArraySet $r4, $r5;
        java.lang.Object[] $r7;
        com.android.server.utils.quota.QuotaChangeListener $r8;
        java.lang.Throwable $r9;

        r0 := @this: com.android.server.utils.quota.QuotaTracker;

        i0 := @parameter0: int;

        r10 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 = r0.<com.android.server.utils.quota.QuotaTracker: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        $r5 = r0.<com.android.server.utils.quota.QuotaTracker: android.util.ArraySet mQuotaChangeListeners>;

        $r4 = r0.<com.android.server.utils.quota.QuotaTracker: android.util.ArraySet mQuotaChangeListeners>;

        $i2 = virtualinvoke $r4.<android.util.ArraySet: int size()>();

        $r6 = newarray (com.android.server.utils.quota.QuotaChangeListener)[$i2];

        $r7 = virtualinvoke $r5.<android.util.ArraySet: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        r3 = (com.android.server.utils.quota.QuotaChangeListener[]) $r7;

        exitmonitor r2;

     label2:
        i1 = lengthof r3;

        i3 = 0;

     label3:
        if i3 >= i1 goto label4;

        $r8 = r3[i3];

        interfaceinvoke $r8.<com.android.server.utils.quota.QuotaChangeListener: void onQuotaStateChanged(int,java.lang.String,java.lang.String)>(i0, r10, r1);

        i3 = i3 + 1;

        goto label3;

     label4:
        return;

     label5:
        $r9 := @caughtexception;

     label6:
        exitmonitor r2;

     label7:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void lambda$scheduleAlarm$0$QuotaTracker(int, long, java.lang.String, android.app.AlarmManager$OnAlarmListener)
    {
        com.android.server.utils.quota.QuotaTracker r0;
        int i0;
        long l1;
        java.lang.String r1, $r4;
        android.app.AlarmManager$OnAlarmListener r2;
        com.android.server.utils.quota.QuotaTracker$Injector $r3;
        boolean $z0;
        android.app.AlarmManager $r5;
        android.os.Handler $r6;

        r0 := @this: com.android.server.utils.quota.QuotaTracker;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: android.app.AlarmManager$OnAlarmListener;

        $r3 = r0.<com.android.server.utils.quota.QuotaTracker: com.android.server.utils.quota.QuotaTracker$Injector mInjector>;

        $z0 = virtualinvoke $r3.<com.android.server.utils.quota.QuotaTracker$Injector: boolean isAlarmManagerReady()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<com.android.server.utils.quota.QuotaTracker: android.app.AlarmManager mAlarmManager>;

        $r6 = virtualinvoke r0.<com.android.server.utils.quota.QuotaTracker: android.os.Handler getHandler()>();

        virtualinvoke $r5.<android.app.AlarmManager: void set(int,long,java.lang.String,android.app.AlarmManager$OnAlarmListener,android.os.Handler)>(i0, l1, r1, r2, $r6);

        goto label2;

     label1:
        $r4 = <com.android.server.utils.quota.QuotaTracker: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r4, "Alarm not scheduled because boot isn\'t completed");

     label2:
        return;
    }

    public void lambda$scheduleQuotaCheck$2$QuotaTracker()
    {
        com.android.server.utils.quota.QuotaTracker r0;
        java.lang.Object r1;
        android.util.ArraySet $r3;
        int $i0;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.utils.quota.QuotaTracker;

        r1 = r0.<com.android.server.utils.quota.QuotaTracker: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.utils.quota.QuotaTracker: android.util.ArraySet mQuotaChangeListeners>;

        $i0 = virtualinvoke $r3.<android.util.ArraySet: int size()>();

        if $i0 <= 0 goto label2;

        virtualinvoke r0.<com.android.server.utils.quota.QuotaTracker: void maybeUpdateAllQuotaStatusLocked()>();

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    void maybeScheduleStartAlarmLocked(int, java.lang.String, java.lang.String)
    {
        com.android.server.utils.quota.QuotaTracker r0;
        int i0, $i1;
        java.lang.String r1, r2;
        android.util.ArraySet $r3;
        boolean $z0;
        com.android.server.utils.quota.Uptc $r5, $r7;
        com.android.server.utils.quota.QuotaTracker$InQuotaAlarmListener $r6, $r8;
        long $l2;

        r0 := @this: com.android.server.utils.quota.QuotaTracker;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = r0.<com.android.server.utils.quota.QuotaTracker: android.util.ArraySet mQuotaChangeListeners>;

        $i1 = virtualinvoke $r3.<android.util.ArraySet: int size()>();

        if $i1 != 0 goto label1;

        return;

     label1:
        staticinvoke <com.android.server.utils.quota.Uptc: java.lang.String string(int,java.lang.String,java.lang.String)>(i0, r1, r2);

        $z0 = virtualinvoke r0.<com.android.server.utils.quota.QuotaTracker: boolean isWithinQuota(int,java.lang.String,java.lang.String)>(i0, r1, r2);

        if $z0 == 0 goto label2;

        $r8 = r0.<com.android.server.utils.quota.QuotaTracker: com.android.server.utils.quota.QuotaTracker$InQuotaAlarmListener mInQuotaAlarmListener>;

        $r7 = new com.android.server.utils.quota.Uptc;

        specialinvoke $r7.<com.android.server.utils.quota.Uptc: void <init>(int,java.lang.String,java.lang.String)>(i0, r1, r2);

        virtualinvoke $r8.<com.android.server.utils.quota.QuotaTracker$InQuotaAlarmListener: void removeAlarmLocked(com.android.server.utils.quota.Uptc)>($r7);

        virtualinvoke r0.<com.android.server.utils.quota.QuotaTracker: void maybeUpdateQuotaStatus(int,java.lang.String,java.lang.String)>(i0, r1, r2);

        return;

     label2:
        $r6 = r0.<com.android.server.utils.quota.QuotaTracker: com.android.server.utils.quota.QuotaTracker$InQuotaAlarmListener mInQuotaAlarmListener>;

        $r5 = new com.android.server.utils.quota.Uptc;

        specialinvoke $r5.<com.android.server.utils.quota.Uptc: void <init>(int,java.lang.String,java.lang.String)>(i0, r1, r2);

        $l2 = virtualinvoke r0.<com.android.server.utils.quota.QuotaTracker: long getInQuotaTimeElapsedLocked(int,java.lang.String,java.lang.String)>(i0, r1, r2);

        virtualinvoke $r6.<com.android.server.utils.quota.QuotaTracker$InQuotaAlarmListener: void addAlarmLocked(com.android.server.utils.quota.Uptc,long)>($r5, $l2);

        return;
    }

    abstract void maybeUpdateAllQuotaStatusLocked();

    abstract void maybeUpdateQuotaStatus(int, java.lang.String, java.lang.String);

    abstract void onQuotaFreeChangedLocked(int, java.lang.String, boolean);

    abstract void onQuotaFreeChangedLocked(boolean);

    void postQuotaStatusChanged(int, java.lang.String, java.lang.String)
    {
        com.android.server.utils.quota.QuotaTracker r0;
        int i0;
        java.lang.String r1, r2;
        android.os.Handler $r3;
        com.android.server.utils.quota._$$Lambda$QuotaTracker$XRuiZQg4lOmWE1kXJjjkatdBgB8 $r4;

        r0 := @this: com.android.server.utils.quota.QuotaTracker;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = staticinvoke <com.android.internal.os.BackgroundThread: android.os.Handler getHandler()>();

        $r4 = new com.android.server.utils.quota._$$Lambda$QuotaTracker$XRuiZQg4lOmWE1kXJjjkatdBgB8;

        specialinvoke $r4.<com.android.server.utils.quota._$$Lambda$QuotaTracker$XRuiZQg4lOmWE1kXJjjkatdBgB8: void <init>(com.android.server.utils.quota.QuotaTracker,int,java.lang.String,java.lang.String)>(r0, i0, r1, r2);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r4);

        return;
    }

    public void registerQuotaChangeListener(com.android.server.utils.quota.QuotaChangeListener)
    {
        com.android.server.utils.quota.QuotaTracker r0;
        java.lang.Object r1;
        android.util.ArraySet $r2, $r3;
        boolean $z0;
        int $i0;
        java.lang.Throwable $r4;
        com.android.server.utils.quota.QuotaChangeListener r5;

        r0 := @this: com.android.server.utils.quota.QuotaTracker;

        r5 := @parameter0: com.android.server.utils.quota.QuotaChangeListener;

        r1 = r0.<com.android.server.utils.quota.QuotaTracker: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.utils.quota.QuotaTracker: android.util.ArraySet mQuotaChangeListeners>;

        $z0 = virtualinvoke $r2.<android.util.ArraySet: boolean add(java.lang.Object)>(r5);

        if $z0 == 0 goto label2;

        $r3 = r0.<com.android.server.utils.quota.QuotaTracker: android.util.ArraySet mQuotaChangeListeners>;

        $i0 = virtualinvoke $r3.<android.util.ArraySet: int size()>();

        if $i0 != 1 goto label2;

        virtualinvoke r0.<com.android.server.utils.quota.QuotaTracker: void scheduleQuotaCheck()>();

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    void scheduleAlarm(int, long, java.lang.String, android.app.AlarmManager$OnAlarmListener)
    {
        com.android.server.utils.quota.QuotaTracker r0;
        int i0;
        long l1;
        java.lang.String r1;
        android.app.AlarmManager$OnAlarmListener r2;
        android.os.Handler $r3;
        com.android.server.utils.quota._$$Lambda$QuotaTracker$QGqhRiGVlazdG76r_Ich6VZnho4 $r4;

        r0 := @this: com.android.server.utils.quota.QuotaTracker;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: android.app.AlarmManager$OnAlarmListener;

        $r3 = staticinvoke <com.android.server.FgThread: android.os.Handler getHandler()>();

        $r4 = new com.android.server.utils.quota._$$Lambda$QuotaTracker$QGqhRiGVlazdG76r_Ich6VZnho4;

        specialinvoke $r4.<com.android.server.utils.quota._$$Lambda$QuotaTracker$QGqhRiGVlazdG76r_Ich6VZnho4: void <init>(com.android.server.utils.quota.QuotaTracker,int,long,java.lang.String,android.app.AlarmManager$OnAlarmListener)>(r0, i0, l1, r1, r2);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r4);

        return;
    }

    void scheduleQuotaCheck()
    {
        com.android.server.utils.quota.QuotaTracker r0;
        android.os.Handler $r1;
        com.android.server.utils.quota._$$Lambda$QuotaTracker$cKEDVJtC0LHULuSrH0_B6zQBe3g $r2;

        r0 := @this: com.android.server.utils.quota.QuotaTracker;

        $r1 = staticinvoke <com.android.internal.os.BackgroundThread: android.os.Handler getHandler()>();

        $r2 = new com.android.server.utils.quota._$$Lambda$QuotaTracker$cKEDVJtC0LHULuSrH0_B6zQBe3g;

        specialinvoke $r2.<com.android.server.utils.quota._$$Lambda$QuotaTracker$cKEDVJtC0LHULuSrH0_B6zQBe3g: void <init>(com.android.server.utils.quota.QuotaTracker)>(r0);

        virtualinvoke $r1.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    public void setEnabled(boolean)
    {
        com.android.server.utils.quota.QuotaTracker r0;
        boolean z0, $z1;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.utils.quota.QuotaTracker;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.server.utils.quota.QuotaTracker: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $z1 = r0.<com.android.server.utils.quota.QuotaTracker: boolean mIsEnabled>;

        if $z1 != z0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        r0.<com.android.server.utils.quota.QuotaTracker: boolean mIsEnabled> = z0;

     label04:
        if z0 != 0 goto label06;

     label05:
        virtualinvoke r0.<com.android.server.utils.quota.QuotaTracker: void clear()>();

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r3 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void setQuotaFree(int, java.lang.String, boolean)
    {
        com.android.server.utils.quota.QuotaTracker r0;
        int i0;
        boolean z0, $z1;
        java.lang.Object r1, $r4;
        java.lang.Boolean $r2, $r5, $r7;
        android.util.SparseArrayMap $r3, $r6;
        java.lang.Throwable $r8;
        java.lang.String r9;

        r0 := @this: com.android.server.utils.quota.QuotaTracker;

        i0 := @parameter0: int;

        r9 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r1 = r0.<com.android.server.utils.quota.QuotaTracker: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.utils.quota.QuotaTracker: android.util.SparseArrayMap mFreeQuota>;

        $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r4 = virtualinvoke $r3.<android.util.SparseArrayMap: java.lang.Object getOrDefault(int,java.lang.String,java.lang.Object)>(i0, r9, $r2);

        $r5 = (java.lang.Boolean) $r4;

        $z1 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == z0 goto label2;

        $r6 = r0.<com.android.server.utils.quota.QuotaTracker: android.util.SparseArrayMap mFreeQuota>;

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        virtualinvoke $r6.<android.util.SparseArrayMap: void add(int,java.lang.String,java.lang.Object)>(i0, r9, $r7);

        virtualinvoke r0.<com.android.server.utils.quota.QuotaTracker: void onQuotaFreeChangedLocked(int,java.lang.String,boolean)>(i0, r9, z0);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r8 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void setQuotaFree(boolean)
    {
        com.android.server.utils.quota.QuotaTracker r0;
        boolean z0, $z1, $z2;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.utils.quota.QuotaTracker;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.server.utils.quota.QuotaTracker: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z1 = r0.<com.android.server.utils.quota.QuotaTracker: boolean mIsQuotaFree>;

        if $z1 != z0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        r0.<com.android.server.utils.quota.QuotaTracker: boolean mIsQuotaFree> = z0;

        $z2 = r0.<com.android.server.utils.quota.QuotaTracker: boolean mIsEnabled>;

        if $z2 != 0 goto label5;

        exitmonitor r1;

     label4:
        return;

     label5:
        virtualinvoke r0.<com.android.server.utils.quota.QuotaTracker: void onQuotaFreeChangedLocked(boolean)>(z0);

        exitmonitor r1;

     label6:
        virtualinvoke r0.<com.android.server.utils.quota.QuotaTracker: void scheduleQuotaCheck()>();

        return;

     label7:
        $r3 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void unregisterQuotaChangeListener(com.android.server.utils.quota.QuotaChangeListener)
    {
        com.android.server.utils.quota.QuotaTracker r0;
        java.lang.Object r1;
        android.util.ArraySet $r2;
        java.lang.Throwable $r3;
        com.android.server.utils.quota.QuotaChangeListener r4;

        r0 := @this: com.android.server.utils.quota.QuotaTracker;

        r4 := @parameter0: com.android.server.utils.quota.QuotaChangeListener;

        r1 = r0.<com.android.server.utils.quota.QuotaTracker: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.utils.quota.QuotaTracker: android.util.ArraySet mQuotaChangeListeners>;

        virtualinvoke $r2.<android.util.ArraySet: boolean remove(java.lang.Object)>(r4);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
