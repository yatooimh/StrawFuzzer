class com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$SettingsObserver extends android.database.ContentObserver
{
    final com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub this$1;

    void <init>(com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub, android.os.Handler)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$SettingsObserver r0;
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r1;
        android.os.Handler r2;
        com.android.server.voiceinteraction.VoiceInteractionManagerService $r3;
        android.content.Context $r4;
        android.content.ContentResolver $r5;
        android.net.Uri $r6;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$SettingsObserver;

        r1 := @parameter0: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        r2 := @parameter1: android.os.Handler;

        r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$SettingsObserver: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub this$1> = r1;

        specialinvoke r0.<android.database.ContentObserver: void <init>(android.os.Handler)>(r2);

        $r3 = r1.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r4 = $r3.<com.android.server.voiceinteraction.VoiceInteractionManagerService: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r6 = staticinvoke <android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>("voice_interaction_service");

        virtualinvoke $r5.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>($r6, 0, r0, -1);

        return;
    }

    public void onChange(boolean)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$SettingsObserver r0;
        boolean z0;
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$SettingsObserver;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$SettingsObserver: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub this$1>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$SettingsObserver: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub this$1>;

        virtualinvoke $r3.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void switchImplementationIfNeededLocked(boolean)>(0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
