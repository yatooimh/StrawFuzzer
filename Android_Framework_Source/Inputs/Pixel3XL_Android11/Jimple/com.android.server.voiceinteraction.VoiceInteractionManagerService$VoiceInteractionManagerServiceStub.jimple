class com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub extends com.android.internal.app.IVoiceInteractionManagerService$Stub
{
    private int mCurUser;
    private boolean mCurUserSupported;
    private boolean mCurUserUnlocked;
    private final boolean mEnableService;
    com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl;
    com.android.internal.content.PackageMonitor mPackageMonitor;
    private boolean mSafeMode;
    private boolean mTemporarilyDisabled;
    final com.android.server.voiceinteraction.VoiceInteractionManagerService this$0;

    void <init>(com.android.server.voiceinteraction.VoiceInteractionManagerService)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        com.android.server.voiceinteraction.VoiceInteractionManagerService r1;
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$2 $r2;
        android.content.Context $r3, $r5;
        boolean $z0;
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$RoleObserver $r4;
        java.util.concurrent.Executor $r6;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        r1 := @parameter0: com.android.server.voiceinteraction.VoiceInteractionManagerService;

        r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0> = r1;

        specialinvoke r0.<com.android.internal.app.IVoiceInteractionManagerService$Stub: void <init>()>();

        $r2 = new com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$2;

        specialinvoke $r2.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$2: void <init>(com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub)>(r0);

        r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.internal.content.PackageMonitor mPackageMonitor> = $r2;

        $r3 = r1.<com.android.server.voiceinteraction.VoiceInteractionManagerService: android.content.Context mContext>;

        $z0 = specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: boolean shouldEnableService(android.content.Context)>($r3);

        r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: boolean mEnableService> = $z0;

        $r4 = new com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$RoleObserver;

        $r5 = r1.<com.android.server.voiceinteraction.VoiceInteractionManagerService: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: java.util.concurrent.Executor getMainExecutor()>();

        specialinvoke $r4.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$RoleObserver: void <init>(com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub,java.util.concurrent.Executor)>(r0, $r6);

        return;
    }

    static void access$400(com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;

        r0 := @parameter0: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void unloadAllKeyphraseModels()>();

        return;
    }

    static void access$500(com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub, com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl r1;

        r0 := @parameter0: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        r1 := @parameter1: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl;

        specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void setImplLocked(com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl)>(r1);

        return;
    }

    static int access$600(com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        int $i0;

        r0 := @parameter0: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        $i0 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: int mCurUser>;

        return $i0;
    }

    private void enforceCallerAllowedToEnrollVoiceModel()
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        boolean $z0;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        $z0 = specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: boolean isCallerHoldingPermission(java.lang.String)>("android.permission.KEYPHRASE_ENROLLMENT_APPLICATION");

        if $z0 == 0 goto label1;

        return;

     label1:
        specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void enforceCallingPermission(java.lang.String)>("android.permission.MANAGE_VOICE_KEYPHRASES");

        specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void enforceIsCurrentVoiceInteractionService()>();

        return;
    }

    private void enforceCallingPermission(java.lang.String)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        java.lang.String r1, $r7;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.SecurityException $r6;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: boolean isCallerHoldingPermission(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caller does not hold the permission ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = new java.lang.SecurityException;

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.SecurityException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    private void enforceIsCurrentVoiceInteractionService()
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        boolean $z0;
        java.lang.SecurityException $r1;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        $z0 = specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: boolean isCallerCurrentVoiceInteractionService()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.SecurityException;

        specialinvoke $r1.<java.lang.SecurityException: void <init>(java.lang.String)>("Caller is not the current voice interaction service");

        throw $r1;
    }

    private java.lang.String getForceVoiceInteractionServicePackage(android.content.res.Resources)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        boolean $z0;
        android.content.res.Resources r1;
        java.lang.String r2;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        r1 := @parameter0: android.content.res.Resources;

        r2 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>(17039896);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label1;

        r2 = null;

        goto label1;

     label1:
        return r2;
    }

    private void initForUserNoTracing(int)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        int i0;
        android.content.pm.IPackageManager r1;
        com.android.server.voiceinteraction.VoiceInteractionManagerService $r2, $r22;
        android.content.Context $r3, $r23;
        android.content.ContentResolver $r4;
        android.content.ComponentName $r5, $r11, r18, r19, r26, r30;
        android.content.pm.ServiceInfo $r6, $r8, $r12, r29, r31, r32, r33, r34;
        java.lang.String $r7, $r9, $r10, $r13, $r14, $r15, r17, r25, r28;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.os.RemoteException $r16;
        android.service.voice.VoiceInteractionServiceInfo r20, r21, r27, r35;
        android.content.res.Resources $r24;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r3 = $r2.<com.android.server.voiceinteraction.VoiceInteractionManagerService: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r17 = staticinvoke <android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>($r4, "voice_interaction_service", i0);

        r18 = virtualinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: android.content.ComponentName getCurRecognizer(int)>(i0);

        r19 = r18;

        r20 = null;

        if r17 != null goto label01;

        r19 = r18;

        r20 = null;

        if r18 == null goto label01;

        r19 = r18;

        r20 = null;

        $z3 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: boolean mEnableService>;

        if $z3 == 0 goto label01;

        $r15 = virtualinvoke r18.<android.content.ComponentName: java.lang.String getPackageName()>();

        r21 = virtualinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: android.service.voice.VoiceInteractionServiceInfo findAvailInteractor(int,java.lang.String)>(i0, $r15);

        r19 = r18;

        r20 = r21;

        if r21 == null goto label01;

        r19 = null;

        r20 = r21;

     label01:
        $r22 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r23 = $r22.<com.android.server.voiceinteraction.VoiceInteractionManagerService: android.content.Context mContext>;

        $r24 = virtualinvoke $r23.<android.content.Context: android.content.res.Resources getResources()>();

        r25 = specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: java.lang.String getForceVoiceInteractionServicePackage(android.content.res.Resources)>($r24);

        r26 = r19;

        if r25 == null goto label02;

        r27 = virtualinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: android.service.voice.VoiceInteractionServiceInfo findAvailInteractor(int,java.lang.String)>(i0, r25);

        r26 = r19;

        r20 = r27;

        if r27 == null goto label02;

        r26 = null;

        r20 = r27;

     label02:
        r28 = r17;

        $z4 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: boolean mEnableService>;

        if $z4 != 0 goto label03;

        r28 = r17;

        if r17 == null goto label03;

        r28 = r17;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r17);

        if $z2 != 0 goto label03;

        virtualinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void setCurInteractor(android.content.ComponentName,int)>(null, i0);

        r28 = "";

     label03:
        if r26 == null goto label14;

        r1 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r29 = null;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r28);

        if $z1 != 0 goto label04;

        r30 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>(r28);

        goto label05;

     label04:
        r30 = null;

     label05:
        r31 = null;

     label06:
        r32 = interfaceinvoke r1.<android.content.pm.IPackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int,int)>(r26, 786432, i0);

     label07:
        r33 = null;

        if r30 == null goto label10;

        r31 = r32;

     label08:
        r34 = interfaceinvoke r1.<android.content.pm.IPackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int,int)>(r30, 786432, i0);

     label09:
        r33 = r34;

     label10:
        r29 = r33;

        r31 = r32;

        goto label12;

     label11:
        $r16 := @caughtexception;

     label12:
        if r31 == null goto label14;

        if r30 == null goto label13;

        if r29 == null goto label14;

     label13:
        return;

     label14:
        r35 = r20;

        if r20 != null goto label15;

        r35 = r20;

        $z0 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: boolean mEnableService>;

        if $z0 == 0 goto label15;

        r35 = virtualinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: android.service.voice.VoiceInteractionServiceInfo findAvailInteractor(int,java.lang.String)>(i0, null);

     label15:
        if r35 == null goto label16;

        $r5 = new android.content.ComponentName;

        $r6 = virtualinvoke r35.<android.service.voice.VoiceInteractionServiceInfo: android.content.pm.ServiceInfo getServiceInfo()>();

        $r7 = $r6.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r8 = virtualinvoke r35.<android.service.voice.VoiceInteractionServiceInfo: android.content.pm.ServiceInfo getServiceInfo()>();

        $r9 = $r8.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke $r5.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r7, $r9);

        virtualinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void setCurInteractor(android.content.ComponentName,int)>($r5, i0);

        $r10 = virtualinvoke r35.<android.service.voice.VoiceInteractionServiceInfo: java.lang.String getRecognitionService()>();

        if $r10 == null goto label16;

        $r11 = new android.content.ComponentName;

        $r12 = virtualinvoke r35.<android.service.voice.VoiceInteractionServiceInfo: android.content.pm.ServiceInfo getServiceInfo()>();

        $r13 = $r12.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r14 = virtualinvoke r35.<android.service.voice.VoiceInteractionServiceInfo: java.lang.String getRecognitionService()>();

        specialinvoke $r11.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r13, $r14);

        virtualinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void setCurRecognizer(android.content.ComponentName,int)>($r11, i0);

        return;

     label16:
        virtualinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void initSimpleRecognizer(android.service.voice.VoiceInteractionServiceInfo,int)>(r35, i0);

        return;

        catch android.os.RemoteException from label06 to label07 with label11;
        catch android.os.RemoteException from label08 to label09 with label11;
    }

    private boolean isCallerCurrentVoiceInteractionService()
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl r1;
        android.service.voice.VoiceInteractionServiceInfo $r2;
        android.content.pm.ServiceInfo $r3;
        android.content.pm.ApplicationInfo $r4;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        r1 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        if r1 == null goto label1;

        $r2 = r1.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: android.service.voice.VoiceInteractionServiceInfo mInfo>;

        $r3 = virtualinvoke $r2.<android.service.voice.VoiceInteractionServiceInfo: android.content.pm.ServiceInfo getServiceInfo()>();

        $r4 = $r3.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r4.<android.content.pm.ApplicationInfo: int uid>;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i0 != $i1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean isCallerHoldingPermission(java.lang.String)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        java.lang.String r1;
        com.android.server.voiceinteraction.VoiceInteractionManagerService $r2;
        android.content.Context $r3;
        int $i0;
        boolean z0;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r3 = $r2.<com.android.server.voiceinteraction.VoiceInteractionManagerService: android.content.Context mContext>;

        $i0 = virtualinvoke $r3.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>(r1);

        if $i0 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void setCurrentUserLocked(int)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        int i0, $i1;
        android.content.pm.UserInfo r1;
        com.android.server.voiceinteraction.VoiceInteractionManagerService $r2, $r4;
        android.os.UserManagerInternal $r3;
        boolean $z0;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        i0 := @parameter0: int;

        r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: int mCurUser> = i0;

        $r2 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r3 = $r2.<com.android.server.voiceinteraction.VoiceInteractionManagerService: android.os.UserManagerInternal mUserManagerInternal>;

        $i1 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: int mCurUser>;

        r1 = virtualinvoke $r3.<android.os.UserManagerInternal: android.content.pm.UserInfo getUserInfo(int)>($i1);

        $r4 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $z0 = staticinvoke <com.android.server.voiceinteraction.VoiceInteractionManagerService: boolean access$100(com.android.server.voiceinteraction.VoiceInteractionManagerService,android.content.pm.UserInfo)>($r4, r1);

        r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: boolean mCurUserSupported> = $z0;

        return;
    }

    private void setImplLocked(com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl r1;
        com.android.server.voiceinteraction.VoiceInteractionManagerService $r2;
        com.android.server.wm.ActivityTaskManagerInternal $r3;
        android.content.ComponentName $r4;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        r1 := @parameter0: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl;

        r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl> = r1;

        $r2 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r3 = $r2.<com.android.server.voiceinteraction.VoiceInteractionManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        $r4 = virtualinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: android.content.ComponentName getActiveServiceComponentName()>();

        virtualinvoke $r3.<com.android.server.wm.ActivityTaskManagerInternal: void notifyActiveVoiceInteractionServiceChanged(android.content.ComponentName)>($r4);

        return;
    }

    private boolean shouldEnableService(android.content.Context)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        android.content.Context r1;
        android.content.res.Resources $r2;
        java.lang.String $r3;
        android.content.pm.PackageManager $r4;
        boolean $z0;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        r1 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: java.lang.String getForceVoiceInteractionServicePackage(android.content.res.Resources)>($r2);

        if $r3 == null goto label1;

        return 1;

     label1:
        $r4 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $z0 = virtualinvoke $r4.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>("android.software.voice_recognizers");

        return $z0;
    }

    private void unloadAllKeyphraseModels()
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        long l0;
        int i1, $i2, $i3, i5;
        com.android.server.voiceinteraction.VoiceInteractionManagerService $r1, $r3, $r5, $r6, $r12;
        android.util.ArraySet $r2, $r4, $r7, $r13;
        com.android.server.soundtrigger.SoundTriggerInternal $r8;
        java.lang.Object $r9, $r14;
        java.lang.Integer $r10;
        java.lang.String $r18;
        java.lang.Throwable $r19, $r20, $r21, r23;
        java.lang.StringBuilder r22;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        entermonitor r0;

        i5 = 0;

     label01:
        $r1 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r2 = $r1.<com.android.server.voiceinteraction.VoiceInteractionManagerService: android.util.ArraySet mLoadedKeyphraseIds>;

        $i2 = virtualinvoke $r2.<android.util.ArraySet: int size()>();

        if i5 >= $i2 goto label11;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r5 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r8 = $r5.<com.android.server.voiceinteraction.VoiceInteractionManagerService: com.android.server.soundtrigger.SoundTriggerInternal mSoundTriggerInternal>;

        $r6 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r7 = $r6.<com.android.server.voiceinteraction.VoiceInteractionManagerService: android.util.ArraySet mLoadedKeyphraseIds>;

        $r9 = virtualinvoke $r7.<android.util.ArraySet: java.lang.Object valueAt(int)>(i5);

        $r10 = (java.lang.Integer) $r9;

        $i3 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

        i1 = virtualinvoke $r8.<com.android.server.soundtrigger.SoundTriggerInternal: int unloadKeyphraseModel(int)>($i3);

     label03:
        if i1 == 0 goto label07;

     label04:
        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to unload keyphrase ");

        $r12 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r13 = $r12.<com.android.server.voiceinteraction.VoiceInteractionManagerService: android.util.ArraySet mLoadedKeyphraseIds>;

        $r14 = virtualinvoke $r13.<android.util.ArraySet: java.lang.Object valueAt(int)>(i5);

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r18 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("VoiceInteractionManager", $r18);

     label05:
        goto label07;

     label06:
        $r21 := @caughtexception;

        r23 = $r21;

        goto label10;

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label08:
        i5 = i5 + 1;

        goto label01;

     label09:
        $r20 := @caughtexception;

        r23 = $r20;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r23;

     label11:
        $r3 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r4 = $r3.<com.android.server.voiceinteraction.VoiceInteractionManagerService: android.util.ArraySet mLoadedKeyphraseIds>;

        virtualinvoke $r4.<android.util.ArraySet: void clear()>();

     label12:
        exitmonitor r0;

        return;

     label13:
        $r19 := @caughtexception;

        exitmonitor r0;

        throw $r19;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    public boolean activeServiceSupportsAssist()
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl $r2, $r3, $r5;
        android.service.voice.VoiceInteractionServiceInfo $r4, $r6;
        boolean $z0, z1;
        java.lang.Throwable $r7;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void enforceCallingPermission(java.lang.String)>("android.permission.ACCESS_VOICE_INTERACTION_SERVICE");

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        if $r2 == null goto label3;

        $r3 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        $r4 = $r3.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: android.service.voice.VoiceInteractionServiceInfo mInfo>;

        if $r4 == null goto label3;

        $r5 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        $r6 = $r5.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: android.service.voice.VoiceInteractionServiceInfo mInfo>;

        $z0 = virtualinvoke $r6.<android.service.voice.VoiceInteractionServiceInfo: boolean getSupportsAssist()>();

        if $z0 == 0 goto label3;

     label2:
        z1 = 1;

        goto label4;

     label3:
        z1 = 0;

     label4:
        exitmonitor r0;

     label5:
        return z1;

     label6:
        $r7 := @caughtexception;

     label7:
        exitmonitor r0;

     label8:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public boolean activeServiceSupportsLaunchFromKeyguard() throws android.os.RemoteException
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl $r2, $r3, $r5;
        android.service.voice.VoiceInteractionServiceInfo $r4, $r6;
        boolean $z0, z1;
        java.lang.Throwable $r7;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void enforceCallingPermission(java.lang.String)>("android.permission.ACCESS_VOICE_INTERACTION_SERVICE");

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        if $r2 == null goto label3;

        $r3 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        $r4 = $r3.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: android.service.voice.VoiceInteractionServiceInfo mInfo>;

        if $r4 == null goto label3;

        $r5 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        $r6 = $r5.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: android.service.voice.VoiceInteractionServiceInfo mInfo>;

        $z0 = virtualinvoke $r6.<android.service.voice.VoiceInteractionServiceInfo: boolean getSupportsLaunchFromKeyguard()>();

        if $z0 == 0 goto label3;

     label2:
        z1 = 1;

        goto label4;

     label3:
        z1 = 0;

     label4:
        exitmonitor r0;

     label5:
        return z1;

     label6:
        $r7 := @caughtexception;

     label7:
        exitmonitor r0;

     label8:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void closeSystemDialogs(android.os.IBinder)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        long l0;
        com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl $r1, $r2;
        java.lang.Throwable $r3, $r4;
        android.os.IBinder r5;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        r5 := @parameter0: android.os.IBinder;

        entermonitor r0;

     label01:
        $r1 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        if $r1 != null goto label03;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("VoiceInteractionManager", "closeSystemDialogs without running voice interaction service");

        exitmonitor r0;

     label02:
        return;

     label03:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        $r2 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        virtualinvoke $r2.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: void closeSystemDialogsLocked(android.os.IBinder)>(r5);

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label06:
        exitmonitor r0;

     label07:
        return;

     label08:
        $r3 := @caughtexception;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label10:
        throw $r3;

     label11:
        $r4 := @caughtexception;

     label12:
        exitmonitor r0;

     label13:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public int deleteKeyphraseSoundModel(int, java.lang.String)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        int i0, i1, i4, i5;
        long l2;
        java.lang.StringBuilder r1;
        boolean z0;
        java.lang.IllegalArgumentException $r2;
        com.android.server.voiceinteraction.VoiceInteractionManagerService $r3, $r5, $r22;
        com.android.server.soundtrigger.SoundTriggerInternal $r4;
        com.android.server.voiceinteraction.DatabaseHelper $r6;
        com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl $r7, $r8, $r10;
        android.service.voice.IVoiceInteractionService $r9;
        java.lang.String $r13, r21;
        java.lang.Throwable $r15, $r16;
        android.util.ArraySet $r23;
        java.lang.Integer $r24;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        i0 := @parameter0: int;

        r21 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void enforceCallerAllowedToEnrollVoiceModel()>();

        if r21 == null goto label17;

        i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        $r3 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r4 = $r3.<com.android.server.voiceinteraction.VoiceInteractionManagerService: com.android.server.soundtrigger.SoundTriggerInternal mSoundTriggerInternal>;

        i4 = virtualinvoke $r4.<com.android.server.soundtrigger.SoundTriggerInternal: int unloadKeyphraseModel(int)>(i0);

     label02:
        if i4 == 0 goto label04;

     label03:
        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to unload keyphrase sound model:");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r13 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("VoiceInteractionManager", $r13);

     label04:
        $r5 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r6 = $r5.<com.android.server.voiceinteraction.VoiceInteractionManagerService: com.android.server.voiceinteraction.DatabaseHelper mDbHelper>;

        z0 = virtualinvoke $r6.<com.android.server.voiceinteraction.DatabaseHelper: boolean deleteKeyphraseSoundModel(int,int,java.lang.String)>(i0, i1, r21);

     label05:
        if z0 == 0 goto label06;

        i5 = 0;

        goto label07;

     label06:
        i5 = -2147483648;

     label07:
        if z0 == 0 goto label14;

        entermonitor r0;

     label08:
        $r7 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        if $r7 == null goto label09;

        $r8 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        $r9 = $r8.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: android.service.voice.IVoiceInteractionService mService>;

        if $r9 == null goto label09;

        $r10 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        virtualinvoke $r10.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: void notifySoundModelsChangedLocked()>();

     label09:
        $r22 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r23 = $r22.<com.android.server.voiceinteraction.VoiceInteractionManagerService: android.util.ArraySet mLoadedKeyphraseIds>;

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r23.<android.util.ArraySet: boolean remove(java.lang.Object)>($r24);

        exitmonitor r0;

     label10:
        goto label14;

     label11:
        $r15 := @caughtexception;

     label12:
        exitmonitor r0;

     label13:
        throw $r15;

     label14:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return i5;

     label15:
        $r16 := @caughtexception;

        goto label16;

     label16:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r16;

     label17:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Illegal argument(s) in deleteKeyphraseSoundModel");

        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public boolean deliverNewSession(android.os.IBinder, android.service.voice.IVoiceInteractionSession, com.android.internal.app.IVoiceInteractor)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        android.service.voice.IVoiceInteractionSession r1;
        com.android.internal.app.IVoiceInteractor r2;
        long l0;
        boolean z0;
        com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl $r3, $r4;
        java.lang.Throwable $r5, $r6;
        android.os.IBinder r7;
        java.lang.SecurityException r9;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        r7 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.service.voice.IVoiceInteractionSession;

        r2 := @parameter2: com.android.internal.app.IVoiceInteractor;

        entermonitor r0;

     label01:
        $r3 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        if $r3 == null goto label08;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r4 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        z0 = virtualinvoke $r4.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: boolean deliverNewSessionLocked(android.os.IBinder,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor)>(r7, r1, r2);

     label03:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        exitmonitor r0;

     label04:
        return z0;

     label05:
        $r5 := @caughtexception;

     label06:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label07:
        throw $r5;

     label08:
        r9 = new java.lang.SecurityException;

        specialinvoke r9.<java.lang.SecurityException: void <init>(java.lang.String)>("deliverNewSession without running voice interaction service");

        throw r9;

     label09:
        $r6 := @caughtexception;

     label10:
        exitmonitor r0;

     label11:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        java.io.PrintWriter r1;
        java.lang.String[] r2;
        com.android.server.voiceinteraction.VoiceInteractionManagerService $r3, $r20, $r21, $r25;
        android.content.Context $r4;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String $r7, $r10, $r13, $r16, $r19;
        int $i0;
        com.android.server.voiceinteraction.DatabaseHelper $r22;
        com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl $r23, $r24;
        com.android.server.soundtrigger.SoundTriggerInternal $r26;
        java.lang.Throwable $r27;
        java.io.FileDescriptor r28;
        java.lang.StringBuilder r29, r30, r31, r32, r33;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        r28 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r2 := @parameter2: java.lang.String[];

        $r3 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r4 = $r3.<com.android.server.voiceinteraction.VoiceInteractionManagerService: android.content.Context mContext>;

        $z0 = staticinvoke <com.android.internal.util.DumpUtils: boolean checkDumpPermission(android.content.Context,java.lang.String,java.io.PrintWriter)>($r4, "VoiceInteractionManager", r1);

        if $z0 != 0 goto label1;

        return;

     label1:
        entermonitor r0;

     label2:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("VOICE INTERACTION MANAGER (dumpsys voiceinteraction)");

        r29 = new java.lang.StringBuilder;

        specialinvoke r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mEnableService: ");

        $z1 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: boolean mEnableService>;

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r7 = virtualinvoke r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mTemporarilyDisabled: ");

        $z2 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: boolean mTemporarilyDisabled>;

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r10 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r10);

        r31 = new java.lang.StringBuilder;

        specialinvoke r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCurUser: ");

        $i0 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: int mCurUser>;

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r13 = virtualinvoke r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r13);

        r32 = new java.lang.StringBuilder;

        specialinvoke r32.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCurUserUnlocked: ");

        $z3 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: boolean mCurUserUnlocked>;

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r16 = virtualinvoke r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r16);

        r33 = new java.lang.StringBuilder;

        specialinvoke r33.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCurUserSupported: ");

        $z4 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: boolean mCurUserSupported>;

        virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r19 = virtualinvoke r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r19);

        $r20 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        staticinvoke <com.android.server.voiceinteraction.VoiceInteractionManagerService: void access$300(com.android.server.voiceinteraction.VoiceInteractionManagerService,java.io.PrintWriter,java.lang.String)>($r20, r1, "  ");

        $r21 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r22 = $r21.<com.android.server.voiceinteraction.VoiceInteractionManagerService: com.android.server.voiceinteraction.DatabaseHelper mDbHelper>;

        virtualinvoke $r22.<com.android.server.voiceinteraction.DatabaseHelper: void dump(java.io.PrintWriter)>(r1);

        $r23 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        if $r23 != null goto label4;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  (No active implementation)");

     label3:
        goto label5;

     label4:
        $r24 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        virtualinvoke $r24.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: void dumpLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r28, r1, r2);

     label5:
        exitmonitor r0;

     label6:
        $r25 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r26 = $r25.<com.android.server.voiceinteraction.VoiceInteractionManagerService: com.android.server.soundtrigger.SoundTriggerInternal mSoundTriggerInternal>;

        virtualinvoke $r26.<com.android.server.soundtrigger.SoundTriggerInternal: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r28, r1, r2);

        return;

     label7:
        $r27 := @caughtexception;

     label8:
        exitmonitor r0;

     label9:
        throw $r27;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    android.service.voice.VoiceInteractionServiceInfo findAvailInteractor(int, java.lang.String)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        int i0, i1, $i2, $i3, i8;
        java.util.List r1;
        android.content.pm.ServiceInfo r2, $r25, $r27, $r35;
        com.android.server.voiceinteraction.VoiceInteractionManagerService $r4, $r14;
        android.content.Context $r5, $r15;
        android.content.pm.PackageManager $r6, $r16;
        android.content.Intent $r7;
        java.lang.Object $r8;
        android.content.pm.ResolveInfo $r9;
        android.content.pm.ApplicationInfo $r10;
        android.content.ComponentName $r11, r52, r53;
        java.lang.String $r12, $r13, $r17, $r21, $r23, $r26, $r28, $r31, $r32, $r34, $r36, $r40, $r45, r46;
        boolean $z0;
        java.lang.StringBuilder $r37, $r42, r51, r54;
        android.content.pm.PackageManager$NameNotFoundException $r41;
        android.service.voice.VoiceInteractionServiceInfo r48, r49, r50;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        i0 := @parameter0: int;

        r46 := @parameter1: java.lang.String;

        $r4 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r5 = $r4.<com.android.server.voiceinteraction.VoiceInteractionManagerService: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>(java.lang.String)>("android.service.voice.VoiceInteractionService");

        r1 = virtualinvoke $r6.<android.content.pm.PackageManager: java.util.List queryIntentServicesAsUser(android.content.Intent,int,int)>($r7, 269221888, i0);

        i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if i1 != 0 goto label01;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no available voice interaction services found for user ");

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r40 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("VoiceInteractionManager", $r40);

        return null;

     label01:
        r48 = null;

        i8 = 0;

     label02:
        if i8 >= i1 goto label14;

        $r8 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i8);

        $r9 = (android.content.pm.ResolveInfo) $r8;

        r2 = $r9.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        r49 = r48;

        $r10 = r2.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r10.<android.content.pm.ApplicationInfo: int flags>;

        $i3 = $i2 & 1;

        if $i3 == 0 goto label13;

        $r11 = new android.content.ComponentName;

        $r13 = r2.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r12 = r2.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke $r11.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r13, $r12);

     label03:
        r50 = new android.service.voice.VoiceInteractionServiceInfo;

        $r14 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r15 = $r14.<com.android.server.voiceinteraction.VoiceInteractionManagerService: android.content.Context mContext>;

        $r16 = virtualinvoke $r15.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        specialinvoke r50.<android.service.voice.VoiceInteractionServiceInfo: void <init>(android.content.pm.PackageManager,android.content.ComponentName,int)>($r16, $r11, i0);

        $r17 = virtualinvoke r50.<android.service.voice.VoiceInteractionServiceInfo: java.lang.String getParseError()>();

        if $r17 != null goto label09;

     label04:
        if r46 == null goto label06;

        r49 = r48;

     label05:
        $r35 = virtualinvoke r50.<android.service.voice.VoiceInteractionServiceInfo: android.content.pm.ServiceInfo getServiceInfo()>();

        $r36 = $r35.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $z0 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>(r46);

        if $z0 == 0 goto label11;

     label06:
        if r48 != null goto label07;

        r49 = r50;

        goto label11;

     label07:
        r51 = new java.lang.StringBuilder;

        specialinvoke r51.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("More than one voice interaction service, picking first ");

        r52 = new android.content.ComponentName;

        $r25 = virtualinvoke r48.<android.service.voice.VoiceInteractionServiceInfo: android.content.pm.ServiceInfo getServiceInfo()>();

        $r26 = $r25.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r27 = virtualinvoke r48.<android.service.voice.VoiceInteractionServiceInfo: android.content.pm.ServiceInfo getServiceInfo()>();

        $r28 = $r27.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke r52.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r26, $r28);

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r52);

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" over ");

        r53 = new android.content.ComponentName;

        $r32 = r2.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r31 = r2.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke r53.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r32, $r31);

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r53);

        $r34 = virtualinvoke r51.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("VoiceInteractionManager", $r34);

     label08:
        r49 = r48;

        goto label11;

     label09:
        r54 = new java.lang.StringBuilder;

        specialinvoke r54.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad interaction service ");

        virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r21 = virtualinvoke r50.<android.service.voice.VoiceInteractionServiceInfo: java.lang.String getParseError()>();

        virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke r54.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("VoiceInteractionManager", $r23);

     label10:
        r49 = r48;

     label11:
        goto label13;

     label12:
        $r41 := @caughtexception;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure looking up interaction service ");

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r45 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("VoiceInteractionManager", $r45);

        r49 = r48;

     label13:
        i8 = i8 + 1;

        r48 = r49;

        goto label02;

     label14:
        return r48;

        catch android.content.pm.PackageManager$NameNotFoundException from label03 to label04 with label12;
        catch android.content.pm.PackageManager$NameNotFoundException from label05 to label06 with label12;
        catch android.content.pm.PackageManager$NameNotFoundException from label07 to label08 with label12;
        catch android.content.pm.PackageManager$NameNotFoundException from label09 to label10 with label12;
    }

    android.content.ComponentName findAvailRecognizer(java.lang.String, int)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        java.util.List r1;
        int i0, i3, i4;
        android.content.pm.ServiceInfo r2, r24;
        com.android.server.voiceinteraction.VoiceInteractionManagerService $r3;
        android.content.Context $r4;
        android.content.pm.PackageManager $r5;
        android.content.Intent $r6;
        java.lang.Object $r7, $r12;
        android.content.pm.ResolveInfo $r8, $r13;
        android.content.ComponentName $r9, $r15;
        java.lang.String $r10, $r11, $r14, $r16, $r17, $r21, r22;
        boolean $z0;
        java.lang.StringBuilder $r18;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        r22 := @parameter0: java.lang.String;

        i3 := @parameter1: int;

        $r3 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r4 = $r3.<com.android.server.voiceinteraction.VoiceInteractionManagerService: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r6 = new android.content.Intent;

        specialinvoke $r6.<android.content.Intent: void <init>(java.lang.String)>("android.speech.RecognitionService");

        r1 = virtualinvoke $r5.<android.content.pm.PackageManager: java.util.List queryIntentServicesAsUser(android.content.Intent,int,int)>($r6, 786432, i3);

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if i0 != 0 goto label1;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no available voice recognition services found for user ");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("VoiceInteractionManager", $r21);

        return null;

     label1:
        if r22 == null goto label4;

        i4 = 0;

     label2:
        if i4 >= i0 goto label4;

        $r12 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i4);

        $r13 = (android.content.pm.ResolveInfo) $r12;

        r2 = $r13.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r14 = r2.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $z0 = virtualinvoke r22.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z0 == 0 goto label3;

        $r15 = new android.content.ComponentName;

        $r17 = r2.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r16 = r2.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke $r15.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r17, $r16);

        return $r15;

     label3:
        i4 = i4 + 1;

        goto label2;

     label4:
        if i0 <= 1 goto label5;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("VoiceInteractionManager", "more than one voice recognition service found, picking first");

     label5:
        $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r8 = (android.content.pm.ResolveInfo) $r7;

        r24 = $r8.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r9 = new android.content.ComponentName;

        $r11 = r24.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r10 = r24.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke $r9.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r11, $r10);

        return $r9;
    }

    public void finish(android.os.IBinder)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        long l0;
        com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl $r1, $r2;
        java.lang.Throwable $r3, $r4;
        android.os.IBinder r5;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        r5 := @parameter0: android.os.IBinder;

        entermonitor r0;

     label01:
        $r1 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        if $r1 != null goto label03;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("VoiceInteractionManager", "finish without running voice interaction service");

        exitmonitor r0;

     label02:
        return;

     label03:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        $r2 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        virtualinvoke $r2.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: void finishLocked(android.os.IBinder,boolean)>(r5, 0);

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label06:
        exitmonitor r0;

     label07:
        return;

     label08:
        $r3 := @caughtexception;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label10:
        throw $r3;

     label11:
        $r4 := @caughtexception;

     label12:
        exitmonitor r0;

     label13:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public android.content.ComponentName getActiveServiceComponentName()
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl $r1, $r2;
        java.lang.Throwable $r3;
        android.content.ComponentName r4;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void enforceCallingPermission(java.lang.String)>("android.permission.ACCESS_VOICE_INTERACTION_SERVICE");

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        if $r1 == null goto label3;

        $r2 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        r4 = $r2.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: android.content.ComponentName mComponent>;

     label2:
        goto label4;

     label3:
        r4 = null;

     label4:
        exitmonitor r0;

     label5:
        return r4;

     label6:
        $r3 := @caughtexception;

     label7:
        exitmonitor r0;

     label8:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void getActiveServiceSupportedActions(java.util.List, com.android.internal.app.IVoiceActionCheckCallback)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        com.android.internal.app.IVoiceActionCheckCallback r1;
        com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl r2, $r3;
        long l0;
        java.lang.Throwable $r4, $r6;
        android.os.RemoteException $r5;
        java.util.List r7;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        r7 := @parameter0: java.util.List;

        r1 := @parameter1: com.android.internal.app.IVoiceActionCheckCallback;

        specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void enforceCallingPermission(java.lang.String)>("android.permission.ACCESS_VOICE_INTERACTION_SERVICE");

        entermonitor r0;

     label01:
        r2 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

     label02:
        if r2 != null goto label08;

     label03:
        interfaceinvoke r1.<com.android.internal.app.IVoiceActionCheckCallback: void onComplete(java.util.List)>(null);

     label04:
        goto label06;

     label05:
        $r5 := @caughtexception;

     label06:
        exitmonitor r0;

     label07:
        return;

     label08:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label09:
        $r3 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        virtualinvoke $r3.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: void getActiveServiceSupportedActions(java.util.List,com.android.internal.app.IVoiceActionCheckCallback)>(r7, r1);

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label11:
        exitmonitor r0;

     label12:
        return;

     label13:
        $r4 := @caughtexception;

     label14:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label15:
        throw $r4;

     label16:
        $r6 := @caughtexception;

     label17:
        exitmonitor r0;

     label18:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label15 to label16 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    android.content.ComponentName getCurAssistant(int)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        int i0;
        java.lang.String r1;
        com.android.server.voiceinteraction.VoiceInteractionManagerService $r2;
        android.content.Context $r3;
        android.content.ContentResolver $r4;
        boolean $z0;
        android.content.ComponentName $r5;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r3 = $r2.<com.android.server.voiceinteraction.VoiceInteractionManagerService: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r1 = staticinvoke <android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>($r4, "assistant", i0);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r5 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>(r1);

        return $r5;
    }

    android.content.ComponentName getCurInteractor(int)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        int i0;
        java.lang.String r1;
        com.android.server.voiceinteraction.VoiceInteractionManagerService $r2;
        android.content.Context $r3;
        android.content.ContentResolver $r4;
        boolean $z0;
        android.content.ComponentName $r5;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r3 = $r2.<com.android.server.voiceinteraction.VoiceInteractionManagerService: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r1 = staticinvoke <android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>($r4, "voice_interaction_service", i0);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r5 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>(r1);

        return $r5;
    }

    android.content.ComponentName getCurRecognizer(int)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        int i0;
        java.lang.String r1;
        com.android.server.voiceinteraction.VoiceInteractionManagerService $r2;
        android.content.Context $r3;
        android.content.ContentResolver $r4;
        boolean $z0;
        android.content.ComponentName $r5;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r3 = $r2.<com.android.server.voiceinteraction.VoiceInteractionManagerService: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r1 = staticinvoke <android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>($r4, "voice_recognition_service", i0);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r5 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>(r1);

        return $r5;
    }

    public int getDisabledShowContext()
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        long l0;
        com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl $r1, $r2;
        java.lang.Throwable $r3, $r4;
        int i2, i3;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        entermonitor r0;

     label01:
        $r1 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        if $r1 != null goto label03;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("VoiceInteractionManager", "getDisabledShowContext without running voice interaction service");

        exitmonitor r0;

     label02:
        return 0;

     label03:
        i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        $r2 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        i3 = virtualinvoke $r2.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: int getDisabledShowContextLocked(int)>(i2);

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        exitmonitor r0;

     label06:
        return i3;

     label07:
        $r3 := @caughtexception;

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label09:
        throw $r3;

     label10:
        $r4 := @caughtexception;

     label11:
        exitmonitor r0;

     label12:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label09 to label10 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public android.hardware.soundtrigger.SoundTrigger$ModuleProperties getDspModuleProperties()
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        long l0;
        com.android.server.voiceinteraction.VoiceInteractionManagerService $r1;
        com.android.server.soundtrigger.SoundTriggerInternal $r2;
        java.lang.Throwable $r3, $r4;
        android.hardware.soundtrigger.SoundTrigger$ModuleProperties r5;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        entermonitor r0;

     label01:
        specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void enforceIsCurrentVoiceInteractionService()>();

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r1 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r2 = $r1.<com.android.server.voiceinteraction.VoiceInteractionManagerService: com.android.server.soundtrigger.SoundTriggerInternal mSoundTriggerInternal>;

        r5 = virtualinvoke $r2.<com.android.server.soundtrigger.SoundTriggerInternal: android.hardware.soundtrigger.SoundTrigger$ModuleProperties getModuleProperties()>();

     label03:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        exitmonitor r0;

     label04:
        return r5;

     label05:
        $r4 := @caughtexception;

     label06:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label07:
        throw $r4;

     label08:
        $r3 := @caughtexception;

     label09:
        exitmonitor r0;

     label10:
        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public android.hardware.soundtrigger.KeyphraseMetadata getEnrolledKeyphraseMetadata(java.lang.String, java.lang.String)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        long l0;
        android.hardware.soundtrigger.SoundTrigger$Keyphrase[] r1;
        int i1, $i2, $i3, i4, i5;
        java.lang.IllegalArgumentException $r2;
        com.android.server.voiceinteraction.VoiceInteractionManagerService $r3;
        com.android.server.voiceinteraction.DatabaseHelper $r4;
        java.lang.String $r5, $r8, r11, r12;
        boolean $z0;
        java.util.Locale $r6;
        android.hardware.soundtrigger.KeyphraseMetadata $r7;
        java.lang.Throwable $r9, $r10;
        android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel r13;
        android.hardware.soundtrigger.SoundTrigger$Keyphrase r14;
        android.util.ArraySet r15;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        r11 := @parameter0: java.lang.String;

        r12 := @parameter1: java.lang.String;

        entermonitor r0;

     label01:
        specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void enforceIsCurrentVoiceInteractionService()>();

        exitmonitor r0;

     label02:
        if r12 == null goto label13;

        i4 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label03:
        $r3 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r4 = $r3.<com.android.server.voiceinteraction.VoiceInteractionManagerService: com.android.server.voiceinteraction.DatabaseHelper mDbHelper>;

        r13 = virtualinvoke $r4.<com.android.server.voiceinteraction.DatabaseHelper: android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel getKeyphraseSoundModel(java.lang.String,int,java.lang.String)>(r11, i4, r12);

     label04:
        if r13 != null goto label05;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return null;

     label05:
        r1 = virtualinvoke r13.<android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel: android.hardware.soundtrigger.SoundTrigger$Keyphrase[] getKeyphrases()>();

        i1 = lengthof r1;

     label06:
        i5 = 0;

     label07:
        if i5 >= i1 goto label11;

        r14 = r1[i5];

     label08:
        $r5 = virtualinvoke r14.<android.hardware.soundtrigger.SoundTrigger$Keyphrase: java.lang.String getText()>();

        $z0 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label10;

        r15 = new android.util.ArraySet;

        specialinvoke r15.<android.util.ArraySet: void <init>()>();

        $r6 = virtualinvoke r14.<android.hardware.soundtrigger.SoundTrigger$Keyphrase: java.util.Locale getLocale()>();

        virtualinvoke r15.<android.util.ArraySet: boolean add(java.lang.Object)>($r6);

        $r7 = new android.hardware.soundtrigger.KeyphraseMetadata;

        $i2 = virtualinvoke r14.<android.hardware.soundtrigger.SoundTrigger$Keyphrase: int getId()>();

        $r8 = virtualinvoke r14.<android.hardware.soundtrigger.SoundTrigger$Keyphrase: java.lang.String getText()>();

        $i3 = virtualinvoke r14.<android.hardware.soundtrigger.SoundTrigger$Keyphrase: int getRecognitionModes()>();

        specialinvoke $r7.<android.hardware.soundtrigger.KeyphraseMetadata: void <init>(int,java.lang.String,java.util.Set,int)>($i2, $r8, r15, $i3);

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return $r7;

     label10:
        i5 = i5 + 1;

        goto label07;

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return null;

     label12:
        $r9 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r9;

     label13:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Illegal argument(s) in isEnrolledForKeyphrase");

        throw $r2;

     label14:
        $r10 := @caughtexception;

     label15:
        exitmonitor r0;

     label16:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    public android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel getKeyphraseSoundModel(int, java.lang.String)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        int i0, i1;
        long l2;
        java.lang.IllegalArgumentException $r1;
        com.android.server.voiceinteraction.VoiceInteractionManagerService $r2;
        com.android.server.voiceinteraction.DatabaseHelper $r3;
        java.lang.Throwable $r4;
        java.lang.String r5;
        android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel r6;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        i0 := @parameter0: int;

        r5 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void enforceCallerAllowedToEnrollVoiceModel()>();

        if r5 == null goto label4;

        i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r3 = $r2.<com.android.server.voiceinteraction.VoiceInteractionManagerService: com.android.server.voiceinteraction.DatabaseHelper mDbHelper>;

        r6 = virtualinvoke $r3.<com.android.server.voiceinteraction.DatabaseHelper: android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel getKeyphraseSoundModel(int,int,java.lang.String)>(i0, i1, r5);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return r6;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r4;

     label4:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Illegal argument(s) in getKeyphraseSoundModel");

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getParameter(int, int)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        int i0, i2, i3;
        long l1;
        com.android.server.voiceinteraction.VoiceInteractionManagerService $r1;
        com.android.server.soundtrigger.SoundTriggerInternal $r2;
        java.lang.Throwable $r3, $r4;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        entermonitor r0;

     label1:
        specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void enforceIsCurrentVoiceInteractionService()>();

        exitmonitor r0;

     label2:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label3:
        $r1 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r2 = $r1.<com.android.server.voiceinteraction.VoiceInteractionManagerService: com.android.server.soundtrigger.SoundTriggerInternal mSoundTriggerInternal>;

        i3 = virtualinvoke $r2.<com.android.server.soundtrigger.SoundTriggerInternal: int getParameter(int,int)>(i2, i0);

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return i3;

     label5:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r4;

     label6:
        $r3 := @caughtexception;

     label7:
        exitmonitor r0;

     label8:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public int getUserDisabledShowContext()
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        long l0;
        com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl $r1, $r2;
        java.lang.Throwable $r3, $r4;
        int i2, i3;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        entermonitor r0;

     label01:
        $r1 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        if $r1 != null goto label03;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("VoiceInteractionManager", "getUserDisabledShowContext without running voice interaction service");

        exitmonitor r0;

     label02:
        return 0;

     label03:
        i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        $r2 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        i3 = virtualinvoke $r2.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: int getUserDisabledShowContextLocked(int)>(i2);

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        exitmonitor r0;

     label06:
        return i3;

     label07:
        $r4 := @caughtexception;

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label09:
        throw $r4;

     label10:
        $r3 := @caughtexception;

     label11:
        exitmonitor r0;

     label12:
        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label09 to label10 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void hideCurrentSession() throws android.os.RemoteException
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        long l0;
        com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl $r1, $r2, $r4, $r6;
        com.android.server.voiceinteraction.VoiceInteractionSessionConnection $r3, $r5, $r7;
        android.service.voice.IVoiceInteractionSession $r8, r12;
        java.lang.Throwable $r9, $r10;
        android.os.RemoteException $r11;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void enforceCallingPermission(java.lang.String)>("android.permission.ACCESS_VOICE_INTERACTION_SERVICE");

        entermonitor r0;

     label01:
        $r1 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        if $r1 != null goto label03;

        exitmonitor r0;

     label02:
        return;

     label03:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        $r2 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        $r3 = $r2.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: com.android.server.voiceinteraction.VoiceInteractionSessionConnection mActiveSession>;

        if $r3 == null goto label10;

        $r4 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        $r5 = $r4.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: com.android.server.voiceinteraction.VoiceInteractionSessionConnection mActiveSession>;

        r12 = $r5.<com.android.server.voiceinteraction.VoiceInteractionSessionConnection: android.service.voice.IVoiceInteractionSession mSession>;

     label05:
        if r12 == null goto label10;

     label06:
        $r6 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        $r7 = $r6.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: com.android.server.voiceinteraction.VoiceInteractionSessionConnection mActiveSession>;

        $r8 = $r7.<com.android.server.voiceinteraction.VoiceInteractionSessionConnection: android.service.voice.IVoiceInteractionSession mSession>;

        interfaceinvoke $r8.<android.service.voice.IVoiceInteractionSession: void closeSystemDialogs()>();

     label07:
        goto label10;

     label08:
        $r11 := @caughtexception;

     label09:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("VoiceInteractionManager", "Failed to call closeSystemDialogs", $r11);

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label11:
        exitmonitor r0;

     label12:
        return;

     label13:
        $r10 := @caughtexception;

     label14:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label15:
        throw $r10;

     label16:
        $r9 := @caughtexception;

     label17:
        exitmonitor r0;

     label18:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch android.os.RemoteException from label06 to label07 with label08;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label15 to label16 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    public boolean hideSessionFromSession(android.os.IBinder)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        long l0;
        boolean z0;
        com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl $r1, $r2;
        java.lang.Throwable $r3, $r4;
        android.os.IBinder r5;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        r5 := @parameter0: android.os.IBinder;

        entermonitor r0;

     label01:
        $r1 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        if $r1 != null goto label03;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("VoiceInteractionManager", "hideSessionFromSession without running voice interaction service");

        exitmonitor r0;

     label02:
        return 0;

     label03:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        $r2 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        z0 = virtualinvoke $r2.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: boolean hideSessionLocked()>();

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        exitmonitor r0;

     label06:
        return z0;

     label07:
        $r3 := @caughtexception;

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label09:
        throw $r3;

     label10:
        $r4 := @caughtexception;

     label11:
        exitmonitor r0;

     label12:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label09 to label10 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void initForUser(int)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        int i0;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void initForUserNoTracing(int)>(i0);

        goto label1;

     label1:
        return;
    }

    public void initSimpleRecognizer(android.service.voice.VoiceInteractionServiceInfo, int)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        android.service.voice.VoiceInteractionServiceInfo r1;
        int i0;
        android.content.ComponentName r2;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        r1 := @parameter0: android.service.voice.VoiceInteractionServiceInfo;

        i0 := @parameter1: int;

        r2 = virtualinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: android.content.ComponentName findAvailRecognizer(java.lang.String,int)>(null, i0);

        if r2 == null goto label2;

        if r1 != null goto label1;

        virtualinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void setCurInteractor(android.content.ComponentName,int)>(null, i0);

     label1:
        virtualinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void setCurRecognizer(android.content.ComponentName,int)>(r2, i0);

     label2:
        return;
    }

    public boolean isEnrolledForKeyphrase(int, java.lang.String)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        int i0, i1;
        long l2;
        java.lang.IllegalArgumentException $r1;
        com.android.server.voiceinteraction.VoiceInteractionManagerService $r2;
        com.android.server.voiceinteraction.DatabaseHelper $r3;
        java.lang.Throwable $r4, $r5;
        java.lang.String r6;
        android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel r7;
        boolean z0;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        i0 := @parameter0: int;

        r6 := @parameter1: java.lang.String;

        entermonitor r0;

     label01:
        specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void enforceIsCurrentVoiceInteractionService()>();

        exitmonitor r0;

     label02:
        if r6 == null goto label08;

        i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label03:
        $r2 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r3 = $r2.<com.android.server.voiceinteraction.VoiceInteractionManagerService: com.android.server.voiceinteraction.DatabaseHelper mDbHelper>;

        r7 = virtualinvoke $r3.<com.android.server.voiceinteraction.DatabaseHelper: android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel getKeyphraseSoundModel(int,int,java.lang.String)>(i0, i1, r6);

     label04:
        if r7 == null goto label05;

        z0 = 1;

        goto label06;

     label05:
        z0 = 0;

     label06:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return z0;

     label07:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r5;

     label08:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Illegal argument(s) in isEnrolledForKeyphrase");

        throw $r1;

     label09:
        $r4 := @caughtexception;

     label10:
        exitmonitor r0;

     label11:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public boolean isSessionRunning()
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl $r2, $r3;
        com.android.server.voiceinteraction.VoiceInteractionSessionConnection $r4;
        java.lang.Throwable $r5;
        boolean z0;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void enforceCallingPermission(java.lang.String)>("android.permission.ACCESS_VOICE_INTERACTION_SERVICE");

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        if $r2 == null goto label3;

        $r3 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        $r4 = $r3.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: com.android.server.voiceinteraction.VoiceInteractionSessionConnection mActiveSession>;

        if $r4 == null goto label3;

     label2:
        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        exitmonitor r0;

     label5:
        return z0;

     label6:
        $r5 := @caughtexception;

     label7:
        exitmonitor r0;

     label8:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void lambda$switchUser$0$VoiceInteractionManagerService$VoiceInteractionManagerServiceStub(int)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        int i0;
        java.lang.Throwable $r2;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void setCurrentUserLocked(int)>(i0);

        r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: boolean mCurUserUnlocked> = 0;

        virtualinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void switchImplementationIfNeededLocked(boolean)>(0);

        exitmonitor r0;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void launchVoiceAssistFromKeyguard()
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        long l0;
        com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl $r1, $r2;
        java.lang.Throwable $r3, $r4;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void enforceCallingPermission(java.lang.String)>("android.permission.ACCESS_VOICE_INTERACTION_SERVICE");

        entermonitor r0;

     label01:
        $r1 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        if $r1 != null goto label03;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("VoiceInteractionManager", "launchVoiceAssistFromKeyguard without running voice interactionservice");

        exitmonitor r0;

     label02:
        return;

     label03:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        $r2 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        virtualinvoke $r2.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: void launchVoiceAssistFromKeyguard()>();

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label06:
        exitmonitor r0;

     label07:
        return;

     label08:
        $r4 := @caughtexception;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label10:
        throw $r4;

     label11:
        $r3 := @caughtexception;

     label12:
        exitmonitor r0;

     label13:
        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public void onLockscreenShown()
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        long l0;
        com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl $r1, $r2, $r4, $r6;
        com.android.server.voiceinteraction.VoiceInteractionSessionConnection $r3, $r5, $r7;
        android.service.voice.IVoiceInteractionSession $r8, r12;
        java.lang.Throwable $r9, $r11;
        android.os.RemoteException $r10;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void enforceCallingPermission(java.lang.String)>("android.permission.ACCESS_VOICE_INTERACTION_SERVICE");

        entermonitor r0;

     label01:
        $r1 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        if $r1 != null goto label03;

        exitmonitor r0;

     label02:
        return;

     label03:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        $r2 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        $r3 = $r2.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: com.android.server.voiceinteraction.VoiceInteractionSessionConnection mActiveSession>;

        if $r3 == null goto label10;

        $r4 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        $r5 = $r4.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: com.android.server.voiceinteraction.VoiceInteractionSessionConnection mActiveSession>;

        r12 = $r5.<com.android.server.voiceinteraction.VoiceInteractionSessionConnection: android.service.voice.IVoiceInteractionSession mSession>;

     label05:
        if r12 == null goto label10;

     label06:
        $r6 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        $r7 = $r6.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: com.android.server.voiceinteraction.VoiceInteractionSessionConnection mActiveSession>;

        $r8 = $r7.<com.android.server.voiceinteraction.VoiceInteractionSessionConnection: android.service.voice.IVoiceInteractionSession mSession>;

        interfaceinvoke $r8.<android.service.voice.IVoiceInteractionSession: void onLockscreenShown()>();

     label07:
        goto label10;

     label08:
        $r10 := @caughtexception;

     label09:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("VoiceInteractionManager", "Failed to call onLockscreenShown", $r10);

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label11:
        exitmonitor r0;

     label12:
        return;

     label13:
        $r11 := @caughtexception;

     label14:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label15:
        throw $r11;

     label16:
        $r9 := @caughtexception;

     label17:
        exitmonitor r0;

     label18:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch android.os.RemoteException from label06 to label07 with label08;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label15 to label16 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    public void onSessionHidden()
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        int i0, i2;
        com.android.server.voiceinteraction.VoiceInteractionManagerService $r1, $r3, $r5;
        android.os.RemoteCallbackList $r2, $r4, $r6;
        android.os.IInterface $r7;
        android.os.RemoteException $r8;
        java.lang.Throwable $r9;
        com.android.internal.app.IVoiceInteractionSessionListener r10;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        entermonitor r0;

     label01:
        $r1 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r2 = staticinvoke <com.android.server.voiceinteraction.VoiceInteractionManagerService: android.os.RemoteCallbackList access$200(com.android.server.voiceinteraction.VoiceInteractionManagerService)>($r1);

        i0 = virtualinvoke $r2.<android.os.RemoteCallbackList: int beginBroadcast()>();

     label02:
        i2 = 0;

     label03:
        if i2 >= i0 goto label10;

     label04:
        $r5 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r6 = staticinvoke <com.android.server.voiceinteraction.VoiceInteractionManagerService: android.os.RemoteCallbackList access$200(com.android.server.voiceinteraction.VoiceInteractionManagerService)>($r5);

        $r7 = virtualinvoke $r6.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i2);

        r10 = (com.android.internal.app.IVoiceInteractionSessionListener) $r7;

     label05:
        interfaceinvoke r10.<com.android.internal.app.IVoiceInteractionSessionListener: void onVoiceSessionHidden()>();

     label06:
        goto label09;

     label07:
        $r8 := @caughtexception;

     label08:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("VoiceInteractionManager", "Error delivering voice interaction closed event.", $r8);

     label09:
        i2 = i2 + 1;

        goto label03;

     label10:
        $r3 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r4 = staticinvoke <com.android.server.voiceinteraction.VoiceInteractionManagerService: android.os.RemoteCallbackList access$200(com.android.server.voiceinteraction.VoiceInteractionManagerService)>($r3);

        virtualinvoke $r4.<android.os.RemoteCallbackList: void finishBroadcast()>();

        exitmonitor r0;

     label11:
        return;

     label12:
        $r9 := @caughtexception;

     label13:
        exitmonitor r0;

     label14:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void onSessionShown()
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        int i0, i2;
        com.android.server.voiceinteraction.VoiceInteractionManagerService $r1, $r3, $r5;
        android.os.RemoteCallbackList $r2, $r4, $r6;
        android.os.IInterface $r7;
        java.lang.Throwable $r8;
        android.os.RemoteException $r9;
        com.android.internal.app.IVoiceInteractionSessionListener r10;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        entermonitor r0;

     label01:
        $r1 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r2 = staticinvoke <com.android.server.voiceinteraction.VoiceInteractionManagerService: android.os.RemoteCallbackList access$200(com.android.server.voiceinteraction.VoiceInteractionManagerService)>($r1);

        i0 = virtualinvoke $r2.<android.os.RemoteCallbackList: int beginBroadcast()>();

     label02:
        i2 = 0;

     label03:
        if i2 >= i0 goto label10;

     label04:
        $r5 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r6 = staticinvoke <com.android.server.voiceinteraction.VoiceInteractionManagerService: android.os.RemoteCallbackList access$200(com.android.server.voiceinteraction.VoiceInteractionManagerService)>($r5);

        $r7 = virtualinvoke $r6.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i2);

        r10 = (com.android.internal.app.IVoiceInteractionSessionListener) $r7;

     label05:
        interfaceinvoke r10.<com.android.internal.app.IVoiceInteractionSessionListener: void onVoiceSessionShown()>();

     label06:
        goto label09;

     label07:
        $r9 := @caughtexception;

     label08:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("VoiceInteractionManager", "Error delivering voice interaction open event.", $r9);

     label09:
        i2 = i2 + 1;

        goto label03;

     label10:
        $r3 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r4 = staticinvoke <com.android.server.voiceinteraction.VoiceInteractionManagerService: android.os.RemoteCallbackList access$200(com.android.server.voiceinteraction.VoiceInteractionManagerService)>($r3);

        virtualinvoke $r4.<android.os.RemoteCallbackList: void finishBroadcast()>();

        exitmonitor r0;

     label11:
        return;

     label12:
        $r8 := @caughtexception;

     label13:
        exitmonitor r0;

     label14:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void onShellCommand(java.io.FileDescriptor, java.io.FileDescriptor, java.io.FileDescriptor, java.lang.String[], android.os.ShellCallback, android.os.ResultReceiver)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0, $r9;
        java.io.FileDescriptor r1, r2, r3;
        java.lang.String[] r4;
        android.os.ShellCallback r5;
        android.os.ResultReceiver r6;
        com.android.server.voiceinteraction.VoiceInteractionManagerServiceShellCommand $r7;
        com.android.server.voiceinteraction.VoiceInteractionManagerService $r8;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.FileDescriptor;

        r3 := @parameter2: java.io.FileDescriptor;

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: android.os.ShellCallback;

        r6 := @parameter5: android.os.ResultReceiver;

        $r7 = new com.android.server.voiceinteraction.VoiceInteractionManagerServiceShellCommand;

        $r8 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r9 = staticinvoke <com.android.server.voiceinteraction.VoiceInteractionManagerService: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub access$000(com.android.server.voiceinteraction.VoiceInteractionManagerService)>($r8);

        specialinvoke $r7.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceShellCommand: void <init>(com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub)>($r9);

        virtualinvoke $r7.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceShellCommand: int exec(android.os.Binder,java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>(r0, r1, r2, r3, r4, r5, r6);

        return;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        int i0, i1;
        android.os.Parcel r1, r3;
        boolean z0, $z1;
        java.lang.RuntimeException $r2;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        i0 := @parameter0: int;

        r3 := @parameter1: android.os.Parcel;

        r1 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

     label1:
        z0 = specialinvoke r0.<com.android.internal.app.IVoiceInteractionManagerService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r3, r1, i1);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $z1 = $r2 instanceof java.lang.SecurityException;

        if $z1 != 0 goto label4;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("VoiceInteractionManager", "VoiceInteractionManagerService Crash", $r2);

     label4:
        throw $r2;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void performDirectAction(android.os.IBinder, java.lang.String, android.os.Bundle, int, android.os.IBinder, android.os.RemoteCallback, android.os.RemoteCallback)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        java.lang.String r1;
        android.os.Bundle r2;
        int i0;
        android.os.IBinder r3, r11;
        android.os.RemoteCallback r4, r5;
        long l1;
        com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl $r6, $r7;
        java.lang.Throwable $r8, $r9, $r10, r13;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        r11 := @parameter0: android.os.IBinder;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.Bundle;

        i0 := @parameter3: int;

        r3 := @parameter4: android.os.IBinder;

        r4 := @parameter5: android.os.RemoteCallback;

        r5 := @parameter6: android.os.RemoteCallback;

        entermonitor r0;

     label01:
        $r6 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        if $r6 != null goto label04;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("VoiceInteractionManager", "performDirectAction without running voice interaction service");

     label02:
        virtualinvoke r5.<android.os.RemoteCallback: void sendResult(android.os.Bundle)>(null);

        exitmonitor r0;

     label03:
        return;

     label04:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label05:
        $r7 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        virtualinvoke $r7.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: void performDirectActionLocked(android.os.IBinder,java.lang.String,android.os.Bundle,int,android.os.IBinder,android.os.RemoteCallback,android.os.RemoteCallback)>(r11, r1, r2, i0, r3, r4, r5);

     label06:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

     label07:
        exitmonitor r0;

     label08:
        return;

     label09:
        $r9 := @caughtexception;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

     label11:
        throw $r9;

     label12:
        $r8 := @caughtexception;

        r13 = $r8;

     label13:
        exitmonitor r0;

     label14:
        throw r13;

     label15:
        $r10 := @caughtexception;

        r13 = $r10;

        goto label13;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label15;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public android.hardware.soundtrigger.SoundTrigger$ModelParamRange queryParameter(int, int)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        int i0, i1;
        long l2;
        com.android.server.voiceinteraction.VoiceInteractionManagerService $r1;
        com.android.server.soundtrigger.SoundTriggerInternal $r2;
        java.lang.Throwable $r3, $r4;
        android.hardware.soundtrigger.SoundTrigger$ModelParamRange r5;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        entermonitor r0;

     label1:
        specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void enforceIsCurrentVoiceInteractionService()>();

        exitmonitor r0;

     label2:
        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label3:
        $r1 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r2 = $r1.<com.android.server.voiceinteraction.VoiceInteractionManagerService: com.android.server.soundtrigger.SoundTriggerInternal mSoundTriggerInternal>;

        r5 = virtualinvoke $r2.<com.android.server.soundtrigger.SoundTriggerInternal: android.hardware.soundtrigger.SoundTrigger$ModelParamRange queryParameter(int,int)>(i0, i1);

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return r5;

     label5:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r3;

     label6:
        $r4 := @caughtexception;

     label7:
        exitmonitor r0;

     label8:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void registerVoiceInteractionSessionListener(com.android.internal.app.IVoiceInteractionSessionListener)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        com.android.server.voiceinteraction.VoiceInteractionManagerService $r1;
        android.os.RemoteCallbackList $r2;
        java.lang.Throwable $r3;
        com.android.internal.app.IVoiceInteractionSessionListener r4;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        r4 := @parameter0: com.android.internal.app.IVoiceInteractionSessionListener;

        specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void enforceCallingPermission(java.lang.String)>("android.permission.ACCESS_VOICE_INTERACTION_SERVICE");

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r2 = staticinvoke <com.android.server.voiceinteraction.VoiceInteractionManagerService: android.os.RemoteCallbackList access$200(com.android.server.voiceinteraction.VoiceInteractionManagerService)>($r1);

        virtualinvoke $r2.<android.os.RemoteCallbackList: boolean register(android.os.IInterface)>(r4);

        exitmonitor r0;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void requestDirectActions(android.os.IBinder, int, android.os.IBinder, android.os.RemoteCallback, android.os.RemoteCallback)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        int i0;
        android.os.IBinder r1, r8;
        android.os.RemoteCallback r2, r3;
        long l1;
        com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl $r4, $r5;
        java.lang.Throwable $r6, $r7;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        r8 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r1 := @parameter2: android.os.IBinder;

        r2 := @parameter3: android.os.RemoteCallback;

        r3 := @parameter4: android.os.RemoteCallback;

        entermonitor r0;

     label01:
        $r4 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        if $r4 != null goto label03;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("VoiceInteractionManager", "requestDirectActions without running voice interaction service");

        virtualinvoke r3.<android.os.RemoteCallback: void sendResult(android.os.Bundle)>(null);

        exitmonitor r0;

     label02:
        return;

     label03:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        $r5 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        virtualinvoke $r5.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: void requestDirectActionsLocked(android.os.IBinder,int,android.os.IBinder,android.os.RemoteCallback,android.os.RemoteCallback)>(r8, i0, r1, r2, r3);

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

     label06:
        exitmonitor r0;

     label07:
        return;

     label08:
        $r7 := @caughtexception;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

     label10:
        throw $r7;

     label11:
        $r6 := @caughtexception;

     label12:
        exitmonitor r0;

     label13:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    void resetCurAssistant(int)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        int i0;
        com.android.server.voiceinteraction.VoiceInteractionManagerService $r1;
        android.content.Context $r2;
        android.content.ContentResolver $r3;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r2 = $r1.<com.android.server.voiceinteraction.VoiceInteractionManagerService: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$Secure: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>($r3, "assistant", null, i0);

        return;
    }

    void setCurInteractor(android.content.ComponentName, int)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        int i0;
        android.content.ContentResolver r1;
        com.android.server.voiceinteraction.VoiceInteractionManagerService $r2;
        android.content.Context $r3;
        android.content.ComponentName r4;
        java.lang.String r5;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        r4 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r3 = $r2.<com.android.server.voiceinteraction.VoiceInteractionManagerService: android.content.Context mContext>;

        r1 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        if r4 == null goto label1;

        r5 = virtualinvoke r4.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        goto label2;

     label1:
        r5 = "";

     label2:
        staticinvoke <android.provider.Settings$Secure: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>(r1, "voice_interaction_service", r5, i0);

        return;
    }

    void setCurRecognizer(android.content.ComponentName, int)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        int i0;
        android.content.ContentResolver r1;
        com.android.server.voiceinteraction.VoiceInteractionManagerService $r2;
        android.content.Context $r3;
        android.content.ComponentName r4;
        java.lang.String r5;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        r4 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r3 = $r2.<com.android.server.voiceinteraction.VoiceInteractionManagerService: android.content.Context mContext>;

        r1 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        if r4 == null goto label1;

        r5 = virtualinvoke r4.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        goto label2;

     label1:
        r5 = "";

     label2:
        staticinvoke <android.provider.Settings$Secure: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>(r1, "voice_recognition_service", r5, i0);

        return;
    }

    public void setDisabled(boolean)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        boolean z0, $z1;
        long l0;
        java.lang.String $r3;
        java.lang.Throwable $r4, $r5;
        java.lang.StringBuilder r6;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void enforceCallingPermission(java.lang.String)>("android.permission.ACCESS_VOICE_INTERACTION_SERVICE");

        entermonitor r0;

     label01:
        $z1 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: boolean mTemporarilyDisabled>;

        if $z1 != z0 goto label03;

        exitmonitor r0;

     label02:
        return;

     label03:
        r6 = new java.lang.StringBuilder;

        specialinvoke r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setDisabled(): changing to ");

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r3 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("VoiceInteractionManager", $r3);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: boolean mTemporarilyDisabled> = z0;

        virtualinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void switchImplementationIfNeeded(boolean)>(0);

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label06:
        exitmonitor r0;

     label07:
        return;

     label08:
        $r4 := @caughtexception;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label10:
        throw $r4;

     label11:
        $r5 := @caughtexception;

     label12:
        exitmonitor r0;

     label13:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public void setDisabledShowContext(int)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        int i0, i1;
        long l2;
        com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl $r1, $r2;
        java.lang.Throwable $r3, $r4;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        i0 := @parameter0: int;

        entermonitor r0;

     label01:
        $r1 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        if $r1 != null goto label03;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("VoiceInteractionManager", "setDisabledShowContext without running voice interaction service");

        exitmonitor r0;

     label02:
        return;

     label03:
        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        $r2 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        virtualinvoke $r2.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: void setDisabledShowContextLocked(int,int)>(i1, i0);

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

     label06:
        exitmonitor r0;

     label07:
        return;

     label08:
        $r3 := @caughtexception;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

     label10:
        throw $r3;

     label11:
        $r4 := @caughtexception;

     label12:
        exitmonitor r0;

     label13:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public void setKeepAwake(android.os.IBinder, boolean)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        boolean z0;
        long l0;
        com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl $r1, $r2;
        java.lang.Throwable $r3, $r4;
        android.os.IBinder r5;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        r5 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        entermonitor r0;

     label01:
        $r1 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        if $r1 != null goto label03;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("VoiceInteractionManager", "setKeepAwake without running voice interaction service");

        exitmonitor r0;

     label02:
        return;

     label03:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        $r2 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        virtualinvoke $r2.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: void setKeepAwakeLocked(android.os.IBinder,boolean)>(r5, z0);

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label06:
        exitmonitor r0;

     label07:
        return;

     label08:
        $r4 := @caughtexception;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label10:
        throw $r4;

     label11:
        $r3 := @caughtexception;

     label12:
        exitmonitor r0;

     label13:
        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public int setParameter(int, int, int)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        int i0, i1, i3, i4;
        long l2;
        com.android.server.voiceinteraction.VoiceInteractionManagerService $r1;
        com.android.server.soundtrigger.SoundTriggerInternal $r2;
        java.lang.Throwable $r3, $r4;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        i3 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        entermonitor r0;

     label1:
        specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void enforceIsCurrentVoiceInteractionService()>();

        exitmonitor r0;

     label2:
        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label3:
        $r1 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r2 = $r1.<com.android.server.voiceinteraction.VoiceInteractionManagerService: com.android.server.soundtrigger.SoundTriggerInternal mSoundTriggerInternal>;

        i4 = virtualinvoke $r2.<com.android.server.soundtrigger.SoundTriggerInternal: int setParameter(int,int,int)>(i3, i0, i1);

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return i4;

     label5:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r4;

     label6:
        $r3 := @caughtexception;

     label7:
        exitmonitor r0;

     label8:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void setUiHints(android.os.Bundle)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        int i0, i2;
        com.android.server.voiceinteraction.VoiceInteractionManagerService $r1, $r3, $r5;
        android.os.RemoteCallbackList $r2, $r4, $r6;
        android.os.IInterface $r7;
        android.os.RemoteException $r8;
        java.lang.Throwable $r9;
        android.os.Bundle r10;
        com.android.internal.app.IVoiceInteractionSessionListener r11;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        r10 := @parameter0: android.os.Bundle;

        entermonitor r0;

     label01:
        specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void enforceIsCurrentVoiceInteractionService()>();

        $r1 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r2 = staticinvoke <com.android.server.voiceinteraction.VoiceInteractionManagerService: android.os.RemoteCallbackList access$200(com.android.server.voiceinteraction.VoiceInteractionManagerService)>($r1);

        i0 = virtualinvoke $r2.<android.os.RemoteCallbackList: int beginBroadcast()>();

     label02:
        i2 = 0;

     label03:
        if i2 >= i0 goto label10;

     label04:
        $r5 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r6 = staticinvoke <com.android.server.voiceinteraction.VoiceInteractionManagerService: android.os.RemoteCallbackList access$200(com.android.server.voiceinteraction.VoiceInteractionManagerService)>($r5);

        $r7 = virtualinvoke $r6.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i2);

        r11 = (com.android.internal.app.IVoiceInteractionSessionListener) $r7;

     label05:
        interfaceinvoke r11.<com.android.internal.app.IVoiceInteractionSessionListener: void onSetUiHints(android.os.Bundle)>(r10);

     label06:
        goto label09;

     label07:
        $r8 := @caughtexception;

     label08:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("VoiceInteractionManager", "Error delivering UI hints.", $r8);

     label09:
        i2 = i2 + 1;

        goto label03;

     label10:
        $r3 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r4 = staticinvoke <com.android.server.voiceinteraction.VoiceInteractionManagerService: android.os.RemoteCallbackList access$200(com.android.server.voiceinteraction.VoiceInteractionManagerService)>($r3);

        virtualinvoke $r4.<android.os.RemoteCallbackList: void finishBroadcast()>();

        exitmonitor r0;

     label11:
        return;

     label12:
        $r9 := @caughtexception;

     label13:
        exitmonitor r0;

     label14:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void showSession(android.os.Bundle, int)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        int i0;
        long l1;
        com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl $r1;
        java.lang.Throwable $r2, $r3;
        android.os.Bundle r4;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        r4 := @parameter0: android.os.Bundle;

        i0 := @parameter1: int;

        entermonitor r0;

     label01:
        specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void enforceIsCurrentVoiceInteractionService()>();

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r1 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        virtualinvoke $r1.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: boolean showSessionLocked(android.os.Bundle,int,com.android.internal.app.IVoiceInteractionSessionShowCallback,android.os.IBinder)>(r4, i0, null, null);

     label03:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

     label04:
        exitmonitor r0;

     label05:
        return;

     label06:
        $r2 := @caughtexception;

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

     label08:
        throw $r2;

     label09:
        $r3 := @caughtexception;

     label10:
        exitmonitor r0;

     label11:
        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public boolean showSessionForActiveService(android.os.Bundle, int, com.android.internal.app.IVoiceInteractionSessionShowCallback, android.os.IBinder)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        int i0, $i2, $i3;
        com.android.internal.app.IVoiceInteractionSessionShowCallback r1;
        android.os.IBinder r2;
        long l1;
        boolean z0;
        com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl $r3, $r4;
        java.lang.Throwable $r5, $r6;
        android.os.Bundle r7;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        r7 := @parameter0: android.os.Bundle;

        i0 := @parameter1: int;

        r1 := @parameter2: com.android.internal.app.IVoiceInteractionSessionShowCallback;

        r2 := @parameter3: android.os.IBinder;

        specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void enforceCallingPermission(java.lang.String)>("android.permission.ACCESS_VOICE_INTERACTION_SERVICE");

        entermonitor r0;

     label01:
        $r3 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        if $r3 != null goto label03;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("VoiceInteractionManager", "showSessionForActiveService without running voice interactionservice");

        exitmonitor r0;

     label02:
        return 0;

     label03:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        $r4 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        $i2 = i0 | 1;

        $i3 = $i2 | 2;

        z0 = virtualinvoke $r4.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: boolean showSessionLocked(android.os.Bundle,int,com.android.internal.app.IVoiceInteractionSessionShowCallback,android.os.IBinder)>(r7, $i3, r1, r2);

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        exitmonitor r0;

     label06:
        return z0;

     label07:
        $r6 := @caughtexception;

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

     label09:
        throw $r6;

     label10:
        $r5 := @caughtexception;

     label11:
        exitmonitor r0;

     label12:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label09 to label10 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public boolean showSessionFromSession(android.os.IBinder, android.os.Bundle, int)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        android.os.Bundle r1;
        int i0;
        long l1;
        boolean z0;
        com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl $r2, $r3;
        java.lang.Throwable $r4, $r5;
        android.os.IBinder r6;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        r6 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.os.Bundle;

        i0 := @parameter2: int;

        entermonitor r0;

     label01:
        $r2 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        if $r2 != null goto label03;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("VoiceInteractionManager", "showSessionFromSession without running voice interaction service");

        exitmonitor r0;

     label02:
        return 0;

     label03:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        $r3 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        z0 = virtualinvoke $r3.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: boolean showSessionLocked(android.os.Bundle,int,com.android.internal.app.IVoiceInteractionSessionShowCallback,android.os.IBinder)>(r1, i0, null, null);

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        exitmonitor r0;

     label06:
        return z0;

     label07:
        $r4 := @caughtexception;

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

     label09:
        throw $r4;

     label10:
        $r5 := @caughtexception;

     label11:
        exitmonitor r0;

     label12:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label09 to label10 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public int startAssistantActivity(android.os.IBinder, android.content.Intent, java.lang.String, java.lang.String)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        android.content.Intent r1;
        java.lang.String r2, r3;
        int i0, i3, i4;
        long l1;
        com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl $r4, $r5;
        java.lang.Throwable $r6, $r7;
        android.os.IBinder r8;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        r8 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.content.Intent;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        entermonitor r0;

     label01:
        $r4 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        if $r4 != null goto label03;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("VoiceInteractionManager", "startAssistantActivity without running voice interaction service");

        exitmonitor r0;

     label02:
        return -96;

     label03:
        i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        $r5 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        i4 = virtualinvoke $r5.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: int startAssistantActivityLocked(java.lang.String,int,int,android.os.IBinder,android.content.Intent,java.lang.String)>(r3, i0, i3, r8, r1, r2);

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        exitmonitor r0;

     label06:
        return i4;

     label07:
        $r6 := @caughtexception;

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

     label09:
        throw $r6;

     label10:
        $r7 := @caughtexception;

     label11:
        exitmonitor r0;

     label12:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label09 to label10 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    void startLocalVoiceInteraction(android.os.IBinder, android.os.Bundle)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        android.os.Bundle r1;
        long l0;
        com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl r2, $r4;
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1 r3;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        r6 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.os.Bundle;

        $r4 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        if $r4 != null goto label1;

        return;

     label1:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        r2 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        r3 = new com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1;

        specialinvoke r3.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1: void <init>(com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub,android.os.IBinder)>(r0, r6);

        virtualinvoke r2.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: boolean showSessionLocked(android.os.Bundle,int,com.android.internal.app.IVoiceInteractionSessionShowCallback,android.os.IBinder)>(r1, 16, r3, r6);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label4:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r5;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public int startRecognition(int, java.lang.String, android.hardware.soundtrigger.IRecognitionStatusCallback, android.hardware.soundtrigger.SoundTrigger$RecognitionConfig)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        android.hardware.soundtrigger.IRecognitionStatusCallback r1;
        android.hardware.soundtrigger.SoundTrigger$RecognitionConfig r2;
        int i0, i3, i4;
        long l1;
        com.android.server.voiceinteraction.VoiceInteractionManagerService $r3, $r7, $r10;
        com.android.server.voiceinteraction.DatabaseHelper $r4;
        java.util.UUID $r5;
        android.hardware.soundtrigger.SoundTrigger$Keyphrase[] $r6;
        android.util.ArraySet $r8;
        java.lang.Integer $r9;
        com.android.server.soundtrigger.SoundTriggerInternal $r11;
        java.lang.Throwable $r12, $r13, $r14;
        java.lang.String r15;
        android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel r16;
        java.lang.IllegalArgumentException r19;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        i3 := @parameter0: int;

        r15 := @parameter1: java.lang.String;

        r1 := @parameter2: android.hardware.soundtrigger.IRecognitionStatusCallback;

        r2 := @parameter3: android.hardware.soundtrigger.SoundTrigger$RecognitionConfig;

        entermonitor r0;

     label01:
        specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void enforceIsCurrentVoiceInteractionService()>();

     label02:
        if r1 == null goto label19;

        if r2 == null goto label19;

        if r15 == null goto label19;

     label03:
        exitmonitor r0;

     label04:
        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label05:
        $r3 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r4 = $r3.<com.android.server.voiceinteraction.VoiceInteractionManagerService: com.android.server.voiceinteraction.DatabaseHelper mDbHelper>;

        r16 = virtualinvoke $r4.<com.android.server.voiceinteraction.DatabaseHelper: android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel getKeyphraseSoundModel(int,int,java.lang.String)>(i3, i0, r15);

     label06:
        if r16 == null goto label16;

     label07:
        $r5 = virtualinvoke r16.<android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel: java.util.UUID getUuid()>();

        if $r5 == null goto label16;

        $r6 = virtualinvoke r16.<android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel: android.hardware.soundtrigger.SoundTrigger$Keyphrase[] getKeyphrases()>();

        if $r6 != null goto label09;

     label08:
        goto label16;

     label09:
        entermonitor r0;

     label10:
        $r7 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r8 = $r7.<com.android.server.voiceinteraction.VoiceInteractionManagerService: android.util.ArraySet mLoadedKeyphraseIds>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        virtualinvoke $r8.<android.util.ArraySet: boolean add(java.lang.Object)>($r9);

        exitmonitor r0;

     label11:
        $r10 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r11 = $r10.<com.android.server.voiceinteraction.VoiceInteractionManagerService: com.android.server.soundtrigger.SoundTriggerInternal mSoundTriggerInternal>;

        i4 = virtualinvoke $r11.<com.android.server.soundtrigger.SoundTriggerInternal: int startRecognition(int,android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel,android.hardware.soundtrigger.IRecognitionStatusCallback,android.hardware.soundtrigger.SoundTrigger$RecognitionConfig)>(i3, r16, r1, r2);

     label12:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return i4;

     label13:
        $r14 := @caughtexception;

     label14:
        exitmonitor r0;

     label15:
        throw $r14;

     label16:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("VoiceInteractionManager", "No matching sound model found in startRecognition");

     label17:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return -2147483648;

     label18:
        $r12 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r12;

     label19:
        r19 = new java.lang.IllegalArgumentException;

        specialinvoke r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Illegal argument(s) in startRecognition");

        throw r19;

     label20:
        $r13 := @caughtexception;

     label21:
        exitmonitor r0;

     label22:
        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Throwable from label03 to label04 with label20;
        catch java.lang.Throwable from label05 to label06 with label18;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label11 to label12 with label18;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.Throwable from label15 to label16 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label20;
        catch java.lang.Throwable from label21 to label22 with label20;
    }

    public int startVoiceActivity(android.os.IBinder, android.content.Intent, java.lang.String, java.lang.String)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        android.content.Intent r1;
        java.lang.String r2, r3;
        int i0, i3, i4;
        long l1;
        com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl $r4, $r5;
        java.lang.Throwable $r6, $r7;
        android.os.IBinder r8;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        r8 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.content.Intent;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        entermonitor r0;

     label01:
        $r4 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        if $r4 != null goto label03;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("VoiceInteractionManager", "startVoiceActivity without running voice interaction service");

        exitmonitor r0;

     label02:
        return -96;

     label03:
        i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        $r5 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        i4 = virtualinvoke $r5.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: int startVoiceActivityLocked(java.lang.String,int,int,android.os.IBinder,android.content.Intent,java.lang.String)>(r3, i0, i3, r8, r1, r2);

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        exitmonitor r0;

     label06:
        return i4;

     label07:
        $r7 := @caughtexception;

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

     label09:
        throw $r7;

     label10:
        $r6 := @caughtexception;

     label11:
        exitmonitor r0;

     label12:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label09 to label10 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void stopLocalVoiceInteraction(android.os.IBinder)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        long l0;
        com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl $r1, $r2;
        java.lang.Throwable $r3;
        android.os.IBinder r4;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        r4 := @parameter0: android.os.IBinder;

        $r1 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        if $r1 != null goto label1;

        return;

     label1:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r2 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        virtualinvoke $r2.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: void finishLocked(android.os.IBinder,boolean)>(r4, 1);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label4:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r3;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public int stopRecognition(int, android.hardware.soundtrigger.IRecognitionStatusCallback)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        long l0;
        com.android.server.voiceinteraction.VoiceInteractionManagerService $r1;
        com.android.server.soundtrigger.SoundTriggerInternal $r2;
        java.lang.Throwable $r3, $r4;
        int i1, i2;
        android.hardware.soundtrigger.IRecognitionStatusCallback r5;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        i1 := @parameter0: int;

        r5 := @parameter1: android.hardware.soundtrigger.IRecognitionStatusCallback;

        entermonitor r0;

     label1:
        specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void enforceIsCurrentVoiceInteractionService()>();

        exitmonitor r0;

     label2:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label3:
        $r1 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r2 = $r1.<com.android.server.voiceinteraction.VoiceInteractionManagerService: com.android.server.soundtrigger.SoundTriggerInternal mSoundTriggerInternal>;

        i2 = virtualinvoke $r2.<com.android.server.soundtrigger.SoundTriggerInternal: int stopRecognition(int,android.hardware.soundtrigger.IRecognitionStatusCallback)>(i1, r5);

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return i2;

     label5:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r3;

     label6:
        $r4 := @caughtexception;

     label7:
        exitmonitor r0;

     label8:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public boolean supportsLocalVoiceInteraction()
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl r1;
        boolean $z0;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        r1 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        if r1 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r1.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: boolean supportsLocalVoiceInteraction()>();

        return $z0;
    }

    void switchImplementationIfNeeded(boolean)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        boolean z0;
        java.lang.Throwable $r2;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        z0 := @parameter0: boolean;

        entermonitor r0;

     label1:
        virtualinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void switchImplementationIfNeededLocked(boolean)>(z0);

        exitmonitor r0;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void switchImplementationIfNeededLocked(boolean)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        boolean z0, $z1, $z2;
        com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl r1;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: boolean mCurUserSupported>;

        if $z1 == 0 goto label3;

        $z2 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: boolean mTemporarilyDisabled>;

        if $z2 == 0 goto label1;

        goto label3;

     label1:
        virtualinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void switchImplementationIfNeededNoTracingLocked(boolean)>(z0);

        goto label2;

     label2:
        return;

     label3:
        r1 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        if r1 == null goto label4;

        virtualinvoke r1.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: void shutdownLocked()>();

        specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void setImplLocked(com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl)>(null);

     label4:
        return;
    }

    void switchImplementationIfNeededNoTracingLocked(boolean)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        boolean z0, $z1, $z2, $z3, z4, $z5;
        java.lang.String r1, $r17, $r24;
        com.android.server.voiceinteraction.VoiceInteractionManagerService $r2, $r5, $r11, $r13, $r15, $r18, $r29;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.content.ContentResolver $r3;
        com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl $r4, $r8, $r9, r31, r32;
        android.content.Context $r6;
        android.os.Handler $r7;
        android.content.ComponentName $r10, r25;
        android.content.pm.ShortcutServiceInternal $r12, $r16;
        com.android.server.wm.ActivityTaskManagerInternal $r14, $r20;
        android.content.pm.ApplicationInfo $r19;
        android.content.pm.IPackageManager $r21;
        java.lang.Exception $r22;
        java.lang.StringBuilder $r23;
        android.content.pm.ServiceInfo r26;
        android.os.UserManagerInternal $r30;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: boolean mSafeMode>;

        if $z1 != 0 goto label11;

        $r2 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r3 = $r2.<com.android.server.voiceinteraction.VoiceInteractionManagerService: android.content.ContentResolver mResolver>;

        $i0 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: int mCurUser>;

        r1 = staticinvoke <android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>($r3, "voice_interaction_service", $i0);

        r25 = null;

        r26 = null;

        if r1 == null goto label04;

        r25 = null;

        r26 = null;

        $z3 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z3 != 0 goto label04;

     label01:
        r25 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>(r1);

        $r21 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $i9 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: int mCurUser>;

        r26 = interfaceinvoke $r21.<android.content.pm.IPackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int,int)>(r25, 0, $i9);

     label02:
        goto label04;

     label03:
        $r22 := @caughtexception;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad voice interaction service name ");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("VoiceInteractionManager", $r24, $r22);

        r25 = null;

        r26 = null;

     label04:
        z4 = 0;

        if r25 == null goto label05;

        z4 = 0;

        if r26 == null goto label05;

        z4 = 1;

     label05:
        $r29 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r30 = $r29.<com.android.server.voiceinteraction.VoiceInteractionManagerService: android.os.UserManagerInternal mUserManagerInternal>;

        $i10 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: int mCurUser>;

        $z5 = virtualinvoke $r30.<android.os.UserManagerInternal: boolean isUserUnlockingOrUnlocked(int)>($i10);

        if $z5 == 0 goto label07;

        if z4 == 0 goto label06;

        $r15 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r16 = $r15.<com.android.server.voiceinteraction.VoiceInteractionManagerService: android.content.pm.ShortcutServiceInternal mShortcutServiceInternal>;

        $r17 = virtualinvoke r25.<android.content.ComponentName: java.lang.String getPackageName()>();

        $i6 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: int mCurUser>;

        virtualinvoke $r16.<android.content.pm.ShortcutServiceInternal: void setShortcutHostPackage(java.lang.String,java.lang.String,int)>("VoiceInteractionManager", $r17, $i6);

        $r18 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r20 = $r18.<com.android.server.voiceinteraction.VoiceInteractionManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        $r19 = r26.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i8 = $r19.<android.content.pm.ApplicationInfo: int uid>;

        $i7 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: int mCurUser>;

        virtualinvoke $r20.<com.android.server.wm.ActivityTaskManagerInternal: void setAllowAppSwitches(java.lang.String,int,int)>("VoiceInteractionManager", $i8, $i7);

        goto label07;

     label06:
        $r11 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r12 = $r11.<com.android.server.voiceinteraction.VoiceInteractionManagerService: android.content.pm.ShortcutServiceInternal mShortcutServiceInternal>;

        $i4 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: int mCurUser>;

        virtualinvoke $r12.<android.content.pm.ShortcutServiceInternal: void setShortcutHostPackage(java.lang.String,java.lang.String,int)>("VoiceInteractionManager", null, $i4);

        $r13 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r14 = $r13.<com.android.server.voiceinteraction.VoiceInteractionManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        $i5 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: int mCurUser>;

        virtualinvoke $r14.<com.android.server.wm.ActivityTaskManagerInternal: void setAllowAppSwitches(java.lang.String,int,int)>("VoiceInteractionManager", -1, $i5);

     label07:
        if z0 != 0 goto label08;

        r31 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        if r31 == null goto label08;

        $i3 = r31.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: int mUser>;

        $i2 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: int mCurUser>;

        if $i3 != $i2 goto label08;

        $r9 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        $r10 = $r9.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: android.content.ComponentName mComponent>;

        $z2 = virtualinvoke $r10.<android.content.ComponentName: boolean equals(java.lang.Object)>(r25);

        if $z2 != 0 goto label11;

     label08:
        specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void unloadAllKeyphraseModels()>();

        r32 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        if r32 == null goto label09;

        virtualinvoke r32.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: void shutdownLocked()>();

     label09:
        if z4 == 0 goto label10;

        $r4 = new com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl;

        $r5 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r6 = $r5.<com.android.server.voiceinteraction.VoiceInteractionManagerService: android.content.Context mContext>;

        $r7 = staticinvoke <com.android.server.UiThread: android.os.Handler getHandler()>();

        $i1 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: int mCurUser>;

        specialinvoke $r4.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: void <init>(android.content.Context,android.os.Handler,com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub,int,android.content.ComponentName)>($r6, $r7, r0, $i1, r25);

        specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void setImplLocked(com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl)>($r4);

        $r8 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        virtualinvoke $r8.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: void startLocked()>();

        goto label11;

     label10:
        specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void setImplLocked(com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl)>(null);

     label11:
        return;

        catch java.lang.RuntimeException from label01 to label02 with label03;
        catch android.os.RemoteException from label01 to label02 with label03;
    }

    public void switchUser(int)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        int i0;
        android.os.Handler $r1;
        com.android.server.voiceinteraction._$$Lambda$VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$u4484DFAd6TvNnx89ISVr_ZLWJY $r2;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        i0 := @parameter0: int;

        $r1 = staticinvoke <com.android.server.FgThread: android.os.Handler getHandler()>();

        $r2 = new com.android.server.voiceinteraction._$$Lambda$VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$u4484DFAd6TvNnx89ISVr_ZLWJY;

        specialinvoke $r2.<com.android.server.voiceinteraction._$$Lambda$VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$u4484DFAd6TvNnx89ISVr_ZLWJY: void <init>(com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub,int)>(r0, i0);

        virtualinvoke $r1.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    public void systemRunning(boolean)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        boolean z0;
        com.android.server.voiceinteraction.VoiceInteractionManagerService $r2;
        com.android.internal.content.PackageMonitor $r3;
        android.content.Context $r4;
        android.os.Handler $r5, $r9;
        android.os.Looper $r6;
        android.os.UserHandle $r7;
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$SettingsObserver $r8;
        int $i0;
        java.lang.Throwable $r10;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        z0 := @parameter0: boolean;

        r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: boolean mSafeMode> = z0;

        $r3 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.internal.content.PackageMonitor mPackageMonitor>;

        $r2 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r4 = $r2.<com.android.server.voiceinteraction.VoiceInteractionManagerService: android.content.Context mContext>;

        $r5 = staticinvoke <com.android.internal.os.BackgroundThread: android.os.Handler getHandler()>();

        $r6 = virtualinvoke $r5.<android.os.Handler: android.os.Looper getLooper()>();

        $r7 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r3.<com.android.internal.content.PackageMonitor: void register(android.content.Context,android.os.Looper,android.os.UserHandle,boolean)>($r4, $r6, $r7, 1);

        $r8 = new com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$SettingsObserver;

        $r9 = staticinvoke <com.android.server.UiThread: android.os.Handler getHandler()>();

        specialinvoke $r8.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$SettingsObserver: void <init>(com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub,android.os.Handler)>(r0, $r9);

        entermonitor r0;

     label1:
        $i0 = staticinvoke <android.app.ActivityManager: int getCurrentUser()>();

        specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void setCurrentUserLocked(int)>($i0);

        virtualinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void switchImplementationIfNeededLocked(boolean)>(0);

        exitmonitor r0;

     label2:
        return;

     label3:
        $r10 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int updateKeyphraseSoundModel(android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel)
    {
        com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub r0;
        long l0;
        java.lang.IllegalArgumentException $r1;
        com.android.server.voiceinteraction.VoiceInteractionManagerService $r2;
        com.android.server.voiceinteraction.DatabaseHelper $r3;
        boolean $z0;
        com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl $r4, $r5, $r7;
        android.service.voice.IVoiceInteractionService $r6;
        java.lang.Throwable $r8, $r9;
        android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel r10;

        r0 := @this: com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub;

        r10 := @parameter0: android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel;

        specialinvoke r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void enforceCallerAllowedToEnrollVoiceModel()>();

        if r10 == null goto label10;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        $r2 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerService this$0>;

        $r3 = $r2.<com.android.server.voiceinteraction.VoiceInteractionManagerService: com.android.server.voiceinteraction.DatabaseHelper mDbHelper>;

        $z0 = virtualinvoke $r3.<com.android.server.voiceinteraction.DatabaseHelper: boolean updateKeyphraseSoundModel(android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel)>(r10);

        if $z0 == 0 goto label08;

        entermonitor r0;

     label02:
        $r4 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        if $r4 == null goto label03;

        $r5 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        $r6 = $r5.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: android.service.voice.IVoiceInteractionService mService>;

        if $r6 == null goto label03;

        $r7 = r0.<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl mImpl>;

        virtualinvoke $r7.<com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl: void notifySoundModelsChangedLocked()>();

     label03:
        exitmonitor r0;

     label04:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 0;

     label05:
        $r9 := @caughtexception;

     label06:
        exitmonitor r0;

     label07:
        throw $r9;

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return -2147483648;

     label09:
        $r8 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r8;

     label10:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Model must not be null");

        throw $r1;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label07 to label08 with label09;
    }
}
