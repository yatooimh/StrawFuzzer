public class com.android.server.vr.VrManagerService extends com.android.server.SystemService implements com.android.server.vr.EnabledComponentsObserver$EnabledComponentChangeListener, com.android.server.wm.ActivityTaskManagerInternal$ScreenObserver
{
    static final boolean DBG;
    private static final int EVENT_LOG_SIZE;
    private static final int FLAG_ALL;
    private static final int FLAG_AWAKE;
    private static final int FLAG_KEYGUARD_UNLOCKED;
    private static final int FLAG_NONE;
    private static final int FLAG_SCREEN_ON;
    private static final int INVALID_APPOPS_MODE;
    private static final int MSG_PENDING_VR_STATE_CHANGE;
    private static final int MSG_PERSISTENT_VR_MODE_STATE_CHANGE;
    private static final int MSG_VR_STATE_CHANGE;
    private static final int PENDING_STATE_DELAY_MS;
    public static final java.lang.String TAG;
    private static final com.android.server.utils.ManagedApplicationService$BinderChecker sBinderChecker;
    private boolean mBootsToVr;
    private com.android.server.vr.EnabledComponentsObserver mComponentObserver;
    private android.content.Context mContext;
    private com.android.server.utils.ManagedApplicationService mCurrentVrCompositorService;
    private android.content.ComponentName mCurrentVrModeComponent;
    private int mCurrentVrModeUser;
    private com.android.server.utils.ManagedApplicationService mCurrentVrService;
    private android.content.ComponentName mDefaultVrService;
    private final com.android.server.utils.ManagedApplicationService$EventCallback mEventCallback;
    private boolean mGuard;
    private final android.os.Handler mHandler;
    private final java.lang.Object mLock;
    private boolean mLogLimitHit;
    private final java.util.ArrayDeque mLoggingDeque;
    private final com.android.server.vr.VrManagerService$NotificationAccessManager mNotifAccessManager;
    private android.app.INotificationManager mNotificationManager;
    private final android.os.IBinder mOverlayToken;
    private com.android.server.vr.VrManagerService$VrState mPendingState;
    private boolean mPersistentVrModeEnabled;
    private final android.os.RemoteCallbackList mPersistentVrStateRemoteCallbacks;
    private int mPreviousCoarseLocationMode;
    private int mPreviousManageOverlayMode;
    private boolean mRunning2dInVr;
    private boolean mStandby;
    private int mSystemSleepFlags;
    private boolean mUseStandbyToExitVrMode;
    private boolean mUserUnlocked;
    private com.android.server.vr.Vr2dDisplay mVr2dDisplay;
    private int mVrAppProcessId;
    private final android.service.vr.IVrManager mVrManager;
    private boolean mVrModeAllowed;
    private boolean mVrModeEnabled;
    private final android.os.RemoteCallbackList mVrStateRemoteCallbacks;
    private boolean mWasDefaultGranted;

    static void <clinit>()
    {
        com.android.server.vr.VrManagerService$3 $r0;

        <com.android.server.vr.VrManagerService: java.lang.String TAG> = "VrManagerService";

        <com.android.server.vr.VrManagerService: int PENDING_STATE_DELAY_MS> = 300;

        <com.android.server.vr.VrManagerService: int MSG_VR_STATE_CHANGE> = 0;

        <com.android.server.vr.VrManagerService: int MSG_PERSISTENT_VR_MODE_STATE_CHANGE> = 2;

        <com.android.server.vr.VrManagerService: int MSG_PENDING_VR_STATE_CHANGE> = 1;

        <com.android.server.vr.VrManagerService: int INVALID_APPOPS_MODE> = -1;

        <com.android.server.vr.VrManagerService: int FLAG_SCREEN_ON> = 2;

        <com.android.server.vr.VrManagerService: int FLAG_NONE> = 0;

        <com.android.server.vr.VrManagerService: int FLAG_KEYGUARD_UNLOCKED> = 4;

        <com.android.server.vr.VrManagerService: int FLAG_AWAKE> = 1;

        <com.android.server.vr.VrManagerService: int FLAG_ALL> = 7;

        <com.android.server.vr.VrManagerService: int EVENT_LOG_SIZE> = 64;

        <com.android.server.vr.VrManagerService: boolean DBG> = 0;

        $r0 = new com.android.server.vr.VrManagerService$3;

        specialinvoke $r0.<com.android.server.vr.VrManagerService$3: void <init>()>();

        <com.android.server.vr.VrManagerService: com.android.server.utils.ManagedApplicationService$BinderChecker sBinderChecker> = $r0;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.server.vr.VrManagerService r0;
        android.content.Context r1;
        java.lang.Object $r2;
        android.os.Binder $r3;
        android.os.RemoteCallbackList $r4, $r5;
        java.util.ArrayDeque $r6;
        com.android.server.vr.VrManagerService$NotificationAccessManager $r7;
        com.android.server.vr.VrManagerService$1 $r8;
        com.android.server.vr.VrManagerService$2 $r9;
        com.android.server.vr.VrManagerService$4 $r10;

        r0 := @this: com.android.server.vr.VrManagerService;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.server.SystemService: void <init>(android.content.Context)>(r1);

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.server.vr.VrManagerService: java.lang.Object mLock> = $r2;

        $r3 = new android.os.Binder;

        specialinvoke $r3.<android.os.Binder: void <init>()>();

        r0.<com.android.server.vr.VrManagerService: android.os.IBinder mOverlayToken> = $r3;

        $r4 = new android.os.RemoteCallbackList;

        specialinvoke $r4.<android.os.RemoteCallbackList: void <init>()>();

        r0.<com.android.server.vr.VrManagerService: android.os.RemoteCallbackList mVrStateRemoteCallbacks> = $r4;

        $r5 = new android.os.RemoteCallbackList;

        specialinvoke $r5.<android.os.RemoteCallbackList: void <init>()>();

        r0.<com.android.server.vr.VrManagerService: android.os.RemoteCallbackList mPersistentVrStateRemoteCallbacks> = $r5;

        r0.<com.android.server.vr.VrManagerService: int mPreviousCoarseLocationMode> = -1;

        r0.<com.android.server.vr.VrManagerService: int mPreviousManageOverlayMode> = -1;

        $r6 = new java.util.ArrayDeque;

        specialinvoke $r6.<java.util.ArrayDeque: void <init>(int)>(64);

        r0.<com.android.server.vr.VrManagerService: java.util.ArrayDeque mLoggingDeque> = $r6;

        $r7 = new com.android.server.vr.VrManagerService$NotificationAccessManager;

        specialinvoke $r7.<com.android.server.vr.VrManagerService$NotificationAccessManager: void <init>(com.android.server.vr.VrManagerService,com.android.server.vr.VrManagerService$1)>(r0, null);

        r0.<com.android.server.vr.VrManagerService: com.android.server.vr.VrManagerService$NotificationAccessManager mNotifAccessManager> = $r7;

        r0.<com.android.server.vr.VrManagerService: int mSystemSleepFlags> = 5;

        $r8 = new com.android.server.vr.VrManagerService$1;

        specialinvoke $r8.<com.android.server.vr.VrManagerService$1: void <init>(com.android.server.vr.VrManagerService)>(r0);

        r0.<com.android.server.vr.VrManagerService: com.android.server.utils.ManagedApplicationService$EventCallback mEventCallback> = $r8;

        $r9 = new com.android.server.vr.VrManagerService$2;

        specialinvoke $r9.<com.android.server.vr.VrManagerService$2: void <init>(com.android.server.vr.VrManagerService)>(r0);

        r0.<com.android.server.vr.VrManagerService: android.os.Handler mHandler> = $r9;

        $r10 = new com.android.server.vr.VrManagerService$4;

        specialinvoke $r10.<com.android.server.vr.VrManagerService$4: void <init>(com.android.server.vr.VrManagerService)>(r0);

        r0.<com.android.server.vr.VrManagerService: android.service.vr.IVrManager mVrManager> = $r10;

        return;
    }

    static void access$100(com.android.server.vr.VrManagerService, com.android.server.utils.ManagedApplicationService$LogFormattable)
    {
        com.android.server.vr.VrManagerService r0;
        com.android.server.utils.ManagedApplicationService$LogFormattable r1;

        r0 := @parameter0: com.android.server.vr.VrManagerService;

        r1 := @parameter1: com.android.server.utils.ManagedApplicationService$LogFormattable;

        specialinvoke r0.<com.android.server.vr.VrManagerService: void logEvent(com.android.server.utils.ManagedApplicationService$LogFormattable)>(r1);

        return;
    }

    static android.os.RemoteCallbackList access$1000(com.android.server.vr.VrManagerService)
    {
        com.android.server.vr.VrManagerService r0;
        android.os.RemoteCallbackList $r1;

        r0 := @parameter0: com.android.server.vr.VrManagerService;

        $r1 = r0.<com.android.server.vr.VrManagerService: android.os.RemoteCallbackList mPersistentVrStateRemoteCallbacks>;

        return $r1;
    }

    static void access$1100(com.android.server.vr.VrManagerService, java.lang.String, int)
    {
        com.android.server.vr.VrManagerService r0;
        java.lang.String r1;
        int i0;

        r0 := @parameter0: com.android.server.vr.VrManagerService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.vr.VrManagerService: void revokeNotificationListenerAccess(java.lang.String,int)>(r1, i0);

        return;
    }

    static void access$1200(com.android.server.vr.VrManagerService, java.lang.String)
    {
        com.android.server.vr.VrManagerService r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.vr.VrManagerService;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.vr.VrManagerService: void revokeNotificationPolicyAccess(java.lang.String)>(r1);

        return;
    }

    static void access$1300(com.android.server.vr.VrManagerService, java.lang.String, int)
    {
        com.android.server.vr.VrManagerService r0;
        java.lang.String r1;
        int i0;

        r0 := @parameter0: com.android.server.vr.VrManagerService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.vr.VrManagerService: void revokeCoarseLocationPermissionIfNeeded(java.lang.String,int)>(r1, i0);

        return;
    }

    static void access$1400(com.android.server.vr.VrManagerService, java.lang.String)
    {
        com.android.server.vr.VrManagerService r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.vr.VrManagerService;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.vr.VrManagerService: void grantNotificationPolicyAccess(java.lang.String)>(r1);

        return;
    }

    static void access$1500(com.android.server.vr.VrManagerService, java.lang.String, int)
    {
        com.android.server.vr.VrManagerService r0;
        java.lang.String r1;
        int i0;

        r0 := @parameter0: com.android.server.vr.VrManagerService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.vr.VrManagerService: void grantNotificationListenerAccess(java.lang.String,int)>(r1, i0);

        return;
    }

    static void access$1600(com.android.server.vr.VrManagerService, java.lang.String, int)
    {
        com.android.server.vr.VrManagerService r0;
        java.lang.String r1;
        int i0;

        r0 := @parameter0: com.android.server.vr.VrManagerService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.vr.VrManagerService: void grantCoarseLocationPermissionIfNeeded(java.lang.String,int)>(r1, i0);

        return;
    }

    static void access$1700(com.android.server.vr.VrManagerService, java.lang.String[])
    {
        com.android.server.vr.VrManagerService r0;
        java.lang.String[] r1;

        r0 := @parameter0: com.android.server.vr.VrManagerService;

        r1 := @parameter1: java.lang.String[];

        specialinvoke r0.<com.android.server.vr.VrManagerService: void enforceCallerPermissionAnyOf(java.lang.String[])>(r1);

        return;
    }

    static void access$1800(com.android.server.vr.VrManagerService, android.service.vr.IVrStateCallbacks)
    {
        com.android.server.vr.VrManagerService r0;
        android.service.vr.IVrStateCallbacks r1;

        r0 := @parameter0: com.android.server.vr.VrManagerService;

        r1 := @parameter1: android.service.vr.IVrStateCallbacks;

        specialinvoke r0.<com.android.server.vr.VrManagerService: void addStateCallback(android.service.vr.IVrStateCallbacks)>(r1);

        return;
    }

    static void access$1900(com.android.server.vr.VrManagerService, android.service.vr.IVrStateCallbacks)
    {
        com.android.server.vr.VrManagerService r0;
        android.service.vr.IVrStateCallbacks r1;

        r0 := @parameter0: com.android.server.vr.VrManagerService;

        r1 := @parameter1: android.service.vr.IVrStateCallbacks;

        specialinvoke r0.<com.android.server.vr.VrManagerService: void removeStateCallback(android.service.vr.IVrStateCallbacks)>(r1);

        return;
    }

    static java.lang.Object access$200(com.android.server.vr.VrManagerService)
    {
        com.android.server.vr.VrManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.vr.VrManagerService;

        $r1 = r0.<com.android.server.vr.VrManagerService: java.lang.Object mLock>;

        return $r1;
    }

    static void access$2000(com.android.server.vr.VrManagerService, android.service.vr.IPersistentVrStateCallbacks)
    {
        com.android.server.vr.VrManagerService r0;
        android.service.vr.IPersistentVrStateCallbacks r1;

        r0 := @parameter0: com.android.server.vr.VrManagerService;

        r1 := @parameter1: android.service.vr.IPersistentVrStateCallbacks;

        specialinvoke r0.<com.android.server.vr.VrManagerService: void addPersistentStateCallback(android.service.vr.IPersistentVrStateCallbacks)>(r1);

        return;
    }

    static void access$2100(com.android.server.vr.VrManagerService, android.service.vr.IPersistentVrStateCallbacks)
    {
        com.android.server.vr.VrManagerService r0;
        android.service.vr.IPersistentVrStateCallbacks r1;

        r0 := @parameter0: com.android.server.vr.VrManagerService;

        r1 := @parameter1: android.service.vr.IPersistentVrStateCallbacks;

        specialinvoke r0.<com.android.server.vr.VrManagerService: void removePersistentStateCallback(android.service.vr.IPersistentVrStateCallbacks)>(r1);

        return;
    }

    static boolean access$2200(com.android.server.vr.VrManagerService)
    {
        com.android.server.vr.VrManagerService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.vr.VrManagerService;

        $z0 = specialinvoke r0.<com.android.server.vr.VrManagerService: boolean getVrMode()>();

        return $z0;
    }

    static boolean access$2300(com.android.server.vr.VrManagerService)
    {
        com.android.server.vr.VrManagerService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.vr.VrManagerService;

        $z0 = specialinvoke r0.<com.android.server.vr.VrManagerService: boolean getPersistentVrMode()>();

        return $z0;
    }

    static int access$2400(com.android.server.vr.VrManagerService)
    {
        com.android.server.vr.VrManagerService r0;
        int $i0;

        r0 := @parameter0: com.android.server.vr.VrManagerService;

        $i0 = specialinvoke r0.<com.android.server.vr.VrManagerService: int getVr2dDisplayId()>();

        return $i0;
    }

    static void access$2500(com.android.server.vr.VrManagerService, android.content.ComponentName)
    {
        com.android.server.vr.VrManagerService r0;
        android.content.ComponentName r1;

        r0 := @parameter0: com.android.server.vr.VrManagerService;

        r1 := @parameter1: android.content.ComponentName;

        specialinvoke r0.<com.android.server.vr.VrManagerService: void setAndBindCompositor(android.content.ComponentName)>(r1);

        return;
    }

    static void access$2600(com.android.server.vr.VrManagerService, boolean)
    {
        com.android.server.vr.VrManagerService r0;
        boolean z0;

        r0 := @parameter0: com.android.server.vr.VrManagerService;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.server.vr.VrManagerService: void setStandbyEnabled(boolean)>(z0);

        return;
    }

    static android.content.Context access$2700(com.android.server.vr.VrManagerService)
    {
        com.android.server.vr.VrManagerService r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.server.vr.VrManagerService;

        $r1 = r0.<com.android.server.vr.VrManagerService: android.content.Context mContext>;

        return $r1;
    }

    static boolean access$2800(com.android.server.vr.VrManagerService)
    {
        com.android.server.vr.VrManagerService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.vr.VrManagerService;

        $z0 = r0.<com.android.server.vr.VrManagerService: boolean mPersistentVrModeEnabled>;

        return $z0;
    }

    static com.android.server.utils.ManagedApplicationService access$2900(com.android.server.vr.VrManagerService)
    {
        com.android.server.vr.VrManagerService r0;
        com.android.server.utils.ManagedApplicationService $r1;

        r0 := @parameter0: com.android.server.vr.VrManagerService;

        $r1 = r0.<com.android.server.vr.VrManagerService: com.android.server.utils.ManagedApplicationService mCurrentVrCompositorService>;

        return $r1;
    }

    static com.android.server.utils.ManagedApplicationService access$300(com.android.server.vr.VrManagerService)
    {
        com.android.server.vr.VrManagerService r0;
        com.android.server.utils.ManagedApplicationService $r1;

        r0 := @parameter0: com.android.server.vr.VrManagerService;

        $r1 = r0.<com.android.server.vr.VrManagerService: com.android.server.utils.ManagedApplicationService mCurrentVrService>;

        return $r1;
    }

    static void access$3000(com.android.server.vr.VrManagerService, java.io.PrintWriter)
    {
        com.android.server.vr.VrManagerService r0;
        java.io.PrintWriter r1;

        r0 := @parameter0: com.android.server.vr.VrManagerService;

        r1 := @parameter1: java.io.PrintWriter;

        specialinvoke r0.<com.android.server.vr.VrManagerService: void dumpStateTransitions(java.io.PrintWriter)>(r1);

        return;
    }

    static int access$3100(com.android.server.vr.VrManagerService)
    {
        com.android.server.vr.VrManagerService r0;
        int $i0;

        r0 := @parameter0: com.android.server.vr.VrManagerService;

        $i0 = r0.<com.android.server.vr.VrManagerService: int mCurrentVrModeUser>;

        return $i0;
    }

    static com.android.server.vr.EnabledComponentsObserver access$3200(com.android.server.vr.VrManagerService)
    {
        com.android.server.vr.VrManagerService r0;
        com.android.server.vr.EnabledComponentsObserver $r1;

        r0 := @parameter0: com.android.server.vr.VrManagerService;

        $r1 = r0.<com.android.server.vr.VrManagerService: com.android.server.vr.EnabledComponentsObserver mComponentObserver>;

        return $r1;
    }

    static void access$3300(com.android.server.vr.VrManagerService, boolean, android.content.ComponentName, int, int, android.content.ComponentName)
    {
        com.android.server.vr.VrManagerService r0;
        boolean z0;
        android.content.ComponentName r1, r2;
        int i0, i1;

        r0 := @parameter0: com.android.server.vr.VrManagerService;

        z0 := @parameter1: boolean;

        r1 := @parameter2: android.content.ComponentName;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r2 := @parameter5: android.content.ComponentName;

        specialinvoke r0.<com.android.server.vr.VrManagerService: void setVrMode(boolean,android.content.ComponentName,int,int,android.content.ComponentName)>(z0, r1, i0, i1, r2);

        return;
    }

    static void access$3400(com.android.server.vr.VrManagerService, boolean)
    {
        com.android.server.vr.VrManagerService r0;
        boolean z0;

        r0 := @parameter0: com.android.server.vr.VrManagerService;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.server.vr.VrManagerService: void setScreenOn(boolean)>(z0);

        return;
    }

    static boolean access$3500(com.android.server.vr.VrManagerService, java.lang.String, int)
    {
        com.android.server.vr.VrManagerService r0;
        java.lang.String r1;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.server.vr.VrManagerService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $z0 = specialinvoke r0.<com.android.server.vr.VrManagerService: boolean isCurrentVrListener(java.lang.String,int)>(r1, i0);

        return $z0;
    }

    static int access$3600(com.android.server.vr.VrManagerService, android.content.ComponentName, int)
    {
        com.android.server.vr.VrManagerService r0;
        android.content.ComponentName r1;
        int i0, $i1;

        r0 := @parameter0: com.android.server.vr.VrManagerService;

        r1 := @parameter1: android.content.ComponentName;

        i0 := @parameter2: int;

        $i1 = specialinvoke r0.<com.android.server.vr.VrManagerService: int hasVrPackage(android.content.ComponentName,int)>(r1, i0);

        return $i1;
    }

    static void access$3800(com.android.server.vr.VrManagerService)
    {
        com.android.server.vr.VrManagerService r0;

        r0 := @parameter0: com.android.server.vr.VrManagerService;

        specialinvoke r0.<com.android.server.vr.VrManagerService: void setUserUnlocked()>();

        return;
    }

    static void access$400(com.android.server.vr.VrManagerService)
    {
        com.android.server.vr.VrManagerService r0;

        r0 := @parameter0: com.android.server.vr.VrManagerService;

        specialinvoke r0.<com.android.server.vr.VrManagerService: void callFocusedActivityChangedLocked()>();

        return;
    }

    static boolean access$500(com.android.server.vr.VrManagerService)
    {
        com.android.server.vr.VrManagerService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.vr.VrManagerService;

        $z0 = r0.<com.android.server.vr.VrManagerService: boolean mBootsToVr>;

        return $z0;
    }

    static void access$600(com.android.server.vr.VrManagerService, boolean)
    {
        com.android.server.vr.VrManagerService r0;
        boolean z0;

        r0 := @parameter0: com.android.server.vr.VrManagerService;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.server.vr.VrManagerService: void setPersistentVrModeEnabled(boolean)>(z0);

        return;
    }

    static android.os.RemoteCallbackList access$700(com.android.server.vr.VrManagerService)
    {
        com.android.server.vr.VrManagerService r0;
        android.os.RemoteCallbackList $r1;

        r0 := @parameter0: com.android.server.vr.VrManagerService;

        $r1 = r0.<com.android.server.vr.VrManagerService: android.os.RemoteCallbackList mVrStateRemoteCallbacks>;

        return $r1;
    }

    static boolean access$800(com.android.server.vr.VrManagerService)
    {
        com.android.server.vr.VrManagerService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.vr.VrManagerService;

        $z0 = r0.<com.android.server.vr.VrManagerService: boolean mVrModeAllowed>;

        return $z0;
    }

    static void access$900(com.android.server.vr.VrManagerService)
    {
        com.android.server.vr.VrManagerService r0;

        r0 := @parameter0: com.android.server.vr.VrManagerService;

        specialinvoke r0.<com.android.server.vr.VrManagerService: void consumeAndApplyPendingStateLocked()>();

        return;
    }

    private void addPersistentStateCallback(android.service.vr.IPersistentVrStateCallbacks)
    {
        com.android.server.vr.VrManagerService r0;
        android.service.vr.IPersistentVrStateCallbacks r1;
        android.os.RemoteCallbackList $r2;

        r0 := @this: com.android.server.vr.VrManagerService;

        r1 := @parameter0: android.service.vr.IPersistentVrStateCallbacks;

        $r2 = r0.<com.android.server.vr.VrManagerService: android.os.RemoteCallbackList mPersistentVrStateRemoteCallbacks>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: boolean register(android.os.IInterface)>(r1);

        return;
    }

    private void addStateCallback(android.service.vr.IVrStateCallbacks)
    {
        com.android.server.vr.VrManagerService r0;
        android.service.vr.IVrStateCallbacks r1;
        android.os.RemoteCallbackList $r2;

        r0 := @this: com.android.server.vr.VrManagerService;

        r1 := @parameter0: android.service.vr.IVrStateCallbacks;

        $r2 = r0.<com.android.server.vr.VrManagerService: android.os.RemoteCallbackList mVrStateRemoteCallbacks>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: boolean register(android.os.IInterface)>(r1);

        return;
    }

    private void callFocusedActivityChangedLocked()
    {
        com.android.server.vr.VrManagerService r0;
        android.content.ComponentName r1;
        boolean z0;
        int i0;
        com.android.server.vr.VrManagerService$6 $r2;
        com.android.server.utils.ManagedApplicationService $r3;

        r0 := @this: com.android.server.vr.VrManagerService;

        r1 = r0.<com.android.server.vr.VrManagerService: android.content.ComponentName mCurrentVrModeComponent>;

        z0 = r0.<com.android.server.vr.VrManagerService: boolean mRunning2dInVr>;

        i0 = r0.<com.android.server.vr.VrManagerService: int mVrAppProcessId>;

        $r3 = r0.<com.android.server.vr.VrManagerService: com.android.server.utils.ManagedApplicationService mCurrentVrService>;

        $r2 = new com.android.server.vr.VrManagerService$6;

        specialinvoke $r2.<com.android.server.vr.VrManagerService$6: void <init>(com.android.server.vr.VrManagerService,android.content.ComponentName,boolean,int)>(r0, r1, z0, i0);

        virtualinvoke $r3.<com.android.server.utils.ManagedApplicationService: void sendEvent(com.android.server.utils.ManagedApplicationService$PendingEvent)>($r2);

        return;
    }

    private void changeVrModeLocked(boolean)
    {
        com.android.server.vr.VrManagerService r0;
        boolean z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r2;
        java.lang.String $r5, r6;

        r0 := @this: com.android.server.vr.VrManagerService;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.vr.VrManagerService: boolean mVrModeEnabled>;

        if $z1 == z0 goto label3;

        r0.<com.android.server.vr.VrManagerService: boolean mVrModeEnabled> = z0;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("VR mode ");

        $z2 = r0.<com.android.server.vr.VrManagerService: boolean mVrModeEnabled>;

        if $z2 == 0 goto label1;

        r6 = "enabled";

        goto label2;

     label1:
        r6 = "disabled";

     label2:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("VrManagerService", $r5);

        $z3 = r0.<com.android.server.vr.VrManagerService: boolean mVrModeEnabled>;

        staticinvoke <com.android.server.vr.VrManagerService: void setVrModeNative(boolean)>($z3);

        specialinvoke r0.<com.android.server.vr.VrManagerService: void onVrModeChangedLocked()>();

     label3:
        return;
    }

    private void consumeAndApplyPendingStateLocked()
    {
        com.android.server.vr.VrManagerService r0;

        r0 := @this: com.android.server.vr.VrManagerService;

        specialinvoke r0.<com.android.server.vr.VrManagerService: void consumeAndApplyPendingStateLocked(boolean)>(1);

        return;
    }

    private void consumeAndApplyPendingStateLocked(boolean)
    {
        com.android.server.vr.VrManagerService r0;
        boolean z0, $z2, $z3;
        com.android.server.vr.VrManagerService$VrState r1, $r2, $r3, $r4, $r5, $r6;
        android.content.ComponentName $r7, $r8;
        int $i0, $i1;

        r0 := @this: com.android.server.vr.VrManagerService;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.server.vr.VrManagerService: com.android.server.vr.VrManagerService$VrState mPendingState>;

        if r1 == null goto label1;

        $z3 = r1.<com.android.server.vr.VrManagerService$VrState: boolean enabled>;

        $r2 = r0.<com.android.server.vr.VrManagerService: com.android.server.vr.VrManagerService$VrState mPendingState>;

        $z2 = $r2.<com.android.server.vr.VrManagerService$VrState: boolean running2dInVr>;

        $r3 = r0.<com.android.server.vr.VrManagerService: com.android.server.vr.VrManagerService$VrState mPendingState>;

        $r8 = $r3.<com.android.server.vr.VrManagerService$VrState: android.content.ComponentName targetPackageName>;

        $r4 = r0.<com.android.server.vr.VrManagerService: com.android.server.vr.VrManagerService$VrState mPendingState>;

        $i1 = $r4.<com.android.server.vr.VrManagerService$VrState: int userId>;

        $r5 = r0.<com.android.server.vr.VrManagerService: com.android.server.vr.VrManagerService$VrState mPendingState>;

        $i0 = $r5.<com.android.server.vr.VrManagerService$VrState: int processId>;

        $r6 = r0.<com.android.server.vr.VrManagerService: com.android.server.vr.VrManagerService$VrState mPendingState>;

        $r7 = $r6.<com.android.server.vr.VrManagerService$VrState: android.content.ComponentName callingPackage>;

        specialinvoke r0.<com.android.server.vr.VrManagerService: boolean updateCurrentVrServiceLocked(boolean,boolean,android.content.ComponentName,int,int,android.content.ComponentName)>($z3, $z2, $r8, $i1, $i0, $r7);

        r0.<com.android.server.vr.VrManagerService: com.android.server.vr.VrManagerService$VrState mPendingState> = null;

        goto label2;

     label1:
        if z0 == 0 goto label2;

        specialinvoke r0.<com.android.server.vr.VrManagerService: boolean updateCurrentVrServiceLocked(boolean,boolean,android.content.ComponentName,int,int,android.content.ComponentName)>(0, 0, null, 0, -1, null);

     label2:
        return;
    }

    private void createAndConnectService(android.content.ComponentName, int)
    {
        com.android.server.vr.VrManagerService r0;
        android.content.ComponentName r1;
        int i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r7;
        com.android.server.utils.ManagedApplicationService r8;

        r0 := @this: com.android.server.vr.VrManagerService;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        r8 = specialinvoke r0.<com.android.server.vr.VrManagerService: com.android.server.utils.ManagedApplicationService createVrListenerService(android.content.ComponentName,int)>(r1, i0);

        r0.<com.android.server.vr.VrManagerService: com.android.server.utils.ManagedApplicationService mCurrentVrService> = r8;

        virtualinvoke r8.<com.android.server.utils.ManagedApplicationService: void connect()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connecting ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for user ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("VrManagerService", $r7);

        return;
    }

    private com.android.server.utils.ManagedApplicationService createVrCompositorService(android.content.ComponentName, int)
    {
        com.android.server.vr.VrManagerService r0;
        android.content.ComponentName r1;
        int i0;
        boolean $z0;
        com.android.server.utils.ManagedApplicationService$EventCallback $r2;
        android.os.Handler $r3;
        android.content.Context $r4;
        com.android.server.utils.ManagedApplicationService $r5;
        byte b1;

        r0 := @this: com.android.server.vr.VrManagerService;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        $z0 = r0.<com.android.server.vr.VrManagerService: boolean mBootsToVr>;

        if $z0 == 0 goto label1;

        b1 = 1;

        goto label2;

     label1:
        b1 = 3;

     label2:
        $r4 = r0.<com.android.server.vr.VrManagerService: android.content.Context mContext>;

        $r3 = r0.<com.android.server.vr.VrManagerService: android.os.Handler mHandler>;

        $r2 = r0.<com.android.server.vr.VrManagerService: com.android.server.utils.ManagedApplicationService$EventCallback mEventCallback>;

        $r5 = staticinvoke <com.android.server.utils.ManagedApplicationService: com.android.server.utils.ManagedApplicationService build(android.content.Context,android.content.ComponentName,int,int,java.lang.String,com.android.server.utils.ManagedApplicationService$BinderChecker,boolean,int,android.os.Handler,com.android.server.utils.ManagedApplicationService$EventCallback)>($r4, r1, i0, 0, null, null, 1, b1, $r3, $r2);

        return $r5;
    }

    private com.android.server.utils.ManagedApplicationService createVrListenerService(android.content.ComponentName, int)
    {
        com.android.server.vr.VrManagerService r0;
        android.content.ComponentName r1;
        int i0;
        boolean $z0;
        com.android.server.utils.ManagedApplicationService$EventCallback $r2;
        android.os.Handler $r3;
        com.android.server.utils.ManagedApplicationService$BinderChecker $r4;
        android.content.Context $r5;
        com.android.server.utils.ManagedApplicationService $r6;
        byte b1;

        r0 := @this: com.android.server.vr.VrManagerService;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        $z0 = r0.<com.android.server.vr.VrManagerService: boolean mBootsToVr>;

        if $z0 == 0 goto label1;

        b1 = 1;

        goto label2;

     label1:
        b1 = 2;

     label2:
        $r5 = r0.<com.android.server.vr.VrManagerService: android.content.Context mContext>;

        $r4 = <com.android.server.vr.VrManagerService: com.android.server.utils.ManagedApplicationService$BinderChecker sBinderChecker>;

        $r3 = r0.<com.android.server.vr.VrManagerService: android.os.Handler mHandler>;

        $r2 = r0.<com.android.server.vr.VrManagerService: com.android.server.utils.ManagedApplicationService$EventCallback mEventCallback>;

        $r6 = staticinvoke <com.android.server.utils.ManagedApplicationService: com.android.server.utils.ManagedApplicationService build(android.content.Context,android.content.ComponentName,int,int,java.lang.String,com.android.server.utils.ManagedApplicationService$BinderChecker,boolean,int,android.os.Handler,com.android.server.utils.ManagedApplicationService$EventCallback)>($r5, r1, i0, 17041435, "android.settings.VR_LISTENER_SETTINGS", $r4, 1, b1, $r3, $r2);

        return $r6;
    }

    private void dumpStateTransitions(java.io.PrintWriter)
    {
        com.android.server.vr.VrManagerService r0;
        java.util.ArrayDeque r2, $r5, $r6;
        java.util.Iterator r3;
        java.text.SimpleDateFormat $r4;
        int $i0;
        boolean $z0, $z1;
        java.lang.Object $r7;
        com.android.server.utils.ManagedApplicationService$LogFormattable $r8;
        java.lang.String $r9;
        java.lang.Throwable $r10;
        java.io.PrintWriter r11;

        r0 := @this: com.android.server.vr.VrManagerService;

        r11 := @parameter0: java.io.PrintWriter;

        $r4 = new java.text.SimpleDateFormat;

        specialinvoke $r4.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("MM-dd HH:mm:ss.SSS");

        r2 = r0.<com.android.server.vr.VrManagerService: java.util.ArrayDeque mLoggingDeque>;

        entermonitor r2;

     label01:
        $r5 = r0.<com.android.server.vr.VrManagerService: java.util.ArrayDeque mLoggingDeque>;

        $i0 = virtualinvoke $r5.<java.util.ArrayDeque: int size()>();

        if $i0 != 0 goto label02;

        virtualinvoke r11.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        virtualinvoke r11.<java.io.PrintWriter: void println(java.lang.String)>("None");

     label02:
        $z0 = r0.<com.android.server.vr.VrManagerService: boolean mLogLimitHit>;

        if $z0 == 0 goto label03;

        virtualinvoke r11.<java.io.PrintWriter: void println(java.lang.String)>("...");

     label03:
        $r6 = r0.<com.android.server.vr.VrManagerService: java.util.ArrayDeque mLoggingDeque>;

        r3 = virtualinvoke $r6.<java.util.ArrayDeque: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label06;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (com.android.server.utils.ManagedApplicationService$LogFormattable) $r7;

        $r9 = interfaceinvoke $r8.<com.android.server.utils.ManagedApplicationService$LogFormattable: java.lang.String toLogString(java.text.SimpleDateFormat)>($r4);

        virtualinvoke r11.<java.io.PrintWriter: void println(java.lang.String)>($r9);

     label05:
        goto label04;

     label06:
        exitmonitor r2;

     label07:
        return;

     label08:
        $r10 := @caughtexception;

     label09:
        exitmonitor r2;

     label10:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private transient void enforceCallerPermissionAnyOf(java.lang.String[])
    {
        com.android.server.vr.VrManagerService r0;
        java.lang.String[] r1;
        int i0, $i1, i2;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r7, r9;
        java.lang.SecurityException $r6;
        android.content.Context $r8;

        r0 := @this: com.android.server.vr.VrManagerService;

        r1 := @parameter0: java.lang.String[];

        i0 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        r9 = r1[i2];

        $r8 = r0.<com.android.server.vr.VrManagerService: android.content.Context mContext>;

        $i1 = virtualinvoke $r8.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>(r9);

        if $i1 != 0 goto label2;

        return;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caller does not hold at least one of the permissions: ");

        $r4 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = new java.lang.SecurityException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.SecurityException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    private static java.lang.String formatSettings(java.util.Collection)
    {
        java.util.Iterator r1;
        boolean $z0, $z1, z2, $z3;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r5, r9;
        java.lang.Object $r4;
        java.util.Collection r8;

        r8 := @parameter0: java.util.Collection;

        if r8 == null goto label6;

        $z0 = interfaceinvoke r8.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        goto label6;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        z2 = 1;

        r1 = interfaceinvoke r8.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.lang.String) $r4;

        $r5 = "";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z1 == 0 goto label3;

        goto label2;

     label3:
        if z2 != 0 goto label4;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

     label4:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        z2 = 0;

        goto label2;

     label5:
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label6:
        return "";
    }

    private android.util.ArraySet getNotificationListeners(android.content.ContentResolver, int)
    {
        com.android.server.vr.VrManagerService r0;
        int i0, i1, i2;
        java.lang.String r1, r4;
        android.util.ArraySet $r2;
        boolean $z0;
        android.content.ContentResolver r3;
        java.lang.String[] r6;

        r0 := @this: com.android.server.vr.VrManagerService;

        r3 := @parameter0: android.content.ContentResolver;

        i1 := @parameter1: int;

        r4 = staticinvoke <android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>(r3, "enabled_notification_listeners", i1);

        $r2 = new android.util.ArraySet;

        specialinvoke $r2.<android.util.ArraySet: void <init>()>();

        if r4 == null goto label3;

        r6 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        i0 = lengthof r6;

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        r1 = r6[i2];

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label2;

        virtualinvoke $r2.<android.util.ArraySet: boolean add(java.lang.Object)>(r1);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return $r2;
    }

    private boolean getPersistentVrMode()
    {
        com.android.server.vr.VrManagerService r0;
        java.lang.Object r1;
        boolean z0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.vr.VrManagerService;

        r1 = r0.<com.android.server.vr.VrManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        z0 = r0.<com.android.server.vr.VrManagerService: boolean mPersistentVrModeEnabled>;

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private java.lang.String getStateAsString()
    {
        com.android.server.vr.VrManagerService r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.StringBuilder $r3;
        java.lang.String $r7, r8, r9, r10;

        r0 := @this: com.android.server.vr.VrManagerService;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        i0 = r0.<com.android.server.vr.VrManagerService: int mSystemSleepFlags>;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r8 = "awake, ";

        goto label2;

     label1:
        r8 = "";

     label2:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $i2 = r0.<com.android.server.vr.VrManagerService: int mSystemSleepFlags>;

        $i3 = $i2 & 2;

        if $i3 == 0 goto label3;

        r9 = "screen_on, ";

        goto label4;

     label3:
        r9 = "";

     label4:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        r10 = "";

        $i4 = r0.<com.android.server.vr.VrManagerService: int mSystemSleepFlags>;

        $i5 = $i4 & 4;

        if $i5 == 0 goto label5;

        r10 = "keyguard_off";

     label5:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    private int getVr2dDisplayId()
    {
        com.android.server.vr.VrManagerService r0;
        com.android.server.vr.Vr2dDisplay r1;
        int $i1;

        r0 := @this: com.android.server.vr.VrManagerService;

        r1 = r0.<com.android.server.vr.VrManagerService: com.android.server.vr.Vr2dDisplay mVr2dDisplay>;

        if r1 == null goto label1;

        $i1 = virtualinvoke r1.<com.android.server.vr.Vr2dDisplay: int getVirtualDisplayId()>();

        return $i1;

     label1:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("VrManagerService", "Vr2dDisplay is null!");

        return -1;
    }

    private boolean getVrMode()
    {
        com.android.server.vr.VrManagerService r0;
        java.lang.Object r1;
        boolean z0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.vr.VrManagerService;

        r1 = r0.<com.android.server.vr.VrManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        z0 = r0.<com.android.server.vr.VrManagerService: boolean mVrModeEnabled>;

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void grantCoarseLocationPermissionIfNeeded(java.lang.String, int)
    {
        com.android.server.vr.VrManagerService r0;
        java.lang.String r1, $r9;
        int i0;
        android.os.UserHandle r2;
        boolean $z0;
        android.content.Context $r3;
        java.lang.Throwable $r4;
        java.lang.StringBuilder $r5;
        android.content.pm.PackageManager r10;

        r0 := @this: com.android.server.vr.VrManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.server.vr.VrManagerService: boolean isPermissionUserUpdated(java.lang.String,java.lang.String,int)>("android.permission.ACCESS_COARSE_LOCATION", r1, i0);

        if $z0 != 0 goto label4;

     label1:
        $r3 = r0.<com.android.server.vr.VrManagerService: android.content.Context mContext>;

        r10 = virtualinvoke $r3.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r2 = new android.os.UserHandle;

        specialinvoke r2.<android.os.UserHandle: void <init>(int)>(i0);

        virtualinvoke r10.<android.content.pm.PackageManager: void grantRuntimePermission(java.lang.String,java.lang.String,android.os.UserHandle)>(r1, "android.permission.ACCESS_COARSE_LOCATION", r2);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not grant coarse location permission, package ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was removed.");

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("VrManagerService", $r9);

     label4:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    private void grantNotificationListenerAccess(java.lang.String, int)
    {
        com.android.server.vr.VrManagerService r0;
        java.lang.String r1, $r11;
        int i0;
        android.app.NotificationManager r2;
        java.util.Iterator r3;
        android.content.ComponentName r4;
        android.content.Context $r5, $r7;
        java.lang.Object $r6, $r10;
        android.content.pm.PackageManager $r8;
        android.util.ArraySet $r9;
        boolean $z0, $z1;

        r0 := @this: com.android.server.vr.VrManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r5 = r0.<com.android.server.vr.VrManagerService: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/NotificationManager;");

        r2 = (android.app.NotificationManager) $r6;

        $r7 = r0.<com.android.server.vr.VrManagerService: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r9 = staticinvoke <com.android.server.vr.EnabledComponentsObserver: android.util.ArraySet loadComponentNames(android.content.pm.PackageManager,int,java.lang.String,java.lang.String)>($r8, i0, "android.service.notification.NotificationListenerService", "android.permission.BIND_NOTIFICATION_LISTENER_SERVICE");

        r3 = virtualinvoke $r9.<android.util.ArraySet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.content.ComponentName) $r10;

        $r11 = virtualinvoke r4.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r11, r1);

        if $z1 == 0 goto label2;

        virtualinvoke r2.<android.app.NotificationManager: void setNotificationListenerAccessGrantedForUser(android.content.ComponentName,int,boolean)>(r4, i0, 1);

     label2:
        goto label1;

     label3:
        return;
    }

    private void grantNotificationPolicyAccess(java.lang.String)
    {
        com.android.server.vr.VrManagerService r0;
        java.lang.String r1;
        android.content.Context $r2;
        java.lang.Object $r3;
        android.app.NotificationManager $r4;

        r0 := @this: com.android.server.vr.VrManagerService;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.vr.VrManagerService: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/NotificationManager;");

        $r4 = (android.app.NotificationManager) $r3;

        virtualinvoke $r4.<android.app.NotificationManager: void setNotificationPolicyAccessGranted(java.lang.String,boolean)>(r1, 1);

        return;
    }

    private int hasVrPackage(android.content.ComponentName, int)
    {
        com.android.server.vr.VrManagerService r0;
        java.lang.Object r1;
        com.android.server.vr.EnabledComponentsObserver $r2;
        java.lang.Throwable $r3;
        android.content.ComponentName r4;
        int i0, i1;

        r0 := @this: com.android.server.vr.VrManagerService;

        r4 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        r1 = r0.<com.android.server.vr.VrManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.vr.VrManagerService: com.android.server.vr.EnabledComponentsObserver mComponentObserver>;

        i1 = virtualinvoke $r2.<com.android.server.vr.EnabledComponentsObserver: int isValid(android.content.ComponentName,int)>(r4, i0);

        exitmonitor r1;

     label2:
        return i1;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private static native void initializeNative();

    private boolean isCurrentVrListener(java.lang.String, int)
    {
        com.android.server.vr.VrManagerService r0;
        int i0, $i1;
        java.lang.Object r1;
        com.android.server.utils.ManagedApplicationService r2, $r3, $r6;
        android.content.ComponentName $r4;
        java.lang.String $r5, r8;
        boolean $z0, z1;
        java.lang.Throwable $r7;

        r0 := @this: com.android.server.vr.VrManagerService;

        r8 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = r0.<com.android.server.vr.VrManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        r2 = r0.<com.android.server.vr.VrManagerService: com.android.server.utils.ManagedApplicationService mCurrentVrService>;

     label02:
        z1 = 0;

        if r2 != null goto label05;

     label03:
        exitmonitor r1;

     label04:
        return 0;

     label05:
        $r3 = r0.<com.android.server.vr.VrManagerService: com.android.server.utils.ManagedApplicationService mCurrentVrService>;

        $r4 = virtualinvoke $r3.<com.android.server.utils.ManagedApplicationService: android.content.ComponentName getComponent()>();

        $r5 = virtualinvoke $r4.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z0 == 0 goto label07;

        $r6 = r0.<com.android.server.vr.VrManagerService: com.android.server.utils.ManagedApplicationService mCurrentVrService>;

        $i1 = virtualinvoke $r6.<com.android.server.utils.ManagedApplicationService: int getUserId()>();

        if i0 != $i1 goto label07;

     label06:
        z1 = 1;

        goto label07;

     label07:
        exitmonitor r1;

     label08:
        return z1;

     label09:
        $r7 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    private boolean isDefaultAllowed(java.lang.String)
    {
        com.android.server.vr.VrManagerService r0;
        android.content.pm.PackageManager r1;
        android.content.Context $r2;
        boolean $z0, $z1;
        android.content.pm.PackageManager$NameNotFoundException $r3;
        java.lang.String r4;
        android.content.pm.ApplicationInfo r5;

        r0 := @this: com.android.server.vr.VrManagerService;

        r4 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.vr.VrManagerService: android.content.Context mContext>;

        r1 = virtualinvoke $r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

     label1:
        r5 = virtualinvoke r1.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r4, 128);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r5 = null;

     label4:
        if r5 == null goto label6;

        $z0 = virtualinvoke r5.<android.content.pm.ApplicationInfo: boolean isSystemApp()>();

        if $z0 != 0 goto label5;

        $z1 = virtualinvoke r5.<android.content.pm.ApplicationInfo: boolean isUpdatedSystemApp()>();

        if $z1 != 0 goto label5;

        goto label6;

     label5:
        return 1;

     label6:
        return 0;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    private boolean isPermissionUserUpdated(java.lang.String, java.lang.String, int)
    {
        com.android.server.vr.VrManagerService r0;
        java.lang.String r1, r2;
        int i0, $i1, $i2;
        android.content.Context $r3;
        android.content.pm.PackageManager $r4;
        android.os.UserHandle $r5;
        boolean z0;

        r0 := @this: com.android.server.vr.VrManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r3 = r0.<com.android.server.vr.VrManagerService: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r5 = new android.os.UserHandle;

        specialinvoke $r5.<android.os.UserHandle: void <init>(int)>(i0);

        $i1 = virtualinvoke $r4.<android.content.pm.PackageManager: int getPermissionFlags(java.lang.String,java.lang.String,android.os.UserHandle)>(r1, r2, $r5);

        $i2 = $i1 & 3;

        if $i2 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void logEvent(com.android.server.utils.ManagedApplicationService$LogFormattable)
    {
        com.android.server.vr.VrManagerService r0;
        java.util.ArrayDeque r1, $r2, $r3, $r4;
        int $i0;
        java.lang.Throwable $r6;
        com.android.server.utils.ManagedApplicationService$LogFormattable r7;

        r0 := @this: com.android.server.vr.VrManagerService;

        r7 := @parameter0: com.android.server.utils.ManagedApplicationService$LogFormattable;

        r1 = r0.<com.android.server.vr.VrManagerService: java.util.ArrayDeque mLoggingDeque>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.vr.VrManagerService: java.util.ArrayDeque mLoggingDeque>;

        $i0 = virtualinvoke $r2.<java.util.ArrayDeque: int size()>();

        if $i0 != 64 goto label2;

        $r4 = r0.<com.android.server.vr.VrManagerService: java.util.ArrayDeque mLoggingDeque>;

        virtualinvoke $r4.<java.util.ArrayDeque: java.lang.Object removeFirst()>();

        r0.<com.android.server.vr.VrManagerService: boolean mLogLimitHit> = 1;

     label2:
        $r3 = r0.<com.android.server.vr.VrManagerService: java.util.ArrayDeque mLoggingDeque>;

        virtualinvoke $r3.<java.util.ArrayDeque: boolean add(java.lang.Object)>(r7);

        exitmonitor r1;

     label3:
        return;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private void logStateLocked()
    {
        com.android.server.vr.VrManagerService r0;
        com.android.server.vr.VrManagerService$VrState $r1;
        boolean $z0, $z1, $z2;
        android.content.ComponentName $r2, r4;
        int $i0, $i1;
        com.android.server.utils.ManagedApplicationService r3;

        r0 := @this: com.android.server.vr.VrManagerService;

        r3 = r0.<com.android.server.vr.VrManagerService: com.android.server.utils.ManagedApplicationService mCurrentVrService>;

        if r3 != null goto label1;

        r4 = null;

        goto label2;

     label1:
        r4 = virtualinvoke r3.<com.android.server.utils.ManagedApplicationService: android.content.ComponentName getComponent()>();

     label2:
        $r1 = new com.android.server.vr.VrManagerService$VrState;

        $z2 = r0.<com.android.server.vr.VrManagerService: boolean mVrModeEnabled>;

        $z1 = r0.<com.android.server.vr.VrManagerService: boolean mRunning2dInVr>;

        $i1 = r0.<com.android.server.vr.VrManagerService: int mCurrentVrModeUser>;

        $i0 = r0.<com.android.server.vr.VrManagerService: int mVrAppProcessId>;

        $r2 = r0.<com.android.server.vr.VrManagerService: android.content.ComponentName mCurrentVrModeComponent>;

        $z0 = r0.<com.android.server.vr.VrManagerService: boolean mWasDefaultGranted>;

        specialinvoke $r1.<com.android.server.vr.VrManagerService$VrState: void <init>(boolean,boolean,android.content.ComponentName,int,int,android.content.ComponentName,boolean)>($z2, $z1, r4, $i1, $i0, $r2, $z0);

        specialinvoke r0.<com.android.server.vr.VrManagerService: void logEvent(com.android.server.utils.ManagedApplicationService$LogFormattable)>($r1);

        return;
    }

    private void onVrModeChangedLocked()
    {
        com.android.server.vr.VrManagerService r0;
        android.os.Handler r1;
        boolean $z0;
        android.os.Message $r2;
        int i0;

        r0 := @this: com.android.server.vr.VrManagerService;

        r1 = r0.<com.android.server.vr.VrManagerService: android.os.Handler mHandler>;

        $z0 = r0.<com.android.server.vr.VrManagerService: boolean mVrModeEnabled>;

        i0 = (int) $z0;

        $r2 = virtualinvoke r1.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(0, i0, 0);

        virtualinvoke r1.<android.os.Handler: boolean sendMessage(android.os.Message)>($r2);

        return;
    }

    private void removePersistentStateCallback(android.service.vr.IPersistentVrStateCallbacks)
    {
        com.android.server.vr.VrManagerService r0;
        android.service.vr.IPersistentVrStateCallbacks r1;
        android.os.RemoteCallbackList $r2;

        r0 := @this: com.android.server.vr.VrManagerService;

        r1 := @parameter0: android.service.vr.IPersistentVrStateCallbacks;

        $r2 = r0.<com.android.server.vr.VrManagerService: android.os.RemoteCallbackList mPersistentVrStateRemoteCallbacks>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: boolean unregister(android.os.IInterface)>(r1);

        return;
    }

    private void removeStateCallback(android.service.vr.IVrStateCallbacks)
    {
        com.android.server.vr.VrManagerService r0;
        android.service.vr.IVrStateCallbacks r1;
        android.os.RemoteCallbackList $r2;

        r0 := @this: com.android.server.vr.VrManagerService;

        r1 := @parameter0: android.service.vr.IVrStateCallbacks;

        $r2 = r0.<com.android.server.vr.VrManagerService: android.os.RemoteCallbackList mVrStateRemoteCallbacks>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: boolean unregister(android.os.IInterface)>(r1);

        return;
    }

    private void revokeCoarseLocationPermissionIfNeeded(java.lang.String, int)
    {
        com.android.server.vr.VrManagerService r0;
        java.lang.String r1, $r9;
        int i0;
        android.content.pm.PackageManager r2;
        boolean $z0;
        android.content.Context $r3;
        java.lang.Throwable $r4;
        java.lang.StringBuilder $r5;
        android.os.UserHandle r10;

        r0 := @this: com.android.server.vr.VrManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.server.vr.VrManagerService: boolean isPermissionUserUpdated(java.lang.String,java.lang.String,int)>("android.permission.ACCESS_COARSE_LOCATION", r1, i0);

        if $z0 != 0 goto label4;

     label1:
        $r3 = r0.<com.android.server.vr.VrManagerService: android.content.Context mContext>;

        r2 = virtualinvoke $r3.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r10 = new android.os.UserHandle;

        specialinvoke r10.<android.os.UserHandle: void <init>(int)>(i0);

        virtualinvoke r2.<android.content.pm.PackageManager: void revokeRuntimePermission(java.lang.String,java.lang.String,android.os.UserHandle)>(r1, "android.permission.ACCESS_COARSE_LOCATION", r10);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not revoke coarse location permission, package ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was removed.");

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("VrManagerService", $r9);

     label4:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    private void revokeNotificationListenerAccess(java.lang.String, int)
    {
        com.android.server.vr.VrManagerService r0;
        java.lang.String r1, $r9;
        int i0;
        android.app.NotificationManager r2;
        java.util.Iterator r3;
        android.content.ComponentName r4;
        android.content.Context $r5;
        java.lang.Object $r6, $r8;
        java.util.List $r7;
        boolean $z0, $z1;

        r0 := @this: com.android.server.vr.VrManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r5 = r0.<com.android.server.vr.VrManagerService: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/NotificationManager;");

        r2 = (android.app.NotificationManager) $r6;

        $r7 = virtualinvoke r2.<android.app.NotificationManager: java.util.List getEnabledNotificationListeners(int)>(i0);

        r3 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.content.ComponentName) $r8;

        if r4 == null goto label2;

        $r9 = virtualinvoke r4.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        virtualinvoke r2.<android.app.NotificationManager: void setNotificationListenerAccessGrantedForUser(android.content.ComponentName,int,boolean)>(r4, i0, 0);

     label2:
        goto label1;

     label3:
        return;
    }

    private void revokeNotificationPolicyAccess(java.lang.String)
    {
        com.android.server.vr.VrManagerService r0;
        java.lang.String r1;
        android.app.NotificationManager r2;
        android.content.Context $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.server.vr.VrManagerService;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.server.vr.VrManagerService: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/NotificationManager;");

        r2 = (android.app.NotificationManager) $r4;

        virtualinvoke r2.<android.app.NotificationManager: boolean removeAutomaticZenRules(java.lang.String)>(r1);

        virtualinvoke r2.<android.app.NotificationManager: void setNotificationPolicyAccessGranted(java.lang.String,boolean)>(r1, 0);

        return;
    }

    private void setAndBindCompositor(android.content.ComponentName)
    {
        com.android.server.vr.VrManagerService r0;
        int i0;
        long l1;
        java.lang.Object r1;
        java.lang.Throwable $r2, $r3;
        android.content.ComponentName r4;

        r0 := @this: com.android.server.vr.VrManagerService;

        r4 := @parameter0: android.content.ComponentName;

        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r1 = r0.<com.android.server.vr.VrManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label2:
        specialinvoke r0.<com.android.server.vr.VrManagerService: void updateCompositorServiceLocked(int,android.content.ComponentName)>(i0, r4);

        exitmonitor r1;

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label4:
        $r2 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r2;

     label7:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label6 to label7 with label7;
    }

    private void setPersistentModeAndNotifyListenersLocked(boolean)
    {
        com.android.server.vr.VrManagerService r0;
        boolean z0, $z1;
        java.lang.StringBuilder $r2;
        com.android.server.vr.VrManagerService$SettingEvent $r5;
        android.os.Message $r6;
        java.lang.String r7, r8;
        android.os.Handler r9;
        int i1;

        r0 := @this: com.android.server.vr.VrManagerService;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.vr.VrManagerService: boolean mPersistentVrModeEnabled>;

        if $z1 != z0 goto label1;

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Persistent VR mode ");

        if z0 == 0 goto label2;

        r7 = "enabled";

        goto label3;

     label2:
        r7 = "disabled";

     label3:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("VrManagerService", r8);

        $r5 = new com.android.server.vr.VrManagerService$SettingEvent;

        specialinvoke $r5.<com.android.server.vr.VrManagerService$SettingEvent: void <init>(java.lang.String)>(r8);

        specialinvoke r0.<com.android.server.vr.VrManagerService: void logEvent(com.android.server.utils.ManagedApplicationService$LogFormattable)>($r5);

        r0.<com.android.server.vr.VrManagerService: boolean mPersistentVrModeEnabled> = z0;

        r9 = r0.<com.android.server.vr.VrManagerService: android.os.Handler mHandler>;

        i1 = (int) z0;

        $r6 = virtualinvoke r9.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(2, i1, 0);

        virtualinvoke r9.<android.os.Handler: boolean sendMessage(android.os.Message)>($r6);

        return;
    }

    private void setPersistentVrModeEnabled(boolean)
    {
        com.android.server.vr.VrManagerService r0;
        boolean z0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.vr.VrManagerService;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.server.vr.VrManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.server.vr.VrManagerService: void setPersistentModeAndNotifyListenersLocked(boolean)>(z0);

     label2:
        if z0 != 0 goto label4;

     label3:
        specialinvoke r0.<com.android.server.vr.VrManagerService: void setVrMode(boolean,android.content.ComponentName,int,int,android.content.ComponentName)>(0, null, 0, -1, null);

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r3 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private void setScreenOn(boolean)
    {
        com.android.server.vr.VrManagerService r0;
        boolean z0;

        r0 := @this: com.android.server.vr.VrManagerService;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.android.server.vr.VrManagerService: void setSystemState(int,boolean)>(2, z0);

        return;
    }

    private void setStandbyEnabled(boolean)
    {
        com.android.server.vr.VrManagerService r0;
        boolean z0, $z1;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.vr.VrManagerService;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.server.vr.VrManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z1 = r0.<com.android.server.vr.VrManagerService: boolean mBootsToVr>;

        if $z1 != 0 goto label3;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("VrManagerService", "Attempting to set standby mode on a non-standalone device");

        exitmonitor r1;

     label2:
        return;

     label3:
        r0.<com.android.server.vr.VrManagerService: boolean mStandby> = z0;

        specialinvoke r0.<com.android.server.vr.VrManagerService: void updateVrModeAllowedLocked()>();

        exitmonitor r1;

     label4:
        return;

     label5:
        $r3 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    private void setSystemState(int, boolean)
    {
        com.android.server.vr.VrManagerService r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        boolean z0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.vr.VrManagerService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = r0.<com.android.server.vr.VrManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        i1 = r0.<com.android.server.vr.VrManagerService: int mSystemSleepFlags>;

     label02:
        if z0 == 0 goto label05;

     label03:
        $i5 = r0.<com.android.server.vr.VrManagerService: int mSystemSleepFlags>;

        $i6 = $i5 | i0;

        r0.<com.android.server.vr.VrManagerService: int mSystemSleepFlags> = $i6;

     label04:
        goto label06;

     label05:
        $i2 = r0.<com.android.server.vr.VrManagerService: int mSystemSleepFlags>;

        $i3 = $i2 & i0;

        r0.<com.android.server.vr.VrManagerService: int mSystemSleepFlags> = $i3;

     label06:
        $i4 = r0.<com.android.server.vr.VrManagerService: int mSystemSleepFlags>;

        if i1 == $i4 goto label07;

        specialinvoke r0.<com.android.server.vr.VrManagerService: void updateVrModeAllowedLocked()>();

     label07:
        exitmonitor r1;

     label08:
        return;

     label09:
        $r3 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    private void setUserUnlocked()
    {
        com.android.server.vr.VrManagerService r0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.vr.VrManagerService;

        r1 = r0.<com.android.server.vr.VrManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<com.android.server.vr.VrManagerService: boolean mUserUnlocked> = 1;

        specialinvoke r0.<com.android.server.vr.VrManagerService: void updateVrModeAllowedLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void setVrMode(boolean, android.content.ComponentName, int, int, android.content.ComponentName)
    {
        com.android.server.vr.VrManagerService r0;
        boolean z0, $z2, $z5, $z6, z7, z8;
        int i0, i1;
        android.content.ComponentName r1, r9;
        java.lang.Object r2;
        com.android.server.vr.VrManagerService$VrState r3, $r6;
        android.os.Handler $r4, $r7;
        com.android.server.utils.ManagedApplicationService $r5;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.vr.VrManagerService;

        z0 := @parameter0: boolean;

        r9 := @parameter1: android.content.ComponentName;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r1 := @parameter4: android.content.ComponentName;

        r2 = r0.<com.android.server.vr.VrManagerService: java.lang.Object mLock>;

        entermonitor r2;

        if z0 != 0 goto label05;

     label01:
        $z6 = r0.<com.android.server.vr.VrManagerService: boolean mPersistentVrModeEnabled>;

        if $z6 == 0 goto label03;

     label02:
        goto label05;

     label03:
        z7 = 0;

        goto label06;

     label04:
        $r8 := @caughtexception;

        goto label21;

     label05:
        z7 = 1;

     label06:
        z8 = 0;

        if z0 != 0 goto label09;

        z8 = 0;

     label07:
        $z5 = r0.<com.android.server.vr.VrManagerService: boolean mPersistentVrModeEnabled>;

        if $z5 == 0 goto label09;

     label08:
        z8 = 1;

     label09:
        if z8 == 0 goto label12;

     label10:
        r9 = r0.<com.android.server.vr.VrManagerService: android.content.ComponentName mDefaultVrService>;

     label11:
        goto label12;

     label12:
        r3 = new com.android.server.vr.VrManagerService$VrState;

        specialinvoke r3.<com.android.server.vr.VrManagerService$VrState: void <init>(boolean,boolean,android.content.ComponentName,int,int,android.content.ComponentName)>(z7, z8, r9, i0, i1, r1);

        $z2 = r0.<com.android.server.vr.VrManagerService: boolean mVrModeAllowed>;

        if $z2 != 0 goto label14;

        r0.<com.android.server.vr.VrManagerService: com.android.server.vr.VrManagerService$VrState mPendingState> = r3;

        exitmonitor r2;

     label13:
        return;

     label14:
        if z7 != 0 goto label18;

     label15:
        $r5 = r0.<com.android.server.vr.VrManagerService: com.android.server.utils.ManagedApplicationService mCurrentVrService>;

        if $r5 == null goto label18;

        $r6 = r0.<com.android.server.vr.VrManagerService: com.android.server.vr.VrManagerService$VrState mPendingState>;

        if $r6 != null goto label16;

        $r7 = r0.<com.android.server.vr.VrManagerService: android.os.Handler mHandler>;

        virtualinvoke $r7.<android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>(1, 300L);

     label16:
        r0.<com.android.server.vr.VrManagerService: com.android.server.vr.VrManagerService$VrState mPendingState> = r3;

        exitmonitor r2;

     label17:
        return;

     label18:
        $r4 = r0.<com.android.server.vr.VrManagerService: android.os.Handler mHandler>;

        virtualinvoke $r4.<android.os.Handler: void removeMessages(int)>(1);

        r0.<com.android.server.vr.VrManagerService: com.android.server.vr.VrManagerService$VrState mPendingState> = null;

        specialinvoke r0.<com.android.server.vr.VrManagerService: boolean updateCurrentVrServiceLocked(boolean,boolean,android.content.ComponentName,int,int,android.content.ComponentName)>(z7, z8, r9, i0, i1, r1);

     label19:
        exitmonitor r2;

     label20:
        return;

     label21:
        exitmonitor r2;

     label22:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label07 to label08 with label04;
        catch java.lang.Throwable from label10 to label11 with label04;
        catch java.lang.Throwable from label12 to label13 with label04;
        catch java.lang.Throwable from label15 to label16 with label04;
        catch java.lang.Throwable from label16 to label17 with label04;
        catch java.lang.Throwable from label18 to label19 with label04;
        catch java.lang.Throwable from label19 to label20 with label04;
        catch java.lang.Throwable from label21 to label22 with label04;
    }

    private static native void setVrModeNative(boolean);

    private void updateCompositorServiceLocked(int, android.content.ComponentName)
    {
        com.android.server.vr.VrManagerService r0;
        int i0;
        com.android.server.utils.ManagedApplicationService $r1, $r8, r13, r16;
        java.lang.StringBuilder $r2, $r6;
        java.lang.String $r5, $r11;
        boolean $z0;
        android.content.ComponentName $r9, r12;

        r0 := @this: com.android.server.vr.VrManagerService;

        i0 := @parameter0: int;

        r12 := @parameter1: android.content.ComponentName;

        r13 = r0.<com.android.server.vr.VrManagerService: com.android.server.utils.ManagedApplicationService mCurrentVrCompositorService>;

        if r13 == null goto label1;

        $z0 = virtualinvoke r13.<com.android.server.utils.ManagedApplicationService: boolean disconnectIfNotMatching(android.content.ComponentName,int)>(r12, i0);

        if $z0 == 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Disconnecting compositor service: ");

        $r8 = r0.<com.android.server.vr.VrManagerService: com.android.server.utils.ManagedApplicationService mCurrentVrCompositorService>;

        $r9 = virtualinvoke $r8.<com.android.server.utils.ManagedApplicationService: android.content.ComponentName getComponent()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("VrManagerService", $r11);

        r0.<com.android.server.vr.VrManagerService: com.android.server.utils.ManagedApplicationService mCurrentVrCompositorService> = null;

     label1:
        if r12 == null goto label2;

        $r1 = r0.<com.android.server.vr.VrManagerService: com.android.server.utils.ManagedApplicationService mCurrentVrCompositorService>;

        if $r1 != null goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connecting compositor service: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("VrManagerService", $r5);

        r16 = specialinvoke r0.<com.android.server.vr.VrManagerService: com.android.server.utils.ManagedApplicationService createVrCompositorService(android.content.ComponentName,int)>(r12, i0);

        r0.<com.android.server.vr.VrManagerService: com.android.server.utils.ManagedApplicationService mCurrentVrCompositorService> = r16;

        virtualinvoke r16.<com.android.server.utils.ManagedApplicationService: void connect()>();

     label2:
        return;
    }

    private boolean updateCurrentVrServiceLocked(boolean, boolean, android.content.ComponentName, int, int, android.content.ComponentName)
    {
        com.android.server.vr.VrManagerService r0;
        boolean z0, $z1, $z2, $z3, $z4, z5, z6, z8, z9, z10, z11;
        int i0, i1, i3, $i4, $i5, $i7, i9, $i10;
        android.content.ComponentName r1, $r5, $r9, $r15, $r24, $r32, r38;
        long l2;
        java.lang.StringBuilder r2, r42;
        com.android.server.vr.EnabledComponentsObserver $r3;
        com.android.server.utils.ManagedApplicationService $r4, $r6, $r7, $r8, $r10, $r14, $r18, $r21, $r23, $r27, $r30, $r31, r39;
        java.lang.String $r20, $r29, r40, r43;
        java.lang.Throwable $r33, $r34, $r35, $r36, $r37, r41;

        r0 := @this: com.android.server.vr.VrManagerService;

        z5 := @parameter0: boolean;

        z0 := @parameter1: boolean;

        r38 := @parameter2: android.content.ComponentName;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r1 := @parameter5: android.content.ComponentName;

        z6 = 0;

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        $r3 = r0.<com.android.server.vr.VrManagerService: com.android.server.vr.EnabledComponentsObserver mComponentObserver>;

        i9 = virtualinvoke $r3.<com.android.server.vr.EnabledComponentsObserver: int isValid(android.content.ComponentName,int)>(r38, i0);

     label02:
        if i9 != 0 goto label03;

        z8 = 1;

        goto label04;

     label03:
        z8 = 0;

     label04:
        if z8 == 0 goto label05;

        if z5 == 0 goto label05;

        z9 = 1;

        goto label06;

     label05:
        z9 = 0;

     label06:
        z10 = r0.<com.android.server.vr.VrManagerService: boolean mVrModeEnabled>;

     label07:
        if z10 != 0 goto label08;

        if z9 != 0 goto label08;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return z8;

     label08:
        r39 = r0.<com.android.server.vr.VrManagerService: com.android.server.utils.ManagedApplicationService mCurrentVrService>;

     label09:
        if r39 == null goto label13;

     label10:
        $r31 = r0.<com.android.server.vr.VrManagerService: com.android.server.utils.ManagedApplicationService mCurrentVrService>;

        $r32 = virtualinvoke $r31.<com.android.server.utils.ManagedApplicationService: android.content.ComponentName getComponent()>();

        r40 = virtualinvoke $r32.<android.content.ComponentName: java.lang.String getPackageName()>();

     label11:
        goto label14;

     label12:
        $r37 := @caughtexception;

        r41 = $r37;

        goto label46;

     label13:
        r40 = null;

     label14:
        i3 = r0.<com.android.server.vr.VrManagerService: int mCurrentVrModeUser>;

        specialinvoke r0.<com.android.server.vr.VrManagerService: void changeVrModeLocked(boolean)>(z9);

     label15:
        z11 = 0;

        if z9 != 0 goto label21;

     label16:
        $r21 = r0.<com.android.server.vr.VrManagerService: com.android.server.utils.ManagedApplicationService mCurrentVrService>;

        if $r21 == null goto label19;

        r42 = new java.lang.StringBuilder;

        specialinvoke r42.<java.lang.StringBuilder: void <init>()>();

     label17:
        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Leaving VR mode, disconnecting ");

        $r23 = r0.<com.android.server.vr.VrManagerService: com.android.server.utils.ManagedApplicationService mCurrentVrService>;

        $r24 = virtualinvoke $r23.<com.android.server.utils.ManagedApplicationService: android.content.ComponentName getComponent()>();

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for user ");

        $r27 = r0.<com.android.server.vr.VrManagerService: com.android.server.utils.ManagedApplicationService mCurrentVrService>;

        $i7 = virtualinvoke $r27.<com.android.server.utils.ManagedApplicationService: int getUserId()>();

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r29 = virtualinvoke r42.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("VrManagerService", $r29);

        $r30 = r0.<com.android.server.vr.VrManagerService: com.android.server.utils.ManagedApplicationService mCurrentVrService>;

        virtualinvoke $r30.<com.android.server.utils.ManagedApplicationService: void disconnect()>();

        specialinvoke r0.<com.android.server.vr.VrManagerService: void updateCompositorServiceLocked(int,android.content.ComponentName)>(-10000, null);

        r0.<com.android.server.vr.VrManagerService: com.android.server.utils.ManagedApplicationService mCurrentVrService> = null;

     label18:
        z6 = 0;

        goto label26;

     label19:
        z11 = 1;

        goto label26;

     label20:
        $r36 := @caughtexception;

        r41 = $r36;

        goto label46;

     label21:
        $r4 = r0.<com.android.server.vr.VrManagerService: com.android.server.utils.ManagedApplicationService mCurrentVrService>;

        if $r4 == null goto label24;

        $r10 = r0.<com.android.server.vr.VrManagerService: com.android.server.utils.ManagedApplicationService mCurrentVrService>;

        $z4 = virtualinvoke $r10.<com.android.server.utils.ManagedApplicationService: boolean disconnectIfNotMatching(android.content.ComponentName,int)>(r38, i0);

        if $z4 == 0 goto label23;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("VR mode component changed to ");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r38);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", disconnecting ");

        $r14 = r0.<com.android.server.vr.VrManagerService: com.android.server.utils.ManagedApplicationService mCurrentVrService>;

        $r15 = virtualinvoke $r14.<com.android.server.utils.ManagedApplicationService: android.content.ComponentName getComponent()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for user ");

        $r18 = r0.<com.android.server.vr.VrManagerService: com.android.server.utils.ManagedApplicationService mCurrentVrService>;

        $i5 = virtualinvoke $r18.<com.android.server.utils.ManagedApplicationService: int getUserId()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r20 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("VrManagerService", $r20);

        specialinvoke r0.<com.android.server.vr.VrManagerService: void updateCompositorServiceLocked(int,android.content.ComponentName)>(-10000, null);

        specialinvoke r0.<com.android.server.vr.VrManagerService: void createAndConnectService(android.content.ComponentName,int)>(r38, i0);

     label22:
        z6 = 1;

        goto label26;

     label23:
        z11 = 1;

        z6 = 0;

        goto label26;

     label24:
        specialinvoke r0.<com.android.server.vr.VrManagerService: void createAndConnectService(android.content.ComponentName,int)>(r38, i0);

     label25:
        z6 = 1;

     label26:
        r43 = null;

        if r1 != null goto label28;

     label27:
        $z3 = r0.<com.android.server.vr.VrManagerService: boolean mPersistentVrModeEnabled>;

        if $z3 == 0 goto label29;

     label28:
        $r5 = r0.<com.android.server.vr.VrManagerService: android.content.ComponentName mCurrentVrModeComponent>;

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r1, $r5);

        if $z1 == 0 goto label30;

     label29:
        $z2 = r0.<com.android.server.vr.VrManagerService: boolean mRunning2dInVr>;

        if $z2 == z0 goto label31;

     label30:
        z6 = 1;

     label31:
        r0.<com.android.server.vr.VrManagerService: android.content.ComponentName mCurrentVrModeComponent> = r1;

        r0.<com.android.server.vr.VrManagerService: boolean mRunning2dInVr> = z0;

     label32:
        r0.<com.android.server.vr.VrManagerService: int mVrAppProcessId> = i1;

     label33:
        $i10 = r0.<com.android.server.vr.VrManagerService: int mCurrentVrModeUser>;

        if $i10 == i0 goto label35;

        r0.<com.android.server.vr.VrManagerService: int mCurrentVrModeUser> = i0;

     label34:
        z6 = 1;

     label35:
        $r6 = r0.<com.android.server.vr.VrManagerService: com.android.server.utils.ManagedApplicationService mCurrentVrService>;

        if $r6 == null goto label37;

        $r8 = r0.<com.android.server.vr.VrManagerService: com.android.server.utils.ManagedApplicationService mCurrentVrService>;

        $r9 = virtualinvoke $r8.<com.android.server.utils.ManagedApplicationService: android.content.ComponentName getComponent()>();

        r43 = virtualinvoke $r9.<android.content.ComponentName: java.lang.String getPackageName()>();

     label36:
        goto label37;

     label37:
        $i4 = r0.<com.android.server.vr.VrManagerService: int mCurrentVrModeUser>;

        specialinvoke r0.<com.android.server.vr.VrManagerService: void updateDependentAppOpsLocked(java.lang.String,int,java.lang.String,int)>(r43, $i4, r40, i3);

        $r7 = r0.<com.android.server.vr.VrManagerService: com.android.server.utils.ManagedApplicationService mCurrentVrService>;

        if $r7 == null goto label40;

     label38:
        if z6 == 0 goto label40;

     label39:
        specialinvoke r0.<com.android.server.vr.VrManagerService: void callFocusedActivityChangedLocked()>();

     label40:
        if z11 != 0 goto label42;

     label41:
        specialinvoke r0.<com.android.server.vr.VrManagerService: void logStateLocked()>();

     label42:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return z8;

     label43:
        $r34 := @caughtexception;

        r41 = $r34;

        goto label46;

     label44:
        $r35 := @caughtexception;

        r41 = $r35;

        goto label46;

     label45:
        $r33 := @caughtexception;

        r41 = $r33;

     label46:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r41;

        catch java.lang.Throwable from label01 to label02 with label45;
        catch java.lang.Throwable from label06 to label07 with label45;
        catch java.lang.Throwable from label08 to label09 with label45;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label14 to label15 with label45;
        catch java.lang.Throwable from label16 to label17 with label20;
        catch java.lang.Throwable from label17 to label18 with label44;
        catch java.lang.Throwable from label21 to label22 with label44;
        catch java.lang.Throwable from label24 to label25 with label44;
        catch java.lang.Throwable from label27 to label28 with label12;
        catch java.lang.Throwable from label28 to label29 with label12;
        catch java.lang.Throwable from label29 to label30 with label12;
        catch java.lang.Throwable from label31 to label32 with label12;
        catch java.lang.Throwable from label32 to label33 with label43;
        catch java.lang.Throwable from label33 to label34 with label43;
        catch java.lang.Throwable from label35 to label36 with label43;
        catch java.lang.Throwable from label37 to label38 with label43;
        catch java.lang.Throwable from label39 to label40 with label43;
        catch java.lang.Throwable from label41 to label42 with label43;
    }

    private void updateDependentAppOpsLocked(java.lang.String, int, java.lang.String, int)
    {
        com.android.server.vr.VrManagerService r0;
        int i0, i1;
        java.lang.String r1, r3;
        long l2;
        boolean $z0;
        java.lang.Throwable $r2;

        r0 := @this: com.android.server.vr.VrManagerService;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r3, r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        specialinvoke r0.<com.android.server.vr.VrManagerService: void updateOverlayStateLocked(java.lang.String,int,int)>(r3, i0, i1);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label4:
        $r2 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r2;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private void updateOverlayStateLocked(java.lang.String, int, int)
    {
        com.android.server.vr.VrManagerService r0;
        int i0, i1;
        android.app.AppOpsManager r1;
        android.content.Context $r2;
        java.lang.Object $r3;
        java.lang.String[] $r4, r8;
        android.os.IBinder $r5, $r6;
        boolean $z0;
        java.lang.String r7;

        r0 := @this: com.android.server.vr.VrManagerService;

        r7 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = virtualinvoke r0.<com.android.server.vr.VrManagerService: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/AppOpsManager;");

        r1 = (android.app.AppOpsManager) $r3;

        if i1 == i0 goto label1;

        $r6 = r0.<com.android.server.vr.VrManagerService: android.os.IBinder mOverlayToken>;

        virtualinvoke r1.<android.app.AppOpsManager: void setUserRestrictionForUser(int,boolean,android.os.IBinder,java.lang.String[],int)>(24, 0, $r6, null, i1);

     label1:
        if r7 != null goto label2;

        r8 = newarray (java.lang.String)[0];

        goto label3;

     label2:
        $r4 = newarray (java.lang.String)[1];

        $r4[0] = r7;

        r8 = $r4;

     label3:
        $z0 = r0.<com.android.server.vr.VrManagerService: boolean mVrModeEnabled>;

        $r5 = r0.<com.android.server.vr.VrManagerService: android.os.IBinder mOverlayToken>;

        virtualinvoke r1.<android.app.AppOpsManager: void setUserRestrictionForUser(int,boolean,android.os.IBinder,java.lang.String[],int)>(24, $z0, $r5, r8, i0);

        return;
    }

    private void updateVrModeAllowedLocked()
    {
        com.android.server.vr.VrManagerService r0;
        boolean $z0, $z1, $z3, $z4, $z5, $z6, $z7, $z8, z9, $z10, z11, z12, $z13, z14;
        com.android.server.vr.VrManagerService$VrState $r1, r7;
        android.content.ComponentName $r2, $r4, $r5;
        com.android.server.utils.ManagedApplicationService $r3, r6;
        int $i0, $i1, $i2;

        r0 := @this: com.android.server.vr.VrManagerService;

        $z0 = r0.<com.android.server.vr.VrManagerService: boolean mBootsToVr>;

        if $z0 == 0 goto label01;

        $z8 = r0.<com.android.server.vr.VrManagerService: boolean mUseStandbyToExitVrMode>;

        if $z8 == 0 goto label01;

        z9 = 1;

        goto label02;

     label01:
        z9 = 0;

     label02:
        $z10 = r0.<com.android.server.vr.VrManagerService: boolean mStandby>;

        if $z10 == 0 goto label03;

        $z7 = r0.<com.android.server.vr.VrManagerService: boolean mUseStandbyToExitVrMode>;

        if $z7 == 0 goto label03;

        z11 = 1;

        goto label04;

     label03:
        z11 = 0;

     label04:
        $i2 = r0.<com.android.server.vr.VrManagerService: int mSystemSleepFlags>;

        if $i2 == 7 goto label05;

        if z9 == 0 goto label06;

     label05:
        $z1 = r0.<com.android.server.vr.VrManagerService: boolean mUserUnlocked>;

        if $z1 == 0 goto label06;

        if z11 != 0 goto label06;

        z12 = 1;

        goto label07;

     label06:
        z12 = 0;

     label07:
        $z13 = r0.<com.android.server.vr.VrManagerService: boolean mVrModeAllowed>;

        if $z13 == z12 goto label12;

        r0.<com.android.server.vr.VrManagerService: boolean mVrModeAllowed> = z12;

        if z12 == 0 goto label09;

        $z4 = r0.<com.android.server.vr.VrManagerService: boolean mBootsToVr>;

        if $z4 == 0 goto label08;

        specialinvoke r0.<com.android.server.vr.VrManagerService: void setPersistentVrModeEnabled(boolean)>(1);

     label08:
        $z5 = r0.<com.android.server.vr.VrManagerService: boolean mBootsToVr>;

        if $z5 == 0 goto label12;

        $z6 = r0.<com.android.server.vr.VrManagerService: boolean mVrModeEnabled>;

        if $z6 != 0 goto label12;

        $r5 = r0.<com.android.server.vr.VrManagerService: android.content.ComponentName mDefaultVrService>;

        specialinvoke r0.<com.android.server.vr.VrManagerService: void setVrMode(boolean,android.content.ComponentName,int,int,android.content.ComponentName)>(1, $r5, 0, -1, null);

        goto label12;

     label09:
        specialinvoke r0.<com.android.server.vr.VrManagerService: void setPersistentModeAndNotifyListenersLocked(boolean)>(0);

        z14 = r0.<com.android.server.vr.VrManagerService: boolean mVrModeEnabled>;

        if z14 == 0 goto label10;

        r6 = r0.<com.android.server.vr.VrManagerService: com.android.server.utils.ManagedApplicationService mCurrentVrService>;

        if r6 == null goto label10;

        $r1 = new com.android.server.vr.VrManagerService$VrState;

        $z3 = r0.<com.android.server.vr.VrManagerService: boolean mRunning2dInVr>;

        $r2 = virtualinvoke r6.<com.android.server.utils.ManagedApplicationService: android.content.ComponentName getComponent()>();

        $r3 = r0.<com.android.server.vr.VrManagerService: com.android.server.utils.ManagedApplicationService mCurrentVrService>;

        $i0 = virtualinvoke $r3.<com.android.server.utils.ManagedApplicationService: int getUserId()>();

        $i1 = r0.<com.android.server.vr.VrManagerService: int mVrAppProcessId>;

        $r4 = r0.<com.android.server.vr.VrManagerService: android.content.ComponentName mCurrentVrModeComponent>;

        specialinvoke $r1.<com.android.server.vr.VrManagerService$VrState: void <init>(boolean,boolean,android.content.ComponentName,int,int,android.content.ComponentName)>(z14, $z3, $r2, $i0, $i1, $r4);

        r7 = $r1;

        goto label11;

     label10:
        r7 = null;

     label11:
        r0.<com.android.server.vr.VrManagerService: com.android.server.vr.VrManagerService$VrState mPendingState> = r7;

        specialinvoke r0.<com.android.server.vr.VrManagerService: boolean updateCurrentVrServiceLocked(boolean,boolean,android.content.ComponentName,int,int,android.content.ComponentName)>(0, 0, null, 0, -1, null);

     label12:
        return;
    }

    public void lambda$onSwitchUser$0$VrManagerService()
    {
        com.android.server.vr.VrManagerService r0;
        java.lang.Object r1;
        com.android.server.vr.EnabledComponentsObserver $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.vr.VrManagerService;

        r1 = r0.<com.android.server.vr.VrManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.vr.VrManagerService: com.android.server.vr.EnabledComponentsObserver mComponentObserver>;

        virtualinvoke $r3.<com.android.server.vr.EnabledComponentsObserver: void onUsersChanged()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onAwakeStateChanged(boolean)
    {
        com.android.server.vr.VrManagerService r0;
        boolean z0;

        r0 := @this: com.android.server.vr.VrManagerService;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.android.server.vr.VrManagerService: void setSystemState(int,boolean)>(1, z0);

        return;
    }

    public void onBootPhase(int)
    {
        com.android.server.vr.VrManagerService r0;
        int i0, $i1;
        android.os.Looper r1;
        android.os.Handler r2;
        java.lang.Object $r3, $r7, $r12, $r14, $r16, $r24, r27;
        com.android.server.wm.ActivityTaskManagerInternal $r4;
        android.os.IBinder $r5;
        android.app.INotificationManager $r6;
        android.content.Context $r8, $r11, $r19, $r21;
        com.android.server.SystemConfig $r9;
        com.android.server.vr.Vr2dDisplay $r10;
        android.hardware.display.DisplayManager $r13;
        android.app.ActivityManagerInternal $r15;
        android.service.vr.IVrManager $r17;
        com.android.server.wm.WindowManagerInternal $r18;
        boolean $z1;
        android.content.IntentFilter $r20;
        com.android.server.vr.VrManagerService$5 $r22;
        android.content.ComponentName $r25;
        java.lang.Throwable $r26;
        java.util.ArrayList r28;
        com.android.server.vr.EnabledComponentsObserver r29;
        android.util.ArraySet r30;

        r0 := @this: com.android.server.vr.VrManagerService;

        i0 := @parameter0: int;

        if i0 != 500 goto label8;

        $r3 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/wm/ActivityTaskManagerInternal;");

        $r4 = (com.android.server.wm.ActivityTaskManagerInternal) $r3;

        virtualinvoke $r4.<com.android.server.wm.ActivityTaskManagerInternal: void registerScreenObserver(com.android.server.wm.ActivityTaskManagerInternal$ScreenObserver)>(r0);

        $r5 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("notification");

        $r6 = staticinvoke <android.app.INotificationManager$Stub: android.app.INotificationManager asInterface(android.os.IBinder)>($r5);

        r0.<com.android.server.vr.VrManagerService: android.app.INotificationManager mNotificationManager> = $r6;

        r27 = r0.<com.android.server.vr.VrManagerService: java.lang.Object mLock>;

        entermonitor r27;

     label1:
        r1 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        r2 = new android.os.Handler;

        specialinvoke r2.<android.os.Handler: void <init>(android.os.Looper)>(r1);

        r28 = new java.util.ArrayList;

        specialinvoke r28.<java.util.ArrayList: void <init>()>();

        virtualinvoke r28.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

        $r8 = r0.<com.android.server.vr.VrManagerService: android.content.Context mContext>;

        $r7 = r0.<com.android.server.vr.VrManagerService: java.lang.Object mLock>;

        r29 = staticinvoke <com.android.server.vr.EnabledComponentsObserver: com.android.server.vr.EnabledComponentsObserver build(android.content.Context,android.os.Handler,java.lang.String,android.os.Looper,java.lang.String,java.lang.String,java.lang.Object,java.util.Collection)>($r8, r2, "enabled_vr_listeners", r1, "android.permission.BIND_VR_LISTENER_SERVICE", "android.service.vr.VrListenerService", $r7, r28);

        r0.<com.android.server.vr.VrManagerService: com.android.server.vr.EnabledComponentsObserver mComponentObserver> = r29;

        virtualinvoke r29.<com.android.server.vr.EnabledComponentsObserver: void rebuildAll()>();

        exitmonitor r27;

     label2:
        $r9 = staticinvoke <com.android.server.SystemConfig: com.android.server.SystemConfig getInstance()>();

        r30 = virtualinvoke $r9.<com.android.server.SystemConfig: android.util.ArraySet getDefaultVrComponents()>();

        $i1 = virtualinvoke r30.<android.util.ArraySet: int size()>();

        if $i1 <= 0 goto label3;

        $r24 = virtualinvoke r30.<android.util.ArraySet: java.lang.Object valueAt(int)>(0);

        $r25 = (android.content.ComponentName) $r24;

        r0.<com.android.server.vr.VrManagerService: android.content.ComponentName mDefaultVrService> = $r25;

        goto label4;

     label3:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("VrManagerService", "No default vr listener service found.");

     label4:
        $r10 = new com.android.server.vr.Vr2dDisplay;

        $r11 = virtualinvoke r0.<com.android.server.vr.VrManagerService: android.content.Context getContext()>();

        $r12 = virtualinvoke $r11.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("display");

        $r13 = (android.hardware.display.DisplayManager) $r12;

        $r14 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/app/ActivityManagerInternal;");

        $r15 = (android.app.ActivityManagerInternal) $r14;

        $r16 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/wm/WindowManagerInternal;");

        $r18 = (com.android.server.wm.WindowManagerInternal) $r16;

        $r17 = r0.<com.android.server.vr.VrManagerService: android.service.vr.IVrManager mVrManager>;

        specialinvoke $r10.<com.android.server.vr.Vr2dDisplay: void <init>(android.hardware.display.DisplayManager,android.app.ActivityManagerInternal,com.android.server.wm.WindowManagerInternal,android.service.vr.IVrManager)>($r13, $r15, $r18, $r17);

        r0.<com.android.server.vr.VrManagerService: com.android.server.vr.Vr2dDisplay mVr2dDisplay> = $r10;

        $r19 = virtualinvoke r0.<com.android.server.vr.VrManagerService: android.content.Context getContext()>();

        $z1 = r0.<com.android.server.vr.VrManagerService: boolean mBootsToVr>;

        virtualinvoke $r10.<com.android.server.vr.Vr2dDisplay: void init(android.content.Context,boolean)>($r19, $z1);

        $r20 = new android.content.IntentFilter;

        specialinvoke $r20.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r20.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_UNLOCKED");

        $r21 = virtualinvoke r0.<com.android.server.vr.VrManagerService: android.content.Context getContext()>();

        $r22 = new com.android.server.vr.VrManagerService$5;

        specialinvoke $r22.<com.android.server.vr.VrManagerService$5: void <init>(com.android.server.vr.VrManagerService)>(r0);

        virtualinvoke $r21.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r22, $r20);

        goto label8;

     label5:
        $r26 := @caughtexception;

     label6:
        exitmonitor r27;

     label7:
        throw $r26;

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void onCleanupUser(int)
    {
        com.android.server.vr.VrManagerService r0;
        int i0;
        java.lang.Object r1;
        com.android.server.vr.EnabledComponentsObserver $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.vr.VrManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.vr.VrManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.vr.VrManagerService: com.android.server.vr.EnabledComponentsObserver mComponentObserver>;

        virtualinvoke $r3.<com.android.server.vr.EnabledComponentsObserver: void onUsersChanged()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onEnabledComponentChanged()
    {
        com.android.server.vr.VrManagerService r0;
        java.lang.Object r1, $r10;
        int i0, $i1, $i2;
        android.content.ComponentName r2, $r7, $r9;
        com.android.server.vr.EnabledComponentsObserver $r3;
        boolean $z0, $z1, $z2, $z3, $z5;
        com.android.server.vr.VrManagerService$NotificationAccessManager $r4;
        com.android.server.utils.ManagedApplicationService $r5, $r6, $r8;
        java.lang.String $r11, $r12;
        java.lang.Throwable $r13;
        android.util.ArraySet r14, r15;
        java.util.Iterator r16;

        r0 := @this: com.android.server.vr.VrManagerService;

        r1 = r0.<com.android.server.vr.VrManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        i0 = staticinvoke <android.app.ActivityManager: int getCurrentUser()>();

        $r3 = r0.<com.android.server.vr.VrManagerService: com.android.server.vr.EnabledComponentsObserver mComponentObserver>;

        r14 = virtualinvoke $r3.<com.android.server.vr.EnabledComponentsObserver: android.util.ArraySet getEnabled(int)>(i0);

        r15 = new android.util.ArraySet;

        specialinvoke r15.<android.util.ArraySet: void <init>()>();

        r16 = virtualinvoke r14.<android.util.ArraySet: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r10 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.content.ComponentName) $r10;

        $r11 = virtualinvoke r2.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z5 = specialinvoke r0.<com.android.server.vr.VrManagerService: boolean isDefaultAllowed(java.lang.String)>($r11);

        if $z5 == 0 goto label03;

        $r12 = virtualinvoke r2.<android.content.ComponentName: java.lang.String getPackageName()>();

        virtualinvoke r15.<android.util.ArraySet: boolean add(java.lang.Object)>($r12);

     label03:
        goto label02;

     label04:
        $r4 = r0.<com.android.server.vr.VrManagerService: com.android.server.vr.VrManagerService$NotificationAccessManager mNotifAccessManager>;

        virtualinvoke $r4.<com.android.server.vr.VrManagerService$NotificationAccessManager: void update(java.util.Collection)>(r15);

        $z1 = r0.<com.android.server.vr.VrManagerService: boolean mVrModeAllowed>;

        if $z1 != 0 goto label06;

        exitmonitor r1;

     label05:
        return;

     label06:
        specialinvoke r0.<com.android.server.vr.VrManagerService: void consumeAndApplyPendingStateLocked(boolean)>(0);

        $r5 = r0.<com.android.server.vr.VrManagerService: com.android.server.utils.ManagedApplicationService mCurrentVrService>;

        if $r5 != null goto label08;

        exitmonitor r1;

     label07:
        return;

     label08:
        $z2 = r0.<com.android.server.vr.VrManagerService: boolean mVrModeEnabled>;

        $z3 = r0.<com.android.server.vr.VrManagerService: boolean mRunning2dInVr>;

        $r6 = r0.<com.android.server.vr.VrManagerService: com.android.server.utils.ManagedApplicationService mCurrentVrService>;

        $r7 = virtualinvoke $r6.<com.android.server.utils.ManagedApplicationService: android.content.ComponentName getComponent()>();

        $r8 = r0.<com.android.server.vr.VrManagerService: com.android.server.utils.ManagedApplicationService mCurrentVrService>;

        $i1 = virtualinvoke $r8.<com.android.server.utils.ManagedApplicationService: int getUserId()>();

        $i2 = r0.<com.android.server.vr.VrManagerService: int mVrAppProcessId>;

        $r9 = r0.<com.android.server.vr.VrManagerService: android.content.ComponentName mCurrentVrModeComponent>;

        specialinvoke r0.<com.android.server.vr.VrManagerService: boolean updateCurrentVrServiceLocked(boolean,boolean,android.content.ComponentName,int,int,android.content.ComponentName)>($z2, $z3, $r7, $i1, $i2, $r9);

     label09:
        exitmonitor r1;

     label10:
        return;

     label11:
        $r13 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public void onKeyguardStateChanged(boolean)
    {
        com.android.server.vr.VrManagerService r0;
        boolean z0, $z1;

        r0 := @this: com.android.server.vr.VrManagerService;

        z0 := @parameter0: boolean;

        $z1 = z0 ^ 1;

        specialinvoke r0.<com.android.server.vr.VrManagerService: void setSystemState(int,boolean)>(4, $z1);

        return;
    }

    public void onStart()
    {
        com.android.server.vr.VrManagerService r0;
        java.lang.Object r1;
        boolean z0, $z1, z2;
        android.content.Context $r3;
        java.lang.Throwable $r4;
        com.android.server.vr.VrManagerService$LocalService $r5;
        android.service.vr.IVrManager $r6;
        android.os.IBinder $r7;

        r0 := @this: com.android.server.vr.VrManagerService;

        r1 = r0.<com.android.server.vr.VrManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.vr.VrManagerService: void initializeNative()>();

        $r3 = virtualinvoke r0.<com.android.server.vr.VrManagerService: android.content.Context getContext()>();

        r0.<com.android.server.vr.VrManagerService: android.content.Context mContext> = $r3;

        exitmonitor r1;

     label2:
        z2 = 0;

        z0 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("ro.boot.vr", 0);

        r0.<com.android.server.vr.VrManagerService: boolean mBootsToVr> = z0;

        if z0 == 0 goto label3;

        $z1 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("persist.vr.use_standby_to_exit_vr_mode", 1);

        if $z1 == 0 goto label3;

        z2 = 1;

        goto label3;

     label3:
        r0.<com.android.server.vr.VrManagerService: boolean mUseStandbyToExitVrMode> = z2;

        $r5 = new com.android.server.vr.VrManagerService$LocalService;

        specialinvoke $r5.<com.android.server.vr.VrManagerService$LocalService: void <init>(com.android.server.vr.VrManagerService,com.android.server.vr.VrManagerService$1)>(r0, null);

        virtualinvoke r0.<com.android.server.vr.VrManagerService: void publishLocalService(java.lang.Class,java.lang.Object)>(class "Lcom/android/server/vr/VrManagerInternal;", $r5);

        $r6 = r0.<com.android.server.vr.VrManagerService: android.service.vr.IVrManager mVrManager>;

        $r7 = interfaceinvoke $r6.<android.service.vr.IVrManager: android.os.IBinder asBinder()>();

        virtualinvoke r0.<com.android.server.vr.VrManagerService: void publishBinderService(java.lang.String,android.os.IBinder)>("vrmanager", $r7);

        return;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void onStartUser(int)
    {
        com.android.server.vr.VrManagerService r0;
        int i0;
        java.lang.Object r1;
        com.android.server.vr.EnabledComponentsObserver $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.vr.VrManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.vr.VrManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.vr.VrManagerService: com.android.server.vr.EnabledComponentsObserver mComponentObserver>;

        virtualinvoke $r3.<com.android.server.vr.EnabledComponentsObserver: void onUsersChanged()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onStopUser(int)
    {
        com.android.server.vr.VrManagerService r0;
        int i0;
        java.lang.Object r1;
        com.android.server.vr.EnabledComponentsObserver $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.vr.VrManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.vr.VrManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.vr.VrManagerService: com.android.server.vr.EnabledComponentsObserver mComponentObserver>;

        virtualinvoke $r3.<com.android.server.vr.EnabledComponentsObserver: void onUsersChanged()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onSwitchUser(int)
    {
        com.android.server.vr.VrManagerService r0;
        int i0;
        android.os.Handler $r1;
        com.android.server.vr._$$Lambda$VrManagerService$hhbi29QXTMTcQg_S7n5SpAawSZs $r2;

        r0 := @this: com.android.server.vr.VrManagerService;

        i0 := @parameter0: int;

        $r1 = staticinvoke <com.android.server.FgThread: android.os.Handler getHandler()>();

        $r2 = new com.android.server.vr._$$Lambda$VrManagerService$hhbi29QXTMTcQg_S7n5SpAawSZs;

        specialinvoke $r2.<com.android.server.vr._$$Lambda$VrManagerService$hhbi29QXTMTcQg_S7n5SpAawSZs: void <init>(com.android.server.vr.VrManagerService)>(r0);

        virtualinvoke $r1.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    public void setVr2dDisplayProperties(android.app.Vr2dDisplayProperties)
    {
        com.android.server.vr.VrManagerService r0;
        long l0;
        com.android.server.vr.Vr2dDisplay $r1, $r2;
        java.lang.Throwable $r3;
        android.app.Vr2dDisplayProperties r4;

        r0 := @this: com.android.server.vr.VrManagerService;

        r4 := @parameter0: android.app.Vr2dDisplayProperties;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = r0.<com.android.server.vr.VrManagerService: com.android.server.vr.Vr2dDisplay mVr2dDisplay>;

        if $r1 == null goto label3;

        $r2 = r0.<com.android.server.vr.VrManagerService: com.android.server.vr.Vr2dDisplay mVr2dDisplay>;

        virtualinvoke $r2.<com.android.server.vr.Vr2dDisplay: void setVirtualDisplayProperties(android.app.Vr2dDisplayProperties)>(r4);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("VrManagerService", "Vr2dDisplay is null!");

        return;

     label4:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
    }
}
