class com.android.server.wallpaper.WallpaperManagerService$1 extends java.lang.Object implements android.hardware.display.DisplayManager$DisplayListener
{
    final com.android.server.wallpaper.WallpaperManagerService this$0;

    void <init>(com.android.server.wallpaper.WallpaperManagerService)
    {
        com.android.server.wallpaper.WallpaperManagerService$1 r0;
        com.android.server.wallpaper.WallpaperManagerService r1;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$1;

        r1 := @parameter0: com.android.server.wallpaper.WallpaperManagerService;

        r0.<com.android.server.wallpaper.WallpaperManagerService$1: com.android.server.wallpaper.WallpaperManagerService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onDisplayAdded(int)
    {
        com.android.server.wallpaper.WallpaperManagerService$1 r0;
        int i0;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$1;

        i0 := @parameter0: int;

        return;
    }

    public void onDisplayChanged(int)
    {
        com.android.server.wallpaper.WallpaperManagerService$1 r0;
        int i0;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$1;

        i0 := @parameter0: int;

        return;
    }

    public void onDisplayRemoved(int)
    {
        com.android.server.wallpaper.WallpaperManagerService$1 r0;
        int i0, $i1, i2;
        java.lang.Object r1, $r10;
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector r2;
        com.android.server.wallpaper.WallpaperManagerService $r3, $r4, $r6, $r8, $r12, $r15, $r20, $r21, $r22;
        com.android.server.wallpaper.WallpaperManagerService$WallpaperData $r5, $r13, $r16, r24;
        android.util.SparseArray $r7, $r9, $r11;
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection $r14, $r17, $r18, $r19;
        boolean $z0, $z1;
        java.lang.Throwable $r23;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$1;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.wallpaper.WallpaperManagerService$1: com.android.server.wallpaper.WallpaperManagerService this$0>;

        r1 = staticinvoke <com.android.server.wallpaper.WallpaperManagerService: java.lang.Object access$000(com.android.server.wallpaper.WallpaperManagerService)>($r3);

        entermonitor r1;

     label01:
        $r4 = r0.<com.android.server.wallpaper.WallpaperManagerService$1: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r5 = $r4.<com.android.server.wallpaper.WallpaperManagerService: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mLastWallpaper>;

        if $r5 == null goto label14;

     label02:
        r24 = null;

     label03:
        $r12 = r0.<com.android.server.wallpaper.WallpaperManagerService$1: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r13 = $r12.<com.android.server.wallpaper.WallpaperManagerService: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mLastWallpaper>;

        $r14 = $r13.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection connection>;

        $z0 = virtualinvoke $r14.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: boolean containsDisplay(int)>(i0);

        if $z0 == 0 goto label05;

        $r22 = r0.<com.android.server.wallpaper.WallpaperManagerService$1: com.android.server.wallpaper.WallpaperManagerService this$0>;

        r24 = $r22.<com.android.server.wallpaper.WallpaperManagerService: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mLastWallpaper>;

     label04:
        goto label06;

     label05:
        $r15 = r0.<com.android.server.wallpaper.WallpaperManagerService$1: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r16 = $r15.<com.android.server.wallpaper.WallpaperManagerService: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mFallbackWallpaper>;

        $r17 = $r16.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection connection>;

        $z1 = virtualinvoke $r17.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: boolean containsDisplay(int)>(i0);

        if $z1 == 0 goto label06;

        $r21 = r0.<com.android.server.wallpaper.WallpaperManagerService$1: com.android.server.wallpaper.WallpaperManagerService this$0>;

        r24 = $r21.<com.android.server.wallpaper.WallpaperManagerService: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mFallbackWallpaper>;

     label06:
        if r24 != null goto label09;

     label07:
        exitmonitor r1;

     label08:
        return;

     label09:
        $r18 = r24.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection connection>;

        r2 = virtualinvoke $r18.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector getDisplayConnectorOrCreate(int)>(i0);

     label10:
        if r2 != null goto label13;

     label11:
        exitmonitor r1;

     label12:
        return;

     label13:
        virtualinvoke r2.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector: void disconnectLocked()>();

        $r19 = r24.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection connection>;

        virtualinvoke $r19.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: void removeDisplayConnector(int)>(i0);

        $r20 = r0.<com.android.server.wallpaper.WallpaperManagerService$1: com.android.server.wallpaper.WallpaperManagerService this$0>;

        staticinvoke <com.android.server.wallpaper.WallpaperManagerService: void access$1100(com.android.server.wallpaper.WallpaperManagerService,int)>($r20, i0);

     label14:
        $r6 = r0.<com.android.server.wallpaper.WallpaperManagerService$1: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r7 = staticinvoke <com.android.server.wallpaper.WallpaperManagerService: android.util.SparseArray access$1200(com.android.server.wallpaper.WallpaperManagerService)>($r6);

        $i1 = virtualinvoke $r7.<android.util.SparseArray: int size()>();

        i2 = $i1 - 1;

     label15:
        if i2 < 0 goto label18;

     label16:
        $r8 = r0.<com.android.server.wallpaper.WallpaperManagerService$1: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r9 = staticinvoke <com.android.server.wallpaper.WallpaperManagerService: android.util.SparseArray access$1200(com.android.server.wallpaper.WallpaperManagerService)>($r8);

        $r10 = virtualinvoke $r9.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        $r11 = (android.util.SparseArray) $r10;

        virtualinvoke $r11.<android.util.SparseArray: void delete(int)>(i0);

     label17:
        i2 = i2 + -1;

        goto label15;

     label18:
        exitmonitor r1;

     label19:
        return;

     label20:
        $r23 := @caughtexception;

     label21:
        exitmonitor r1;

     label22:
        throw $r23;

        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Throwable from label03 to label04 with label20;
        catch java.lang.Throwable from label05 to label06 with label20;
        catch java.lang.Throwable from label07 to label08 with label20;
        catch java.lang.Throwable from label09 to label10 with label20;
        catch java.lang.Throwable from label11 to label12 with label20;
        catch java.lang.Throwable from label13 to label14 with label20;
        catch java.lang.Throwable from label14 to label15 with label20;
        catch java.lang.Throwable from label16 to label17 with label20;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label21 to label22 with label20;
    }
}
