public class com.android.server.wallpaper.WallpaperManagerService$Lifecycle extends com.android.server.SystemService
{
    private com.android.server.wallpaper.IWallpaperManagerService mService;

    public void <init>(android.content.Context)
    {
        com.android.server.wallpaper.WallpaperManagerService$Lifecycle r0;
        android.content.Context r1;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$Lifecycle;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.server.SystemService: void <init>(android.content.Context)>(r1);

        return;
    }

    public void onBootPhase(int)
    {
        com.android.server.wallpaper.WallpaperManagerService$Lifecycle r0;
        int i0;
        com.android.server.wallpaper.IWallpaperManagerService r1;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$Lifecycle;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.wallpaper.WallpaperManagerService$Lifecycle: com.android.server.wallpaper.IWallpaperManagerService mService>;

        if r1 == null goto label1;

        interfaceinvoke r1.<com.android.server.wallpaper.IWallpaperManagerService: void onBootPhase(int)>(i0);

     label1:
        return;
    }

    public void onStart()
    {
        com.android.server.wallpaper.WallpaperManagerService$Lifecycle r0;
        android.content.Context $r1, $r8;
        android.content.res.Resources $r2;
        java.lang.String $r3;
        java.lang.Class $r4;
        java.lang.Class[] $r5;
        java.lang.reflect.Constructor $r6;
        java.lang.Object[] $r7;
        java.lang.Object $r9;
        java.lang.Exception $r10;
        com.android.server.wallpaper.IWallpaperManagerService r11;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$Lifecycle;

     label1:
        $r1 = virtualinvoke r0.<com.android.server.wallpaper.WallpaperManagerService$Lifecycle: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String getString(int)>(17039961);

        $r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r3);

        $r5 = newarray (java.lang.Class)[1];

        $r5[0] = class "Landroid/content/Context;";

        $r6 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r5);

        $r7 = newarray (java.lang.Object)[1];

        $r8 = virtualinvoke r0.<com.android.server.wallpaper.WallpaperManagerService$Lifecycle: android.content.Context getContext()>();

        $r7[0] = $r8;

        $r9 = virtualinvoke $r6.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r7);

        r11 = (com.android.server.wallpaper.IWallpaperManagerService) $r9;

        r0.<com.android.server.wallpaper.WallpaperManagerService$Lifecycle: com.android.server.wallpaper.IWallpaperManagerService mService> = r11;

        virtualinvoke r0.<com.android.server.wallpaper.WallpaperManagerService$Lifecycle: void publishBinderService(java.lang.String,android.os.IBinder)>("wallpaper", r11);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("WallpaperManagerService", "Failed to instantiate WallpaperManagerService", $r10);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void onUnlockUser(int)
    {
        com.android.server.wallpaper.WallpaperManagerService$Lifecycle r0;
        int i0;
        com.android.server.wallpaper.IWallpaperManagerService r1;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$Lifecycle;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.wallpaper.WallpaperManagerService$Lifecycle: com.android.server.wallpaper.IWallpaperManagerService mService>;

        if r1 == null goto label1;

        interfaceinvoke r1.<com.android.server.wallpaper.IWallpaperManagerService: void onUnlockUser(int)>(i0);

     label1:
        return;
    }
}
