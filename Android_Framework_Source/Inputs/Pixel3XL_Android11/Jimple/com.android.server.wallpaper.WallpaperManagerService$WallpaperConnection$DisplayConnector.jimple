final class com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector extends java.lang.Object
{
    boolean mDimensionsChanged;
    final int mDisplayId;
    android.service.wallpaper.IWallpaperEngine mEngine;
    boolean mPaddingChanged;
    final android.os.Binder mToken;
    final com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection this$1;

    void <init>(com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection, int)
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector r0;
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection r1;
        int i0;
        android.os.Binder $r2;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector;

        r1 := @parameter0: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection;

        i0 := @parameter1: int;

        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.os.Binder;

        specialinvoke $r2.<android.os.Binder: void <init>()>();

        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector: android.os.Binder mToken> = $r2;

        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector: int mDisplayId> = i0;

        return;
    }

    void connectLocked(com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection, com.android.server.wallpaper.WallpaperManagerService$WallpaperData)
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector r0;
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection r1, $r4, $r8, $r14;
        com.android.server.wallpaper.WallpaperManagerService$WallpaperData r2;
        android.service.wallpaper.IWallpaperService $r3, $r12;
        com.android.server.wallpaper.WallpaperManagerService $r5, $r9, $r15;
        com.android.server.wm.WindowManagerInternal $r6;
        int $i0, $i1, $i2, $i3, $i4, $i7;
        android.os.Binder $r7, $r11;
        android.graphics.Rect $r10;
        android.os.RemoteException $r13;
        boolean $z0;
        com.android.server.wallpaper.WallpaperManagerService$DisplayData r16;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector;

        r1 := @parameter0: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection;

        r2 := @parameter1: com.android.server.wallpaper.WallpaperManagerService$WallpaperData;

        $r3 = r1.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: android.service.wallpaper.IWallpaperService mService>;

        if $r3 != null goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WallpaperManagerService", "WallpaperService is not connected yet");

        return;

     label1:
        $r4 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection this$1>;

        $r5 = $r4.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r6 = staticinvoke <com.android.server.wallpaper.WallpaperManagerService: com.android.server.wm.WindowManagerInternal access$1600(com.android.server.wallpaper.WallpaperManagerService)>($r5);

        $r7 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector: android.os.Binder mToken>;

        $i0 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector: int mDisplayId>;

        virtualinvoke $r6.<com.android.server.wm.WindowManagerInternal: void addWindowToken(android.os.IBinder,int,int)>($r7, 2013, $i0);

        $r8 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection this$1>;

        $r9 = $r8.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $i1 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector: int mDisplayId>;

        r16 = staticinvoke <com.android.server.wallpaper.WallpaperManagerService: com.android.server.wallpaper.WallpaperManagerService$DisplayData access$1500(com.android.server.wallpaper.WallpaperManagerService,int)>($r9, $i1);

     label2:
        $r12 = r1.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: android.service.wallpaper.IWallpaperService mService>;

        $r11 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector: android.os.Binder mToken>;

        $i4 = r16.<com.android.server.wallpaper.WallpaperManagerService$DisplayData: int mWidth>;

        $i3 = r16.<com.android.server.wallpaper.WallpaperManagerService$DisplayData: int mHeight>;

        $r10 = r16.<com.android.server.wallpaper.WallpaperManagerService$DisplayData: android.graphics.Rect mPadding>;

        $i2 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector: int mDisplayId>;

        interfaceinvoke $r12.<android.service.wallpaper.IWallpaperService: void attach(android.service.wallpaper.IWallpaperConnection,android.os.IBinder,int,boolean,int,int,android.graphics.Rect,int)>(r1, $r11, 2013, 0, $i4, $i3, $r10, $i2);

     label3:
        goto label5;

     label4:
        $r13 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WallpaperManagerService", "Failed attaching wallpaper on display", $r13);

        if r2 == null goto label5;

        $z0 = r2.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: boolean wallpaperUpdating>;

        if $z0 != 0 goto label5;

        $i7 = virtualinvoke r1.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: int getConnectedEngineSize()>();

        if $i7 != 0 goto label5;

        $r14 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection this$1>;

        $r15 = $r14.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        staticinvoke <com.android.server.wallpaper.WallpaperManagerService: boolean access$900(com.android.server.wallpaper.WallpaperManagerService,android.content.ComponentName,boolean,boolean,com.android.server.wallpaper.WallpaperManagerService$WallpaperData,android.os.IRemoteCallback)>($r15, null, 0, 0, r2, null);

     label5:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    void disconnectLocked()
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector r0;
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection $r2;
        com.android.server.wallpaper.WallpaperManagerService $r3;
        com.android.server.wm.WindowManagerInternal $r4;
        int $i0;
        android.os.Binder $r5;
        android.service.wallpaper.IWallpaperEngine $r6, $r7;
        android.os.RemoteException $r8;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector;

        $r2 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection this$1>;

        $r3 = $r2.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r4 = staticinvoke <com.android.server.wallpaper.WallpaperManagerService: com.android.server.wm.WindowManagerInternal access$1600(com.android.server.wallpaper.WallpaperManagerService)>($r3);

        $r5 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector: android.os.Binder mToken>;

        $i0 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector: int mDisplayId>;

        virtualinvoke $r4.<com.android.server.wm.WindowManagerInternal: void removeWindowToken(android.os.IBinder,boolean,int)>($r5, 0, $i0);

     label1:
        $r6 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector: android.service.wallpaper.IWallpaperEngine mEngine>;

        if $r6 == null goto label2;

        $r7 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector: android.service.wallpaper.IWallpaperEngine mEngine>;

        interfaceinvoke $r7.<android.service.wallpaper.IWallpaperEngine: void destroy()>();

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

     label4:
        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector: android.service.wallpaper.IWallpaperEngine mEngine> = null;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void ensureStatusHandled()
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector r0;
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection $r2;
        int $i0, $i1, $i2;
        com.android.server.wallpaper.WallpaperManagerService $r3;
        boolean $z0, $z1;
        android.graphics.Rect $r4;
        android.service.wallpaper.IWallpaperEngine $r5, $r6;
        android.os.RemoteException $r7, $r8;
        com.android.server.wallpaper.WallpaperManagerService$DisplayData r9;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector;

        $r2 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection this$1>;

        $r3 = $r2.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $i0 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector: int mDisplayId>;

        r9 = staticinvoke <com.android.server.wallpaper.WallpaperManagerService: com.android.server.wallpaper.WallpaperManagerService$DisplayData access$1500(com.android.server.wallpaper.WallpaperManagerService,int)>($r3, $i0);

        $z0 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector: boolean mDimensionsChanged>;

        if $z0 == 0 goto label05;

     label01:
        $r6 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector: android.service.wallpaper.IWallpaperEngine mEngine>;

        $i2 = r9.<com.android.server.wallpaper.WallpaperManagerService$DisplayData: int mWidth>;

        $i1 = r9.<com.android.server.wallpaper.WallpaperManagerService$DisplayData: int mHeight>;

        interfaceinvoke $r6.<android.service.wallpaper.IWallpaperEngine: void setDesiredSize(int,int)>($i2, $i1);

     label02:
        goto label04;

     label03:
        $r8 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WallpaperManagerService", "Failed to set wallpaper dimensions", $r8);

     label04:
        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector: boolean mDimensionsChanged> = 0;

     label05:
        $z1 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector: boolean mPaddingChanged>;

        if $z1 == 0 goto label10;

     label06:
        $r5 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector: android.service.wallpaper.IWallpaperEngine mEngine>;

        $r4 = r9.<com.android.server.wallpaper.WallpaperManagerService$DisplayData: android.graphics.Rect mPadding>;

        interfaceinvoke $r5.<android.service.wallpaper.IWallpaperEngine: void setDisplayPadding(android.graphics.Rect)>($r4);

     label07:
        goto label09;

     label08:
        $r7 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WallpaperManagerService", "Failed to set wallpaper padding", $r7);

     label09:
        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector: boolean mPaddingChanged> = 0;

     label10:
        return;

        catch android.os.RemoteException from label01 to label02 with label03;
        catch android.os.RemoteException from label06 to label07 with label08;
    }
}
