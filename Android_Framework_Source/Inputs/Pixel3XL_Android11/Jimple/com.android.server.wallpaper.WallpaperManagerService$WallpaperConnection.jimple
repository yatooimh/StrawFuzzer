class com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection extends android.service.wallpaper.IWallpaperConnection$Stub implements android.content.ServiceConnection
{
    private static final long WALLPAPER_RECONNECT_TIMEOUT_MS;
    final int mClientUid;
    private android.util.SparseArray mDisplayConnector;
    final android.app.WallpaperInfo mInfo;
    android.os.IRemoteCallback mReply;
    private java.lang.Runnable mResetRunnable;
    android.service.wallpaper.IWallpaperService mService;
    private java.lang.Runnable mTryToRebindRunnable;
    com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper;
    final com.android.server.wallpaper.WallpaperManagerService this$0;

    void <init>(com.android.server.wallpaper.WallpaperManagerService, android.app.WallpaperInfo, com.android.server.wallpaper.WallpaperManagerService$WallpaperData, int)
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection r0;
        com.android.server.wallpaper.WallpaperManagerService r1;
        android.app.WallpaperInfo r2;
        com.android.server.wallpaper.WallpaperManagerService$WallpaperData r3;
        int i0;
        android.util.SparseArray $r4;
        com.android.server.wallpaper._$$Lambda$WallpaperManagerService$WallpaperConnection$QhODF3v_swnwSYvDbeEhU85gOBw $r5;
        com.android.server.wallpaper._$$Lambda$WallpaperManagerService$WallpaperConnection$d7gUC6mQx1Xv_Bvlwss1NEF5PwU $r6;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection;

        r1 := @parameter0: com.android.server.wallpaper.WallpaperManagerService;

        r2 := @parameter1: android.app.WallpaperInfo;

        r3 := @parameter2: com.android.server.wallpaper.WallpaperManagerService$WallpaperData;

        i0 := @parameter3: int;

        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0> = r1;

        specialinvoke r0.<android.service.wallpaper.IWallpaperConnection$Stub: void <init>()>();

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: android.util.SparseArray mDisplayConnector> = $r4;

        $r5 = new com.android.server.wallpaper._$$Lambda$WallpaperManagerService$WallpaperConnection$QhODF3v_swnwSYvDbeEhU85gOBw;

        specialinvoke $r5.<com.android.server.wallpaper._$$Lambda$WallpaperManagerService$WallpaperConnection$QhODF3v_swnwSYvDbeEhU85gOBw: void <init>(com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection)>(r0);

        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: java.lang.Runnable mResetRunnable> = $r5;

        $r6 = new com.android.server.wallpaper._$$Lambda$WallpaperManagerService$WallpaperConnection$d7gUC6mQx1Xv_Bvlwss1NEF5PwU;

        specialinvoke $r6.<com.android.server.wallpaper._$$Lambda$WallpaperManagerService$WallpaperConnection$d7gUC6mQx1Xv_Bvlwss1NEF5PwU: void <init>(com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection)>(r0);

        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: java.lang.Runnable mTryToRebindRunnable> = $r6;

        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: android.app.WallpaperInfo mInfo> = r2;

        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper> = r3;

        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: int mClientUid> = i0;

        specialinvoke r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: void initDisplayState()>();

        return;
    }

    static android.util.SparseArray access$1300(com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection)
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection r0;
        android.util.SparseArray $r1;

        r0 := @parameter0: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection;

        $r1 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: android.util.SparseArray mDisplayConnector>;

        return $r1;
    }

    static void access$1400(com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection, java.util.function.Predicate)
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection r0;
        java.util.function.Predicate r1;

        r0 := @parameter0: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection;

        r1 := @parameter1: java.util.function.Predicate;

        specialinvoke r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: void appendConnectorWithCondition(java.util.function.Predicate)>(r1);

        return;
    }

    static java.lang.Runnable access$2700(com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection)
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection r0;
        java.lang.Runnable $r1;

        r0 := @parameter0: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection;

        $r1 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: java.lang.Runnable mResetRunnable>;

        return $r1;
    }

    private void appendConnectorWithCondition(java.util.function.Predicate)
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection r0;
        java.util.function.Predicate r1;
        android.view.Display[] r2;
        int i0, i1, i2;
        android.view.Display r3;
        com.android.server.wallpaper.WallpaperManagerService $r4;
        android.hardware.display.DisplayManager $r5;
        boolean $z0;
        android.util.SparseArray $r6, $r10;
        java.lang.Object $r7;
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector $r8, $r9;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection;

        r1 := @parameter0: java.util.function.Predicate;

        $r4 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r5 = staticinvoke <com.android.server.wallpaper.WallpaperManagerService: android.hardware.display.DisplayManager access$1800(com.android.server.wallpaper.WallpaperManagerService)>($r4);

        r2 = virtualinvoke $r5.<android.hardware.display.DisplayManager: android.view.Display[] getDisplays()>();

        i0 = lengthof r2;

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        r3 = r2[i2];

        $z0 = interfaceinvoke r1.<java.util.function.Predicate: boolean test(java.lang.Object)>(r3);

        if $z0 == 0 goto label2;

        i1 = virtualinvoke r3.<android.view.Display: int getDisplayId()>();

        $r6 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: android.util.SparseArray mDisplayConnector>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        $r8 = (com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector) $r7;

        if $r8 != null goto label2;

        $r10 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: android.util.SparseArray mDisplayConnector>;

        $r9 = new com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector;

        specialinvoke $r9.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector: void <init>(com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection,int)>(r0, i1);

        virtualinvoke $r10.<android.util.SparseArray: void append(int,java.lang.Object)>(i1, $r9);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    private void initDisplayState()
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection r0;
        com.android.server.wallpaper.WallpaperManagerService $r1, $r4;
        com.android.server.wallpaper.WallpaperManagerService$WallpaperData $r2, $r3;
        boolean $z0, $z1;
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector $r5;
        android.util.SparseArray $r6;
        com.android.server.wallpaper._$$Lambda$QblJSn28fT0IWuWTmXxzYPXTYdI $r7;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection;

        $r3 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $r1 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r2 = $r1.<com.android.server.wallpaper.WallpaperManagerService: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mFallbackWallpaper>;

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label2;

        $r4 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $z1 = staticinvoke <com.android.server.wallpaper.WallpaperManagerService: boolean access$1700(com.android.server.wallpaper.WallpaperManagerService,com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection)>($r4, r0);

        if $z1 == 0 goto label1;

        $r7 = new com.android.server.wallpaper._$$Lambda$QblJSn28fT0IWuWTmXxzYPXTYdI;

        specialinvoke $r7.<com.android.server.wallpaper._$$Lambda$QblJSn28fT0IWuWTmXxzYPXTYdI: void <init>(com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection)>(r0);

        specialinvoke r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: void appendConnectorWithCondition(java.util.function.Predicate)>($r7);

        goto label2;

     label1:
        $r6 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: android.util.SparseArray mDisplayConnector>;

        $r5 = new com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector;

        specialinvoke $r5.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector: void <init>(com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection,int)>(r0, 0);

        virtualinvoke $r6.<android.util.SparseArray: void append(int,java.lang.Object)>(0, $r5);

     label2:
        return;
    }

    static void lambda$onServiceDisconnected$2(com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector)
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector r0;

        r0 := @parameter0: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector;

        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector: android.service.wallpaper.IWallpaperEngine mEngine> = null;

        return;
    }

    private void processDisconnect(android.content.ServiceConnection)
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection r0, $r4;
        java.lang.Object r1;
        com.android.server.wallpaper.WallpaperManagerService $r2, $r8, $r9, $r11, $r17;
        com.android.server.wallpaper.WallpaperManagerService$WallpaperData $r3, $r5, $r6, $r7, $r13, $r14, $r15, $r16;
        boolean $z0, $z1, $z2;
        int $i1, $i2, $i11;
        android.content.ComponentName $r10, $r12, r20;
        long $l3, $l5, $l6, $l7, $l8;
        byte $b4, $b9;
        java.lang.Throwable $r18;
        android.content.ServiceConnection r19;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection;

        r19 := @parameter0: android.content.ServiceConnection;

        $r2 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        r1 = staticinvoke <com.android.server.wallpaper.WallpaperManagerService: java.lang.Object access$000(com.android.server.wallpaper.WallpaperManagerService)>($r2);

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $r4 = $r3.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection connection>;

        if r19 != $r4 goto label05;

        $r5 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        r20 = $r5.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: android.content.ComponentName wallpaperComponent>;

        $r6 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $z0 = $r6.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: boolean wallpaperUpdating>;

        if $z0 != 0 goto label04;

        $r7 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $i1 = $r7.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: int userId>;

        $r8 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $i2 = staticinvoke <com.android.server.wallpaper.WallpaperManagerService: int access$2100(com.android.server.wallpaper.WallpaperManagerService)>($r8);

        if $i1 != $i2 goto label04;

        $r9 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r10 = staticinvoke <com.android.server.wallpaper.WallpaperManagerService: android.content.ComponentName access$2200(com.android.server.wallpaper.WallpaperManagerService)>($r9);

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r10, r20);

        if $z1 != 0 goto label04;

        $r11 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r12 = staticinvoke <com.android.server.wallpaper.WallpaperManagerService: android.content.ComponentName access$800(com.android.server.wallpaper.WallpaperManagerService)>($r11);

        $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r12, r20);

        if $z2 != 0 goto label04;

        $r13 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $l3 = $r13.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: long lastDiedTime>;

        $b4 = $l3 cmp 0L;

        if $b4 == 0 goto label03;

        $r15 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $l6 = $r15.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: long lastDiedTime>;

        $l7 = $l6 + 10000L;

        $l8 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $b9 = $l7 cmp $l8;

        if $b9 <= 0 goto label03;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WallpaperManagerService", "Reverting to built-in wallpaper!");

        $r17 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r16 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $i11 = $r16.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: int userId>;

        virtualinvoke $r17.<com.android.server.wallpaper.WallpaperManagerService: void clearWallpaperLocked(boolean,int,int,android.os.IRemoteCallback)>(1, 1, $i11, null);

     label02:
        goto label04;

     label03:
        $r14 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $l5 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r14.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: long lastDiedTime> = $l5;

        specialinvoke r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: void tryToRebind()>();

     label04:
        goto label06;

     label05:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("WallpaperManagerService", "Wallpaper changed during disconnect tracking; ignoring");

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r18 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r18;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private void tryToRebind()
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection r0, $r16;
        java.lang.Object r1;
        com.android.server.wallpaper.WallpaperManagerService $r2, $r6, $r9, $r11;
        com.android.server.wallpaper.WallpaperManagerService$WallpaperData $r3, $r4, $r5, $r7, $r8, $r15;
        boolean $z0, $z1;
        long $l0, $l1, $l2;
        byte $b3;
        int $i5, $i6, $i7;
        java.lang.String $r10, r19;
        android.content.Context $r12;
        android.os.Handler $r13;
        java.lang.Runnable $r14;
        java.lang.Throwable $r17;
        android.content.ComponentName r18;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection;

        $r2 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        r1 = staticinvoke <com.android.server.wallpaper.WallpaperManagerService: java.lang.Object access$000(com.android.server.wallpaper.WallpaperManagerService)>($r2);

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $z0 = $r3.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: boolean wallpaperUpdating>;

        if $z0 == 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        $r4 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        r18 = $r4.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: android.content.ComponentName wallpaperComponent>;

        $r6 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r5 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $z1 = staticinvoke <com.android.server.wallpaper.WallpaperManagerService: boolean access$900(com.android.server.wallpaper.WallpaperManagerService,android.content.ComponentName,boolean,boolean,com.android.server.wallpaper.WallpaperManagerService$WallpaperData,android.os.IRemoteCallback)>($r6, r18, 1, 0, $r5, null);

        if $z1 == 0 goto label05;

        $r15 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $r16 = $r15.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection connection>;

        virtualinvoke $r16.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: void scheduleTimeoutLocked()>();

     label04:
        goto label08;

     label05:
        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r7 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $l1 = $r7.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: long lastDiedTime>;

        $l2 = $l0 - $l1;

        $b3 = $l2 cmp 10000L;

        if $b3 >= 0 goto label07;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WallpaperManagerService", "Rebind fail! Try again later");

        $r11 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r12 = staticinvoke <com.android.server.wallpaper.WallpaperManagerService: android.content.Context access$2000(com.android.server.wallpaper.WallpaperManagerService)>($r11);

        $r13 = virtualinvoke $r12.<android.content.Context: android.os.Handler getMainThreadHandler()>();

        $r14 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: java.lang.Runnable mTryToRebindRunnable>;

        virtualinvoke $r13.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r14, 1000L);

     label06:
        goto label08;

     label07:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WallpaperManagerService", "Reverting to built-in wallpaper!");

        $r9 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r8 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $i5 = $r8.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: int userId>;

        virtualinvoke $r9.<com.android.server.wallpaper.WallpaperManagerService: void clearWallpaperLocked(boolean,int,int,android.os.IRemoteCallback)>(1, 1, $i5, null);

        r19 = virtualinvoke r18.<android.content.ComponentName: java.lang.String flattenToString()>();

        $i6 = virtualinvoke r19.<java.lang.String: int length()>();

        $i7 = staticinvoke <java.lang.Math: int min(int,int)>($i6, 128);

        $r10 = virtualinvoke r19.<java.lang.String: java.lang.String substring(int,int)>(0, $i7);

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.String)>(33000, $r10);

     label08:
        exitmonitor r1;

     label09:
        return;

     label10:
        $r17 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r17;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void attachEngine(android.service.wallpaper.IWallpaperEngine, int)
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection r0;
        int i0;
        java.lang.Object r1;
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector r2;
        boolean z0, $z1;
        com.android.server.wallpaper.WallpaperManagerService $r3, $r6;
        android.app.WallpaperInfo $r4, $r5;
        android.service.wallpaper.IWallpaperEngine $r7, r12, $r15;
        android.os.RemoteException $r8, $r10, $r11;
        java.lang.Throwable $r9;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection;

        r12 := @parameter0: android.service.wallpaper.IWallpaperEngine;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        r1 = staticinvoke <com.android.server.wallpaper.WallpaperManagerService: java.lang.Object access$000(com.android.server.wallpaper.WallpaperManagerService)>($r3);

        entermonitor r1;

     label01:
        r2 = virtualinvoke r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector getDisplayConnectorOrCreate(int)>(i0);

     label02:
        if r2 != null goto label09;

     label03:
        interfaceinvoke r12.<android.service.wallpaper.IWallpaperEngine: void destroy()>();

     label04:
        goto label07;

     label05:
        $r8 := @caughtexception;

     label06:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WallpaperManagerService", "Failed to destroy engine", $r8);

     label07:
        exitmonitor r1;

     label08:
        return;

     label09:
        r2.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector: android.service.wallpaper.IWallpaperEngine mEngine> = r12;

        virtualinvoke r2.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector: void ensureStatusHandled()>();

        $r4 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: android.app.WallpaperInfo mInfo>;

        if $r4 == null goto label15;

        $r5 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: android.app.WallpaperInfo mInfo>;

        z0 = virtualinvoke $r5.<android.app.WallpaperInfo: boolean supportsAmbientMode()>();

     label10:
        if z0 == 0 goto label15;

        if i0 != 0 goto label15;

     label11:
        $r7 = r2.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector: android.service.wallpaper.IWallpaperEngine mEngine>;

        $r6 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $z1 = staticinvoke <com.android.server.wallpaper.WallpaperManagerService: boolean access$2400(com.android.server.wallpaper.WallpaperManagerService)>($r6);

        interfaceinvoke $r7.<android.service.wallpaper.IWallpaperEngine: void setInAmbientMode(boolean,long)>($z1, 0L);

     label12:
        goto label15;

     label13:
        $r11 := @caughtexception;

     label14:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WallpaperManagerService", "Failed to set ambient mode state", $r11);

     label15:
        $r15 = r2.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector: android.service.wallpaper.IWallpaperEngine mEngine>;

        interfaceinvoke $r15.<android.service.wallpaper.IWallpaperEngine: void requestWallpaperColors()>();

     label16:
        goto label19;

     label17:
        $r10 := @caughtexception;

     label18:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WallpaperManagerService", "Failed to request wallpaper colors", $r10);

     label19:
        exitmonitor r1;

     label20:
        return;

     label21:
        $r9 := @caughtexception;

     label22:
        exitmonitor r1;

     label23:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label21;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label21;
        catch java.lang.Throwable from label06 to label07 with label21;
        catch java.lang.Throwable from label07 to label08 with label21;
        catch java.lang.Throwable from label09 to label10 with label21;
        catch android.os.RemoteException from label11 to label12 with label13;
        catch java.lang.Throwable from label11 to label12 with label21;
        catch java.lang.Throwable from label14 to label15 with label21;
        catch android.os.RemoteException from label15 to label16 with label17;
        catch java.lang.Throwable from label15 to label16 with label21;
        catch java.lang.Throwable from label18 to label19 with label21;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label22 to label23 with label21;
    }

    boolean containsDisplay(int)
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection r0;
        int i0;
        android.util.SparseArray $r1;
        java.lang.Object $r2;
        boolean z0;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: android.util.SparseArray mDisplayConnector>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        if $r2 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void engineShown(android.service.wallpaper.IWallpaperEngine)
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection r0;
        long l0;
        com.android.server.wallpaper.WallpaperManagerService $r1;
        android.os.IRemoteCallback $r2, $r3;
        android.os.RemoteException $r4;
        java.lang.Throwable $r5;
        android.service.wallpaper.IWallpaperEngine r6;
        java.lang.Object r7;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection;

        r6 := @parameter0: android.service.wallpaper.IWallpaperEngine;

        $r1 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        r7 = staticinvoke <com.android.server.wallpaper.WallpaperManagerService: java.lang.Object access$000(com.android.server.wallpaper.WallpaperManagerService)>($r1);

        entermonitor r7;

     label01:
        $r2 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: android.os.IRemoteCallback mReply>;

        if $r2 == null goto label07;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r3 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: android.os.IRemoteCallback mReply>;

        interfaceinvoke $r3.<android.os.IRemoteCallback: void sendResult(android.os.Bundle)>(null);

     label03:
        goto label06;

     label04:
        $r4 := @caughtexception;

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label06:
        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: android.os.IRemoteCallback mReply> = null;

     label07:
        exitmonitor r7;

     label08:
        return;

     label09:
        $r5 := @caughtexception;

     label10:
        exitmonitor r7;

     label11:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch android.os.RemoteException from label02 to label03 with label04;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    void forEachDisplayConnector(java.util.function.Consumer)
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection r0;
        java.util.function.Consumer r1;
        android.util.SparseArray $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector $r5;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection;

        r1 := @parameter0: java.util.function.Consumer;

        $r2 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: android.util.SparseArray mDisplayConnector>;

        $i0 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r3 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: android.util.SparseArray mDisplayConnector>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r5 = (com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector) $r4;

        interfaceinvoke r1.<java.util.function.Consumer: void accept(java.lang.Object)>($r5);

        i1 = i1 + -1;

        goto label1;

     label2:
        return;
    }

    int getConnectedEngineSize()
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection r0;
        android.util.SparseArray $r1, $r2;
        int $i0, i1, i2, i3;
        java.lang.Object $r3;
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector $r4;
        android.service.wallpaper.IWallpaperEngine $r5;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection;

        i1 = 0;

        $r1 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: android.util.SparseArray mDisplayConnector>;

        $i0 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        i2 = $i0 - 1;

     label1:
        if i2 < 0 goto label3;

        i3 = i1;

        $r2 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: android.util.SparseArray mDisplayConnector>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        $r4 = (com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector) $r3;

        $r5 = $r4.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector: android.service.wallpaper.IWallpaperEngine mEngine>;

        if $r5 == null goto label2;

        i3 = i1 + 1;

     label2:
        i2 = i2 + -1;

        i1 = i3;

        goto label1;

     label3:
        return i1;
    }

    com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector getDisplayConnectorOrCreate(int)
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection r0;
        int i0;
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector r1, $r7, r9;
        android.util.SparseArray $r2, $r8;
        java.lang.Object $r3;
        com.android.server.wallpaper.WallpaperManagerService $r4;
        android.hardware.display.DisplayManager $r5;
        android.view.Display $r6;
        boolean $z0;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: android.util.SparseArray mDisplayConnector>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector) $r3;

        r9 = r1;

        if r1 != null goto label1;

        r9 = r1;

        $r4 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r5 = staticinvoke <com.android.server.wallpaper.WallpaperManagerService: android.hardware.display.DisplayManager access$1800(com.android.server.wallpaper.WallpaperManagerService)>($r4);

        $r6 = virtualinvoke $r5.<android.hardware.display.DisplayManager: android.view.Display getDisplay(int)>(i0);

        $z0 = virtualinvoke r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: boolean isUsableDisplay(android.view.Display)>($r6);

        if $z0 == 0 goto label1;

        $r7 = new com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector;

        specialinvoke $r7.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector: void <init>(com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection,int)>(r0, i0);

        r9 = $r7;

        $r8 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: android.util.SparseArray mDisplayConnector>;

        virtualinvoke $r8.<android.util.SparseArray: void append(int,java.lang.Object)>(i0, $r7);

     label1:
        return r9;
    }

    boolean isUsableDisplay(android.view.Display)
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection r0;
        int i0, $i2;
        long l1;
        boolean z0, $z1;
        com.android.server.wallpaper.WallpaperManagerService $r1;
        com.android.server.wm.WindowManagerInternal $r2;
        java.lang.Throwable $r3;
        android.view.Display r4;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection;

        r4 := @parameter0: android.view.Display;

        if r4 == null goto label6;

        $i2 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: int mClientUid>;

        $z1 = virtualinvoke r4.<android.view.Display: boolean hasAccess(int)>($i2);

        if $z1 != 0 goto label1;

        goto label6;

     label1:
        i0 = virtualinvoke r4.<android.view.Display: int getDisplayId()>();

        if i0 != 0 goto label2;

        return 1;

     label2:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label3:
        $r1 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r2 = staticinvoke <com.android.server.wallpaper.WallpaperManagerService: com.android.server.wm.WindowManagerInternal access$1600(com.android.server.wallpaper.WallpaperManagerService)>($r1);

        z0 = virtualinvoke $r2.<com.android.server.wm.WindowManagerInternal: boolean shouldShowSystemDecorOnDisplay(int)>(i0);

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return z0;

     label5:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r3;

     label6:
        return 0;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void lambda$new$0$WallpaperManagerService$WallpaperConnection()
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection r0;
        java.lang.Object r1;
        com.android.server.wallpaper.WallpaperManagerService $r2, $r3, $r6, $r14;
        boolean $z0, $z1;
        com.android.server.wallpaper.WallpaperManagerService$WallpaperData $r4, $r5, $r8, $r13;
        int $i0, $i1, $i3;
        android.content.ComponentName $r9;
        java.lang.String $r12;
        java.lang.Throwable $r15;
        java.lang.StringBuilder r16;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection;

        $r2 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        r1 = staticinvoke <com.android.server.wallpaper.WallpaperManagerService: java.lang.Object access$000(com.android.server.wallpaper.WallpaperManagerService)>($r2);

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $z0 = staticinvoke <com.android.server.wallpaper.WallpaperManagerService: boolean access$2500(com.android.server.wallpaper.WallpaperManagerService)>($r3);

        if $z0 == 0 goto label3;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("WallpaperManagerService", "Ignoring relaunch timeout during shutdown");

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $z1 = $r4.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: boolean wallpaperUpdating>;

        if $z1 != 0 goto label4;

        $r5 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $i0 = $r5.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: int userId>;

        $r6 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $i1 = staticinvoke <com.android.server.wallpaper.WallpaperManagerService: int access$2100(com.android.server.wallpaper.WallpaperManagerService)>($r6);

        if $i0 != $i1 goto label4;

        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wallpaper reconnect timed out for ");

        $r8 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $r9 = $r8.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: android.content.ComponentName wallpaperComponent>;

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", reverting to built-in wallpaper!");

        $r12 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WallpaperManagerService", $r12);

        $r14 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r13 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $i3 = $r13.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: int userId>;

        virtualinvoke $r14.<com.android.server.wallpaper.WallpaperManagerService: void clearWallpaperLocked(boolean,int,int,android.os.IRemoteCallback)>(1, 1, $i3, null);

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r15 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r15;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void lambda$new$1$WallpaperManagerService$WallpaperConnection()
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection r0;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection;

        specialinvoke r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: void tryToRebind()>();

        return;
    }

    public void lambda$onServiceDisconnected$3$WallpaperManagerService$WallpaperConnection()
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection r0;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection;

        specialinvoke r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: void processDisconnect(android.content.ServiceConnection)>(r0);

        return;
    }

    public void onServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection r0, $r3;
        com.android.server.wallpaper.WallpaperManagerService $r1, $r6, $r7, $r12, $r17;
        com.android.server.wallpaper.WallpaperManagerService$WallpaperData $r2, $r5, $r8, $r9, $r16;
        android.service.wallpaper.IWallpaperService $r4;
        boolean $z0;
        android.os.Handler $r10, $r14;
        java.lang.Runnable $r11, $r15;
        android.content.Context $r13;
        int $i0;
        java.lang.Throwable $r18;
        android.content.ComponentName r19;
        android.os.IBinder r20;
        java.lang.Object r21;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection;

        r19 := @parameter0: android.content.ComponentName;

        r20 := @parameter1: android.os.IBinder;

        $r1 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        r21 = staticinvoke <com.android.server.wallpaper.WallpaperManagerService: java.lang.Object access$000(com.android.server.wallpaper.WallpaperManagerService)>($r1);

        entermonitor r21;

     label1:
        $r2 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $r3 = $r2.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection connection>;

        if $r3 != r0 goto label3;

        $r4 = staticinvoke <android.service.wallpaper.IWallpaperService$Stub: android.service.wallpaper.IWallpaperService asInterface(android.os.IBinder)>(r20);

        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: android.service.wallpaper.IWallpaperService mService> = $r4;

        $r6 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r5 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        staticinvoke <com.android.server.wallpaper.WallpaperManagerService: void access$1900(com.android.server.wallpaper.WallpaperManagerService,com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection,com.android.server.wallpaper.WallpaperManagerService$WallpaperData)>($r6, r0, $r5);

        $r9 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $r7 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r8 = $r7.<com.android.server.wallpaper.WallpaperManagerService: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mFallbackWallpaper>;

        $z0 = virtualinvoke $r9.<java.lang.Object: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label2;

        $r17 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r16 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $i0 = $r16.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: int userId>;

        staticinvoke <com.android.server.wallpaper.WallpaperManagerService: void access$1000(com.android.server.wallpaper.WallpaperManagerService,int)>($r17, $i0);

     label2:
        $r10 = staticinvoke <com.android.server.FgThread: android.os.Handler getHandler()>();

        $r11 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: java.lang.Runnable mResetRunnable>;

        virtualinvoke $r10.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r11);

        $r12 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r13 = staticinvoke <com.android.server.wallpaper.WallpaperManagerService: android.content.Context access$2000(com.android.server.wallpaper.WallpaperManagerService)>($r12);

        $r14 = virtualinvoke $r13.<android.content.Context: android.os.Handler getMainThreadHandler()>();

        $r15 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: java.lang.Runnable mTryToRebindRunnable>;

        virtualinvoke $r14.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r15);

     label3:
        exitmonitor r21;

     label4:
        return;

     label5:
        $r18 := @caughtexception;

     label6:
        exitmonitor r21;

     label7:
        throw $r18;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void onServiceDisconnected(android.content.ComponentName)
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection r0, $r10;
        java.lang.Object r1;
        com.android.server.wallpaper.WallpaperManagerService $r2, $r12;
        java.lang.String $r5, $r18;
        com.android.server.wallpaper.WallpaperManagerService$WallpaperData $r6, $r9, $r11, $r15;
        android.content.ComponentName $r7, $r16, r20;
        boolean $z0, $z1;
        com.android.server.wallpaper.'-$$Lambda$WallpaperManagerService$WallpaperConnection$pf_7EcVpbLQlQnQ4nGnqzkGUhqg' $r8;
        android.content.Context $r13;
        java.lang.Throwable $r19;
        android.os.Handler r23;
        java.lang.StringBuilder r26, r27;
        com.android.server.wallpaper._$$Lambda$WallpaperManagerService$WallpaperConnection$zdJsFydiwYuUG4WFwlznTvMvYfw r28;
        java.util.function.Consumer r29;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection;

        r20 := @parameter0: android.content.ComponentName;

        $r2 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        r1 = staticinvoke <com.android.server.wallpaper.WallpaperManagerService: java.lang.Object access$000(com.android.server.wallpaper.WallpaperManagerService)>($r2);

        entermonitor r1;

     label1:
        r26 = new java.lang.StringBuilder;

        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wallpaper service gone: ");

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r20);

        $r5 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WallpaperManagerService", $r5);

        $r6 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $r7 = $r6.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: android.content.ComponentName wallpaperComponent>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r20, $r7);

        if $z0 != 0 goto label2;

        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Does not match expected wallpaper component ");

        $r15 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $r16 = $r15.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: android.content.ComponentName wallpaperComponent>;

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("WallpaperManagerService", $r18);

     label2:
        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: android.service.wallpaper.IWallpaperService mService> = null;

        $r8 = <com.android.server.wallpaper._$$Lambda$WallpaperManagerService$WallpaperConnection$pf_7EcVpbLQlQnQ4nGnqzkGUhqg: com.android.server.wallpaper.'-$$Lambda$WallpaperManagerService$WallpaperConnection$pf_7EcVpbLQlQnQ4nGnqzkGUhqg' INSTANCE>;

        r29 = (java.util.function.Consumer) $r8;

        virtualinvoke r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: void forEachDisplayConnector(java.util.function.Consumer)>(r29);

        $r9 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $r10 = $r9.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection connection>;

        if $r10 != r0 goto label3;

        $r11 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $z1 = $r11.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: boolean wallpaperUpdating>;

        if $z1 != 0 goto label3;

        $r12 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r13 = staticinvoke <com.android.server.wallpaper.WallpaperManagerService: android.content.Context access$2000(com.android.server.wallpaper.WallpaperManagerService)>($r12);

        r23 = virtualinvoke $r13.<android.content.Context: android.os.Handler getMainThreadHandler()>();

        r28 = new com.android.server.wallpaper._$$Lambda$WallpaperManagerService$WallpaperConnection$zdJsFydiwYuUG4WFwlznTvMvYfw;

        specialinvoke r28.<com.android.server.wallpaper._$$Lambda$WallpaperManagerService$WallpaperConnection$zdJsFydiwYuUG4WFwlznTvMvYfw: void <init>(com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection)>(r0);

        virtualinvoke r23.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>(r28, 1000L);

     label3:
        exitmonitor r1;

     label4:
        return;

     label5:
        $r19 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r19;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void onWallpaperColorsChanged(android.app.WallpaperColors, int)
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection r0;
        int i0, $i2;
        java.lang.Object r1, $r13;
        com.android.server.wallpaper.WallpaperManagerService $r2, $r3, $r9, $r10;
        android.content.ComponentName $r4, $r6;
        com.android.server.wallpaper.WallpaperManagerService$WallpaperData $r5, $r7, $r8, $r12, $r14;
        boolean $z0;
        android.util.SparseArray $r11;
        java.lang.Throwable $r15;
        android.app.WallpaperColors r16;
        byte b3;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection;

        r16 := @parameter0: android.app.WallpaperColors;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        r1 = staticinvoke <com.android.server.wallpaper.WallpaperManagerService: java.lang.Object access$000(com.android.server.wallpaper.WallpaperManagerService)>($r2);

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r4 = staticinvoke <com.android.server.wallpaper.WallpaperManagerService: android.content.ComponentName access$800(com.android.server.wallpaper.WallpaperManagerService)>($r3);

        $r5 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $r6 = $r5.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: android.content.ComponentName wallpaperComponent>;

        $z0 = virtualinvoke $r4.<android.content.ComponentName: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        $r7 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $r7.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: android.app.WallpaperColors primaryColors> = r16;

     label04:
        b3 = 1;

        if i0 != 0 goto label07;

        b3 = 1;

     label05:
        $r10 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r11 = staticinvoke <com.android.server.wallpaper.WallpaperManagerService: android.util.SparseArray access$100(com.android.server.wallpaper.WallpaperManagerService)>($r10);

        $r12 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $i2 = $r12.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: int userId>;

        $r13 = virtualinvoke $r11.<android.util.SparseArray: java.lang.Object get(int)>($i2);

        $r14 = (com.android.server.wallpaper.WallpaperManagerService$WallpaperData) $r13;

        if $r14 != null goto label07;

     label06:
        b3 = 1 | 2;

     label07:
        exitmonitor r1;

     label08:
        if b3 == 0 goto label09;

        $r9 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r8 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        staticinvoke <com.android.server.wallpaper.WallpaperManagerService: void access$2300(com.android.server.wallpaper.WallpaperManagerService,com.android.server.wallpaper.WallpaperManagerService$WallpaperData,int,int)>($r9, $r8, b3, i0);

     label09:
        return;

     label10:
        $r15 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r15;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    void removeDisplayConnector(int)
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection r0;
        int i0;
        android.util.SparseArray $r1, $r4;
        java.lang.Object $r2;
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector $r3;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: android.util.SparseArray mDisplayConnector>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r3 = (com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection$DisplayConnector) $r2;

        if $r3 == null goto label1;

        $r4 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: android.util.SparseArray mDisplayConnector>;

        virtualinvoke $r4.<android.util.SparseArray: void remove(int)>(i0);

     label1:
        return;
    }

    public void scheduleTimeoutLocked()
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection r0;
        java.lang.Runnable $r1, $r2;
        java.lang.StringBuilder $r3;
        com.android.server.wallpaper.WallpaperManagerService$WallpaperData $r5;
        android.content.ComponentName $r6;
        java.lang.String $r8;
        android.os.Handler r9;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection;

        r9 = staticinvoke <com.android.server.FgThread: android.os.Handler getHandler()>();

        $r1 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: java.lang.Runnable mResetRunnable>;

        virtualinvoke r9.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r1);

        $r2 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: java.lang.Runnable mResetRunnable>;

        virtualinvoke r9.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r2, 10000L);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Started wallpaper reconnect timeout for ");

        $r5 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $r6 = $r5.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: android.content.ComponentName wallpaperComponent>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("WallpaperManagerService", $r8);

        return;
    }

    public android.os.ParcelFileDescriptor setWallpaper(java.lang.String)
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection r0, $r4;
        java.lang.Object r1;
        com.android.server.wallpaper.WallpaperManagerService $r2, $r6;
        com.android.server.wallpaper.WallpaperManagerService$WallpaperData $r3, $r5;
        java.lang.Throwable $r7;
        java.lang.String r8;
        android.os.ParcelFileDescriptor r9;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection;

        r8 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        r1 = staticinvoke <com.android.server.wallpaper.WallpaperManagerService: java.lang.Object access$000(com.android.server.wallpaper.WallpaperManagerService)>($r2);

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        $r4 = $r3.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection connection>;

        if $r4 != r0 goto label3;

        $r6 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r5 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

        r9 = virtualinvoke $r6.<com.android.server.wallpaper.WallpaperManagerService: android.os.ParcelFileDescriptor updateWallpaperBitmapLocked(java.lang.String,com.android.server.wallpaper.WallpaperManagerService$WallpaperData,android.os.Bundle)>(r8, $r5, null);

        exitmonitor r1;

     label2:
        return r9;

     label3:
        exitmonitor r1;

     label4:
        return null;

     label5:
        $r7 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public static void <clinit>()
    {
        <com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection: long WALLPAPER_RECONNECT_TIMEOUT_MS> = 10000L;

        return;
    }
}
