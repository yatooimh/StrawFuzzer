class com.android.server.wallpaper.WallpaperManagerService$WallpaperData extends java.lang.Object
{
    boolean allowBackup;
    private android.os.RemoteCallbackList callbacks;
    com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection connection;
    final java.io.File cropFile;
    final android.graphics.Rect cropHint;
    boolean imageWallpaperPending;
    long lastDiedTime;
    java.lang.String name;
    android.content.ComponentName nextWallpaperComponent;
    android.app.WallpaperColors primaryColors;
    android.app.IWallpaperManagerCallback setComplete;
    int userId;
    android.content.ComponentName wallpaperComponent;
    final java.io.File wallpaperFile;
    int wallpaperId;
    com.android.server.wallpaper.WallpaperManagerService$WallpaperObserver wallpaperObserver;
    boolean wallpaperUpdating;
    int whichPending;

    void <init>(int, java.io.File, java.lang.String, java.lang.String)
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperData r0;
        int i0;
        java.io.File r1, $r6, $r7;
        java.lang.String r2, r3;
        android.os.RemoteCallbackList $r4;
        android.graphics.Rect $r5;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$WallpaperData;

        i0 := @parameter0: int;

        r1 := @parameter1: java.io.File;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: java.lang.String name> = "";

        $r4 = new android.os.RemoteCallbackList;

        specialinvoke $r4.<android.os.RemoteCallbackList: void <init>()>();

        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: android.os.RemoteCallbackList callbacks> = $r4;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, 0, 0);

        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: android.graphics.Rect cropHint> = $r5;

        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: int userId> = i0;

        $r6 = new java.io.File;

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, r2);

        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: java.io.File wallpaperFile> = $r6;

        $r7 = new java.io.File;

        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, r3);

        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: java.io.File cropFile> = $r7;

        return;
    }

    static android.os.RemoteCallbackList access$3000(com.android.server.wallpaper.WallpaperManagerService$WallpaperData)
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperData r0;
        android.os.RemoteCallbackList $r1;

        r0 := @parameter0: com.android.server.wallpaper.WallpaperManagerService$WallpaperData;

        $r1 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: android.os.RemoteCallbackList callbacks>;

        return $r1;
    }

    boolean cropExists()
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperData r0;
        java.io.File $r1;
        boolean $z0;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$WallpaperData;

        $r1 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: java.io.File cropFile>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        return $z0;
    }

    boolean sourceExists()
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperData r0;
        java.io.File $r1;
        boolean $z0;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$WallpaperData;

        $r1 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: java.io.File wallpaperFile>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        return $z0;
    }
}
