class com.android.server.wallpaper.WallpaperManagerService$WallpaperObserver extends android.os.FileObserver
{
    final int mUserId;
    final com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper;
    final java.io.File mWallpaperDir;
    final java.io.File mWallpaperFile;
    final java.io.File mWallpaperLockFile;
    final com.android.server.wallpaper.WallpaperManagerService this$0;

    public void <init>(com.android.server.wallpaper.WallpaperManagerService, com.android.server.wallpaper.WallpaperManagerService$WallpaperData)
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperObserver r0;
        com.android.server.wallpaper.WallpaperManagerService r1;
        com.android.server.wallpaper.WallpaperManagerService$WallpaperData r2;
        int $i0, $i1, $i2;
        java.io.File $r3, $r5, $r6, $r7, $r8, $r9;
        java.lang.String $r4;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$WallpaperObserver;

        r1 := @parameter0: com.android.server.wallpaper.WallpaperManagerService;

        r2 := @parameter1: com.android.server.wallpaper.WallpaperManagerService$WallpaperData;

        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperObserver: com.android.server.wallpaper.WallpaperManagerService this$0> = r1;

        $i0 = r2.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: int userId>;

        $r3 = virtualinvoke r1.<com.android.server.wallpaper.WallpaperManagerService: java.io.File getWallpaperDir(int)>($i0);

        $r4 = virtualinvoke $r3.<java.io.File: java.lang.String getAbsolutePath()>();

        specialinvoke r0.<android.os.FileObserver: void <init>(java.lang.String,int)>($r4, 1672);

        $i1 = r2.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: int userId>;

        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperObserver: int mUserId> = $i1;

        $i2 = r2.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: int userId>;

        $r5 = virtualinvoke r1.<com.android.server.wallpaper.WallpaperManagerService: java.io.File getWallpaperDir(int)>($i2);

        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperObserver: java.io.File mWallpaperDir> = $r5;

        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperObserver: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper> = r2;

        $r6 = new java.io.File;

        $r7 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperObserver: java.io.File mWallpaperDir>;

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, "wallpaper_orig");

        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperObserver: java.io.File mWallpaperFile> = $r6;

        $r8 = new java.io.File;

        $r9 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperObserver: java.io.File mWallpaperDir>;

        specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>($r9, "wallpaper_lock_orig");

        r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperObserver: java.io.File mWallpaperLockFile> = $r8;

        return;
    }

    private com.android.server.wallpaper.WallpaperManagerService$WallpaperData dataForEvent(boolean, boolean)
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperObserver r0;
        boolean z0, z1;
        java.lang.Object r1, $r5, $r8;
        com.android.server.wallpaper.WallpaperManagerService $r2, $r3, $r6;
        android.util.SparseArray $r4, $r7;
        int $i0, $i1;
        java.lang.Throwable $r9;
        com.android.server.wallpaper.WallpaperManagerService$WallpaperData r10, r12;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$WallpaperObserver;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r10 = null;

        $r2 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperObserver: com.android.server.wallpaper.WallpaperManagerService this$0>;

        r1 = staticinvoke <com.android.server.wallpaper.WallpaperManagerService: java.lang.Object access$000(com.android.server.wallpaper.WallpaperManagerService)>($r2);

        entermonitor r1;

        if z1 == 0 goto label04;

     label01:
        $r6 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperObserver: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r7 = staticinvoke <com.android.server.wallpaper.WallpaperManagerService: android.util.SparseArray access$100(com.android.server.wallpaper.WallpaperManagerService)>($r6);

        $i1 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperObserver: int mUserId>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object get(int)>($i1);

        r10 = (com.android.server.wallpaper.WallpaperManagerService$WallpaperData) $r8;

     label02:
        goto label04;

     label03:
        $r9 := @caughtexception;

        goto label10;

     label04:
        r12 = r10;

        if r10 != null goto label06;

     label05:
        $r3 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperObserver: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r4 = staticinvoke <com.android.server.wallpaper.WallpaperManagerService: android.util.SparseArray access$200(com.android.server.wallpaper.WallpaperManagerService)>($r3);

        $i0 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperObserver: int mUserId>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        r12 = (com.android.server.wallpaper.WallpaperManagerService$WallpaperData) $r5;

     label06:
        exitmonitor r1;

     label07:
        if r12 == null goto label08;

        goto label09;

     label08:
        r12 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperObserver: com.android.server.wallpaper.WallpaperManagerService$WallpaperData mWallpaper>;

     label09:
        return r12;

     label10:
        exitmonitor r1;

     label11:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label05 to label06 with label03;
        catch java.lang.Throwable from label06 to label07 with label03;
        catch java.lang.Throwable from label10 to label11 with label03;
    }

    public void onEvent(int, java.lang.String)
    {
        com.android.server.wallpaper.WallpaperManagerService$WallpaperObserver r0;
        boolean z0, z1, z2, z6, z7;
        java.lang.Object r1;
        com.android.server.wallpaper.WallpaperManagerService $r2, $r3, $r4, $r5, $r6, $r8, $r10, $r11, $r12, $r13, r29, $r32;
        android.app.IWallpaperManagerCallback $r7, r33;
        android.util.SparseArray $r9;
        int $i2, $i3, $i4, $i5, i6, $i10;
        java.lang.Throwable $r14, $r15, $r16, $r17, $r19, r28;
        android.os.RemoteException $r18;
        java.lang.String r20;
        java.io.File $r21, $r22, $r24, $r25;
        com.android.server.wallpaper.WallpaperManagerService$WallpaperData r26, r31;
        byte b7, b8, b9;
        android.content.ComponentName r27, r30;

        r0 := @this: com.android.server.wallpaper.WallpaperManagerService$WallpaperObserver;

        i6 := @parameter0: int;

        r20 := @parameter1: java.lang.String;

        if r20 != null goto label01;

        return;

     label01:
        if i6 != 128 goto label02;

        z6 = 1;

        goto label03;

     label02:
        z6 = 0;

     label03:
        if i6 == 8 goto label05;

        if z6 == 0 goto label04;

        goto label05;

     label04:
        z7 = 0;

        goto label06;

     label05:
        z7 = 1;

     label06:
        $r21 = new java.io.File;

        $r22 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperObserver: java.io.File mWallpaperDir>;

        specialinvoke $r21.<java.io.File: void <init>(java.io.File,java.lang.String)>($r22, r20);

        $r24 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperObserver: java.io.File mWallpaperFile>;

        z0 = virtualinvoke $r24.<java.io.File: boolean equals(java.lang.Object)>($r21);

        $r25 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperObserver: java.io.File mWallpaperLockFile>;

        z1 = virtualinvoke $r25.<java.io.File: boolean equals(java.lang.Object)>($r21);

        r26 = specialinvoke r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperObserver: com.android.server.wallpaper.WallpaperManagerService$WallpaperData dataForEvent(boolean,boolean)>(z0, z1);

        if z6 == 0 goto label07;

        if z1 == 0 goto label07;

        staticinvoke <android.os.SELinux: boolean restorecon(java.io.File)>($r21);

        $r12 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperObserver: com.android.server.wallpaper.WallpaperManagerService this$0>;

        staticinvoke <com.android.server.wallpaper.WallpaperManagerService: void access$300(com.android.server.wallpaper.WallpaperManagerService)>($r12);

        $r13 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperObserver: com.android.server.wallpaper.WallpaperManagerService this$0>;

        staticinvoke <com.android.server.wallpaper.WallpaperManagerService: void access$400(com.android.server.wallpaper.WallpaperManagerService,com.android.server.wallpaper.WallpaperManagerService$WallpaperData,int)>($r13, r26, 2);

        return;

     label07:
        $r2 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperObserver: com.android.server.wallpaper.WallpaperManagerService this$0>;

        r1 = staticinvoke <com.android.server.wallpaper.WallpaperManagerService: java.lang.Object access$000(com.android.server.wallpaper.WallpaperManagerService)>($r2);

        entermonitor r1;

        if z0 != 0 goto label09;

        if z1 == 0 goto label08;

        goto label09;

     label08:
        b7 = 0;

        goto label41;

     label09:
        $r3 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperObserver: com.android.server.wallpaper.WallpaperManagerService this$0>;

        staticinvoke <com.android.server.wallpaper.WallpaperManagerService: void access$500(com.android.server.wallpaper.WallpaperManagerService,com.android.server.wallpaper.WallpaperManagerService$WallpaperData)>($r3, r26);

        r27 = r26.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: android.content.ComponentName wallpaperComponent>;

     label10:
        if r27 == null goto label15;

        if i6 != 8 goto label15;

     label11:
        z2 = r26.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: boolean imageWallpaperPending>;

     label12:
        if z2 == 0 goto label13;

        goto label15;

     label13:
        b7 = 0;

        goto label41;

     label14:
        $r15 := @caughtexception;

        r28 = $r15;

        goto label46;

     label15:
        if z7 == 0 goto label40;

     label16:
        staticinvoke <android.os.SELinux: boolean restorecon(java.io.File)>($r21);

     label17:
        if z6 == 0 goto label19;

     label18:
        $r11 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperObserver: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $i5 = r26.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: int userId>;

        staticinvoke <com.android.server.wallpaper.WallpaperManagerService: void access$600(com.android.server.wallpaper.WallpaperManagerService,int,boolean)>($r11, $i5, 1);

     label19:
        $r5 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperObserver: com.android.server.wallpaper.WallpaperManagerService this$0>;

        staticinvoke <com.android.server.wallpaper.WallpaperManagerService: void access$700(com.android.server.wallpaper.WallpaperManagerService,com.android.server.wallpaper.WallpaperManagerService$WallpaperData)>($r5, r26);

        r26.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: boolean imageWallpaperPending> = 0;

     label20:
        if z0 == 0 goto label26;

     label21:
        r29 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperObserver: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r10 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperObserver: com.android.server.wallpaper.WallpaperManagerService this$0>;

        r30 = staticinvoke <com.android.server.wallpaper.WallpaperManagerService: android.content.ComponentName access$800(com.android.server.wallpaper.WallpaperManagerService)>($r10);

     label22:
        staticinvoke <com.android.server.wallpaper.WallpaperManagerService: boolean access$900(com.android.server.wallpaper.WallpaperManagerService,android.content.ComponentName,boolean,boolean,com.android.server.wallpaper.WallpaperManagerService$WallpaperData,android.os.IRemoteCallback)>(r29, r30, 1, 0, r26, null);

     label23:
        b8 = 0 | 1;

        goto label27;

     label24:
        $r19 := @caughtexception;

        r28 = $r19;

        goto label46;

     label25:
        $r17 := @caughtexception;

        r28 = $r17;

        goto label46;

     label26:
        b8 = 0;

     label27:
        if z1 != 0 goto label30;

        b9 = b8;

     label28:
        $i3 = r26.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: int whichPending>;

        $i4 = $i3 & 2;

        if $i4 == 0 goto label34;

     label29:
        goto label30;

     label30:
        if z1 != 0 goto label32;

     label31:
        $r8 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperObserver: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $r9 = staticinvoke <com.android.server.wallpaper.WallpaperManagerService: android.util.SparseArray access$100(com.android.server.wallpaper.WallpaperManagerService)>($r8);

        $i2 = r26.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: int userId>;

        virtualinvoke $r9.<android.util.SparseArray: void remove(int)>($i2);

     label32:
        $r6 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperObserver: com.android.server.wallpaper.WallpaperManagerService this$0>;

        staticinvoke <com.android.server.wallpaper.WallpaperManagerService: void access$300(com.android.server.wallpaper.WallpaperManagerService)>($r6);

     label33:
        b9 = b8 | 2;

     label34:
        r31 = r26;

     label35:
        $r32 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperObserver: com.android.server.wallpaper.WallpaperManagerService this$0>;

        $i10 = r26.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: int userId>;

        staticinvoke <com.android.server.wallpaper.WallpaperManagerService: void access$1000(com.android.server.wallpaper.WallpaperManagerService,int)>($r32, $i10);

        r33 = r26.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: android.app.IWallpaperManagerCallback setComplete>;

     label36:
        b7 = b9;

        if r33 == null goto label41;

     label37:
        $r7 = r31.<com.android.server.wallpaper.WallpaperManagerService$WallpaperData: android.app.IWallpaperManagerCallback setComplete>;

        interfaceinvoke $r7.<android.app.IWallpaperManagerCallback: void onWallpaperChanged()>();

     label38:
        r26 = r31;

        b7 = b9;

        goto label41;

     label39:
        $r18 := @caughtexception;

        r26 = r31;

        b7 = b9;

        goto label41;

     label40:
        b7 = 0;

     label41:
        exitmonitor r1;

     label42:
        if b7 == 0 goto label43;

        $r4 = r0.<com.android.server.wallpaper.WallpaperManagerService$WallpaperObserver: com.android.server.wallpaper.WallpaperManagerService this$0>;

        staticinvoke <com.android.server.wallpaper.WallpaperManagerService: void access$400(com.android.server.wallpaper.WallpaperManagerService,com.android.server.wallpaper.WallpaperManagerService$WallpaperData,int)>($r4, r26, b7);

     label43:
        return;

     label44:
        $r14 := @caughtexception;

        r28 = $r14;

        goto label46;

     label45:
        $r16 := @caughtexception;

        r28 = $r16;

     label46:
        exitmonitor r1;

     label47:
        throw r28;

        catch java.lang.Throwable from label09 to label10 with label45;
        catch java.lang.Throwable from label11 to label12 with label14;
        catch java.lang.Throwable from label16 to label17 with label45;
        catch java.lang.Throwable from label18 to label19 with label14;
        catch java.lang.Throwable from label19 to label20 with label45;
        catch java.lang.Throwable from label21 to label22 with label25;
        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.Throwable from label28 to label29 with label44;
        catch java.lang.Throwable from label31 to label32 with label44;
        catch java.lang.Throwable from label32 to label33 with label44;
        catch java.lang.Throwable from label35 to label36 with label44;
        catch android.os.RemoteException from label37 to label38 with label39;
        catch java.lang.Throwable from label37 to label38 with label44;
        catch java.lang.Throwable from label41 to label42 with label44;
        catch java.lang.Throwable from label46 to label47 with label44;
    }
}
