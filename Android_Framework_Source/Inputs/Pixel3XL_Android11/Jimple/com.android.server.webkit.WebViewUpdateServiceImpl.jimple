public class com.android.server.webkit.WebViewUpdateServiceImpl extends java.lang.Object
{
    private static final int MULTIPROCESS_SETTING_OFF_VALUE;
    private static final int MULTIPROCESS_SETTING_ON_VALUE;
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private com.android.server.webkit.SystemInterface mSystemInterface;
    private com.android.server.webkit.WebViewUpdater mWebViewUpdater;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <com.android.server.webkit.WebViewUpdateServiceImpl: int MULTIPROCESS_SETTING_ON_VALUE> = 2147483647;

        <com.android.server.webkit.WebViewUpdateServiceImpl: int MULTIPROCESS_SETTING_OFF_VALUE> = -2147483648;

        $r0 = class "Lcom/android/server/webkit/WebViewUpdateServiceImpl;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.server.webkit.WebViewUpdateServiceImpl: java.lang.String TAG> = $r1;

        return;
    }

    public void <init>(android.content.Context, com.android.server.webkit.SystemInterface)
    {
        com.android.server.webkit.WebViewUpdateServiceImpl r0;
        android.content.Context r1, $r5;
        com.android.server.webkit.SystemInterface r2, $r4;
        com.android.server.webkit.WebViewUpdater $r3;

        r0 := @this: com.android.server.webkit.WebViewUpdateServiceImpl;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.webkit.SystemInterface;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.webkit.WebViewUpdateServiceImpl: android.content.Context mContext> = r1;

        r0.<com.android.server.webkit.WebViewUpdateServiceImpl: com.android.server.webkit.SystemInterface mSystemInterface> = r2;

        $r3 = new com.android.server.webkit.WebViewUpdater;

        $r5 = r0.<com.android.server.webkit.WebViewUpdateServiceImpl: android.content.Context mContext>;

        $r4 = r0.<com.android.server.webkit.WebViewUpdateServiceImpl: com.android.server.webkit.SystemInterface mSystemInterface>;

        specialinvoke $r3.<com.android.server.webkit.WebViewUpdater: void <init>(android.content.Context,com.android.server.webkit.SystemInterface)>($r5, $r4);

        r0.<com.android.server.webkit.WebViewUpdateServiceImpl: com.android.server.webkit.WebViewUpdater mWebViewUpdater> = $r3;

        return;
    }

    private static android.webkit.WebViewProviderInfo getFallbackProvider(android.webkit.WebViewProviderInfo[])
    {
        android.webkit.WebViewProviderInfo[] r0;
        int i0, i1;
        android.webkit.WebViewProviderInfo r1;
        boolean $z0;

        r0 := @parameter0: android.webkit.WebViewProviderInfo[];

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r1 = r0[i1];

        $z0 = r1.<android.webkit.WebViewProviderInfo: boolean isFallback>;

        if $z0 == 0 goto label2;

        return r1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    private void handleUserChange()
    {
        com.android.server.webkit.WebViewUpdateServiceImpl r0;
        com.android.server.webkit.WebViewUpdater $r1;

        r0 := @this: com.android.server.webkit.WebViewUpdateServiceImpl;

        $r1 = r0.<com.android.server.webkit.WebViewUpdateServiceImpl: com.android.server.webkit.WebViewUpdater mWebViewUpdater>;

        virtualinvoke $r1.<com.android.server.webkit.WebViewUpdater: android.content.pm.PackageInfo updateCurrentWebViewPackage(java.lang.String)>(null);

        return;
    }

    private void migrateFallbackStateOnBoot()
    {
        com.android.server.webkit.WebViewUpdateServiceImpl r0;
        android.webkit.WebViewProviderInfo r1;
        java.lang.String r2, $r7, $r11, $r13, $r14;
        com.android.server.webkit.SystemInterface $r4, $r5, $r8, $r16;
        boolean $z0;
        android.webkit.WebViewProviderInfo[] $r6;
        java.lang.StringBuilder $r9;
        android.content.Context $r15;

        r0 := @this: com.android.server.webkit.WebViewUpdateServiceImpl;

        $r4 = r0.<com.android.server.webkit.WebViewUpdateServiceImpl: com.android.server.webkit.SystemInterface mSystemInterface>;

        $z0 = interfaceinvoke $r4.<com.android.server.webkit.SystemInterface: boolean isFallbackLogicEnabled()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r5 = r0.<com.android.server.webkit.WebViewUpdateServiceImpl: com.android.server.webkit.SystemInterface mSystemInterface>;

        $r6 = interfaceinvoke $r5.<com.android.server.webkit.SystemInterface: android.webkit.WebViewProviderInfo[] getWebViewPackages()>();

        r1 = staticinvoke <com.android.server.webkit.WebViewUpdateServiceImpl: android.webkit.WebViewProviderInfo getFallbackProvider(android.webkit.WebViewProviderInfo[])>($r6);

        if r1 == null goto label2;

        r2 = <com.android.server.webkit.WebViewUpdateServiceImpl: java.lang.String TAG>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("One-time migration: enabling ");

        $r11 = r1.<android.webkit.WebViewProviderInfo: java.lang.String packageName>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r2, $r13);

        $r16 = r0.<com.android.server.webkit.WebViewUpdateServiceImpl: com.android.server.webkit.SystemInterface mSystemInterface>;

        $r15 = r0.<com.android.server.webkit.WebViewUpdateServiceImpl: android.content.Context mContext>;

        $r14 = r1.<android.webkit.WebViewProviderInfo: java.lang.String packageName>;

        interfaceinvoke $r16.<com.android.server.webkit.SystemInterface: void enablePackageForAllUsers(android.content.Context,java.lang.String,boolean)>($r15, $r14, 1);

        goto label3;

     label2:
        $r7 = <com.android.server.webkit.WebViewUpdateServiceImpl: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>($r7, "Skipping one-time migration: no fallback provider");

     label3:
        $r8 = r0.<com.android.server.webkit.WebViewUpdateServiceImpl: com.android.server.webkit.SystemInterface mSystemInterface>;

        interfaceinvoke $r8.<com.android.server.webkit.SystemInterface: void enableFallbackLogic(boolean)>(0);

        return;
    }

    java.lang.String changeProviderAndSetting(java.lang.String)
    {
        com.android.server.webkit.WebViewUpdateServiceImpl r0;
        java.lang.String r1, $r3;
        com.android.server.webkit.WebViewUpdater $r2;

        r0 := @this: com.android.server.webkit.WebViewUpdateServiceImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.webkit.WebViewUpdateServiceImpl: com.android.server.webkit.WebViewUpdater mWebViewUpdater>;

        $r3 = virtualinvoke $r2.<com.android.server.webkit.WebViewUpdater: java.lang.String changeProviderAndSetting(java.lang.String)>(r1);

        return $r3;
    }

    void dumpState(java.io.PrintWriter)
    {
        com.android.server.webkit.WebViewUpdateServiceImpl r0;
        java.io.PrintWriter r1;
        java.lang.Object[] $r2, $r6;
        com.android.server.webkit.SystemInterface $r3;
        boolean $z0, $z1;
        java.lang.Boolean $r4, $r7;
        java.lang.String $r5, $r8;
        com.android.server.webkit.WebViewUpdater $r9;

        r0 := @this: com.android.server.webkit.WebViewUpdateServiceImpl;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Current WebView Update Service state");

        $r2 = newarray (java.lang.Object)[1];

        $r3 = r0.<com.android.server.webkit.WebViewUpdateServiceImpl: com.android.server.webkit.SystemInterface mSystemInterface>;

        $z0 = interfaceinvoke $r3.<com.android.server.webkit.SystemInterface: boolean isFallbackLogicEnabled()>();

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r2[0] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("  Fallback logic enabled: %b", $r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        $r6 = newarray (java.lang.Object)[1];

        $z1 = virtualinvoke r0.<com.android.server.webkit.WebViewUpdateServiceImpl: boolean isMultiProcessEnabled()>();

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r6[0] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("  Multiprocess enabled: %b", $r6);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        $r9 = r0.<com.android.server.webkit.WebViewUpdateServiceImpl: com.android.server.webkit.WebViewUpdater mWebViewUpdater>;

        virtualinvoke $r9.<com.android.server.webkit.WebViewUpdater: void dumpState(java.io.PrintWriter)>(r1);

        return;
    }

    void enableMultiProcess(boolean)
    {
        com.android.server.webkit.WebViewUpdateServiceImpl r0;
        boolean z0;
        android.content.pm.PackageInfo r1;
        com.android.server.webkit.SystemInterface r2, $r4, $r6;
        android.content.Context r3;
        java.lang.String $r5;
        int i0;

        r0 := @this: com.android.server.webkit.WebViewUpdateServiceImpl;

        z0 := @parameter0: boolean;

        r1 = virtualinvoke r0.<com.android.server.webkit.WebViewUpdateServiceImpl: android.content.pm.PackageInfo getCurrentWebViewPackage()>();

        r2 = r0.<com.android.server.webkit.WebViewUpdateServiceImpl: com.android.server.webkit.SystemInterface mSystemInterface>;

        r3 = r0.<com.android.server.webkit.WebViewUpdateServiceImpl: android.content.Context mContext>;

        if z0 == 0 goto label1;

        i0 = 2147483647;

        goto label2;

     label1:
        i0 = -2147483648;

     label2:
        interfaceinvoke r2.<com.android.server.webkit.SystemInterface: void setMultiProcessSetting(android.content.Context,int)>(r3, i0);

        $r4 = r0.<com.android.server.webkit.WebViewUpdateServiceImpl: com.android.server.webkit.SystemInterface mSystemInterface>;

        interfaceinvoke $r4.<com.android.server.webkit.SystemInterface: void notifyZygote(boolean)>(z0);

        if r1 == null goto label3;

        $r6 = r0.<com.android.server.webkit.WebViewUpdateServiceImpl: com.android.server.webkit.SystemInterface mSystemInterface>;

        $r5 = r1.<android.content.pm.PackageInfo: java.lang.String packageName>;

        interfaceinvoke $r6.<com.android.server.webkit.SystemInterface: void killPackageDependents(java.lang.String)>($r5);

     label3:
        return;
    }

    android.content.pm.PackageInfo getCurrentWebViewPackage()
    {
        com.android.server.webkit.WebViewUpdateServiceImpl r0;
        com.android.server.webkit.WebViewUpdater $r1;
        android.content.pm.PackageInfo $r2;

        r0 := @this: com.android.server.webkit.WebViewUpdateServiceImpl;

        $r1 = r0.<com.android.server.webkit.WebViewUpdateServiceImpl: com.android.server.webkit.WebViewUpdater mWebViewUpdater>;

        $r2 = virtualinvoke $r1.<com.android.server.webkit.WebViewUpdater: android.content.pm.PackageInfo getCurrentWebViewPackage()>();

        return $r2;
    }

    android.webkit.WebViewProviderInfo[] getValidWebViewPackages()
    {
        com.android.server.webkit.WebViewUpdateServiceImpl r0;
        com.android.server.webkit.WebViewUpdater $r1;
        android.webkit.WebViewProviderInfo[] $r2;

        r0 := @this: com.android.server.webkit.WebViewUpdateServiceImpl;

        $r1 = r0.<com.android.server.webkit.WebViewUpdateServiceImpl: com.android.server.webkit.WebViewUpdater mWebViewUpdater>;

        $r2 = virtualinvoke $r1.<com.android.server.webkit.WebViewUpdater: android.webkit.WebViewProviderInfo[] getValidWebViewPackages()>();

        return $r2;
    }

    android.webkit.WebViewProviderInfo[] getWebViewPackages()
    {
        com.android.server.webkit.WebViewUpdateServiceImpl r0;
        com.android.server.webkit.SystemInterface $r1;
        android.webkit.WebViewProviderInfo[] $r2;

        r0 := @this: com.android.server.webkit.WebViewUpdateServiceImpl;

        $r1 = r0.<com.android.server.webkit.WebViewUpdateServiceImpl: com.android.server.webkit.SystemInterface mSystemInterface>;

        $r2 = interfaceinvoke $r1.<com.android.server.webkit.SystemInterface: android.webkit.WebViewProviderInfo[] getWebViewPackages()>();

        return $r2;
    }

    void handleNewUser(int)
    {
        com.android.server.webkit.WebViewUpdateServiceImpl r0;
        int i0;

        r0 := @this: com.android.server.webkit.WebViewUpdateServiceImpl;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        return;

     label1:
        specialinvoke r0.<com.android.server.webkit.WebViewUpdateServiceImpl: void handleUserChange()>();

        return;
    }

    void handleUserRemoved(int)
    {
        com.android.server.webkit.WebViewUpdateServiceImpl r0;
        int i0;

        r0 := @this: com.android.server.webkit.WebViewUpdateServiceImpl;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.webkit.WebViewUpdateServiceImpl: void handleUserChange()>();

        return;
    }

    boolean isMultiProcessEnabled()
    {
        com.android.server.webkit.WebViewUpdateServiceImpl r0;
        int i0;
        boolean z0, z2, z3;
        android.content.Context $r1;
        com.android.server.webkit.SystemInterface $r2, $r3;

        r0 := @this: com.android.server.webkit.WebViewUpdateServiceImpl;

        $r2 = r0.<com.android.server.webkit.WebViewUpdateServiceImpl: com.android.server.webkit.SystemInterface mSystemInterface>;

        $r1 = r0.<com.android.server.webkit.WebViewUpdateServiceImpl: android.content.Context mContext>;

        i0 = interfaceinvoke $r2.<com.android.server.webkit.SystemInterface: int getMultiProcessSetting(android.content.Context)>($r1);

        $r3 = r0.<com.android.server.webkit.WebViewUpdateServiceImpl: com.android.server.webkit.SystemInterface mSystemInterface>;

        z0 = interfaceinvoke $r3.<com.android.server.webkit.SystemInterface: boolean isMultiProcessDefaultEnabled()>();

        z2 = 1;

        if z0 == 0 goto label3;

        if i0 <= -2147483648 goto label1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;

     label3:
        if i0 < 2147483647 goto label4;

        z3 = 1;

        goto label5;

     label4:
        z3 = 0;

     label5:
        return z3;
    }

    void notifyRelroCreationCompleted()
    {
        com.android.server.webkit.WebViewUpdateServiceImpl r0;
        com.android.server.webkit.WebViewUpdater $r1;

        r0 := @this: com.android.server.webkit.WebViewUpdateServiceImpl;

        $r1 = r0.<com.android.server.webkit.WebViewUpdateServiceImpl: com.android.server.webkit.WebViewUpdater mWebViewUpdater>;

        virtualinvoke $r1.<com.android.server.webkit.WebViewUpdater: void notifyRelroCreationCompleted()>();

        return;
    }

    void packageStateChanged(java.lang.String, int, int)
    {
        com.android.server.webkit.WebViewUpdateServiceImpl r0;
        java.lang.String r1;
        int i0, i1;
        com.android.server.webkit.WebViewUpdater $r2;

        r0 := @this: com.android.server.webkit.WebViewUpdateServiceImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.server.webkit.WebViewUpdateServiceImpl: com.android.server.webkit.WebViewUpdater mWebViewUpdater>;

        virtualinvoke $r2.<com.android.server.webkit.WebViewUpdater: void packageStateChanged(java.lang.String,int)>(r1, i0);

        return;
    }

    void prepareWebViewInSystemServer()
    {
        com.android.server.webkit.WebViewUpdateServiceImpl r0;
        android.webkit.WebViewProviderInfo r1;
        java.lang.String r2, $r10, $r13, $r15, $r16;
        boolean z0;
        com.android.server.webkit.WebViewUpdater $r4;
        android.content.pm.PackageInfo $r5;
        com.android.server.webkit._$$Lambda$lAUGMGZZth095wGxrAtUYbmlIJY $r6;
        java.util.concurrent.Executor $r7;
        com.android.server.webkit.SystemInterface $r8, $r18, $r19;
        android.webkit.WebViewProviderInfo[] $r9;
        java.lang.StringBuilder $r11;
        android.content.Context $r17;

        r0 := @this: com.android.server.webkit.WebViewUpdateServiceImpl;

        specialinvoke r0.<com.android.server.webkit.WebViewUpdateServiceImpl: void migrateFallbackStateOnBoot()>();

        $r4 = r0.<com.android.server.webkit.WebViewUpdateServiceImpl: com.android.server.webkit.WebViewUpdater mWebViewUpdater>;

        virtualinvoke $r4.<com.android.server.webkit.WebViewUpdater: void prepareWebViewInSystemServer()>();

        $r5 = virtualinvoke r0.<com.android.server.webkit.WebViewUpdateServiceImpl: android.content.pm.PackageInfo getCurrentWebViewPackage()>();

        if $r5 != null goto label2;

        $r8 = r0.<com.android.server.webkit.WebViewUpdateServiceImpl: com.android.server.webkit.SystemInterface mSystemInterface>;

        $r9 = interfaceinvoke $r8.<com.android.server.webkit.SystemInterface: android.webkit.WebViewProviderInfo[] getWebViewPackages()>();

        r1 = staticinvoke <com.android.server.webkit.WebViewUpdateServiceImpl: android.webkit.WebViewProviderInfo getFallbackProvider(android.webkit.WebViewProviderInfo[])>($r9);

        if r1 == null goto label1;

        r2 = <com.android.server.webkit.WebViewUpdateServiceImpl: java.lang.String TAG>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No valid provider, trying to enable ");

        $r13 = r1.<android.webkit.WebViewProviderInfo: java.lang.String packageName>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r2, $r15);

        $r18 = r0.<com.android.server.webkit.WebViewUpdateServiceImpl: com.android.server.webkit.SystemInterface mSystemInterface>;

        $r17 = r0.<com.android.server.webkit.WebViewUpdateServiceImpl: android.content.Context mContext>;

        $r16 = r1.<android.webkit.WebViewProviderInfo: java.lang.String packageName>;

        interfaceinvoke $r18.<com.android.server.webkit.SystemInterface: void enablePackageForAllUsers(android.content.Context,java.lang.String,boolean)>($r17, $r16, 1);

        goto label2;

     label1:
        $r10 = <com.android.server.webkit.WebViewUpdateServiceImpl: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r10, "No valid provider and no fallback available.");

     label2:
        z0 = virtualinvoke r0.<com.android.server.webkit.WebViewUpdateServiceImpl: boolean isMultiProcessEnabled()>();

        $r19 = r0.<com.android.server.webkit.WebViewUpdateServiceImpl: com.android.server.webkit.SystemInterface mSystemInterface>;

        interfaceinvoke $r19.<com.android.server.webkit.SystemInterface: void notifyZygote(boolean)>(z0);

        if z0 == 0 goto label3;

        $r7 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        $r6 = new com.android.server.webkit._$$Lambda$lAUGMGZZth095wGxrAtUYbmlIJY;

        specialinvoke $r6.<com.android.server.webkit._$$Lambda$lAUGMGZZth095wGxrAtUYbmlIJY: void <init>(com.android.server.webkit.WebViewUpdateServiceImpl)>(r0);

        interfaceinvoke $r7.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r6);

     label3:
        return;
    }

    void startZygoteWhenReady()
    {
        com.android.server.webkit.WebViewUpdateServiceImpl r0;
        com.android.server.webkit.SystemInterface $r2;

        r0 := @this: com.android.server.webkit.WebViewUpdateServiceImpl;

        virtualinvoke r0.<com.android.server.webkit.WebViewUpdateServiceImpl: android.webkit.WebViewProviderResponse waitForAndGetProvider()>();

        $r2 = r0.<com.android.server.webkit.WebViewUpdateServiceImpl: com.android.server.webkit.SystemInterface mSystemInterface>;

        interfaceinvoke $r2.<com.android.server.webkit.SystemInterface: void ensureZygoteStarted()>();

        return;
    }

    android.webkit.WebViewProviderResponse waitForAndGetProvider()
    {
        com.android.server.webkit.WebViewUpdateServiceImpl r0;
        com.android.server.webkit.WebViewUpdater $r1;
        android.webkit.WebViewProviderResponse $r2;

        r0 := @this: com.android.server.webkit.WebViewUpdateServiceImpl;

        $r1 = r0.<com.android.server.webkit.WebViewUpdateServiceImpl: com.android.server.webkit.WebViewUpdater mWebViewUpdater>;

        $r2 = virtualinvoke $r1.<com.android.server.webkit.WebViewUpdater: android.webkit.WebViewProviderResponse waitForAndGetProvider()>();

        return $r2;
    }
}
