final class com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow extends java.lang.Object
{
    private static final java.lang.String SURFACE_TITLE;
    private int mAlpha;
    private final com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow$AnimationController mAnimationController;
    private final android.graphics.Region mBounds;
    private final android.graphics.Rect mDirtyRect;
    private boolean mInvalidated;
    private final android.graphics.Paint mPaint;
    private boolean mShown;
    private final android.view.Surface mSurface;
    private final android.view.SurfaceControl mSurfaceControl;
    final com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport this$1;

    public void <init>(com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport, android.content.Context)
    {
        com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow r0;
        com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport r1, $r6;
        android.content.Context r2;
        android.graphics.Region $r3;
        android.graphics.Rect $r4;
        android.graphics.Paint $r5, $r48, $r49, $r50;
        com.android.server.wm.AccessibilityController$DisplayMagnifier $r7, $r12, $r15, $r24, $r28, $r35, $r41;
        com.android.server.wm.WindowManagerService $r8, $r25, $r29, $r42;
        java.util.function.Supplier $r9, $r26;
        java.lang.Object $r10, $r27;
        android.view.Surface $r11, $r39;
        android.view.Display $r13;
        android.graphics.Point $r14, $r19, $r20;
        com.android.server.wm.DisplayContent $r16, $r37;
        android.view.SurfaceControl$Builder $r17, $r18, $r21, $r22, $r23;
        int $i0, $i1, $i2, $i3, $i4, i5, i6;
        com.android.server.policy.WindowManagerPolicy $r30;
        android.view.SurfaceControl $r31, $r33, $r36, $r38, r52, r53;
        android.view.SurfaceControl$Transaction $r32, r55;
        com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow$AnimationController $r40;
        com.android.server.wm.WindowManagerService$H $r43;
        android.os.Looper $r44;
        android.util.TypedValue $r45;
        android.content.res.Resources$Theme $r46;
        android.graphics.Paint$Style $r47;
        float $f0;
        android.view.Surface$OutOfResourcesException $r51;

        r0 := @this: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow;

        r1 := @parameter0: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport;

        r2 := @parameter1: android.content.Context;

        r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.graphics.Region;

        specialinvoke $r3.<android.graphics.Region: void <init>()>();

        r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: android.graphics.Region mBounds> = $r3;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: android.graphics.Rect mDirtyRect> = $r4;

        $r5 = new android.graphics.Paint;

        specialinvoke $r5.<android.graphics.Paint: void <init>()>();

        r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: android.graphics.Paint mPaint> = $r5;

        $r6 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport this$1>;

        $r7 = $r6.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: com.android.server.wm.AccessibilityController$DisplayMagnifier this$0>;

        $r8 = staticinvoke <com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.WindowManagerService access$1100(com.android.server.wm.AccessibilityController$DisplayMagnifier)>($r7);

        $r9 = $r8.<com.android.server.wm.WindowManagerService: java.util.function.Supplier mSurfaceFactory>;

        $r10 = interfaceinvoke $r9.<java.util.function.Supplier: java.lang.Object get()>();

        $r11 = (android.view.Surface) $r10;

        r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: android.view.Surface mSurface> = $r11;

        r52 = null;

     label1:
        $r12 = r1.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: com.android.server.wm.AccessibilityController$DisplayMagnifier this$0>;

        $r13 = staticinvoke <com.android.server.wm.AccessibilityController$DisplayMagnifier: android.view.Display access$100(com.android.server.wm.AccessibilityController$DisplayMagnifier)>($r12);

        $r14 = staticinvoke <com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: android.graphics.Point access$1200(com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport)>(r1);

        virtualinvoke $r13.<android.view.Display: void getRealSize(android.graphics.Point)>($r14);

        $r15 = r1.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: com.android.server.wm.AccessibilityController$DisplayMagnifier this$0>;

        $r16 = staticinvoke <com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.DisplayContent access$900(com.android.server.wm.AccessibilityController$DisplayMagnifier)>($r15);

        $r17 = virtualinvoke $r16.<com.android.server.wm.DisplayContent: android.view.SurfaceControl$Builder makeOverlay()>();

        $r18 = virtualinvoke $r17.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setName(java.lang.String)>("Magnification Overlay");

        $r19 = staticinvoke <com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: android.graphics.Point access$1200(com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport)>(r1);

        $i0 = $r19.<android.graphics.Point: int x>;

        $r20 = staticinvoke <com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: android.graphics.Point access$1200(com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport)>(r1);

        $i1 = $r20.<android.graphics.Point: int y>;

        $r21 = virtualinvoke $r18.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setBufferSize(int,int)>($i0, $i1);

        $r22 = virtualinvoke $r21.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setFormat(int)>(-3);

        $r23 = virtualinvoke $r22.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setCallsite(java.lang.String)>("ViewportWindow");

        r53 = virtualinvoke $r23.<android.view.SurfaceControl$Builder: android.view.SurfaceControl build()>();

     label2:
        r52 = r53;

        goto label4;

     label3:
        $r51 := @caughtexception;

     label4:
        r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: android.view.SurfaceControl mSurfaceControl> = r52;

        $r24 = r1.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: com.android.server.wm.AccessibilityController$DisplayMagnifier this$0>;

        $r25 = staticinvoke <com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.WindowManagerService access$1100(com.android.server.wm.AccessibilityController$DisplayMagnifier)>($r24);

        $r26 = $r25.<com.android.server.wm.WindowManagerService: java.util.function.Supplier mTransactionFactory>;

        $r27 = interfaceinvoke $r26.<java.util.function.Supplier: java.lang.Object get()>();

        r55 = (android.view.SurfaceControl$Transaction) $r27;

        $r28 = r1.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: com.android.server.wm.AccessibilityController$DisplayMagnifier this$0>;

        $r29 = staticinvoke <com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.WindowManagerService access$1100(com.android.server.wm.AccessibilityController$DisplayMagnifier)>($r28);

        $r30 = $r29.<com.android.server.wm.WindowManagerService: com.android.server.policy.WindowManagerPolicy mPolicy>;

        i5 = interfaceinvoke $r30.<com.android.server.policy.WindowManagerPolicy: int getWindowLayerFromTypeLw(int)>(2027);

        $r31 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: android.view.SurfaceControl mSurfaceControl>;

        $i2 = i5 * 10000;

        $r32 = virtualinvoke r55.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setLayer(android.view.SurfaceControl,int)>($r31, $i2);

        $r33 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r32.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setPosition(android.view.SurfaceControl,float,float)>($r33, 0.0F, 0.0F);

        $r36 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: android.view.SurfaceControl mSurfaceControl>;

        $r35 = r1.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: com.android.server.wm.AccessibilityController$DisplayMagnifier this$0>;

        $r37 = staticinvoke <com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.DisplayContent access$900(com.android.server.wm.AccessibilityController$DisplayMagnifier)>($r35);

        $i3 = virtualinvoke $r37.<com.android.server.wm.DisplayContent: int getDisplayId()>();

        staticinvoke <com.android.server.wm.InputMonitor: void setTrustedOverlayInputInfo(android.view.SurfaceControl,android.view.SurfaceControl$Transaction,int,java.lang.String)>($r36, r55, $i3, "Magnification Overlay");

        virtualinvoke r55.<android.view.SurfaceControl$Transaction: void apply()>();

        $r39 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: android.view.Surface mSurface>;

        $r38 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r39.<android.view.Surface: void copyFrom(android.view.SurfaceControl)>($r38);

        $r40 = new com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow$AnimationController;

        $r41 = r1.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: com.android.server.wm.AccessibilityController$DisplayMagnifier this$0>;

        $r42 = staticinvoke <com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.WindowManagerService access$1100(com.android.server.wm.AccessibilityController$DisplayMagnifier)>($r41);

        $r43 = $r42.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerService$H mH>;

        $r44 = virtualinvoke $r43.<com.android.server.wm.WindowManagerService$H: android.os.Looper getLooper()>();

        specialinvoke $r40.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow$AnimationController: void <init>(com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow,android.content.Context,android.os.Looper)>(r0, r2, $r44);

        r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow$AnimationController mAnimationController> = $r40;

        $r45 = new android.util.TypedValue;

        specialinvoke $r45.<android.util.TypedValue: void <init>()>();

        $r46 = virtualinvoke r2.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        virtualinvoke $r46.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(16843664, $r45, 1);

        $i4 = $r45.<android.util.TypedValue: int resourceId>;

        i6 = virtualinvoke r2.<android.content.Context: int getColor(int)>($i4);

        $r48 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: android.graphics.Paint mPaint>;

        $r47 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r48.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r47);

        $r49 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: android.graphics.Paint mPaint>;

        $f0 = staticinvoke <com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: float access$1300(com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport)>(r1);

        virtualinvoke $r49.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        $r50 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: android.graphics.Paint mPaint>;

        virtualinvoke $r50.<android.graphics.Paint: void setColor(int)>(i6);

        r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: boolean mInvalidated> = 1;

        return;

        catch android.view.Surface$OutOfResourcesException from label1 to label2 with label3;
    }

    public void drawIfNeeded(android.view.SurfaceControl$Transaction)
    {
        com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.graphics.Canvas r2, r26;
        com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport $r3, $r8, $r10;
        com.android.server.wm.AccessibilityController$DisplayMagnifier $r4;
        com.android.server.wm.WindowManagerService $r5;
        boolean $z0, $z1;
        android.view.SurfaceControl $r6, $r19;
        android.graphics.Rect $r7, $r9, $r11, $r20;
        android.view.Surface $r12, $r18;
        android.graphics.PorterDuff$Mode $r13;
        android.graphics.Paint $r14, $r17;
        android.graphics.Region $r15, $r21;
        android.graphics.Path $r16;
        java.lang.Throwable $r22, $r23;
        android.view.Surface$OutOfResourcesException $r24;
        android.view.SurfaceControl$Transaction r25;

        r0 := @this: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow;

        r25 := @parameter0: android.view.SurfaceControl$Transaction;

        $r3 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport this$1>;

        $r4 = $r3.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: com.android.server.wm.AccessibilityController$DisplayMagnifier this$0>;

        $r5 = staticinvoke <com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.WindowManagerService access$1100(com.android.server.wm.AccessibilityController$DisplayMagnifier)>($r4);

        r1 = $r5.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label01:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $z0 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: boolean mInvalidated>;

        if $z0 != 0 goto label03;

        exitmonitor r1;

     label02:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label03:
        r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: boolean mInvalidated> = 0;

        i0 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: int mAlpha>;

     label04:
        if i0 <= 0 goto label16;

        r26 = null;

     label05:
        $r7 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: android.graphics.Rect mDirtyRect>;

        $z1 = virtualinvoke $r7.<android.graphics.Rect: boolean isEmpty()>();

        if $z1 == 0 goto label06;

        $r21 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: android.graphics.Region mBounds>;

        $r20 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: android.graphics.Rect mDirtyRect>;

        virtualinvoke $r21.<android.graphics.Region: boolean getBounds(android.graphics.Rect)>($r20);

     label06:
        $r9 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: android.graphics.Rect mDirtyRect>;

        $r8 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport this$1>;

        $i1 = staticinvoke <com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: int access$1400(com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport)>($r8);

        $i2 = neg $i1;

        $r10 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport this$1>;

        $i3 = staticinvoke <com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: int access$1400(com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport)>($r10);

        $i4 = neg $i3;

        virtualinvoke $r9.<android.graphics.Rect: void inset(int,int)>($i2, $i4);

        $r12 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: android.view.Surface mSurface>;

        $r11 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: android.graphics.Rect mDirtyRect>;

        r2 = virtualinvoke $r12.<android.view.Surface: android.graphics.Canvas lockCanvas(android.graphics.Rect)>($r11);

     label07:
        r26 = r2;

     label08:
        goto label11;

     label09:
        $r24 := @caughtexception;

        r26 = null;

        goto label11;

     label10:
        $r23 := @caughtexception;

        goto label08;

     label11:
        if r26 != null goto label14;

     label12:
        exitmonitor r1;

     label13:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label14:
        $r13 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode CLEAR>;

        virtualinvoke r26.<android.graphics.Canvas: void drawColor(int,android.graphics.PorterDuff$Mode)>(0, $r13);

        $r14 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: android.graphics.Paint mPaint>;

        $i5 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: int mAlpha>;

        virtualinvoke $r14.<android.graphics.Paint: void setAlpha(int)>($i5);

        $r15 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: android.graphics.Region mBounds>;

        $r16 = virtualinvoke $r15.<android.graphics.Region: android.graphics.Path getBoundaryPath()>();

        $r17 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: android.graphics.Paint mPaint>;

        virtualinvoke r26.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r16, $r17);

        $r18 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: android.view.Surface mSurface>;

        virtualinvoke $r18.<android.view.Surface: void unlockCanvasAndPost(android.graphics.Canvas)>(r26);

        $r19 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke r25.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction show(android.view.SurfaceControl)>($r19);

     label15:
        goto label17;

     label16:
        $r6 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke r25.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction hide(android.view.SurfaceControl)>($r6);

     label17:
        exitmonitor r1;

     label18:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label19:
        $r22 := @caughtexception;

     label20:
        exitmonitor r1;

     label21:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r22;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.IllegalArgumentException from label05 to label06 with label10;
        catch android.view.Surface$OutOfResourcesException from label05 to label06 with label09;
        catch java.lang.Throwable from label05 to label06 with label19;
        catch java.lang.IllegalArgumentException from label06 to label07 with label10;
        catch android.view.Surface$OutOfResourcesException from label06 to label07 with label09;
        catch java.lang.Throwable from label06 to label07 with label19;
        catch java.lang.Throwable from label12 to label13 with label19;
        catch java.lang.Throwable from label14 to label15 with label19;
        catch java.lang.Throwable from label16 to label17 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
    }

    void dump(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r18;
        java.lang.StringBuilder $r4;
        android.graphics.Region $r7;
        android.graphics.Rect $r10;
        android.view.SurfaceControl $r13, $r16;
        int $i0, $i1;

        r0 := @this: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mBounds= ");

        $r7 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: android.graphics.Region mBounds>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mDirtyRect= ");

        $r10 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: android.graphics.Rect mDirtyRect>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mWidth= ");

        $r13 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: android.view.SurfaceControl mSurfaceControl>;

        $i0 = virtualinvoke $r13.<android.view.SurfaceControl: int getWidth()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mHeight= ");

        $r16 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: android.view.SurfaceControl mSurfaceControl>;

        $i1 = virtualinvoke $r16.<android.view.SurfaceControl: int getHeight()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r18 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r18);

        return;
    }

    public int getAlpha()
    {
        com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        int i0;
        com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport $r3;
        com.android.server.wm.AccessibilityController$DisplayMagnifier $r4;
        com.android.server.wm.WindowManagerService $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow;

        $r3 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport this$1>;

        $r4 = $r3.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: com.android.server.wm.AccessibilityController$DisplayMagnifier this$0>;

        $r5 = staticinvoke <com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.WindowManagerService access$1100(com.android.server.wm.AccessibilityController$DisplayMagnifier)>($r4);

        r1 = $r5.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        i0 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: int mAlpha>;

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return i0;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void invalidate(android.graphics.Rect)
    {
        com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow r0;
        android.graphics.Rect r1, $r2, $r6;
        com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport $r3;
        com.android.server.wm.AccessibilityController$DisplayMagnifier $r4;
        com.android.server.wm.WindowManagerService $r5;

        r0 := @this: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow;

        r1 := @parameter0: android.graphics.Rect;

        if r1 == null goto label1;

        $r6 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: android.graphics.Rect mDirtyRect>;

        virtualinvoke $r6.<android.graphics.Rect: void set(android.graphics.Rect)>(r1);

        goto label2;

     label1:
        $r2 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: android.graphics.Rect mDirtyRect>;

        virtualinvoke $r2.<android.graphics.Rect: void setEmpty()>();

     label2:
        r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: boolean mInvalidated> = 1;

        $r3 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport this$1>;

        $r4 = $r3.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: com.android.server.wm.AccessibilityController$DisplayMagnifier this$0>;

        $r5 = staticinvoke <com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.WindowManagerService access$1100(com.android.server.wm.AccessibilityController$DisplayMagnifier)>($r4);

        virtualinvoke $r5.<com.android.server.wm.WindowManagerService: void scheduleAnimationLocked()>();

        return;
    }

    public void releaseSurface()
    {
        com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow r0;
        com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport $r1;
        com.android.server.wm.AccessibilityController$DisplayMagnifier $r2;
        com.android.server.wm.WindowManagerService $r3;
        java.util.function.Supplier $r4;
        java.lang.Object $r5;
        android.view.SurfaceControl $r6;
        android.view.SurfaceControl$Transaction $r7, $r8;
        android.view.Surface $r9;

        r0 := @this: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow;

        $r1 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport this$1>;

        $r2 = $r1.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: com.android.server.wm.AccessibilityController$DisplayMagnifier this$0>;

        $r3 = staticinvoke <com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.WindowManagerService access$1100(com.android.server.wm.AccessibilityController$DisplayMagnifier)>($r2);

        $r4 = $r3.<com.android.server.wm.WindowManagerService: java.util.function.Supplier mTransactionFactory>;

        $r5 = interfaceinvoke $r4.<java.util.function.Supplier: java.lang.Object get()>();

        $r7 = (android.view.SurfaceControl$Transaction) $r5;

        $r6 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: android.view.SurfaceControl mSurfaceControl>;

        $r8 = virtualinvoke $r7.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction remove(android.view.SurfaceControl)>($r6);

        virtualinvoke $r8.<android.view.SurfaceControl$Transaction: void apply()>();

        $r9 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: android.view.Surface mSurface>;

        virtualinvoke $r9.<android.view.Surface: void release()>();

        return;
    }

    public void setAlpha(int)
    {
        com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow r0;
        int i0, $i1;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport $r3;
        com.android.server.wm.AccessibilityController$DisplayMagnifier $r4;
        com.android.server.wm.WindowManagerService $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport this$1>;

        $r4 = $r3.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: com.android.server.wm.AccessibilityController$DisplayMagnifier this$0>;

        $r5 = staticinvoke <com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.WindowManagerService access$1100(com.android.server.wm.AccessibilityController$DisplayMagnifier)>($r4);

        r1 = $r5.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $i1 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: int mAlpha>;

        if $i1 != i0 goto label3;

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: int mAlpha> = i0;

        virtualinvoke r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: void invalidate(android.graphics.Rect)>(null);

        exitmonitor r1;

     label4:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label5:
        $r6 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void setBounds(android.graphics.Region)
    {
        com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport $r2;
        com.android.server.wm.AccessibilityController$DisplayMagnifier $r3;
        com.android.server.wm.WindowManagerService $r4;
        android.graphics.Region $r5, $r6, r9;
        boolean $z0;
        android.graphics.Rect $r7;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow;

        r9 := @parameter0: android.graphics.Region;

        $r2 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport this$1>;

        $r3 = $r2.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: com.android.server.wm.AccessibilityController$DisplayMagnifier this$0>;

        $r4 = staticinvoke <com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.WindowManagerService access$1100(com.android.server.wm.AccessibilityController$DisplayMagnifier)>($r3);

        r1 = $r4.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r5 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: android.graphics.Region mBounds>;

        $z0 = virtualinvoke $r5.<android.graphics.Region: boolean equals(java.lang.Object)>(r9);

        if $z0 == 0 goto label3;

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r6 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: android.graphics.Region mBounds>;

        virtualinvoke $r6.<android.graphics.Region: boolean set(android.graphics.Region)>(r9);

        $r7 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: android.graphics.Rect mDirtyRect>;

        virtualinvoke r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: void invalidate(android.graphics.Rect)>($r7);

        exitmonitor r1;

     label4:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label5:
        $r8 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void setShown(boolean, boolean)
    {
        com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow r0;
        boolean z0, z1, $z2;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport $r3;
        com.android.server.wm.AccessibilityController$DisplayMagnifier $r4;
        com.android.server.wm.WindowManagerService $r5;
        com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow$AnimationController $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $r3 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport this$1>;

        $r4 = $r3.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: com.android.server.wm.AccessibilityController$DisplayMagnifier this$0>;

        $r5 = staticinvoke <com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.WindowManagerService access$1100(com.android.server.wm.AccessibilityController$DisplayMagnifier)>($r4);

        r1 = $r5.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $z2 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: boolean mShown>;

        if $z2 != z0 goto label3;

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: boolean mShown> = z0;

        $r6 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow$AnimationController mAnimationController>;

        virtualinvoke $r6.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow$AnimationController: void onFrameShownStateChanged(boolean,boolean)>(z0, z1);

        exitmonitor r1;

     label4:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label5:
        $r7 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void updateSize(android.view.SurfaceControl$Transaction)
    {
        com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport $r2, $r5, $r8, $r10, $r13;
        com.android.server.wm.AccessibilityController$DisplayMagnifier $r3, $r6;
        com.android.server.wm.WindowManagerService $r4;
        android.view.Display $r7;
        android.graphics.Point $r9, $r12, $r14;
        android.view.SurfaceControl $r11;
        int $i0, $i1;
        android.graphics.Rect $r16;
        java.lang.Throwable $r17;
        android.view.SurfaceControl$Transaction r18;

        r0 := @this: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow;

        r18 := @parameter0: android.view.SurfaceControl$Transaction;

        $r2 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport this$1>;

        $r3 = $r2.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: com.android.server.wm.AccessibilityController$DisplayMagnifier this$0>;

        $r4 = staticinvoke <com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.WindowManagerService access$1100(com.android.server.wm.AccessibilityController$DisplayMagnifier)>($r3);

        r1 = $r4.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r5 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport this$1>;

        $r6 = $r5.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: com.android.server.wm.AccessibilityController$DisplayMagnifier this$0>;

        $r7 = staticinvoke <com.android.server.wm.AccessibilityController$DisplayMagnifier: android.view.Display access$100(com.android.server.wm.AccessibilityController$DisplayMagnifier)>($r6);

        $r8 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport this$1>;

        $r9 = staticinvoke <com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: android.graphics.Point access$1200(com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport)>($r8);

        virtualinvoke $r7.<android.view.Display: void getRealSize(android.graphics.Point)>($r9);

        $r11 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: android.view.SurfaceControl mSurfaceControl>;

        $r10 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport this$1>;

        $r12 = staticinvoke <com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: android.graphics.Point access$1200(com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport)>($r10);

        $i0 = $r12.<android.graphics.Point: int x>;

        $r13 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport this$1>;

        $r14 = staticinvoke <com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: android.graphics.Point access$1200(com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport)>($r13);

        $i1 = $r14.<android.graphics.Point: int y>;

        virtualinvoke r18.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setBufferSize(android.view.SurfaceControl,int,int)>($r11, $i0, $i1);

        $r16 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: android.graphics.Rect mDirtyRect>;

        virtualinvoke r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: void invalidate(android.graphics.Rect)>($r16);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r17 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r17;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static void <clinit>()
    {
        <com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: java.lang.String SURFACE_TITLE> = "Magnification Overlay";

        return;
    }
}
