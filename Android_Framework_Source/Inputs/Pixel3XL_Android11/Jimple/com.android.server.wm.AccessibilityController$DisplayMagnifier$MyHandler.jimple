class com.android.server.wm.AccessibilityController$DisplayMagnifier$MyHandler extends android.os.Handler
{
    public static final int MESSAGE_NOTIFY_MAGNIFICATION_REGION_CHANGED;
    public static final int MESSAGE_NOTIFY_RECTANGLE_ON_SCREEN_REQUESTED;
    public static final int MESSAGE_NOTIFY_ROTATION_CHANGED;
    public static final int MESSAGE_NOTIFY_USER_CONTEXT_CHANGED;
    public static final int MESSAGE_SHOW_MAGNIFIED_REGION_BOUNDS_IF_NEEDED;
    final com.android.server.wm.AccessibilityController$DisplayMagnifier this$0;

    public void <init>(com.android.server.wm.AccessibilityController$DisplayMagnifier, android.os.Looper)
    {
        com.android.server.wm.AccessibilityController$DisplayMagnifier$MyHandler r0;
        com.android.server.wm.AccessibilityController$DisplayMagnifier r1;
        android.os.Looper r2;

        r0 := @this: com.android.server.wm.AccessibilityController$DisplayMagnifier$MyHandler;

        r1 := @parameter0: com.android.server.wm.AccessibilityController$DisplayMagnifier;

        r2 := @parameter1: android.os.Looper;

        r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MyHandler: com.android.server.wm.AccessibilityController$DisplayMagnifier this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r2);

        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.server.wm.AccessibilityController$DisplayMagnifier$MyHandler r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        int i0, i1, i2, i3, i4, i5;
        java.lang.Object $r2, $r4, $r7;
        com.android.internal.os.SomeArgs $r3, r26;
        com.android.server.wm.AccessibilityController$DisplayMagnifier $r5, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22;
        com.android.server.wm.WindowManagerInternal$MagnificationCallbacks $r6, $r9, $r11, $r13;
        com.android.server.wm.WindowManagerService $r15, $r21;
        com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport $r17, $r19;
        boolean $z0, $z1;
        java.lang.Throwable $r23;
        android.os.Message r24;
        android.graphics.Region r27;

        r0 := @this: com.android.server.wm.AccessibilityController$DisplayMagnifier$MyHandler;

        r24 := @parameter0: android.os.Message;

        i3 = r24.<android.os.Message: int what>;

        if i3 == 1 goto label12;

        if i3 == 2 goto label11;

        if i3 == 3 goto label10;

        if i3 == 4 goto label09;

        if i3 == 5 goto label01;

        goto label13;

     label01:
        $r14 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MyHandler: com.android.server.wm.AccessibilityController$DisplayMagnifier this$0>;

        $r15 = staticinvoke <com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.WindowManagerService access$1100(com.android.server.wm.AccessibilityController$DisplayMagnifier)>($r14);

        r1 = $r15.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label02:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r16 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MyHandler: com.android.server.wm.AccessibilityController$DisplayMagnifier this$0>;

        $r17 = staticinvoke <com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport access$1600(com.android.server.wm.AccessibilityController$DisplayMagnifier)>($r16);

        $z0 = virtualinvoke $r17.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: boolean isMagnifyingLocked()>();

        if $z0 != 0 goto label03;

        $r22 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MyHandler: com.android.server.wm.AccessibilityController$DisplayMagnifier this$0>;

        $z1 = virtualinvoke $r22.<com.android.server.wm.AccessibilityController$DisplayMagnifier: boolean isForceShowingMagnifiableBoundsLocked()>();

        if $z1 == 0 goto label04;

     label03:
        $r18 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MyHandler: com.android.server.wm.AccessibilityController$DisplayMagnifier this$0>;

        $r19 = staticinvoke <com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport access$1600(com.android.server.wm.AccessibilityController$DisplayMagnifier)>($r18);

        virtualinvoke $r19.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: void setMagnifiedRegionBorderShownLocked(boolean,boolean)>(1, 1);

        $r20 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MyHandler: com.android.server.wm.AccessibilityController$DisplayMagnifier this$0>;

        $r21 = staticinvoke <com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.WindowManagerService access$1100(com.android.server.wm.AccessibilityController$DisplayMagnifier)>($r20);

        virtualinvoke $r21.<com.android.server.wm.WindowManagerService: void scheduleAnimationLocked()>();

     label04:
        exitmonitor r1;

     label05:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        goto label13;

     label06:
        $r23 := @caughtexception;

     label07:
        exitmonitor r1;

     label08:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r23;

     label09:
        i4 = r24.<android.os.Message: int arg1>;

        $r12 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MyHandler: com.android.server.wm.AccessibilityController$DisplayMagnifier this$0>;

        $r13 = staticinvoke <com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.WindowManagerInternal$MagnificationCallbacks access$1500(com.android.server.wm.AccessibilityController$DisplayMagnifier)>($r12);

        interfaceinvoke $r13.<com.android.server.wm.WindowManagerInternal$MagnificationCallbacks: void onRotationChanged(int)>(i4);

        goto label13;

     label10:
        $r10 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MyHandler: com.android.server.wm.AccessibilityController$DisplayMagnifier this$0>;

        $r11 = staticinvoke <com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.WindowManagerInternal$MagnificationCallbacks access$1500(com.android.server.wm.AccessibilityController$DisplayMagnifier)>($r10);

        interfaceinvoke $r11.<com.android.server.wm.WindowManagerInternal$MagnificationCallbacks: void onUserContextChanged()>();

        goto label13;

     label11:
        $r7 = r24.<android.os.Message: java.lang.Object obj>;

        r26 = (com.android.internal.os.SomeArgs) $r7;

        i0 = r26.<com.android.internal.os.SomeArgs: int argi1>;

        i1 = r26.<com.android.internal.os.SomeArgs: int argi2>;

        i5 = r26.<com.android.internal.os.SomeArgs: int argi3>;

        i2 = r26.<com.android.internal.os.SomeArgs: int argi4>;

        $r8 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MyHandler: com.android.server.wm.AccessibilityController$DisplayMagnifier this$0>;

        $r9 = staticinvoke <com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.WindowManagerInternal$MagnificationCallbacks access$1500(com.android.server.wm.AccessibilityController$DisplayMagnifier)>($r8);

        interfaceinvoke $r9.<com.android.server.wm.WindowManagerInternal$MagnificationCallbacks: void onRectangleOnScreenRequested(int,int,int,int)>(i0, i1, i5, i2);

        virtualinvoke r26.<com.android.internal.os.SomeArgs: void recycle()>();

        goto label13;

     label12:
        $r2 = r24.<android.os.Message: java.lang.Object obj>;

        $r3 = (com.android.internal.os.SomeArgs) $r2;

        $r4 = $r3.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r27 = (android.graphics.Region) $r4;

        $r5 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MyHandler: com.android.server.wm.AccessibilityController$DisplayMagnifier this$0>;

        $r6 = staticinvoke <com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.WindowManagerInternal$MagnificationCallbacks access$1500(com.android.server.wm.AccessibilityController$DisplayMagnifier)>($r5);

        interfaceinvoke $r6.<com.android.server.wm.WindowManagerInternal$MagnificationCallbacks: void onMagnificationRegionChanged(android.graphics.Region)>(r27);

        virtualinvoke r27.<android.graphics.Region: void recycle()>();

     label13:
        return;

        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
    }

    public static void <clinit>()
    {
        <com.android.server.wm.AccessibilityController$DisplayMagnifier$MyHandler: int MESSAGE_SHOW_MAGNIFIED_REGION_BOUNDS_IF_NEEDED> = 5;

        <com.android.server.wm.AccessibilityController$DisplayMagnifier$MyHandler: int MESSAGE_NOTIFY_USER_CONTEXT_CHANGED> = 3;

        <com.android.server.wm.AccessibilityController$DisplayMagnifier$MyHandler: int MESSAGE_NOTIFY_ROTATION_CHANGED> = 4;

        <com.android.server.wm.AccessibilityController$DisplayMagnifier$MyHandler: int MESSAGE_NOTIFY_RECTANGLE_ON_SCREEN_REQUESTED> = 2;

        <com.android.server.wm.AccessibilityController$DisplayMagnifier$MyHandler: int MESSAGE_NOTIFY_MAGNIFICATION_REGION_CHANGED> = 1;

        return;
    }
}
