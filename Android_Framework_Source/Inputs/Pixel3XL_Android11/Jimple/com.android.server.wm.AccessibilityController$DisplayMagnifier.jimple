final class com.android.server.wm.AccessibilityController$DisplayMagnifier extends java.lang.Object
{
    private static final boolean DEBUG_LAYERS;
    private static final boolean DEBUG_RECTANGLE_REQUESTED;
    private static final boolean DEBUG_ROTATION;
    private static final boolean DEBUG_VIEWPORT_WINDOW;
    private static final boolean DEBUG_WINDOW_TRANSITIONS;
    private static final java.lang.String LOG_TAG;
    private final com.android.server.wm.WindowManagerInternal$MagnificationCallbacks mCallbacks;
    private final android.view.Display mDisplay;
    private final com.android.server.wm.DisplayContent mDisplayContent;
    private final android.content.Context mDisplayContext;
    private boolean mForceShowMagnifiableBounds;
    private final android.os.Handler mHandler;
    private final long mLongAnimationDuration;
    private final com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport mMagnifedViewport;
    private final com.android.server.wm.WindowManagerService mService;
    private final android.graphics.Rect mTempRect1;
    private final android.graphics.Rect mTempRect2;
    private final android.graphics.Region mTempRegion1;
    private final android.graphics.Region mTempRegion2;
    private final android.graphics.Region mTempRegion3;
    private final android.graphics.Region mTempRegion4;

    public void <init>(com.android.server.wm.WindowManagerService, com.android.server.wm.DisplayContent, android.view.Display, com.android.server.wm.WindowManagerInternal$MagnificationCallbacks)
    {
        com.android.server.wm.AccessibilityController$DisplayMagnifier r0;
        com.android.server.wm.WindowManagerService r1, $r14;
        com.android.server.wm.DisplayContent r2;
        android.view.Display r3;
        com.android.server.wm.WindowManagerInternal$MagnificationCallbacks r4;
        android.graphics.Rect $r5, $r6;
        android.graphics.Region $r7, $r8, $r9, $r10;
        android.content.Context $r11, $r12, $r18;
        com.android.server.wm.AccessibilityController$DisplayMagnifier$MyHandler $r13;
        com.android.server.wm.WindowManagerService$H $r15;
        android.os.Looper $r16;
        com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport $r17;
        android.content.res.Resources $r19;
        int $i0;
        long $l1;

        r0 := @this: com.android.server.wm.AccessibilityController$DisplayMagnifier;

        r1 := @parameter0: com.android.server.wm.WindowManagerService;

        r2 := @parameter1: com.android.server.wm.DisplayContent;

        r3 := @parameter2: android.view.Display;

        r4 := @parameter3: com.android.server.wm.WindowManagerInternal$MagnificationCallbacks;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: android.graphics.Rect mTempRect1> = $r5;

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: android.graphics.Rect mTempRect2> = $r6;

        $r7 = new android.graphics.Region;

        specialinvoke $r7.<android.graphics.Region: void <init>()>();

        r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: android.graphics.Region mTempRegion1> = $r7;

        $r8 = new android.graphics.Region;

        specialinvoke $r8.<android.graphics.Region: void <init>()>();

        r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: android.graphics.Region mTempRegion2> = $r8;

        $r9 = new android.graphics.Region;

        specialinvoke $r9.<android.graphics.Region: void <init>()>();

        r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: android.graphics.Region mTempRegion3> = $r9;

        $r10 = new android.graphics.Region;

        specialinvoke $r10.<android.graphics.Region: void <init>()>();

        r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: android.graphics.Region mTempRegion4> = $r10;

        r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: boolean mForceShowMagnifiableBounds> = 0;

        $r11 = r1.<com.android.server.wm.WindowManagerService: android.content.Context mContext>;

        $r12 = virtualinvoke $r11.<android.content.Context: android.content.Context createDisplayContext(android.view.Display)>(r3);

        r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: android.content.Context mDisplayContext> = $r12;

        r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.WindowManagerService mService> = r1;

        r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.WindowManagerInternal$MagnificationCallbacks mCallbacks> = r4;

        r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.DisplayContent mDisplayContent> = r2;

        r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: android.view.Display mDisplay> = r3;

        $r13 = new com.android.server.wm.AccessibilityController$DisplayMagnifier$MyHandler;

        $r14 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.WindowManagerService mService>;

        $r15 = $r14.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerService$H mH>;

        $r16 = virtualinvoke $r15.<com.android.server.wm.WindowManagerService$H: android.os.Looper getLooper()>();

        specialinvoke $r13.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MyHandler: void <init>(com.android.server.wm.AccessibilityController$DisplayMagnifier,android.os.Looper)>(r0, $r16);

        r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: android.os.Handler mHandler> = $r13;

        $r17 = new com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport;

        specialinvoke $r17.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: void <init>(com.android.server.wm.AccessibilityController$DisplayMagnifier)>(r0);

        r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport mMagnifedViewport> = $r17;

        $r18 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: android.content.Context mDisplayContext>;

        $r19 = virtualinvoke $r18.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r19.<android.content.res.Resources: int getInteger(int)>(17694722);

        $l1 = (long) $i0;

        r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: long mLongAnimationDuration> = $l1;

        return;
    }

    static android.content.Context access$000(com.android.server.wm.AccessibilityController$DisplayMagnifier)
    {
        com.android.server.wm.AccessibilityController$DisplayMagnifier r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.server.wm.AccessibilityController$DisplayMagnifier;

        $r1 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: android.content.Context mDisplayContext>;

        return $r1;
    }

    static android.view.Display access$100(com.android.server.wm.AccessibilityController$DisplayMagnifier)
    {
        com.android.server.wm.AccessibilityController$DisplayMagnifier r0;
        android.view.Display $r1;

        r0 := @parameter0: com.android.server.wm.AccessibilityController$DisplayMagnifier;

        $r1 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: android.view.Display mDisplay>;

        return $r1;
    }

    static long access$1000(com.android.server.wm.AccessibilityController$DisplayMagnifier)
    {
        com.android.server.wm.AccessibilityController$DisplayMagnifier r0;
        long $l0;

        r0 := @parameter0: com.android.server.wm.AccessibilityController$DisplayMagnifier;

        $l0 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: long mLongAnimationDuration>;

        return $l0;
    }

    static com.android.server.wm.WindowManagerService access$1100(com.android.server.wm.AccessibilityController$DisplayMagnifier)
    {
        com.android.server.wm.AccessibilityController$DisplayMagnifier r0;
        com.android.server.wm.WindowManagerService $r1;

        r0 := @parameter0: com.android.server.wm.AccessibilityController$DisplayMagnifier;

        $r1 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.WindowManagerService mService>;

        return $r1;
    }

    static com.android.server.wm.WindowManagerInternal$MagnificationCallbacks access$1500(com.android.server.wm.AccessibilityController$DisplayMagnifier)
    {
        com.android.server.wm.AccessibilityController$DisplayMagnifier r0;
        com.android.server.wm.WindowManagerInternal$MagnificationCallbacks $r1;

        r0 := @parameter0: com.android.server.wm.AccessibilityController$DisplayMagnifier;

        $r1 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.WindowManagerInternal$MagnificationCallbacks mCallbacks>;

        return $r1;
    }

    static com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport access$1600(com.android.server.wm.AccessibilityController$DisplayMagnifier)
    {
        com.android.server.wm.AccessibilityController$DisplayMagnifier r0;
        com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport $r1;

        r0 := @parameter0: com.android.server.wm.AccessibilityController$DisplayMagnifier;

        $r1 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport mMagnifedViewport>;

        return $r1;
    }

    static android.os.Handler access$200(com.android.server.wm.AccessibilityController$DisplayMagnifier)
    {
        com.android.server.wm.AccessibilityController$DisplayMagnifier r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.wm.AccessibilityController$DisplayMagnifier;

        $r1 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: android.os.Handler mHandler>;

        return $r1;
    }

    static android.graphics.Region access$300(com.android.server.wm.AccessibilityController$DisplayMagnifier)
    {
        com.android.server.wm.AccessibilityController$DisplayMagnifier r0;
        android.graphics.Region $r1;

        r0 := @parameter0: com.android.server.wm.AccessibilityController$DisplayMagnifier;

        $r1 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: android.graphics.Region mTempRegion1>;

        return $r1;
    }

    static android.graphics.Region access$400(com.android.server.wm.AccessibilityController$DisplayMagnifier)
    {
        com.android.server.wm.AccessibilityController$DisplayMagnifier r0;
        android.graphics.Region $r1;

        r0 := @parameter0: com.android.server.wm.AccessibilityController$DisplayMagnifier;

        $r1 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: android.graphics.Region mTempRegion4>;

        return $r1;
    }

    static android.graphics.Region access$600(com.android.server.wm.AccessibilityController$DisplayMagnifier)
    {
        com.android.server.wm.AccessibilityController$DisplayMagnifier r0;
        android.graphics.Region $r1;

        r0 := @parameter0: com.android.server.wm.AccessibilityController$DisplayMagnifier;

        $r1 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: android.graphics.Region mTempRegion3>;

        return $r1;
    }

    static android.graphics.Rect access$700(com.android.server.wm.AccessibilityController$DisplayMagnifier)
    {
        com.android.server.wm.AccessibilityController$DisplayMagnifier r0;
        android.graphics.Rect $r1;

        r0 := @parameter0: com.android.server.wm.AccessibilityController$DisplayMagnifier;

        $r1 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: android.graphics.Rect mTempRect1>;

        return $r1;
    }

    static android.graphics.Region access$800(com.android.server.wm.AccessibilityController$DisplayMagnifier)
    {
        com.android.server.wm.AccessibilityController$DisplayMagnifier r0;
        android.graphics.Region $r1;

        r0 := @parameter0: com.android.server.wm.AccessibilityController$DisplayMagnifier;

        $r1 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: android.graphics.Region mTempRegion2>;

        return $r1;
    }

    static com.android.server.wm.DisplayContent access$900(com.android.server.wm.AccessibilityController$DisplayMagnifier)
    {
        com.android.server.wm.AccessibilityController$DisplayMagnifier r0;
        com.android.server.wm.DisplayContent $r1;

        r0 := @parameter0: com.android.server.wm.AccessibilityController$DisplayMagnifier;

        $r1 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.DisplayContent mDisplayContent>;

        return $r1;
    }

    public void destroyLocked()
    {
        com.android.server.wm.AccessibilityController$DisplayMagnifier r0;
        com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport $r1;

        r0 := @this: com.android.server.wm.AccessibilityController$DisplayMagnifier;

        $r1 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport mMagnifedViewport>;

        virtualinvoke $r1.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: void destroyWindow()>();

        return;
    }

    public void drawMagnifiedRegionBorderIfNeededLocked(android.view.SurfaceControl$Transaction)
    {
        com.android.server.wm.AccessibilityController$DisplayMagnifier r0;
        android.view.SurfaceControl$Transaction r1;
        com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport $r2;

        r0 := @this: com.android.server.wm.AccessibilityController$DisplayMagnifier;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        $r2 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport mMagnifedViewport>;

        virtualinvoke $r2.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: void drawWindowIfNeededLocked(android.view.SurfaceControl$Transaction)>(r1);

        return;
    }

    void dump(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.wm.AccessibilityController$DisplayMagnifier r0;
        java.io.PrintWriter r1;
        java.lang.String r2;
        com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport $r3;

        r0 := @this: com.android.server.wm.AccessibilityController$DisplayMagnifier;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport mMagnifedViewport>;

        virtualinvoke $r3.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: void dump(java.io.PrintWriter,java.lang.String)>(r1, r2);

        return;
    }

    public void getMagnificationRegionLocked(android.graphics.Region)
    {
        com.android.server.wm.AccessibilityController$DisplayMagnifier r0;
        android.graphics.Region r1;
        com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport $r2, $r3;

        r0 := @this: com.android.server.wm.AccessibilityController$DisplayMagnifier;

        r1 := @parameter0: android.graphics.Region;

        $r2 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport mMagnifedViewport>;

        virtualinvoke $r2.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: void recomputeBoundsLocked()>();

        $r3 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport mMagnifedViewport>;

        virtualinvoke $r3.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: void getMagnificationRegionLocked(android.graphics.Region)>(r1);

        return;
    }

    public android.view.MagnificationSpec getMagnificationSpecForWindowLocked(com.android.server.wm.WindowState)
    {
        com.android.server.wm.AccessibilityController$DisplayMagnifier r0;
        com.android.server.wm.WindowState r1;
        android.view.MagnificationSpec r2;
        com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport $r3;
        boolean $z0, $z1;

        r0 := @this: com.android.server.wm.AccessibilityController$DisplayMagnifier;

        r1 := @parameter0: com.android.server.wm.WindowState;

        $r3 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport mMagnifedViewport>;

        r2 = virtualinvoke $r3.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: android.view.MagnificationSpec getMagnificationSpecLocked()>();

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<android.view.MagnificationSpec: boolean isNop()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r1.<com.android.server.wm.WindowState: boolean shouldMagnify()>();

        if $z1 != 0 goto label1;

        return null;

     label1:
        return r2;
    }

    public boolean isForceShowingMagnifiableBoundsLocked()
    {
        com.android.server.wm.AccessibilityController$DisplayMagnifier r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.AccessibilityController$DisplayMagnifier;

        $z0 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: boolean mForceShowMagnifiableBounds>;

        return $z0;
    }

    public void onAppWindowTransitionLocked(int, int)
    {
        com.android.server.wm.AccessibilityController$DisplayMagnifier r0;
        int i0, i1;
        com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport $r1;
        boolean $z0;
        android.os.Handler $r2;

        r0 := @this: com.android.server.wm.AccessibilityController$DisplayMagnifier;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport mMagnifedViewport>;

        $z0 = virtualinvoke $r1.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: boolean isMagnifyingLocked()>();

        if $z0 == 0 goto label3;

        tableswitch(i1)
        {
            case 6: goto label2;
            case 7: goto label1;
            case 8: goto label2;
            case 9: goto label1;
            case 10: goto label2;
            case 11: goto label1;
            case 12: goto label2;
            case 13: goto label2;
            case 14: goto label2;
            default: goto label1;
        };

     label1:
        goto label3;

     label2:
        $r2 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: boolean sendEmptyMessage(int)>(3);

     label3:
        return;
    }

    public void onRectangleOnScreenRequestedLocked(android.graphics.Rect)
    {
        com.android.server.wm.AccessibilityController$DisplayMagnifier r0;
        android.graphics.Rect r1, r6;
        com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport $r2, $r3;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3;
        android.os.Handler $r4;
        android.os.Message $r5;
        com.android.internal.os.SomeArgs r7;

        r0 := @this: com.android.server.wm.AccessibilityController$DisplayMagnifier;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport mMagnifedViewport>;

        $z0 = virtualinvoke $r2.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: boolean isMagnifyingLocked()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        r6 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: android.graphics.Rect mTempRect2>;

        $r3 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport mMagnifedViewport>;

        virtualinvoke $r3.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: void getMagnifiedFrameInContentCoordsLocked(android.graphics.Rect)>(r6);

        $z1 = virtualinvoke r6.<android.graphics.Rect: boolean contains(android.graphics.Rect)>(r1);

        if $z1 == 0 goto label2;

        return;

     label2:
        r7 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        $i0 = r1.<android.graphics.Rect: int left>;

        r7.<com.android.internal.os.SomeArgs: int argi1> = $i0;

        $i1 = r1.<android.graphics.Rect: int top>;

        r7.<com.android.internal.os.SomeArgs: int argi2> = $i1;

        $i2 = r1.<android.graphics.Rect: int right>;

        r7.<com.android.internal.os.SomeArgs: int argi3> = $i2;

        $i3 = r1.<android.graphics.Rect: int bottom>;

        r7.<com.android.internal.os.SomeArgs: int argi4> = $i3;

        $r4 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: android.os.Handler mHandler>;

        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(2, r7);

        virtualinvoke $r5.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void onRotationChangedLocked(com.android.server.wm.DisplayContent)
    {
        com.android.server.wm.AccessibilityController$DisplayMagnifier r0;
        com.android.server.wm.DisplayContent r1;
        com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport $r2;
        android.view.SurfaceControl$Transaction $r3;
        android.os.Handler $r4;

        r0 := @this: com.android.server.wm.AccessibilityController$DisplayMagnifier;

        r1 := @parameter0: com.android.server.wm.DisplayContent;

        $r2 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport mMagnifedViewport>;

        $r3 = virtualinvoke r1.<com.android.server.wm.DisplayContent: android.view.SurfaceControl$Transaction getPendingTransaction()>();

        virtualinvoke $r2.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: void onRotationChangedLocked(android.view.SurfaceControl$Transaction)>($r3);

        $r4 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: android.os.Handler mHandler>;

        virtualinvoke $r4.<android.os.Handler: boolean sendEmptyMessage(int)>(4);

        return;
    }

    public void onWindowLayersChangedLocked()
    {
        com.android.server.wm.AccessibilityController$DisplayMagnifier r0;
        com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport $r1;
        com.android.server.wm.WindowManagerService $r2;

        r0 := @this: com.android.server.wm.AccessibilityController$DisplayMagnifier;

        $r1 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport mMagnifedViewport>;

        virtualinvoke $r1.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: void recomputeBoundsLocked()>();

        $r2 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r2.<com.android.server.wm.WindowManagerService: void scheduleAnimationLocked()>();

        return;
    }

    public void onWindowTransitionLocked(com.android.server.wm.WindowState, int)
    {
        com.android.server.wm.AccessibilityController$DisplayMagnifier r0;
        com.android.server.wm.WindowState r1;
        int i0, i1, $i2, $i3, $i4, $i5;
        boolean z0, $z2;
        android.graphics.Rect r2, r3;
        com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport $r4, $r7;
        android.view.WindowManager$LayoutParams $r5;
        com.android.server.wm.WindowManagerInternal$MagnificationCallbacks $r6;
        android.graphics.Region $r8, $r9;

        r0 := @this: com.android.server.wm.AccessibilityController$DisplayMagnifier;

        r1 := @parameter0: com.android.server.wm.WindowState;

        i0 := @parameter1: int;

        $r4 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport mMagnifedViewport>;

        z0 = virtualinvoke $r4.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: boolean isMagnifyingLocked()>();

        $r5 = r1.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        i1 = $r5.<android.view.WindowManager$LayoutParams: int type>;

        if i0 == 1 goto label1;

        if i0 == 3 goto label1;

        goto label7;

     label1:
        if z0 != 0 goto label2;

        goto label7;

     label2:
        if i1 == 2 goto label6;

        if i1 == 4 goto label6;

        if i1 == 1005 goto label6;

        if i1 == 2020 goto label6;

        if i1 == 2024 goto label6;

        if i1 == 2035 goto label6;

        if i1 == 2038 goto label6;

        tableswitch(i1)
        {
            case 1000: goto label6;
            case 1001: goto label6;
            case 1002: goto label6;
            case 1003: goto label6;
            default: goto label3;
        };

     label3:
        tableswitch(i1)
        {
            case 2001: goto label6;
            case 2002: goto label6;
            case 2003: goto label6;
            default: goto label4;
        };

     label4:
        tableswitch(i1)
        {
            case 2005: goto label6;
            case 2006: goto label6;
            case 2007: goto label6;
            case 2008: goto label6;
            case 2009: goto label6;
            case 2010: goto label6;
            default: goto label5;
        };

     label5:
        goto label7;

     label6:
        r2 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: android.graphics.Rect mTempRect2>;

        $r7 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport mMagnifedViewport>;

        virtualinvoke $r7.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: void getMagnifiedFrameInContentCoordsLocked(android.graphics.Rect)>(r2);

        r3 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: android.graphics.Rect mTempRect1>;

        $r8 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: android.graphics.Region mTempRegion1>;

        virtualinvoke r1.<com.android.server.wm.WindowState: void getTouchableRegion(android.graphics.Region)>($r8);

        $r9 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: android.graphics.Region mTempRegion1>;

        virtualinvoke $r9.<android.graphics.Region: boolean getBounds(android.graphics.Rect)>(r3);

        $z2 = virtualinvoke r2.<android.graphics.Rect: boolean intersect(android.graphics.Rect)>(r3);

        if $z2 != 0 goto label7;

        $r6 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.WindowManagerInternal$MagnificationCallbacks mCallbacks>;

        $i5 = r3.<android.graphics.Rect: int left>;

        $i4 = r3.<android.graphics.Rect: int top>;

        $i3 = r3.<android.graphics.Rect: int right>;

        $i2 = r3.<android.graphics.Rect: int bottom>;

        interfaceinvoke $r6.<com.android.server.wm.WindowManagerInternal$MagnificationCallbacks: void onRectangleOnScreenRequested(int,int,int,int)>($i5, $i4, $i3, $i2);

     label7:
        return;
    }

    public void setForceShowMagnifiableBoundsLocked(boolean)
    {
        com.android.server.wm.AccessibilityController$DisplayMagnifier r0;
        boolean z0;
        com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport $r1;

        r0 := @this: com.android.server.wm.AccessibilityController$DisplayMagnifier;

        z0 := @parameter0: boolean;

        r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: boolean mForceShowMagnifiableBounds> = z0;

        $r1 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport mMagnifedViewport>;

        virtualinvoke $r1.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: void setMagnifiedRegionBorderShownLocked(boolean,boolean)>(z0, 1);

        return;
    }

    public void setMagnificationSpecLocked(android.view.MagnificationSpec)
    {
        com.android.server.wm.AccessibilityController$DisplayMagnifier r0;
        android.view.MagnificationSpec r1;
        com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport $r2, $r3;
        android.view.Display $r4;
        com.android.server.wm.WindowManagerService $r5, $r6;
        int $i0;

        r0 := @this: com.android.server.wm.AccessibilityController$DisplayMagnifier;

        r1 := @parameter0: android.view.MagnificationSpec;

        $r2 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport mMagnifedViewport>;

        virtualinvoke $r2.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: void updateMagnificationSpecLocked(android.view.MagnificationSpec)>(r1);

        $r3 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport mMagnifedViewport>;

        virtualinvoke $r3.<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: void recomputeBoundsLocked()>();

        $r5 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.WindowManagerService mService>;

        $r4 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: android.view.Display mDisplay>;

        $i0 = virtualinvoke $r4.<android.view.Display: int getDisplayId()>();

        virtualinvoke $r5.<com.android.server.wm.WindowManagerService: void applyMagnificationSpecLocked(int,android.view.MagnificationSpec)>($i0, r1);

        $r6 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r6.<com.android.server.wm.WindowManagerService: void scheduleAnimationLocked()>();

        return;
    }

    public void showMagnificationBoundsIfNeeded()
    {
        com.android.server.wm.AccessibilityController$DisplayMagnifier r0;
        android.os.Handler $r1;
        android.os.Message $r2;

        r0 := @this: com.android.server.wm.AccessibilityController$DisplayMagnifier;

        $r1 = r0.<com.android.server.wm.AccessibilityController$DisplayMagnifier: android.os.Handler mHandler>;

        $r2 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int)>(5);

        virtualinvoke $r2.<android.os.Message: void sendToTarget()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.wm.AccessibilityController$DisplayMagnifier: java.lang.String LOG_TAG> = "WindowManager";

        <com.android.server.wm.AccessibilityController$DisplayMagnifier: boolean DEBUG_WINDOW_TRANSITIONS> = 0;

        <com.android.server.wm.AccessibilityController$DisplayMagnifier: boolean DEBUG_VIEWPORT_WINDOW> = 0;

        <com.android.server.wm.AccessibilityController$DisplayMagnifier: boolean DEBUG_ROTATION> = 0;

        <com.android.server.wm.AccessibilityController$DisplayMagnifier: boolean DEBUG_RECTANGLE_REQUESTED> = 0;

        <com.android.server.wm.AccessibilityController$DisplayMagnifier: boolean DEBUG_LAYERS> = 0;

        return;
    }
}
