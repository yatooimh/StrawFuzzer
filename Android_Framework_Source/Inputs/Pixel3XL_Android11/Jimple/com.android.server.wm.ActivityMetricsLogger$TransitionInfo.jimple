final class com.android.server.wm.ActivityMetricsLogger$TransitionInfo extends java.lang.Object
{
    int mBindApplicationDelayMs;
    int mCurrentTransitionDelayMs;
    final int mCurrentTransitionDeviceUptime;
    com.android.server.wm.ActivityRecord mLastLaunchedActivity;
    java.lang.String mLaunchTraceName;
    final com.android.server.wm.ActivityMetricsLogger$LaunchingState mLaunchingState;
    boolean mLoggedStartingWindowDrawn;
    boolean mLoggedTransitionStarting;
    final java.util.LinkedList mPendingDrawActivities;
    java.lang.Runnable mPendingFullyDrawn;
    final boolean mProcessRunning;
    final boolean mProcessSwitch;
    int mReason;
    int mStartingWindowDelayMs;
    final long mTransitionStartTimeNs;
    final int mTransitionType;
    int mWindowsDrawnDelayMs;

    private void <init>(com.android.server.wm.ActivityRecord, com.android.server.wm.ActivityMetricsLogger$LaunchingState, int, boolean, boolean)
    {
        com.android.server.wm.ActivityMetricsLogger$TransitionInfo r0;
        com.android.server.wm.ActivityRecord r1;
        com.android.server.wm.ActivityMetricsLogger$LaunchingState r2;
        int i0, $i4;
        boolean z0, z1;
        java.util.LinkedList $r3;
        long $l1, $l2, $l3;
        java.util.concurrent.TimeUnit $r4;

        r0 := @this: com.android.server.wm.ActivityMetricsLogger$TransitionInfo;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        r2 := @parameter1: com.android.server.wm.ActivityMetricsLogger$LaunchingState;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

        r0.<com.android.server.wm.ActivityMetricsLogger$TransitionInfo: java.util.LinkedList mPendingDrawActivities> = $r3;

        r0.<com.android.server.wm.ActivityMetricsLogger$TransitionInfo: int mStartingWindowDelayMs> = -1;

        r0.<com.android.server.wm.ActivityMetricsLogger$TransitionInfo: int mBindApplicationDelayMs> = -1;

        r0.<com.android.server.wm.ActivityMetricsLogger$TransitionInfo: int mReason> = 3;

        r0.<com.android.server.wm.ActivityMetricsLogger$TransitionInfo: com.android.server.wm.ActivityMetricsLogger$LaunchingState mLaunchingState> = r2;

        $l1 = staticinvoke <com.android.server.wm.ActivityMetricsLogger$LaunchingState: long access$000(com.android.server.wm.ActivityMetricsLogger$LaunchingState)>(r2);

        r0.<com.android.server.wm.ActivityMetricsLogger$TransitionInfo: long mTransitionStartTimeNs> = $l1;

        r0.<com.android.server.wm.ActivityMetricsLogger$TransitionInfo: int mTransitionType> = i0;

        r0.<com.android.server.wm.ActivityMetricsLogger$TransitionInfo: boolean mProcessRunning> = z0;

        r0.<com.android.server.wm.ActivityMetricsLogger$TransitionInfo: boolean mProcessSwitch> = z1;

        $r4 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l3 = virtualinvoke $r4.<java.util.concurrent.TimeUnit: long toSeconds(long)>($l2);

        $i4 = (int) $l3;

        r0.<com.android.server.wm.ActivityMetricsLogger$TransitionInfo: int mCurrentTransitionDeviceUptime> = $i4;

        virtualinvoke r0.<com.android.server.wm.ActivityMetricsLogger$TransitionInfo: void setLatestLaunchedActivity(com.android.server.wm.ActivityRecord)>(r1);

        staticinvoke <com.android.server.wm.ActivityMetricsLogger$LaunchingState: com.android.server.wm.ActivityMetricsLogger$TransitionInfo access$102(com.android.server.wm.ActivityMetricsLogger$LaunchingState,com.android.server.wm.ActivityMetricsLogger$TransitionInfo)>(r2, r0);

        return;
    }

    static com.android.server.wm.ActivityMetricsLogger$TransitionInfo create(com.android.server.wm.ActivityRecord, com.android.server.wm.ActivityMetricsLogger$LaunchingState, boolean, boolean, int)
    {
        com.android.server.wm.ActivityRecord r0;
        com.android.server.wm.ActivityMetricsLogger$LaunchingState r1;
        boolean z0, z1;
        int i0;
        com.android.server.wm.ActivityMetricsLogger$TransitionInfo $r2;
        byte b1;

        r0 := @parameter0: com.android.server.wm.ActivityRecord;

        r1 := @parameter1: com.android.server.wm.ActivityMetricsLogger$LaunchingState;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        i0 := @parameter4: int;

        b1 = -1;

        if z0 == 0 goto label2;

        if i0 != 0 goto label1;

        b1 = 8;

        goto label4;

     label1:
        if i0 != 2 goto label4;

        b1 = 9;

        goto label4;

     label2:
        if i0 == 0 goto label3;

        if i0 != 2 goto label4;

     label3:
        b1 = 7;

     label4:
        if b1 != -1 goto label5;

        return null;

     label5:
        $r2 = new com.android.server.wm.ActivityMetricsLogger$TransitionInfo;

        specialinvoke $r2.<com.android.server.wm.ActivityMetricsLogger$TransitionInfo: void <init>(com.android.server.wm.ActivityRecord,com.android.server.wm.ActivityMetricsLogger$LaunchingState,int,boolean,boolean)>(r0, r1, b1, z0, z1);

        return $r2;
    }

    boolean allDrawn()
    {
        com.android.server.wm.ActivityMetricsLogger$TransitionInfo r0;
        java.util.LinkedList $r1;
        boolean $z0;

        r0 := @this: com.android.server.wm.ActivityMetricsLogger$TransitionInfo;

        $r1 = r0.<com.android.server.wm.ActivityMetricsLogger$TransitionInfo: java.util.LinkedList mPendingDrawActivities>;

        $z0 = virtualinvoke $r1.<java.util.LinkedList: boolean isEmpty()>();

        return $z0;
    }

    int calculateCurrentDelay()
    {
        com.android.server.wm.ActivityMetricsLogger$TransitionInfo r0;
        long $l0;
        int $i1;

        r0 := @this: com.android.server.wm.ActivityMetricsLogger$TransitionInfo;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtimeNanos()>();

        $i1 = virtualinvoke r0.<com.android.server.wm.ActivityMetricsLogger$TransitionInfo: int calculateDelay(long)>($l0);

        return $i1;
    }

    int calculateDelay(long)
    {
        com.android.server.wm.ActivityMetricsLogger$TransitionInfo r0;
        long l0, $l1, $l2, $l3;
        java.util.concurrent.TimeUnit $r1;
        int $i4;

        r0 := @this: com.android.server.wm.ActivityMetricsLogger$TransitionInfo;

        l0 := @parameter0: long;

        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        $l1 = r0.<com.android.server.wm.ActivityMetricsLogger$TransitionInfo: long mTransitionStartTimeNs>;

        $l2 = l0 - $l1;

        $l3 = virtualinvoke $r1.<java.util.concurrent.TimeUnit: long toMillis(long)>($l2);

        $i4 = (int) $l3;

        return $i4;
    }

    boolean contains(com.android.server.wm.WindowContainer)
    {
        com.android.server.wm.ActivityMetricsLogger$TransitionInfo r0;
        com.android.server.wm.ActivityRecord $r1, r4;
        java.util.LinkedList $r2;
        boolean $z0, z1;
        com.android.server.wm.WindowContainer r3;

        r0 := @this: com.android.server.wm.ActivityMetricsLogger$TransitionInfo;

        r3 := @parameter0: com.android.server.wm.WindowContainer;

        r4 = staticinvoke <com.android.server.wm.AppTransitionController: com.android.server.wm.ActivityRecord getAppFromContainer(com.android.server.wm.WindowContainer)>(r3);

        if r4 == null goto label2;

        $r1 = r0.<com.android.server.wm.ActivityMetricsLogger$TransitionInfo: com.android.server.wm.ActivityRecord mLastLaunchedActivity>;

        if r4 == $r1 goto label1;

        $r2 = r0.<com.android.server.wm.ActivityMetricsLogger$TransitionInfo: java.util.LinkedList mPendingDrawActivities>;

        $z0 = virtualinvoke $r2.<java.util.LinkedList: boolean contains(java.lang.Object)>(r4);

        if $z0 == 0 goto label2;

     label1:
        z1 = 1;

        goto label3;

     label2:
        z1 = 0;

     label3:
        return z1;
    }

    boolean isInterestingToLoggerAndObserver()
    {
        com.android.server.wm.ActivityMetricsLogger$TransitionInfo r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.ActivityMetricsLogger$TransitionInfo;

        $z0 = r0.<com.android.server.wm.ActivityMetricsLogger$TransitionInfo: boolean mProcessSwitch>;

        return $z0;
    }

    void removePendingDrawActivity(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.ActivityMetricsLogger$TransitionInfo r0;
        com.android.server.wm.ActivityRecord r1;
        java.util.LinkedList $r2;

        r0 := @this: com.android.server.wm.ActivityMetricsLogger$TransitionInfo;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        $r2 = r0.<com.android.server.wm.ActivityMetricsLogger$TransitionInfo: java.util.LinkedList mPendingDrawActivities>;

        virtualinvoke $r2.<java.util.LinkedList: boolean remove(java.lang.Object)>(r1);

        return;
    }

    void setLatestLaunchedActivity(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.ActivityMetricsLogger$TransitionInfo r0;
        com.android.server.wm.ActivityRecord r1, $r2;
        boolean $z0;
        java.util.LinkedList $r3;

        r0 := @this: com.android.server.wm.ActivityMetricsLogger$TransitionInfo;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        $r2 = r0.<com.android.server.wm.ActivityMetricsLogger$TransitionInfo: com.android.server.wm.ActivityRecord mLastLaunchedActivity>;

        if $r2 != r1 goto label1;

        return;

     label1:
        r0.<com.android.server.wm.ActivityMetricsLogger$TransitionInfo: com.android.server.wm.ActivityRecord mLastLaunchedActivity> = r1;

        $z0 = r1.<com.android.server.wm.ActivityRecord: boolean noDisplay>;

        if $z0 != 0 goto label2;

        $r3 = r0.<com.android.server.wm.ActivityMetricsLogger$TransitionInfo: java.util.LinkedList mPendingDrawActivities>;

        virtualinvoke $r3.<java.util.LinkedList: boolean add(java.lang.Object)>(r1);

     label2:
        return;
    }

    public java.lang.String toString()
    {
        com.android.server.wm.ActivityMetricsLogger$TransitionInfo r0;
        java.lang.StringBuilder $r2;
        int $i0;
        java.lang.String $r4, $r13;
        com.android.server.wm.ActivityRecord $r7;
        java.util.LinkedList $r10;

        r0 := @this: com.android.server.wm.ActivityMetricsLogger$TransitionInfo;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TransitionInfo{");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" a=");

        $r7 = r0.<com.android.server.wm.ActivityMetricsLogger$TransitionInfo: com.android.server.wm.ActivityRecord mLastLaunchedActivity>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ua=");

        $r10 = r0.<com.android.server.wm.ActivityMetricsLogger$TransitionInfo: java.util.LinkedList mPendingDrawActivities>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r13 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }
}
