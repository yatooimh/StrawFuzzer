class com.android.server.wm.ActivityRecord$1 extends java.lang.Object implements java.lang.Runnable
{
    final com.android.server.wm.ActivityRecord this$0;

    void <init>(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.ActivityRecord$1 r0;
        com.android.server.wm.ActivityRecord r1;

        r0 := @this: com.android.server.wm.ActivityRecord$1;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        r0.<com.android.server.wm.ActivityRecord$1: com.android.server.wm.ActivityRecord this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        com.android.server.wm.ActivityRecord$1 r0;
        com.android.server.wm.WindowProcessController r1;
        long l0;
        java.lang.StringBuilder r2, $r3;
        com.android.server.wm.ActivityRecord $r5, $r8, $r10, $r11, $r12, $r13, $r14, $r16;
        java.lang.String $r7, $r18;
        com.android.server.wm.ActivityTaskManagerService $r9, r22;
        boolean $z0;
        java.lang.Throwable $r19;
        com.android.server.wm.WindowManagerGlobalLock r21;

        r0 := @this: com.android.server.wm.ActivityRecord$1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity pause timeout for ");

        $r5 = r0.<com.android.server.wm.ActivityRecord$1: com.android.server.wm.ActivityRecord this$0>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityTaskManager", $r7);

        $r8 = r0.<com.android.server.wm.ActivityRecord$1: com.android.server.wm.ActivityRecord this$0>;

        $r9 = $r8.<com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityTaskManagerService mAtmService>;

        r21 = $r9.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r21;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r10 = r0.<com.android.server.wm.ActivityRecord$1: com.android.server.wm.ActivityRecord this$0>;

        $z0 = virtualinvoke $r10.<com.android.server.wm.ActivityRecord: boolean hasProcess()>();

        if $z0 == 0 goto label2;

        $r12 = r0.<com.android.server.wm.ActivityRecord$1: com.android.server.wm.ActivityRecord this$0>;

        r22 = $r12.<com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityTaskManagerService mAtmService>;

        $r13 = r0.<com.android.server.wm.ActivityRecord$1: com.android.server.wm.ActivityRecord this$0>;

        r1 = $r13.<com.android.server.wm.ActivityRecord: com.android.server.wm.WindowProcessController app>;

        $r14 = r0.<com.android.server.wm.ActivityRecord$1: com.android.server.wm.ActivityRecord this$0>;

        l0 = $r14.<com.android.server.wm.ActivityRecord: long pauseTime>;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pausing ");

        $r16 = r0.<com.android.server.wm.ActivityRecord$1: com.android.server.wm.ActivityRecord this$0>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r22.<com.android.server.wm.ActivityTaskManagerService: void logAppTooSlow(com.android.server.wm.WindowProcessController,long,java.lang.String)>(r1, l0, $r18);

     label2:
        $r11 = r0.<com.android.server.wm.ActivityRecord$1: com.android.server.wm.ActivityRecord this$0>;

        virtualinvoke $r11.<com.android.server.wm.ActivityRecord: void activityPaused(boolean)>(1);

        exitmonitor r21;

     label3:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label4:
        $r19 := @caughtexception;

     label5:
        exitmonitor r21;

     label6:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r19;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
}
