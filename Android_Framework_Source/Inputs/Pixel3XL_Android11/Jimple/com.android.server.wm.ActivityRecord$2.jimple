class com.android.server.wm.ActivityRecord$2 extends java.lang.Object implements java.lang.Runnable
{
    final com.android.server.wm.ActivityRecord this$0;

    void <init>(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.ActivityRecord$2 r0;
        com.android.server.wm.ActivityRecord r1;

        r0 := @this: com.android.server.wm.ActivityRecord$2;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        r0.<com.android.server.wm.ActivityRecord$2: com.android.server.wm.ActivityRecord this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        com.android.server.wm.ActivityRecord$2 r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.WindowProcessController r2;
        long l0;
        java.lang.StringBuilder r3;
        com.android.server.wm.ActivityRecord $r4, $r6, $r7, $r8, $r9, $r11;
        com.android.server.wm.ActivityTaskManagerService $r5, r15;
        boolean $z0;
        java.lang.String $r13;
        java.lang.Throwable $r14;

        r0 := @this: com.android.server.wm.ActivityRecord$2;

        $r4 = r0.<com.android.server.wm.ActivityRecord$2: com.android.server.wm.ActivityRecord this$0>;

        $r5 = $r4.<com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityTaskManagerService mAtmService>;

        r1 = $r5.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r6 = r0.<com.android.server.wm.ActivityRecord$2: com.android.server.wm.ActivityRecord this$0>;

        $z0 = staticinvoke <com.android.server.wm.ActivityRecord: boolean access$000(com.android.server.wm.ActivityRecord)>($r6);

        if $z0 == 0 goto label2;

        $r7 = r0.<com.android.server.wm.ActivityRecord$2: com.android.server.wm.ActivityRecord this$0>;

        r15 = $r7.<com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityTaskManagerService mAtmService>;

        $r8 = r0.<com.android.server.wm.ActivityRecord$2: com.android.server.wm.ActivityRecord this$0>;

        r2 = $r8.<com.android.server.wm.ActivityRecord: com.android.server.wm.WindowProcessController app>;

        $r9 = r0.<com.android.server.wm.ActivityRecord$2: com.android.server.wm.ActivityRecord this$0>;

        l0 = $r9.<com.android.server.wm.ActivityRecord: long launchTickTime>;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("launching ");

        $r11 = r0.<com.android.server.wm.ActivityRecord$2: com.android.server.wm.ActivityRecord this$0>;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r15.<com.android.server.wm.ActivityTaskManagerService: void logAppTooSlow(com.android.server.wm.WindowProcessController,long,java.lang.String)>(r2, l0, $r13);

     label2:
        exitmonitor r1;

     label3:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label4:
        $r14 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r14;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
}
