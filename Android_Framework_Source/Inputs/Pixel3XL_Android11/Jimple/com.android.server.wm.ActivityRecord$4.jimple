class com.android.server.wm.ActivityRecord$4 extends java.lang.Object implements java.lang.Runnable
{
    final com.android.server.wm.ActivityRecord this$0;

    void <init>(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.ActivityRecord$4 r0;
        com.android.server.wm.ActivityRecord r1;

        r0 := @this: com.android.server.wm.ActivityRecord$4;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        r0.<com.android.server.wm.ActivityRecord$4: com.android.server.wm.ActivityRecord this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        com.android.server.wm.ActivityRecord$4 r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityRecord $r2, $r5, $r8, $r9;
        com.android.server.wm.ActivityTaskManagerService $r3;
        java.lang.String $r7;
        boolean $z0;
        java.lang.Throwable $r10;
        java.lang.StringBuilder r11;

        r0 := @this: com.android.server.wm.ActivityRecord$4;

        $r2 = r0.<com.android.server.wm.ActivityRecord$4: com.android.server.wm.ActivityRecord this$0>;

        $r3 = $r2.<com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityTaskManagerService mAtmService>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity stop timeout for ");

        $r5 = r0.<com.android.server.wm.ActivityRecord$4: com.android.server.wm.ActivityRecord this$0>;

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityTaskManager", $r7);

        $r8 = r0.<com.android.server.wm.ActivityRecord$4: com.android.server.wm.ActivityRecord this$0>;

        $z0 = virtualinvoke $r8.<com.android.server.wm.ActivityRecord: boolean isInHistory()>();

        if $z0 == 0 goto label2;

        $r9 = r0.<com.android.server.wm.ActivityRecord$4: com.android.server.wm.ActivityRecord this$0>;

        virtualinvoke $r9.<com.android.server.wm.ActivityRecord: void activityStopped(android.os.Bundle,android.os.PersistableBundle,java.lang.CharSequence)>(null, null, null);

     label2:
        exitmonitor r1;

     label3:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label4:
        $r10 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
}
