public class com.android.server.wm.ActivityServiceConnectionsHolder extends java.lang.Object
{
    private final com.android.server.wm.ActivityRecord mActivity;
    private android.util.ArraySet mConnections;
    private volatile boolean mIsDisconnecting;
    private final com.android.server.wm.ActivityTaskManagerService mService;

    void <init>(com.android.server.wm.ActivityTaskManagerService, com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.ActivityServiceConnectionsHolder r0;
        com.android.server.wm.ActivityTaskManagerService r1;
        com.android.server.wm.ActivityRecord r2;

        r0 := @this: com.android.server.wm.ActivityServiceConnectionsHolder;

        r1 := @parameter0: com.android.server.wm.ActivityTaskManagerService;

        r2 := @parameter1: com.android.server.wm.ActivityRecord;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.wm.ActivityServiceConnectionsHolder: com.android.server.wm.ActivityTaskManagerService mService> = r1;

        r0.<com.android.server.wm.ActivityServiceConnectionsHolder: com.android.server.wm.ActivityRecord mActivity> = r2;

        return;
    }

    public void addConnection(java.lang.Object)
    {
        com.android.server.wm.ActivityServiceConnectionsHolder r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        android.util.ArraySet r2, $r4, $r5;
        com.android.server.wm.ActivityTaskManagerService $r3;
        boolean $z0;
        java.lang.Throwable $r6;
        java.lang.Object r7;

        r0 := @this: com.android.server.wm.ActivityServiceConnectionsHolder;

        r7 := @parameter0: java.lang.Object;

        $r3 = r0.<com.android.server.wm.ActivityServiceConnectionsHolder: com.android.server.wm.ActivityTaskManagerService mService>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $z0 = r0.<com.android.server.wm.ActivityServiceConnectionsHolder: boolean mIsDisconnecting>;

        if $z0 == 0 goto label3;

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r4 = r0.<com.android.server.wm.ActivityServiceConnectionsHolder: android.util.ArraySet mConnections>;

        if $r4 != null goto label4;

        r2 = new android.util.ArraySet;

        specialinvoke r2.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.wm.ActivityServiceConnectionsHolder: android.util.ArraySet mConnections> = r2;

     label4:
        $r5 = r0.<com.android.server.wm.ActivityServiceConnectionsHolder: android.util.ArraySet mConnections>;

        virtualinvoke $r5.<android.util.ArraySet: boolean add(java.lang.Object)>(r7);

        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label6:
        $r6 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    void disconnectActivityFromServices()
    {
        com.android.server.wm.ActivityServiceConnectionsHolder r0;
        android.util.ArraySet r1;
        boolean $z0, $z1;
        com.android.server.wm.ActivityTaskManagerService $r2;
        com.android.server.wm._$$Lambda$ActivityServiceConnectionsHolder$E9W1qwLXBAwoppLfYj6pecVF_x8 $r3;
        com.android.server.wm.ActivityTaskManagerService$H $r4;

        r0 := @this: com.android.server.wm.ActivityServiceConnectionsHolder;

        r1 = r0.<com.android.server.wm.ActivityServiceConnectionsHolder: android.util.ArraySet mConnections>;

        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<android.util.ArraySet: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $z1 = r0.<com.android.server.wm.ActivityServiceConnectionsHolder: boolean mIsDisconnecting>;

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        r0.<com.android.server.wm.ActivityServiceConnectionsHolder: boolean mIsDisconnecting> = 1;

        $r2 = r0.<com.android.server.wm.ActivityServiceConnectionsHolder: com.android.server.wm.ActivityTaskManagerService mService>;

        $r4 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityTaskManagerService$H mH>;

        $r3 = new com.android.server.wm._$$Lambda$ActivityServiceConnectionsHolder$E9W1qwLXBAwoppLfYj6pecVF_x8;

        specialinvoke $r3.<com.android.server.wm._$$Lambda$ActivityServiceConnectionsHolder$E9W1qwLXBAwoppLfYj6pecVF_x8: void <init>(com.android.server.wm.ActivityServiceConnectionsHolder)>(r0);

        virtualinvoke $r4.<com.android.server.wm.ActivityTaskManagerService$H: boolean post(java.lang.Runnable)>($r3);

        return;

     label2:
        return;
    }

    public void dump(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.wm.ActivityServiceConnectionsHolder r0;
        java.lang.String r1, $r9;
        com.android.server.wm.WindowManagerGlobalLock r2;
        java.lang.StringBuilder r3;
        com.android.server.wm.ActivityTaskManagerService $r4;
        com.android.server.wm.ActivityRecord $r7;
        java.lang.Throwable $r10;
        java.io.PrintWriter r11;

        r0 := @this: com.android.server.wm.ActivityServiceConnectionsHolder;

        r11 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.String;

        $r4 = r0.<com.android.server.wm.ActivityServiceConnectionsHolder: com.android.server.wm.ActivityTaskManagerService mService>;

        r2 = $r4.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r2;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("activity=");

        $r7 = r0.<com.android.server.wm.ActivityServiceConnectionsHolder: com.android.server.wm.ActivityRecord mActivity>;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r11.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        exitmonitor r2;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r10 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void forEachConnection(java.util.function.Consumer)
    {
        com.android.server.wm.ActivityServiceConnectionsHolder r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r2;
        android.util.ArraySet $r3, $r4, $r5, $r6;
        boolean $z0;
        int $i0, i1;
        java.lang.Object $r7;
        java.lang.Throwable $r8;
        java.util.function.Consumer r9;

        r0 := @this: com.android.server.wm.ActivityServiceConnectionsHolder;

        r9 := @parameter0: java.util.function.Consumer;

        $r2 = r0.<com.android.server.wm.ActivityServiceConnectionsHolder: com.android.server.wm.ActivityTaskManagerService mService>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label01:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.ActivityServiceConnectionsHolder: android.util.ArraySet mConnections>;

        if $r3 == null goto label09;

        $r4 = r0.<com.android.server.wm.ActivityServiceConnectionsHolder: android.util.ArraySet mConnections>;

        $z0 = virtualinvoke $r4.<android.util.ArraySet: boolean isEmpty()>();

        if $z0 == 0 goto label03;

     label02:
        goto label09;

     label03:
        $r5 = r0.<com.android.server.wm.ActivityServiceConnectionsHolder: android.util.ArraySet mConnections>;

        $i0 = virtualinvoke $r5.<android.util.ArraySet: int size()>();

        i1 = $i0 - 1;

     label04:
        if i1 < 0 goto label07;

     label05:
        $r6 = r0.<com.android.server.wm.ActivityServiceConnectionsHolder: android.util.ArraySet mConnections>;

        $r7 = virtualinvoke $r6.<android.util.ArraySet: java.lang.Object valueAt(int)>(i1);

        interfaceinvoke r9.<java.util.function.Consumer: void accept(java.lang.Object)>($r7);

     label06:
        i1 = i1 + -1;

        goto label04;

     label07:
        exitmonitor r1;

     label08:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label09:
        exitmonitor r1;

     label10:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label11:
        $r8 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public int getActivityPid()
    {
        com.android.server.wm.ActivityServiceConnectionsHolder r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r3;
        com.android.server.wm.ActivityRecord $r4, $r5;
        boolean $z0;
        com.android.server.wm.WindowProcessController $r6;
        java.lang.Throwable $r7;
        int i0;

        r0 := @this: com.android.server.wm.ActivityServiceConnectionsHolder;

        $r3 = r0.<com.android.server.wm.ActivityServiceConnectionsHolder: com.android.server.wm.ActivityTaskManagerService mService>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r4 = r0.<com.android.server.wm.ActivityServiceConnectionsHolder: com.android.server.wm.ActivityRecord mActivity>;

        $z0 = virtualinvoke $r4.<com.android.server.wm.ActivityRecord: boolean hasProcess()>();

        if $z0 == 0 goto label3;

        $r5 = r0.<com.android.server.wm.ActivityServiceConnectionsHolder: com.android.server.wm.ActivityRecord mActivity>;

        $r6 = $r5.<com.android.server.wm.ActivityRecord: com.android.server.wm.WindowProcessController app>;

        i0 = virtualinvoke $r6.<com.android.server.wm.WindowProcessController: int getPid()>();

     label2:
        goto label4;

     label3:
        i0 = -1;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return i0;

     label6:
        $r7 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public boolean isActivityVisible()
    {
        com.android.server.wm.ActivityServiceConnectionsHolder r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r3;
        com.android.server.wm.ActivityRecord $r4, $r7;
        boolean $z0, $z1, z2;
        com.android.server.wm.ActivityStack$ActivityState $r5, $r6;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.wm.ActivityServiceConnectionsHolder;

        $r3 = r0.<com.android.server.wm.ActivityServiceConnectionsHolder: com.android.server.wm.ActivityTaskManagerService mService>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r4 = r0.<com.android.server.wm.ActivityServiceConnectionsHolder: com.android.server.wm.ActivityRecord mActivity>;

        $z0 = $r4.<com.android.server.wm.ActivityRecord: boolean mVisibleRequested>;

        if $z0 != 0 goto label4;

        $r7 = r0.<com.android.server.wm.ActivityServiceConnectionsHolder: com.android.server.wm.ActivityRecord mActivity>;

        $r6 = <com.android.server.wm.ActivityStack$ActivityState: com.android.server.wm.ActivityStack$ActivityState RESUMED>;

        $r5 = <com.android.server.wm.ActivityStack$ActivityState: com.android.server.wm.ActivityStack$ActivityState PAUSING>;

        $z1 = virtualinvoke $r7.<com.android.server.wm.ActivityRecord: boolean isState(com.android.server.wm.ActivityStack$ActivityState,com.android.server.wm.ActivityStack$ActivityState)>($r6, $r5);

        if $z1 == 0 goto label3;

     label2:
        goto label4;

     label3:
        z2 = 0;

        goto label5;

     label4:
        z2 = 1;

     label5:
        exitmonitor r1;

     label6:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return z2;

     label7:
        $r8 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void lambda$disconnectActivityFromServices$0$ActivityServiceConnectionsHolder()
    {
        com.android.server.wm.ActivityServiceConnectionsHolder r0;
        com.android.server.wm.ActivityTaskManagerService $r1;
        android.app.ActivityManagerInternal $r2;

        r0 := @this: com.android.server.wm.ActivityServiceConnectionsHolder;

        $r1 = r0.<com.android.server.wm.ActivityServiceConnectionsHolder: com.android.server.wm.ActivityTaskManagerService mService>;

        $r2 = $r1.<com.android.server.wm.ActivityTaskManagerService: android.app.ActivityManagerInternal mAmInternal>;

        virtualinvoke $r2.<android.app.ActivityManagerInternal: void disconnectActivityFromServices(java.lang.Object)>(r0);

        r0.<com.android.server.wm.ActivityServiceConnectionsHolder: boolean mIsDisconnecting> = 0;

        return;
    }

    public void removeConnection(java.lang.Object)
    {
        com.android.server.wm.ActivityServiceConnectionsHolder r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r2;
        android.util.ArraySet $r3, $r4;
        java.lang.Throwable $r5;
        java.lang.Object r6;

        r0 := @this: com.android.server.wm.ActivityServiceConnectionsHolder;

        r6 := @parameter0: java.lang.Object;

        $r2 = r0.<com.android.server.wm.ActivityServiceConnectionsHolder: com.android.server.wm.ActivityTaskManagerService mService>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.ActivityServiceConnectionsHolder: android.util.ArraySet mConnections>;

        if $r3 != null goto label3;

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r4 = r0.<com.android.server.wm.ActivityServiceConnectionsHolder: android.util.ArraySet mConnections>;

        virtualinvoke $r4.<android.util.ArraySet: boolean remove(java.lang.Object)>(r6);

        exitmonitor r1;

     label4:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label5:
        $r5 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public java.lang.String toString()
    {
        com.android.server.wm.ActivityServiceConnectionsHolder r0;
        android.util.ArraySet $r1;
        java.lang.String $r2;

        r0 := @this: com.android.server.wm.ActivityServiceConnectionsHolder;

        $r1 = r0.<com.android.server.wm.ActivityServiceConnectionsHolder: android.util.ArraySet mConnections>;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        return $r2;
    }
}
