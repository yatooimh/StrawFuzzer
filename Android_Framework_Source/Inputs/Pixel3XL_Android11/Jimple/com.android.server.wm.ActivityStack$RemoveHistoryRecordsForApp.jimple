class com.android.server.wm.ActivityStack$RemoveHistoryRecordsForApp extends java.lang.Object
{
    private com.android.server.wm.WindowProcessController mApp;
    private boolean mHasVisibleActivities;
    private boolean mIsProcessRemoved;
    private java.util.ArrayList mToRemove;
    final com.android.server.wm.ActivityStack this$0;

    private void <init>(com.android.server.wm.ActivityStack)
    {
        com.android.server.wm.ActivityStack$RemoveHistoryRecordsForApp r0;
        com.android.server.wm.ActivityStack r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.server.wm.ActivityStack$RemoveHistoryRecordsForApp;

        r1 := @parameter0: com.android.server.wm.ActivityStack;

        r0.<com.android.server.wm.ActivityStack$RemoveHistoryRecordsForApp: com.android.server.wm.ActivityStack this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.wm.ActivityStack$RemoveHistoryRecordsForApp: java.util.ArrayList mToRemove> = $r2;

        return;
    }

    void <init>(com.android.server.wm.ActivityStack, com.android.server.wm.ActivityStack$1)
    {
        com.android.server.wm.ActivityStack$RemoveHistoryRecordsForApp r0;
        com.android.server.wm.ActivityStack r1;
        com.android.server.wm.ActivityStack$1 r2;

        r0 := @this: com.android.server.wm.ActivityStack$RemoveHistoryRecordsForApp;

        r1 := @parameter0: com.android.server.wm.ActivityStack;

        r2 := @parameter1: com.android.server.wm.ActivityStack$1;

        specialinvoke r0.<com.android.server.wm.ActivityStack$RemoveHistoryRecordsForApp: void <init>(com.android.server.wm.ActivityStack)>(r1);

        return;
    }

    private void addActivityToRemove(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.ActivityStack$RemoveHistoryRecordsForApp r0;
        com.android.server.wm.ActivityRecord r1;
        com.android.server.wm.WindowProcessController $r2, $r3;
        java.util.ArrayList $r4;

        r0 := @this: com.android.server.wm.ActivityStack$RemoveHistoryRecordsForApp;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        $r3 = r1.<com.android.server.wm.ActivityRecord: com.android.server.wm.WindowProcessController app>;

        $r2 = r0.<com.android.server.wm.ActivityStack$RemoveHistoryRecordsForApp: com.android.server.wm.WindowProcessController mApp>;

        if $r3 != $r2 goto label1;

        $r4 = r0.<com.android.server.wm.ActivityStack$RemoveHistoryRecordsForApp: java.util.ArrayList mToRemove>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label1:
        return;
    }

    public static void lambda$8j2ZFLAwkXnwDAxiTFN7mMDLhjU(com.android.server.wm.ActivityStack$RemoveHistoryRecordsForApp, com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.ActivityStack$RemoveHistoryRecordsForApp r0;
        com.android.server.wm.ActivityRecord r1;

        r0 := @parameter0: com.android.server.wm.ActivityStack$RemoveHistoryRecordsForApp;

        r1 := @parameter1: com.android.server.wm.ActivityRecord;

        specialinvoke r0.<com.android.server.wm.ActivityStack$RemoveHistoryRecordsForApp: void addActivityToRemove(com.android.server.wm.ActivityRecord)>(r1);

        return;
    }

    private void processActivity(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.ActivityStack$RemoveHistoryRecordsForApp r0;
        com.android.server.wm.ActivityRecord r1;
        com.android.server.wm.WindowProcessController $r3, $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, $z10, $z11;
        int $i0, $i2, $i3, $i4, $i5, $i10, $i11;
        java.lang.StringBuilder $r5;
        java.lang.String $r9, $r11;
        com.android.server.wm.Task $r10;
        long $l6, $l7, $l8;
        byte $b9;
        com.android.server.wm.ActivityStack$ActivityState $r12;

        r0 := @this: com.android.server.wm.ActivityStack$RemoveHistoryRecordsForApp;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        $r4 = r1.<com.android.server.wm.ActivityRecord: com.android.server.wm.WindowProcessController app>;

        $r3 = r0.<com.android.server.wm.ActivityStack$RemoveHistoryRecordsForApp: com.android.server.wm.WindowProcessController mApp>;

        if $r4 == $r3 goto label01;

        return;

     label01:
        $z0 = virtualinvoke r1.<com.android.server.wm.ActivityRecord: boolean isVisible()>();

        if $z0 != 0 goto label02;

        $z8 = r1.<com.android.server.wm.ActivityRecord: boolean mVisibleRequested>;

        if $z8 == 0 goto label03;

     label02:
        r0.<com.android.server.wm.ActivityStack$RemoveHistoryRecordsForApp: boolean mHasVisibleActivities> = 1;

     label03:
        $i11 = r1.<com.android.server.wm.ActivityRecord: int mRelaunchReason>;

        if $i11 == 1 goto label04;

        $i10 = r1.<com.android.server.wm.ActivityRecord: int mRelaunchReason>;

        if $i10 != 2 goto label05;

     label04:
        $i0 = r1.<com.android.server.wm.ActivityRecord: int launchCount>;

        if $i0 >= 3 goto label05;

        $z7 = r1.<com.android.server.wm.ActivityRecord: boolean finishing>;

        if $z7 != 0 goto label05;

        z9 = 0;

        goto label10;

     label05:
        $z10 = virtualinvoke r1.<com.android.server.wm.ActivityRecord: boolean hasSavedState()>();

        if $z10 != 0 goto label06;

        $z5 = r1.<com.android.server.wm.ActivityRecord: boolean stateNotNeeded>;

        if $z5 != 0 goto label06;

        $r12 = <com.android.server.wm.ActivityStack$ActivityState: com.android.server.wm.ActivityStack$ActivityState RESTARTING_PROCESS>;

        $z6 = virtualinvoke r1.<com.android.server.wm.ActivityRecord: boolean isState(com.android.server.wm.ActivityStack$ActivityState)>($r12);

        if $z6 == 0 goto label07;

     label06:
        $z11 = r1.<com.android.server.wm.ActivityRecord: boolean finishing>;

        if $z11 == 0 goto label08;

     label07:
        z9 = 1;

        goto label10;

     label08:
        $z1 = r1.<com.android.server.wm.ActivityRecord: boolean mVisibleRequested>;

        if $z1 != 0 goto label09;

        $i5 = r1.<com.android.server.wm.ActivityRecord: int launchCount>;

        if $i5 <= 2 goto label09;

        $l6 = r1.<com.android.server.wm.ActivityRecord: long lastLaunchTime>;

        $l7 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l8 = $l7 - 60000L;

        $b9 = $l6 cmp $l8;

        if $b9 <= 0 goto label09;

        z9 = 1;

        goto label10;

     label09:
        z9 = 0;

     label10:
        if z9 == 0 goto label12;

        $z3 = r1.<com.android.server.wm.ActivityRecord: boolean finishing>;

        if $z3 == 0 goto label11;

        $z4 = r0.<com.android.server.wm.ActivityStack$RemoveHistoryRecordsForApp: boolean mIsProcessRemoved>;

        if $z4 == 0 goto label13;

     label11:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Force removing ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": app died, no saved state");

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityTaskManager", $r9);

        $i2 = r1.<com.android.server.wm.ActivityRecord: int mUserId>;

        $i3 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r1);

        $r10 = virtualinvoke r1.<com.android.server.wm.ActivityRecord: com.android.server.wm.Task getTask()>();

        $i4 = $r10.<com.android.server.wm.Task: int mTaskId>;

        $r11 = r1.<com.android.server.wm.ActivityRecord: java.lang.String shortComponentName>;

        staticinvoke <com.android.server.wm.EventLogTags: void writeWmFinishActivity(int,int,int,java.lang.String,java.lang.String)>($i2, $i3, $i4, $r11, "proc died without state saved");

        goto label13;

     label12:
        r1.<com.android.server.wm.ActivityRecord: com.android.server.wm.WindowProcessController app> = null;

        $z2 = r1.<com.android.server.wm.ActivityRecord: boolean mVisibleRequested>;

        r1.<com.android.server.wm.ActivityRecord: boolean nowVisible> = $z2;

     label13:
        virtualinvoke r1.<com.android.server.wm.ActivityRecord: void cleanUp(boolean,boolean)>(1, 1);

        if z9 == 0 goto label14;

        virtualinvoke r1.<com.android.server.wm.ActivityRecord: void removeFromHistory(java.lang.String)>("appDied");

     label14:
        return;
    }

    boolean process(com.android.server.wm.WindowProcessController)
    {
        com.android.server.wm.ActivityStack$RemoveHistoryRecordsForApp r0;
        boolean z0, $z1, $z2;
        java.util.ArrayList $r1, $r5, $r10;
        com.android.server.wm.'-$$Lambda$ActivityStack$RemoveHistoryRecordsForApp$8j2ZFLAwkXnwDAxiTFN7mMDLhjU' $r2;
        com.android.internal.util.function.pooled.ArgumentPlaceholder $r3;
        com.android.server.wm.ActivityStack $r4;
        java.lang.Object $r6;
        com.android.server.wm.ActivityRecord $r7;
        com.android.server.wm.WindowProcessController r8;
        com.android.internal.util.function.pooled.PooledConsumer r9;
        java.util.function.BiConsumer r11;

        r0 := @this: com.android.server.wm.ActivityStack$RemoveHistoryRecordsForApp;

        r8 := @parameter0: com.android.server.wm.WindowProcessController;

        $r1 = r0.<com.android.server.wm.ActivityStack$RemoveHistoryRecordsForApp: java.util.ArrayList mToRemove>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        r0.<com.android.server.wm.ActivityStack$RemoveHistoryRecordsForApp: boolean mHasVisibleActivities> = 0;

        r0.<com.android.server.wm.ActivityStack$RemoveHistoryRecordsForApp: com.android.server.wm.WindowProcessController mApp> = r8;

        z0 = virtualinvoke r8.<com.android.server.wm.WindowProcessController: boolean isRemoved()>();

        r0.<com.android.server.wm.ActivityStack$RemoveHistoryRecordsForApp: boolean mIsProcessRemoved> = z0;

        if z0 == 0 goto label1;

        virtualinvoke r8.<com.android.server.wm.WindowProcessController: void makeFinishingForProcessRemoved()>();

     label1:
        $r2 = <com.android.server.wm._$$Lambda$ActivityStack$RemoveHistoryRecordsForApp$8j2ZFLAwkXnwDAxiTFN7mMDLhjU: com.android.server.wm.'-$$Lambda$ActivityStack$RemoveHistoryRecordsForApp$8j2ZFLAwkXnwDAxiTFN7mMDLhjU' INSTANCE>;

        $r3 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: com.android.internal.util.function.pooled.ArgumentPlaceholder __(java.lang.Class)>(class "Lcom/android/server/wm/ActivityRecord;");

        r11 = (java.util.function.BiConsumer) $r2;

        r9 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: com.android.internal.util.function.pooled.PooledConsumer obtainConsumer(java.util.function.BiConsumer,java.lang.Object,com.android.internal.util.function.pooled.ArgumentPlaceholder)>(r11, r0, $r3);

        $r4 = r0.<com.android.server.wm.ActivityStack$RemoveHistoryRecordsForApp: com.android.server.wm.ActivityStack this$0>;

        virtualinvoke $r4.<com.android.server.wm.ActivityStack: void forAllActivities(java.util.function.Consumer)>(r9);

        interfaceinvoke r9.<com.android.internal.util.function.pooled.PooledConsumer: void recycle()>();

     label2:
        $r10 = r0.<com.android.server.wm.ActivityStack$RemoveHistoryRecordsForApp: java.util.ArrayList mToRemove>;

        $z2 = virtualinvoke $r10.<java.util.ArrayList: boolean isEmpty()>();

        if $z2 != 0 goto label3;

        $r5 = r0.<com.android.server.wm.ActivityStack$RemoveHistoryRecordsForApp: java.util.ArrayList mToRemove>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        $r7 = (com.android.server.wm.ActivityRecord) $r6;

        specialinvoke r0.<com.android.server.wm.ActivityStack$RemoveHistoryRecordsForApp: void processActivity(com.android.server.wm.ActivityRecord)>($r7);

        goto label2;

     label3:
        r0.<com.android.server.wm.ActivityStack$RemoveHistoryRecordsForApp: com.android.server.wm.WindowProcessController mApp> = null;

        $z1 = r0.<com.android.server.wm.ActivityStack$RemoveHistoryRecordsForApp: boolean mHasVisibleActivities>;

        return $z1;
    }
}
