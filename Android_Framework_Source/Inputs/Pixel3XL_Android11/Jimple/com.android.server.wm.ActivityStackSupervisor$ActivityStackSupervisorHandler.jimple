final class com.android.server.wm.ActivityStackSupervisor$ActivityStackSupervisorHandler extends android.os.Handler
{
    final com.android.server.wm.ActivityStackSupervisor this$0;

    void <init>(com.android.server.wm.ActivityStackSupervisor, android.os.Looper)
    {
        com.android.server.wm.ActivityStackSupervisor$ActivityStackSupervisorHandler r0;
        com.android.server.wm.ActivityStackSupervisor r1;
        android.os.Looper r2;

        r0 := @this: com.android.server.wm.ActivityStackSupervisor$ActivityStackSupervisorHandler;

        r1 := @parameter0: com.android.server.wm.ActivityStackSupervisor;

        r2 := @parameter1: android.os.Looper;

        r0.<com.android.server.wm.ActivityStackSupervisor$ActivityStackSupervisorHandler: com.android.server.wm.ActivityStackSupervisor this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r2);

        return;
    }

    private void activityIdleFromMessage(com.android.server.wm.ActivityRecord, boolean)
    {
        com.android.server.wm.ActivityStackSupervisor$ActivityStackSupervisorHandler r0;
        com.android.server.wm.ActivityRecord r1;
        boolean z0;
        com.android.server.wm.ActivityStackSupervisor $r2;

        r0 := @this: com.android.server.wm.ActivityStackSupervisor$ActivityStackSupervisorHandler;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        z0 := @parameter1: boolean;

        $r2 = r0.<com.android.server.wm.ActivityStackSupervisor$ActivityStackSupervisorHandler: com.android.server.wm.ActivityStackSupervisor this$0>;

        virtualinvoke $r2.<com.android.server.wm.ActivityStackSupervisor: void activityIdleInternal(com.android.server.wm.ActivityRecord,boolean,boolean,android.content.res.Configuration)>(r1, z0, z0, null);

        return;
    }

    private boolean handleMessageInner(android.os.Message)
    {
        com.android.server.wm.ActivityStackSupervisor$ActivityStackSupervisorHandler r0, $r32;
        com.android.server.wm.ActivityTaskManagerService r1, $r12;
        long l0;
        java.lang.Object $r3, $r16, $r18, $r20, $r39, $r47;
        android.os.IBinder $r4;
        com.android.server.wm.ActivityStackSupervisor $r5, $r6, $r7, $r9, $r11, $r13, $r14, $r25, $r26, $r31, $r33, $r35, $r37, $r40, $r43, $r45;
        android.os.PowerManager$WakeLock $r8, $r10;
        boolean $z0, $z1, $z3;
        com.android.server.wm.RootWindowContainer $r15, $r34;
        com.android.server.wm.ActivityRecord $r17, $r19, $r41, $r48, r50, r53;
        java.lang.StringBuilder $r21, $r27;
        java.lang.String $r24, $r30;
        java.util.ArrayList $r36, $r38, $r44, $r46;
        int $i4, $i5, i6, i7, i8;
        android.graphics.Rect $r42;
        android.os.Message r49;
        com.android.server.wm.WindowProcessController r52;

        r0 := @this: com.android.server.wm.ActivityStackSupervisor$ActivityStackSupervisorHandler;

        r49 := @parameter0: android.os.Message;

        i6 = r49.<android.os.Message: int what>;

        if i6 == 212 goto label18;

        tableswitch(i6)
        {
            case 200: goto label17;
            case 201: goto label16;
            case 202: goto label15;
            case 203: goto label14;
            case 204: goto label13;
            case 205: goto label12;
            default: goto label01;
        };

     label01:
        tableswitch(i6)
        {
            case 214: goto label09;
            case 215: goto label06;
            case 216: goto label05;
            case 217: goto label03;
            default: goto label02;
        };

     label02:
        return 0;

     label03:
        $r20 = r49.<android.os.Message: java.lang.Object obj>;

        r50 = (com.android.server.wm.ActivityRecord) $r20;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity top resumed state loss timeout for ");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r50);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityTaskManager", $r24);

        $z3 = virtualinvoke r50.<com.android.server.wm.ActivityRecord: boolean hasProcess()>();

        if $z3 == 0 goto label04;

        $r26 = r0.<com.android.server.wm.ActivityStackSupervisor$ActivityStackSupervisorHandler: com.android.server.wm.ActivityStackSupervisor this$0>;

        r1 = $r26.<com.android.server.wm.ActivityStackSupervisor: com.android.server.wm.ActivityTaskManagerService mService>;

        r52 = r50.<com.android.server.wm.ActivityRecord: com.android.server.wm.WindowProcessController app>;

        l0 = r50.<com.android.server.wm.ActivityRecord: long topResumedStateLossTime>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("top state loss for ");

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r50);

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.server.wm.ActivityTaskManagerService: void logAppTooSlow(com.android.server.wm.WindowProcessController,long,java.lang.String)>(r52, l0, $r30);

     label04:
        $r25 = r0.<com.android.server.wm.ActivityStackSupervisor$ActivityStackSupervisorHandler: com.android.server.wm.ActivityStackSupervisor this$0>;

        virtualinvoke $r25.<com.android.server.wm.ActivityStackSupervisor: void handleTopResumedStateReleased(boolean)>(1);

        goto label19;

     label05:
        $r31 = r0.<com.android.server.wm.ActivityStackSupervisor$ActivityStackSupervisorHandler: com.android.server.wm.ActivityStackSupervisor this$0>;

        $r32 = staticinvoke <com.android.server.wm.ActivityStackSupervisor: com.android.server.wm.ActivityStackSupervisor$ActivityStackSupervisorHandler access$500(com.android.server.wm.ActivityStackSupervisor)>($r31);

        virtualinvoke $r32.<com.android.server.wm.ActivityStackSupervisor$ActivityStackSupervisorHandler: void removeMessages(int)>(216);

        $r33 = r0.<com.android.server.wm.ActivityStackSupervisor$ActivityStackSupervisorHandler: com.android.server.wm.ActivityStackSupervisor this$0>;

        $r34 = $r33.<com.android.server.wm.ActivityStackSupervisor: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        virtualinvoke $r34.<com.android.server.wm.RootWindowContainer: void startHomeOnEmptyDisplays(java.lang.String)>("homeChanged");

        goto label19;

     label06:
        $r35 = r0.<com.android.server.wm.ActivityStackSupervisor$ActivityStackSupervisorHandler: com.android.server.wm.ActivityStackSupervisor this$0>;

        $r36 = staticinvoke <com.android.server.wm.ActivityStackSupervisor: java.util.ArrayList access$100(com.android.server.wm.ActivityStackSupervisor)>($r35);

        $i4 = virtualinvoke $r36.<java.util.ArrayList: int size()>();

        i7 = $i4 - 1;

     label07:
        if i7 < 0 goto label08;

        $r37 = r0.<com.android.server.wm.ActivityStackSupervisor$ActivityStackSupervisorHandler: com.android.server.wm.ActivityStackSupervisor this$0>;

        $r38 = staticinvoke <com.android.server.wm.ActivityStackSupervisor: java.util.ArrayList access$100(com.android.server.wm.ActivityStackSupervisor)>($r37);

        $r39 = virtualinvoke $r38.<java.util.ArrayList: java.lang.Object remove(int)>(i7);

        $r41 = (com.android.server.wm.ActivityRecord) $r39;

        $r40 = r0.<com.android.server.wm.ActivityStackSupervisor$ActivityStackSupervisorHandler: com.android.server.wm.ActivityStackSupervisor this$0>;

        $r42 = staticinvoke <com.android.server.wm.ActivityStackSupervisor: android.graphics.Rect access$200(com.android.server.wm.ActivityStackSupervisor)>($r40);

        virtualinvoke $r41.<com.android.server.wm.ActivityRecord: void updatePictureInPictureMode(android.graphics.Rect,boolean)>($r42, 0);

        i7 = i7 + -1;

        goto label07;

     label08:
        goto label19;

     label09:
        $r43 = r0.<com.android.server.wm.ActivityStackSupervisor$ActivityStackSupervisorHandler: com.android.server.wm.ActivityStackSupervisor this$0>;

        $r44 = staticinvoke <com.android.server.wm.ActivityStackSupervisor: java.util.ArrayList access$000(com.android.server.wm.ActivityStackSupervisor)>($r43);

        $i5 = virtualinvoke $r44.<java.util.ArrayList: int size()>();

        i8 = $i5 - 1;

     label10:
        if i8 < 0 goto label11;

        $r45 = r0.<com.android.server.wm.ActivityStackSupervisor$ActivityStackSupervisorHandler: com.android.server.wm.ActivityStackSupervisor this$0>;

        $r46 = staticinvoke <com.android.server.wm.ActivityStackSupervisor: java.util.ArrayList access$000(com.android.server.wm.ActivityStackSupervisor)>($r45);

        $r47 = virtualinvoke $r46.<java.util.ArrayList: java.lang.Object remove(int)>(i8);

        $r48 = (com.android.server.wm.ActivityRecord) $r47;

        virtualinvoke $r48.<com.android.server.wm.ActivityRecord: void updateMultiWindowMode()>();

        i8 = i8 + -1;

        goto label10;

     label11:
        goto label19;

     label12:
        $r6 = r0.<com.android.server.wm.ActivityStackSupervisor$ActivityStackSupervisorHandler: com.android.server.wm.ActivityStackSupervisor this$0>;

        staticinvoke <com.android.server.wm.ActivityStackSupervisor: void access$300(com.android.server.wm.ActivityStackSupervisor,com.android.server.wm.ActivityRecord,boolean,java.lang.String)>($r6, null, 0, "transit");

        goto label19;

     label13:
        $r7 = r0.<com.android.server.wm.ActivityStackSupervisor$ActivityStackSupervisorHandler: com.android.server.wm.ActivityStackSupervisor this$0>;

        $r8 = $r7.<com.android.server.wm.ActivityStackSupervisor: android.os.PowerManager$WakeLock mLaunchingActivityWakeLock>;

        $z0 = virtualinvoke $r8.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z0 == 0 goto label19;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityTaskManager", "Launch timeout has expired, giving up wake lock!");

        $r9 = r0.<com.android.server.wm.ActivityStackSupervisor$ActivityStackSupervisorHandler: com.android.server.wm.ActivityStackSupervisor this$0>;

        $r10 = $r9.<com.android.server.wm.ActivityStackSupervisor: android.os.PowerManager$WakeLock mLaunchingActivityWakeLock>;

        virtualinvoke $r10.<android.os.PowerManager$WakeLock: void release()>();

        goto label19;

     label14:
        $r11 = r0.<com.android.server.wm.ActivityStackSupervisor$ActivityStackSupervisorHandler: com.android.server.wm.ActivityStackSupervisor this$0>;

        $r12 = $r11.<com.android.server.wm.ActivityStackSupervisor: com.android.server.wm.ActivityTaskManagerService mService>;

        $z1 = virtualinvoke $r12.<com.android.server.wm.ActivityTaskManagerService: boolean isSleepingOrShuttingDownLocked()>();

        if $z1 == 0 goto label19;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityTaskManager", "Sleep timeout!  Sleeping now.");

        $r13 = r0.<com.android.server.wm.ActivityStackSupervisor$ActivityStackSupervisorHandler: com.android.server.wm.ActivityStackSupervisor this$0>;

        virtualinvoke $r13.<com.android.server.wm.ActivityStackSupervisor: void checkReadyForSleepLocked(boolean)>(0);

        goto label19;

     label15:
        $r14 = r0.<com.android.server.wm.ActivityStackSupervisor$ActivityStackSupervisorHandler: com.android.server.wm.ActivityStackSupervisor this$0>;

        $r15 = $r14.<com.android.server.wm.ActivityStackSupervisor: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        virtualinvoke $r15.<com.android.server.wm.RootWindowContainer: boolean resumeFocusedStacksTopActivities()>();

        goto label19;

     label16:
        $r16 = r49.<android.os.Message: java.lang.Object obj>;

        $r17 = (com.android.server.wm.ActivityRecord) $r16;

        specialinvoke r0.<com.android.server.wm.ActivityStackSupervisor$ActivityStackSupervisorHandler: void activityIdleFromMessage(com.android.server.wm.ActivityRecord,boolean)>($r17, 0);

        goto label19;

     label17:
        $r18 = r49.<android.os.Message: java.lang.Object obj>;

        $r19 = (com.android.server.wm.ActivityRecord) $r18;

        specialinvoke r0.<com.android.server.wm.ActivityStackSupervisor$ActivityStackSupervisorHandler: void activityIdleFromMessage(com.android.server.wm.ActivityRecord,boolean)>($r19, 1);

        goto label19;

     label18:
        $r3 = r49.<android.os.Message: java.lang.Object obj>;

        $r4 = (android.os.IBinder) $r3;

        r53 = staticinvoke <com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityRecord forTokenLocked(android.os.IBinder)>($r4);

        if r53 == null goto label19;

        $r5 = r0.<com.android.server.wm.ActivityStackSupervisor$ActivityStackSupervisorHandler: com.android.server.wm.ActivityStackSupervisor this$0>;

        staticinvoke <com.android.server.wm.ActivityStackSupervisor: void access$400(com.android.server.wm.ActivityStackSupervisor,com.android.server.wm.ActivityRecord)>($r5, r53);

     label19:
        return 1;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.server.wm.ActivityStackSupervisor$ActivityStackSupervisorHandler r0;
        com.android.server.wm.ActivityRecord r1;
        com.android.server.wm.WindowManagerGlobalLock r2, r17;
        com.android.server.wm.ActivityStackSupervisor $r3, $r6, $r8;
        com.android.server.wm.ActivityTaskManagerService $r4, $r7, $r9;
        boolean $z0, $z1, $z2;
        int $i0, i1;
        java.lang.Object $r5;
        android.app.ActivityManagerInternal $r10;
        com.android.server.wm.ActivityStack$ActivityState $r11;
        com.android.server.wm.WindowProcessController $r12, $r13;
        java.lang.Throwable $r14, $r15;
        android.os.Message r16;
        java.lang.String r18;

        r0 := @this: com.android.server.wm.ActivityStackSupervisor$ActivityStackSupervisorHandler;

        r16 := @parameter0: android.os.Message;

        $r3 = r0.<com.android.server.wm.ActivityStackSupervisor$ActivityStackSupervisorHandler: com.android.server.wm.ActivityStackSupervisor this$0>;

        $r4 = $r3.<com.android.server.wm.ActivityStackSupervisor: com.android.server.wm.ActivityTaskManagerService mService>;

        r17 = $r4.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r17;

     label01:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $z0 = specialinvoke r0.<com.android.server.wm.ActivityStackSupervisor$ActivityStackSupervisorHandler: boolean handleMessageInner(android.os.Message)>(r16);

        if $z0 == 0 goto label03;

        exitmonitor r17;

     label02:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label03:
        exitmonitor r17;

     label04:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        $i0 = r16.<android.os.Message: int what>;

        if $i0 == 213 goto label05;

        goto label13;

     label05:
        $r5 = r16.<android.os.Message: java.lang.Object obj>;

        r1 = (com.android.server.wm.ActivityRecord) $r5;

        $r6 = r0.<com.android.server.wm.ActivityStackSupervisor$ActivityStackSupervisorHandler: com.android.server.wm.ActivityStackSupervisor this$0>;

        $r7 = $r6.<com.android.server.wm.ActivityStackSupervisor: com.android.server.wm.ActivityTaskManagerService mService>;

        r2 = $r7.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r2;

     label06:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

     label07:
        r18 = null;

        i1 = 0;

     label08:
        $z1 = virtualinvoke r1.<com.android.server.wm.ActivityRecord: boolean attachedToProcess()>();

        if $z1 == 0 goto label11;

     label09:
        r18 = null;

        i1 = 0;

     label10:
        $r11 = <com.android.server.wm.ActivityStack$ActivityState: com.android.server.wm.ActivityStack$ActivityState RESTARTING_PROCESS>;

        $z2 = virtualinvoke r1.<com.android.server.wm.ActivityRecord: boolean isState(com.android.server.wm.ActivityStack$ActivityState)>($r11);

        if $z2 == 0 goto label11;

        $r12 = r1.<com.android.server.wm.ActivityRecord: com.android.server.wm.WindowProcessController app>;

        r18 = $r12.<com.android.server.wm.WindowProcessController: java.lang.String mName>;

        $r13 = r1.<com.android.server.wm.ActivityRecord: com.android.server.wm.WindowProcessController app>;

        i1 = $r13.<com.android.server.wm.WindowProcessController: int mUid>;

     label11:
        exitmonitor r2;

     label12:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        if r18 == null goto label13;

        $r8 = r0.<com.android.server.wm.ActivityStackSupervisor$ActivityStackSupervisorHandler: com.android.server.wm.ActivityStackSupervisor this$0>;

        $r9 = $r8.<com.android.server.wm.ActivityStackSupervisor: com.android.server.wm.ActivityTaskManagerService mService>;

        $r10 = $r9.<com.android.server.wm.ActivityTaskManagerService: android.app.ActivityManagerInternal mAmInternal>;

        virtualinvoke $r10.<android.app.ActivityManagerInternal: void killProcess(java.lang.String,int,java.lang.String)>(r18, i1, "restartActivityProcessTimeout");

     label13:
        return;

     label14:
        $r14 := @caughtexception;

     label15:
        exitmonitor r2;

     label16:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r14;

     label17:
        $r15 := @caughtexception;

     label18:
        exitmonitor r17;

     label19:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r15;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label11 to label12 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
        catch java.lang.Throwable from label18 to label19 with label17;
    }
}
