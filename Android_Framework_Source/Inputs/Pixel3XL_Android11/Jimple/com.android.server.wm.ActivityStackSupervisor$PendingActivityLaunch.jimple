class com.android.server.wm.ActivityStackSupervisor$PendingActivityLaunch extends java.lang.Object
{
    final com.android.server.wm.WindowProcessController callerApp;
    final com.android.server.uri.NeededUriGrants intentGrants;
    final com.android.server.wm.ActivityRecord r;
    final com.android.server.wm.ActivityRecord sourceRecord;
    final com.android.server.wm.ActivityStack stack;
    final int startFlags;

    void <init>(com.android.server.wm.ActivityRecord, com.android.server.wm.ActivityRecord, int, com.android.server.wm.ActivityStack, com.android.server.wm.WindowProcessController, com.android.server.uri.NeededUriGrants)
    {
        com.android.server.wm.ActivityStackSupervisor$PendingActivityLaunch r0;
        com.android.server.wm.ActivityRecord r1, r2;
        int i0;
        com.android.server.wm.ActivityStack r3;
        com.android.server.wm.WindowProcessController r4;
        com.android.server.uri.NeededUriGrants r5;

        r0 := @this: com.android.server.wm.ActivityStackSupervisor$PendingActivityLaunch;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        r2 := @parameter1: com.android.server.wm.ActivityRecord;

        i0 := @parameter2: int;

        r3 := @parameter3: com.android.server.wm.ActivityStack;

        r4 := @parameter4: com.android.server.wm.WindowProcessController;

        r5 := @parameter5: com.android.server.uri.NeededUriGrants;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.wm.ActivityStackSupervisor$PendingActivityLaunch: com.android.server.wm.ActivityRecord r> = r1;

        r0.<com.android.server.wm.ActivityStackSupervisor$PendingActivityLaunch: com.android.server.wm.ActivityRecord sourceRecord> = r2;

        r0.<com.android.server.wm.ActivityStackSupervisor$PendingActivityLaunch: int startFlags> = i0;

        r0.<com.android.server.wm.ActivityStackSupervisor$PendingActivityLaunch: com.android.server.wm.ActivityStack stack> = r3;

        r0.<com.android.server.wm.ActivityStackSupervisor$PendingActivityLaunch: com.android.server.wm.WindowProcessController callerApp> = r4;

        r0.<com.android.server.wm.ActivityStackSupervisor$PendingActivityLaunch: com.android.server.uri.NeededUriGrants intentGrants> = r5;

        return;
    }

    void sendErrorResult(java.lang.String)
    {
        com.android.server.wm.ActivityStackSupervisor$PendingActivityLaunch r0;
        com.android.server.wm.WindowProcessController $r2, $r3, $r4;
        boolean $z0;
        android.app.IApplicationThread $r5;
        android.os.RemoteException $r6;
        java.lang.StringBuilder $r7;
        com.android.server.wm.ActivityRecord $r9;
        java.lang.String $r11, r12;

        r0 := @this: com.android.server.wm.ActivityStackSupervisor$PendingActivityLaunch;

        r12 := @parameter0: java.lang.String;

     label1:
        $r2 = r0.<com.android.server.wm.ActivityStackSupervisor$PendingActivityLaunch: com.android.server.wm.WindowProcessController callerApp>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.server.wm.ActivityStackSupervisor$PendingActivityLaunch: com.android.server.wm.WindowProcessController callerApp>;

        $z0 = virtualinvoke $r3.<com.android.server.wm.WindowProcessController: boolean hasThread()>();

        if $z0 == 0 goto label2;

        $r4 = r0.<com.android.server.wm.ActivityStackSupervisor$PendingActivityLaunch: com.android.server.wm.WindowProcessController callerApp>;

        $r5 = virtualinvoke $r4.<com.android.server.wm.WindowProcessController: android.app.IApplicationThread getThread()>();

        interfaceinvoke $r5.<android.app.IApplicationThread: void scheduleCrash(java.lang.String)>(r12);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception scheduling crash of failed activity launcher sourceRecord=");

        $r9 = r0.<com.android.server.wm.ActivityStackSupervisor$PendingActivityLaunch: com.android.server.wm.ActivityRecord sourceRecord>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityTaskManager", $r11, $r6);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
