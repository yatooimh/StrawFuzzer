public class com.android.server.wm.ActivityStartController extends java.lang.Object
{
    private static final int DO_PENDING_ACTIVITY_LAUNCHES_MSG;
    private static final java.lang.String TAG;
    boolean mCheckedForSetup;
    private final com.android.server.wm.ActivityStarter$Factory mFactory;
    private final android.os.Handler mHandler;
    private com.android.server.wm.ActivityRecord mLastHomeActivityStartRecord;
    private int mLastHomeActivityStartResult;
    private com.android.server.wm.ActivityStarter mLastStarter;
    private final java.util.ArrayList mPendingActivityLaunches;
    private final com.android.server.wm.PendingRemoteAnimationRegistry mPendingRemoteAnimationRegistry;
    private final com.android.server.wm.ActivityTaskManagerService mService;
    private final com.android.server.wm.ActivityStackSupervisor mSupervisor;
    private com.android.server.wm.ActivityRecord[] tmpOutRecord;

    void <init>(com.android.server.wm.ActivityTaskManagerService)
    {
        com.android.server.wm.ActivityStartController r0;
        com.android.server.wm.ActivityTaskManagerService r1;
        com.android.server.wm.ActivityStarter$DefaultFactory $r2;
        com.android.server.wm.ActivityStartInterceptor $r3;
        com.android.server.wm.ActivityStackSupervisor $r4, $r5, $r6;

        r0 := @this: com.android.server.wm.ActivityStartController;

        r1 := @parameter0: com.android.server.wm.ActivityTaskManagerService;

        $r5 = r1.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityStackSupervisor mStackSupervisor>;

        $r2 = new com.android.server.wm.ActivityStarter$DefaultFactory;

        $r6 = r1.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityStackSupervisor mStackSupervisor>;

        $r3 = new com.android.server.wm.ActivityStartInterceptor;

        $r4 = r1.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityStackSupervisor mStackSupervisor>;

        specialinvoke $r3.<com.android.server.wm.ActivityStartInterceptor: void <init>(com.android.server.wm.ActivityTaskManagerService,com.android.server.wm.ActivityStackSupervisor)>(r1, $r4);

        specialinvoke $r2.<com.android.server.wm.ActivityStarter$DefaultFactory: void <init>(com.android.server.wm.ActivityTaskManagerService,com.android.server.wm.ActivityStackSupervisor,com.android.server.wm.ActivityStartInterceptor)>(r1, $r6, $r3);

        specialinvoke r0.<com.android.server.wm.ActivityStartController: void <init>(com.android.server.wm.ActivityTaskManagerService,com.android.server.wm.ActivityStackSupervisor,com.android.server.wm.ActivityStarter$Factory)>(r1, $r5, $r2);

        return;
    }

    void <init>(com.android.server.wm.ActivityTaskManagerService, com.android.server.wm.ActivityStackSupervisor, com.android.server.wm.ActivityStarter$Factory)
    {
        com.android.server.wm.ActivityStartController r0;
        com.android.server.wm.ActivityTaskManagerService r1, $r7;
        com.android.server.wm.ActivityStackSupervisor r2;
        com.android.server.wm.ActivityStarter$Factory r3;
        com.android.server.wm.ActivityRecord[] $r4;
        java.util.ArrayList $r5;
        com.android.server.wm.ActivityStartController$StartHandler $r6;
        com.android.server.wm.ActivityTaskManagerService$H $r8, $r11;
        android.os.Looper $r9;
        com.android.server.wm.PendingRemoteAnimationRegistry $r10;
        com.android.server.wm.WindowManagerGlobalLock $r12;

        r0 := @this: com.android.server.wm.ActivityStartController;

        r1 := @parameter0: com.android.server.wm.ActivityTaskManagerService;

        r2 := @parameter1: com.android.server.wm.ActivityStackSupervisor;

        r3 := @parameter2: com.android.server.wm.ActivityStarter$Factory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = newarray (com.android.server.wm.ActivityRecord)[1];

        r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityRecord[] tmpOutRecord> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.wm.ActivityStartController: java.util.ArrayList mPendingActivityLaunches> = $r5;

        r0.<com.android.server.wm.ActivityStartController: boolean mCheckedForSetup> = 0;

        r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityTaskManagerService mService> = r1;

        r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityStackSupervisor mSupervisor> = r2;

        $r6 = new com.android.server.wm.ActivityStartController$StartHandler;

        $r7 = r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityTaskManagerService mService>;

        $r8 = $r7.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityTaskManagerService$H mH>;

        $r9 = virtualinvoke $r8.<com.android.server.wm.ActivityTaskManagerService$H: android.os.Looper getLooper()>();

        specialinvoke $r6.<com.android.server.wm.ActivityStartController$StartHandler: void <init>(com.android.server.wm.ActivityStartController,android.os.Looper)>(r0, $r9);

        r0.<com.android.server.wm.ActivityStartController: android.os.Handler mHandler> = $r6;

        r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityStarter$Factory mFactory> = r3;

        interfaceinvoke r3.<com.android.server.wm.ActivityStarter$Factory: void setController(com.android.server.wm.ActivityStartController)>(r0);

        $r10 = new com.android.server.wm.PendingRemoteAnimationRegistry;

        $r12 = r1.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        $r11 = r1.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityTaskManagerService$H mH>;

        specialinvoke $r10.<com.android.server.wm.PendingRemoteAnimationRegistry: void <init>(com.android.server.wm.WindowManagerGlobalLock,android.os.Handler)>($r12, $r11);

        r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.PendingRemoteAnimationRegistry mPendingRemoteAnimationRegistry> = $r10;

        return;
    }

    static com.android.server.wm.ActivityTaskManagerService access$000(com.android.server.wm.ActivityStartController)
    {
        com.android.server.wm.ActivityStartController r0;
        com.android.server.wm.ActivityTaskManagerService $r1;

        r0 := @parameter0: com.android.server.wm.ActivityStartController;

        $r1 = r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityTaskManagerService mService>;

        return $r1;
    }

    static android.content.Intent[] lambda$startActivities$0(int)
    {
        int i0;
        android.content.Intent[] $r0;

        i0 := @parameter0: int;

        $r0 = newarray (android.content.Intent)[i0];

        return $r0;
    }

    void addPendingActivityLaunch(com.android.server.wm.ActivityStackSupervisor$PendingActivityLaunch)
    {
        com.android.server.wm.ActivityStartController r0;
        com.android.server.wm.ActivityStackSupervisor$PendingActivityLaunch r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.server.wm.ActivityStartController;

        r1 := @parameter0: com.android.server.wm.ActivityStackSupervisor$PendingActivityLaunch;

        $r2 = r0.<com.android.server.wm.ActivityStartController: java.util.ArrayList mPendingActivityLaunches>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    int checkTargetUser(int, boolean, int, int, java.lang.String)
    {
        com.android.server.wm.ActivityStartController r0;
        int i0, i1, i2, $i3;
        boolean z0;
        java.lang.String r1;
        com.android.server.wm.ActivityTaskManagerService $r2, $r4;
        android.app.ActivityManagerInternal $r3;

        r0 := @this: com.android.server.wm.ActivityStartController;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r1 := @parameter4: java.lang.String;

        if z0 == 0 goto label1;

        $r4 = r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityTaskManagerService mService>;

        $i3 = virtualinvoke $r4.<com.android.server.wm.ActivityTaskManagerService: int handleIncomingUser(int,int,int,java.lang.String)>(i1, i2, i0, r1);

        return $i3;

     label1:
        $r2 = r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityTaskManagerService mService>;

        $r3 = $r2.<com.android.server.wm.ActivityTaskManagerService: android.app.ActivityManagerInternal mAmInternal>;

        virtualinvoke $r3.<android.app.ActivityManagerInternal: void ensureNotSpecialUser(int)>(i0);

        return i0;
    }

    boolean clearPendingActivityLaunches(java.lang.String)
    {
        com.android.server.wm.ActivityStartController r0;
        java.lang.String r1, $r8;
        int i0, $i1, i2;
        com.android.server.wm.ActivityRecord r2;
        java.util.ArrayList $r3, $r4, $r5, $r9;
        java.lang.Object $r6;
        com.android.server.wm.ActivityStackSupervisor$PendingActivityLaunch $r7;
        boolean $z0, z1;

        r0 := @this: com.android.server.wm.ActivityStartController;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.server.wm.ActivityStartController: java.util.ArrayList mPendingActivityLaunches>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i2 = i0 - 1;

     label1:
        if i2 < 0 goto label3;

        $r5 = r0.<com.android.server.wm.ActivityStartController: java.util.ArrayList mPendingActivityLaunches>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r7 = (com.android.server.wm.ActivityStackSupervisor$PendingActivityLaunch) $r6;

        r2 = $r7.<com.android.server.wm.ActivityStackSupervisor$PendingActivityLaunch: com.android.server.wm.ActivityRecord r>;

        if r2 == null goto label2;

        $r8 = r2.<com.android.server.wm.ActivityRecord: java.lang.String packageName>;

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r9 = r0.<com.android.server.wm.ActivityStartController: java.util.ArrayList mPendingActivityLaunches>;

        virtualinvoke $r9.<java.util.ArrayList: java.lang.Object remove(int)>(i2);

     label2:
        i2 = i2 + -1;

        goto label1;

     label3:
        $r4 = r0.<com.android.server.wm.ActivityStartController: java.util.ArrayList mPendingActivityLaunches>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i1 >= i0 goto label4;

        z1 = 1;

        goto label5;

     label4:
        z1 = 0;

     label5:
        return z1;
    }

    void doPendingActivityLaunches(boolean)
    {
        com.android.server.wm.ActivityStartController r0;
        boolean z0, $z2, $z3, z4;
        java.util.ArrayList $r2, $r4, r11;
        java.lang.Object $r3;
        java.lang.Exception $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r9, $r10;
        com.android.server.wm.ActivityStackSupervisor$PendingActivityLaunch r12;
        com.android.server.wm.ActivityStarter r13;
        com.android.server.wm.ActivityRecord $r14, $r15, $r16;
        int $i1;
        android.app.ActivityOptions $r17;
        com.android.server.uri.NeededUriGrants $r18;

        r0 := @this: com.android.server.wm.ActivityStartController;

        z0 := @parameter0: boolean;

     label1:
        $r2 = r0.<com.android.server.wm.ActivityStartController: java.util.ArrayList mPendingActivityLaunches>;

        $z2 = virtualinvoke $r2.<java.util.ArrayList: boolean isEmpty()>();

        if $z2 != 0 goto label7;

        r11 = r0.<com.android.server.wm.ActivityStartController: java.util.ArrayList mPendingActivityLaunches>;

        $r3 = virtualinvoke r11.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        r12 = (com.android.server.wm.ActivityStackSupervisor$PendingActivityLaunch) $r3;

        z4 = 0;

        if z0 == 0 goto label2;

        z4 = 0;

        $r4 = r0.<com.android.server.wm.ActivityStartController: java.util.ArrayList mPendingActivityLaunches>;

        $z3 = virtualinvoke $r4.<java.util.ArrayList: boolean isEmpty()>();

        if $z3 == 0 goto label2;

        z4 = 1;

     label2:
        r13 = virtualinvoke r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityStarter obtainStarter(android.content.Intent,java.lang.String)>(null, "pendingActivityLaunch");

     label3:
        $r14 = r12.<com.android.server.wm.ActivityStackSupervisor$PendingActivityLaunch: com.android.server.wm.ActivityRecord r>;

        $r15 = r12.<com.android.server.wm.ActivityStackSupervisor$PendingActivityLaunch: com.android.server.wm.ActivityRecord sourceRecord>;

        $i1 = r12.<com.android.server.wm.ActivityStackSupervisor$PendingActivityLaunch: int startFlags>;

        $r16 = r12.<com.android.server.wm.ActivityStackSupervisor$PendingActivityLaunch: com.android.server.wm.ActivityRecord r>;

        $r17 = $r16.<com.android.server.wm.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $r18 = r12.<com.android.server.wm.ActivityStackSupervisor$PendingActivityLaunch: com.android.server.uri.NeededUriGrants intentGrants>;

        virtualinvoke r13.<com.android.server.wm.ActivityStarter: void startResolvedActivity(com.android.server.wm.ActivityRecord,com.android.server.wm.ActivityRecord,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,int,boolean,android.app.ActivityOptions,com.android.server.wm.Task,com.android.server.uri.NeededUriGrants)>($r14, $r15, null, null, $i1, z4, $r17, null, $r18);

     label4:
        goto label6;

     label5:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception during pending activity launch pal=");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityTaskManager", $r9, $r5);

        $r10 = virtualinvoke $r5.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke r12.<com.android.server.wm.ActivityStackSupervisor$PendingActivityLaunch: void sendErrorResult(java.lang.String)>($r10);

     label6:
        goto label1;

     label7:
        return;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    void dump(java.io.PrintWriter, java.lang.String, java.lang.String)
    {
        com.android.server.wm.ActivityStartController r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r7, $r8, $r12, $r13, r14;
        com.android.server.wm.ActivityRecord r3, r15, r18;
        java.lang.StringBuilder $r4, $r9;
        boolean $z1, $z2, $z3, z5, z6, z7, z8;
        com.android.server.wm.ActivityStarter r17, r19;

        r0 := @this: com.android.server.wm.ActivityStartController;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        r14 := @parameter2: java.lang.String;

        z5 = 0;

        if r14 == null goto label01;

        z6 = 1;

        goto label02;

     label01:
        z6 = 0;

     label02:
        r15 = r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityRecord mLastHomeActivityStartRecord>;

        z7 = 0;

        if r15 == null goto label04;

        if z6 == 0 goto label03;

        z7 = 0;

        $r13 = r15.<com.android.server.wm.ActivityRecord: java.lang.String packageName>;

        $z3 = virtualinvoke r14.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z3 == 0 goto label04;

     label03:
        z7 = 1;

        virtualinvoke r0.<com.android.server.wm.ActivityStartController: void dumpLastHomeActivityStartResult(java.io.PrintWriter,java.lang.String)>(r1, r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("mLastHomeActivityStartRecord:");

        r3 = r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityRecord mLastHomeActivityStartRecord>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<com.android.server.wm.ActivityRecord: void dump(java.io.PrintWriter,java.lang.String,boolean)>(r1, $r12, 1);

     label04:
        r17 = r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityStarter mLastStarter>;

        z8 = z7;

        if r17 == null goto label09;

        if z6 == 0 goto label06;

        $z1 = virtualinvoke r17.<com.android.server.wm.ActivityStarter: boolean relatedToPackage(java.lang.String)>(r14);

        if $z1 != 0 goto label06;

        r18 = r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityRecord mLastHomeActivityStartRecord>;

        if r18 == null goto label05;

        $r8 = r18.<com.android.server.wm.ActivityRecord: java.lang.String packageName>;

        $z2 = virtualinvoke r14.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z2 == 0 goto label05;

        goto label06;

     label05:
        goto label07;

     label06:
        z5 = 1;

     label07:
        z8 = z7;

        if z5 == 0 goto label09;

        z8 = z7;

        if z7 != 0 goto label08;

        z8 = 1;

        virtualinvoke r0.<com.android.server.wm.ActivityStartController: void dumpLastHomeActivityStartResult(java.io.PrintWriter,java.lang.String)>(r1, r2);

     label08:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        r19 = r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityStarter mLastStarter>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r19.<com.android.server.wm.ActivityStarter: void dump(java.io.PrintWriter,java.lang.String)>(r1, $r7);

        if z6 == 0 goto label09;

        return;

     label09:
        if z8 != 0 goto label10;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("(nothing)");

     label10:
        return;
    }

    public void dumpDebug(android.util.proto.ProtoOutputStream, long)
    {
        com.android.server.wm.ActivityStartController r0;
        android.util.proto.ProtoOutputStream r1;
        long l0;
        java.util.Iterator r2;
        java.util.ArrayList $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.android.server.wm.ActivityStackSupervisor$PendingActivityLaunch $r5;
        com.android.server.wm.ActivityRecord $r6;

        r0 := @this: com.android.server.wm.ActivityStartController;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        l0 := @parameter1: long;

        $r3 = r0.<com.android.server.wm.ActivityStartController: java.util.ArrayList mPendingActivityLaunches>;

        r2 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.android.server.wm.ActivityStackSupervisor$PendingActivityLaunch) $r4;

        $r6 = $r5.<com.android.server.wm.ActivityStackSupervisor$PendingActivityLaunch: com.android.server.wm.ActivityRecord r>;

        virtualinvoke $r6.<com.android.server.wm.ActivityRecord: void writeIdentifierToProto(android.util.proto.ProtoOutputStream,long)>(r1, l0);

        goto label1;

     label2:
        return;
    }

    void dumpLastHomeActivityStartResult(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.wm.ActivityStartController r0;
        java.io.PrintWriter r1;
        java.lang.String r2;
        int $i0;

        r0 := @this: com.android.server.wm.ActivityStartController;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mLastHomeActivityStartResult=");

        $i0 = r0.<com.android.server.wm.ActivityStartController: int mLastHomeActivityStartResult>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i0);

        return;
    }

    com.android.server.wm.PendingRemoteAnimationRegistry getPendingRemoteAnimationRegistry()
    {
        com.android.server.wm.ActivityStartController r0;
        com.android.server.wm.PendingRemoteAnimationRegistry $r1;

        r0 := @this: com.android.server.wm.ActivityStartController;

        $r1 = r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.PendingRemoteAnimationRegistry mPendingRemoteAnimationRegistry>;

        return $r1;
    }

    com.android.server.wm.ActivityStarter obtainStarter(android.content.Intent, java.lang.String)
    {
        com.android.server.wm.ActivityStartController r0;
        android.content.Intent r1;
        java.lang.String r2;
        com.android.server.wm.ActivityStarter$Factory $r3;
        com.android.server.wm.ActivityStarter $r4, $r5, $r6;

        r0 := @this: com.android.server.wm.ActivityStartController;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityStarter$Factory mFactory>;

        $r4 = interfaceinvoke $r3.<com.android.server.wm.ActivityStarter$Factory: com.android.server.wm.ActivityStarter obtain()>();

        $r5 = virtualinvoke $r4.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setIntent(android.content.Intent)>(r1);

        $r6 = virtualinvoke $r5.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setReason(java.lang.String)>(r2);

        return $r6;
    }

    void onExecutionComplete(com.android.server.wm.ActivityStarter)
    {
        com.android.server.wm.ActivityStartController r0;
        com.android.server.wm.ActivityStarter r1, $r2, $r3, $r6;
        com.android.server.wm.ActivityStarter$Factory $r4, $r5;

        r0 := @this: com.android.server.wm.ActivityStartController;

        r1 := @parameter0: com.android.server.wm.ActivityStarter;

        $r2 = r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityStarter mLastStarter>;

        if $r2 != null goto label1;

        $r5 = r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityStarter$Factory mFactory>;

        $r6 = interfaceinvoke $r5.<com.android.server.wm.ActivityStarter$Factory: com.android.server.wm.ActivityStarter obtain()>();

        r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityStarter mLastStarter> = $r6;

     label1:
        $r3 = r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityStarter mLastStarter>;

        virtualinvoke $r3.<com.android.server.wm.ActivityStarter: void set(com.android.server.wm.ActivityStarter)>(r1);

        $r4 = r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityStarter$Factory mFactory>;

        interfaceinvoke $r4.<com.android.server.wm.ActivityStarter$Factory: void recycle(com.android.server.wm.ActivityStarter)>(r1);

        return;
    }

    void postStartActivityProcessingForLastStarter(com.android.server.wm.ActivityRecord, int, com.android.server.wm.ActivityStack)
    {
        com.android.server.wm.ActivityStartController r0;
        com.android.server.wm.ActivityRecord r1;
        int i0;
        com.android.server.wm.ActivityStack r2;
        com.android.server.wm.ActivityStarter r3;

        r0 := @this: com.android.server.wm.ActivityStartController;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        i0 := @parameter1: int;

        r2 := @parameter2: com.android.server.wm.ActivityStack;

        r3 = r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityStarter mLastStarter>;

        if r3 != null goto label1;

        return;

     label1:
        virtualinvoke r3.<com.android.server.wm.ActivityStarter: void postStartActivityProcessing(com.android.server.wm.ActivityRecord,int,com.android.server.wm.ActivityStack)>(r1, i0, r2);

        return;
    }

    void registerRemoteAnimationForNextActivityStart(java.lang.String, android.view.RemoteAnimationAdapter)
    {
        com.android.server.wm.ActivityStartController r0;
        java.lang.String r1;
        android.view.RemoteAnimationAdapter r2;
        com.android.server.wm.PendingRemoteAnimationRegistry $r3;

        r0 := @this: com.android.server.wm.ActivityStartController;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.view.RemoteAnimationAdapter;

        $r3 = r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.PendingRemoteAnimationRegistry mPendingRemoteAnimationRegistry>;

        virtualinvoke $r3.<com.android.server.wm.PendingRemoteAnimationRegistry: void addPendingAnimation(java.lang.String,android.view.RemoteAnimationAdapter)>(r1, r2);

        return;
    }

    void schedulePendingActivityLaunches(long)
    {
        com.android.server.wm.ActivityStartController r0;
        long l0;
        android.os.Message r1;
        android.os.Handler $r2, $r3, $r4;

        r0 := @this: com.android.server.wm.ActivityStartController;

        l0 := @parameter0: long;

        $r2 = r0.<com.android.server.wm.ActivityStartController: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: void removeMessages(int)>(1);

        $r3 = r0.<com.android.server.wm.ActivityStartController: android.os.Handler mHandler>;

        r1 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int)>(1);

        $r4 = r0.<com.android.server.wm.ActivityStartController: android.os.Handler mHandler>;

        virtualinvoke $r4.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r1, l0);

        return;
    }

    int startActivities(android.app.IApplicationThread, int, int, int, java.lang.String, java.lang.String, android.content.Intent[], java.lang.String[], android.os.IBinder, com.android.server.wm.SafeActivityOptions, int, java.lang.String, com.android.server.am.PendingIntentRecord, boolean)
    {
        com.android.server.wm.ActivityStartController r0;
        android.os.IBinder r1, r108;
        com.android.server.wm.SafeActivityOptions r2, r100;
        java.lang.String r3, $r23, $r25, $r34, $r50, $r56, r78, r79, r95, r105;
        com.android.server.am.PendingIntentRecord r4;
        boolean z0, $z1, z2, z3;
        long l0;
        android.content.Intent[] r5, r80;
        android.content.pm.ActivityInfo r7, r96;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17, i18, i19, i20, i21, $i23, i24, i26, i27, i28, i29, i30, i31, $i32, i33, i34, i35;
        com.android.server.wm.ActivityTaskManagerService $r11, $r12, $r13, $r19, $r29, $r52, $r115;
        com.android.server.wm.ActivityStarter $r14, $r15, $r16, $r17, $r20, $r31, $r32, $r33, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, r101, r102;
        java.lang.Object $r24;
        android.content.ComponentName $r28;
        android.app.ActivityManagerInternal $r30;
        android.content.pm.ApplicationInfo $r47, $r48, $r49, $r53, $r54;
        com.android.server.wm.ActivityStackSupervisor $r51, r94;
        com.android.server.uri.UriGrantsManagerInternal $r55;
        java.lang.Throwable $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, r98, r111, r112;
        android.app.IApplicationThread r77;
        java.lang.String[] r81;
        com.android.server.wm.'-$$Lambda$ActivityStartController$6bTAPCVeDq_D4Y53Y5WNfMK4xBE' $r84;
        java.lang.Object[] $r85;
        com.android.server.wm.ActivityStarter[] r88;
        android.content.Intent r93, r114, r117;
        com.android.server.uri.NeededUriGrants r97;
        com.android.server.wm.ActivityRecord[] r106;
        com.android.server.wm.WindowManagerGlobalLock r107;
        com.android.server.wm.ActivityStarter$Factory r110;
        com.android.server.wm.ActivityRecord r113;
        android.util.SparseArray r116;
        java.lang.IllegalArgumentException r118, r119, r121;
        java.lang.StringBuilder r120;
        java.lang.NullPointerException r122, r123;
        java.util.function.IntFunction r124;

        r0 := @this: com.android.server.wm.ActivityStartController;

        r77 := @parameter0: android.app.IApplicationThread;

        i15 := @parameter1: int;

        i16 := @parameter2: int;

        i17 := @parameter3: int;

        r78 := @parameter4: java.lang.String;

        r79 := @parameter5: java.lang.String;

        r80 := @parameter6: android.content.Intent[];

        r81 := @parameter7: java.lang.String[];

        r1 := @parameter8: android.os.IBinder;

        r2 := @parameter9: com.android.server.wm.SafeActivityOptions;

        i18 := @parameter10: int;

        r3 := @parameter11: java.lang.String;

        r4 := @parameter12: com.android.server.am.PendingIntentRecord;

        z0 := @parameter13: boolean;

        if r80 == null goto label101;

        if r81 == null goto label100;

        $i2 = lengthof r80;

        $i1 = lengthof r81;

        if $i2 != $i1 goto label099;

        if i16 == 0 goto label001;

        goto label002;

     label001:
        i16 = staticinvoke <android.os.Binder: int getCallingPid()>();

     label002:
        if i17 == -1 goto label003;

        goto label004;

     label003:
        i17 = staticinvoke <android.os.Binder: int getCallingUid()>();

     label004:
        if i15 < 0 goto label005;

        i19 = -1;

        i20 = i15;

        goto label007;

     label005:
        if r77 != null goto label006;

        i19 = i16;

        i20 = i17;

        goto label007;

     label006:
        i20 = -1;

        i19 = -1;

     label007:
        i21 = staticinvoke <com.android.server.wm.ActivityStarter: int computeResolveFilterUid(int,int,int)>(i20, i17, -10000);

        r116 = new android.util.SparseArray;

        specialinvoke r116.<android.util.SparseArray: void <init>()>();

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label008:
        $r84 = <com.android.server.wm._$$Lambda$ActivityStartController$6bTAPCVeDq_D4Y53Y5WNfMK4xBE: com.android.server.wm.'-$$Lambda$ActivityStartController$6bTAPCVeDq_D4Y53Y5WNfMK4xBE' INSTANCE>;

        r124 = (java.util.function.IntFunction) $r84;

        $r85 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] filterNotNull(java.lang.Object[],java.util.function.IntFunction)>(r80, r124);

        r5 = (android.content.Intent[]) $r85;

     label009:
        $i23 = lengthof r5;

        r88 = newarray (com.android.server.wm.ActivityStarter)[$i23];

     label010:
        i24 = 0;

     label011:
        i26 = lengthof r5;

     label012:
        z2 = 0;

        if i24 >= i26 goto label042;

        r93 = r5[i24];

     label013:
        $z1 = virtualinvoke r93.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z1 != 0 goto label040;

        $r28 = virtualinvoke r93.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r28 == null goto label015;

     label014:
        z3 = 1;

        goto label016;

     label015:
        z3 = 0;

     label016:
        r117 = new android.content.Intent;

        specialinvoke r117.<android.content.Intent: void <init>(android.content.Intent)>(r93);

        r94 = r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

     label017:
        r95 = r81[i24];

     label018:
        r96 = virtualinvoke r94.<com.android.server.wm.ActivityStackSupervisor: android.content.pm.ActivityInfo resolveActivity(android.content.Intent,java.lang.String,int,android.app.ProfilerInfo,int,int)>(r117, r95, 0, null, i18, i21);

        $r29 = r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityTaskManagerService mService>;

        $r30 = $r29.<com.android.server.wm.ActivityTaskManagerService: android.app.ActivityManagerInternal mAmInternal>;

        r7 = virtualinvoke $r30.<android.app.ActivityManagerInternal: android.content.pm.ActivityInfo getActivityInfoForUser(android.content.pm.ActivityInfo,int)>(r96, i18);

     label019:
        if r7 == null goto label023;

     label020:
        $r51 = r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        $r52 = $r51.<com.android.server.wm.ActivityStackSupervisor: com.android.server.wm.ActivityTaskManagerService mService>;

        $r55 = $r52.<com.android.server.wm.ActivityTaskManagerService: com.android.server.uri.UriGrantsManagerInternal mUgmInternal>;

        $r53 = r7.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r56 = $r53.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r54 = r7.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i13 = $r54.<android.content.pm.ApplicationInfo: int uid>;

        $i14 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i13);

        r97 = interfaceinvoke $r55.<com.android.server.uri.UriGrantsManagerInternal: com.android.server.uri.NeededUriGrants checkGrantUriPermissionFromIntent(android.content.Intent,int,java.lang.String,int)>(r117, i21, $r56, $i14);

     label021:
        goto label024;

     label022:
        $r71 := @caughtexception;

        r98 = $r71;

        goto label098;

     label023:
        r97 = null;

     label024:
        if r7 == null goto label028;

     label025:
        $r47 = r7.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i10 = $r47.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i11 = $i10 & 2;

        if $i11 != 0 goto label027;

        $r48 = r7.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i12 = $r48.<android.content.pm.ApplicationInfo: int uid>;

        $r49 = r7.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r50 = $r49.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke r116.<android.util.SparseArray: void put(int,java.lang.Object)>($i12, $r50);

     label026:
        goto label028;

     label027:
        r118 = new java.lang.IllegalArgumentException;

        specialinvoke r118.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("FLAG_CANT_SAVE_STATE not supported here");

        throw r118;

     label028:
        i27 = lengthof r5;

     label029:
        $i9 = i27 - 1;

        if i24 != $i9 goto label030;

        z2 = 1;

     label030:
        if z2 == 0 goto label031;

        r100 = r2;

        goto label032;

     label031:
        r100 = null;

     label032:
        $r31 = virtualinvoke r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityStarter obtainStarter(android.content.Intent,java.lang.String)>(r117, r3);

        $r32 = virtualinvoke $r31.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setIntentGrants(com.android.server.uri.NeededUriGrants)>(r97);

        $r33 = virtualinvoke $r32.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setCaller(android.app.IApplicationThread)>(r77);

        $r34 = r81[i24];

        $r35 = virtualinvoke $r33.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setResolvedType(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setActivityInfo(android.content.pm.ActivityInfo)>(r7);

        $r37 = virtualinvoke $r36.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setRequestCode(int)>(-1);

        $r38 = virtualinvoke $r37.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setCallingPid(int)>(i19);

        $r39 = virtualinvoke $r38.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setCallingUid(int)>(i20);

        r101 = virtualinvoke $r39.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setCallingPackage(java.lang.String)>(r78);

     label033:
        $r40 = virtualinvoke r101.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setCallingFeatureId(java.lang.String)>(r79);

        $r41 = virtualinvoke $r40.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setRealCallingPid(int)>(i16);

        $r42 = virtualinvoke $r41.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setRealCallingUid(int)>(i17);

        $r43 = virtualinvoke $r42.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setActivityOptions(com.android.server.wm.SafeActivityOptions)>(r100);

        $r44 = virtualinvoke $r43.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setComponentSpecified(boolean)>(z3);

        $r45 = virtualinvoke $r44.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setAllowPendingRemoteAnimationRegistryLookup(boolean)>(z2);

        r102 = virtualinvoke $r45.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setOriginatingPendingIntent(com.android.server.am.PendingIntentRecord)>(r4);

     label034:
        $r46 = virtualinvoke r102.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setAllowBackgroundActivityStart(boolean)>(z0);

        r88[i24] = $r46;

     label035:
        i24 = i24 + 1;

        goto label011;

     label036:
        $r61 := @caughtexception;

        r98 = $r61;

        goto label038;

     label037:
        $r74 := @caughtexception;

        r98 = $r74;

     label038:
        goto label055;

     label039:
        $r75 := @caughtexception;

        r98 = $r75;

        goto label098;

     label040:
        r119 = new java.lang.IllegalArgumentException;

        specialinvoke r119.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw r119;

     label041:
        $r59 := @caughtexception;

        r98 = $r59;

        goto label098;

     label042:
        i28 = virtualinvoke r116.<android.util.SparseArray: int size()>();

     label043:
        if i28 <= 1 goto label056;

     label044:
        r120 = new java.lang.StringBuilder;

        specialinvoke r120.<java.lang.StringBuilder: void <init>(java.lang.String)>("startActivities: different apps [");

        i29 = virtualinvoke r116.<android.util.SparseArray: int size()>();

     label045:
        i30 = 0;

     label046:
        if i30 >= i29 goto label052;

     label047:
        $r24 = virtualinvoke r116.<android.util.SparseArray: java.lang.Object valueAt(int)>(i30);

        $r25 = (java.lang.String) $r24;

        virtualinvoke r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

     label048:
        $i8 = i29 - 1;

        if i30 != $i8 goto label049;

        r105 = "]";

        goto label050;

     label049:
        r105 = ", ";

     label050:
        virtualinvoke r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r105);

     label051:
        i30 = i30 + 1;

        goto label046;

     label052:
        virtualinvoke r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        virtualinvoke r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r78);

        $r23 = virtualinvoke r120.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityTaskManager", $r23);

     label053:
        goto label056;

     label054:
        $r68 := @caughtexception;

        r98 = $r68;

     label055:
        goto label098;

     label056:
        r106 = newarray (com.android.server.wm.ActivityRecord)[1];

        $r11 = r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityTaskManagerService mService>;

        r107 = $r11.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r107;

     label057:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r12 = r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityTaskManagerService mService>;

        virtualinvoke $r12.<com.android.server.wm.ActivityTaskManagerService: void deferWindowLayout()>();

     label058:
        i31 = 0;

        r108 = r1;

     label059:
        $i32 = lengthof r88;

        if i31 >= $i32 goto label083;

        $r14 = r88[i31];

        $r15 = virtualinvoke $r14.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setResultTo(android.os.IBinder)>(r108);

        $r16 = virtualinvoke $r15.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setOutActivity(com.android.server.wm.ActivityRecord[])>(r106);

        i33 = virtualinvoke $r16.<com.android.server.wm.ActivityStarter: int execute()>();

     label060:
        if i33 >= 0 goto label069;

        i34 = i31 + 1;

     label061:
        $i6 = lengthof r88;

        if i34 >= $i6 goto label065;

        r110 = r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityStarter$Factory mFactory>;

     label062:
        $r20 = r88[i34];

        interfaceinvoke r110.<com.android.server.wm.ActivityStarter$Factory: void recycle(com.android.server.wm.ActivityStarter)>($r20);

     label063:
        i34 = i34 + 1;

        goto label061;

     label064:
        $r69 := @caughtexception;

        r111 = $r69;

        goto label088;

     label065:
        $r19 = r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityTaskManagerService mService>;

        virtualinvoke $r19.<com.android.server.wm.ActivityTaskManagerService: void continueWindowLayout()>();

        exitmonitor r107;

     label066:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return i33;

     label067:
        $r57 := @caughtexception;

        r112 = $r57;

        goto label091;

     label068:
        $r62 := @caughtexception;

        r111 = $r62;

        goto label088;

     label069:
        r113 = r106[0];

        if r113 == null goto label076;

     label070:
        i35 = virtualinvoke r113.<com.android.server.wm.ActivityRecord: int getUid()>();

     label071:
        if i35 != i21 goto label076;

     label072:
        r108 = r113.<com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityRecord$Token appToken>;

     label073:
        goto label081;

     label074:
        $r67 := @caughtexception;

        r111 = $r67;

        goto label088;

     label075:
        $r66 := @caughtexception;

        r111 = $r66;

        goto label088;

     label076:
        r108 = r1;

     label077:
        $i3 = lengthof r88;

        $i4 = $i3 - 1;

        if i31 >= $i4 goto label081;

        $i5 = i31 + 1;

        $r17 = r88[$i5];

        r114 = virtualinvoke $r17.<com.android.server.wm.ActivityStarter: android.content.Intent getIntent()>();

     label078:
        virtualinvoke r114.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

     label079:
        goto label081;

     label080:
        $r72 := @caughtexception;

        r111 = $r72;

        goto label088;

     label081:
        i31 = i31 + 1;

        goto label059;

     label082:
        $r60 := @caughtexception;

        r111 = $r60;

        goto label088;

     label083:
        $r13 = r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityTaskManagerService mService>;

        virtualinvoke $r13.<com.android.server.wm.ActivityTaskManagerService: void continueWindowLayout()>();

     label084:
        exitmonitor r107;

     label085:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

     label086:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 0;

     label087:
        $r63 := @caughtexception;

        r111 = $r63;

     label088:
        $r115 = r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityTaskManagerService mService>;

        virtualinvoke $r115.<com.android.server.wm.ActivityTaskManagerService: void continueWindowLayout()>();

     label089:
        throw r111;

     label090:
        $r70 := @caughtexception;

        r112 = $r70;

     label091:
        exitmonitor r107;

     label092:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw r112;

     label093:
        $r76 := @caughtexception;

        r98 = $r76;

        goto label098;

     label094:
        $r73 := @caughtexception;

        r112 = $r73;

        goto label091;

     label095:
        $r64 := @caughtexception;

        r98 = $r64;

        goto label098;

     label096:
        $r58 := @caughtexception;

        r98 = $r58;

        goto label098;

     label097:
        $r65 := @caughtexception;

        r98 = $r65;

     label098:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r98;

     label099:
        r121 = new java.lang.IllegalArgumentException;

        specialinvoke r121.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("intents are length different than resolvedTypes");

        throw r121;

     label100:
        r122 = new java.lang.NullPointerException;

        specialinvoke r122.<java.lang.NullPointerException: void <init>(java.lang.String)>("resolvedTypes is null");

        throw r122;

     label101:
        r123 = new java.lang.NullPointerException;

        specialinvoke r123.<java.lang.NullPointerException: void <init>(java.lang.String)>("intents is null");

        throw r123;

        catch java.lang.Throwable from label008 to label009 with label097;
        catch java.lang.Throwable from label009 to label010 with label096;
        catch java.lang.Throwable from label011 to label012 with label096;
        catch java.lang.Throwable from label013 to label014 with label041;
        catch java.lang.Throwable from label016 to label017 with label041;
        catch java.lang.Throwable from label018 to label019 with label039;
        catch java.lang.Throwable from label020 to label021 with label022;
        catch java.lang.Throwable from label025 to label026 with label022;
        catch java.lang.Throwable from label027 to label028 with label022;
        catch java.lang.Throwable from label028 to label029 with label039;
        catch java.lang.Throwable from label032 to label033 with label037;
        catch java.lang.Throwable from label033 to label034 with label036;
        catch java.lang.Throwable from label034 to label035 with label054;
        catch java.lang.Throwable from label040 to label041 with label054;
        catch java.lang.Throwable from label042 to label043 with label095;
        catch java.lang.Throwable from label044 to label045 with label054;
        catch java.lang.Throwable from label047 to label048 with label054;
        catch java.lang.Throwable from label050 to label051 with label054;
        catch java.lang.Throwable from label052 to label053 with label054;
        catch java.lang.Throwable from label056 to label057 with label095;
        catch java.lang.Throwable from label057 to label058 with label090;
        catch java.lang.Throwable from label059 to label060 with label087;
        catch java.lang.Throwable from label061 to label062 with label068;
        catch java.lang.Throwable from label062 to label063 with label064;
        catch java.lang.Throwable from label065 to label066 with label067;
        catch java.lang.Throwable from label070 to label071 with label075;
        catch java.lang.Throwable from label072 to label073 with label074;
        catch java.lang.Throwable from label077 to label078 with label082;
        catch java.lang.Throwable from label078 to label079 with label080;
        catch java.lang.Throwable from label083 to label084 with label094;
        catch java.lang.Throwable from label084 to label085 with label094;
        catch java.lang.Throwable from label085 to label086 with label093;
        catch java.lang.Throwable from label088 to label089 with label094;
        catch java.lang.Throwable from label089 to label090 with label094;
        catch java.lang.Throwable from label091 to label092 with label094;
        catch java.lang.Throwable from label092 to label093 with label093;
    }

    final int startActivitiesInPackage(int, int, int, java.lang.String, java.lang.String, android.content.Intent[], java.lang.String[], android.os.IBinder, com.android.server.wm.SafeActivityOptions, int, boolean, com.android.server.am.PendingIntentRecord, boolean)
    {
        com.android.server.wm.ActivityStartController r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        java.lang.String r1, r2;
        android.content.Intent[] r3;
        java.lang.String[] r4;
        android.os.IBinder r5;
        com.android.server.wm.SafeActivityOptions r6;
        boolean z0, z1;
        com.android.server.am.PendingIntentRecord r7;

        r0 := @this: com.android.server.wm.ActivityStartController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: java.lang.String;

        r3 := @parameter5: android.content.Intent[];

        r4 := @parameter6: java.lang.String[];

        r5 := @parameter7: android.os.IBinder;

        r6 := @parameter8: com.android.server.wm.SafeActivityOptions;

        i3 := @parameter9: int;

        z0 := @parameter10: boolean;

        r7 := @parameter11: com.android.server.am.PendingIntentRecord;

        z1 := @parameter12: boolean;

        $i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i6 = virtualinvoke r0.<com.android.server.wm.ActivityStartController: int checkTargetUser(int,boolean,int,int,java.lang.String)>(i3, z0, $i4, $i5, "startActivityInPackage");

        $i7 = virtualinvoke r0.<com.android.server.wm.ActivityStartController: int startActivities(android.app.IApplicationThread,int,int,int,java.lang.String,java.lang.String,android.content.Intent[],java.lang.String[],android.os.IBinder,com.android.server.wm.SafeActivityOptions,int,java.lang.String,com.android.server.am.PendingIntentRecord,boolean)>(null, i0, i1, i2, r1, r2, r3, r4, r5, r6, $i6, "startActivityInPackage", r7, z1);

        return $i7;
    }

    final int startActivitiesInPackage(int, java.lang.String, java.lang.String, android.content.Intent[], java.lang.String[], android.os.IBinder, com.android.server.wm.SafeActivityOptions, int, boolean, com.android.server.am.PendingIntentRecord, boolean)
    {
        com.android.server.wm.ActivityStartController r0;
        int i0, i1, $i2;
        java.lang.String r1, r2;
        android.content.Intent[] r3;
        java.lang.String[] r4;
        android.os.IBinder r5;
        com.android.server.wm.SafeActivityOptions r6;
        boolean z0, z1;
        com.android.server.am.PendingIntentRecord r7;

        r0 := @this: com.android.server.wm.ActivityStartController;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.content.Intent[];

        r4 := @parameter4: java.lang.String[];

        r5 := @parameter5: android.os.IBinder;

        r6 := @parameter6: com.android.server.wm.SafeActivityOptions;

        i1 := @parameter7: int;

        z0 := @parameter8: boolean;

        r7 := @parameter9: com.android.server.am.PendingIntentRecord;

        z1 := @parameter10: boolean;

        $i2 = virtualinvoke r0.<com.android.server.wm.ActivityStartController: int startActivitiesInPackage(int,int,int,java.lang.String,java.lang.String,android.content.Intent[],java.lang.String[],android.os.IBinder,com.android.server.wm.SafeActivityOptions,int,boolean,com.android.server.am.PendingIntentRecord,boolean)>(i0, 0, -1, r1, r2, r3, r4, r5, r6, i1, z0, r7, z1);

        return $i2;
    }

    final int startActivityInPackage(int, int, int, java.lang.String, java.lang.String, android.content.Intent, java.lang.String, android.os.IBinder, java.lang.String, int, int, com.android.server.wm.SafeActivityOptions, int, com.android.server.wm.Task, java.lang.String, boolean, com.android.server.am.PendingIntentRecord, boolean)
    {
        com.android.server.wm.ActivityStartController r0;
        int i0, i1, i2, i3, i4, $i5, i6, i7;
        java.lang.String r1, r2, r4, r6, r9;
        android.content.Intent r3;
        android.os.IBinder r5;
        com.android.server.wm.SafeActivityOptions r7;
        com.android.server.wm.Task r8;
        boolean z0, z1;
        com.android.server.am.PendingIntentRecord r10;
        com.android.server.wm.ActivityStarter $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26;

        r0 := @this: com.android.server.wm.ActivityStartController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: java.lang.String;

        r3 := @parameter5: android.content.Intent;

        r4 := @parameter6: java.lang.String;

        r5 := @parameter7: android.os.IBinder;

        r6 := @parameter8: java.lang.String;

        i3 := @parameter9: int;

        i4 := @parameter10: int;

        r7 := @parameter11: com.android.server.wm.SafeActivityOptions;

        i6 := @parameter12: int;

        r8 := @parameter13: com.android.server.wm.Task;

        r9 := @parameter14: java.lang.String;

        z0 := @parameter15: boolean;

        r10 := @parameter16: com.android.server.am.PendingIntentRecord;

        z1 := @parameter17: boolean;

        i7 = virtualinvoke r0.<com.android.server.wm.ActivityStartController: int checkTargetUser(int,boolean,int,int,java.lang.String)>(i6, z0, i1, i2, r9);

        $r11 = virtualinvoke r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityStarter obtainStarter(android.content.Intent,java.lang.String)>(r3, r9);

        $r12 = virtualinvoke $r11.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setCallingUid(int)>(i0);

        $r13 = virtualinvoke $r12.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setRealCallingPid(int)>(i1);

        $r14 = virtualinvoke $r13.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setRealCallingUid(int)>(i2);

        $r15 = virtualinvoke $r14.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setCallingPackage(java.lang.String)>(r1);

        $r16 = virtualinvoke $r15.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setCallingFeatureId(java.lang.String)>(r2);

        $r17 = virtualinvoke $r16.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setResolvedType(java.lang.String)>(r4);

        $r18 = virtualinvoke $r17.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setResultTo(android.os.IBinder)>(r5);

        $r19 = virtualinvoke $r18.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setResultWho(java.lang.String)>(r6);

        $r20 = virtualinvoke $r19.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setRequestCode(int)>(i3);

        $r21 = virtualinvoke $r20.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setStartFlags(int)>(i4);

        $r22 = virtualinvoke $r21.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setActivityOptions(com.android.server.wm.SafeActivityOptions)>(r7);

        $r23 = virtualinvoke $r22.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setUserId(int)>(i7);

        $r24 = virtualinvoke $r23.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setInTask(com.android.server.wm.Task)>(r8);

        $r25 = virtualinvoke $r24.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setOriginatingPendingIntent(com.android.server.am.PendingIntentRecord)>(r10);

        $r26 = virtualinvoke $r25.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setAllowBackgroundActivityStart(boolean)>(z1);

        $i5 = virtualinvoke $r26.<com.android.server.wm.ActivityStarter: int execute()>();

        return $i5;
    }

    void startHomeActivity(android.content.Intent, android.content.pm.ActivityInfo, java.lang.String, com.android.server.wm.TaskDisplayArea)
    {
        com.android.server.wm.ActivityStartController r0;
        android.content.pm.ActivityInfo r1;
        java.lang.String r2, $r5, $r15;
        android.app.ActivityOptions r3;
        com.android.server.wm.ActivityStack r4;
        boolean $z0, $z1;
        int $i0, $i1;
        com.android.server.wm.WindowContainer$RemoteToken $r7;
        android.window.WindowContainerToken $r8;
        com.android.server.wm.ActivityStackSupervisor $r10, $r11, $r25, $r27;
        java.lang.StringBuilder $r12;
        com.android.server.wm.ActivityStarter $r16, $r18, $r19, $r20, $r22;
        com.android.server.wm.ActivityRecord[] $r17, $r23;
        android.os.Bundle $r21;
        com.android.server.wm.ActivityRecord $r24;
        java.lang.Throwable $r26;
        android.content.Intent r28;
        com.android.server.wm.TaskDisplayArea r29;

        r0 := @this: com.android.server.wm.ActivityStartController;

        r28 := @parameter0: android.content.Intent;

        r1 := @parameter1: android.content.pm.ActivityInfo;

        r2 := @parameter2: java.lang.String;

        r29 := @parameter3: com.android.server.wm.TaskDisplayArea;

        r3 = staticinvoke <android.app.ActivityOptions: android.app.ActivityOptions makeBasic()>();

        virtualinvoke r3.<android.app.ActivityOptions: void setLaunchWindowingMode(int)>(1);

        $r5 = r1.<android.content.pm.ActivityInfo: java.lang.String name>;

        $z0 = staticinvoke <com.android.server.wm.ActivityRecord: boolean isResolverActivity(java.lang.String)>($r5);

        if $z0 != 0 goto label1;

        virtualinvoke r3.<android.app.ActivityOptions: void setLaunchActivityType(int)>(2);

     label1:
        $i0 = virtualinvoke r29.<com.android.server.wm.TaskDisplayArea: int getDisplayId()>();

        virtualinvoke r3.<android.app.ActivityOptions: android.app.ActivityOptions setLaunchDisplayId(int)>($i0);

        $r7 = r29.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.WindowContainer$RemoteToken mRemoteToken>;

        $r8 = virtualinvoke $r7.<com.android.server.wm.WindowContainer$RemoteToken: android.window.WindowContainerToken toWindowContainerToken()>();

        virtualinvoke r3.<android.app.ActivityOptions: android.app.ActivityOptions setLaunchTaskDisplayArea(android.window.WindowContainerToken)>($r8);

        $r10 = r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        virtualinvoke $r10.<com.android.server.wm.ActivityStackSupervisor: void beginDeferResume()>();

     label2:
        r4 = virtualinvoke r29.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getOrCreateRootHomeTask(boolean)>(1);

     label3:
        $r11 = r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        virtualinvoke $r11.<com.android.server.wm.ActivityStackSupervisor: void endDeferResume()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startHomeActivity: ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = virtualinvoke r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityStarter obtainStarter(android.content.Intent,java.lang.String)>(r28, $r15);

        $r17 = r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityRecord[] tmpOutRecord>;

        $r18 = virtualinvoke $r16.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setOutActivity(com.android.server.wm.ActivityRecord[])>($r17);

        $r19 = virtualinvoke $r18.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setCallingUid(int)>(0);

        $r20 = virtualinvoke $r19.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setActivityInfo(android.content.pm.ActivityInfo)>(r1);

        $r21 = virtualinvoke r3.<android.app.ActivityOptions: android.os.Bundle toBundle()>();

        $r22 = virtualinvoke $r20.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setActivityOptions(android.os.Bundle)>($r21);

        $i1 = virtualinvoke $r22.<com.android.server.wm.ActivityStarter: int execute()>();

        r0.<com.android.server.wm.ActivityStartController: int mLastHomeActivityStartResult> = $i1;

        $r23 = r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityRecord[] tmpOutRecord>;

        $r24 = $r23[0];

        r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityRecord mLastHomeActivityStartRecord> = $r24;

        $z1 = r4.<com.android.server.wm.ActivityStack: boolean mInResumeTopActivity>;

        if $z1 == 0 goto label4;

        $r25 = r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        virtualinvoke $r25.<com.android.server.wm.ActivityStackSupervisor: void scheduleResumeTopActivities()>();

     label4:
        return;

     label5:
        $r26 := @caughtexception;

        $r27 = r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        virtualinvoke $r27.<com.android.server.wm.ActivityStackSupervisor: void endDeferResume()>();

        throw $r26;

        catch java.lang.Throwable from label2 to label3 with label5;
    }

    void startSetupActivity()
    {
        com.android.server.wm.ActivityStartController r0;
        android.content.ContentResolver r1;
        android.content.pm.ResolveInfo r3;
        boolean $z0, $z1, $z2;
        com.android.server.wm.ActivityTaskManagerService $r4, $r6, $r8;
        android.content.Context $r5, $r9;
        int $i0, $i1;
        android.content.Intent $r7;
        android.content.pm.PackageManager $r10;
        java.lang.Object $r11;
        android.content.pm.ActivityInfo $r12, $r16, $r17, $r23, $r25, $r28, $r31;
        android.os.Bundle $r13, $r27, $r30, $r32;
        android.content.ComponentName $r15;
        java.lang.String $r18, $r19, r34, r35, r36;
        com.android.server.wm.ActivityStarter $r21, $r22, $r24;
        android.content.pm.ApplicationInfo $r26, $r29;
        java.util.List r33;

        r0 := @this: com.android.server.wm.ActivityStartController;

        $z0 = r0.<com.android.server.wm.ActivityStartController: boolean mCheckedForSetup>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r4 = r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityTaskManagerService mService>;

        $r5 = $r4.<com.android.server.wm.ActivityTaskManagerService: android.content.Context mContext>;

        r1 = virtualinvoke $r5.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r6 = r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityTaskManagerService mService>;

        $i0 = $r6.<com.android.server.wm.ActivityTaskManagerService: int mFactoryTest>;

        if $i0 == 1 goto label5;

        $i1 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r1, "device_provisioned", 0);

        if $i1 == 0 goto label5;

        r0.<com.android.server.wm.ActivityStartController: boolean mCheckedForSetup> = 1;

        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.UPGRADE_SETUP");

        $r8 = r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityTaskManagerService mService>;

        $r9 = $r8.<com.android.server.wm.ActivityTaskManagerService: android.content.Context mContext>;

        $r10 = virtualinvoke $r9.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r33 = virtualinvoke $r10.<android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>($r7, 1049728);

        $z1 = interfaceinvoke r33.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label5;

        $r11 = interfaceinvoke r33.<java.util.List: java.lang.Object get(int)>(0);

        r3 = (android.content.pm.ResolveInfo) $r11;

        $r12 = r3.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r13 = $r12.<android.content.pm.ActivityInfo: android.os.Bundle metaData>;

        if $r13 == null goto label2;

        $r31 = r3.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r32 = $r31.<android.content.pm.ActivityInfo: android.os.Bundle metaData>;

        r34 = virtualinvoke $r32.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.SETUP_VERSION");

        goto label3;

     label2:
        r34 = null;

     label3:
        r35 = r34;

        if r34 != null goto label4;

        r35 = r34;

        $r25 = r3.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r26 = $r25.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r27 = $r26.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

        if $r27 == null goto label4;

        $r28 = r3.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r29 = $r28.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r30 = $r29.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

        r35 = virtualinvoke $r30.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.SETUP_VERSION");

     label4:
        r36 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>(r1, "last_setup_shown");

        if r35 == null goto label5;

        $z2 = virtualinvoke r35.<java.lang.String: boolean equals(java.lang.Object)>(r36);

        if $z2 != 0 goto label5;

        virtualinvoke $r7.<android.content.Intent: android.content.Intent setFlags(int)>(268435456);

        $r15 = new android.content.ComponentName;

        $r16 = r3.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r19 = $r16.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r17 = r3.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r18 = $r17.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r15.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r19, $r18);

        virtualinvoke $r7.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r15);

        $r21 = virtualinvoke r0.<com.android.server.wm.ActivityStartController: com.android.server.wm.ActivityStarter obtainStarter(android.content.Intent,java.lang.String)>($r7, "startSetupActivity");

        $r22 = virtualinvoke $r21.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setCallingUid(int)>(0);

        $r23 = r3.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r24 = virtualinvoke $r22.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setActivityInfo(android.content.pm.ActivityInfo)>($r23);

        virtualinvoke $r24.<com.android.server.wm.ActivityStarter: int execute()>();

     label5:
        return;
    }

    public static void <clinit>()
    {
        <com.android.server.wm.ActivityStartController: java.lang.String TAG> = "ActivityTaskManager";

        <com.android.server.wm.ActivityStartController: int DO_PENDING_ACTIVITY_LAUNCHES_MSG> = 1;

        return;
    }
}
