class com.android.server.wm.ActivityStartInterceptor extends java.lang.Object
{
    android.content.pm.ActivityInfo mAInfo;
    android.app.ActivityOptions mActivityOptions;
    private java.lang.String mCallingFeatureId;
    private java.lang.String mCallingPackage;
    int mCallingPid;
    int mCallingUid;
    com.android.server.wm.Task mInTask;
    android.content.Intent mIntent;
    android.content.pm.ResolveInfo mRInfo;
    private int mRealCallingPid;
    private int mRealCallingUid;
    java.lang.String mResolvedType;
    private final com.android.server.wm.RootWindowContainer mRootWindowContainer;
    private final com.android.server.wm.ActivityTaskManagerService mService;
    private final android.content.Context mServiceContext;
    private int mStartFlags;
    private final com.android.server.wm.ActivityStackSupervisor mSupervisor;
    private int mUserId;
    private android.os.UserManager mUserManager;

    void <init>(com.android.server.wm.ActivityTaskManagerService, com.android.server.wm.ActivityStackSupervisor)
    {
        com.android.server.wm.ActivityStartInterceptor r0;
        com.android.server.wm.ActivityTaskManagerService r1;
        com.android.server.wm.ActivityStackSupervisor r2;
        android.content.Context $r3;
        com.android.server.wm.RootWindowContainer $r4;

        r0 := @this: com.android.server.wm.ActivityStartInterceptor;

        r1 := @parameter0: com.android.server.wm.ActivityTaskManagerService;

        r2 := @parameter1: com.android.server.wm.ActivityStackSupervisor;

        $r4 = r1.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        $r3 = r1.<com.android.server.wm.ActivityTaskManagerService: android.content.Context mContext>;

        specialinvoke r0.<com.android.server.wm.ActivityStartInterceptor: void <init>(com.android.server.wm.ActivityTaskManagerService,com.android.server.wm.ActivityStackSupervisor,com.android.server.wm.RootWindowContainer,android.content.Context)>(r1, r2, $r4, $r3);

        return;
    }

    void <init>(com.android.server.wm.ActivityTaskManagerService, com.android.server.wm.ActivityStackSupervisor, com.android.server.wm.RootWindowContainer, android.content.Context)
    {
        com.android.server.wm.ActivityStartInterceptor r0;
        com.android.server.wm.ActivityTaskManagerService r1;
        com.android.server.wm.ActivityStackSupervisor r2;
        com.android.server.wm.RootWindowContainer r3;
        android.content.Context r4;

        r0 := @this: com.android.server.wm.ActivityStartInterceptor;

        r1 := @parameter0: com.android.server.wm.ActivityTaskManagerService;

        r2 := @parameter1: com.android.server.wm.ActivityStackSupervisor;

        r3 := @parameter2: com.android.server.wm.RootWindowContainer;

        r4 := @parameter3: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.wm.ActivityStartInterceptor: com.android.server.wm.ActivityTaskManagerService mService> = r1;

        r0.<com.android.server.wm.ActivityStartInterceptor: com.android.server.wm.ActivityStackSupervisor mSupervisor> = r2;

        r0.<com.android.server.wm.ActivityStartInterceptor: com.android.server.wm.RootWindowContainer mRootWindowContainer> = r3;

        r0.<com.android.server.wm.ActivityStartInterceptor: android.content.Context mServiceContext> = r4;

        return;
    }

    private android.content.IntentSender createIntentSenderForOriginalIntent(int, int)
    {
        com.android.server.wm.ActivityStartInterceptor r0;
        int i0, i1, i2;
        android.os.Bundle r1;
        com.android.server.wm.ActivityTaskManagerService r2;
        java.lang.String r3, r4, r6;
        android.content.Intent r5;
        android.content.IntentSender $r7;
        android.content.Intent[] $r8;
        java.lang.String[] $r9;
        android.content.IIntentSender $r10;

        r0 := @this: com.android.server.wm.ActivityStartInterceptor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = specialinvoke r0.<com.android.server.wm.ActivityStartInterceptor: android.os.Bundle deferCrossProfileAppsAnimationIfNecessary()>();

        r2 = r0.<com.android.server.wm.ActivityStartInterceptor: com.android.server.wm.ActivityTaskManagerService mService>;

        r3 = r0.<com.android.server.wm.ActivityStartInterceptor: java.lang.String mCallingPackage>;

        r4 = r0.<com.android.server.wm.ActivityStartInterceptor: java.lang.String mCallingFeatureId>;

        i2 = r0.<com.android.server.wm.ActivityStartInterceptor: int mUserId>;

        r5 = r0.<com.android.server.wm.ActivityStartInterceptor: android.content.Intent mIntent>;

        r6 = r0.<com.android.server.wm.ActivityStartInterceptor: java.lang.String mResolvedType>;

        $r7 = new android.content.IntentSender;

        $r8 = newarray (android.content.Intent)[1];

        $r8[0] = r5;

        $r9 = newarray (java.lang.String)[1];

        $r9[0] = r6;

        $r10 = virtualinvoke r2.<com.android.server.wm.ActivityTaskManagerService: android.content.IIntentSender getIntentSenderLocked(int,java.lang.String,java.lang.String,int,int,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle)>(2, r3, r4, i0, i2, null, null, 0, $r8, $r9, i1, r1);

        specialinvoke $r7.<android.content.IntentSender: void <init>(android.content.IIntentSender)>($r10);

        return $r7;
    }

    private android.os.Bundle deferCrossProfileAppsAnimationIfNecessary()
    {
        com.android.server.wm.ActivityStartInterceptor r0;
        boolean $z0;
        android.app.ActivityOptions $r1;
        android.os.Bundle $r2;

        r0 := @this: com.android.server.wm.ActivityStartInterceptor;

        $z0 = specialinvoke r0.<com.android.server.wm.ActivityStartInterceptor: boolean hasCrossProfileAnimation()>();

        if $z0 == 0 goto label1;

        r0.<com.android.server.wm.ActivityStartInterceptor: android.app.ActivityOptions mActivityOptions> = null;

        $r1 = staticinvoke <android.app.ActivityOptions: android.app.ActivityOptions makeOpenCrossProfileAppsAnimation()>();

        $r2 = virtualinvoke $r1.<android.app.ActivityOptions: android.os.Bundle toBundle()>();

        return $r2;

     label1:
        return null;
    }

    private boolean hasCrossProfileAnimation()
    {
        com.android.server.wm.ActivityStartInterceptor r0;
        android.app.ActivityOptions r1;
        int $i0;
        boolean z0;

        r0 := @this: com.android.server.wm.ActivityStartInterceptor;

        r1 = r0.<com.android.server.wm.ActivityStartInterceptor: android.app.ActivityOptions mActivityOptions>;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<android.app.ActivityOptions: int getAnimationType()>();

        if $i0 != 12 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean interceptHarmfulAppIfNeeded()
    {
        com.android.server.wm.ActivityStartInterceptor r0;
        android.content.IntentSender r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        com.android.server.wm.ActivityTaskManagerService $r2;
        android.content.pm.IPackageManager $r3;
        android.content.pm.ActivityInfo $r4, $r6, $r12;
        java.lang.String $r5, $r7;
        android.content.Context $r8;
        com.android.server.wm.ActivityStackSupervisor $r9, $r11;
        android.content.Intent $r10, r15;
        android.os.RemoteException $r13;
        java.lang.CharSequence r14;
        android.content.pm.ResolveInfo r16;

        r0 := @this: com.android.server.wm.ActivityStartInterceptor;

     label1:
        $r2 = r0.<com.android.server.wm.ActivityStartInterceptor: com.android.server.wm.ActivityTaskManagerService mService>;

        $r3 = virtualinvoke $r2.<com.android.server.wm.ActivityTaskManagerService: android.content.pm.IPackageManager getPackageManager()>();

        $r4 = r0.<com.android.server.wm.ActivityStartInterceptor: android.content.pm.ActivityInfo mAInfo>;

        $r5 = $r4.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $i1 = r0.<com.android.server.wm.ActivityStartInterceptor: int mUserId>;

        r14 = interfaceinvoke $r3.<android.content.pm.IPackageManager: java.lang.CharSequence getHarmfulAppWarning(java.lang.String,int)>($r5, $i1);

     label2:
        if r14 != null goto label3;

        return 0;

     label3:
        $i2 = r0.<com.android.server.wm.ActivityStartInterceptor: int mCallingUid>;

        r1 = specialinvoke r0.<com.android.server.wm.ActivityStartInterceptor: android.content.IntentSender createIntentSenderForOriginalIntent(int,int)>($i2, 1409286144);

        $r8 = r0.<com.android.server.wm.ActivityStartInterceptor: android.content.Context mServiceContext>;

        $r6 = r0.<com.android.server.wm.ActivityStartInterceptor: android.content.pm.ActivityInfo mAInfo>;

        $r7 = $r6.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        r15 = staticinvoke <com.android.internal.app.HarmfulAppWarningActivity: android.content.Intent createHarmfulAppWarningIntent(android.content.Context,java.lang.String,android.content.IntentSender,java.lang.CharSequence)>($r8, $r7, r1, r14);

        r0.<com.android.server.wm.ActivityStartInterceptor: android.content.Intent mIntent> = r15;

        $i3 = r0.<com.android.server.wm.ActivityStartInterceptor: int mRealCallingPid>;

        r0.<com.android.server.wm.ActivityStartInterceptor: int mCallingPid> = $i3;

        i0 = r0.<com.android.server.wm.ActivityStartInterceptor: int mRealCallingUid>;

        r0.<com.android.server.wm.ActivityStartInterceptor: int mCallingUid> = i0;

        r0.<com.android.server.wm.ActivityStartInterceptor: java.lang.String mResolvedType> = null;

        $r9 = r0.<com.android.server.wm.ActivityStartInterceptor: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        $i4 = r0.<com.android.server.wm.ActivityStartInterceptor: int mUserId>;

        r16 = virtualinvoke $r9.<com.android.server.wm.ActivityStackSupervisor: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int,int,int)>(r15, null, $i4, 0, i0);

        r0.<com.android.server.wm.ActivityStartInterceptor: android.content.pm.ResolveInfo mRInfo> = r16;

        $r11 = r0.<com.android.server.wm.ActivityStartInterceptor: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        $r10 = r0.<com.android.server.wm.ActivityStartInterceptor: android.content.Intent mIntent>;

        $i5 = r0.<com.android.server.wm.ActivityStartInterceptor: int mStartFlags>;

        $r12 = virtualinvoke $r11.<com.android.server.wm.ActivityStackSupervisor: android.content.pm.ActivityInfo resolveActivity(android.content.Intent,android.content.pm.ResolveInfo,int,android.app.ProfilerInfo)>($r10, r16, $i5, null);

        r0.<com.android.server.wm.ActivityStartInterceptor: android.content.pm.ActivityInfo mAInfo> = $r12;

        return 1;

     label4:
        $r13 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    private boolean interceptLockTaskModeViolationPackageIfNeeded()
    {
        com.android.server.wm.ActivityStartInterceptor r0;
        java.lang.String r1, $r10;
        android.content.pm.ApplicationInfo $r2, $r5, $r9;
        com.android.server.wm.ActivityTaskManagerService $r3;
        android.content.pm.ActivityInfo $r4, $r7, $r8, $r14, r15;
        android.app.ActivityOptions $r6;
        int $i0, $i1, $i2, $i3, $i4, i5, i6;
        boolean $z0;
        com.android.server.wm.ActivityStackSupervisor $r11, $r13;
        android.content.Intent $r12, r17;
        com.android.server.wm.LockTaskController r16;
        android.content.pm.ResolveInfo r18;

        r0 := @this: com.android.server.wm.ActivityStartInterceptor;

        r15 = r0.<com.android.server.wm.ActivityStartInterceptor: android.content.pm.ActivityInfo mAInfo>;

        if r15 == null goto label3;

        $r2 = r15.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        if $r2 != null goto label1;

        goto label3;

     label1:
        $r3 = r0.<com.android.server.wm.ActivityStartInterceptor: com.android.server.wm.ActivityTaskManagerService mService>;

        r16 = virtualinvoke $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.LockTaskController getLockTaskController()>();

        $r4 = r0.<com.android.server.wm.ActivityStartInterceptor: android.content.pm.ActivityInfo mAInfo>;

        $r5 = $r4.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r1 = $r5.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r7 = r0.<com.android.server.wm.ActivityStartInterceptor: android.content.pm.ActivityInfo mAInfo>;

        $r6 = r0.<com.android.server.wm.ActivityStartInterceptor: android.app.ActivityOptions mActivityOptions>;

        i5 = staticinvoke <com.android.server.wm.ActivityRecord: int getLockTaskLaunchMode(android.content.pm.ActivityInfo,android.app.ActivityOptions)>($r7, $r6);

        $i0 = r0.<com.android.server.wm.ActivityStartInterceptor: int mUserId>;

        $z0 = virtualinvoke r16.<com.android.server.wm.LockTaskController: boolean isActivityAllowed(int,java.lang.String,int)>($i0, r1, i5);

        if $z0 == 0 goto label2;

        return 0;

     label2:
        $i1 = r0.<com.android.server.wm.ActivityStartInterceptor: int mUserId>;

        $r8 = r0.<com.android.server.wm.ActivityStartInterceptor: android.content.pm.ActivityInfo mAInfo>;

        $r9 = $r8.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r10 = $r9.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        r17 = staticinvoke <com.android.internal.app.BlockedAppActivity: android.content.Intent createIntent(int,java.lang.String)>($i1, $r10);

        r0.<com.android.server.wm.ActivityStartInterceptor: android.content.Intent mIntent> = r17;

        $i2 = r0.<com.android.server.wm.ActivityStartInterceptor: int mRealCallingPid>;

        r0.<com.android.server.wm.ActivityStartInterceptor: int mCallingPid> = $i2;

        i6 = r0.<com.android.server.wm.ActivityStartInterceptor: int mRealCallingUid>;

        r0.<com.android.server.wm.ActivityStartInterceptor: int mCallingUid> = i6;

        r0.<com.android.server.wm.ActivityStartInterceptor: java.lang.String mResolvedType> = null;

        $r11 = r0.<com.android.server.wm.ActivityStartInterceptor: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        $i3 = r0.<com.android.server.wm.ActivityStartInterceptor: int mUserId>;

        r18 = virtualinvoke $r11.<com.android.server.wm.ActivityStackSupervisor: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int,int,int)>(r17, null, $i3, 0, i6);

        r0.<com.android.server.wm.ActivityStartInterceptor: android.content.pm.ResolveInfo mRInfo> = r18;

        $r13 = r0.<com.android.server.wm.ActivityStartInterceptor: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        $r12 = r0.<com.android.server.wm.ActivityStartInterceptor: android.content.Intent mIntent>;

        $i4 = r0.<com.android.server.wm.ActivityStartInterceptor: int mStartFlags>;

        $r14 = virtualinvoke $r13.<com.android.server.wm.ActivityStackSupervisor: android.content.pm.ActivityInfo resolveActivity(android.content.Intent,android.content.pm.ResolveInfo,int,android.app.ProfilerInfo)>($r12, r18, $i4, null);

        r0.<com.android.server.wm.ActivityStartInterceptor: android.content.pm.ActivityInfo mAInfo> = $r14;

        return 1;

     label3:
        return 0;
    }

    private boolean interceptLockedManagedProfileIfNeeded()
    {
        com.android.server.wm.ActivityStartInterceptor r0;
        com.android.server.wm.Task r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.content.pm.ActivityInfo $r2, $r10;
        android.app.ActivityOptions $r3, $r11;
        android.os.UserManager $r4;
        java.lang.String $r5;
        android.content.Intent $r6, $r8, r13;
        com.android.server.wm.ActivityStackSupervisor $r7, $r9;
        android.content.pm.UserInfo r14;
        android.content.pm.ResolveInfo r15;

        r0 := @this: com.android.server.wm.ActivityStartInterceptor;

        $r2 = r0.<com.android.server.wm.ActivityStartInterceptor: android.content.pm.ActivityInfo mAInfo>;

        $i0 = r0.<com.android.server.wm.ActivityStartInterceptor: int mUserId>;

        r13 = specialinvoke r0.<com.android.server.wm.ActivityStartInterceptor: android.content.Intent interceptWithConfirmCredentialsIfNeeded(android.content.pm.ActivityInfo,int)>($r2, $i0);

        if r13 != null goto label1;

        return 0;

     label1:
        r0.<com.android.server.wm.ActivityStartInterceptor: android.content.Intent mIntent> = r13;

        $i1 = r0.<com.android.server.wm.ActivityStartInterceptor: int mRealCallingPid>;

        r0.<com.android.server.wm.ActivityStartInterceptor: int mCallingPid> = $i1;

        $i2 = r0.<com.android.server.wm.ActivityStartInterceptor: int mRealCallingUid>;

        r0.<com.android.server.wm.ActivityStartInterceptor: int mCallingUid> = $i2;

        r0.<com.android.server.wm.ActivityStartInterceptor: java.lang.String mResolvedType> = null;

        r1 = r0.<com.android.server.wm.ActivityStartInterceptor: com.android.server.wm.Task mInTask>;

        if r1 == null goto label2;

        $i7 = r1.<com.android.server.wm.Task: int mTaskId>;

        virtualinvoke r13.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.TASK_ID", $i7);

        r0.<com.android.server.wm.ActivityStartInterceptor: com.android.server.wm.Task mInTask> = null;

     label2:
        $r3 = r0.<com.android.server.wm.ActivityStartInterceptor: android.app.ActivityOptions mActivityOptions>;

        if $r3 != null goto label3;

        $r11 = staticinvoke <android.app.ActivityOptions: android.app.ActivityOptions makeBasic()>();

        r0.<com.android.server.wm.ActivityStartInterceptor: android.app.ActivityOptions mActivityOptions> = $r11;

     label3:
        $r4 = r0.<com.android.server.wm.ActivityStartInterceptor: android.os.UserManager mUserManager>;

        $i3 = r0.<com.android.server.wm.ActivityStartInterceptor: int mUserId>;

        r14 = virtualinvoke $r4.<android.os.UserManager: android.content.pm.UserInfo getProfileParent(int)>($i3);

        $r7 = r0.<com.android.server.wm.ActivityStartInterceptor: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        $r6 = r0.<com.android.server.wm.ActivityStartInterceptor: android.content.Intent mIntent>;

        $r5 = r0.<com.android.server.wm.ActivityStartInterceptor: java.lang.String mResolvedType>;

        $i5 = r14.<android.content.pm.UserInfo: int id>;

        $i4 = r0.<com.android.server.wm.ActivityStartInterceptor: int mRealCallingUid>;

        r15 = virtualinvoke $r7.<com.android.server.wm.ActivityStackSupervisor: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int,int,int)>($r6, $r5, $i5, 0, $i4);

        r0.<com.android.server.wm.ActivityStartInterceptor: android.content.pm.ResolveInfo mRInfo> = r15;

        $r9 = r0.<com.android.server.wm.ActivityStartInterceptor: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        $r8 = r0.<com.android.server.wm.ActivityStartInterceptor: android.content.Intent mIntent>;

        $i6 = r0.<com.android.server.wm.ActivityStartInterceptor: int mStartFlags>;

        $r10 = virtualinvoke $r9.<com.android.server.wm.ActivityStackSupervisor: android.content.pm.ActivityInfo resolveActivity(android.content.Intent,android.content.pm.ResolveInfo,int,android.app.ProfilerInfo)>($r8, r15, $i6, null);

        r0.<com.android.server.wm.ActivityStartInterceptor: android.content.pm.ActivityInfo mAInfo> = $r10;

        return 1;
    }

    private boolean interceptQuietProfileIfNeeded()
    {
        com.android.server.wm.ActivityStartInterceptor r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.os.UserManager $r1, $r4;
        android.os.UserHandle $r2;
        boolean $z0;
        android.content.Intent $r3, $r6, $r8;
        java.lang.String $r5;
        com.android.server.wm.ActivityStackSupervisor $r7, $r9;
        android.content.pm.ActivityInfo $r10;
        android.content.IntentSender r11;
        android.content.pm.UserInfo r12;
        android.content.pm.ResolveInfo r13;

        r0 := @this: com.android.server.wm.ActivityStartInterceptor;

        $r1 = r0.<com.android.server.wm.ActivityStartInterceptor: android.os.UserManager mUserManager>;

        $i0 = r0.<com.android.server.wm.ActivityStartInterceptor: int mUserId>;

        $r2 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>($i0);

        $z0 = virtualinvoke $r1.<android.os.UserManager: boolean isQuietModeEnabled(android.os.UserHandle)>($r2);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i1 = r0.<com.android.server.wm.ActivityStartInterceptor: int mCallingUid>;

        r11 = specialinvoke r0.<com.android.server.wm.ActivityStartInterceptor: android.content.IntentSender createIntentSenderForOriginalIntent(int,int)>($i1, 1342177280);

        $i2 = r0.<com.android.server.wm.ActivityStartInterceptor: int mUserId>;

        $r3 = staticinvoke <com.android.internal.app.UnlaunchableAppActivity: android.content.Intent createInQuietModeDialogIntent(int,android.content.IntentSender)>($i2, r11);

        r0.<com.android.server.wm.ActivityStartInterceptor: android.content.Intent mIntent> = $r3;

        $i3 = r0.<com.android.server.wm.ActivityStartInterceptor: int mRealCallingPid>;

        r0.<com.android.server.wm.ActivityStartInterceptor: int mCallingPid> = $i3;

        $i4 = r0.<com.android.server.wm.ActivityStartInterceptor: int mRealCallingUid>;

        r0.<com.android.server.wm.ActivityStartInterceptor: int mCallingUid> = $i4;

        r0.<com.android.server.wm.ActivityStartInterceptor: java.lang.String mResolvedType> = null;

        $r4 = r0.<com.android.server.wm.ActivityStartInterceptor: android.os.UserManager mUserManager>;

        $i5 = r0.<com.android.server.wm.ActivityStartInterceptor: int mUserId>;

        r12 = virtualinvoke $r4.<android.os.UserManager: android.content.pm.UserInfo getProfileParent(int)>($i5);

        $r7 = r0.<com.android.server.wm.ActivityStartInterceptor: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        $r6 = r0.<com.android.server.wm.ActivityStartInterceptor: android.content.Intent mIntent>;

        $r5 = r0.<com.android.server.wm.ActivityStartInterceptor: java.lang.String mResolvedType>;

        $i7 = r12.<android.content.pm.UserInfo: int id>;

        $i6 = r0.<com.android.server.wm.ActivityStartInterceptor: int mRealCallingUid>;

        r13 = virtualinvoke $r7.<com.android.server.wm.ActivityStackSupervisor: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int,int,int)>($r6, $r5, $i7, 0, $i6);

        r0.<com.android.server.wm.ActivityStartInterceptor: android.content.pm.ResolveInfo mRInfo> = r13;

        $r9 = r0.<com.android.server.wm.ActivityStartInterceptor: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        $r8 = r0.<com.android.server.wm.ActivityStartInterceptor: android.content.Intent mIntent>;

        $i8 = r0.<com.android.server.wm.ActivityStartInterceptor: int mStartFlags>;

        $r10 = virtualinvoke $r9.<com.android.server.wm.ActivityStackSupervisor: android.content.pm.ActivityInfo resolveActivity(android.content.Intent,android.content.pm.ResolveInfo,int,android.app.ProfilerInfo)>($r8, r13, $i8, null);

        r0.<com.android.server.wm.ActivityStartInterceptor: android.content.pm.ActivityInfo mAInfo> = $r10;

        return 1;
    }

    private boolean interceptSuspendedByAdminPackage()
    {
        com.android.server.wm.ActivityStartInterceptor r0;
        java.lang.Object $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.os.UserManager $r3;
        java.lang.String $r4, $r12;
        android.content.Intent $r5, $r9, $r13, r17;
        com.android.server.wm.ActivityStackSupervisor $r6, $r10, $r14;
        android.content.pm.ResolveInfo $r7, $r8, $r15;
        android.content.pm.ActivityInfo $r11;
        android.app.admin.DevicePolicyManagerInternal r16;
        android.content.pm.UserInfo r18;

        r0 := @this: com.android.server.wm.ActivityStartInterceptor;

        $r1 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/app/admin/DevicePolicyManagerInternal;");

        r16 = (android.app.admin.DevicePolicyManagerInternal) $r1;

        if r16 != null goto label1;

        return 0;

     label1:
        $i0 = r0.<com.android.server.wm.ActivityStartInterceptor: int mUserId>;

        r17 = virtualinvoke r16.<android.app.admin.DevicePolicyManagerInternal: android.content.Intent createShowAdminSupportIntent(int,boolean)>($i0, 1);

        r0.<com.android.server.wm.ActivityStartInterceptor: android.content.Intent mIntent> = r17;

        virtualinvoke r17.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.app.extra.RESTRICTION", "policy_suspend_packages");

        $i1 = r0.<com.android.server.wm.ActivityStartInterceptor: int mRealCallingPid>;

        r0.<com.android.server.wm.ActivityStartInterceptor: int mCallingPid> = $i1;

        $i2 = r0.<com.android.server.wm.ActivityStartInterceptor: int mRealCallingUid>;

        r0.<com.android.server.wm.ActivityStartInterceptor: int mCallingUid> = $i2;

        r0.<com.android.server.wm.ActivityStartInterceptor: java.lang.String mResolvedType> = null;

        $r3 = r0.<com.android.server.wm.ActivityStartInterceptor: android.os.UserManager mUserManager>;

        $i3 = r0.<com.android.server.wm.ActivityStartInterceptor: int mUserId>;

        r18 = virtualinvoke $r3.<android.os.UserManager: android.content.pm.UserInfo getProfileParent(int)>($i3);

        if r18 == null goto label2;

        $r14 = r0.<com.android.server.wm.ActivityStartInterceptor: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        $r13 = r0.<com.android.server.wm.ActivityStartInterceptor: android.content.Intent mIntent>;

        $r12 = r0.<com.android.server.wm.ActivityStartInterceptor: java.lang.String mResolvedType>;

        $i8 = r18.<android.content.pm.UserInfo: int id>;

        $i7 = r0.<com.android.server.wm.ActivityStartInterceptor: int mRealCallingUid>;

        $r15 = virtualinvoke $r14.<com.android.server.wm.ActivityStackSupervisor: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int,int,int)>($r13, $r12, $i8, 0, $i7);

        r0.<com.android.server.wm.ActivityStartInterceptor: android.content.pm.ResolveInfo mRInfo> = $r15;

        goto label3;

     label2:
        $r6 = r0.<com.android.server.wm.ActivityStartInterceptor: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        $r5 = r0.<com.android.server.wm.ActivityStartInterceptor: android.content.Intent mIntent>;

        $r4 = r0.<com.android.server.wm.ActivityStartInterceptor: java.lang.String mResolvedType>;

        $i5 = r0.<com.android.server.wm.ActivityStartInterceptor: int mUserId>;

        $i4 = r0.<com.android.server.wm.ActivityStartInterceptor: int mRealCallingUid>;

        $r7 = virtualinvoke $r6.<com.android.server.wm.ActivityStackSupervisor: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int,int,int)>($r5, $r4, $i5, 0, $i4);

        r0.<com.android.server.wm.ActivityStartInterceptor: android.content.pm.ResolveInfo mRInfo> = $r7;

     label3:
        $r10 = r0.<com.android.server.wm.ActivityStartInterceptor: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        $r9 = r0.<com.android.server.wm.ActivityStartInterceptor: android.content.Intent mIntent>;

        $r8 = r0.<com.android.server.wm.ActivityStartInterceptor: android.content.pm.ResolveInfo mRInfo>;

        $i6 = r0.<com.android.server.wm.ActivityStartInterceptor: int mStartFlags>;

        $r11 = virtualinvoke $r10.<com.android.server.wm.ActivityStackSupervisor: android.content.pm.ActivityInfo resolveActivity(android.content.Intent,android.content.pm.ResolveInfo,int,android.app.ProfilerInfo)>($r9, $r8, $i6, null);

        r0.<com.android.server.wm.ActivityStartInterceptor: android.content.pm.ActivityInfo mAInfo> = $r11;

        return 1;
    }

    private boolean interceptSuspendedPackageIfNeeded()
    {
        com.android.server.wm.ActivityStartInterceptor r0;
        java.lang.String r1, r2, $r10;
        android.content.pm.SuspendDialogInfo r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.content.pm.ApplicationInfo $r4, $r6, $r9;
        android.content.pm.ActivityInfo $r5, $r8, $r15, r17;
        com.android.server.wm.ActivityTaskManagerService $r7;
        boolean $z0, $z1, $z2;
        android.content.IntentSender $r11;
        com.android.server.wm.ActivityStackSupervisor $r12, $r14;
        android.content.Intent $r13, r20;
        android.app.ActivityOptions $r16;
        android.content.pm.PackageManagerInternal r18;
        android.os.Bundle r19;
        android.content.pm.ResolveInfo r21;

        r0 := @this: com.android.server.wm.ActivityStartInterceptor;

        r17 = r0.<com.android.server.wm.ActivityStartInterceptor: android.content.pm.ActivityInfo mAInfo>;

        if r17 == null goto label6;

        $r4 = r17.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        if $r4 == null goto label6;

        $r5 = r0.<com.android.server.wm.ActivityStartInterceptor: android.content.pm.ActivityInfo mAInfo>;

        $r6 = $r5.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = $r6.<android.content.pm.ApplicationInfo: int flags>;

        $i2 = $i1 & 1073741824;

        if $i2 != 0 goto label1;

        goto label6;

     label1:
        $r7 = r0.<com.android.server.wm.ActivityStartInterceptor: com.android.server.wm.ActivityTaskManagerService mService>;

        r18 = virtualinvoke $r7.<com.android.server.wm.ActivityTaskManagerService: android.content.pm.PackageManagerInternal getPackageManagerInternalLocked()>();

        if r18 != null goto label2;

        return 0;

     label2:
        $r8 = r0.<com.android.server.wm.ActivityStartInterceptor: android.content.pm.ActivityInfo mAInfo>;

        $r9 = $r8.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r1 = $r9.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $i3 = r0.<com.android.server.wm.ActivityStartInterceptor: int mUserId>;

        r2 = virtualinvoke r18.<android.content.pm.PackageManagerInternal: java.lang.String getSuspendingPackage(java.lang.String,int)>(r1, $i3);

        $r10 = "android";

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label3;

        $z2 = specialinvoke r0.<com.android.server.wm.ActivityStartInterceptor: boolean interceptSuspendedByAdminPackage()>();

        return $z2;

     label3:
        $i4 = r0.<com.android.server.wm.ActivityStartInterceptor: int mUserId>;

        r3 = virtualinvoke r18.<android.content.pm.PackageManagerInternal: android.content.pm.SuspendDialogInfo getSuspendedDialogInfo(java.lang.String,java.lang.String,int)>(r1, r2, $i4);

        $z1 = specialinvoke r0.<com.android.server.wm.ActivityStartInterceptor: boolean hasCrossProfileAnimation()>();

        if $z1 == 0 goto label4;

        $r16 = staticinvoke <android.app.ActivityOptions: android.app.ActivityOptions makeOpenCrossProfileAppsAnimation()>();

        r19 = virtualinvoke $r16.<android.app.ActivityOptions: android.os.Bundle toBundle()>();

        goto label5;

     label4:
        r19 = null;

     label5:
        $i5 = r0.<com.android.server.wm.ActivityStartInterceptor: int mCallingUid>;

        $r11 = specialinvoke r0.<com.android.server.wm.ActivityStartInterceptor: android.content.IntentSender createIntentSenderForOriginalIntent(int,int)>($i5, 67108864);

        $i6 = r0.<com.android.server.wm.ActivityStartInterceptor: int mUserId>;

        r20 = staticinvoke <com.android.internal.app.SuspendedAppActivity: android.content.Intent createSuspendedAppInterceptIntent(java.lang.String,java.lang.String,android.content.pm.SuspendDialogInfo,android.os.Bundle,android.content.IntentSender,int)>(r1, r2, r3, r19, $r11, $i6);

        r0.<com.android.server.wm.ActivityStartInterceptor: android.content.Intent mIntent> = r20;

        $i7 = r0.<com.android.server.wm.ActivityStartInterceptor: int mRealCallingPid>;

        r0.<com.android.server.wm.ActivityStartInterceptor: int mCallingPid> = $i7;

        i0 = r0.<com.android.server.wm.ActivityStartInterceptor: int mRealCallingUid>;

        r0.<com.android.server.wm.ActivityStartInterceptor: int mCallingUid> = i0;

        r0.<com.android.server.wm.ActivityStartInterceptor: java.lang.String mResolvedType> = null;

        $r12 = r0.<com.android.server.wm.ActivityStartInterceptor: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        $i8 = r0.<com.android.server.wm.ActivityStartInterceptor: int mUserId>;

        r21 = virtualinvoke $r12.<com.android.server.wm.ActivityStackSupervisor: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int,int,int)>(r20, null, $i8, 0, i0);

        r0.<com.android.server.wm.ActivityStartInterceptor: android.content.pm.ResolveInfo mRInfo> = r21;

        $r14 = r0.<com.android.server.wm.ActivityStartInterceptor: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        $r13 = r0.<com.android.server.wm.ActivityStartInterceptor: android.content.Intent mIntent>;

        $i9 = r0.<com.android.server.wm.ActivityStartInterceptor: int mStartFlags>;

        $r15 = virtualinvoke $r14.<com.android.server.wm.ActivityStackSupervisor: android.content.pm.ActivityInfo resolveActivity(android.content.Intent,android.content.pm.ResolveInfo,int,android.app.ProfilerInfo)>($r13, r21, $i9, null);

        r0.<com.android.server.wm.ActivityStartInterceptor: android.content.pm.ActivityInfo mAInfo> = $r15;

        return 1;

     label6:
        return 0;
    }

    private android.content.Intent interceptWithConfirmCredentialsIfNeeded(android.content.pm.ActivityInfo, int)
    {
        com.android.server.wm.ActivityStartInterceptor r0;
        android.content.pm.ActivityInfo r1;
        int i0, $i1;
        android.content.IntentSender r2;
        android.content.Intent r3;
        com.android.server.wm.ActivityTaskManagerService $r4;
        android.app.ActivityManagerInternal $r5;
        boolean $z0;
        android.content.Context $r6;
        java.lang.Object $r7;
        android.app.KeyguardManager $r8;
        java.lang.String $r10;

        r0 := @this: com.android.server.wm.ActivityStartInterceptor;

        r1 := @parameter0: android.content.pm.ActivityInfo;

        i0 := @parameter1: int;

        $r4 = r0.<com.android.server.wm.ActivityStartInterceptor: com.android.server.wm.ActivityTaskManagerService mService>;

        $r5 = $r4.<com.android.server.wm.ActivityTaskManagerService: android.app.ActivityManagerInternal mAmInternal>;

        $z0 = virtualinvoke $r5.<android.app.ActivityManagerInternal: boolean shouldConfirmCredentials(int)>(i0);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $i1 = r0.<com.android.server.wm.ActivityStartInterceptor: int mCallingUid>;

        r2 = specialinvoke r0.<com.android.server.wm.ActivityStartInterceptor: android.content.IntentSender createIntentSenderForOriginalIntent(int,int)>($i1, 1409286144);

        $r6 = r0.<com.android.server.wm.ActivityStartInterceptor: android.content.Context mServiceContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("keyguard");

        $r8 = (android.app.KeyguardManager) $r7;

        r3 = virtualinvoke $r8.<android.app.KeyguardManager: android.content.Intent createConfirmDeviceCredentialIntent(java.lang.CharSequence,java.lang.CharSequence,int,boolean)>(null, null, i0, 1);

        if r3 != null goto label2;

        return null;

     label2:
        virtualinvoke r3.<android.content.Intent: android.content.Intent setFlags(int)>(276840448);

        $r10 = r1.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.intent.extra.PACKAGE_NAME", $r10);

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.INTENT", r2);

        return r3;
    }

    boolean intercept(android.content.Intent, android.content.pm.ResolveInfo, android.content.pm.ActivityInfo, java.lang.String, com.android.server.wm.Task, int, int, android.app.ActivityOptions)
    {
        com.android.server.wm.ActivityStartInterceptor r0;
        android.content.Intent r1;
        android.content.pm.ResolveInfo r2;
        android.content.pm.ActivityInfo r3;
        java.lang.String r4;
        com.android.server.wm.Task r5;
        int i0, i1;
        android.app.ActivityOptions r6;
        android.content.Context $r7;
        android.os.UserManager $r8;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: com.android.server.wm.ActivityStartInterceptor;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: android.content.pm.ResolveInfo;

        r3 := @parameter2: android.content.pm.ActivityInfo;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: com.android.server.wm.Task;

        i0 := @parameter5: int;

        i1 := @parameter6: int;

        r6 := @parameter7: android.app.ActivityOptions;

        $r7 = r0.<com.android.server.wm.ActivityStartInterceptor: android.content.Context mServiceContext>;

        $r8 = staticinvoke <android.os.UserManager: android.os.UserManager get(android.content.Context)>($r7);

        r0.<com.android.server.wm.ActivityStartInterceptor: android.os.UserManager mUserManager> = $r8;

        r0.<com.android.server.wm.ActivityStartInterceptor: android.content.Intent mIntent> = r1;

        r0.<com.android.server.wm.ActivityStartInterceptor: int mCallingPid> = i0;

        r0.<com.android.server.wm.ActivityStartInterceptor: int mCallingUid> = i1;

        r0.<com.android.server.wm.ActivityStartInterceptor: android.content.pm.ResolveInfo mRInfo> = r2;

        r0.<com.android.server.wm.ActivityStartInterceptor: android.content.pm.ActivityInfo mAInfo> = r3;

        r0.<com.android.server.wm.ActivityStartInterceptor: java.lang.String mResolvedType> = r4;

        r0.<com.android.server.wm.ActivityStartInterceptor: com.android.server.wm.Task mInTask> = r5;

        r0.<com.android.server.wm.ActivityStartInterceptor: android.app.ActivityOptions mActivityOptions> = r6;

        $z0 = specialinvoke r0.<com.android.server.wm.ActivityStartInterceptor: boolean interceptQuietProfileIfNeeded()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.<com.android.server.wm.ActivityStartInterceptor: boolean interceptSuspendedPackageIfNeeded()>();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z2 = specialinvoke r0.<com.android.server.wm.ActivityStartInterceptor: boolean interceptLockTaskModeViolationPackageIfNeeded()>();

        if $z2 == 0 goto label3;

        return 1;

     label3:
        $z3 = specialinvoke r0.<com.android.server.wm.ActivityStartInterceptor: boolean interceptHarmfulAppIfNeeded()>();

        if $z3 == 0 goto label4;

        return 1;

     label4:
        $z4 = specialinvoke r0.<com.android.server.wm.ActivityStartInterceptor: boolean interceptLockedManagedProfileIfNeeded()>();

        return $z4;
    }

    void setStates(int, int, int, int, java.lang.String, java.lang.String)
    {
        com.android.server.wm.ActivityStartInterceptor r0;
        int i0, i1, i2, i3;
        java.lang.String r1, r2;

        r0 := @this: com.android.server.wm.ActivityStartInterceptor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: java.lang.String;

        r2 := @parameter5: java.lang.String;

        r0.<com.android.server.wm.ActivityStartInterceptor: int mRealCallingPid> = i1;

        r0.<com.android.server.wm.ActivityStartInterceptor: int mRealCallingUid> = i2;

        r0.<com.android.server.wm.ActivityStartInterceptor: int mUserId> = i0;

        r0.<com.android.server.wm.ActivityStartInterceptor: int mStartFlags> = i3;

        r0.<com.android.server.wm.ActivityStartInterceptor: java.lang.String mCallingPackage> = r1;

        r0.<com.android.server.wm.ActivityStartInterceptor: java.lang.String mCallingFeatureId> = r2;

        return;
    }
}
