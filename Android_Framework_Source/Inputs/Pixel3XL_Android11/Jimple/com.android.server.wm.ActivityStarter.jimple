class com.android.server.wm.ActivityStarter extends java.lang.Object
{
    private static final int INVALID_LAUNCH_MODE;
    private static final java.lang.String TAG;
    private static final java.lang.String TAG_CONFIGURATION;
    private static final java.lang.String TAG_FOCUS;
    private static final java.lang.String TAG_RESULTS;
    private static final java.lang.String TAG_USER_LEAVING;
    boolean mAddingToTask;
    private boolean mAvoidMoveToFront;
    private int mCallingUid;
    private final com.android.server.wm.ActivityStartController mController;
    private boolean mDoResume;
    private boolean mFrozeTaskList;
    private com.android.server.wm.Task mInTask;
    private android.content.Intent mIntent;
    private boolean mIntentDelivered;
    private final com.android.server.wm.ActivityStartInterceptor mInterceptor;
    private boolean mKeepCurTransition;
    private com.android.server.wm.ActivityRecord mLastStartActivityRecord;
    private int mLastStartActivityResult;
    private long mLastStartActivityTimeMs;
    private java.lang.String mLastStartReason;
    private int mLaunchFlags;
    private int mLaunchMode;
    private com.android.server.wm.LaunchParamsController$LaunchParams mLaunchParams;
    private boolean mLaunchTaskBehind;
    private boolean mMovedToFront;
    private android.content.pm.ActivityInfo mNewTaskInfo;
    private android.content.Intent mNewTaskIntent;
    private boolean mNoAnimation;
    private com.android.server.wm.ActivityRecord mNotTop;
    private android.app.ActivityOptions mOptions;
    private com.android.server.wm.TaskDisplayArea mPreferredTaskDisplayArea;
    private int mPreferredWindowingMode;
    com.android.server.wm.ActivityStarter$Request mRequest;
    private boolean mRestrictedBgActivity;
    private com.android.server.wm.Task mReuseTask;
    private final com.android.server.wm.RootWindowContainer mRootWindowContainer;
    private final com.android.server.wm.ActivityTaskManagerService mService;
    private com.android.server.wm.ActivityRecord mSourceRecord;
    private com.android.server.wm.ActivityStack mSourceStack;
    com.android.server.wm.ActivityRecord mStartActivity;
    private int mStartFlags;
    private final com.android.server.wm.ActivityStackSupervisor mSupervisor;
    private com.android.server.wm.ActivityStack mTargetStack;
    private com.android.server.wm.Task mTargetTask;
    private com.android.internal.app.IVoiceInteractor mVoiceInteractor;
    private android.service.voice.IVoiceInteractionSession mVoiceSession;

    void <init>(com.android.server.wm.ActivityStartController, com.android.server.wm.ActivityTaskManagerService, com.android.server.wm.ActivityStackSupervisor, com.android.server.wm.ActivityStartInterceptor)
    {
        com.android.server.wm.ActivityStarter r0;
        com.android.server.wm.ActivityStartController r1;
        com.android.server.wm.ActivityTaskManagerService r2;
        com.android.server.wm.ActivityStackSupervisor r3;
        com.android.server.wm.ActivityStartInterceptor r4;
        com.android.server.wm.LaunchParamsController$LaunchParams $r5;
        com.android.server.wm.ActivityStarter$Request $r6;
        com.android.server.wm.RootWindowContainer $r7;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r1 := @parameter0: com.android.server.wm.ActivityStartController;

        r2 := @parameter1: com.android.server.wm.ActivityTaskManagerService;

        r3 := @parameter2: com.android.server.wm.ActivityStackSupervisor;

        r4 := @parameter3: com.android.server.wm.ActivityStartInterceptor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new com.android.server.wm.LaunchParamsController$LaunchParams;

        specialinvoke $r5.<com.android.server.wm.LaunchParamsController$LaunchParams: void <init>()>();

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.LaunchParamsController$LaunchParams mLaunchParams> = $r5;

        $r6 = new com.android.server.wm.ActivityStarter$Request;

        specialinvoke $r6.<com.android.server.wm.ActivityStarter$Request: void <init>()>();

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest> = $r6;

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStartController mController> = r1;

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService> = r2;

        $r7 = r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.RootWindowContainer mRootWindowContainer> = $r7;

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStackSupervisor mSupervisor> = r3;

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStartInterceptor mInterceptor> = r4;

        virtualinvoke r0.<com.android.server.wm.ActivityStarter: void reset(boolean)>(1);

        return;
    }

    private void addOrReparentStartingActivity(com.android.server.wm.Task, java.lang.String)
    {
        com.android.server.wm.ActivityStarter r0;
        com.android.server.wm.Task r1, $r4, $r7;
        java.lang.String r2;
        com.android.server.wm.ActivityRecord $r3, $r5, $r6, $r8;
        int $i0;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r1 := @parameter0: com.android.server.wm.Task;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r4 = virtualinvoke $r3.<com.android.server.wm.ActivityRecord: com.android.server.wm.Task getTask()>();

        if $r4 == null goto label2;

        $r6 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r7 = virtualinvoke $r6.<com.android.server.wm.ActivityRecord: com.android.server.wm.Task getTask()>();

        if $r7 != r1 goto label1;

        goto label2;

     label1:
        $r8 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $i0 = virtualinvoke r1.<com.android.server.wm.Task: int getChildCount()>();

        virtualinvoke $r8.<com.android.server.wm.ActivityRecord: void reparent(com.android.server.wm.Task,int,java.lang.String)>(r1, $i0, r2);

        goto label3;

     label2:
        $r5 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        virtualinvoke r1.<com.android.server.wm.Task: void addChild(com.android.server.wm.ActivityRecord)>($r5);

     label3:
        return;
    }

    private int adjustLaunchFlagsToDocumentMode(com.android.server.wm.ActivityRecord, boolean, boolean, int)
    {
        com.android.server.wm.ActivityStarter r0;
        com.android.server.wm.ActivityRecord r1;
        boolean z0, z1;
        int i0, $i1, i3;
        android.content.pm.ActivityInfo $r2;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        i3 := @parameter3: int;

        $i1 = i3 & 524288;

        if $i1 == 0 goto label2;

        if z0 != 0 goto label1;

        if z1 == 0 goto label2;

     label1:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityTaskManager", "Ignoring FLAG_ACTIVITY_NEW_DOCUMENT, launchMode is \"singleInstance\" or \"singleTask\"");

        i3 = i3 & -134742017;

        goto label6;

     label2:
        $r2 = r1.<com.android.server.wm.ActivityRecord: android.content.pm.ActivityInfo info>;

        i0 = $r2.<android.content.pm.ActivityInfo: int documentLaunchMode>;

        if i0 == 1 goto label5;

        if i0 == 2 goto label4;

        if i0 == 3 goto label3;

        goto label6;

     label3:
        i3 = i3 & -134217729;

        goto label6;

     label4:
        i3 = i3 | 524288;

        goto label6;

     label5:
        i3 = i3 | 524288;

     label6:
        return i3;
    }

    private void complyActivityFlags(com.android.server.wm.Task, com.android.server.wm.ActivityRecord, com.android.server.uri.NeededUriGrants)
    {
        com.android.server.wm.ActivityStarter r0;
        com.android.server.uri.NeededUriGrants r1;
        com.android.server.wm.ActivityRecord r2, $r5, $r6, $r9, $r10, $r12, $r15, $r16, $r18, $r19, $r24, $r25, r28, r29, r30, $r31, $r34, $r35, r36;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, z10, $z11, $z12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, $i14;
        com.android.server.wm.ActivityStack $r3, $r23, $r26, r38;
        android.app.ActivityOptions $r4, $r22;
        android.content.pm.ActivityInfo $r7;
        com.android.server.wm.Task $r8, $r11, $r17, $r21, r27, $r37;
        android.content.ComponentName $r13, $r14, $r20, $r32, $r33;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r27 := @parameter0: com.android.server.wm.Task;

        r28 := @parameter1: com.android.server.wm.ActivityRecord;

        r1 := @parameter2: com.android.server.uri.NeededUriGrants;

        r2 = virtualinvoke r27.<com.android.server.wm.Task: com.android.server.wm.ActivityRecord getTopNonFinishingActivity()>();

        z9 = 0;

        if r28 == null goto label01;

        $i10 = r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags>;

        $i11 = $i10 & 2097152;

        if $i11 == 0 goto label01;

        z10 = 1;

        goto label02;

     label01:
        z10 = 0;

     label02:
        r29 = r2;

        if z10 == 0 goto label03;

        $r26 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mTargetStack>;

        $r25 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        r29 = virtualinvoke $r26.<com.android.server.wm.ActivityStack: com.android.server.wm.ActivityRecord resetTaskIfNeeded(com.android.server.wm.ActivityRecord,com.android.server.wm.ActivityRecord)>(r2, $r25);

     label03:
        i12 = r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags>;

        $i0 = i12 & 268468224;

        if $i0 != 268468224 goto label04;

        virtualinvoke r27.<com.android.server.wm.Task: void performClearTaskLocked()>();

        $r24 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        virtualinvoke r27.<com.android.server.wm.Task: void setIntent(com.android.server.wm.ActivityRecord)>($r24);

        r0.<com.android.server.wm.ActivityStarter: boolean mAddingToTask> = 1;

        goto label21;

     label04:
        $i1 = i12 & 67108864;

        if $i1 != 0 goto label16;

        $z3 = staticinvoke <com.android.server.wm.ActivityStarter: boolean isDocumentLaunchesIntoExisting(int)>(i12);

        if $z3 != 0 goto label16;

        $z4 = specialinvoke r0.<com.android.server.wm.ActivityStarter: boolean isLaunchModeOneOf(int,int)>(3, 2);

        if $z4 == 0 goto label05;

        goto label16;

     label05:
        i13 = r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags>;

        $i5 = i13 & 67108864;

        if $i5 != 0 goto label08;

        $z8 = r0.<com.android.server.wm.ActivityStarter: boolean mAddingToTask>;

        if $z8 != 0 goto label08;

        $i9 = i13 & 131072;

        if $i9 == 0 goto label08;

        $r19 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r20 = $r19.<com.android.server.wm.ActivityRecord: android.content.ComponentName mActivityComponent>;

        r30 = virtualinvoke r27.<com.android.server.wm.Task: com.android.server.wm.ActivityRecord findActivityInHistory(android.content.ComponentName)>($r20);

        if r30 == null goto label06;

        $r21 = virtualinvoke r30.<com.android.server.wm.ActivityRecord: com.android.server.wm.Task getTask()>();

        virtualinvoke $r21.<com.android.server.wm.Task: void moveActivityToFrontLocked(com.android.server.wm.ActivityRecord)>(r30);

        $r22 = r0.<com.android.server.wm.ActivityStarter: android.app.ActivityOptions mOptions>;

        virtualinvoke r30.<com.android.server.wm.ActivityRecord: void updateOptionsLocked(android.app.ActivityOptions)>($r22);

        specialinvoke r0.<com.android.server.wm.ActivityStarter: void deliverNewIntent(com.android.server.wm.ActivityRecord,com.android.server.uri.NeededUriGrants)>(r30, r1);

        $r23 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mTargetStack>;

        $r23.<com.android.server.wm.ActivityStack: com.android.server.wm.ActivityRecord mLastPausedActivity> = null;

        goto label07;

     label06:
        r0.<com.android.server.wm.ActivityStarter: boolean mAddingToTask> = 1;

     label07:
        goto label21;

     label08:
        $r31 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r32 = $r31.<com.android.server.wm.ActivityRecord: android.content.ComponentName mActivityComponent>;

        $r33 = r27.<com.android.server.wm.Task: android.content.ComponentName realActivity>;

        $z11 = virtualinvoke $r32.<android.content.ComponentName: boolean equals(java.lang.Object)>($r33);

        if $z11 == 0 goto label14;

        $r11 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.Task mInTask>;

        if r27 != $r11 goto label09;

        goto label21;

     label09:
        $i6 = r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags>;

        $i7 = $i6 & 536870912;

        if $i7 != 0 goto label10;

        $i8 = r0.<com.android.server.wm.ActivityStarter: int mLaunchMode>;

        if 1 != $i8 goto label12;

     label10:
        $r14 = r29.<com.android.server.wm.ActivityRecord: android.content.ComponentName mActivityComponent>;

        $r12 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r13 = $r12.<com.android.server.wm.ActivityRecord: android.content.ComponentName mActivityComponent>;

        $z6 = virtualinvoke $r14.<android.content.ComponentName: boolean equals(java.lang.Object)>($r13);

        if $z6 == 0 goto label12;

        $r15 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r16 = $r15.<com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityRecord resultTo>;

        if $r16 != null goto label12;

        $z7 = virtualinvoke r29.<com.android.server.wm.ActivityRecord: boolean isRootOfTask()>();

        if $z7 == 0 goto label11;

        $r17 = virtualinvoke r29.<com.android.server.wm.ActivityRecord: com.android.server.wm.Task getTask()>();

        $r18 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        virtualinvoke $r17.<com.android.server.wm.Task: void setIntent(com.android.server.wm.ActivityRecord)>($r18);

     label11:
        specialinvoke r0.<com.android.server.wm.ActivityStarter: void deliverNewIntent(com.android.server.wm.ActivityRecord,com.android.server.uri.NeededUriGrants)>(r29, r1);

        goto label21;

     label12:
        $r34 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $z12 = virtualinvoke r27.<com.android.server.wm.Task: boolean isSameIntentFilter(com.android.server.wm.ActivityRecord)>($r34);

        if $z12 != 0 goto label13;

        r0.<com.android.server.wm.ActivityStarter: boolean mAddingToTask> = 1;

        goto label21;

     label13:
        if r28 != null goto label21;

        r0.<com.android.server.wm.ActivityStarter: boolean mAddingToTask> = 1;

        goto label21;

     label14:
        if z10 != 0 goto label15;

        r0.<com.android.server.wm.ActivityStarter: boolean mAddingToTask> = 1;

        goto label21;

     label15:
        $z5 = r27.<com.android.server.wm.Task: boolean rootWasReset>;

        if $z5 != 0 goto label21;

        $r10 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        virtualinvoke r27.<com.android.server.wm.Task: void setIntent(com.android.server.wm.ActivityRecord)>($r10);

        goto label21;

     label16:
        $r35 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $i14 = r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags>;

        r36 = virtualinvoke r27.<com.android.server.wm.Task: com.android.server.wm.ActivityRecord performClearTaskForReuseLocked(com.android.server.wm.ActivityRecord,int)>($r35, $i14);

        $r37 = virtualinvoke r29.<com.android.server.wm.ActivityRecord: com.android.server.wm.Task getTask()>();

        if $r37 != null goto label17;

        virtualinvoke r27.<com.android.server.wm.Task: void addChild(com.android.server.wm.ActivityRecord)>(r29);

     label17:
        if r36 == null goto label19;

        $z2 = virtualinvoke r36.<com.android.server.wm.ActivityRecord: boolean isRootOfTask()>();

        if $z2 == 0 goto label18;

        $r8 = virtualinvoke r36.<com.android.server.wm.ActivityRecord: com.android.server.wm.Task getTask()>();

        $r9 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        virtualinvoke $r8.<com.android.server.wm.Task: void setIntent(com.android.server.wm.ActivityRecord)>($r9);

     label18:
        specialinvoke r0.<com.android.server.wm.ActivityStarter: void deliverNewIntent(com.android.server.wm.ActivityRecord,com.android.server.uri.NeededUriGrants)>(r36, r1);

        goto label21;

     label19:
        r0.<com.android.server.wm.ActivityStarter: boolean mAddingToTask> = 1;

        $r3 = virtualinvoke r27.<com.android.server.wm.Task: com.android.server.wm.ActivityStack getStack()>();

        if $r3 != null goto label21;

        $r5 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $i2 = r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags>;

        $r4 = r0.<com.android.server.wm.ActivityStarter: android.app.ActivityOptions mOptions>;

        r38 = specialinvoke r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack getLaunchStack(com.android.server.wm.ActivityRecord,int,com.android.server.wm.Task,android.app.ActivityOptions)>($r5, $i2, null, $r4);

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mTargetStack> = r38;

        z0 = r0.<com.android.server.wm.ActivityStarter: boolean mLaunchTaskBehind>;

        $r6 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r7 = $r6.<com.android.server.wm.ActivityRecord: android.content.pm.ActivityInfo info>;

        $i3 = $r7.<android.content.pm.ActivityInfo: int flags>;

        $i4 = $i3 & 1024;

        if $i4 == 0 goto label20;

        z9 = 1;

     label20:
        $z1 = z0 ^ 1;

        virtualinvoke r38.<com.android.server.wm.ActivityStack: void addChild(com.android.server.wm.WindowContainer,boolean,boolean)>(r27, $z1, z9);

     label21:
        return;
    }

    private void computeLaunchParams(com.android.server.wm.ActivityRecord, com.android.server.wm.ActivityRecord, com.android.server.wm.Task)
    {
        com.android.server.wm.ActivityStarter r0;
        com.android.server.wm.ActivityRecord r1, r10;
        com.android.server.wm.Task r2;
        android.app.ActivityOptions r3, $r8, $r9, $r12, $r17;
        com.android.server.wm.RootWindowContainer $r4, $r5;
        com.android.server.wm.LaunchParamsController$LaunchParams $r6, $r7, $r18, $r19;
        int $i0, $i1, $i2, $i3, i4, i5;
        boolean $z0, $z1, $z2, $z3;
        com.android.server.wm.ActivityStack r11;
        com.android.server.wm.ActivityStackSupervisor $r13;
        com.android.server.wm.LaunchParamsController $r14;
        android.content.pm.ActivityInfo $r15;
        android.content.pm.ActivityInfo$WindowLayout $r16;
        com.android.server.wm.TaskDisplayArea r20;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r10 := @parameter0: com.android.server.wm.ActivityRecord;

        r1 := @parameter1: com.android.server.wm.ActivityRecord;

        r2 := @parameter2: com.android.server.wm.Task;

        r11 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mSourceStack>;

        if r11 == null goto label01;

        goto label02;

     label01:
        $r4 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        r11 = virtualinvoke $r4.<com.android.server.wm.RootWindowContainer: com.android.server.wm.ActivityStack getTopDisplayFocusedStack()>();

     label02:
        if r11 == null goto label09;

        $z0 = virtualinvoke r11.<com.android.server.wm.ActivityStack: boolean inSplitScreenWindowingMode()>();

        if $z0 == 0 goto label09;

        r3 = r0.<com.android.server.wm.ActivityStarter: android.app.ActivityOptions mOptions>;

        if r3 == null goto label03;

        $i3 = virtualinvoke r3.<android.app.ActivityOptions: int getLaunchWindowingMode()>();

        if $i3 != 0 goto label09;

     label03:
        if r2 == null goto label04;

        i4 = virtualinvoke r2.<com.android.server.wm.Task: int getWindowingMode()>();

        goto label05;

     label04:
        i4 = 0;

     label05:
        i5 = i4;

        $i1 = r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags>;

        $i2 = $i1 & 4096;

        if $i2 == 0 goto label07;

        $z1 = virtualinvoke r11.<com.android.server.wm.ActivityStack: boolean inSplitScreenPrimaryWindowingMode()>();

        if $z1 == 0 goto label06;

        i5 = 4;

        goto label07;

     label06:
        i5 = i4;

        $z2 = virtualinvoke r11.<com.android.server.wm.ActivityStack: boolean inSplitScreenSecondaryWindowingMode()>();

        if $z2 == 0 goto label07;

        i5 = 3;

     label07:
        $r12 = r0.<com.android.server.wm.ActivityStarter: android.app.ActivityOptions mOptions>;

        if $r12 != null goto label08;

        $r9 = staticinvoke <android.app.ActivityOptions: android.app.ActivityOptions makeBasic()>();

        r0.<com.android.server.wm.ActivityStarter: android.app.ActivityOptions mOptions> = $r9;

     label08:
        $r8 = r0.<com.android.server.wm.ActivityStarter: android.app.ActivityOptions mOptions>;

        virtualinvoke $r8.<android.app.ActivityOptions: void setLaunchWindowingMode(int)>(i5);

     label09:
        $r13 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        $r14 = virtualinvoke $r13.<com.android.server.wm.ActivityStackSupervisor: com.android.server.wm.LaunchParamsController getLaunchParamsController()>();

        $r15 = r10.<com.android.server.wm.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r16 = $r15.<android.content.pm.ActivityInfo: android.content.pm.ActivityInfo$WindowLayout windowLayout>;

        $r17 = r0.<com.android.server.wm.ActivityStarter: android.app.ActivityOptions mOptions>;

        $r18 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.LaunchParamsController$LaunchParams mLaunchParams>;

        virtualinvoke $r14.<com.android.server.wm.LaunchParamsController: void calculate(com.android.server.wm.Task,android.content.pm.ActivityInfo$WindowLayout,com.android.server.wm.ActivityRecord,com.android.server.wm.ActivityRecord,android.app.ActivityOptions,int,com.android.server.wm.LaunchParamsController$LaunchParams)>(r2, $r16, r10, r1, $r17, 2, $r18);

        $r19 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.LaunchParamsController$LaunchParams mLaunchParams>;

        $z3 = virtualinvoke $r19.<com.android.server.wm.LaunchParamsController$LaunchParams: boolean hasPreferredTaskDisplayArea()>();

        if $z3 == 0 goto label10;

        $r7 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.LaunchParamsController$LaunchParams mLaunchParams>;

        r20 = $r7.<com.android.server.wm.LaunchParamsController$LaunchParams: com.android.server.wm.TaskDisplayArea mPreferredTaskDisplayArea>;

        goto label11;

     label10:
        $r5 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        r20 = virtualinvoke $r5.<com.android.server.wm.RootWindowContainer: com.android.server.wm.TaskDisplayArea getDefaultTaskDisplayArea()>();

     label11:
        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.TaskDisplayArea mPreferredTaskDisplayArea> = r20;

        $r6 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.LaunchParamsController$LaunchParams mLaunchParams>;

        $i0 = $r6.<com.android.server.wm.LaunchParamsController$LaunchParams: int mWindowingMode>;

        r0.<com.android.server.wm.ActivityStarter: int mPreferredWindowingMode> = $i0;

        return;
    }

    private void computeLaunchingTaskFlags()
    {
        com.android.server.wm.ActivityStarter r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        com.android.server.wm.ActivityRecord $r1, $r7, $r20, $r23, $r29, r48, $r53, r54, r56;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.StringBuilder $r2, $r12, $r27, $r37;
        android.content.Intent $r4, $r18, $r24, r47;
        java.lang.String $r6, $r17, $r35, $r45;
        com.android.server.wm.ActivityStack $r8;
        com.android.server.wm.Task $r9, $r10, $r14, $r21, $r32, $r39, r46, $r51, r55;
        android.app.ActivityOptions $r11, $r26, $r36;
        java.lang.IllegalArgumentException $r16, $r34, $r44;
        android.content.ComponentName $r22, $r25;

        r0 := @this: com.android.server.wm.ActivityStarter;

        $r1 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mSourceRecord>;

        if $r1 != null goto label08;

        r46 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.Task mInTask>;

        if r46 == null goto label08;

        $r8 = virtualinvoke r46.<com.android.server.wm.Task: com.android.server.wm.ActivityStack getStack()>();

        if $r8 == null goto label08;

        $r9 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.Task mInTask>;

        r47 = virtualinvoke $r9.<com.android.server.wm.Task: android.content.Intent getBaseIntent()>();

        $r10 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.Task mInTask>;

        r48 = virtualinvoke $r10.<com.android.server.wm.Task: com.android.server.wm.ActivityRecord getRootActivity()>();

        if r47 == null goto label07;

        $z3 = specialinvoke r0.<com.android.server.wm.ActivityStarter: boolean isLaunchModeOneOf(int,int)>(3, 2);

        if $z3 == 0 goto label03;

        $r22 = virtualinvoke r47.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r23 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r24 = $r23.<com.android.server.wm.ActivityRecord: android.content.Intent intent>;

        $r25 = virtualinvoke $r24.<android.content.Intent: android.content.ComponentName getComponent()>();

        $z4 = virtualinvoke $r22.<android.content.ComponentName: boolean equals(java.lang.Object)>($r25);

        if $z4 == 0 goto label02;

        if r48 != null goto label01;

        goto label03;

     label01:
        $r36 = r0.<com.android.server.wm.ActivityStarter: android.app.ActivityOptions mOptions>;

        staticinvoke <android.app.ActivityOptions: void abort(android.app.ActivityOptions)>($r36);

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caller with mInTask ");

        $r39 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.Task mInTask>;

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r39);

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has root ");

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r48);

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but target is singleInstance/Task");

        $r44 = new java.lang.IllegalArgumentException;

        $r45 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r44.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r45);

        throw $r44;

     label02:
        $r26 = r0.<com.android.server.wm.ActivityStarter: android.app.ActivityOptions mOptions>;

        staticinvoke <android.app.ActivityOptions: void abort(android.app.ActivityOptions)>($r26);

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to launch singleInstance/Task ");

        $r29 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" into different task ");

        $r32 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.Task mInTask>;

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r32);

        $r34 = new java.lang.IllegalArgumentException;

        $r35 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r34.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r35);

        throw $r34;

     label03:
        if r48 != null goto label04;

        $i13 = r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags>;

        $i14 = $i13 & -403185665;

        $i15 = virtualinvoke r47.<android.content.Intent: int getFlags()>();

        $i16 = $i15 & 403185664;

        i0 = $i14 | $i16;

        r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags> = i0;

        $r18 = r0.<com.android.server.wm.ActivityStarter: android.content.Intent mIntent>;

        virtualinvoke $r18.<android.content.Intent: android.content.Intent setFlags(int)>(i0);

        $r21 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.Task mInTask>;

        $r20 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        virtualinvoke $r21.<com.android.server.wm.Task: void setIntent(com.android.server.wm.ActivityRecord)>($r20);

        r0.<com.android.server.wm.ActivityStarter: boolean mAddingToTask> = 1;

        goto label06;

     label04:
        $i11 = r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags>;

        $i12 = $i11 & 268435456;

        if $i12 == 0 goto label05;

        r0.<com.android.server.wm.ActivityStarter: boolean mAddingToTask> = 0;

        goto label06;

     label05:
        r0.<com.android.server.wm.ActivityStarter: boolean mAddingToTask> = 1;

     label06:
        $r51 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.Task mInTask>;

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.Task mReuseTask> = $r51;

        goto label10;

     label07:
        $r11 = r0.<com.android.server.wm.ActivityStarter: android.app.ActivityOptions mOptions>;

        staticinvoke <android.app.ActivityOptions: void abort(android.app.ActivityOptions)>($r11);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Launching into task without base intent: ");

        $r14 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.Task mInTask>;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = new java.lang.IllegalArgumentException;

        $r17 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r16;

     label08:
        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.Task mInTask> = null;

        $r53 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $z5 = virtualinvoke $r53.<com.android.server.wm.ActivityRecord: boolean isResolverOrDelegateActivity()>();

        if $z5 != 0 goto label09;

        $r7 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $z2 = $r7.<com.android.server.wm.ActivityRecord: boolean noDisplay>;

        if $z2 == 0 goto label10;

     label09:
        r54 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mSourceRecord>;

        if r54 == null goto label10;

        $z1 = virtualinvoke r54.<com.android.server.wm.ActivityRecord: boolean inFreeformWindowingMode()>();

        if $z1 == 0 goto label10;

        r0.<com.android.server.wm.ActivityStarter: boolean mAddingToTask> = 1;

     label10:
        r55 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.Task mInTask>;

        if r55 != null goto label13;

        r56 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mSourceRecord>;

        if r56 != null goto label11;

        $i6 = r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags>;

        $i7 = $i6 & 268435456;

        if $i7 != 0 goto label13;

        if r55 != null goto label13;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startActivity called from non-Activity context; forcing Intent.FLAG_ACTIVITY_NEW_TASK for: ");

        $r4 = r0.<com.android.server.wm.ActivityStarter: android.content.Intent mIntent>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityTaskManager", $r6);

        $i9 = r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags>;

        $i10 = $i9 | 268435456;

        r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags> = $i10;

        goto label13;

     label11:
        $i1 = r56.<com.android.server.wm.ActivityRecord: int launchMode>;

        if $i1 != 3 goto label12;

        $i4 = r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags>;

        $i5 = $i4 | 268435456;

        r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags> = $i5;

        goto label13;

     label12:
        $z0 = specialinvoke r0.<com.android.server.wm.ActivityStarter: boolean isLaunchModeOneOf(int,int)>(3, 2);

        if $z0 == 0 goto label13;

        $i2 = r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags>;

        $i3 = $i2 | 268435456;

        r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags> = $i3;

     label13:
        return;
    }

    static int computeResolveFilterUid(int, int, int)
    {
        int i0, i1, i2;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i1 == -10000 goto label1;

        i2 = i1;

        goto label3;

     label1:
        if i2 < 0 goto label2;

        goto label3;

     label2:
        i2 = i0;

     label3:
        return i2;
    }

    private void computeSourceStack()
    {
        com.android.server.wm.ActivityStarter r0;
        boolean $z0;
        int $i0, $i1, $i3, $i4;
        java.lang.StringBuilder $r1;
        com.android.server.wm.ActivityRecord $r3, $r9, $r11, $r12, r14;
        android.content.Intent $r6, r17;
        java.lang.String $r8;
        android.content.pm.ActivityInfo $r10;
        com.android.server.wm.ActivityStack $r13;
        com.android.server.wm.Task r16;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r14 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mSourceRecord>;

        if r14 != null goto label1;

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mSourceStack> = null;

        return;

     label1:
        $z0 = r14.<com.android.server.wm.ActivityRecord: boolean finishing>;

        if $z0 != 0 goto label2;

        $r12 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mSourceRecord>;

        $r13 = virtualinvoke $r12.<com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityStack getRootTask()>();

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mSourceStack> = $r13;

        return;

     label2:
        $i0 = r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags>;

        $i1 = $i0 & 268435456;

        if $i1 != 0 goto label5;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startActivity called from finishing ");

        $r3 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mSourceRecord>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; forcing Intent.FLAG_ACTIVITY_NEW_TASK for: ");

        $r6 = r0.<com.android.server.wm.ActivityStarter: android.content.Intent mIntent>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityTaskManager", $r8);

        $i3 = r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags>;

        $i4 = $i3 | 268435456;

        r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags> = $i4;

        $r9 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mSourceRecord>;

        $r10 = $r9.<com.android.server.wm.ActivityRecord: android.content.pm.ActivityInfo info>;

        r0.<com.android.server.wm.ActivityStarter: android.content.pm.ActivityInfo mNewTaskInfo> = $r10;

        $r11 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mSourceRecord>;

        r16 = virtualinvoke $r11.<com.android.server.wm.ActivityRecord: com.android.server.wm.Task getTask()>();

        if r16 == null goto label3;

        r17 = r16.<com.android.server.wm.Task: android.content.Intent intent>;

        goto label4;

     label3:
        r17 = null;

     label4:
        r0.<com.android.server.wm.ActivityStarter: android.content.Intent mNewTaskIntent> = r17;

     label5:
        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mSourceRecord> = null;

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mSourceStack> = null;

        return;
    }

    private com.android.server.wm.Task computeTargetTask()
    {
        com.android.server.wm.ActivityStarter r0;
        com.android.server.wm.ActivityRecord r1, $r2, $r3, $r5, r9;
        android.app.ActivityOptions $r4;
        int $i0, $i1, $i2;
        com.android.server.wm.Task $r6, $r7, $r8, r10;
        boolean $z0;
        com.android.server.wm.ActivityStack r11;

        r0 := @this: com.android.server.wm.ActivityStarter;

        $r2 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r3 = $r2.<com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityRecord resultTo>;

        if $r3 != null goto label1;

        $r8 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.Task mInTask>;

        if $r8 != null goto label1;

        $z0 = r0.<com.android.server.wm.ActivityStarter: boolean mAddingToTask>;

        if $z0 != 0 goto label1;

        $i1 = r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags>;

        $i2 = $i1 & 268435456;

        if $i2 == 0 goto label1;

        return null;

     label1:
        r9 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mSourceRecord>;

        if r9 == null goto label2;

        $r7 = virtualinvoke r9.<com.android.server.wm.ActivityRecord: com.android.server.wm.Task getTask()>();

        return $r7;

     label2:
        r10 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.Task mInTask>;

        if r10 == null goto label3;

        return r10;

     label3:
        $r5 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $i0 = r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags>;

        $r4 = r0.<com.android.server.wm.ActivityStarter: android.app.ActivityOptions mOptions>;

        r11 = specialinvoke r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack getLaunchStack(com.android.server.wm.ActivityRecord,int,com.android.server.wm.Task,android.app.ActivityOptions)>($r5, $i0, null, $r4);

        r1 = virtualinvoke r11.<com.android.server.wm.ActivityStack: com.android.server.wm.ActivityRecord getTopNonFinishingActivity()>();

        if r1 == null goto label4;

        $r6 = virtualinvoke r1.<com.android.server.wm.ActivityRecord: com.android.server.wm.Task getTask()>();

        return $r6;

     label4:
        virtualinvoke r11.<com.android.server.wm.ActivityStack: void removeIfPossible()>();

        return null;
    }

    private android.content.Intent createLaunchIntent(android.content.pm.AuxiliaryResolveInfo, android.content.Intent, java.lang.String, java.lang.String, android.os.Bundle, java.lang.String, int)
    {
        com.android.server.wm.ActivityStarter r0;
        android.content.Intent r1, r6, $r7, r11;
        java.lang.String r2, r3, r5, r13;
        android.os.Bundle r4;
        int i0;
        boolean $z0, $z1, $z2, z3;
        com.android.server.wm.ActivityTaskManagerService $r8;
        android.content.pm.AuxiliaryResolveInfo r9;
        android.content.pm.PackageManagerInternal r10;
        android.content.ComponentName r12;
        java.util.List r14;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r9 := @parameter0: android.content.pm.AuxiliaryResolveInfo;

        r1 := @parameter1: android.content.Intent;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.os.Bundle;

        r5 := @parameter5: java.lang.String;

        i0 := @parameter6: int;

        if r9 == null goto label01;

        $z1 = r9.<android.content.pm.AuxiliaryResolveInfo: boolean needsPhaseTwo>;

        if $z1 == 0 goto label01;

        $r8 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        r10 = virtualinvoke $r8.<com.android.server.wm.ActivityTaskManagerService: android.content.pm.PackageManagerInternal getPackageManagerInternalLocked()>();

        $z2 = virtualinvoke r10.<android.content.pm.PackageManagerInternal: boolean isInstantApp(java.lang.String,int)>(r2, i0);

        virtualinvoke r10.<android.content.pm.PackageManagerInternal: void requestInstantAppResolutionPhaseTwo(android.content.pm.AuxiliaryResolveInfo,android.content.Intent,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle,int)>(r9, r1, r5, r2, r3, $z2, r4, i0);

        goto label01;

     label01:
        r6 = staticinvoke <com.android.server.pm.InstantAppResolver: android.content.Intent sanitizeIntent(android.content.Intent)>(r1);

        if r9 != null goto label02;

        r11 = null;

        goto label03;

     label02:
        r11 = r9.<android.content.pm.AuxiliaryResolveInfo: android.content.Intent failureIntent>;

     label03:
        if r9 != null goto label04;

        r12 = null;

        goto label05;

     label04:
        r12 = r9.<android.content.pm.AuxiliaryResolveInfo: android.content.ComponentName installFailureActivity>;

     label05:
        if r9 != null goto label06;

        r13 = null;

        goto label07;

     label06:
        r13 = r9.<android.content.pm.AuxiliaryResolveInfo: java.lang.String token>;

     label07:
        if r9 == null goto label08;

        $z0 = r9.<android.content.pm.AuxiliaryResolveInfo: boolean needsPhaseTwo>;

        if $z0 == 0 goto label08;

        z3 = 1;

        goto label09;

     label08:
        z3 = 0;

     label09:
        if r9 != null goto label10;

        r14 = null;

        goto label11;

     label10:
        r14 = r9.<android.content.pm.AuxiliaryResolveInfo: java.util.List filters>;

     label11:
        $r7 = staticinvoke <com.android.server.pm.InstantAppResolver: android.content.Intent buildEphemeralInstallerIntent(android.content.Intent,android.content.Intent,android.content.Intent,java.lang.String,java.lang.String,android.os.Bundle,java.lang.String,int,android.content.ComponentName,java.lang.String,boolean,java.util.List)>(r1, r6, r11, r2, r3, r4, r5, i0, r12, r13, z3, r14);

        return $r7;
    }

    private void deliverNewIntent(com.android.server.wm.ActivityRecord, com.android.server.uri.NeededUriGrants)
    {
        com.android.server.wm.ActivityStarter r0;
        com.android.server.wm.ActivityRecord r1, $r4, $r5;
        com.android.server.uri.NeededUriGrants r2;
        boolean $z0;
        com.android.server.wm.Task $r3;
        java.lang.String $r6;
        android.content.Intent $r7;
        int $i0;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        r2 := @parameter1: com.android.server.uri.NeededUriGrants;

        $z0 = r0.<com.android.server.wm.ActivityStarter: boolean mIntentDelivered>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = virtualinvoke r1.<com.android.server.wm.ActivityRecord: com.android.server.wm.Task getTask()>();

        virtualinvoke r1.<com.android.server.wm.ActivityRecord: void logStartActivity(int,com.android.server.wm.Task)>(30003, $r3);

        $i0 = r0.<com.android.server.wm.ActivityStarter: int mCallingUid>;

        $r4 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r7 = $r4.<com.android.server.wm.ActivityRecord: android.content.Intent intent>;

        $r5 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r6 = $r5.<com.android.server.wm.ActivityRecord: java.lang.String launchedFromPackage>;

        virtualinvoke r1.<com.android.server.wm.ActivityRecord: void deliverNewIntentLocked(int,android.content.Intent,com.android.server.uri.NeededUriGrants,java.lang.String)>($i0, $r7, r2, $r6);

        r0.<com.android.server.wm.ActivityStarter: boolean mIntentDelivered> = 1;

        return;
    }

    private int deliverToCurrentTopIfNeeded(com.android.server.wm.ActivityStack, com.android.server.uri.NeededUriGrants)
    {
        com.android.server.wm.ActivityStarter r0;
        com.android.server.wm.ActivityStack r1;
        com.android.server.uri.NeededUriGrants r2;
        com.android.server.wm.ActivityRecord r3, $r4, $r11, $r12, $r13, $r16;
        boolean $z0, $z2, $z3, $z4, $z5, z6;
        android.app.ActivityOptions $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        com.android.server.wm.ActivityStackSupervisor $r6;
        com.android.server.wm.Task $r7;
        com.android.server.wm.LaunchParamsController$LaunchParams $r8;
        com.android.server.wm.TaskDisplayArea $r9, $r17, $r18;
        com.android.server.wm.RootWindowContainer $r10;
        android.content.ComponentName $r14, $r15;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r1 := @parameter0: com.android.server.wm.ActivityStack;

        r2 := @parameter1: com.android.server.uri.NeededUriGrants;

        $r4 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mNotTop>;

        r3 = virtualinvoke r1.<com.android.server.wm.ActivityStack: com.android.server.wm.ActivityRecord topRunningNonDelayedActivityLocked(com.android.server.wm.ActivityRecord)>($r4);

        if r3 == null goto label3;

        $r11 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r12 = $r11.<com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityRecord resultTo>;

        if $r12 != null goto label3;

        $r15 = r3.<com.android.server.wm.ActivityRecord: android.content.ComponentName mActivityComponent>;

        $r13 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r14 = $r13.<com.android.server.wm.ActivityRecord: android.content.ComponentName mActivityComponent>;

        $z2 = virtualinvoke $r15.<android.content.ComponentName: boolean equals(java.lang.Object)>($r14);

        if $z2 == 0 goto label3;

        $i4 = r3.<com.android.server.wm.ActivityRecord: int mUserId>;

        $r16 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $i3 = $r16.<com.android.server.wm.ActivityRecord: int mUserId>;

        if $i4 != $i3 goto label3;

        $z3 = virtualinvoke r3.<com.android.server.wm.ActivityRecord: boolean attachedToProcess()>();

        if $z3 == 0 goto label3;

        $i5 = r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags>;

        $i6 = $i5 & 536870912;

        if $i6 != 0 goto label1;

        $z5 = specialinvoke r0.<com.android.server.wm.ActivityStarter: boolean isLaunchModeOneOf(int,int)>(1, 2);

        if $z5 == 0 goto label3;

     label1:
        $z4 = virtualinvoke r3.<com.android.server.wm.ActivityRecord: boolean isActivityTypeHome()>();

        if $z4 == 0 goto label2;

        $r17 = virtualinvoke r3.<com.android.server.wm.ActivityRecord: com.android.server.wm.TaskDisplayArea getDisplayArea()>();

        $r18 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.TaskDisplayArea mPreferredTaskDisplayArea>;

        if $r17 != $r18 goto label3;

     label2:
        z6 = 1;

        goto label4;

     label3:
        z6 = 0;

     label4:
        if z6 != 0 goto label5;

        return 0;

     label5:
        r1.<com.android.server.wm.ActivityStack: com.android.server.wm.ActivityRecord mLastPausedActivity> = null;

        $z0 = r0.<com.android.server.wm.ActivityStarter: boolean mDoResume>;

        if $z0 == 0 goto label6;

        $r10 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        virtualinvoke $r10.<com.android.server.wm.RootWindowContainer: boolean resumeFocusedStacksTopActivities()>();

     label6:
        $r5 = r0.<com.android.server.wm.ActivityStarter: android.app.ActivityOptions mOptions>;

        staticinvoke <android.app.ActivityOptions: void abort(android.app.ActivityOptions)>($r5);

        $i0 = r0.<com.android.server.wm.ActivityStarter: int mStartFlags>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label7;

        return 1;

     label7:
        specialinvoke r0.<com.android.server.wm.ActivityStarter: void deliverNewIntent(com.android.server.wm.ActivityRecord,com.android.server.uri.NeededUriGrants)>(r3, r2);

        $r6 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        $r7 = virtualinvoke r3.<com.android.server.wm.ActivityRecord: com.android.server.wm.Task getTask()>();

        $r8 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.LaunchParamsController$LaunchParams mLaunchParams>;

        $i2 = $r8.<com.android.server.wm.LaunchParamsController$LaunchParams: int mWindowingMode>;

        $r9 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.TaskDisplayArea mPreferredTaskDisplayArea>;

        virtualinvoke $r6.<com.android.server.wm.ActivityStackSupervisor: void handleNonResizableTaskIfNeeded(com.android.server.wm.Task,int,com.android.server.wm.TaskDisplayArea,com.android.server.wm.ActivityStack)>($r7, $i2, $r9, r1);

        return 3;
    }

    private int executeRequest(com.android.server.wm.ActivityStarter$Request)
    {
        com.android.server.wm.ActivityStarter r0;
        android.content.Intent r1, $r29, $r36, r128, r131, r147;
        com.android.server.uri.NeededUriGrants r2, r137, r144, r152;
        android.service.voice.IVoiceInteractionSession r3, $r62;
        int i0, i1, i2, i3, i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18, i19, i20, i22, $i23, i24, i29, i30, i33, i34, $i35;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, z18, z19, z20, z21, z22, z23, $z24, z25;
        java.lang.String $r5, $r7, $r37, $r51, $r60, $r69, $r73, $r74, $r79, $r80, r90, r94, r95, r96, r107, r108, r109, r111, r112, r123, r134, r141, r148;
        java.lang.IllegalArgumentException $r6;
        long $l5;
        com.android.server.wm.ActivityTaskManagerService $r8, $r11, $r13, $r21, $r32, $r35, $r49, $r53, $r57, $r66, $r77, $r83, r157, $r162;
        android.content.pm.ApplicationInfo $r9, $r26, $r50, $r64, $r65, $r75, $r76, $r81;
        com.android.server.firewall.IntentFirewall $r10;
        com.android.server.policy.PermissionPolicyInternal $r12;
        android.app.IActivityController $r14, $r52;
        com.android.server.wm.ActivityRecord $r15, $r18, $r20, $r24, r104, r105, r106, r110, r154;
        com.android.server.wm.ActivityStackSupervisor $r16, $r31, $r39, $r40, $r56, r120;
        com.android.server.am.AppTimeTracker $r17, $r27;
        com.android.server.wm.ActivityRecord[] $r19, $r165;
        com.android.server.wm.ActivityStackSupervisor$PendingActivityLaunch $r22;
        com.android.server.wm.ActivityStartController $r23, $r54, $r163;
        android.content.pm.ActivityInfo $r25, $r63, r91, r133, r146, r151;
        android.content.pm.AuxiliaryResolveInfo $r28, $r30;
        android.content.Intent[] $r33;
        java.lang.String[] $r34;
        android.content.IntentSender $r38;
        com.android.server.wm.ActivityStartInterceptor $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r129, $r130;
        com.android.server.wm.PendingRemoteAnimationRegistry $r55;
        android.content.pm.IPackageManager $r58, $r67;
        android.content.ComponentName $r59, $r68, $r70;
        com.android.server.wm.Task $r61, r98, r135;
        com.android.server.wm.RootWindowContainer $r71, $r160;
        java.lang.StringBuilder $r72, $r78, r115, r117;
        android.os.RemoteException $r82, $r85, $r87;
        java.lang.Throwable $r84, $r86, r122;
        com.android.server.wm.ActivityStarter$Request r88;
        android.app.IApplicationThread r89;
        android.content.pm.ResolveInfo r92, r132, r145;
        android.os.IBinder r93;
        com.android.server.wm.SafeActivityOptions r97;
        android.os.Bundle r99;
        com.android.server.wm.WindowProcessController r100, r103;
        byte b21, b25, b26, b27;
        com.android.server.wm.ActivityStack r119, r161;
        com.android.server.am.PendingIntentRecord r121;
        android.app.ActivityOptions r126, r136;
        android.content.pm.PackageManagerInternal r140;
        android.content.IIntentSender r142;
        android.content.res.Configuration r158;
        com.android.internal.app.IVoiceInteractor $r164;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r88 := @parameter0: com.android.server.wm.ActivityStarter$Request;

        $r5 = r88.<com.android.server.wm.ActivityStarter$Request: java.lang.String reason>;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

        if $z1 != 0 goto label72;

        $r7 = r88.<com.android.server.wm.ActivityStarter$Request: java.lang.String reason>;

        r0.<com.android.server.wm.ActivityStarter: java.lang.String mLastStartReason> = $r7;

        $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.server.wm.ActivityStarter: long mLastStartActivityTimeMs> = $l5;

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mLastStartActivityRecord> = null;

        r89 = r88.<com.android.server.wm.ActivityStarter$Request: android.app.IApplicationThread caller>;

        r1 = r88.<com.android.server.wm.ActivityStarter$Request: android.content.Intent intent>;

        r2 = r88.<com.android.server.wm.ActivityStarter$Request: com.android.server.uri.NeededUriGrants intentGrants>;

        r90 = r88.<com.android.server.wm.ActivityStarter$Request: java.lang.String resolvedType>;

        r91 = r88.<com.android.server.wm.ActivityStarter$Request: android.content.pm.ActivityInfo activityInfo>;

        r92 = r88.<com.android.server.wm.ActivityStarter$Request: android.content.pm.ResolveInfo resolveInfo>;

        r3 = r88.<com.android.server.wm.ActivityStarter$Request: android.service.voice.IVoiceInteractionSession voiceSession>;

        r93 = r88.<com.android.server.wm.ActivityStarter$Request: android.os.IBinder resultTo>;

        r94 = r88.<com.android.server.wm.ActivityStarter$Request: java.lang.String resultWho>;

        i17 = r88.<com.android.server.wm.ActivityStarter$Request: int requestCode>;

        i18 = r88.<com.android.server.wm.ActivityStarter$Request: int callingPid>;

        i19 = r88.<com.android.server.wm.ActivityStarter$Request: int callingUid>;

        r95 = r88.<com.android.server.wm.ActivityStarter$Request: java.lang.String callingPackage>;

        r96 = r88.<com.android.server.wm.ActivityStarter$Request: java.lang.String callingFeatureId>;

        i0 = r88.<com.android.server.wm.ActivityStarter$Request: int realCallingPid>;

        i1 = r88.<com.android.server.wm.ActivityStarter$Request: int realCallingUid>;

        i2 = r88.<com.android.server.wm.ActivityStarter$Request: int startFlags>;

        r97 = r88.<com.android.server.wm.ActivityStarter$Request: com.android.server.wm.SafeActivityOptions activityOptions>;

        r98 = r88.<com.android.server.wm.ActivityStarter$Request: com.android.server.wm.Task inTask>;

        if r97 == null goto label01;

        r99 = virtualinvoke r97.<com.android.server.wm.SafeActivityOptions: android.os.Bundle popAppVerificationBundle()>();

        goto label02;

     label01:
        r99 = null;

     label02:
        if r89 == null goto label04;

        $r77 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        r100 = virtualinvoke $r77.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController getProcessController(android.app.IApplicationThread)>(r89);

        if r100 == null goto label03;

        i18 = virtualinvoke r100.<com.android.server.wm.WindowProcessController: int getPid()>();

        $r81 = r100.<com.android.server.wm.WindowProcessController: android.content.pm.ApplicationInfo mInfo>;

        i20 = $r81.<android.content.pm.ApplicationInfo: int uid>;

        b21 = 0;

        goto label05;

     label03:
        $r78 = new java.lang.StringBuilder;

        specialinvoke $r78.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find app for caller ");

        virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r89);

        virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18);

        virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") when starting: ");

        $r79 = virtualinvoke r1.<android.content.Intent: java.lang.String toString()>();

        virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r79);

        $r80 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityTaskManager", $r80);

        i20 = i19;

        b21 = -94;

        goto label05;

     label04:
        r100 = null;

        i20 = i19;

        b21 = 0;

     label05:
        if r91 == null goto label06;

        $r75 = r91.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        if $r75 == null goto label06;

        $r76 = r91.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i16 = $r76.<android.content.pm.ApplicationInfo: int uid>;

        i22 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i16);

        goto label07;

     label06:
        i22 = 0;

     label07:
        if b21 != 0 goto label08;

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("START u");

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i22);

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" {");

        $r73 = virtualinvoke r1.<android.content.Intent: java.lang.String toShortString(boolean,boolean,boolean,boolean)>(1, 1, 1, 0);

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r73);

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("} from uid ");

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i20);

        $r74 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityTaskManager", $r74);

        goto label08;

     label08:
        i3 = i22;

        r103 = r100;

        r104 = null;

        if r93 == null goto label10;

        $r71 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        r105 = virtualinvoke $r71.<com.android.server.wm.RootWindowContainer: com.android.server.wm.ActivityRecord isInAnyStack(android.os.IBinder)>(r93);

        if r105 == null goto label09;

        if i17 < 0 goto label09;

        $z17 = r105.<com.android.server.wm.ActivityRecord: boolean finishing>;

        if $z17 != 0 goto label09;

        r104 = r105;

        goto label11;

     label09:
        goto label11;

     label10:
        r105 = null;

     label11:
        i4 = virtualinvoke r1.<android.content.Intent: int getFlags()>();

        $i23 = i4 & 33554432;

        if $i23 == 0 goto label16;

        if r105 == null goto label16;

        if i17 < 0 goto label12;

        staticinvoke <com.android.server.wm.SafeActivityOptions: void abort(com.android.server.wm.SafeActivityOptions)>(r97);

        return -93;

     label12:
        r106 = r105.<com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityRecord resultTo>;

        if r106 == null goto label13;

        $z16 = virtualinvoke r106.<com.android.server.wm.ActivityRecord: boolean isInStackLocked()>();

        if $z16 != 0 goto label13;

        r106 = null;

        goto label13;

     label13:
        r107 = r105.<com.android.server.wm.ActivityRecord: java.lang.String resultWho>;

        i24 = r105.<com.android.server.wm.ActivityRecord: int requestCode>;

        r105.<com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityRecord resultTo> = null;

        if r106 == null goto label14;

        virtualinvoke r106.<com.android.server.wm.ActivityRecord: void removeResultsLocked(com.android.server.wm.ActivityRecord,java.lang.String,int)>(r105, r107, i24);

     label14:
        $i15 = r105.<com.android.server.wm.ActivityRecord: int launchedFromUid>;

        if $i15 != i20 goto label15;

        r108 = r105.<com.android.server.wm.ActivityRecord: java.lang.String launchedFromPackage>;

        r109 = r105.<com.android.server.wm.ActivityRecord: java.lang.String launchedFromFeatureId>;

        r110 = r106;

        r111 = r107;

        r112 = r108;

        i17 = i24;

        goto label17;

     label15:
        r109 = r96;

        r112 = r95;

        r111 = r107;

        i17 = i24;

        r110 = r106;

        goto label17;

     label16:
        r109 = r96;

        r110 = r104;

        r111 = r94;

        r112 = r95;

     label17:
        b25 = b21;

        if b21 != 0 goto label18;

        b25 = b21;

        $r70 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r70 != null goto label18;

        b25 = -91;

     label18:
        b26 = b25;

        if b25 != 0 goto label19;

        b26 = b25;

        if r91 != null goto label19;

        b26 = -92;

     label19:
        b27 = b26;

        if b26 != 0 goto label26;

        b27 = b26;

        if r105 == null goto label26;

        b27 = b26;

        $r61 = virtualinvoke r105.<com.android.server.wm.ActivityRecord: com.android.server.wm.Task getTask()>();

        $r62 = $r61.<com.android.server.wm.Task: android.service.voice.IVoiceInteractionSession voiceSession>;

        if $r62 == null goto label26;

        b27 = b26;

        $i12 = i4 & 268435456;

        if $i12 != 0 goto label26;

        b27 = b26;

        $r63 = r105.<com.android.server.wm.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r64 = $r63.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i14 = $r64.<android.content.pm.ApplicationInfo: int uid>;

        $r65 = r91.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i13 = $r65.<android.content.pm.ApplicationInfo: int uid>;

        if $i14 == $i13 goto label26;

     label20:
        virtualinvoke r1.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>("android.intent.category.VOICE");

     label21:
        b27 = b26;

     label22:
        $r66 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        $r67 = virtualinvoke $r66.<com.android.server.wm.ActivityTaskManagerService: android.content.pm.IPackageManager getPackageManager()>();

        $r68 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        $z15 = interfaceinvoke $r67.<android.content.pm.IPackageManager: boolean activitySupportsIntent(android.content.ComponentName,android.content.Intent,java.lang.String)>($r68, r1, r90);

        if $z15 != 0 goto label24;

        r115 = new java.lang.StringBuilder;

        specialinvoke r115.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity being started in current voice task does not support voice: ");

        virtualinvoke r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r69 = virtualinvoke r115.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityTaskManager", $r69);

     label23:
        b27 = -97;

     label24:
        goto label26;

     label25:
        $r87 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityTaskManager", "Failure checking voice capabilities", $r87);

        b27 = -97;

     label26:
        if b27 != 0 goto label31;

        if r3 == null goto label31;

     label27:
        $r57 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        $r58 = virtualinvoke $r57.<com.android.server.wm.ActivityTaskManagerService: android.content.pm.IPackageManager getPackageManager()>();

        $r59 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        $z14 = interfaceinvoke $r58.<android.content.pm.IPackageManager: boolean activitySupportsIntent(android.content.ComponentName,android.content.Intent,java.lang.String)>($r59, r1, r90);

        if $z14 != 0 goto label29;

        r117 = new java.lang.StringBuilder;

        specialinvoke r117.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity being started in new voice task does not support: ");

        virtualinvoke r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r60 = virtualinvoke r117.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityTaskManager", $r60);

     label28:
        b27 = -97;

     label29:
        goto label31;

     label30:
        $r85 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityTaskManager", "Failure checking voice capabilities", $r85);

        b27 = -97;

        goto label31;

     label31:
        if r110 != null goto label32;

        r119 = null;

        goto label33;

     label32:
        r119 = virtualinvoke r110.<com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityStack getRootTask()>();

     label33:
        if b27 == 0 goto label35;

        if r110 == null goto label34;

        virtualinvoke r110.<com.android.server.wm.ActivityRecord: void sendResult(int,java.lang.String,int,int,android.content.Intent,com.android.server.uri.NeededUriGrants)>(-1, r111, i17, 0, null, null);

     label34:
        staticinvoke <com.android.server.wm.SafeActivityOptions: void abort(com.android.server.wm.SafeActivityOptions)>(r97);

        return b27;

     label35:
        r120 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        z18 = r88.<com.android.server.wm.ActivityStarter$Request: boolean ignoreTargetSecurity>;

        if r98 == null goto label36;

        z19 = 1;

        goto label37;

     label36:
        z19 = 0;

     label37:
        $z2 = virtualinvoke r120.<com.android.server.wm.ActivityStackSupervisor: boolean checkStartAnyActivityPermission(android.content.Intent,android.content.pm.ActivityInfo,java.lang.String,int,int,int,java.lang.String,java.lang.String,boolean,boolean,com.android.server.wm.WindowProcessController,com.android.server.wm.ActivityRecord,com.android.server.wm.ActivityStack)>(r1, r91, r111, i17, i18, i20, r112, r109, z18, z19, r103, r110, r119);

        $z3 = $z2 ^ 1;

        $r8 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        $r10 = $r8.<com.android.server.wm.ActivityTaskManagerService: com.android.server.firewall.IntentFirewall mIntentFirewall>;

        $r9 = r91.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $z4 = virtualinvoke $r10.<com.android.server.firewall.IntentFirewall: boolean checkStartActivity(android.content.Intent,int,int,java.lang.String,android.content.pm.ApplicationInfo)>(r1, i20, i18, r90, $r9);

        $z5 = $z4 ^ 1;

        $z6 = $z3 | $z5;

        $r11 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        $r12 = virtualinvoke $r11.<com.android.server.wm.ActivityTaskManagerService: com.android.server.policy.PermissionPolicyInternal getPermissionPolicyInternal()>();

        $z7 = virtualinvoke $r12.<com.android.server.policy.PermissionPolicyInternal: boolean checkStartActivity(android.content.Intent,int,java.lang.String)>(r1, i20, r112);

        $z8 = $z7 ^ 1;

        z20 = $z6 | $z8;

        if z20 != 0 goto label44;

     label38:
        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(32L, "shouldAbortBackgroundActivityStart");

        r121 = r88.<com.android.server.wm.ActivityStarter$Request: com.android.server.am.PendingIntentRecord originatingPendingIntent>;

        z21 = r88.<com.android.server.wm.ActivityStarter$Request: boolean allowBackgroundActivityStart>;

     label39:
        z22 = virtualinvoke r0.<com.android.server.wm.ActivityStarter: boolean shouldAbortBackgroundActivityStart(int,int,java.lang.String,int,int,com.android.server.wm.WindowProcessController,com.android.server.am.PendingIntentRecord,boolean,android.content.Intent)>(i20, i18, r112, i1, i0, r103, r121, z21, r1);

     label40:
        staticinvoke <android.os.Trace: void traceEnd(long)>(32L);

        goto label45;

     label41:
        $r84 := @caughtexception;

        r122 = $r84;

        goto label43;

     label42:
        $r86 := @caughtexception;

        r122 = $r86;

     label43:
        staticinvoke <android.os.Trace: void traceEnd(long)>(32L);

        throw r122;

     label44:
        z22 = 0;

     label45:
        r123 = r112;

        if r97 == null goto label46;

        $r56 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        r126 = virtualinvoke r97.<com.android.server.wm.SafeActivityOptions: android.app.ActivityOptions getOptions(android.content.Intent,android.content.pm.ActivityInfo,com.android.server.wm.WindowProcessController,com.android.server.wm.ActivityStackSupervisor)>(r1, r91, r103, $r56);

        goto label47;

     label46:
        r126 = null;

     label47:
        $z9 = r88.<com.android.server.wm.ActivityStarter$Request: boolean allowPendingRemoteAnimationRegistryLookup>;

        if $z9 == 0 goto label48;

        $r53 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        $r54 = virtualinvoke $r53.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityStartController getActivityStartController()>();

        $r55 = virtualinvoke $r54.<com.android.server.wm.ActivityStartController: com.android.server.wm.PendingRemoteAnimationRegistry getPendingRemoteAnimationRegistry()>();

        r126 = virtualinvoke $r55.<com.android.server.wm.PendingRemoteAnimationRegistry: android.app.ActivityOptions overrideOptionsIfNeeded(java.lang.String,android.app.ActivityOptions)>(r123, r126);

        goto label48;

     label48:
        $r13 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        $r14 = $r13.<com.android.server.wm.ActivityTaskManagerService: android.app.IActivityController mController>;

        if $r14 == null goto label52;

     label49:
        r128 = virtualinvoke r1.<android.content.Intent: android.content.Intent cloneFilter()>();

        $r49 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        $r52 = $r49.<com.android.server.wm.ActivityTaskManagerService: android.app.IActivityController mController>;

        $r50 = r91.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r51 = $r50.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        z23 = interfaceinvoke $r52.<android.app.IActivityController: boolean activityStarting(android.content.Intent,java.lang.String)>(r128, $r51);

     label50:
        $z13 = z23 ^ 1;

        z20 = z20 | $z13;

        goto label52;

     label51:
        $r82 := @caughtexception;

        $r83 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        $r83.<com.android.server.wm.ActivityTaskManagerService: android.app.IActivityController mController> = null;

     label52:
        $r129 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStartInterceptor mInterceptor>;

        virtualinvoke $r129.<com.android.server.wm.ActivityStartInterceptor: void setStates(int,int,int,int,java.lang.String,java.lang.String)>(i3, i0, i1, i2, r123, r109);

        $r130 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStartInterceptor mInterceptor>;

        $z24 = virtualinvoke $r130.<com.android.server.wm.ActivityStartInterceptor: boolean intercept(android.content.Intent,android.content.pm.ResolveInfo,android.content.pm.ActivityInfo,java.lang.String,com.android.server.wm.Task,int,int,android.app.ActivityOptions)>(r1, r92, r91, r90, r98, i18, i20, r126);

        if $z24 == 0 goto label53;

        $r41 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStartInterceptor mInterceptor>;

        r131 = $r41.<com.android.server.wm.ActivityStartInterceptor: android.content.Intent mIntent>;

        $r42 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStartInterceptor mInterceptor>;

        r132 = $r42.<com.android.server.wm.ActivityStartInterceptor: android.content.pm.ResolveInfo mRInfo>;

        $r43 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStartInterceptor mInterceptor>;

        r133 = $r43.<com.android.server.wm.ActivityStartInterceptor: android.content.pm.ActivityInfo mAInfo>;

        $r44 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStartInterceptor mInterceptor>;

        r134 = $r44.<com.android.server.wm.ActivityStartInterceptor: java.lang.String mResolvedType>;

        $r45 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStartInterceptor mInterceptor>;

        r135 = $r45.<com.android.server.wm.ActivityStartInterceptor: com.android.server.wm.Task mInTask>;

        $r46 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStartInterceptor mInterceptor>;

        i29 = $r46.<com.android.server.wm.ActivityStartInterceptor: int mCallingPid>;

        $r47 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStartInterceptor mInterceptor>;

        i30 = $r47.<com.android.server.wm.ActivityStartInterceptor: int mCallingUid>;

        $r48 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStartInterceptor mInterceptor>;

        r136 = $r48.<com.android.server.wm.ActivityStartInterceptor: android.app.ActivityOptions mActivityOptions>;

        r137 = null;

        goto label54;

     label53:
        r134 = r90;

        i29 = i18;

        r136 = r126;

        r135 = r98;

        r131 = r1;

        r133 = r91;

        r132 = r92;

        i30 = i20;

        r137 = r2;

     label54:
        if z20 == 0 goto label56;

        if r110 == null goto label55;

        virtualinvoke r110.<com.android.server.wm.ActivityRecord: void sendResult(int,java.lang.String,int,int,android.content.Intent,com.android.server.uri.NeededUriGrants)>(-1, r111, i17, 0, null, null);

     label55:
        staticinvoke <android.app.ActivityOptions: void abort(android.app.ActivityOptions)>(r136);

        return 102;

     label56:
        if r133 == null goto label60;

        $r32 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        r140 = virtualinvoke $r32.<com.android.server.wm.ActivityTaskManagerService: android.content.pm.PackageManagerInternal getPackageManagerInternalLocked()>();

        r141 = r133.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $z12 = virtualinvoke r140.<android.content.pm.PackageManagerInternal: boolean isPermissionsReviewRequired(java.lang.String,int)>(r141, i3);

        if $z12 == 0 goto label59;

        $r35 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        $r33 = newarray (android.content.Intent)[1];

        $r33[0] = r131;

        $r34 = newarray (java.lang.String)[1];

        $r34[0] = r134;

        r142 = virtualinvoke $r35.<com.android.server.wm.ActivityTaskManagerService: android.content.IIntentSender getIntentSenderLocked(int,java.lang.String,java.lang.String,int,int,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle)>(2, r123, r109, i30, i3, null, null, 0, $r33, $r34, 1342177280, null);

        $r36 = new android.content.Intent;

        specialinvoke $r36.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.REVIEW_PERMISSIONS");

        $i8 = virtualinvoke r131.<android.content.Intent: int getFlags()>();

        i33 = $i8 | 8388608;

        i34 = i33;

        $i9 = 268959744 & i33;

        if $i9 == 0 goto label57;

        i34 = i33 | 134217728;

     label57:
        virtualinvoke $r36.<android.content.Intent: android.content.Intent setFlags(int)>(i34);

        $r37 = r133.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        virtualinvoke $r36.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.intent.extra.PACKAGE_NAME", $r37);

        $r38 = new android.content.IntentSender;

        specialinvoke $r38.<android.content.IntentSender: void <init>(android.content.IIntentSender)>(r142);

        virtualinvoke $r36.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.INTENT", $r38);

        if r110 == null goto label58;

        virtualinvoke $r36.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("android.intent.extra.RESULT_NEEDED", 1);

        goto label58;

     label58:
        r144 = null;

        i30 = i1;

        $r39 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        $i10 = r88.<com.android.server.wm.ActivityStarter$Request: int filterCallingUid>;

        $i11 = staticinvoke <com.android.server.wm.ActivityStarter: int computeResolveFilterUid(int,int,int)>(i1, i1, $i10);

        r145 = virtualinvoke $r39.<com.android.server.wm.ActivityStackSupervisor: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int,int,int)>($r36, null, i3, 0, $i11);

        $r40 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        r146 = virtualinvoke $r40.<com.android.server.wm.ActivityStackSupervisor: android.content.pm.ActivityInfo resolveActivity(android.content.Intent,android.content.pm.ResolveInfo,int,android.app.ProfilerInfo)>($r36, r145, i2, null);

        i29 = i0;

        r147 = $r36;

        r148 = null;

        goto label61;

     label59:
        goto label60;

     label60:
        r146 = r133;

        r147 = r131;

        r145 = r132;

        r144 = r137;

        r148 = r134;

     label61:
        if r145 == null goto label62;

        $r28 = r145.<android.content.pm.ResolveInfo: android.content.pm.AuxiliaryResolveInfo auxiliaryInfo>;

        if $r28 == null goto label62;

        $r30 = r145.<android.content.pm.ResolveInfo: android.content.pm.AuxiliaryResolveInfo auxiliaryInfo>;

        $r29 = r88.<com.android.server.wm.ActivityStarter$Request: android.content.Intent ephemeralIntent>;

        r147 = specialinvoke r0.<com.android.server.wm.ActivityStarter: android.content.Intent createLaunchIntent(android.content.pm.AuxiliaryResolveInfo,android.content.Intent,java.lang.String,java.lang.String,android.os.Bundle,java.lang.String,int)>($r30, $r29, r123, r109, r99, r148, i3);

        r148 = null;

        $r31 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        r151 = virtualinvoke $r31.<com.android.server.wm.ActivityStackSupervisor: android.content.pm.ActivityInfo resolveActivity(android.content.Intent,android.content.pm.ResolveInfo,int,android.app.ProfilerInfo)>(r147, r145, i2, null);

        r152 = null;

        i30 = i1;

        i29 = i0;

        goto label63;

     label62:
        r151 = r146;

        r152 = r144;

     label63:
        r154 = r105;

        r157 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        r158 = virtualinvoke r157.<com.android.server.wm.ActivityTaskManagerService: android.content.res.Configuration getGlobalConfiguration()>();

        z0 = r88.<com.android.server.wm.ActivityStarter$Request: boolean componentSpecified>;

        if r3 == null goto label64;

        z25 = 1;

        goto label65;

     label64:
        z25 = 0;

     label65:
        $r15 = new com.android.server.wm.ActivityRecord;

        $r16 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        specialinvoke $r15.<com.android.server.wm.ActivityRecord: void <init>(com.android.server.wm.ActivityTaskManagerService,com.android.server.wm.WindowProcessController,int,int,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.content.pm.ActivityInfo,android.content.res.Configuration,com.android.server.wm.ActivityRecord,java.lang.String,int,boolean,boolean,com.android.server.wm.ActivityStackSupervisor,android.app.ActivityOptions,com.android.server.wm.ActivityRecord)>(r157, r103, i29, i30, r123, r109, r147, r148, r151, r158, r110, r111, i17, z0, z25, $r16, r136, r154);

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mLastStartActivityRecord> = $r15;

        $r17 = $r15.<com.android.server.wm.ActivityRecord: com.android.server.am.AppTimeTracker appTimeTracker>;

        if $r17 != null goto label66;

        if r154 == null goto label66;

        $r27 = r154.<com.android.server.wm.ActivityRecord: com.android.server.am.AppTimeTracker appTimeTracker>;

        $r15.<com.android.server.wm.ActivityRecord: com.android.server.am.AppTimeTracker appTimeTracker> = $r27;

     label66:
        $r160 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        r161 = virtualinvoke $r160.<com.android.server.wm.RootWindowContainer: com.android.server.wm.ActivityStack getTopDisplayFocusedStack()>();

        if r3 != null goto label70;

        if r161 == null goto label70;

        $r20 = virtualinvoke r161.<com.android.server.wm.ActivityStack: com.android.server.wm.ActivityRecord getResumedActivity()>();

        if $r20 == null goto label67;

        $r24 = virtualinvoke r161.<com.android.server.wm.ActivityStack: com.android.server.wm.ActivityRecord getResumedActivity()>();

        $r25 = $r24.<com.android.server.wm.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r26 = $r25.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i7 = $r26.<android.content.pm.ApplicationInfo: int uid>;

        if $i7 == i1 goto label70;

     label67:
        $r21 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        $z10 = virtualinvoke $r21.<com.android.server.wm.ActivityTaskManagerService: boolean checkAppSwitchAllowedLocked(int,int,int,int,java.lang.String)>(i29, i30, i0, i1, "Activity start");

        if $z10 != 0 goto label70;

        if z22 == 0 goto label68;

        $z11 = specialinvoke r0.<com.android.server.wm.ActivityStarter: boolean handleBackgroundActivityAbort(com.android.server.wm.ActivityRecord)>($r15);

        if $z11 != 0 goto label69;

     label68:
        $r23 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStartController mController>;

        $r22 = new com.android.server.wm.ActivityStackSupervisor$PendingActivityLaunch;

        specialinvoke $r22.<com.android.server.wm.ActivityStackSupervisor$PendingActivityLaunch: void <init>(com.android.server.wm.ActivityRecord,com.android.server.wm.ActivityRecord,int,com.android.server.wm.ActivityStack,com.android.server.wm.WindowProcessController,com.android.server.uri.NeededUriGrants)>($r15, r154, i2, r161, r103, r152);

        virtualinvoke $r23.<com.android.server.wm.ActivityStartController: void addPendingActivityLaunch(com.android.server.wm.ActivityStackSupervisor$PendingActivityLaunch)>($r22);

     label69:
        staticinvoke <android.app.ActivityOptions: void abort(android.app.ActivityOptions)>(r136);

        return 100;

     label70:
        $r162 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        virtualinvoke $r162.<com.android.server.wm.ActivityTaskManagerService: void onStartActivitySetDidAppSwitch()>();

        $r163 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStartController mController>;

        virtualinvoke $r163.<com.android.server.wm.ActivityStartController: void doPendingActivityLaunches(boolean)>(0);

        $r164 = r88.<com.android.server.wm.ActivityStarter$Request: com.android.internal.app.IVoiceInteractor voiceInteractor>;

        $i35 = specialinvoke r0.<com.android.server.wm.ActivityStarter: int startActivityUnchecked(com.android.server.wm.ActivityRecord,com.android.server.wm.ActivityRecord,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,int,boolean,android.app.ActivityOptions,com.android.server.wm.Task,boolean,com.android.server.uri.NeededUriGrants)>($r15, r154, r3, $r164, i2, 1, r136, r135, z22, r152);

        r0.<com.android.server.wm.ActivityStarter: int mLastStartActivityResult> = $i35;

        $r165 = r88.<com.android.server.wm.ActivityStarter$Request: com.android.server.wm.ActivityRecord[] outActivity>;

        if $r165 == null goto label71;

        $r19 = r88.<com.android.server.wm.ActivityStarter$Request: com.android.server.wm.ActivityRecord[] outActivity>;

        $r18 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mLastStartActivityRecord>;

        $r19[0] = $r18;

     label71:
        $i6 = r0.<com.android.server.wm.ActivityStarter: int mLastStartActivityResult>;

        return $i6;

     label72:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Need to specify a reason.");

        throw $r6;

        catch android.os.RemoteException from label20 to label21 with label25;
        catch android.os.RemoteException from label22 to label23 with label25;
        catch android.os.RemoteException from label27 to label28 with label30;
        catch java.lang.Throwable from label38 to label39 with label42;
        catch java.lang.Throwable from label39 to label40 with label41;
        catch android.os.RemoteException from label49 to label50 with label51;
    }

    static int getExternalResult(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 102 goto label1;

        goto label2;

     label1:
        i0 = 0;

     label2:
        return i0;
    }

    private com.android.server.wm.ActivityStack getLaunchStack(com.android.server.wm.ActivityRecord, int, com.android.server.wm.Task, android.app.ActivityOptions)
    {
        com.android.server.wm.ActivityStarter r0;
        com.android.server.wm.ActivityRecord r1;
        int i0, $i1, $i2;
        com.android.server.wm.Task r2, r4;
        android.app.ActivityOptions r3;
        boolean $z0, $z1, z2;
        com.android.server.wm.ActivityStack $r5, $r10;
        com.android.server.wm.RootWindowContainer $r6;
        com.android.server.wm.LaunchParamsController$LaunchParams $r7;
        com.android.server.wm.ActivityStarter$Request $r8, $r9;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        i0 := @parameter1: int;

        r2 := @parameter2: com.android.server.wm.Task;

        r3 := @parameter3: android.app.ActivityOptions;

        r4 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.Task mReuseTask>;

        if r4 == null goto label1;

        $r5 = virtualinvoke r4.<com.android.server.wm.Task: com.android.server.wm.ActivityStack getStack()>();

        return $r5;

     label1:
        if r3 == null goto label2;

        $z1 = virtualinvoke r3.<android.app.ActivityOptions: boolean getAvoidMoveToFront()>();

        if $z1 != 0 goto label3;

     label2:
        $z0 = r0.<com.android.server.wm.ActivityStarter: boolean mLaunchTaskBehind>;

        if $z0 != 0 goto label3;

        z2 = 1;

        goto label4;

     label3:
        z2 = 0;

     label4:
        $r6 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        $r7 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.LaunchParamsController$LaunchParams mLaunchParams>;

        $r8 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $i1 = $r8.<com.android.server.wm.ActivityStarter$Request: int realCallingPid>;

        $r9 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $i2 = $r9.<com.android.server.wm.ActivityStarter$Request: int realCallingUid>;

        $r10 = virtualinvoke $r6.<com.android.server.wm.RootWindowContainer: com.android.server.wm.ActivityStack getLaunchStack(com.android.server.wm.ActivityRecord,android.app.ActivityOptions,com.android.server.wm.Task,boolean,com.android.server.wm.LaunchParamsController$LaunchParams,int,int)>(r1, r3, r2, z2, $r7, $i1, $i2);

        return $r10;
    }

    private com.android.server.wm.Task getReusableTask()
    {
        com.android.server.wm.ActivityStarter r0;
        android.content.Intent r1, $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        boolean $z0, $z1, $z2, $z3, z4, z5, z6, $z7;
        com.android.server.wm.Task $r2, r20, r25;
        com.android.server.wm.ActivityRecord $r3, $r7, $r9, $r10, $r11, $r15, $r16, r21, r24;
        com.android.server.wm.TaskDisplayArea $r4, $r5, $r6;
        com.android.server.wm.RootWindowContainer $r8, $r12, $r18, r22;
        android.content.pm.ActivityInfo $r14, r23;
        android.app.ActivityOptions $r17, r19;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r19 = r0.<com.android.server.wm.ActivityStarter: android.app.ActivityOptions mOptions>;

        if r19 == null goto label02;

        $i6 = virtualinvoke r19.<android.app.ActivityOptions: int getLaunchTaskId()>();

        if $i6 == -1 goto label02;

        $r18 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        $r17 = r0.<com.android.server.wm.ActivityStarter: android.app.ActivityOptions mOptions>;

        $i7 = virtualinvoke $r17.<android.app.ActivityOptions: int getLaunchTaskId()>();

        r20 = virtualinvoke $r18.<com.android.server.wm.RootWindowContainer: com.android.server.wm.Task anyTaskForId(int)>($i7);

        if r20 == null goto label01;

        return r20;

     label01:
        return null;

     label02:
        i8 = r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags>;

        z4 = 0;

        $i0 = 268435456 & i8;

        if $i0 == 0 goto label03;

        $i5 = i8 & 134217728;

        if $i5 == 0 goto label04;

     label03:
        $z0 = specialinvoke r0.<com.android.server.wm.ActivityStarter: boolean isLaunchModeOneOf(int,int)>(3, 2);

        if $z0 == 0 goto label05;

     label04:
        z5 = 1;

        goto label06;

     label05:
        z5 = 0;

     label06:
        $r2 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.Task mInTask>;

        if $r2 != null goto label07;

        $r15 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r16 = $r15.<com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityRecord resultTo>;

        if $r16 != null goto label07;

        z6 = 1;

        goto label08;

     label07:
        z6 = 0;

     label08:
        r21 = null;

        $z7 = z5 & z6;

        if $z7 == 0 goto label12;

        $i1 = r0.<com.android.server.wm.ActivityStarter: int mLaunchMode>;

        if 3 != $i1 goto label09;

        $r12 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        $r13 = r0.<com.android.server.wm.ActivityStarter: android.content.Intent mIntent>;

        $r10 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r14 = $r10.<com.android.server.wm.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r11 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $z3 = virtualinvoke $r11.<com.android.server.wm.ActivityRecord: boolean isActivityTypeHome()>();

        r21 = virtualinvoke $r12.<com.android.server.wm.RootWindowContainer: com.android.server.wm.ActivityRecord findActivity(android.content.Intent,android.content.pm.ActivityInfo,boolean)>($r13, $r14, $z3);

        goto label12;

     label09:
        $i2 = r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags>;

        $i3 = $i2 & 4096;

        if $i3 == 0 goto label11;

        r22 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        r1 = r0.<com.android.server.wm.ActivityStarter: android.content.Intent mIntent>;

        $r9 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        r23 = $r9.<com.android.server.wm.ActivityRecord: android.content.pm.ActivityInfo info>;

        $i4 = r0.<com.android.server.wm.ActivityStarter: int mLaunchMode>;

        if 2 == $i4 goto label10;

        z4 = 1;

     label10:
        r21 = virtualinvoke r22.<com.android.server.wm.RootWindowContainer: com.android.server.wm.ActivityRecord findActivity(android.content.Intent,android.content.pm.ActivityInfo,boolean)>(r1, r23, z4);

        goto label12;

     label11:
        $r8 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        $r7 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r6 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.TaskDisplayArea mPreferredTaskDisplayArea>;

        r21 = virtualinvoke $r8.<com.android.server.wm.RootWindowContainer: com.android.server.wm.ActivityRecord findTask(com.android.server.wm.ActivityRecord,com.android.server.wm.TaskDisplayArea)>($r7, $r6);

     label12:
        r24 = r21;

        if r21 == null goto label14;

        $r3 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $z1 = virtualinvoke $r3.<com.android.server.wm.ActivityRecord: boolean isActivityTypeHome()>();

        if $z1 != 0 goto label13;

        r24 = r21;

        $z2 = virtualinvoke r21.<com.android.server.wm.ActivityRecord: boolean isActivityTypeHome()>();

        if $z2 == 0 goto label14;

     label13:
        r24 = r21;

        $r4 = virtualinvoke r21.<com.android.server.wm.ActivityRecord: com.android.server.wm.TaskDisplayArea getDisplayArea()>();

        $r5 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.TaskDisplayArea mPreferredTaskDisplayArea>;

        if $r4 == $r5 goto label14;

        r24 = null;

     label14:
        r25 = null;

        if r24 == null goto label15;

        r25 = virtualinvoke r24.<com.android.server.wm.ActivityRecord: com.android.server.wm.Task getTask()>();

     label15:
        return r25;
    }

    private boolean handleBackgroundActivityAbort(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.ActivityStarter r0;
        com.android.server.wm.ActivityRecord r1, r2;
        java.lang.String r3;
        int i0;
        com.android.server.wm.ActivityTaskManagerService $r4;
        boolean $z0, $z1;
        android.app.ActivityOptions $r5;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        $r4 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        $z0 = virtualinvoke $r4.<com.android.server.wm.ActivityTaskManagerService: boolean isBackgroundActivityStartsEnabled()>();

        $z1 = $z0 ^ 1;

        if $z1 != 0 goto label1;

        return 0;

     label1:
        r2 = r1.<com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityRecord resultTo>;

        r3 = r1.<com.android.server.wm.ActivityRecord: java.lang.String resultWho>;

        i0 = r1.<com.android.server.wm.ActivityRecord: int requestCode>;

        if r2 == null goto label2;

        virtualinvoke r2.<com.android.server.wm.ActivityRecord: void sendResult(int,java.lang.String,int,int,android.content.Intent,com.android.server.uri.NeededUriGrants)>(-1, r3, i0, 0, null, null);

     label2:
        $r5 = r1.<com.android.server.wm.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        staticinvoke <android.app.ActivityOptions: void abort(android.app.ActivityOptions)>($r5);

        return 1;
    }

    private com.android.server.wm.ActivityStack handleStartResult(com.android.server.wm.ActivityRecord, int)
    {
        com.android.server.wm.ActivityStarter r0;
        int i0, $i2;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.android.server.wm.ActivityRecord $r1, $r3, r5, r7;
        com.android.server.wm.ActivityStack $r2, r6, r8;
        com.android.server.wm.RootWindowContainer $r4;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r5 := @parameter0: com.android.server.wm.ActivityRecord;

        i0 := @parameter1: int;

        r6 = virtualinvoke r5.<com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityStack getRootTask()>();

        if r6 == null goto label1;

        goto label2;

     label1:
        r6 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mTargetStack>;

     label2:
        $z0 = staticinvoke <android.app.ActivityManager: boolean isStartResultSuccessful(int)>(i0);

        if $z0 == 0 goto label4;

        if r6 == null goto label3;

        r7 = virtualinvoke r6.<com.android.server.wm.ActivityStack: com.android.server.wm.ActivityRecord topRunningActivity()>();

        if r7 == null goto label3;

        $z4 = virtualinvoke r7.<com.android.server.wm.ActivityRecord: boolean shouldUpdateConfigForDisplayChanged()>();

        if $z4 == 0 goto label3;

        $r4 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        $i2 = virtualinvoke r7.<com.android.server.wm.ActivityRecord: int getDisplayId()>();

        virtualinvoke $r4.<com.android.server.wm.RootWindowContainer: boolean ensureVisibilityAndConfig(com.android.server.wm.ActivityRecord,int,boolean,boolean)>(r7, $i2, 1, 0);

     label3:
        return r6;

     label4:
        $r1 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r2 = virtualinvoke $r1.<com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityStack getRootTask()>();

        if $r2 == null goto label5;

        $r3 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        virtualinvoke $r3.<com.android.server.wm.ActivityRecord: int finishIfPossible(java.lang.String,boolean)>("startActivity", 1);

     label5:
        r8 = r6;

        if r6 == null goto label6;

        r8 = r6;

        $z1 = virtualinvoke r6.<com.android.server.wm.ActivityStack: boolean isAttached()>();

        if $z1 == 0 goto label6;

        r8 = r6;

        $z2 = virtualinvoke r6.<com.android.server.wm.ActivityStack: boolean hasActivity()>();

        if $z2 != 0 goto label6;

        r8 = r6;

        $z3 = virtualinvoke r6.<com.android.server.wm.ActivityStack: boolean isActivityTypeHome()>();

        if $z3 != 0 goto label6;

        virtualinvoke r6.<com.android.server.wm.ActivityStack: void removeIfPossible()>();

        r8 = null;

     label6:
        return r8;
    }

    private int isAllowedToStart(com.android.server.wm.ActivityRecord, boolean, com.android.server.wm.Task)
    {
        com.android.server.wm.ActivityStarter r0;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, z7;
        com.android.server.wm.Task r1;
        com.android.server.wm.ActivityRecord $r2, $r8, $r11, $r24, $r25, $r27, $r28, $r29, $r31, r32;
        java.lang.String $r3, $r10, $r15, $r23, $r30;
        com.android.server.wm.ActivityTaskManagerService $r4;
        com.android.server.wm.LockTaskController $r5;
        java.lang.StringBuilder $r6, $r12, $r19;
        int $i1, $i3, $i5, $i6, $i7;
        com.android.server.wm.TaskDisplayArea $r16, $r21;
        android.content.pm.ActivityInfo $r17;
        com.android.server.wm.RootWindowContainer $r18;
        android.app.ActivityOptions $r26;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r32 := @parameter0: com.android.server.wm.ActivityRecord;

        z0 := @parameter1: boolean;

        r1 := @parameter2: com.android.server.wm.Task;

        $r2 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r3 = $r2.<com.android.server.wm.ActivityRecord: java.lang.String packageName>;

        if $r3 != null goto label2;

        $r24 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r25 = $r24.<com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityRecord resultTo>;

        if $r25 == null goto label1;

        $r27 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r31 = $r27.<com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityRecord resultTo>;

        $r28 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r30 = $r28.<com.android.server.wm.ActivityRecord: java.lang.String resultWho>;

        $r29 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $i5 = $r29.<com.android.server.wm.ActivityRecord: int requestCode>;

        virtualinvoke $r31.<com.android.server.wm.ActivityRecord: void sendResult(int,java.lang.String,int,int,android.content.Intent,com.android.server.uri.NeededUriGrants)>(-1, $r30, $i5, 0, null, null);

     label1:
        $r26 = r0.<com.android.server.wm.ActivityStarter: android.app.ActivityOptions mOptions>;

        staticinvoke <android.app.ActivityOptions: void abort(android.app.ActivityOptions)>($r26);

        return -92;

     label2:
        z1 = virtualinvoke r32.<com.android.server.wm.ActivityRecord: boolean isActivityTypeHome()>();

        z7 = 1;

        if z1 == 0 goto label3;

        $r18 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        $r17 = r32.<com.android.server.wm.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r16 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.TaskDisplayArea mPreferredTaskDisplayArea>;

        $z6 = virtualinvoke $r18.<com.android.server.wm.RootWindowContainer: boolean canStartHomeOnDisplayArea(android.content.pm.ActivityInfo,com.android.server.wm.TaskDisplayArea,boolean)>($r17, $r16, 1);

        if $z6 != 0 goto label3;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot launch home on display area ");

        $r21 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.TaskDisplayArea mPreferredTaskDisplayArea>;

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityTaskManager", $r23);

        return -96;

     label3:
        $z2 = r0.<com.android.server.wm.ActivityStarter: boolean mRestrictedBgActivity>;

        if $z2 == 0 goto label5;

        if z0 != 0 goto label4;

        $i3 = r0.<com.android.server.wm.ActivityStarter: int mCallingUid>;

        $z5 = virtualinvoke r1.<com.android.server.wm.Task: boolean isUidPresent(int)>($i3);

        if $z5 != 0 goto label5;

     label4:
        $r11 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $z4 = specialinvoke r0.<com.android.server.wm.ActivityStarter: boolean handleBackgroundActivityAbort(com.android.server.wm.ActivityRecord)>($r11);

        if $z4 == 0 goto label5;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Abort background activity starts from ");

        $i1 = r0.<com.android.server.wm.ActivityStarter: int mCallingUid>;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityTaskManager", $r15);

        return 102;

     label5:
        $i6 = r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags>;

        $i7 = $i6 & 268468224;

        if $i7 != 268468224 goto label6;

        goto label7;

     label6:
        z7 = 0;

     label7:
        if z0 != 0 goto label8;

        $r4 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        $r5 = virtualinvoke $r4.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.LockTaskController getLockTaskController()>();

        $z3 = virtualinvoke $r5.<com.android.server.wm.LockTaskController: boolean isLockTaskModeViolation(com.android.server.wm.Task,boolean)>(r1, z7);

        if $z3 == 0 goto label8;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted Lock Task Mode violation mStartActivity=");

        $r8 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityTaskManager", $r10);

        return 101;

     label8:
        return 0;
    }

    static boolean isDocumentLaunchesIntoExisting(int)
    {
        int i0, $i1, $i2;
        boolean z0;

        i0 := @parameter0: int;

        $i1 = 524288 & i0;

        if $i1 == 0 goto label1;

        $i2 = 134217728 & i0;

        if $i2 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean isLaunchModeOneOf(int, int)
    {
        com.android.server.wm.ActivityStarter r0;
        int i0, i1, i2;
        boolean z0;

        r0 := @this: com.android.server.wm.ActivityStarter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = r0.<com.android.server.wm.ActivityStarter: int mLaunchMode>;

        if i0 == i2 goto label2;

        if i1 != i2 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    private void onExecutionComplete()
    {
        com.android.server.wm.ActivityStarter r0;
        com.android.server.wm.ActivityStartController $r1;

        r0 := @this: com.android.server.wm.ActivityStarter;

        $r1 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStartController mController>;

        virtualinvoke $r1.<com.android.server.wm.ActivityStartController: void onExecutionComplete(com.android.server.wm.ActivityStarter)>(r0);

        return;
    }

    private int resolveToHeavyWeightSwitcherIfNeeded()
    {
        com.android.server.wm.ActivityStarter r0;
        com.android.server.wm.ActivityTaskManagerService r1, $r4, $r15, $r57, $r69;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i17;
        com.android.server.wm.ActivityStarter$Request $r2, $r5, $r8, $r10, $r17, $r20, $r21, $r23, $r24, $r25, $r29, $r32, $r36, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r55, $r58, $r59, $r62, $r64, $r67, $r72, $r76, $r79, $r84, $r87, r98, r100, r101;
        android.content.pm.ActivityInfo $r3, $r6, $r9, $r11, $r18, $r33, $r56, $r60, $r63, $r88, r99;
        boolean $z0, $z1, $z2;
        android.content.pm.ApplicationInfo $r7, $r12, $r16, $r19, $r86;
        java.lang.String $r13, $r14, $r34, $r40, $r81, $r83, $r89, $r90, r95;
        android.app.IApplicationThread $r22, $r68, $r73;
        android.content.Intent[] $r26;
        java.lang.String[] $r27;
        android.content.Intent $r28, $r37, $r52, $r80, r94;
        android.content.IntentSender $r30;
        java.lang.Class $r39;
        com.android.server.wm.ActivityStackSupervisor $r51;
        android.content.pm.ResolveInfo $r53, $r54, $r65;
        android.app.ActivityManagerInternal $r61;
        java.lang.StringBuilder $r70;
        com.android.server.wm.SafeActivityOptions $r85;
        com.android.server.wm.WindowProcessController r91, r92;
        android.content.IIntentSender r96;

        r0 := @this: com.android.server.wm.ActivityStarter;

        $r2 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r3 = $r2.<com.android.server.wm.ActivityStarter$Request: android.content.pm.ActivityInfo activityInfo>;

        if $r3 == null goto label10;

        $r4 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        $z0 = $r4.<com.android.server.wm.ActivityTaskManagerService: boolean mHasHeavyWeightFeature>;

        if $z0 == 0 goto label10;

        $r5 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r6 = $r5.<com.android.server.wm.ActivityStarter$Request: android.content.pm.ActivityInfo activityInfo>;

        $r7 = $r6.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = $r7.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i2 = $i1 & 2;

        if $i2 != 0 goto label01;

        goto label10;

     label01:
        $r8 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r9 = $r8.<com.android.server.wm.ActivityStarter$Request: android.content.pm.ActivityInfo activityInfo>;

        $r14 = $r9.<android.content.pm.ActivityInfo: java.lang.String processName>;

        $r10 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r11 = $r10.<com.android.server.wm.ActivityStarter$Request: android.content.pm.ActivityInfo activityInfo>;

        $r12 = $r11.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r13 = $r12.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z1 != 0 goto label02;

        return 0;

     label02:
        $r15 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        r91 = $r15.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController mHeavyWeightProcess>;

        if r91 == null goto label09;

        $r16 = r91.<com.android.server.wm.WindowProcessController: android.content.pm.ApplicationInfo mInfo>;

        $i4 = $r16.<android.content.pm.ApplicationInfo: int uid>;

        $r17 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r18 = $r17.<com.android.server.wm.ActivityStarter$Request: android.content.pm.ActivityInfo activityInfo>;

        $r19 = $r18.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r19.<android.content.pm.ApplicationInfo: int uid>;

        if $i4 != $i3 goto label03;

        $r90 = r91.<com.android.server.wm.WindowProcessController: java.lang.String mName>;

        $r87 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r88 = $r87.<com.android.server.wm.ActivityStarter$Request: android.content.pm.ActivityInfo activityInfo>;

        $r89 = $r88.<android.content.pm.ActivityInfo: java.lang.String processName>;

        $z2 = virtualinvoke $r90.<java.lang.String: boolean equals(java.lang.Object)>($r89);

        if $z2 == 0 goto label03;

        goto label09;

     label03:
        $r20 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        i17 = $r20.<com.android.server.wm.ActivityStarter$Request: int callingUid>;

        $r21 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r22 = $r21.<com.android.server.wm.ActivityStarter$Request: android.app.IApplicationThread caller>;

        if $r22 == null goto label05;

        $r69 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        $r67 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r68 = $r67.<com.android.server.wm.ActivityStarter$Request: android.app.IApplicationThread caller>;

        r92 = virtualinvoke $r69.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController getProcessController(android.app.IApplicationThread)>($r68);

        if r92 == null goto label04;

        $r86 = r92.<com.android.server.wm.WindowProcessController: android.content.pm.ApplicationInfo mInfo>;

        i17 = $r86.<android.content.pm.ApplicationInfo: int uid>;

        goto label05;

     label04:
        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find app for caller ");

        $r72 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r73 = $r72.<com.android.server.wm.ActivityStarter$Request: android.app.IApplicationThread caller>;

        virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r73);

        virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $r76 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $i15 = $r76.<com.android.server.wm.ActivityStarter$Request: int callingPid>;

        virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") when starting: ");

        $r79 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r80 = $r79.<com.android.server.wm.ActivityStarter$Request: android.content.Intent intent>;

        $r81 = virtualinvoke $r80.<android.content.Intent: java.lang.String toString()>();

        virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81);

        $r83 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityTaskManager", $r83);

        $r84 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r85 = $r84.<com.android.server.wm.ActivityStarter$Request: com.android.server.wm.SafeActivityOptions activityOptions>;

        staticinvoke <com.android.server.wm.SafeActivityOptions: void abort(com.android.server.wm.SafeActivityOptions)>($r85);

        return -94;

     label05:
        r1 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        $r23 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        i0 = $r23.<com.android.server.wm.ActivityStarter$Request: int userId>;

        $r24 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        r94 = $r24.<com.android.server.wm.ActivityStarter$Request: android.content.Intent intent>;

        $r25 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        r95 = $r25.<com.android.server.wm.ActivityStarter$Request: java.lang.String resolvedType>;

        $r26 = newarray (android.content.Intent)[1];

        $r26[0] = r94;

        $r27 = newarray (java.lang.String)[1];

        $r27[0] = r95;

        r96 = virtualinvoke r1.<com.android.server.wm.ActivityTaskManagerService: android.content.IIntentSender getIntentSenderLocked(int,java.lang.String,java.lang.String,int,int,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle)>(2, "android", null, i17, i0, null, null, 0, $r26, $r27, 1342177280, null);

        $r28 = new android.content.Intent;

        specialinvoke $r28.<android.content.Intent: void <init>()>();

        $r29 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $i5 = $r29.<com.android.server.wm.ActivityStarter$Request: int requestCode>;

        if $i5 < 0 goto label06;

        virtualinvoke $r28.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("has_result", 1);

     label06:
        $r30 = new android.content.IntentSender;

        specialinvoke $r30.<android.content.IntentSender: void <init>(android.content.IIntentSender)>(r96);

        virtualinvoke $r28.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("intent", $r30);

        virtualinvoke r91.<com.android.server.wm.WindowProcessController: void updateIntentForHeavyWeightActivity(android.content.Intent)>($r28);

        $r32 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r33 = $r32.<com.android.server.wm.ActivityStarter$Request: android.content.pm.ActivityInfo activityInfo>;

        $r34 = $r33.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        virtualinvoke $r28.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("new_app", $r34);

        $r36 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r37 = $r36.<com.android.server.wm.ActivityStarter$Request: android.content.Intent intent>;

        $i6 = virtualinvoke $r37.<android.content.Intent: int getFlags()>();

        virtualinvoke $r28.<android.content.Intent: android.content.Intent setFlags(int)>($i6);

        $r39 = class "Lcom/android/internal/app/HeavyWeightSwitcherActivity;";

        $r40 = virtualinvoke $r39.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r28.<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>("android", $r40);

        $r42 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r42.<com.android.server.wm.ActivityStarter$Request: android.content.Intent intent> = $r28;

        r98 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        r99 = null;

        r98.<com.android.server.wm.ActivityStarter$Request: java.lang.String resolvedType> = null;

        $r43 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r43.<com.android.server.wm.ActivityStarter$Request: android.app.IApplicationThread caller> = null;

        $r44 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $i7 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r44.<com.android.server.wm.ActivityStarter$Request: int callingUid> = $i7;

        $r45 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $i8 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r45.<com.android.server.wm.ActivityStarter$Request: int callingPid> = $i8;

        $r46 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r46.<com.android.server.wm.ActivityStarter$Request: boolean componentSpecified> = 1;

        r100 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r51 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        $r52 = r100.<com.android.server.wm.ActivityStarter$Request: android.content.Intent intent>;

        $r47 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $i12 = $r47.<com.android.server.wm.ActivityStarter$Request: int userId>;

        $r48 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $i11 = $r48.<com.android.server.wm.ActivityStarter$Request: int callingUid>;

        $r49 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $i10 = $r49.<com.android.server.wm.ActivityStarter$Request: int realCallingUid>;

        $r50 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $i9 = $r50.<com.android.server.wm.ActivityStarter$Request: int filterCallingUid>;

        $i13 = staticinvoke <com.android.server.wm.ActivityStarter: int computeResolveFilterUid(int,int,int)>($i11, $i10, $i9);

        $r53 = virtualinvoke $r51.<com.android.server.wm.ActivityStackSupervisor: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int,int,int)>($r52, null, $i12, 0, $i13);

        r100.<com.android.server.wm.ActivityStarter$Request: android.content.pm.ResolveInfo resolveInfo> = $r53;

        r101 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r54 = r101.<com.android.server.wm.ActivityStarter$Request: android.content.pm.ResolveInfo resolveInfo>;

        if $r54 == null goto label07;

        $r64 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r65 = $r64.<com.android.server.wm.ActivityStarter$Request: android.content.pm.ResolveInfo resolveInfo>;

        r99 = $r65.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

     label07:
        r101.<com.android.server.wm.ActivityStarter$Request: android.content.pm.ActivityInfo activityInfo> = r99;

        $r55 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r56 = $r55.<com.android.server.wm.ActivityStarter$Request: android.content.pm.ActivityInfo activityInfo>;

        if $r56 == null goto label08;

        $r62 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r57 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        $r61 = $r57.<com.android.server.wm.ActivityTaskManagerService: android.app.ActivityManagerInternal mAmInternal>;

        $r58 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r60 = $r58.<com.android.server.wm.ActivityStarter$Request: android.content.pm.ActivityInfo activityInfo>;

        $r59 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $i14 = $r59.<com.android.server.wm.ActivityStarter$Request: int userId>;

        $r63 = virtualinvoke $r61.<android.app.ActivityManagerInternal: android.content.pm.ActivityInfo getActivityInfoForUser(android.content.pm.ActivityInfo,int)>($r60, $i14);

        $r62.<com.android.server.wm.ActivityStarter$Request: android.content.pm.ActivityInfo activityInfo> = $r63;

     label08:
        return 0;

     label09:
        return 0;

     label10:
        return 0;
    }

    private void resumeTargetStackIfNeeded()
    {
        com.android.server.wm.ActivityStarter r0;
        boolean $z0;
        android.app.ActivityOptions $r1, $r5;
        com.android.server.wm.ActivityRecord $r2;
        com.android.server.wm.ActivityStack $r3, $r6;
        int $i0;
        com.android.server.wm.RootWindowContainer $r4, $r7;

        r0 := @this: com.android.server.wm.ActivityStarter;

        $z0 = r0.<com.android.server.wm.ActivityStarter: boolean mDoResume>;

        if $z0 == 0 goto label1;

        $r7 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        $r6 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mTargetStack>;

        $r5 = r0.<com.android.server.wm.ActivityStarter: android.app.ActivityOptions mOptions>;

        virtualinvoke $r7.<com.android.server.wm.RootWindowContainer: boolean resumeFocusedStacksTopActivities(com.android.server.wm.ActivityStack,com.android.server.wm.ActivityRecord,android.app.ActivityOptions)>($r6, null, $r5);

        goto label2;

     label1:
        $r1 = r0.<com.android.server.wm.ActivityStarter: android.app.ActivityOptions mOptions>;

        staticinvoke <android.app.ActivityOptions: void abort(android.app.ActivityOptions)>($r1);

     label2:
        $r4 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        $r2 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $i0 = $r2.<com.android.server.wm.ActivityRecord: int mUserId>;

        $r3 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mTargetStack>;

        virtualinvoke $r4.<com.android.server.wm.RootWindowContainer: void updateUserStack(int,com.android.server.wm.ActivityStack)>($i0, $r3);

        return;
    }

    private void sendNewTaskResultRequestIfNeeded()
    {
        com.android.server.wm.ActivityStarter r0;
        com.android.server.wm.ActivityRecord $r1, $r2, $r3, $r4, $r5, $r7, $r8;
        int $i0, $i1, $i3;
        java.lang.String $r6;

        r0 := @this: com.android.server.wm.ActivityStarter;

        $r1 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r2 = $r1.<com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityRecord resultTo>;

        if $r2 == null goto label1;

        $i0 = r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags>;

        $i1 = $i0 & 268435456;

        if $i1 == 0 goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityTaskManager", "Activity is launching as a new task, so cancelling activity result.");

        $r3 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r7 = $r3.<com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityRecord resultTo>;

        $r4 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r6 = $r4.<com.android.server.wm.ActivityRecord: java.lang.String resultWho>;

        $r5 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $i3 = $r5.<com.android.server.wm.ActivityRecord: int requestCode>;

        virtualinvoke $r7.<com.android.server.wm.ActivityRecord: void sendResult(int,java.lang.String,int,int,android.content.Intent,com.android.server.uri.NeededUriGrants)>(-1, $r6, $i3, 0, null, null);

        $r8 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r8.<com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityRecord resultTo> = null;

     label1:
        return;
    }

    private void setInitialState(com.android.server.wm.ActivityRecord, android.app.ActivityOptions, com.android.server.wm.Task, boolean, int, com.android.server.wm.ActivityRecord, android.service.voice.IVoiceInteractionSession, com.android.internal.app.IVoiceInteractor, boolean)
    {
        com.android.server.wm.ActivityStarter r0;
        com.android.server.wm.ActivityRecord r1, r2, $r20, $r32, r40, r41, r43;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29;
        android.service.voice.IVoiceInteractionSession r3;
        com.android.internal.app.IVoiceInteractor r4;
        android.content.Intent $r5, $r15;
        com.android.server.wm.LaunchParamsController$LaunchParams $r6, $r10, $r12, $r14, $r33;
        com.android.server.wm.ActivityStackSupervisor $r7, r37;
        com.android.server.wm.LaunchParamsController $r8;
        android.content.pm.ActivityInfo $r9, $r31;
        android.content.pm.ActivityInfo$WindowLayout $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, z14, z15, z16, z17, z18, z19, z20;
        com.android.server.wm.RootWindowContainer $r13, $r19, $r29;
        com.android.server.wm.ActivityTaskManagerService $r16;
        android.content.ComponentName $r17, $r18;
        java.lang.StringBuilder $r21;
        java.lang.String $r24;
        android.app.ActivityOptions $r25, $r26, $r27, $r28, r34, r38;
        com.android.server.wm.ActivityStack$ActivityState $r30;
        com.android.server.wm.Task r35, r39;
        com.android.server.wm.TaskDisplayArea r36;
        com.android.server.wm.ActivityStack r44;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        r34 := @parameter1: android.app.ActivityOptions;

        r35 := @parameter2: com.android.server.wm.Task;

        z14 := @parameter3: boolean;

        i0 := @parameter4: int;

        r2 := @parameter5: com.android.server.wm.ActivityRecord;

        r3 := @parameter6: android.service.voice.IVoiceInteractionSession;

        r4 := @parameter7: com.android.internal.app.IVoiceInteractor;

        z15 := @parameter8: boolean;

        virtualinvoke r0.<com.android.server.wm.ActivityStarter: void reset(boolean)>(0);

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity> = r1;

        $r5 = r1.<com.android.server.wm.ActivityRecord: android.content.Intent intent>;

        r0.<com.android.server.wm.ActivityStarter: android.content.Intent mIntent> = $r5;

        r0.<com.android.server.wm.ActivityStarter: android.app.ActivityOptions mOptions> = r34;

        $i2 = r1.<com.android.server.wm.ActivityRecord: int launchedFromUid>;

        r0.<com.android.server.wm.ActivityStarter: int mCallingUid> = $i2;

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mSourceRecord> = r2;

        r0.<com.android.server.wm.ActivityStarter: android.service.voice.IVoiceInteractionSession mVoiceSession> = r3;

        r0.<com.android.server.wm.ActivityStarter: com.android.internal.app.IVoiceInteractor mVoiceInteractor> = r4;

        r0.<com.android.server.wm.ActivityStarter: boolean mRestrictedBgActivity> = z15;

        $r6 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.LaunchParamsController$LaunchParams mLaunchParams>;

        virtualinvoke $r6.<com.android.server.wm.LaunchParamsController$LaunchParams: void reset()>();

        $r7 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        $r8 = virtualinvoke $r7.<com.android.server.wm.ActivityStackSupervisor: com.android.server.wm.LaunchParamsController getLaunchParamsController()>();

        $r9 = r1.<com.android.server.wm.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r11 = $r9.<android.content.pm.ActivityInfo: android.content.pm.ActivityInfo$WindowLayout windowLayout>;

        $r10 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.LaunchParamsController$LaunchParams mLaunchParams>;

        virtualinvoke $r8.<com.android.server.wm.LaunchParamsController: void calculate(com.android.server.wm.Task,android.content.pm.ActivityInfo$WindowLayout,com.android.server.wm.ActivityRecord,com.android.server.wm.ActivityRecord,android.app.ActivityOptions,int,com.android.server.wm.LaunchParamsController$LaunchParams)>(r35, $r11, r1, r2, r34, 0, $r10);

        $r12 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.LaunchParamsController$LaunchParams mLaunchParams>;

        $z0 = virtualinvoke $r12.<com.android.server.wm.LaunchParamsController$LaunchParams: boolean hasPreferredTaskDisplayArea()>();

        if $z0 == 0 goto label01;

        $r33 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.LaunchParamsController$LaunchParams mLaunchParams>;

        r36 = $r33.<com.android.server.wm.LaunchParamsController$LaunchParams: com.android.server.wm.TaskDisplayArea mPreferredTaskDisplayArea>;

        goto label02;

     label01:
        $r13 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        r36 = virtualinvoke $r13.<com.android.server.wm.RootWindowContainer: com.android.server.wm.TaskDisplayArea getDefaultTaskDisplayArea()>();

     label02:
        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.TaskDisplayArea mPreferredTaskDisplayArea> = r36;

        $r14 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.LaunchParamsController$LaunchParams mLaunchParams>;

        $i3 = $r14.<com.android.server.wm.LaunchParamsController$LaunchParams: int mWindowingMode>;

        r0.<com.android.server.wm.ActivityStarter: int mPreferredWindowingMode> = $i3;

        i1 = r1.<com.android.server.wm.ActivityRecord: int launchMode>;

        r0.<com.android.server.wm.ActivityStarter: int mLaunchMode> = i1;

        if 3 != i1 goto label03;

        z16 = 1;

        goto label04;

     label03:
        z16 = 0;

     label04:
        $i4 = r0.<com.android.server.wm.ActivityStarter: int mLaunchMode>;

        if 2 != $i4 goto label05;

        z17 = 1;

        goto label06;

     label05:
        z17 = 0;

     label06:
        $r15 = r0.<com.android.server.wm.ActivityStarter: android.content.Intent mIntent>;

        $i5 = virtualinvoke $r15.<android.content.Intent: int getFlags()>();

        $i6 = specialinvoke r0.<com.android.server.wm.ActivityStarter: int adjustLaunchFlagsToDocumentMode(com.android.server.wm.ActivityRecord,boolean,boolean,int)>(r1, z16, z17, $i5);

        r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags> = $i6;

        $z1 = r1.<com.android.server.wm.ActivityRecord: boolean mLaunchTaskBehind>;

        if $z1 == 0 goto label07;

        $z13 = specialinvoke r0.<com.android.server.wm.ActivityStarter: boolean isLaunchModeOneOf(int,int)>(2, 3);

        if $z13 != 0 goto label07;

        $i17 = r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags>;

        $i18 = $i17 & 524288;

        if $i18 == 0 goto label07;

        z18 = 1;

        goto label08;

     label07:
        z18 = 0;

     label08:
        r0.<com.android.server.wm.ActivityStarter: boolean mLaunchTaskBehind> = z18;

        specialinvoke r0.<com.android.server.wm.ActivityStarter: void sendNewTaskResultRequestIfNeeded()>();

        $i19 = r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags>;

        $i20 = $i19 & 524288;

        if $i20 == 0 goto label09;

        $r32 = r1.<com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityRecord resultTo>;

        if $r32 != null goto label09;

        $i15 = r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags>;

        $i16 = $i15 | 268435456;

        r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags> = $i16;

     label09:
        $i21 = r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags>;

        $i22 = $i21 & 268435456;

        if $i22 == 0 goto label11;

        $z12 = r0.<com.android.server.wm.ActivityStarter: boolean mLaunchTaskBehind>;

        if $z12 != 0 goto label10;

        $r31 = r1.<com.android.server.wm.ActivityRecord: android.content.pm.ActivityInfo info>;

        $i14 = $r31.<android.content.pm.ActivityInfo: int documentLaunchMode>;

        if $i14 != 2 goto label11;

     label10:
        $i12 = r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags>;

        $i13 = $i12 | 134217728;

        r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags> = $i13;

     label11:
        r37 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        $i23 = r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags>;

        $i24 = $i23 & 262144;

        if $i24 != 0 goto label12;

        z19 = 1;

        goto label13;

     label12:
        z19 = 0;

     label13:
        r37.<com.android.server.wm.ActivityStackSupervisor: boolean mUserLeaving> = z19;

        r0.<com.android.server.wm.ActivityStarter: boolean mDoResume> = z14;

        if z14 == 0 goto label14;

        $z10 = virtualinvoke r1.<com.android.server.wm.ActivityRecord: boolean okToShowLocked()>();

        if $z10 == 0 goto label14;

        $z11 = r0.<com.android.server.wm.ActivityStarter: boolean mLaunchTaskBehind>;

        if $z11 == 0 goto label15;

     label14:
        r1.<com.android.server.wm.ActivityRecord: boolean delayedResume> = 1;

        r0.<com.android.server.wm.ActivityStarter: boolean mDoResume> = 0;

     label15:
        r38 = r0.<com.android.server.wm.ActivityStarter: android.app.ActivityOptions mOptions>;

        if r38 == null goto label20;

        $i10 = virtualinvoke r38.<android.app.ActivityOptions: int getLaunchTaskId()>();

        if $i10 == -1 goto label19;

        $r26 = r0.<com.android.server.wm.ActivityStarter: android.app.ActivityOptions mOptions>;

        $z7 = virtualinvoke $r26.<android.app.ActivityOptions: boolean getTaskOverlay()>();

        if $z7 == 0 goto label19;

        virtualinvoke r1.<com.android.server.wm.ActivityRecord: void setTaskOverlay(boolean)>(1);

        $r27 = r0.<com.android.server.wm.ActivityStarter: android.app.ActivityOptions mOptions>;

        $z8 = virtualinvoke $r27.<android.app.ActivityOptions: boolean canTaskOverlayResume()>();

        if $z8 != 0 goto label20;

        $r29 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        $r28 = r0.<com.android.server.wm.ActivityStarter: android.app.ActivityOptions mOptions>;

        $i11 = virtualinvoke $r28.<android.app.ActivityOptions: int getLaunchTaskId()>();

        r39 = virtualinvoke $r29.<com.android.server.wm.RootWindowContainer: com.android.server.wm.Task anyTaskForId(int)>($i11);

        if r39 == null goto label16;

        r40 = virtualinvoke r39.<com.android.server.wm.Task: com.android.server.wm.ActivityRecord getTopNonFinishingActivity()>();

        goto label17;

     label16:
        r40 = null;

     label17:
        if r40 == null goto label18;

        $r30 = <com.android.server.wm.ActivityStack$ActivityState: com.android.server.wm.ActivityStack$ActivityState RESUMED>;

        $z9 = virtualinvoke r40.<com.android.server.wm.ActivityRecord: boolean isState(com.android.server.wm.ActivityStack$ActivityState)>($r30);

        if $z9 != 0 goto label18;

        r0.<com.android.server.wm.ActivityStarter: boolean mDoResume> = 0;

        r0.<com.android.server.wm.ActivityStarter: boolean mAvoidMoveToFront> = 1;

     label18:
        goto label20;

     label19:
        $r25 = r0.<com.android.server.wm.ActivityStarter: android.app.ActivityOptions mOptions>;

        $z6 = virtualinvoke $r25.<android.app.ActivityOptions: boolean getAvoidMoveToFront()>();

        if $z6 == 0 goto label20;

        r0.<com.android.server.wm.ActivityStarter: boolean mDoResume> = 0;

        r0.<com.android.server.wm.ActivityStarter: boolean mAvoidMoveToFront> = 1;

     label20:
        $i25 = r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags>;

        $i26 = $i25 & 16777216;

        if $i26 == 0 goto label21;

        r41 = r2;

        goto label22;

     label21:
        r41 = null;

     label22:
        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mNotTop> = r41;

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.Task mInTask> = r35;

        if r35 == null goto label23;

        $z5 = r35.<com.android.server.wm.Task: boolean inRecents>;

        if $z5 != 0 goto label23;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Starting activity in task not in recents: ");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r35);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityTaskManager", $r24);

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.Task mInTask> = null;

     label23:
        r0.<com.android.server.wm.ActivityStarter: int mStartFlags> = i0;

        $i27 = i0 & 1;

        if $i27 == 0 goto label26;

        r43 = r2;

        if r2 != null goto label24;

        $r19 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        r44 = virtualinvoke $r19.<com.android.server.wm.RootWindowContainer: com.android.server.wm.ActivityStack getTopDisplayFocusedStack()>();

        r43 = r2;

        if r44 == null goto label24;

        $r20 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mNotTop>;

        r43 = virtualinvoke r44.<com.android.server.wm.ActivityStack: com.android.server.wm.ActivityRecord topRunningNonDelayedActivityLocked(com.android.server.wm.ActivityRecord)>($r20);

     label24:
        if r43 == null goto label25;

        $r18 = r43.<com.android.server.wm.ActivityRecord: android.content.ComponentName mActivityComponent>;

        $r17 = r1.<com.android.server.wm.ActivityRecord: android.content.ComponentName mActivityComponent>;

        $z4 = virtualinvoke $r18.<android.content.ComponentName: boolean equals(java.lang.Object)>($r17);

        if $z4 != 0 goto label26;

     label25:
        $i7 = r0.<com.android.server.wm.ActivityStarter: int mStartFlags>;

        $i8 = $i7 & -2;

        r0.<com.android.server.wm.ActivityStarter: int mStartFlags> = $i8;

     label26:
        $i28 = r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags>;

        $i29 = $i28 & 65536;

        if $i29 == 0 goto label27;

        z20 = 1;

        goto label28;

     label27:
        z20 = 0;

     label28:
        r0.<com.android.server.wm.ActivityStarter: boolean mNoAnimation> = z20;

        $z2 = r0.<com.android.server.wm.ActivityStarter: boolean mRestrictedBgActivity>;

        if $z2 == 0 goto label29;

        $r16 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        $z3 = virtualinvoke $r16.<com.android.server.wm.ActivityTaskManagerService: boolean isBackgroundActivityStartsEnabled()>();

        if $z3 != 0 goto label29;

        r0.<com.android.server.wm.ActivityStarter: boolean mAvoidMoveToFront> = 1;

        r0.<com.android.server.wm.ActivityStarter: boolean mDoResume> = 0;

     label29:
        return;
    }

    private void setNewTask(com.android.server.wm.Task)
    {
        com.android.server.wm.ActivityStarter r0;
        com.android.server.wm.Task r1, $r9;
        com.android.server.wm.ActivityStack r2;
        boolean $z0, $z1, z2;
        com.android.server.wm.ActivityRecord $r3, $r5, $r6, $r10;
        android.app.ActivityOptions $r4;
        com.android.internal.app.IVoiceInteractor $r7;
        android.service.voice.IVoiceInteractionSession $r8;
        android.content.pm.ActivityInfo r11;
        android.content.Intent r12;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r1 := @parameter0: com.android.server.wm.Task;

        $z0 = r0.<com.android.server.wm.ActivityStarter: boolean mLaunchTaskBehind>;

        if $z0 != 0 goto label1;

        $z1 = r0.<com.android.server.wm.ActivityStarter: boolean mAvoidMoveToFront>;

        if $z1 != 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        r2 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mTargetStack>;

        r11 = r0.<com.android.server.wm.ActivityStarter: android.content.pm.ActivityInfo mNewTaskInfo>;

        if r11 == null goto label3;

        goto label4;

     label3:
        $r3 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        r11 = $r3.<com.android.server.wm.ActivityRecord: android.content.pm.ActivityInfo info>;

     label4:
        r12 = r0.<com.android.server.wm.ActivityStarter: android.content.Intent mNewTaskIntent>;

        if r12 == null goto label5;

        goto label6;

     label5:
        r12 = r0.<com.android.server.wm.ActivityStarter: android.content.Intent mIntent>;

     label6:
        $r8 = r0.<com.android.server.wm.ActivityStarter: android.service.voice.IVoiceInteractionSession mVoiceSession>;

        $r7 = r0.<com.android.server.wm.ActivityStarter: com.android.internal.app.IVoiceInteractor mVoiceInteractor>;

        $r6 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r5 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mSourceRecord>;

        $r4 = r0.<com.android.server.wm.ActivityStarter: android.app.ActivityOptions mOptions>;

        $r9 = virtualinvoke r2.<com.android.server.wm.ActivityStack: com.android.server.wm.Task reuseOrCreateTask(android.content.pm.ActivityInfo,android.content.Intent,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,boolean,com.android.server.wm.ActivityRecord,com.android.server.wm.ActivityRecord,android.app.ActivityOptions)>(r11, r12, $r8, $r7, z2, $r6, $r5, $r4);

        specialinvoke r0.<com.android.server.wm.ActivityStarter: void addOrReparentStartingActivity(com.android.server.wm.Task,java.lang.String)>($r9, "setTaskFromReuseOrCreateNewTask - mReuseTask");

        if r1 == null goto label7;

        $r10 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        virtualinvoke $r10.<com.android.server.wm.ActivityRecord: void setTaskToAffiliateWith(com.android.server.wm.Task)>(r1);

     label7:
        return;
    }

    private void setTargetStackIfNeeded(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.ActivityStarter r0;
        com.android.server.wm.ActivityRecord r1, $r5, $r8, $r17, $r19, $r21, $r25, r30, r33, $r34, $r41;
        boolean z0, $z1, $z2, z4, $z5, $z6;
        com.android.server.wm.ActivityStack $r2, $r9, $r14, $r16, $r18, $r23, r27, r29, r36, r37, $r39, $r43, $r47;
        com.android.server.wm.TaskDisplayArea $r3, $r4, $r46;
        android.content.Intent $r6;
        com.android.server.wm.WindowContainer $r10, $r12, $r13;
        com.android.server.wm.Task $r11, $r15, $r20, $r22, $r26, r28, r31, r32, r38;
        com.android.server.wm.DisplayContent $r24;
        int $i0;
        android.app.ActivityOptions $r35, $r40;
        com.android.server.am.AppTimeTracker $r42;
        com.android.server.wm.ActivityStackSupervisor $r44;
        com.android.server.wm.RootWindowContainer $r45;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        r27 = virtualinvoke r1.<com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityStack getRootTask()>();

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mTargetStack> = r27;

        r27.<com.android.server.wm.ActivityStack: com.android.server.wm.ActivityRecord mLastPausedActivity> = null;

        r28 = virtualinvoke r1.<com.android.server.wm.ActivityRecord: com.android.server.wm.Task getTask()>();

        $r2 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mTargetStack>;

        $r3 = virtualinvoke $r2.<com.android.server.wm.ActivityStack: com.android.server.wm.TaskDisplayArea getDisplayArea()>();

        $r4 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.TaskDisplayArea mPreferredTaskDisplayArea>;

        if $r3 != $r4 goto label08;

        $r23 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mTargetStack>;

        $r24 = virtualinvoke $r23.<com.android.server.wm.ActivityStack: com.android.server.wm.DisplayContent getDisplay()>();

        r29 = virtualinvoke $r24.<com.android.server.wm.DisplayContent: com.android.server.wm.ActivityStack getFocusedStack()>();

        if r29 != null goto label01;

        r30 = null;

        goto label02;

     label01:
        $r25 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mNotTop>;

        r30 = virtualinvoke r29.<com.android.server.wm.ActivityStack: com.android.server.wm.ActivityRecord topRunningNonDelayedActivityLocked(com.android.server.wm.ActivityRecord)>($r25);

     label02:
        if r30 == null goto label03;

        r31 = virtualinvoke r30.<com.android.server.wm.ActivityRecord: com.android.server.wm.Task getTask()>();

        goto label04;

     label03:
        r31 = null;

     label04:
        if r31 != r28 goto label06;

        if r29 == null goto label05;

        $r26 = virtualinvoke r29.<com.android.server.wm.ActivityStack: com.android.server.wm.Task getTopMostTask()>();

        if r31 == $r26 goto label05;

        goto label06;

     label05:
        z4 = 0;

        goto label07;

     label06:
        z4 = 1;

     label07:
        goto label09;

     label08:
        z4 = 1;

     label09:
        r32 = r28;

        if z4 == 0 goto label16;

        r32 = r28;

        $z1 = r0.<com.android.server.wm.ActivityStarter: boolean mAvoidMoveToFront>;

        if $z1 != 0 goto label16;

        $r5 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r6 = $r5.<com.android.server.wm.ActivityRecord: android.content.Intent intent>;

        virtualinvoke $r6.<android.content.Intent: android.content.Intent addFlags(int)>(4194304);

        $r8 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mSourceRecord>;

        if $r8 == null goto label10;

        r32 = r28;

        $r16 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mSourceStack>;

        $r17 = virtualinvoke $r16.<com.android.server.wm.ActivityStack: com.android.server.wm.ActivityRecord getTopNonFinishingActivity()>();

        if $r17 == null goto label16;

        r32 = r28;

        $r18 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mSourceStack>;

        $r19 = virtualinvoke $r18.<com.android.server.wm.ActivityStack: com.android.server.wm.ActivityRecord getTopNonFinishingActivity()>();

        $r20 = virtualinvoke $r19.<com.android.server.wm.ActivityRecord: com.android.server.wm.Task getTask()>();

        $r21 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mSourceRecord>;

        $r22 = virtualinvoke $r21.<com.android.server.wm.ActivityRecord: com.android.server.wm.Task getTask()>();

        if $r20 != $r22 goto label16;

     label10:
        $z2 = r0.<com.android.server.wm.ActivityStarter: boolean mLaunchTaskBehind>;

        if $z2 == 0 goto label11;

        r33 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mSourceRecord>;

        if r33 == null goto label11;

        $r15 = virtualinvoke r33.<com.android.server.wm.ActivityRecord: com.android.server.wm.Task getTask()>();

        virtualinvoke r1.<com.android.server.wm.ActivityRecord: void setTaskToAffiliateWith(com.android.server.wm.Task)>($r15);

     label11:
        $r34 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $i0 = r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags>;

        $r35 = r0.<com.android.server.wm.ActivityStarter: android.app.ActivityOptions mOptions>;

        r36 = specialinvoke r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack getLaunchStack(com.android.server.wm.ActivityRecord,int,com.android.server.wm.Task,android.app.ActivityOptions)>($r34, $i0, r28, $r35);

        if r36 == null goto label13;

        $r14 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mTargetStack>;

        if r36 != $r14 goto label12;

        goto label13;

     label12:
        virtualinvoke r28.<com.android.server.wm.Task: boolean reparent(com.android.server.wm.ActivityStack,boolean,int,boolean,boolean,java.lang.String)>(r36, 1, 0, 1, 1, "reparentToTargetStack");

        r0.<com.android.server.wm.ActivityStarter: boolean mMovedToFront> = 1;

        goto label15;

     label13:
        $r9 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mTargetStack>;

        z0 = virtualinvoke $r9.<com.android.server.wm.ActivityStack: boolean isTopSplitScreenStack()>();

        r37 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mTargetStack>;

        r38 = r28;

        if r37 == r28 goto label14;

        r38 = r28;

        $r10 = virtualinvoke r28.<com.android.server.wm.Task: com.android.server.wm.WindowContainer getParent()>();

        $r11 = virtualinvoke $r10.<com.android.server.wm.WindowContainer: com.android.server.wm.Task asTask()>();

        if r37 == $r11 goto label14;

        $r12 = virtualinvoke r28.<com.android.server.wm.Task: com.android.server.wm.WindowContainer getParent()>();

        virtualinvoke $r12.<com.android.server.wm.WindowContainer: void positionChildAt(int,com.android.server.wm.WindowContainer,boolean)>(2147483647, r28, 0);

        $r13 = virtualinvoke r28.<com.android.server.wm.Task: com.android.server.wm.WindowContainer getParent()>();

        r38 = virtualinvoke $r13.<com.android.server.wm.WindowContainer: com.android.server.wm.Task asTask()>();

     label14:
        $r39 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mTargetStack>;

        $z5 = r0.<com.android.server.wm.ActivityStarter: boolean mNoAnimation>;

        $r40 = r0.<com.android.server.wm.ActivityStarter: android.app.ActivityOptions mOptions>;

        $r41 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r42 = $r41.<com.android.server.wm.ActivityRecord: com.android.server.am.AppTimeTracker appTimeTracker>;

        virtualinvoke $r39.<com.android.server.wm.ActivityStack: void moveTaskToFront(com.android.server.wm.Task,boolean,android.app.ActivityOptions,com.android.server.am.AppTimeTracker,boolean,java.lang.String)>(r38, $z5, $r40, $r42, 1, "bringingFoundTaskToFront");

        $z6 = z0 ^ 1;

        r0.<com.android.server.wm.ActivityStarter: boolean mMovedToFront> = $z6;

        r28 = r38;

     label15:
        r0.<com.android.server.wm.ActivityStarter: android.app.ActivityOptions mOptions> = null;

        r32 = r28;

     label16:
        $r43 = virtualinvoke r1.<com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityStack getRootTask()>();

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mTargetStack> = $r43;

        $r44 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        $r45 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        $r46 = virtualinvoke $r45.<com.android.server.wm.RootWindowContainer: com.android.server.wm.TaskDisplayArea getDefaultTaskDisplayArea()>();

        $r47 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mTargetStack>;

        virtualinvoke $r44.<com.android.server.wm.ActivityStackSupervisor: void handleNonResizableTaskIfNeeded(com.android.server.wm.Task,int,com.android.server.wm.TaskDisplayArea,com.android.server.wm.ActivityStack)>(r32, 0, $r46, $r47);

        return;
    }

    private int startActivityUnchecked(com.android.server.wm.ActivityRecord, com.android.server.wm.ActivityRecord, android.service.voice.IVoiceInteractionSession, com.android.internal.app.IVoiceInteractor, int, boolean, android.app.ActivityOptions, com.android.server.wm.Task, boolean, com.android.server.uri.NeededUriGrants)
    {
        com.android.server.wm.ActivityStarter r0;
        com.android.server.wm.ActivityRecord r1, r12;
        android.service.voice.IVoiceInteractionSession r2;
        com.android.internal.app.IVoiceInteractor r3;
        boolean z0, z1;
        android.app.ActivityOptions r4;
        com.android.server.wm.Task r5;
        com.android.server.uri.NeededUriGrants r6;
        com.android.server.wm.ActivityTaskManagerService $r7, $r8, $r11;
        java.lang.Throwable $r9;
        int i0, i1;
        com.android.server.wm.ActivityStack r13;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        r12 := @parameter1: com.android.server.wm.ActivityRecord;

        r2 := @parameter2: android.service.voice.IVoiceInteractionSession;

        r3 := @parameter3: com.android.internal.app.IVoiceInteractor;

        i0 := @parameter4: int;

        z0 := @parameter5: boolean;

        r4 := @parameter6: android.app.ActivityOptions;

        r5 := @parameter7: com.android.server.wm.Task;

        z1 := @parameter8: boolean;

        r6 := @parameter9: com.android.server.uri.NeededUriGrants;

     label1:
        $r7 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        virtualinvoke $r7.<com.android.server.wm.ActivityTaskManagerService: void deferWindowLayout()>();

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(32L, "startActivityInner");

        i1 = virtualinvoke r0.<com.android.server.wm.ActivityStarter: int startActivityInner(com.android.server.wm.ActivityRecord,com.android.server.wm.ActivityRecord,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,int,boolean,android.app.ActivityOptions,com.android.server.wm.Task,boolean,com.android.server.uri.NeededUriGrants)>(r1, r12, r2, r3, i0, z0, r4, r5, z1, r6);

     label2:
        staticinvoke <android.os.Trace: void traceEnd(long)>(32L);

        r13 = specialinvoke r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack handleStartResult(com.android.server.wm.ActivityRecord,int)>(r1, i1);

        $r8 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        virtualinvoke $r8.<com.android.server.wm.ActivityTaskManagerService: void continueWindowLayout()>();

        virtualinvoke r0.<com.android.server.wm.ActivityStarter: void postStartActivityProcessing(com.android.server.wm.ActivityRecord,int,com.android.server.wm.ActivityStack)>(r1, i1, r13);

        return i1;

     label3:
        $r9 := @caughtexception;

        staticinvoke <android.os.Trace: void traceEnd(long)>(32L);

        specialinvoke r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack handleStartResult(com.android.server.wm.ActivityRecord,int)>(r1, -96);

        $r11 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        virtualinvoke $r11.<com.android.server.wm.ActivityTaskManagerService: void continueWindowLayout()>();

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private int waitForResult(int, com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.ActivityStarter r0;
        int i0, $i1, i3, $i4;
        android.app.WaitResult r1, $r3, $r6, $r11, $r13, $r15, $r19, $r23, $r25, $r29, $r32, $r34, $r36, $r39, $r41, $r50;
        com.android.server.wm.ActivityStarter$Request $r2, $r5, $r10, $r12, $r14, $r17, $r18, $r22, $r24, $r28, $r30, $r33, $r35, $r37, $r40, $r49;
        com.android.server.wm.ActivityStackSupervisor $r4, $r21;
        java.util.ArrayList $r7;
        com.android.server.wm.ActivityTaskManagerService $r8, $r45;
        com.android.server.wm.WindowManagerGlobalLock $r9, $r46;
        boolean $z1, $z2, $z3, $z4, $z5;
        android.content.ComponentName $r16, $r20, $r26, $r31, $r38;
        com.android.server.wm.ActivityStack$ActivityState $r27;
        java.lang.Throwable $r42, $r43;
        com.android.server.wm.ActivityRecord r44;
        byte b2;

        r0 := @this: com.android.server.wm.ActivityStarter;

        i0 := @parameter0: int;

        r44 := @parameter1: com.android.server.wm.ActivityRecord;

        $r2 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r3 = $r2.<com.android.server.wm.ActivityStarter$Request: android.app.WaitResult waitResult>;

        $r3.<android.app.WaitResult: int result> = i0;

        if i0 == 0 goto label10;

        b2 = 3;

        if i0 == 2 goto label02;

        if i0 == 3 goto label01;

        i3 = i0;

        goto label16;

     label01:
        $r35 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r36 = $r35.<com.android.server.wm.ActivityStarter$Request: android.app.WaitResult waitResult>;

        $r36.<android.app.WaitResult: boolean timeout> = 0;

        $r37 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r39 = $r37.<com.android.server.wm.ActivityStarter$Request: android.app.WaitResult waitResult>;

        $r38 = r44.<com.android.server.wm.ActivityRecord: android.content.ComponentName mActivityComponent>;

        $r39.<android.app.WaitResult: android.content.ComponentName who> = $r38;

        $r40 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r41 = $r40.<com.android.server.wm.ActivityStarter$Request: android.app.WaitResult waitResult>;

        $r41.<android.app.WaitResult: long totalTime> = 0L;

        i3 = i0;

        goto label16;

     label02:
        $r17 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        r1 = $r17.<com.android.server.wm.ActivityStarter$Request: android.app.WaitResult waitResult>;

        $z2 = virtualinvoke r44.<com.android.server.wm.ActivityRecord: boolean attachedToProcess()>();

        if $z2 == 0 goto label03;

        goto label04;

     label03:
        b2 = 1;

     label04:
        r1.<android.app.WaitResult: int launchState> = b2;

        $z3 = r44.<com.android.server.wm.ActivityRecord: boolean nowVisible>;

        if $z3 == 0 goto label05;

        $r27 = <com.android.server.wm.ActivityStack$ActivityState: com.android.server.wm.ActivityStack$ActivityState RESUMED>;

        $z5 = virtualinvoke r44.<com.android.server.wm.ActivityRecord: boolean isState(com.android.server.wm.ActivityStack$ActivityState)>($r27);

        if $z5 == 0 goto label05;

        $r28 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r29 = $r28.<com.android.server.wm.ActivityStarter$Request: android.app.WaitResult waitResult>;

        $r29.<android.app.WaitResult: boolean timeout> = 0;

        $r30 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r32 = $r30.<com.android.server.wm.ActivityStarter$Request: android.app.WaitResult waitResult>;

        $r31 = r44.<com.android.server.wm.ActivityRecord: android.content.ComponentName mActivityComponent>;

        $r32.<android.app.WaitResult: android.content.ComponentName who> = $r31;

        $r33 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r34 = $r33.<com.android.server.wm.ActivityStarter$Request: android.app.WaitResult waitResult>;

        $r34.<android.app.WaitResult: long totalTime> = 0L;

        i3 = i0;

        goto label16;

     label05:
        $r21 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        $r20 = r44.<com.android.server.wm.ActivityRecord: android.content.ComponentName mActivityComponent>;

        $r18 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r19 = $r18.<com.android.server.wm.ActivityStarter$Request: android.app.WaitResult waitResult>;

        virtualinvoke $r21.<com.android.server.wm.ActivityStackSupervisor: void waitActivityVisible(android.content.ComponentName,android.app.WaitResult)>($r20, $r19);

     label06:
        $r45 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        $r46 = $r45.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        virtualinvoke $r46.<java.lang.Object: void wait()>();

     label07:
        goto label09;

     label08:
        $r42 := @caughtexception;

     label09:
        i3 = i0;

        $r22 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r23 = $r22.<com.android.server.wm.ActivityStarter$Request: android.app.WaitResult waitResult>;

        $z4 = $r23.<android.app.WaitResult: boolean timeout>;

        if $z4 != 0 goto label16;

        $r24 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r25 = $r24.<com.android.server.wm.ActivityStarter$Request: android.app.WaitResult waitResult>;

        $r26 = $r25.<android.app.WaitResult: android.content.ComponentName who>;

        if $r26 == null goto label06;

        i3 = i0;

        goto label16;

     label10:
        $r4 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        $r7 = $r4.<com.android.server.wm.ActivityStackSupervisor: java.util.ArrayList mWaitingActivityLaunched>;

        $r5 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r6 = $r5.<com.android.server.wm.ActivityStarter$Request: android.app.WaitResult waitResult>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

     label11:
        $r8 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        $r9 = $r8.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        virtualinvoke $r9.<java.lang.Object: void wait()>();

     label12:
        goto label14;

     label13:
        $r43 := @caughtexception;

     label14:
        $r10 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r11 = $r10.<com.android.server.wm.ActivityStarter$Request: android.app.WaitResult waitResult>;

        $i1 = $r11.<android.app.WaitResult: int result>;

        if $i1 == 2 goto label15;

        $r12 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r13 = $r12.<com.android.server.wm.ActivityStarter$Request: android.app.WaitResult waitResult>;

        $z1 = $r13.<android.app.WaitResult: boolean timeout>;

        if $z1 != 0 goto label15;

        $r14 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r15 = $r14.<com.android.server.wm.ActivityStarter$Request: android.app.WaitResult waitResult>;

        $r16 = $r15.<android.app.WaitResult: android.content.ComponentName who>;

        if $r16 == null goto label11;

     label15:
        i3 = i0;

        $r49 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r50 = $r49.<com.android.server.wm.ActivityStarter$Request: android.app.WaitResult waitResult>;

        $i4 = $r50.<android.app.WaitResult: int result>;

        if $i4 != 2 goto label16;

        i3 = 2;

     label16:
        return i3;

        catch java.lang.InterruptedException from label06 to label07 with label08;
        catch java.lang.InterruptedException from label11 to label12 with label13;
    }

    void dump(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.wm.ActivityStarter r0;
        java.io.PrintWriter r1;
        java.lang.StringBuilder $r2, $r16, $r20;
        com.android.server.wm.RootWindowContainer $r5;
        int $i0, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r6, $r9, $r13, $r19, $r23, r24, r26;
        java.text.DateFormat $r7;
        java.util.Date $r8;
        long $l1;
        com.android.server.wm.ActivityRecord $r10, r27, r28, r30;
        android.content.Intent $r11, $r15;
        android.app.ActivityOptions $r12, $r14;
        boolean $z1, $z2, z3, z4, z5;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r1 := @parameter0: java.io.PrintWriter;

        r24 := @parameter1: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        r26 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r26);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mCurrentUser=");

        $r5 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        $i0 = $r5.<com.android.server.wm.RootWindowContainer: int mCurrentUser>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r26);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mLastStartReason=");

        $r6 = r0.<com.android.server.wm.ActivityStarter: java.lang.String mLastStartReason>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r6);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r26);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mLastStartActivityTimeMs=");

        $r7 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateTimeInstance()>();

        $r8 = new java.util.Date;

        $l1 = r0.<com.android.server.wm.ActivityStarter: long mLastStartActivityTimeMs>;

        specialinvoke $r8.<java.util.Date: void <init>(long)>($l1);

        $r9 = virtualinvoke $r7.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r8);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r26);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mLastStartActivityResult=");

        $i2 = r0.<com.android.server.wm.ActivityStarter: int mLastStartActivityResult>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i2);

        r27 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mLastStartActivityRecord>;

        if r27 == null goto label01;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r26);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("mLastStartActivityRecord:");

        r28 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mLastStartActivityRecord>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r28.<com.android.server.wm.ActivityRecord: void dump(java.io.PrintWriter,java.lang.String,boolean)>(r1, $r23, 1);

     label01:
        $r10 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        if $r10 == null goto label02;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r26);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("mStartActivity:");

        r30 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r30.<com.android.server.wm.ActivityRecord: void dump(java.io.PrintWriter,java.lang.String,boolean)>(r1, $r19, 1);

     label02:
        $r11 = r0.<com.android.server.wm.ActivityStarter: android.content.Intent mIntent>;

        if $r11 == null goto label03;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r26);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mIntent=");

        $r15 = r0.<com.android.server.wm.ActivityStarter: android.content.Intent mIntent>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r15);

     label03:
        $r12 = r0.<com.android.server.wm.ActivityStarter: android.app.ActivityOptions mOptions>;

        if $r12 == null goto label04;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r26);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mOptions=");

        $r14 = r0.<com.android.server.wm.ActivityStarter: android.app.ActivityOptions mOptions>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r14);

     label04:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r26);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mLaunchSingleTop=");

        $i3 = r0.<com.android.server.wm.ActivityStarter: int mLaunchMode>;

        if 1 != $i3 goto label05;

        z3 = 1;

        goto label06;

     label05:
        z3 = 0;

     label06:
        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>(z3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mLaunchSingleInstance=");

        $i4 = r0.<com.android.server.wm.ActivityStarter: int mLaunchMode>;

        if 3 != $i4 goto label07;

        z4 = 1;

        goto label08;

     label07:
        z4 = 0;

     label08:
        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>(z4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mLaunchSingleTask=");

        $i5 = r0.<com.android.server.wm.ActivityStarter: int mLaunchMode>;

        if 2 != $i5 goto label09;

        z5 = 1;

        goto label10;

     label09:
        z5 = 0;

     label10:
        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>(z5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r26);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mLaunchFlags=0x");

        $i6 = r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i6);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r13);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mDoResume=");

        $z1 = r0.<com.android.server.wm.ActivityStarter: boolean mDoResume>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mAddingToTask=");

        $z2 = r0.<com.android.server.wm.ActivityStarter: boolean mAddingToTask>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z2);

        return;
    }

    int execute()
    {
        com.android.server.wm.ActivityStarter r0;
        com.android.server.wm.ActivityStack r1;
        long l0;
        com.android.server.wm.ActivityStarter$Request $r2, $r5, $r9, $r11, $r14, $r16, $r20, $r25, $r28, $r29, $r43;
        android.content.Intent $r3, $r10, $r30;
        com.android.server.wm.ActivityTaskManagerService $r4, $r13, $r18, $r22, $r23;
        android.os.IBinder $r6;
        com.android.server.wm.ActivityStackSupervisor $r7, $r27, $r40;
        com.android.server.wm.ActivityMetricsLogger $r8, $r41;
        android.content.pm.ActivityInfo $r12;
        android.content.res.Configuration $r15, $r21, $r24, $r26;
        com.android.server.wm.ActivityRecord $r17, r36, $r42;
        android.app.ActivityManagerInternal $r19;
        int $i1, i2, i3, i4;
        boolean $z1, z2;
        java.lang.Throwable $r31, $r32, $r33;
        java.lang.IllegalArgumentException r34;
        com.android.server.wm.WindowManagerGlobalLock r35, r38;
        com.android.server.wm.ActivityMetricsLogger$LaunchingState r37;
        com.android.server.wm.RootWindowContainer $r39;
        android.app.WaitResult $r44;

        r0 := @this: com.android.server.wm.ActivityStarter;

     label01:
        $r2 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r3 = $r2.<com.android.server.wm.ActivityStarter$Request: android.content.Intent intent>;

        if $r3 == null goto label04;

        $r29 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r30 = $r29.<com.android.server.wm.ActivityStarter$Request: android.content.Intent intent>;

        $z1 = virtualinvoke $r30.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z1 != 0 goto label03;

     label02:
        goto label04;

     label03:
        r34 = new java.lang.IllegalArgumentException;

        specialinvoke r34.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw r34;

     label04:
        $r4 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        r35 = $r4.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r35;

     label05:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r5 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r6 = $r5.<com.android.server.wm.ActivityStarter$Request: android.os.IBinder resultTo>;

        r36 = staticinvoke <com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityRecord forTokenLocked(android.os.IBinder)>($r6);

        $r7 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        $r8 = virtualinvoke $r7.<com.android.server.wm.ActivityStackSupervisor: com.android.server.wm.ActivityMetricsLogger getActivityMetricsLogger()>();

        $r9 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r10 = $r9.<com.android.server.wm.ActivityStarter$Request: android.content.Intent intent>;

        r37 = virtualinvoke $r8.<com.android.server.wm.ActivityMetricsLogger: com.android.server.wm.ActivityMetricsLogger$LaunchingState notifyActivityLaunching(android.content.Intent,com.android.server.wm.ActivityRecord)>($r10, r36);

        exitmonitor r35;

     label06:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        $r11 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r12 = $r11.<com.android.server.wm.ActivityStarter$Request: android.content.pm.ActivityInfo activityInfo>;

        if $r12 != null goto label07;

        $r28 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r27 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        virtualinvoke $r28.<com.android.server.wm.ActivityStarter$Request: void resolveActivity(com.android.server.wm.ActivityStackSupervisor)>($r27);

     label07:
        $r13 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        r38 = $r13.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r38;

     label08:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r14 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r15 = $r14.<com.android.server.wm.ActivityStarter$Request: android.content.res.Configuration globalConfig>;

        if $r15 == null goto label10;

        $r23 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        $r24 = virtualinvoke $r23.<com.android.server.wm.ActivityTaskManagerService: android.content.res.Configuration getGlobalConfiguration()>();

        $r25 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r26 = $r25.<com.android.server.wm.ActivityStarter$Request: android.content.res.Configuration globalConfig>;

        $i1 = virtualinvoke $r24.<android.content.res.Configuration: int diff(android.content.res.Configuration)>($r26);

        if $i1 == 0 goto label10;

     label09:
        z2 = 1;

        goto label11;

     label10:
        z2 = 0;

     label11:
        $r39 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        r1 = virtualinvoke $r39.<com.android.server.wm.RootWindowContainer: com.android.server.wm.ActivityStack getTopDisplayFocusedStack()>();

     label12:
        if r1 == null goto label14;

     label13:
        r1.<com.android.server.wm.ActivityStack: boolean mConfigWillChange> = z2;

     label14:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        i2 = specialinvoke r0.<com.android.server.wm.ActivityStarter: int resolveToHeavyWeightSwitcherIfNeeded()>();

     label15:
        if i2 == 0 goto label18;

     label16:
        exitmonitor r38;

     label17:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        specialinvoke r0.<com.android.server.wm.ActivityStarter: void onExecutionComplete()>();

        return i2;

     label18:
        $r16 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        i3 = specialinvoke r0.<com.android.server.wm.ActivityStarter: int executeRequest(com.android.server.wm.ActivityStarter$Request)>($r16);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label19:
        if z2 == 0 goto label24;

     label20:
        $r18 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        $r19 = $r18.<com.android.server.wm.ActivityTaskManagerService: android.app.ActivityManagerInternal mAmInternal>;

        virtualinvoke $r19.<android.app.ActivityManagerInternal: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.CHANGE_CONFIGURATION", "updateConfiguration()");

     label21:
        if r1 == null goto label23;

     label22:
        r1.<com.android.server.wm.ActivityStack: boolean mConfigWillChange> = 0;

     label23:
        $r22 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        $r20 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r21 = $r20.<com.android.server.wm.ActivityStarter$Request: android.content.res.Configuration globalConfig>;

        virtualinvoke $r22.<com.android.server.wm.ActivityTaskManagerService: boolean updateConfigurationLocked(android.content.res.Configuration,com.android.server.wm.ActivityRecord,boolean)>($r21, null, 0);

     label24:
        $r40 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        $r41 = virtualinvoke $r40.<com.android.server.wm.ActivityStackSupervisor: com.android.server.wm.ActivityMetricsLogger getActivityMetricsLogger()>();

        $r42 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mLastStartActivityRecord>;

        virtualinvoke $r41.<com.android.server.wm.ActivityMetricsLogger: void notifyActivityLaunched(com.android.server.wm.ActivityMetricsLogger$LaunchingState,int,com.android.server.wm.ActivityRecord)>(r37, i3, $r42);

        $r43 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r44 = $r43.<com.android.server.wm.ActivityStarter$Request: android.app.WaitResult waitResult>;

        if $r44 != null goto label26;

     label25:
        goto label27;

     label26:
        $r17 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mLastStartActivityRecord>;

        i3 = specialinvoke r0.<com.android.server.wm.ActivityStarter: int waitForResult(int,com.android.server.wm.ActivityRecord)>(i3, $r17);

     label27:
        i4 = staticinvoke <com.android.server.wm.ActivityStarter: int getExternalResult(int)>(i3);

        exitmonitor r38;

     label28:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        specialinvoke r0.<com.android.server.wm.ActivityStarter: void onExecutionComplete()>();

        return i4;

     label29:
        $r31 := @caughtexception;

     label30:
        exitmonitor r38;

     label31:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r31;

     label32:
        $r32 := @caughtexception;

     label33:
        exitmonitor r35;

     label34:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r32;

     label35:
        $r33 := @caughtexception;

        specialinvoke r0.<com.android.server.wm.ActivityStarter: void onExecutionComplete()>();

        throw $r33;

        catch java.lang.Throwable from label01 to label02 with label35;
        catch java.lang.Throwable from label03 to label04 with label35;
        catch java.lang.Throwable from label04 to label05 with label35;
        catch java.lang.Throwable from label05 to label06 with label32;
        catch java.lang.Throwable from label06 to label07 with label35;
        catch java.lang.Throwable from label07 to label08 with label35;
        catch java.lang.Throwable from label08 to label09 with label29;
        catch java.lang.Throwable from label11 to label12 with label29;
        catch java.lang.Throwable from label13 to label14 with label29;
        catch java.lang.Throwable from label14 to label15 with label29;
        catch java.lang.Throwable from label16 to label17 with label29;
        catch java.lang.Throwable from label18 to label19 with label29;
        catch java.lang.Throwable from label20 to label21 with label29;
        catch java.lang.Throwable from label22 to label23 with label29;
        catch java.lang.Throwable from label23 to label24 with label29;
        catch java.lang.Throwable from label24 to label25 with label29;
        catch java.lang.Throwable from label26 to label27 with label29;
        catch java.lang.Throwable from label27 to label28 with label29;
        catch java.lang.Throwable from label30 to label31 with label29;
        catch java.lang.Throwable from label31 to label32 with label35;
        catch java.lang.Throwable from label33 to label34 with label32;
        catch java.lang.Throwable from label34 to label35 with label35;
    }

    android.content.Intent getIntent()
    {
        com.android.server.wm.ActivityStarter r0;
        com.android.server.wm.ActivityStarter$Request $r1;
        android.content.Intent $r2;

        r0 := @this: com.android.server.wm.ActivityStarter;

        $r1 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r2 = $r1.<com.android.server.wm.ActivityStarter$Request: android.content.Intent intent>;

        return $r2;
    }

    void postStartActivityProcessing(com.android.server.wm.ActivityRecord, int, com.android.server.wm.ActivityStack)
    {
        com.android.server.wm.ActivityStarter r0;
        int i0, i1, $i2;
        boolean $z0, $z1, $z2, $z3, z4, z5, $z6;
        com.android.server.wm.ActivityStackSupervisor $r1, $r4;
        com.android.server.wm.Task $r2, $r3, r8;
        com.android.server.wm.RecentTasks $r5;
        com.android.server.wm.ActivityRecord r6, $r14;
        com.android.server.wm.ActivityStack r7, r10;
        com.android.server.wm.TaskDisplayArea $r9;
        com.android.server.wm.ActivityTaskManagerService $r11;
        com.android.server.wm.TaskChangeNotificationController $r12;
        android.app.ActivityManager$RunningTaskInfo $r13;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r6 := @parameter0: com.android.server.wm.ActivityRecord;

        i0 := @parameter1: int;

        r7 := @parameter2: com.android.server.wm.ActivityStack;

        $z0 = staticinvoke <android.app.ActivityManager: boolean isStartResultSuccessful(int)>(i0);

        if $z0 != 0 goto label01;

        $z2 = r0.<com.android.server.wm.ActivityStarter: boolean mFrozeTaskList>;

        if $z2 == 0 goto label01;

        $r4 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        $r5 = $r4.<com.android.server.wm.ActivityStackSupervisor: com.android.server.wm.RecentTasks mRecentTasks>;

        virtualinvoke $r5.<com.android.server.wm.RecentTasks: void resetFreezeTaskListReorderingOnTimeout()>();

     label01:
        $z3 = staticinvoke <android.app.ActivityManager: boolean isStartResultFatalError(int)>(i0);

        if $z3 == 0 goto label02;

        return;

     label02:
        $r1 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        virtualinvoke $r1.<com.android.server.wm.ActivityStackSupervisor: void reportWaitingActivityLaunchedIfNeeded(com.android.server.wm.ActivityRecord,int)>(r6, i0);

        $r2 = virtualinvoke r6.<com.android.server.wm.ActivityRecord: com.android.server.wm.Task getTask()>();

        if $r2 == null goto label03;

        r8 = virtualinvoke r6.<com.android.server.wm.ActivityRecord: com.android.server.wm.Task getTask()>();

        goto label04;

     label03:
        r8 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.Task mTargetTask>;

     label04:
        if r7 == null goto label12;

        if r8 != null goto label05;

        goto label12;

     label05:
        i1 = r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags>;

        z4 = 1;

        $i2 = i1 & 268468224;

        if $i2 != 268468224 goto label06;

        $r3 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.Task mReuseTask>;

        if $r3 == null goto label06;

        z5 = 1;

        goto label07;

     label06:
        z5 = 0;

     label07:
        if i0 == 2 goto label08;

        if i0 == 3 goto label08;

        if z5 == 0 goto label11;

     label08:
        $r9 = virtualinvoke r8.<com.android.server.wm.Task: com.android.server.wm.TaskDisplayArea getDisplayArea()>();

        r10 = virtualinvoke $r9.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getRootHomeTask()>();

        if r10 == null goto label09;

        $z1 = virtualinvoke r10.<com.android.server.wm.ActivityStack: boolean shouldBeVisible(com.android.server.wm.ActivityRecord)>(null);

        if $z1 == 0 goto label09;

        goto label10;

     label09:
        z4 = 0;

     label10:
        $r11 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        $r12 = virtualinvoke $r11.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.TaskChangeNotificationController getTaskChangeNotificationController()>();

        $r13 = virtualinvoke r8.<com.android.server.wm.Task: android.app.ActivityManager$RunningTaskInfo getTaskInfo()>();

        $r14 = virtualinvoke r8.<com.android.server.wm.Task: com.android.server.wm.ActivityRecord getTopNonFinishingActivity()>();

        $z6 = virtualinvoke $r14.<com.android.server.wm.ActivityRecord: boolean isVisible()>();

        virtualinvoke $r12.<com.android.server.wm.TaskChangeNotificationController: void notifyActivityRestartAttempt(android.app.ActivityManager$RunningTaskInfo,boolean,boolean,boolean)>($r13, z4, z5, $z6);

     label11:
        return;

     label12:
        return;
    }

    int recycleTask(com.android.server.wm.Task, com.android.server.wm.ActivityRecord, com.android.server.wm.Task, com.android.server.uri.NeededUriGrants)
    {
        com.android.server.wm.ActivityStarter r0;
        com.android.server.wm.ActivityRecord r1, r3, $r4, $r9, $r11, $r12, $r15, $r20, $r21, r26, r27;
        com.android.server.uri.NeededUriGrants r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, z11, $z12, $z13;
        com.android.server.wm.ActivityStack $r5, $r10, $r22;
        com.android.server.wm.ActivityTaskManagerService $r6;
        com.android.server.wm.ActivityTaskManagerInternal $r7;
        com.android.server.wm.ActivityStackSupervisor $r8;
        com.android.server.wm.Task $r13, r23, r24;
        android.content.Intent $r14, $r16, $r17, $r18;
        com.android.server.wm.RootWindowContainer $r25;
        byte b6;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r23 := @parameter0: com.android.server.wm.Task;

        r1 := @parameter1: com.android.server.wm.ActivityRecord;

        r24 := @parameter2: com.android.server.wm.Task;

        r2 := @parameter3: com.android.server.uri.NeededUriGrants;

        $i1 = r23.<com.android.server.wm.Task: int mUserId>;

        $r4 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $i0 = $r4.<com.android.server.wm.ActivityRecord: int mUserId>;

        if $i1 == $i0 goto label01;

        $r22 = virtualinvoke r23.<com.android.server.wm.Task: com.android.server.wm.ActivityStack getStack()>();

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mTargetStack> = $r22;

        r0.<com.android.server.wm.ActivityStarter: boolean mAddingToTask> = 1;

        return 0;

     label01:
        z9 = 0;

        if r24 == null goto label07;

        z9 = 0;

        $r12 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r13 = virtualinvoke $r12.<com.android.server.wm.ActivityRecord: com.android.server.wm.Task getTask()>();

        if $r13 != null goto label02;

        $r21 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        virtualinvoke $r21.<com.android.server.wm.ActivityRecord: void setTaskForReuse(com.android.server.wm.Task)>(r24);

        z9 = 1;

     label02:
        $r14 = r23.<com.android.server.wm.Task: android.content.Intent intent>;

        if $r14 != null goto label03;

        $r20 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        virtualinvoke r23.<com.android.server.wm.Task: void setIntent(com.android.server.wm.ActivityRecord)>($r20);

        goto label07;

     label03:
        $r15 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r16 = $r15.<com.android.server.wm.ActivityRecord: android.content.Intent intent>;

        $i2 = virtualinvoke $r16.<android.content.Intent: int getFlags()>();

        $i3 = $i2 & 16384;

        if $i3 == 0 goto label04;

        z11 = 1;

        goto label05;

     label04:
        z11 = 0;

     label05:
        if z11 == 0 goto label06;

        $r18 = r23.<com.android.server.wm.Task: android.content.Intent intent>;

        virtualinvoke $r18.<android.content.Intent: android.content.Intent addFlags(int)>(16384);

        goto label07;

     label06:
        $r17 = r23.<com.android.server.wm.Task: android.content.Intent intent>;

        virtualinvoke $r17.<android.content.Intent: void removeFlags(int)>(16384);

     label07:
        $r25 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        virtualinvoke $r25.<com.android.server.wm.RootWindowContainer: void sendPowerHintForLaunchStartIfNeeded(boolean,com.android.server.wm.ActivityRecord)>(0, r1);

        specialinvoke r0.<com.android.server.wm.ActivityStarter: void setTargetStackIfNeeded(com.android.server.wm.ActivityRecord)>(r1);

        r3 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mLastStartActivityRecord>;

        if r3 == null goto label09;

        $z7 = r3.<com.android.server.wm.ActivityRecord: boolean finishing>;

        if $z7 != 0 goto label08;

        $r11 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mLastStartActivityRecord>;

        $z8 = $r11.<com.android.server.wm.ActivityRecord: boolean noDisplay>;

        if $z8 == 0 goto label09;

     label08:
        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mLastStartActivityRecord> = r1;

     label09:
        $i4 = r0.<com.android.server.wm.ActivityStarter: int mStartFlags>;

        $i5 = $i4 & 1;

        if $i5 == 0 goto label11;

        $z5 = r0.<com.android.server.wm.ActivityStarter: boolean mMovedToFront>;

        if $z5 != 0 goto label10;

        $z6 = r0.<com.android.server.wm.ActivityStarter: boolean mDoResume>;

        if $z6 == 0 goto label10;

        $r10 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mTargetStack>;

        virtualinvoke $r10.<com.android.server.wm.ActivityStack: void moveToFront(java.lang.String)>("intentActivityFound");

     label10:
        specialinvoke r0.<com.android.server.wm.ActivityStarter: void resumeTargetStackIfNeeded()>();

        return 1;

     label11:
        if r24 == null goto label12;

        r26 = virtualinvoke r24.<com.android.server.wm.Task: com.android.server.wm.ActivityRecord getTopNonFinishingActivity()>();

        goto label13;

     label12:
        r26 = null;

     label13:
        specialinvoke r0.<com.android.server.wm.ActivityStarter: void complyActivityFlags(com.android.server.wm.Task,com.android.server.wm.ActivityRecord,com.android.server.uri.NeededUriGrants)>(r23, r26, r2);

        if z9 == 0 goto label14;

        $r9 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        virtualinvoke $r9.<com.android.server.wm.ActivityRecord: void setTaskForReuse(com.android.server.wm.Task)>(null);

     label14:
        $z0 = r0.<com.android.server.wm.ActivityStarter: boolean mAddingToTask>;

        if $z0 == 0 goto label15;

        return 0;

     label15:
        $z1 = virtualinvoke r1.<com.android.server.wm.ActivityRecord: boolean canTurnScreenOn()>();

        if $z1 == 0 goto label16;

        $r6 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        $r7 = $r6.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityTaskManagerInternal mInternal>;

        $z4 = virtualinvoke $r7.<com.android.server.wm.ActivityTaskManagerInternal: boolean isDreaming()>();

        if $z4 == 0 goto label16;

        $r8 = r1.<com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r8.<com.android.server.wm.ActivityStackSupervisor: void wakeUp(java.lang.String)>("recycleTask#turnScreenOnFlag");

     label16:
        $z12 = r0.<com.android.server.wm.ActivityStarter: boolean mMovedToFront>;

        if $z12 == 0 goto label17;

        virtualinvoke r1.<com.android.server.wm.ActivityRecord: void showStartingWindow(com.android.server.wm.ActivityRecord,boolean,boolean)>(null, 0, 1);

        goto label18;

     label17:
        $z2 = r0.<com.android.server.wm.ActivityStarter: boolean mDoResume>;

        if $z2 == 0 goto label18;

        $r5 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mTargetStack>;

        virtualinvoke $r5.<com.android.server.wm.ActivityStack: void moveToFront(java.lang.String)>("intentActivityFound");

     label18:
        specialinvoke r0.<com.android.server.wm.ActivityStarter: void resumeTargetStackIfNeeded()>();

        $z13 = r1.<com.android.server.wm.ActivityRecord: boolean finishing>;

        if $z13 == 0 goto label19;

        r27 = virtualinvoke r23.<com.android.server.wm.Task: com.android.server.wm.ActivityRecord getTopNonFinishingActivity()>();

        goto label20;

     label19:
        r27 = r1;

     label20:
        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mLastStartActivityRecord> = r27;

        $z3 = r0.<com.android.server.wm.ActivityStarter: boolean mMovedToFront>;

        if $z3 == 0 goto label21;

        b6 = 2;

        goto label22;

     label21:
        b6 = 3;

     label22:
        return b6;
    }

    boolean relatedToPackage(java.lang.String)
    {
        com.android.server.wm.ActivityStarter r0;
        java.lang.String r1, $r2, $r3;
        boolean $z0, $z1, z2;
        com.android.server.wm.ActivityRecord r4, r5;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r1 := @parameter0: java.lang.String;

        r4 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mLastStartActivityRecord>;

        if r4 == null goto label1;

        $r3 = r4.<com.android.server.wm.ActivityRecord: java.lang.String packageName>;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label2;

     label1:
        r5 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        if r5 == null goto label3;

        $r2 = r5.<com.android.server.wm.ActivityRecord: java.lang.String packageName>;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label3;

     label2:
        z2 = 1;

        goto label4;

     label3:
        z2 = 0;

     label4:
        return z2;
    }

    void reset(boolean)
    {
        com.android.server.wm.ActivityStarter r0;
        boolean z0;
        com.android.server.wm.LaunchParamsController$LaunchParams $r1;
        com.android.server.wm.ActivityStarter$Request $r2;

        r0 := @this: com.android.server.wm.ActivityStarter;

        z0 := @parameter0: boolean;

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity> = null;

        r0.<com.android.server.wm.ActivityStarter: android.content.Intent mIntent> = null;

        r0.<com.android.server.wm.ActivityStarter: int mCallingUid> = -1;

        r0.<com.android.server.wm.ActivityStarter: android.app.ActivityOptions mOptions> = null;

        r0.<com.android.server.wm.ActivityStarter: boolean mRestrictedBgActivity> = 0;

        r0.<com.android.server.wm.ActivityStarter: boolean mLaunchTaskBehind> = 0;

        r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags> = 0;

        r0.<com.android.server.wm.ActivityStarter: int mLaunchMode> = -1;

        $r1 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.LaunchParamsController$LaunchParams mLaunchParams>;

        virtualinvoke $r1.<com.android.server.wm.LaunchParamsController$LaunchParams: void reset()>();

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mNotTop> = null;

        r0.<com.android.server.wm.ActivityStarter: boolean mDoResume> = 0;

        r0.<com.android.server.wm.ActivityStarter: int mStartFlags> = 0;

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mSourceRecord> = null;

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.TaskDisplayArea mPreferredTaskDisplayArea> = null;

        r0.<com.android.server.wm.ActivityStarter: int mPreferredWindowingMode> = 0;

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.Task mInTask> = null;

        r0.<com.android.server.wm.ActivityStarter: boolean mAddingToTask> = 0;

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.Task mReuseTask> = null;

        r0.<com.android.server.wm.ActivityStarter: android.content.pm.ActivityInfo mNewTaskInfo> = null;

        r0.<com.android.server.wm.ActivityStarter: android.content.Intent mNewTaskIntent> = null;

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mSourceStack> = null;

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mTargetStack> = null;

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.Task mTargetTask> = null;

        r0.<com.android.server.wm.ActivityStarter: boolean mMovedToFront> = 0;

        r0.<com.android.server.wm.ActivityStarter: boolean mNoAnimation> = 0;

        r0.<com.android.server.wm.ActivityStarter: boolean mKeepCurTransition> = 0;

        r0.<com.android.server.wm.ActivityStarter: boolean mAvoidMoveToFront> = 0;

        r0.<com.android.server.wm.ActivityStarter: boolean mFrozeTaskList> = 0;

        r0.<com.android.server.wm.ActivityStarter: android.service.voice.IVoiceInteractionSession mVoiceSession> = null;

        r0.<com.android.server.wm.ActivityStarter: com.android.internal.app.IVoiceInteractor mVoiceInteractor> = null;

        r0.<com.android.server.wm.ActivityStarter: boolean mIntentDelivered> = 0;

        if z0 == 0 goto label1;

        $r2 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        virtualinvoke $r2.<com.android.server.wm.ActivityStarter$Request: void reset()>();

     label1:
        return;
    }

    void set(com.android.server.wm.ActivityStarter)
    {
        com.android.server.wm.ActivityStarter r0, r1;
        com.android.server.wm.ActivityRecord $r2, $r7, $r8;
        android.content.Intent $r3, $r13;
        int $i0, $i1, $i2, $i3, $i4;
        android.app.ActivityOptions $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        com.android.server.wm.LaunchParamsController$LaunchParams $r5, $r6;
        com.android.server.wm.TaskDisplayArea $r9;
        com.android.server.wm.Task $r10, $r11, $r15;
        android.content.pm.ActivityInfo $r12;
        com.android.server.wm.ActivityStack $r14, $r16;
        android.service.voice.IVoiceInteractionSession $r17;
        com.android.internal.app.IVoiceInteractor $r18;
        com.android.server.wm.ActivityStarter$Request $r19, $r20;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r1 := @parameter0: com.android.server.wm.ActivityStarter;

        $r2 = r1.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity> = $r2;

        $r3 = r1.<com.android.server.wm.ActivityStarter: android.content.Intent mIntent>;

        r0.<com.android.server.wm.ActivityStarter: android.content.Intent mIntent> = $r3;

        $i0 = r1.<com.android.server.wm.ActivityStarter: int mCallingUid>;

        r0.<com.android.server.wm.ActivityStarter: int mCallingUid> = $i0;

        $r4 = r1.<com.android.server.wm.ActivityStarter: android.app.ActivityOptions mOptions>;

        r0.<com.android.server.wm.ActivityStarter: android.app.ActivityOptions mOptions> = $r4;

        $z0 = r1.<com.android.server.wm.ActivityStarter: boolean mRestrictedBgActivity>;

        r0.<com.android.server.wm.ActivityStarter: boolean mRestrictedBgActivity> = $z0;

        $z1 = r1.<com.android.server.wm.ActivityStarter: boolean mLaunchTaskBehind>;

        r0.<com.android.server.wm.ActivityStarter: boolean mLaunchTaskBehind> = $z1;

        $i1 = r1.<com.android.server.wm.ActivityStarter: int mLaunchFlags>;

        r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags> = $i1;

        $i2 = r1.<com.android.server.wm.ActivityStarter: int mLaunchMode>;

        r0.<com.android.server.wm.ActivityStarter: int mLaunchMode> = $i2;

        $r6 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.LaunchParamsController$LaunchParams mLaunchParams>;

        $r5 = r1.<com.android.server.wm.ActivityStarter: com.android.server.wm.LaunchParamsController$LaunchParams mLaunchParams>;

        virtualinvoke $r6.<com.android.server.wm.LaunchParamsController$LaunchParams: void set(com.android.server.wm.LaunchParamsController$LaunchParams)>($r5);

        $r7 = r1.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mNotTop>;

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mNotTop> = $r7;

        $z2 = r1.<com.android.server.wm.ActivityStarter: boolean mDoResume>;

        r0.<com.android.server.wm.ActivityStarter: boolean mDoResume> = $z2;

        $i3 = r1.<com.android.server.wm.ActivityStarter: int mStartFlags>;

        r0.<com.android.server.wm.ActivityStarter: int mStartFlags> = $i3;

        $r8 = r1.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mSourceRecord>;

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mSourceRecord> = $r8;

        $r9 = r1.<com.android.server.wm.ActivityStarter: com.android.server.wm.TaskDisplayArea mPreferredTaskDisplayArea>;

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.TaskDisplayArea mPreferredTaskDisplayArea> = $r9;

        $i4 = r1.<com.android.server.wm.ActivityStarter: int mPreferredWindowingMode>;

        r0.<com.android.server.wm.ActivityStarter: int mPreferredWindowingMode> = $i4;

        $r10 = r1.<com.android.server.wm.ActivityStarter: com.android.server.wm.Task mInTask>;

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.Task mInTask> = $r10;

        $z3 = r1.<com.android.server.wm.ActivityStarter: boolean mAddingToTask>;

        r0.<com.android.server.wm.ActivityStarter: boolean mAddingToTask> = $z3;

        $r11 = r1.<com.android.server.wm.ActivityStarter: com.android.server.wm.Task mReuseTask>;

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.Task mReuseTask> = $r11;

        $r12 = r1.<com.android.server.wm.ActivityStarter: android.content.pm.ActivityInfo mNewTaskInfo>;

        r0.<com.android.server.wm.ActivityStarter: android.content.pm.ActivityInfo mNewTaskInfo> = $r12;

        $r13 = r1.<com.android.server.wm.ActivityStarter: android.content.Intent mNewTaskIntent>;

        r0.<com.android.server.wm.ActivityStarter: android.content.Intent mNewTaskIntent> = $r13;

        $r14 = r1.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mSourceStack>;

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mSourceStack> = $r14;

        $r15 = r1.<com.android.server.wm.ActivityStarter: com.android.server.wm.Task mTargetTask>;

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.Task mTargetTask> = $r15;

        $r16 = r1.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mTargetStack>;

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mTargetStack> = $r16;

        $z4 = r1.<com.android.server.wm.ActivityStarter: boolean mMovedToFront>;

        r0.<com.android.server.wm.ActivityStarter: boolean mMovedToFront> = $z4;

        $z5 = r1.<com.android.server.wm.ActivityStarter: boolean mNoAnimation>;

        r0.<com.android.server.wm.ActivityStarter: boolean mNoAnimation> = $z5;

        $z6 = r1.<com.android.server.wm.ActivityStarter: boolean mKeepCurTransition>;

        r0.<com.android.server.wm.ActivityStarter: boolean mKeepCurTransition> = $z6;

        $z7 = r1.<com.android.server.wm.ActivityStarter: boolean mAvoidMoveToFront>;

        r0.<com.android.server.wm.ActivityStarter: boolean mAvoidMoveToFront> = $z7;

        $z8 = r1.<com.android.server.wm.ActivityStarter: boolean mFrozeTaskList>;

        r0.<com.android.server.wm.ActivityStarter: boolean mFrozeTaskList> = $z8;

        $r17 = r1.<com.android.server.wm.ActivityStarter: android.service.voice.IVoiceInteractionSession mVoiceSession>;

        r0.<com.android.server.wm.ActivityStarter: android.service.voice.IVoiceInteractionSession mVoiceSession> = $r17;

        $r18 = r1.<com.android.server.wm.ActivityStarter: com.android.internal.app.IVoiceInteractor mVoiceInteractor>;

        r0.<com.android.server.wm.ActivityStarter: com.android.internal.app.IVoiceInteractor mVoiceInteractor> = $r18;

        $z9 = r1.<com.android.server.wm.ActivityStarter: boolean mIntentDelivered>;

        r0.<com.android.server.wm.ActivityStarter: boolean mIntentDelivered> = $z9;

        $r20 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r19 = r1.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        virtualinvoke $r20.<com.android.server.wm.ActivityStarter$Request: void set(com.android.server.wm.ActivityStarter$Request)>($r19);

        return;
    }

    com.android.server.wm.ActivityStarter setActivityInfo(android.content.pm.ActivityInfo)
    {
        com.android.server.wm.ActivityStarter r0;
        android.content.pm.ActivityInfo r1;
        com.android.server.wm.ActivityStarter$Request $r2;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r1 := @parameter0: android.content.pm.ActivityInfo;

        $r2 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r2.<com.android.server.wm.ActivityStarter$Request: android.content.pm.ActivityInfo activityInfo> = r1;

        return r0;
    }

    com.android.server.wm.ActivityStarter setActivityOptions(android.os.Bundle)
    {
        com.android.server.wm.ActivityStarter r0, $r3;
        android.os.Bundle r1;
        com.android.server.wm.SafeActivityOptions $r2;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r1 := @parameter0: android.os.Bundle;

        $r2 = staticinvoke <com.android.server.wm.SafeActivityOptions: com.android.server.wm.SafeActivityOptions fromBundle(android.os.Bundle)>(r1);

        $r3 = virtualinvoke r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter setActivityOptions(com.android.server.wm.SafeActivityOptions)>($r2);

        return $r3;
    }

    com.android.server.wm.ActivityStarter setActivityOptions(com.android.server.wm.SafeActivityOptions)
    {
        com.android.server.wm.ActivityStarter r0;
        com.android.server.wm.SafeActivityOptions r1;
        com.android.server.wm.ActivityStarter$Request $r2;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r1 := @parameter0: com.android.server.wm.SafeActivityOptions;

        $r2 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r2.<com.android.server.wm.ActivityStarter$Request: com.android.server.wm.SafeActivityOptions activityOptions> = r1;

        return r0;
    }

    com.android.server.wm.ActivityStarter setAllowBackgroundActivityStart(boolean)
    {
        com.android.server.wm.ActivityStarter r0;
        boolean z0;
        com.android.server.wm.ActivityStarter$Request $r1;

        r0 := @this: com.android.server.wm.ActivityStarter;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r1.<com.android.server.wm.ActivityStarter$Request: boolean allowBackgroundActivityStart> = z0;

        return r0;
    }

    com.android.server.wm.ActivityStarter setAllowPendingRemoteAnimationRegistryLookup(boolean)
    {
        com.android.server.wm.ActivityStarter r0;
        boolean z0;
        com.android.server.wm.ActivityStarter$Request $r1;

        r0 := @this: com.android.server.wm.ActivityStarter;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r1.<com.android.server.wm.ActivityStarter$Request: boolean allowPendingRemoteAnimationRegistryLookup> = z0;

        return r0;
    }

    com.android.server.wm.ActivityStarter setCaller(android.app.IApplicationThread)
    {
        com.android.server.wm.ActivityStarter r0;
        android.app.IApplicationThread r1;
        com.android.server.wm.ActivityStarter$Request $r2;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r1 := @parameter0: android.app.IApplicationThread;

        $r2 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r2.<com.android.server.wm.ActivityStarter$Request: android.app.IApplicationThread caller> = r1;

        return r0;
    }

    com.android.server.wm.ActivityStarter setCallingFeatureId(java.lang.String)
    {
        com.android.server.wm.ActivityStarter r0;
        java.lang.String r1;
        com.android.server.wm.ActivityStarter$Request $r2;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r2.<com.android.server.wm.ActivityStarter$Request: java.lang.String callingFeatureId> = r1;

        return r0;
    }

    com.android.server.wm.ActivityStarter setCallingPackage(java.lang.String)
    {
        com.android.server.wm.ActivityStarter r0;
        java.lang.String r1;
        com.android.server.wm.ActivityStarter$Request $r2;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r2.<com.android.server.wm.ActivityStarter$Request: java.lang.String callingPackage> = r1;

        return r0;
    }

    com.android.server.wm.ActivityStarter setCallingPid(int)
    {
        com.android.server.wm.ActivityStarter r0;
        int i0;
        com.android.server.wm.ActivityStarter$Request $r1;

        r0 := @this: com.android.server.wm.ActivityStarter;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r1.<com.android.server.wm.ActivityStarter$Request: int callingPid> = i0;

        return r0;
    }

    com.android.server.wm.ActivityStarter setCallingUid(int)
    {
        com.android.server.wm.ActivityStarter r0;
        int i0;
        com.android.server.wm.ActivityStarter$Request $r1;

        r0 := @this: com.android.server.wm.ActivityStarter;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r1.<com.android.server.wm.ActivityStarter$Request: int callingUid> = i0;

        return r0;
    }

    com.android.server.wm.ActivityStarter setComponentSpecified(boolean)
    {
        com.android.server.wm.ActivityStarter r0;
        boolean z0;
        com.android.server.wm.ActivityStarter$Request $r1;

        r0 := @this: com.android.server.wm.ActivityStarter;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r1.<com.android.server.wm.ActivityStarter$Request: boolean componentSpecified> = z0;

        return r0;
    }

    com.android.server.wm.ActivityStarter setFilterCallingUid(int)
    {
        com.android.server.wm.ActivityStarter r0;
        int i0;
        com.android.server.wm.ActivityStarter$Request $r1;

        r0 := @this: com.android.server.wm.ActivityStarter;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r1.<com.android.server.wm.ActivityStarter$Request: int filterCallingUid> = i0;

        return r0;
    }

    com.android.server.wm.ActivityStarter setGlobalConfiguration(android.content.res.Configuration)
    {
        com.android.server.wm.ActivityStarter r0;
        android.content.res.Configuration r1;
        com.android.server.wm.ActivityStarter$Request $r2;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r1 := @parameter0: android.content.res.Configuration;

        $r2 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r2.<com.android.server.wm.ActivityStarter$Request: android.content.res.Configuration globalConfig> = r1;

        return r0;
    }

    com.android.server.wm.ActivityStarter setIgnoreTargetSecurity(boolean)
    {
        com.android.server.wm.ActivityStarter r0;
        boolean z0;
        com.android.server.wm.ActivityStarter$Request $r1;

        r0 := @this: com.android.server.wm.ActivityStarter;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r1.<com.android.server.wm.ActivityStarter$Request: boolean ignoreTargetSecurity> = z0;

        return r0;
    }

    com.android.server.wm.ActivityStarter setInTask(com.android.server.wm.Task)
    {
        com.android.server.wm.ActivityStarter r0;
        com.android.server.wm.Task r1;
        com.android.server.wm.ActivityStarter$Request $r2;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r1 := @parameter0: com.android.server.wm.Task;

        $r2 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r2.<com.android.server.wm.ActivityStarter$Request: com.android.server.wm.Task inTask> = r1;

        return r0;
    }

    com.android.server.wm.ActivityStarter setIntent(android.content.Intent)
    {
        com.android.server.wm.ActivityStarter r0;
        android.content.Intent r1;
        com.android.server.wm.ActivityStarter$Request $r2;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r1 := @parameter0: android.content.Intent;

        $r2 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r2.<com.android.server.wm.ActivityStarter$Request: android.content.Intent intent> = r1;

        return r0;
    }

    com.android.server.wm.ActivityStarter setIntentGrants(com.android.server.uri.NeededUriGrants)
    {
        com.android.server.wm.ActivityStarter r0;
        com.android.server.uri.NeededUriGrants r1;
        com.android.server.wm.ActivityStarter$Request $r2;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r1 := @parameter0: com.android.server.uri.NeededUriGrants;

        $r2 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r2.<com.android.server.wm.ActivityStarter$Request: com.android.server.uri.NeededUriGrants intentGrants> = r1;

        return r0;
    }

    com.android.server.wm.ActivityStarter setOriginatingPendingIntent(com.android.server.am.PendingIntentRecord)
    {
        com.android.server.wm.ActivityStarter r0;
        com.android.server.am.PendingIntentRecord r1;
        com.android.server.wm.ActivityStarter$Request $r2;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r1 := @parameter0: com.android.server.am.PendingIntentRecord;

        $r2 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r2.<com.android.server.wm.ActivityStarter$Request: com.android.server.am.PendingIntentRecord originatingPendingIntent> = r1;

        return r0;
    }

    com.android.server.wm.ActivityStarter setOutActivity(com.android.server.wm.ActivityRecord[])
    {
        com.android.server.wm.ActivityStarter r0;
        com.android.server.wm.ActivityRecord[] r1;
        com.android.server.wm.ActivityStarter$Request $r2;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r1 := @parameter0: com.android.server.wm.ActivityRecord[];

        $r2 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r2.<com.android.server.wm.ActivityStarter$Request: com.android.server.wm.ActivityRecord[] outActivity> = r1;

        return r0;
    }

    com.android.server.wm.ActivityStarter setProfilerInfo(android.app.ProfilerInfo)
    {
        com.android.server.wm.ActivityStarter r0;
        android.app.ProfilerInfo r1;
        com.android.server.wm.ActivityStarter$Request $r2;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r1 := @parameter0: android.app.ProfilerInfo;

        $r2 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r2.<com.android.server.wm.ActivityStarter$Request: android.app.ProfilerInfo profilerInfo> = r1;

        return r0;
    }

    com.android.server.wm.ActivityStarter setRealCallingPid(int)
    {
        com.android.server.wm.ActivityStarter r0;
        int i0;
        com.android.server.wm.ActivityStarter$Request $r1;

        r0 := @this: com.android.server.wm.ActivityStarter;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r1.<com.android.server.wm.ActivityStarter$Request: int realCallingPid> = i0;

        return r0;
    }

    com.android.server.wm.ActivityStarter setRealCallingUid(int)
    {
        com.android.server.wm.ActivityStarter r0;
        int i0;
        com.android.server.wm.ActivityStarter$Request $r1;

        r0 := @this: com.android.server.wm.ActivityStarter;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r1.<com.android.server.wm.ActivityStarter$Request: int realCallingUid> = i0;

        return r0;
    }

    com.android.server.wm.ActivityStarter setReason(java.lang.String)
    {
        com.android.server.wm.ActivityStarter r0;
        java.lang.String r1;
        com.android.server.wm.ActivityStarter$Request $r2;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r2.<com.android.server.wm.ActivityStarter$Request: java.lang.String reason> = r1;

        return r0;
    }

    com.android.server.wm.ActivityStarter setRequestCode(int)
    {
        com.android.server.wm.ActivityStarter r0;
        int i0;
        com.android.server.wm.ActivityStarter$Request $r1;

        r0 := @this: com.android.server.wm.ActivityStarter;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r1.<com.android.server.wm.ActivityStarter$Request: int requestCode> = i0;

        return r0;
    }

    com.android.server.wm.ActivityStarter setResolveInfo(android.content.pm.ResolveInfo)
    {
        com.android.server.wm.ActivityStarter r0;
        android.content.pm.ResolveInfo r1;
        com.android.server.wm.ActivityStarter$Request $r2;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r1 := @parameter0: android.content.pm.ResolveInfo;

        $r2 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r2.<com.android.server.wm.ActivityStarter$Request: android.content.pm.ResolveInfo resolveInfo> = r1;

        return r0;
    }

    com.android.server.wm.ActivityStarter setResolvedType(java.lang.String)
    {
        com.android.server.wm.ActivityStarter r0;
        java.lang.String r1;
        com.android.server.wm.ActivityStarter$Request $r2;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r2.<com.android.server.wm.ActivityStarter$Request: java.lang.String resolvedType> = r1;

        return r0;
    }

    com.android.server.wm.ActivityStarter setResultTo(android.os.IBinder)
    {
        com.android.server.wm.ActivityStarter r0;
        android.os.IBinder r1;
        com.android.server.wm.ActivityStarter$Request $r2;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r1 := @parameter0: android.os.IBinder;

        $r2 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r2.<com.android.server.wm.ActivityStarter$Request: android.os.IBinder resultTo> = r1;

        return r0;
    }

    com.android.server.wm.ActivityStarter setResultWho(java.lang.String)
    {
        com.android.server.wm.ActivityStarter r0;
        java.lang.String r1;
        com.android.server.wm.ActivityStarter$Request $r2;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r2.<com.android.server.wm.ActivityStarter$Request: java.lang.String resultWho> = r1;

        return r0;
    }

    com.android.server.wm.ActivityStarter setStartFlags(int)
    {
        com.android.server.wm.ActivityStarter r0;
        int i0;
        com.android.server.wm.ActivityStarter$Request $r1;

        r0 := @this: com.android.server.wm.ActivityStarter;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r1.<com.android.server.wm.ActivityStarter$Request: int startFlags> = i0;

        return r0;
    }

    com.android.server.wm.ActivityStarter setUserId(int)
    {
        com.android.server.wm.ActivityStarter r0;
        int i0;
        com.android.server.wm.ActivityStarter$Request $r1;

        r0 := @this: com.android.server.wm.ActivityStarter;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r1.<com.android.server.wm.ActivityStarter$Request: int userId> = i0;

        return r0;
    }

    com.android.server.wm.ActivityStarter setVoiceInteractor(com.android.internal.app.IVoiceInteractor)
    {
        com.android.server.wm.ActivityStarter r0;
        com.android.internal.app.IVoiceInteractor r1;
        com.android.server.wm.ActivityStarter$Request $r2;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r1 := @parameter0: com.android.internal.app.IVoiceInteractor;

        $r2 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r2.<com.android.server.wm.ActivityStarter$Request: com.android.internal.app.IVoiceInteractor voiceInteractor> = r1;

        return r0;
    }

    com.android.server.wm.ActivityStarter setVoiceSession(android.service.voice.IVoiceInteractionSession)
    {
        com.android.server.wm.ActivityStarter r0;
        android.service.voice.IVoiceInteractionSession r1;
        com.android.server.wm.ActivityStarter$Request $r2;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r1 := @parameter0: android.service.voice.IVoiceInteractionSession;

        $r2 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r2.<com.android.server.wm.ActivityStarter$Request: android.service.voice.IVoiceInteractionSession voiceSession> = r1;

        return r0;
    }

    com.android.server.wm.ActivityStarter setWaitResult(android.app.WaitResult)
    {
        com.android.server.wm.ActivityStarter r0;
        android.app.WaitResult r1;
        com.android.server.wm.ActivityStarter$Request $r2;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r1 := @parameter0: android.app.WaitResult;

        $r2 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStarter$Request mRequest>;

        $r2.<com.android.server.wm.ActivityStarter$Request: android.app.WaitResult waitResult> = r1;

        return r0;
    }

    boolean shouldAbortBackgroundActivityStart(int, int, java.lang.String, int, int, com.android.server.wm.WindowProcessController, com.android.server.am.PendingIntentRecord, boolean, android.content.Intent)
    {
        com.android.server.wm.ActivityStarter r0;
        int i0, i1, i2, i3, $i4, $i7, $i8, i9, i10, i11, i12, i13, i14, i15;
        java.lang.String r1, $r27, $r38, $r51, $r58;
        com.android.server.am.PendingIntentRecord r2;
        android.content.Intent r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8, z9, z10, z11, z12, z13, $z14, z15;
        com.android.server.wm.WindowProcessController r4, r64;
        com.android.server.wm.ActivityTaskManagerService $r5, $r6, $r9, $r10, $r15, $r16, $r52, $r59, $r62, $r63, $r66;
        com.android.server.wm.WindowManagerService $r7, $r11;
        com.android.server.wm.RootWindowContainer $r8, $r12;
        com.android.server.wm.ActivityStackSupervisor $r13, $r53;
        com.android.server.wm.RecentTasks $r14;
        java.lang.StringBuilder $r17, $r54;
        com.android.server.wm.WindowProcessControllerMap $r60;
        java.lang.Object $r61;
        android.util.ArraySet r65;
        com.android.server.wm.ActivityMetricsLogger r69;

        r0 := @this: com.android.server.wm.ActivityStarter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

        i9 := @parameter4: int;

        r64 := @parameter5: com.android.server.wm.WindowProcessController;

        r2 := @parameter6: com.android.server.am.PendingIntentRecord;

        z8 := @parameter7: boolean;

        r3 := @parameter8: android.content.Intent;

        i10 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        if i0 == 0 goto label40;

        if i10 == 1000 goto label40;

        if i10 != 1027 goto label01;

        goto label40;

     label01:
        $r5 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        i3 = virtualinvoke $r5.<com.android.server.wm.ActivityTaskManagerService: int getUidState(int)>(i0);

        $r6 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        $r7 = $r6.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        $r8 = $r7.<com.android.server.wm.WindowManagerService: com.android.server.wm.RootWindowContainer mRoot>;

        z0 = virtualinvoke $r8.<com.android.server.wm.RootWindowContainer: boolean isAnyNonToastWindowVisibleForUid(int)>(i0);

        if z0 != 0 goto label03;

        if i3 == 2 goto label03;

        if i3 != 3 goto label02;

        goto label03;

     label02:
        z9 = 0;

        goto label04;

     label03:
        z9 = 1;

     label04:
        if i3 > 1 goto label05;

        z10 = 1;

        goto label06;

     label05:
        z10 = 0;

     label06:
        if z0 != 0 goto label39;

        if z10 == 0 goto label07;

        goto label39;

     label07:
        if i0 != i2 goto label08;

        i11 = i3;

        goto label09;

     label08:
        $r9 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        i11 = virtualinvoke $r9.<com.android.server.wm.ActivityTaskManagerService: int getUidState(int)>(i2);

     label09:
        if i0 != i2 goto label10;

        z11 = z0;

        goto label11;

     label10:
        $r10 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        $r11 = $r10.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        $r12 = $r11.<com.android.server.wm.WindowManagerService: com.android.server.wm.RootWindowContainer mRoot>;

        z11 = virtualinvoke $r12.<com.android.server.wm.RootWindowContainer: boolean isAnyNonToastWindowVisibleForUid(int)>(i2);

     label11:
        if i0 != i2 goto label12;

        z12 = z9;

        goto label15;

     label12:
        if z11 != 0 goto label14;

        if i11 != 2 goto label13;

        goto label14;

     label13:
        z12 = 0;

        goto label15;

     label14:
        z12 = 1;

     label15:
        i12 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i2);

        if i0 != i2 goto label16;

        z13 = z10;

        goto label19;

     label16:
        if i12 == 1000 goto label18;

        if i11 > 1 goto label17;

        goto label18;

     label17:
        z13 = 0;

        goto label19;

     label18:
        z13 = 1;

     label19:
        if i2 == i0 goto label22;

        if z11 == 0 goto label20;

        return 0;

     label20:
        if z13 == 0 goto label21;

        if z8 == 0 goto label21;

        return 0;

     label21:
        $r63 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        $i8 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i2);

        $z7 = virtualinvoke $r63.<com.android.server.wm.ActivityTaskManagerService: boolean isAssociatedCompanionApp(int,int)>($i8, i2);

        if $z7 == 0 goto label22;

        return 0;

     label22:
        $i4 = staticinvoke <com.android.server.wm.ActivityTaskManagerService: int checkPermission(java.lang.String,int,int)>("android.permission.START_ACTIVITIES_FROM_BACKGROUND", i1, i0);

        if $i4 != 0 goto label23;

        return 0;

     label23:
        $r13 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        $r14 = $r13.<com.android.server.wm.ActivityStackSupervisor: com.android.server.wm.RecentTasks mRecentTasks>;

        $z1 = virtualinvoke $r14.<com.android.server.wm.RecentTasks: boolean isCallerRecents(int)>(i0);

        if $z1 == 0 goto label24;

        return 0;

     label24:
        $r15 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        $z2 = virtualinvoke $r15.<com.android.server.wm.ActivityTaskManagerService: boolean isDeviceOwner(int)>(i0);

        if $z2 == 0 goto label25;

        return 0;

     label25:
        i13 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $r16 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        $z3 = virtualinvoke $r16.<com.android.server.wm.ActivityTaskManagerService: boolean isAssociatedCompanionApp(int,int)>(i13, i0);

        if $z3 == 0 goto label26;

        return 0;

     label26:
        if r64 != null goto label27;

        $r62 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        r64 = virtualinvoke $r62.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController getProcessController(int,int)>(i9, i2);

        i14 = i2;

        goto label28;

     label27:
        i14 = i0;

     label28:
        if r64 == null goto label34;

        $z5 = virtualinvoke r64.<com.android.server.wm.WindowProcessController: boolean areBackgroundActivityStartsAllowed()>();

        if $z5 == 0 goto label29;

        return 0;

     label29:
        $r59 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        $r60 = $r59.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessControllerMap mProcessMap>;

        r65 = virtualinvoke $r60.<com.android.server.wm.WindowProcessControllerMap: android.util.ArraySet getProcesses(int)>(i14);

        if r65 == null goto label33;

        $i7 = virtualinvoke r65.<android.util.ArraySet: int size()>();

        i15 = $i7 - 1;

     label30:
        if i15 < 0 goto label32;

        $r61 = virtualinvoke r65.<android.util.ArraySet: java.lang.Object valueAt(int)>(i15);

        r4 = (com.android.server.wm.WindowProcessController) $r61;

        if r4 == r64 goto label31;

        $z6 = virtualinvoke r4.<com.android.server.wm.WindowProcessController: boolean areBackgroundActivityStartsAllowed()>();

        if $z6 == 0 goto label31;

        return 0;

     label31:
        i15 = i15 + -1;

        goto label30;

     label32:
        goto label34;

     label33:
        goto label34;

     label34:
        $r66 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        $z14 = virtualinvoke $r66.<com.android.server.wm.ActivityTaskManagerService: boolean hasSystemAlertWindowPermission(int,int,java.lang.String)>(i0, i1, r1);

        if $z14 == 0 goto label35;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Background activity start for ");

        virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" allowed because SYSTEM_ALERT_WINDOW permission is granted.");

        $r58 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityTaskManager", $r58);

        return 0;

     label35:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Background activity start [callingPackage: ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; callingUid: ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; isCallingUidForeground: ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z9);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; callingUidHasAnyVisibleWindow: ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; callingUidProcState: ");

        $r27 = staticinvoke <android.util.DebugUtils: java.lang.String valueToString(java.lang.Class,java.lang.String,int)>(class "Landroid/app/ActivityManager;", "PROCESS_STATE_", i3);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; isCallingUidPersistentSystemProcess: ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z10);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; realCallingUid: ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; isRealCallingUidForeground: ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z12);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; realCallingUidHasAnyVisibleWindow: ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z11);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; realCallingUidProcState: ");

        $r38 = staticinvoke <android.util.DebugUtils: java.lang.String valueToString(java.lang.Class,java.lang.String,int)>(class "Landroid/app/ActivityManager;", "PROCESS_STATE_", i11);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; isRealCallingUidPersistentSystemProcess: ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z13);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; originatingPendingIntent: ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; isBgStartWhitelisted: ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z8);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; intent: ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; callerApp: ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r64);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r51 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityTaskManager", $r51);

        $r52 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        $z4 = virtualinvoke $r52.<com.android.server.wm.ActivityTaskManagerService: boolean isActivityStartsLoggingEnabled()>();

        if $z4 == 0 goto label38;

        $r53 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        r69 = virtualinvoke $r53.<com.android.server.wm.ActivityStackSupervisor: com.android.server.wm.ActivityMetricsLogger getActivityMetricsLogger()>();

        if r2 == null goto label36;

        z15 = 1;

        goto label37;

     label36:
        z15 = 0;

     label37:
        virtualinvoke r69.<com.android.server.wm.ActivityMetricsLogger: void logAbortedBgActivityStart(android.content.Intent,com.android.server.wm.WindowProcessController,int,java.lang.String,int,boolean,int,int,boolean,boolean)>(r3, r64, i0, r1, i3, z0, i2, i11, z11, z15);

        goto label38;

     label38:
        return 1;

     label39:
        return 0;

     label40:
        return 0;
    }

    int startActivityInner(com.android.server.wm.ActivityRecord, com.android.server.wm.ActivityRecord, android.service.voice.IVoiceInteractionSession, com.android.internal.app.IVoiceInteractor, int, boolean, android.app.ActivityOptions, com.android.server.wm.Task, boolean, com.android.server.uri.NeededUriGrants)
    {
        com.android.server.wm.ActivityStarter r0;
        android.app.ActivityOptions r1, $r15, $r54, r68, r79, $r94;
        com.android.server.wm.Task r2, $r8, $r17, $r29, r67, r69, r73, $r77, $r101, $r104;
        boolean z0, $z1, $z2, $z3, $z4, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, z15, z16, $z17, $z18, $z19, $z20;
        com.android.server.uri.NeededUriGrants r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, i10, i11, i12, i13, i14, $i15, $i16;
        android.content.Intent $r4, $r43;
        com.android.server.wm.RootWindowContainer $r6, $r11, $r24, $r91, $r95;
        com.android.server.wm.ActivityStack $r7, $r9, $r12, $r18, $r19, $r20, $r23, $r25, $r44, $r45, $r48, $r56, r71, $r80, $r90, $r92, $r97, $r106;
        com.android.server.wm.ActivityRecord $r10, $r13, $r14, $r16, $r26, $r27, $r28, $r30, $r31, $r34, $r35, $r37, $r39, $r40, $r51, $r55, r63, r64, r70, r72, $r76, $r83, $r85, $r86, r88, r89, $r93, $r96, $r100, $r103;
        com.android.server.wm.DisplayContent $r21, $r22;
        android.content.pm.ActivityInfo $r32, $r36, $r41;
        com.android.server.wm.ActivityTaskManagerService $r33, $r46, $r74, $r81;
        java.lang.String $r38, $r53;
        android.content.pm.ApplicationInfo $r42;
        com.android.server.wm.ActivityTaskManagerInternal $r47;
        java.lang.StringBuilder $r49;
        com.android.server.wm.ActivityStackSupervisor $r57, $r59, $r61, $r98, $r102;
        com.android.server.wm.RecentTasks $r58, $r60, $r62, $r99;
        android.service.voice.IVoiceInteractionSession r65;
        com.android.internal.app.IVoiceInteractor r66;
        com.android.server.wm.LockTaskController $r75;
        com.android.server.uri.UriGrantsManagerInternal $r82;
        com.android.server.uri.UriPermissionOwner $r84;
        android.content.pm.PackageManagerInternal r87;
        com.android.server.wm.TaskDisplayArea $r105;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r63 := @parameter0: com.android.server.wm.ActivityRecord;

        r64 := @parameter1: com.android.server.wm.ActivityRecord;

        r65 := @parameter2: android.service.voice.IVoiceInteractionSession;

        r66 := @parameter3: com.android.internal.app.IVoiceInteractor;

        i10 := @parameter4: int;

        z15 := @parameter5: boolean;

        r1 := @parameter6: android.app.ActivityOptions;

        r2 := @parameter7: com.android.server.wm.Task;

        z0 := @parameter8: boolean;

        r3 := @parameter9: com.android.server.uri.NeededUriGrants;

        specialinvoke r0.<com.android.server.wm.ActivityStarter: void setInitialState(com.android.server.wm.ActivityRecord,android.app.ActivityOptions,com.android.server.wm.Task,boolean,int,com.android.server.wm.ActivityRecord,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,boolean)>(r63, r1, r2, z15, i10, r64, r65, r66, z0);

        specialinvoke r0.<com.android.server.wm.ActivityStarter: void computeLaunchingTaskFlags()>();

        specialinvoke r0.<com.android.server.wm.ActivityStarter: void computeSourceStack()>();

        $r4 = r0.<com.android.server.wm.ActivityStarter: android.content.Intent mIntent>;

        $i0 = r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags>;

        virtualinvoke $r4.<android.content.Intent: android.content.Intent setFlags(int)>($i0);

        r67 = specialinvoke r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.Task getReusableTask()>();

        r68 = r0.<com.android.server.wm.ActivityStarter: android.app.ActivityOptions mOptions>;

        if r68 == null goto label01;

        $z12 = virtualinvoke r68.<android.app.ActivityOptions: boolean freezeRecentTasksReordering()>();

        if $z12 == 0 goto label01;

        $r57 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        $r58 = $r57.<com.android.server.wm.ActivityStackSupervisor: com.android.server.wm.RecentTasks mRecentTasks>;

        $i9 = r63.<com.android.server.wm.ActivityRecord: int launchedFromUid>;

        $z13 = virtualinvoke $r58.<com.android.server.wm.RecentTasks: boolean isCallerRecents(int)>($i9);

        if $z13 == 0 goto label01;

        $r59 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        $r60 = $r59.<com.android.server.wm.ActivityStackSupervisor: com.android.server.wm.RecentTasks mRecentTasks>;

        $z14 = virtualinvoke $r60.<com.android.server.wm.RecentTasks: boolean isFreezeTaskListReorderingSet()>();

        if $z14 != 0 goto label01;

        r0.<com.android.server.wm.ActivityStarter: boolean mFrozeTaskList> = 1;

        $r61 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        $r62 = $r61.<com.android.server.wm.ActivityStackSupervisor: com.android.server.wm.RecentTasks mRecentTasks>;

        virtualinvoke $r62.<com.android.server.wm.RecentTasks: void setFreezeTaskListReordering()>();

     label01:
        if r67 == null goto label02;

        r69 = r67;

        goto label03;

     label02:
        r69 = specialinvoke r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.Task computeTargetTask()>();

     label03:
        if r69 != null goto label04;

        z16 = 1;

        goto label05;

     label04:
        z16 = 0;

     label05:
        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.Task mTargetTask> = r69;

        specialinvoke r0.<com.android.server.wm.ActivityStarter: void computeLaunchParams(com.android.server.wm.ActivityRecord,com.android.server.wm.ActivityRecord,com.android.server.wm.Task)>(r63, r64, r69);

        i11 = specialinvoke r0.<com.android.server.wm.ActivityStarter: int isAllowedToStart(com.android.server.wm.ActivityRecord,boolean,com.android.server.wm.Task)>(r63, z16, r69);

        if i11 == 0 goto label06;

        return i11;

     label06:
        if z16 == 0 goto label07;

        r70 = null;

        goto label08;

     label07:
        r70 = virtualinvoke r69.<com.android.server.wm.Task: com.android.server.wm.ActivityRecord getTopNonFinishingActivity()>();

     label08:
        if r70 == null goto label09;

        i12 = virtualinvoke r0.<com.android.server.wm.ActivityStarter: int recycleTask(com.android.server.wm.Task,com.android.server.wm.ActivityRecord,com.android.server.wm.Task,com.android.server.uri.NeededUriGrants)>(r69, r70, r67, r3);

        if i12 == 0 goto label10;

        return i12;

     label09:
        r0.<com.android.server.wm.ActivityStarter: boolean mAddingToTask> = 1;

     label10:
        $r6 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        r71 = virtualinvoke $r6.<com.android.server.wm.RootWindowContainer: com.android.server.wm.ActivityStack getTopDisplayFocusedStack()>();

        if r71 == null goto label11;

        i13 = specialinvoke r0.<com.android.server.wm.ActivityStarter: int deliverToCurrentTopIfNeeded(com.android.server.wm.ActivityStack,com.android.server.uri.NeededUriGrants)>(r71, r3);

        if i13 == 0 goto label11;

        return i13;

     label11:
        $r7 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mTargetStack>;

        if $r7 != null goto label12;

        $r55 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $i8 = r0.<com.android.server.wm.ActivityStarter: int mLaunchFlags>;

        $r54 = r0.<com.android.server.wm.ActivityStarter: android.app.ActivityOptions mOptions>;

        $r56 = specialinvoke r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack getLaunchStack(com.android.server.wm.ActivityRecord,int,com.android.server.wm.Task,android.app.ActivityOptions)>($r55, $i8, r69, $r54);

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mTargetStack> = $r56;

     label12:
        if z16 == 0 goto label16;

        $z11 = r0.<com.android.server.wm.ActivityStarter: boolean mLaunchTaskBehind>;

        if $z11 == 0 goto label13;

        r72 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mSourceRecord>;

        if r72 == null goto label13;

        r73 = virtualinvoke r72.<com.android.server.wm.ActivityRecord: com.android.server.wm.Task getTask()>();

        goto label14;

     label13:
        r73 = null;

     label14:
        specialinvoke r0.<com.android.server.wm.ActivityStarter: void setNewTask(com.android.server.wm.Task)>(r73);

        $r74 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        $r75 = virtualinvoke $r74.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.LockTaskController getLockTaskController()>();

        $r76 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r77 = virtualinvoke $r76.<com.android.server.wm.ActivityRecord: com.android.server.wm.Task getTask()>();

        $z17 = virtualinvoke $r75.<com.android.server.wm.LockTaskController: boolean isLockTaskModeViolation(com.android.server.wm.Task)>($r77);

        if $z17 == 0 goto label15;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted Lock Task Mode violation mStartActivity=");

        $r51 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r51);

        $r53 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityTaskManager", $r53);

        return 101;

     label15:
        goto label17;

     label16:
        $z1 = r0.<com.android.server.wm.ActivityStarter: boolean mAddingToTask>;

        if $z1 == 0 goto label17;

        specialinvoke r0.<com.android.server.wm.ActivityStarter: void addOrReparentStartingActivity(com.android.server.wm.Task,java.lang.String)>(r69, "adding to task");

        goto label17;

     label17:
        $z18 = r0.<com.android.server.wm.ActivityStarter: boolean mAvoidMoveToFront>;

        if $z18 != 0 goto label19;

        $z8 = r0.<com.android.server.wm.ActivityStarter: boolean mDoResume>;

        if $z8 == 0 goto label19;

        $r44 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mTargetStack>;

        $r45 = virtualinvoke $r44.<com.android.server.wm.ActivityStack: com.android.server.wm.ActivityStack getStack()>();

        virtualinvoke $r45.<com.android.server.wm.ActivityStack: void moveToFront(java.lang.String,com.android.server.wm.Task)>("reuseOrNewTask", r69);

        r79 = r0.<com.android.server.wm.ActivityStarter: android.app.ActivityOptions mOptions>;

        if r79 == null goto label18;

        $z10 = virtualinvoke r79.<android.app.ActivityOptions: boolean getTaskAlwaysOnTop()>();

        if $z10 == 0 goto label18;

        $r48 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mTargetStack>;

        virtualinvoke $r48.<com.android.server.wm.ActivityStack: void setAlwaysOnTop(boolean)>(1);

     label18:
        $r80 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mTargetStack>;

        $z19 = virtualinvoke $r80.<com.android.server.wm.ActivityStack: boolean isTopStackInDisplayArea()>();

        if $z19 != 0 goto label19;

        $r46 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        $r47 = $r46.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityTaskManagerInternal mInternal>;

        $z9 = virtualinvoke $r47.<com.android.server.wm.ActivityTaskManagerInternal: boolean isDreaming()>();

        if $z9 == 0 goto label19;

        r0.<com.android.server.wm.ActivityStarter: boolean mLaunchTaskBehind> = 1;

        r63.<com.android.server.wm.ActivityRecord: boolean mLaunchTaskBehind> = 1;

     label19:
        $r81 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        $r82 = $r81.<com.android.server.wm.ActivityTaskManagerService: com.android.server.uri.UriGrantsManagerInternal mUgmInternal>;

        $r83 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r84 = virtualinvoke $r83.<com.android.server.wm.ActivityRecord: com.android.server.uri.UriPermissionOwner getUriPermissionsLocked()>();

        interfaceinvoke $r82.<com.android.server.uri.UriGrantsManagerInternal: void grantUriPermissionUncheckedFromIntent(com.android.server.uri.NeededUriGrants,com.android.server.uri.UriPermissionOwner)>(r3, $r84);

        $r85 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r86 = $r85.<com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityRecord resultTo>;

        if $r86 == null goto label20;

        $r30 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r31 = $r30.<com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityRecord resultTo>;

        $r32 = $r31.<com.android.server.wm.ActivityRecord: android.content.pm.ActivityInfo info>;

        if $r32 == null goto label20;

        $r33 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityTaskManagerService mService>;

        r87 = virtualinvoke $r33.<com.android.server.wm.ActivityTaskManagerService: android.content.pm.PackageManagerInternal getPackageManagerInternalLocked()>();

        $r34 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r35 = $r34.<com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityRecord resultTo>;

        $r36 = $r35.<com.android.server.wm.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r38 = $r36.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r37 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $i3 = $r37.<com.android.server.wm.ActivityRecord: int mUserId>;

        i14 = virtualinvoke r87.<android.content.pm.PackageManagerInternal: int getPackageUidInternal(java.lang.String,int,int)>($r38, 0, $i3);

        $r39 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $i5 = $r39.<com.android.server.wm.ActivityRecord: int mUserId>;

        $r43 = r0.<com.android.server.wm.ActivityStarter: android.content.Intent mIntent>;

        $r40 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r41 = $r40.<com.android.server.wm.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r42 = $r41.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i4 = $r42.<android.content.pm.ApplicationInfo: int uid>;

        $i6 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i4);

        virtualinvoke r87.<android.content.pm.PackageManagerInternal: void grantImplicitAccess(int,android.content.Intent,int,int,boolean)>($i5, $r43, $i6, i14, 1);

     label20:
        if z16 == 0 goto label21;

        $r27 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $i1 = $r27.<com.android.server.wm.ActivityRecord: int mUserId>;

        $r28 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r29 = virtualinvoke $r28.<com.android.server.wm.ActivityRecord: com.android.server.wm.Task getTask()>();

        $i2 = $r29.<com.android.server.wm.Task: int mTaskId>;

        staticinvoke <com.android.server.wm.EventLogTags: void writeWmCreateTask(int,int)>($i1, $i2);

     label21:
        r88 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r8 = virtualinvoke r88.<com.android.server.wm.ActivityRecord: com.android.server.wm.Task getTask()>();

        virtualinvoke r88.<com.android.server.wm.ActivityRecord: void logStartActivity(int,com.android.server.wm.Task)>(30005, $r8);

        $r9 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mTargetStack>;

        $r9.<com.android.server.wm.ActivityStack: com.android.server.wm.ActivityRecord mLastPausedActivity> = null;

        $r11 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        $r10 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        virtualinvoke $r11.<com.android.server.wm.RootWindowContainer: void sendPowerHintForLaunchStartIfNeeded(boolean,com.android.server.wm.ActivityRecord)>(0, $r10);

        $r12 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mTargetStack>;

        $r13 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r14 = virtualinvoke r71.<com.android.server.wm.ActivityStack: com.android.server.wm.ActivityRecord getTopNonFinishingActivity()>();

        $z2 = r0.<com.android.server.wm.ActivityStarter: boolean mKeepCurTransition>;

        $r15 = r0.<com.android.server.wm.ActivityStarter: android.app.ActivityOptions mOptions>;

        virtualinvoke $r12.<com.android.server.wm.ActivityStack: void startActivityLocked(com.android.server.wm.ActivityRecord,com.android.server.wm.ActivityRecord,boolean,boolean,android.app.ActivityOptions)>($r13, $r14, z16, $z2, $r15);

        $z3 = r0.<com.android.server.wm.ActivityStarter: boolean mDoResume>;

        if $z3 == 0 goto label25;

        $r16 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r17 = virtualinvoke $r16.<com.android.server.wm.ActivityRecord: com.android.server.wm.Task getTask()>();

        r89 = virtualinvoke $r17.<com.android.server.wm.Task: com.android.server.wm.ActivityRecord topRunningActivityLocked()>();

        $r18 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mTargetStack>;

        $z4 = virtualinvoke $r18.<com.android.server.wm.ActivityStack: boolean isTopActivityFocusable()>();

        if $z4 == 0 goto label24;

        if r89 == null goto label22;

        $z7 = virtualinvoke r89.<com.android.server.wm.ActivityRecord: boolean isTaskOverlay()>();

        if $z7 == 0 goto label22;

        $r26 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        if $r26 == r89 goto label22;

        goto label24;

     label22:
        $r90 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mTargetStack>;

        $z20 = virtualinvoke $r90.<com.android.server.wm.ActivityStack: boolean isTopActivityFocusable()>();

        if $z20 == 0 goto label23;

        $r24 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        $r23 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mTargetStack>;

        $z6 = virtualinvoke $r24.<com.android.server.wm.RootWindowContainer: boolean isTopDisplayFocusedStack(com.android.server.wm.ActivityStack)>($r23);

        if $z6 != 0 goto label23;

        $r25 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mTargetStack>;

        virtualinvoke $r25.<com.android.server.wm.ActivityStack: void moveToFront(java.lang.String)>("startActivityInner");

     label23:
        $r91 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        $r92 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mTargetStack>;

        $r93 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r94 = r0.<com.android.server.wm.ActivityStarter: android.app.ActivityOptions mOptions>;

        virtualinvoke $r91.<com.android.server.wm.RootWindowContainer: boolean resumeFocusedStacksTopActivities(com.android.server.wm.ActivityStack,com.android.server.wm.ActivityRecord,android.app.ActivityOptions)>($r92, $r93, $r94);

        goto label25;

     label24:
        $r19 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mTargetStack>;

        virtualinvoke $r19.<com.android.server.wm.ActivityStack: void ensureActivitiesVisible(com.android.server.wm.ActivityRecord,int,boolean)>(null, 0, 0);

        $r20 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mTargetStack>;

        $r21 = virtualinvoke $r20.<com.android.server.wm.ActivityStack: com.android.server.wm.DisplayContent getDisplay()>();

        $r22 = $r21.<com.android.server.wm.DisplayContent: com.android.server.wm.DisplayContent mDisplayContent>;

        virtualinvoke $r22.<com.android.server.wm.DisplayContent: void executeAppTransition()>();

     label25:
        $r95 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        $r96 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $i15 = $r96.<com.android.server.wm.ActivityRecord: int mUserId>;

        $r97 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mTargetStack>;

        virtualinvoke $r95.<com.android.server.wm.RootWindowContainer: void updateUserStack(int,com.android.server.wm.ActivityStack)>($i15, $r97);

        $r98 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        $r99 = $r98.<com.android.server.wm.ActivityStackSupervisor: com.android.server.wm.RecentTasks mRecentTasks>;

        $r100 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r101 = virtualinvoke $r100.<com.android.server.wm.ActivityRecord: com.android.server.wm.Task getTask()>();

        virtualinvoke $r99.<com.android.server.wm.RecentTasks: void add(com.android.server.wm.Task)>($r101);

        $r102 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        $r103 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mStartActivity>;

        $r104 = virtualinvoke $r103.<com.android.server.wm.ActivityRecord: com.android.server.wm.Task getTask()>();

        $i16 = r0.<com.android.server.wm.ActivityStarter: int mPreferredWindowingMode>;

        $r105 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.TaskDisplayArea mPreferredTaskDisplayArea>;

        $r106 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStack mTargetStack>;

        virtualinvoke $r102.<com.android.server.wm.ActivityStackSupervisor: void handleNonResizableTaskIfNeeded(com.android.server.wm.Task,int,com.android.server.wm.TaskDisplayArea,com.android.server.wm.ActivityStack)>($r104, $i16, $r105, $r106);

        return 0;
    }

    void startResolvedActivity(com.android.server.wm.ActivityRecord, com.android.server.wm.ActivityRecord, android.service.voice.IVoiceInteractionSession, com.android.internal.app.IVoiceInteractor, int, boolean, android.app.ActivityOptions, com.android.server.wm.Task, com.android.server.uri.NeededUriGrants)
    {
        com.android.server.wm.ActivityStarter r0;
        com.android.server.wm.ActivityRecord r1, $r10, $r14, r16;
        android.service.voice.IVoiceInteractionSession r2;
        com.android.internal.app.IVoiceInteractor r3;
        int i0, $i2, $i3;
        boolean z0;
        android.app.ActivityOptions r4;
        com.android.server.wm.Task r5;
        com.android.server.uri.NeededUriGrants r6;
        com.android.server.wm.ActivityMetricsLogger$LaunchingState r7;
        com.android.server.wm.ActivityStackSupervisor $r8, $r12;
        com.android.server.wm.ActivityMetricsLogger $r9, $r13;
        android.content.Intent $r11;
        long $l1;
        java.lang.Throwable $r15;

        r0 := @this: com.android.server.wm.ActivityStarter;

        r16 := @parameter0: com.android.server.wm.ActivityRecord;

        r1 := @parameter1: com.android.server.wm.ActivityRecord;

        r2 := @parameter2: android.service.voice.IVoiceInteractionSession;

        r3 := @parameter3: com.android.internal.app.IVoiceInteractor;

        i0 := @parameter4: int;

        z0 := @parameter5: boolean;

        r4 := @parameter6: android.app.ActivityOptions;

        r5 := @parameter7: com.android.server.wm.Task;

        r6 := @parameter8: com.android.server.uri.NeededUriGrants;

     label1:
        $r8 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        $r9 = virtualinvoke $r8.<com.android.server.wm.ActivityStackSupervisor: com.android.server.wm.ActivityMetricsLogger getActivityMetricsLogger()>();

        $r11 = r16.<com.android.server.wm.ActivityRecord: android.content.Intent intent>;

        $r10 = r16.<com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityRecord resultTo>;

        r7 = virtualinvoke $r9.<com.android.server.wm.ActivityMetricsLogger: com.android.server.wm.ActivityMetricsLogger$LaunchingState notifyActivityLaunching(android.content.Intent,com.android.server.wm.ActivityRecord)>($r11, $r10);

        r0.<com.android.server.wm.ActivityStarter: java.lang.String mLastStartReason> = "startResolvedActivity";

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.server.wm.ActivityStarter: long mLastStartActivityTimeMs> = $l1;

        r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mLastStartActivityRecord> = r16;

        $i2 = specialinvoke r0.<com.android.server.wm.ActivityStarter: int startActivityUnchecked(com.android.server.wm.ActivityRecord,com.android.server.wm.ActivityRecord,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,int,boolean,android.app.ActivityOptions,com.android.server.wm.Task,boolean,com.android.server.uri.NeededUriGrants)>(r16, r1, r2, r3, i0, z0, r4, r5, 0, r6);

        r0.<com.android.server.wm.ActivityStarter: int mLastStartActivityResult> = $i2;

        $r12 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityStackSupervisor mSupervisor>;

        $r13 = virtualinvoke $r12.<com.android.server.wm.ActivityStackSupervisor: com.android.server.wm.ActivityMetricsLogger getActivityMetricsLogger()>();

        $i3 = r0.<com.android.server.wm.ActivityStarter: int mLastStartActivityResult>;

        $r14 = r0.<com.android.server.wm.ActivityStarter: com.android.server.wm.ActivityRecord mLastStartActivityRecord>;

        virtualinvoke $r13.<com.android.server.wm.ActivityMetricsLogger: void notifyActivityLaunched(com.android.server.wm.ActivityMetricsLogger$LaunchingState,int,com.android.server.wm.ActivityRecord)>(r7, $i3, $r14);

     label2:
        specialinvoke r0.<com.android.server.wm.ActivityStarter: void onExecutionComplete()>();

        return;

     label3:
        $r15 := @caughtexception;

        specialinvoke r0.<com.android.server.wm.ActivityStarter: void onExecutionComplete()>();

        throw $r15;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <com.android.server.wm.ActivityStarter: java.lang.String TAG_USER_LEAVING> = "ActivityTaskManager";

        <com.android.server.wm.ActivityStarter: java.lang.String TAG_RESULTS> = "ActivityTaskManager";

        <com.android.server.wm.ActivityStarter: java.lang.String TAG_FOCUS> = "ActivityTaskManager";

        <com.android.server.wm.ActivityStarter: java.lang.String TAG_CONFIGURATION> = "ActivityTaskManager";

        <com.android.server.wm.ActivityStarter: java.lang.String TAG> = "ActivityTaskManager";

        <com.android.server.wm.ActivityStarter: int INVALID_LAUNCH_MODE> = -1;

        return;
    }
}
