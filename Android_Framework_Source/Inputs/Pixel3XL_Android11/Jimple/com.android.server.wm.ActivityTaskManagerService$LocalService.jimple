final class com.android.server.wm.ActivityTaskManagerService$LocalService extends com.android.server.wm.ActivityTaskManagerInternal
{
    final com.android.server.wm.ActivityTaskManagerService this$0;

    void <init>(com.android.server.wm.ActivityTaskManagerService)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.ActivityTaskManagerService r1;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r1 := @parameter0: com.android.server.wm.ActivityTaskManagerService;

        r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0> = r1;

        specialinvoke r0.<com.android.server.wm.ActivityTaskManagerInternal: void <init>()>();

        return;
    }

    public com.android.server.wm.ActivityTaskManagerInternal$SleepToken acquireSleepToken(java.lang.String, int)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        java.lang.String r1;
        int i0;
        com.android.server.wm.ActivityTaskManagerService $r3;
        com.android.server.wm.ActivityTaskManagerInternal$SleepToken $r4;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r4 = virtualinvoke $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityTaskManagerInternal$SleepToken acquireSleepToken(java.lang.String,int)>(r1, i0);

        return $r4;
    }

    public boolean attachApplication(com.android.server.wm.WindowProcessController) throws android.os.RemoteException
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        java.lang.Object r1;
        java.lang.StringBuilder r2;
        boolean z0, $z1;
        com.android.server.wm.ActivityTaskManagerService $r3, $r4;
        com.android.server.wm.RootWindowContainer $r5;
        java.lang.String $r7, $r9;
        java.lang.Throwable $r10, $r11;
        com.android.server.wm.WindowProcessController r12;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r12 := @parameter0: com.android.server.wm.WindowProcessController;

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: java.lang.Object mGlobalLockWithoutBoost>;

        entermonitor r1;

     label01:
        $z1 = staticinvoke <android.os.Trace: boolean isTagEnabled(long)>(32L);

        if $z1 == 0 goto label02;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("attachApplication:");

        $r7 = r12.<com.android.server.wm.WindowProcessController: java.lang.String mName>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(32L, $r9);

     label02:
        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r5 = $r4.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        z0 = virtualinvoke $r5.<com.android.server.wm.RootWindowContainer: boolean attachApplication(com.android.server.wm.WindowProcessController)>(r12);

     label03:
        staticinvoke <android.os.Trace: void traceEnd(long)>(32L);

        exitmonitor r1;

     label04:
        return z0;

     label05:
        $r10 := @caughtexception;

     label06:
        staticinvoke <android.os.Trace: void traceEnd(long)>(32L);

     label07:
        throw $r10;

     label08:
        $r11 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public boolean canGcNow()
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r3, $r4;
        boolean $z0, $z1, z2;
        com.android.server.wm.RootWindowContainer $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $z0 = virtualinvoke r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: boolean isSleeping()>();

        if $z0 != 0 goto label4;

        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r5 = $r4.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        $z1 = virtualinvoke $r5.<com.android.server.wm.RootWindowContainer: boolean allResumedActivitiesIdle()>();

        if $z1 == 0 goto label3;

     label2:
        goto label4;

     label3:
        z2 = 0;

        goto label5;

     label4:
        z2 = 1;

     label5:
        exitmonitor r1;

     label6:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return z2;

     label7:
        $r6 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public boolean canShowErrorDialogs()
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, z7;
        com.android.server.wm.ActivityTaskManagerService $r3, $r4, $r5, $r6, $r7, $r9, $r11, $r12, $r14;
        com.android.server.wm.KeyguardController $r8;
        android.app.ActivityManagerInternal $r10, $r15;
        int $i0;
        android.content.Context $r13;
        android.content.pm.UserInfo $r16;
        java.lang.Throwable $r17;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        z0 = staticinvoke <com.android.server.wm.ActivityTaskManagerService: boolean access$1000(com.android.server.wm.ActivityTaskManagerService)>($r4);

     label2:
        z7 = 0;

        if z0 == 0 goto label5;

     label3:
        $r5 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $z1 = staticinvoke <com.android.server.wm.ActivityTaskManagerService: boolean access$1100(com.android.server.wm.ActivityTaskManagerService)>($r5);

        if $z1 != 0 goto label5;

        $r6 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $z2 = $r6.<com.android.server.wm.ActivityTaskManagerService: boolean mShuttingDown>;

        if $z2 != 0 goto label5;

        $r7 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r8 = $r7.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.KeyguardController mKeyguardController>;

        $z3 = virtualinvoke $r8.<com.android.server.wm.KeyguardController: boolean isKeyguardOrAodShowing(int)>(0);

        if $z3 != 0 goto label5;

        $r11 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r9 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r10 = $r9.<com.android.server.wm.ActivityTaskManagerService: android.app.ActivityManagerInternal mAmInternal>;

        $i0 = virtualinvoke $r10.<android.app.ActivityManagerInternal: int getCurrentUserId()>();

        $z4 = virtualinvoke $r11.<com.android.server.wm.ActivityTaskManagerService: boolean hasUserRestriction(java.lang.String,int)>("no_system_error_dialogs", $i0);

        if $z4 != 0 goto label5;

        $r12 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r13 = $r12.<com.android.server.wm.ActivityTaskManagerService: android.content.Context mContext>;

        $z5 = staticinvoke <android.os.UserManager: boolean isDeviceInDemoMode(android.content.Context)>($r13);

        if $z5 == 0 goto label4;

        $r14 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r15 = $r14.<com.android.server.wm.ActivityTaskManagerService: android.app.ActivityManagerInternal mAmInternal>;

        $r16 = virtualinvoke $r15.<android.app.ActivityManagerInternal: android.content.pm.UserInfo getCurrentUser()>();

        $z6 = virtualinvoke $r16.<android.content.pm.UserInfo: boolean isDemo()>();

        if $z6 != 0 goto label5;

     label4:
        z7 = 1;

        goto label5;

     label5:
        exitmonitor r1;

     label6:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return z7;

     label7:
        $r17 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r17;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void cancelRecentsAnimation(boolean)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        boolean z0;
        com.android.server.wm.ActivityTaskManagerService $r1;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        virtualinvoke $r1.<com.android.server.wm.ActivityTaskManagerService: void cancelRecentsAnimation(boolean)>(z0);

        return;
    }

    public void cleanupDisabledPackageComponents(java.lang.String, java.util.Set, int, boolean)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        java.util.Set r1;
        int i0;
        boolean z0, $z1;
        com.android.server.wm.WindowManagerGlobalLock r2;
        com.android.server.wm.ActivityTaskManagerService $r3, $r4, $r6, $r8, $r12;
        com.android.server.wm.RootWindowContainer $r5, $r7;
        com.android.server.wm.ActivityStackSupervisor $r9;
        java.lang.Throwable $r10;
        java.lang.String r11;
        com.android.server.wm.RecentTasks $r13;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r11 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Set;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r2 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r2;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r5 = $r4.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        $z1 = virtualinvoke $r5.<com.android.server.wm.RootWindowContainer: boolean finishDisabledPackageActivities(java.lang.String,java.util.Set,boolean,boolean,int)>(r11, r1, 1, 0, i0);

        if $z1 == 0 goto label4;

     label2:
        if z0 == 0 goto label4;

     label3:
        $r6 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r7 = $r6.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        virtualinvoke $r7.<com.android.server.wm.RootWindowContainer: boolean resumeFocusedStacksTopActivities()>();

        $r8 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r9 = $r8.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r9.<com.android.server.wm.ActivityStackSupervisor: void scheduleIdle()>();

     label4:
        $r12 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r13 = virtualinvoke $r12.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RecentTasks getRecentTasks()>();

        virtualinvoke $r13.<com.android.server.wm.RecentTasks: void cleanupDisabledPackageTasksLocked(java.lang.String,java.util.Set,int)>(r11, r1, i0);

        exitmonitor r2;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label6:
        $r10 := @caughtexception;

     label7:
        exitmonitor r2;

     label8:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void cleanupRecentTasksForUser(int)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        int i0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r3, $r4;
        com.android.server.wm.RecentTasks $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r5 = staticinvoke <com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RecentTasks access$1700(com.android.server.wm.ActivityTaskManagerService)>($r4);

        virtualinvoke $r5.<com.android.server.wm.RecentTasks: void cleanupLocked(int)>(i0);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void clearHeavyWeightProcessIfEquals(com.android.server.wm.WindowProcessController)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        java.lang.Object r1;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3;
        java.lang.Throwable $r4;
        com.android.server.wm.WindowProcessController r5;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r5 := @parameter0: com.android.server.wm.WindowProcessController;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: java.lang.Object mGlobalLockWithoutBoost>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        virtualinvoke $r3.<com.android.server.wm.ActivityTaskManagerService: void clearHeavyWeightProcessIfEquals(com.android.server.wm.WindowProcessController)>(r5);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void clearLockedTasks(java.lang.String)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3;
        com.android.server.wm.LockTaskController $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r6 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r4 = virtualinvoke $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.LockTaskController getLockTaskController()>();

        virtualinvoke $r4.<com.android.server.wm.LockTaskController: void clearLockedTasks(java.lang.String)>(r6);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void clearPendingResultForActivity(android.os.IBinder, java.lang.ref.WeakReference)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        java.lang.ref.WeakReference r1;
        com.android.server.wm.WindowManagerGlobalLock r2;
        com.android.server.wm.ActivityTaskManagerService $r3;
        java.util.HashSet $r4, $r5;
        java.lang.Throwable $r6;
        android.os.IBinder r7;
        com.android.server.wm.ActivityRecord r8;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r7 := @parameter0: android.os.IBinder;

        r1 := @parameter1: java.lang.ref.WeakReference;

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r2 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r2;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        r8 = staticinvoke <com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityRecord isInStackLocked(android.os.IBinder)>(r7);

     label2:
        if r8 == null goto label4;

     label3:
        $r4 = r8.<com.android.server.wm.ActivityRecord: java.util.HashSet pendingResults>;

        if $r4 == null goto label4;

        $r5 = r8.<com.android.server.wm.ActivityRecord: java.util.HashSet pendingResults>;

        virtualinvoke $r5.<java.util.HashSet: boolean remove(java.lang.Object)>(r1);

     label4:
        exitmonitor r2;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label6:
        $r6 := @caughtexception;

     label7:
        exitmonitor r2;

     label8:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void clearSavedANRState()
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r4.<com.android.server.wm.ActivityTaskManagerService: java.lang.String mLastANRState> = null;

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void closeSystemDialogs(java.lang.String)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        int i0, i1;
        long l2;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.WindowProcessController r2;
        java.lang.StringBuilder r3;
        com.android.server.wm.ActivityTaskManagerService $r4, $r5, $r6, $r8, $r10, $r12;
        com.android.server.wm.WindowManagerService $r7;
        com.android.server.wm.RootWindowContainer $r9;
        android.app.ActivityManagerInternal $r11;
        com.android.server.wm.WindowProcessControllerMap $r13;
        boolean $z0;
        java.lang.String $r18, r21;
        java.lang.Throwable $r19, $r20;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r21 := @parameter0: java.lang.String;

        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        staticinvoke <com.android.server.wm.ActivityTaskManagerService: void access$1300(com.android.server.wm.ActivityTaskManagerService,java.lang.String)>($r4, "closeSystemDialogs");

        i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        $r5 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r5.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label02:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

     label03:
        if i1 < 10000 goto label06;

     label04:
        $r12 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r13 = $r12.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessControllerMap mProcessMap>;

        r2 = virtualinvoke $r13.<com.android.server.wm.WindowProcessControllerMap: com.android.server.wm.WindowProcessController getProcess(int)>(i0);

        $z0 = virtualinvoke r2.<com.android.server.wm.WindowProcessController: boolean isPerceptible()>();

        if $z0 != 0 goto label06;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring closeSystemDialogs ");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from background process ");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r18 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityTaskManager", $r18);

        exitmonitor r1;

     label05:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label06:
        $r6 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r7 = $r6.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r7.<com.android.server.wm.WindowManagerService: void closeSystemDialogs(java.lang.String)>(r21);

        $r8 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r9 = $r8.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        virtualinvoke $r9.<com.android.server.wm.RootWindowContainer: void closeSystemDialogActivities(java.lang.String)>(r21);

        exitmonitor r1;

     label07:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        $r10 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r11 = $r10.<com.android.server.wm.ActivityTaskManagerService: android.app.ActivityManagerInternal mAmInternal>;

        virtualinvoke $r11.<android.app.ActivityManagerInternal: void broadcastCloseSystemDialogs(java.lang.String)>(r21);

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label09:
        $r20 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r20;

     label12:
        $r19 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r19;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label11 to label12 with label12;
    }

    public android.content.res.CompatibilityInfo compatibilityInfoForPackage(android.content.pm.ApplicationInfo)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3;
        java.lang.Throwable $r4;
        android.content.pm.ApplicationInfo r5;
        android.content.res.CompatibilityInfo r6;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r5 := @parameter0: android.content.pm.ApplicationInfo;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r6 = virtualinvoke $r3.<com.android.server.wm.ActivityTaskManagerService: android.content.res.CompatibilityInfo compatibilityInfoForPackageLocked(android.content.pm.ApplicationInfo)>(r5);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return r6;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[], int, boolean, boolean, java.lang.String)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        int i0;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.lang.String r4, $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r18, r25;
        com.android.server.wm.WindowManagerGlobalLock r5;
        com.android.server.wm.ActivityTaskManagerService $r6, $r8, $r15, $r17, $r19, $r20, $r21, $r22;
        com.android.server.wm.RecentTasks $r16, r26;
        java.lang.Throwable $r23, $r24, r27;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r25 := @parameter0: java.lang.String;

        r1 := @parameter1: java.io.FileDescriptor;

        r2 := @parameter2: java.io.PrintWriter;

        r3 := @parameter3: java.lang.String[];

        i0 := @parameter4: int;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        r4 := @parameter7: java.lang.String;

        $r6 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r5 = $r6.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r5;

     label01:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r7 = "activities";

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r25);

        if $z2 != 0 goto label18;

        $r9 = "a";

        $z3 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r25);

        if $z3 == 0 goto label03;

     label02:
        goto label18;

     label03:
        $r10 = "lastanr";

        $z4 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r25);

        if $z4 == 0 goto label05;

        $r22 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        virtualinvoke $r22.<com.android.server.wm.ActivityTaskManagerService: void dumpLastANRLocked(java.io.PrintWriter)>(r2);

     label04:
        goto label19;

     label05:
        $r11 = "lastanr-traces";

        $z5 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r25);

        if $z5 == 0 goto label07;

        $r21 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        virtualinvoke $r21.<com.android.server.wm.ActivityTaskManagerService: void dumpLastANRTracesLocked(java.io.PrintWriter)>(r2);

     label06:
        goto label19;

     label07:
        $r12 = "starter";

        $z6 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r25);

        if $z6 == 0 goto label09;

        $r20 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        virtualinvoke $r20.<com.android.server.wm.ActivityTaskManagerService: void dumpActivityStarterLocked(java.io.PrintWriter,java.lang.String)>(r2, r4);

     label08:
        goto label19;

     label09:
        $r13 = "containers";

        $z7 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r25);

        if $z7 == 0 goto label11;

        $r19 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        virtualinvoke $r19.<com.android.server.wm.ActivityTaskManagerService: void dumpActivityContainersLocked(java.io.PrintWriter)>(r2);

     label10:
        goto label19;

     label11:
        $r14 = "recents";

        $z8 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r25);

        if $z8 != 0 goto label14;

        $r18 = "r";

        $z9 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r25);

        if $z9 == 0 goto label13;

     label12:
        goto label14;

     label13:
        goto label19;

     label14:
        $r15 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r16 = virtualinvoke $r15.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RecentTasks getRecentTasks()>();

        if $r16 == null goto label17;

        $r17 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r26 = virtualinvoke $r17.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RecentTasks getRecentTasks()>();

     label15:
        virtualinvoke r26.<com.android.server.wm.RecentTasks: void dump(java.io.PrintWriter,boolean,java.lang.String)>(r2, z0, r4);

     label16:
        goto label19;

     label17:
        goto label19;

     label18:
        $r8 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        virtualinvoke $r8.<com.android.server.wm.ActivityTaskManagerService: void dumpActivitiesLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,boolean,java.lang.String)>(r1, r2, r3, i0, z0, z1, r4);

     label19:
        exitmonitor r5;

     label20:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label21:
        $r24 := @caughtexception;

        r27 = $r24;

     label22:
        exitmonitor r5;

     label23:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw r27;

     label24:
        $r23 := @caughtexception;

        r27 = $r23;

        goto label22;

        catch java.lang.Throwable from label01 to label02 with label21;
        catch java.lang.Throwable from label03 to label04 with label21;
        catch java.lang.Throwable from label05 to label06 with label21;
        catch java.lang.Throwable from label07 to label08 with label21;
        catch java.lang.Throwable from label09 to label10 with label21;
        catch java.lang.Throwable from label11 to label12 with label21;
        catch java.lang.Throwable from label14 to label15 with label21;
        catch java.lang.Throwable from label15 to label16 with label24;
        catch java.lang.Throwable from label18 to label19 with label24;
        catch java.lang.Throwable from label19 to label20 with label24;
        catch java.lang.Throwable from label22 to label23 with label24;
    }

    public boolean dumpActivity(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String, java.lang.String[], int, boolean, boolean, boolean)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String r3;
        java.lang.String[] r4;
        int i0;
        boolean z0, z1, z2, $z3;
        com.android.server.wm.ActivityTaskManagerService $r5;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        i0 := @parameter4: int;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        z2 := @parameter7: boolean;

        $r5 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $z3 = virtualinvoke $r5.<com.android.server.wm.ActivityTaskManagerService: boolean dumpActivity(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean,boolean,boolean)>(r1, r2, r3, r4, i0, z0, z1, z2);

        return $z3;
    }

    public void dumpForOom(java.io.PrintWriter)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r2, $r4, $r9, $r13, $r16;
        com.android.server.wm.WindowProcessController $r5, $r10, $r14, $r17;
        java.lang.String $r7, $r12, $r19;
        java.lang.Throwable $r20;
        java.io.PrintWriter r21;
        java.lang.StringBuilder r22, r23, r24;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r21 := @parameter0: java.io.PrintWriter;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mHomeProcess: ");

        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r5 = $r4.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController mHomeProcess>;

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r21.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        r23 = new java.lang.StringBuilder;

        specialinvoke r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mPreviousProcess: ");

        $r9 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r10 = $r9.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController mPreviousProcess>;

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r21.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        $r13 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r14 = $r13.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController mHeavyWeightProcess>;

        if $r14 == null goto label2;

        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mHeavyWeightProcess: ");

        $r16 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r17 = $r16.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController mHeavyWeightProcess>;

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r21.<java.io.PrintWriter: void println(java.lang.String)>($r19);

     label2:
        exitmonitor r1;

     label3:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label4:
        $r20 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r20;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public boolean dumpForProcesses(java.io.FileDescriptor, java.io.PrintWriter, boolean, java.lang.String, int, boolean, boolean, int)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r17, $r23, $r31, $r40, $r48, $r50, $r56, $r61, $r67, $r72, $r77, $r82, $r96, $r99, $r104, $r111, $r125, $r133, r163;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i10, i11, i12, i13;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10, z11, z12, z13, z14, z15, $z16, z17, z18, z19, z20, z21;
        com.android.server.wm.WindowManagerGlobalLock r3;
        com.android.server.wm.ActivityTaskManagerService $r4, $r5, $r6, $r8, $r10, $r13, $r19, $r25, $r29, $r32, $r34, $r37, $r45, $r52, $r57, $r59, $r63, $r69, $r74, $r79, $r83, $r84, $r101, $r105, $r108, $r112, $r115, $r118, $r122, $r126, $r130, $r134, $r147, $r151, $r152, $r158;
        com.android.server.am.AppTimeTracker $r7, $r46;
        android.util.SparseArray $r9, $r33, $r35, $r38;
        android.app.IActivityController $r11, $r26;
        com.android.server.wm.ActivityStackSupervisor $r14, $r20;
        android.os.PowerManager$WakeLock $r15, $r21, $r80;
        java.lang.Object $r36, $r39, $r41, $r43, $r88, $r89, $r90;
        java.lang.Integer $r42, $r44, $r91;
        com.android.server.wm.RootWindowContainer $r53, $r106;
        java.util.ArrayList $r54;
        com.android.server.wm.VrController $r70;
        android.service.voice.IVoiceInteractionSession $r75, r167;
        com.android.server.wm.CompatModePackages $r85, $r159;
        java.util.HashMap $r86, $r160;
        java.util.Set $r87;
        android.content.res.Configuration $r102;
        com.android.server.wm.WindowProcessController $r109, $r113, $r116, $r119, $r123, $r127, $r131, $r135, r144, $r148, $r153;
        android.util.ArraySet $r114, $r120, $r128, $r136;
        java.lang.Throwable $r137, $r138, $r139, $r140, $r141, $r142, r145;
        java.io.FileDescriptor r143;
        java.lang.StringBuilder r146, r149, r150, r154, r155, r157, r164, r165, r166, r168, r169, r170, r171, r172, r174, r175, r176;
        long $l9;
        com.android.server.wm.ActivityStack r156;
        java.util.Iterator r161;
        java.util.Map$Entry r162;
        android.util.ArrayMap r173;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r143 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        z10 := @parameter2: boolean;

        r2 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        z11 := @parameter5: boolean;

        z0 := @parameter6: boolean;

        i8 := @parameter7: int;

        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r3 = $r4.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r3;

     label01:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r5 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r144 = $r5.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController mHomeProcess>;

     label02:
        if r144 == null goto label12;

        if r2 == null goto label06;

     label03:
        $r134 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r135 = $r134.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController mHomeProcess>;

        $r136 = $r135.<com.android.server.wm.WindowProcessController: android.util.ArraySet mPkgList>;

        $z9 = virtualinvoke $r136.<android.util.ArraySet: boolean contains(java.lang.Object)>(r2);

        if $z9 == 0 goto label12;

     label04:
        goto label06;

     label05:
        $r137 := @caughtexception;

        r145 = $r137;

        goto label89;

     label06:
        if z11 == 0 goto label09;

     label07:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label08:
        z12 = 0;

        goto label10;

     label09:
        z12 = z11;

     label10:
        r146 = new java.lang.StringBuilder;

        specialinvoke r146.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r146.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mHomeProcess: ");

        $r130 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r131 = $r130.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController mHomeProcess>;

        virtualinvoke r146.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r131);

        $r133 = virtualinvoke r146.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r133);

     label11:
        goto label13;

     label12:
        z12 = z11;

     label13:
        z13 = z12;

     label14:
        $r147 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r148 = $r147.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController mPreviousProcess>;

        if $r148 == null goto label21;

     label15:
        if r2 == null goto label17;

        z13 = z12;

     label16:
        $r126 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r127 = $r126.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController mPreviousProcess>;

        $r128 = $r127.<com.android.server.wm.WindowProcessController: android.util.ArraySet mPkgList>;

        $z8 = virtualinvoke $r128.<android.util.ArraySet: boolean contains(java.lang.Object)>(r2);

        if $z8 == 0 goto label21;

     label17:
        z13 = z12;

        if z12 == 0 goto label20;

     label18:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label19:
        z13 = 0;

     label20:
        r149 = new java.lang.StringBuilder;

        specialinvoke r149.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mPreviousProcess: ");

        $r122 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r123 = $r122.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController mPreviousProcess>;

        virtualinvoke r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r123);

        $r125 = virtualinvoke r149.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r125);

     label21:
        if z10 == 0 goto label26;

     label22:
        $r115 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r116 = $r115.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController mPreviousProcess>;

        if $r116 == null goto label25;

     label23:
        if r2 == null goto label25;

     label24:
        $r118 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r119 = $r118.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController mPreviousProcess>;

        $r120 = $r119.<com.android.server.wm.WindowProcessController: android.util.ArraySet mPkgList>;

        $z7 = virtualinvoke $r120.<android.util.ArraySet: boolean contains(java.lang.Object)>(r2);

        if $z7 == 0 goto label26;

     label25:
        r150 = new java.lang.StringBuilder;

        specialinvoke r150.<java.lang.StringBuilder: void <init>(int)>(128);

        virtualinvoke r150.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mPreviousProcessVisibleTime: ");

        $r151 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $l9 = $r151.<com.android.server.wm.ActivityTaskManagerService: long mPreviousProcessVisibleTime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>($l9, r150);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>(r150);

     label26:
        z14 = z13;

     label27:
        $r152 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r153 = $r152.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController mHeavyWeightProcess>;

        if $r153 == null goto label34;

     label28:
        if r2 == null goto label30;

        z14 = z13;

     label29:
        $r112 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r113 = $r112.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController mHeavyWeightProcess>;

        $r114 = $r113.<com.android.server.wm.WindowProcessController: android.util.ArraySet mPkgList>;

        $z6 = virtualinvoke $r114.<android.util.ArraySet: boolean contains(java.lang.Object)>(r2);

        if $z6 == 0 goto label34;

     label30:
        z14 = z13;

        if z13 == 0 goto label33;

     label31:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label32:
        z14 = 0;

     label33:
        r154 = new java.lang.StringBuilder;

        specialinvoke r154.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r154.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mHeavyWeightProcess: ");

        $r108 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r109 = $r108.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController mHeavyWeightProcess>;

        virtualinvoke r154.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r109);

        $r111 = virtualinvoke r154.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r111);

     label34:
        if r2 != null goto label36;

     label35:
        r155 = new java.lang.StringBuilder;

        specialinvoke r155.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r155.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mGlobalConfiguration: ");

        $r101 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r102 = virtualinvoke $r101.<com.android.server.wm.ActivityTaskManagerService: android.content.res.Configuration getGlobalConfiguration()>();

        virtualinvoke r155.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r102);

        $r104 = virtualinvoke r155.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r104);

        $r105 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r106 = $r105.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        virtualinvoke $r106.<com.android.server.wm.RootWindowContainer: void dumpDisplayConfigs(java.io.PrintWriter,java.lang.String)>(r1, "  ");

     label36:
        if z10 == 0 goto label52;

     label37:
        $r83 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r156 = virtualinvoke $r83.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityStack getTopDisplayFocusedStack()>();

     label38:
        if r2 != null goto label40;

        if r156 == null goto label40;

     label39:
        r157 = new java.lang.StringBuilder;

        specialinvoke r157.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r157.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mConfigWillChange: ");

        $z5 = r156.<com.android.server.wm.ActivityStack: boolean mConfigWillChange>;

        virtualinvoke r157.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        $r99 = virtualinvoke r157.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r99);

     label40:
        $r158 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r159 = $r158.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.CompatModePackages mCompatModePackages>;

        $r160 = virtualinvoke $r159.<com.android.server.wm.CompatModePackages: java.util.HashMap getPackages()>();

        $i10 = virtualinvoke $r160.<java.util.HashMap: int size()>();

        if $i10 <= 0 goto label52;

     label41:
        z15 = 0;

     label42:
        $r84 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r85 = $r84.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.CompatModePackages mCompatModePackages>;

        $r86 = virtualinvoke $r85.<com.android.server.wm.CompatModePackages: java.util.HashMap getPackages()>();

        $r87 = virtualinvoke $r86.<java.util.HashMap: java.util.Set entrySet()>();

        r161 = interfaceinvoke $r87.<java.util.Set: java.util.Iterator iterator()>();

     label43:
        $z16 = interfaceinvoke r161.<java.util.Iterator: boolean hasNext()>();

        if $z16 == 0 goto label52;

        $r88 = interfaceinvoke r161.<java.util.Iterator: java.lang.Object next()>();

        r162 = (java.util.Map$Entry) $r88;

        $r89 = interfaceinvoke r162.<java.util.Map$Entry: java.lang.Object getKey()>();

        r163 = (java.lang.String) $r89;

        $r90 = interfaceinvoke r162.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r91 = (java.lang.Integer) $r90;

        i11 = virtualinvoke $r91.<java.lang.Integer: int intValue()>();

     label44:
        if r2 == null goto label47;

     label45:
        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r163);

        if $z4 != 0 goto label47;

     label46:
        goto label43;

     label47:
        z17 = z15;

        if z15 != 0 goto label50;

     label48:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  mScreenCompatPackages:");

     label49:
        z17 = 1;

     label50:
        r164 = new java.lang.StringBuilder;

        specialinvoke r164.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        virtualinvoke r164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r163);

        virtualinvoke r164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke r164.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r96 = virtualinvoke r164.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r96);

     label51:
        z15 = z17;

        goto label43;

     label52:
        if r2 != null goto label60;

     label53:
        r165 = new java.lang.StringBuilder;

        specialinvoke r165.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r165.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mWakefulness=");

        $r48 = staticinvoke <android.os.PowerManagerInternal: java.lang.String wakefulnessToString(int)>(i8);

        virtualinvoke r165.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r50 = virtualinvoke r165.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r50);

        r166 = new java.lang.StringBuilder;

        specialinvoke r166.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r166.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mSleepTokens=");

        $r52 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r53 = $r52.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        $r54 = $r53.<com.android.server.wm.RootWindowContainer: java.util.ArrayList mSleepTokens>;

        virtualinvoke r166.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r54);

        $r56 = virtualinvoke r166.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r56);

        $r57 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r167 = $r57.<com.android.server.wm.ActivityTaskManagerService: android.service.voice.IVoiceInteractionSession mRunningVoice>;

     label54:
        if r167 == null goto label56;

     label55:
        r168 = new java.lang.StringBuilder;

        specialinvoke r168.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r168.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mRunningVoice=");

        $r74 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r75 = $r74.<com.android.server.wm.ActivityTaskManagerService: android.service.voice.IVoiceInteractionSession mRunningVoice>;

        virtualinvoke r168.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r75);

        $r77 = virtualinvoke r168.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r77);

        r169 = new java.lang.StringBuilder;

        specialinvoke r169.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mVoiceWakeLock");

        $r79 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r80 = $r79.<com.android.server.wm.ActivityTaskManagerService: android.os.PowerManager$WakeLock mVoiceWakeLock>;

        virtualinvoke r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r80);

        $r82 = virtualinvoke r169.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r82);

     label56:
        r170 = new java.lang.StringBuilder;

        specialinvoke r170.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r170.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mSleeping=");

        $r59 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $z2 = staticinvoke <com.android.server.wm.ActivityTaskManagerService: boolean access$1100(com.android.server.wm.ActivityTaskManagerService)>($r59);

        virtualinvoke r170.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r61 = virtualinvoke r170.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r61);

        r171 = new java.lang.StringBuilder;

        specialinvoke r171.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r171.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mShuttingDown=");

        $r63 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $z3 = $r63.<com.android.server.wm.ActivityTaskManagerService: boolean mShuttingDown>;

        virtualinvoke r171.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        virtualinvoke r171.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mTestPssMode=");

     label57:
        virtualinvoke r171.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r67 = virtualinvoke r171.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r67);

        r172 = new java.lang.StringBuilder;

        specialinvoke r172.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r172.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mVrController=");

        $r69 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r70 = $r69.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.VrController mVrController>;

        virtualinvoke r172.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r70);

        $r72 = virtualinvoke r172.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r72);

     label58:
        goto label60;

     label59:
        $r141 := @caughtexception;

        r145 = $r141;

        goto label86;

     label60:
        $r6 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r7 = $r6.<com.android.server.wm.ActivityTaskManagerService: com.android.server.am.AppTimeTracker mCurAppTimeTracker>;

        if $r7 == null goto label61;

        $r45 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r46 = $r45.<com.android.server.wm.ActivityTaskManagerService: com.android.server.am.AppTimeTracker mCurAppTimeTracker>;

        virtualinvoke $r46.<com.android.server.am.AppTimeTracker: void dumpWithHeader(java.io.PrintWriter,java.lang.String,boolean)>(r1, "  ", 1);

     label61:
        $r8 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r9 = $r8.<com.android.server.wm.ActivityTaskManagerService: android.util.SparseArray mAllowAppSwitchUids>;

        $i2 = virtualinvoke $r9.<android.util.SparseArray: int size()>();

        if $i2 <= 0 goto label79;

     label62:
        z18 = 0;

        i12 = 0;

        z19 = z14;

     label63:
        $r32 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r33 = $r32.<com.android.server.wm.ActivityTaskManagerService: android.util.SparseArray mAllowAppSwitchUids>;

        $i3 = virtualinvoke $r33.<android.util.SparseArray: int size()>();

        if i12 >= $i3 goto label78;

        $r34 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r35 = $r34.<com.android.server.wm.ActivityTaskManagerService: android.util.SparseArray mAllowAppSwitchUids>;

        $r36 = virtualinvoke $r35.<android.util.SparseArray: java.lang.Object valueAt(int)>(i12);

        r173 = (android.util.ArrayMap) $r36;

     label64:
        i13 = 0;

     label65:
        $i4 = virtualinvoke r173.<android.util.ArrayMap: int size()>();

        if i13 >= $i4 goto label77;

     label66:
        if r2 == null goto label69;

     label67:
        $r43 = virtualinvoke r173.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i13);

        $r44 = (java.lang.Integer) $r43;

        $i7 = virtualinvoke $r44.<java.lang.Integer: int intValue()>();

        i1 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i7);

     label68:
        z20 = z18;

        z21 = z19;

        if i1 != i0 goto label76;

        goto label69;

     label69:
        z21 = z19;

        if z19 == 0 goto label72;

     label70:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label71:
        z21 = 0;

     label72:
        z20 = z18;

        if z18 != 0 goto label75;

     label73:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  mAllowAppSwitchUids:");

     label74:
        z20 = 1;

     label75:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    User ");

        $r37 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r38 = $r37.<com.android.server.wm.ActivityTaskManagerService: android.util.SparseArray mAllowAppSwitchUids>;

        $i5 = virtualinvoke $r38.<android.util.SparseArray: int keyAt(int)>(i12);

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": Type ");

        $r39 = virtualinvoke r173.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i13);

        $r40 = (java.lang.String) $r39;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r40);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" = ");

        $r41 = virtualinvoke r173.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i13);

        $r42 = (java.lang.Integer) $r41;

        $i6 = virtualinvoke $r42.<java.lang.Integer: int intValue()>();

        staticinvoke <android.os.UserHandle: void formatUid(java.io.PrintWriter,int)>(r1, $i6);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label76:
        i13 = i13 + 1;

        z18 = z20;

        z19 = z21;

        goto label65;

     label77:
        i12 = i12 + 1;

        goto label63;

     label78:
        goto label80;

     label79:
        z19 = z14;

     label80:
        if r2 != null goto label83;

     label81:
        $r10 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r11 = $r10.<com.android.server.wm.ActivityTaskManagerService: android.app.IActivityController mController>;

        if $r11 == null goto label82;

        r174 = new java.lang.StringBuilder;

        specialinvoke r174.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r174.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mController=");

        $r25 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r26 = $r25.<com.android.server.wm.ActivityTaskManagerService: android.app.IActivityController mController>;

        virtualinvoke r174.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        virtualinvoke r174.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mControllerIsAMonkey=");

        $r29 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $z1 = $r29.<com.android.server.wm.ActivityTaskManagerService: boolean mControllerIsAMonkey>;

        virtualinvoke r174.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r31 = virtualinvoke r174.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r31);

     label82:
        r175 = new java.lang.StringBuilder;

        specialinvoke r175.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r175.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mGoingToSleepWakeLock=");

        $r13 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r14 = $r13.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityStackSupervisor mStackSupervisor>;

        $r15 = $r14.<com.android.server.wm.ActivityStackSupervisor: android.os.PowerManager$WakeLock mGoingToSleepWakeLock>;

        virtualinvoke r175.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke r175.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r17);

        r176 = new java.lang.StringBuilder;

        specialinvoke r176.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r176.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mLaunchingActivityWakeLock=");

        $r19 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r20 = $r19.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityStackSupervisor mStackSupervisor>;

        $r21 = $r20.<com.android.server.wm.ActivityStackSupervisor: android.os.PowerManager$WakeLock mLaunchingActivityWakeLock>;

        virtualinvoke r176.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r23 = virtualinvoke r176.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r23);

     label83:
        exitmonitor r3;

     label84:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return z19;

     label85:
        $r140 := @caughtexception;

        r145 = $r140;

     label86:
        goto label89;

     label87:
        $r142 := @caughtexception;

        r145 = $r142;

        goto label89;

     label88:
        $r138 := @caughtexception;

        r145 = $r138;

     label89:
        exitmonitor r3;

     label90:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw r145;

     label91:
        $r139 := @caughtexception;

        r145 = $r139;

        goto label89;

        catch java.lang.Throwable from label01 to label02 with label88;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label07 to label08 with label05;
        catch java.lang.Throwable from label10 to label11 with label87;
        catch java.lang.Throwable from label14 to label15 with label87;
        catch java.lang.Throwable from label16 to label17 with label87;
        catch java.lang.Throwable from label18 to label19 with label87;
        catch java.lang.Throwable from label20 to label21 with label87;
        catch java.lang.Throwable from label22 to label23 with label87;
        catch java.lang.Throwable from label24 to label25 with label87;
        catch java.lang.Throwable from label25 to label26 with label87;
        catch java.lang.Throwable from label27 to label28 with label87;
        catch java.lang.Throwable from label29 to label30 with label87;
        catch java.lang.Throwable from label31 to label32 with label87;
        catch java.lang.Throwable from label33 to label34 with label87;
        catch java.lang.Throwable from label35 to label36 with label87;
        catch java.lang.Throwable from label37 to label38 with label87;
        catch java.lang.Throwable from label39 to label40 with label87;
        catch java.lang.Throwable from label40 to label41 with label87;
        catch java.lang.Throwable from label42 to label43 with label87;
        catch java.lang.Throwable from label43 to label44 with label87;
        catch java.lang.Throwable from label45 to label46 with label87;
        catch java.lang.Throwable from label48 to label49 with label87;
        catch java.lang.Throwable from label50 to label51 with label87;
        catch java.lang.Throwable from label53 to label54 with label59;
        catch java.lang.Throwable from label55 to label56 with label87;
        catch java.lang.Throwable from label56 to label57 with label59;
        catch java.lang.Throwable from label57 to label58 with label85;
        catch java.lang.Throwable from label60 to label61 with label85;
        catch java.lang.Throwable from label61 to label62 with label85;
        catch java.lang.Throwable from label63 to label64 with label85;
        catch java.lang.Throwable from label65 to label66 with label85;
        catch java.lang.Throwable from label67 to label68 with label85;
        catch java.lang.Throwable from label70 to label71 with label91;
        catch java.lang.Throwable from label73 to label74 with label91;
        catch java.lang.Throwable from label75 to label76 with label91;
        catch java.lang.Throwable from label81 to label82 with label91;
        catch java.lang.Throwable from label82 to label83 with label91;
        catch java.lang.Throwable from label83 to label84 with label91;
        catch java.lang.Throwable from label89 to label90 with label91;
    }

    public void enableScreenAfterBoot(boolean)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        boolean z0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r3, $r4, $r6;
        long $l0;
        com.android.server.wm.WindowManagerService $r5;
        java.lang.Throwable $r7;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        z0 := @parameter0: boolean;

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        staticinvoke <com.android.server.am.EventLogTags: void writeBootProgressEnableScreen(long)>($l0);

        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r5 = $r4.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r5.<com.android.server.wm.WindowManagerService: void enableScreenAfterBoot()>();

        $r6 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        staticinvoke <com.android.server.wm.ActivityTaskManagerService: void access$900(com.android.server.wm.ActivityTaskManagerService,boolean)>($r6, z0);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r7 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void enforceCallerIsRecentsOrHasPermission(java.lang.String, java.lang.String)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        java.lang.String r1, r2;
        com.android.server.wm.ActivityTaskManagerService $r3;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        staticinvoke <com.android.server.wm.ActivityTaskManagerService: void access$700(com.android.server.wm.ActivityTaskManagerService,java.lang.String,java.lang.String)>($r3, r1, r2);

        return;
    }

    public void finishHeavyWeightApp()
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r3, $r4, $r6, $r8, $r9;
        com.android.server.wm.WindowProcessController $r5, $r7, $r10;
        java.lang.Throwable $r11;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r5 = $r4.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController mHeavyWeightProcess>;

        if $r5 == null goto label2;

        $r9 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r10 = $r9.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController mHeavyWeightProcess>;

        virtualinvoke $r10.<com.android.server.wm.WindowProcessController: void finishActivities()>();

     label2:
        $r8 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r6 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r7 = $r6.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController mHeavyWeightProcess>;

        virtualinvoke $r8.<com.android.server.wm.ActivityTaskManagerService: void clearHeavyWeightProcessIfEquals(com.android.server.wm.WindowProcessController)>($r7);

        exitmonitor r1;

     label3:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label4:
        $r11 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public int finishTopCrashedActivities(com.android.server.wm.WindowProcessController, java.lang.String)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        java.lang.String r1;
        com.android.server.wm.WindowManagerGlobalLock r2;
        int i0;
        com.android.server.wm.ActivityTaskManagerService $r3, $r4;
        com.android.server.wm.RootWindowContainer $r5;
        java.lang.Throwable $r6;
        com.android.server.wm.WindowProcessController r7;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r7 := @parameter0: com.android.server.wm.WindowProcessController;

        r1 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r2 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r2;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r5 = $r4.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        i0 = virtualinvoke $r5.<com.android.server.wm.RootWindowContainer: int finishTopCrashedActivities(com.android.server.wm.WindowProcessController,java.lang.String)>(r7, r1);

        exitmonitor r2;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return i0;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void flushRecentTasks()
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.ActivityTaskManagerService $r1;
        com.android.server.wm.RecentTasks $r2;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        $r1 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r2 = staticinvoke <com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RecentTasks access$1700(com.android.server.wm.ActivityTaskManagerService)>($r1);

        virtualinvoke $r2.<com.android.server.wm.RecentTasks: void flush()>();

        return;
    }

    public android.content.ComponentName getHomeActivityForUser(int)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        int i0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3;
        com.android.server.wm.RootWindowContainer $r4;
        java.lang.Throwable $r5;
        com.android.server.wm.ActivityRecord r6;
        android.content.ComponentName r7;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r4 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        r6 = virtualinvoke $r4.<com.android.server.wm.RootWindowContainer: com.android.server.wm.ActivityRecord getDefaultDisplayHomeActivityForUser(int)>(i0);

     label2:
        if r6 != null goto label3;

        r7 = null;

        goto label4;

     label3:
        r7 = r6.<com.android.server.wm.ActivityRecord: android.content.ComponentName mActivityComponent>;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return r7;

     label6:
        $r5 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public android.content.Intent getHomeIntent()
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3;
        java.lang.Throwable $r4;
        android.content.Intent r5;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r5 = virtualinvoke $r3.<com.android.server.wm.ActivityTaskManagerService: android.content.Intent getHomeIntent()>();

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return r5;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public com.android.server.wm.WindowProcessController getHomeProcess()
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3;
        java.lang.Throwable $r4;
        com.android.server.wm.WindowProcessController r5;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r5 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController mHomeProcess>;

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return r5;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.content.IIntentSender getIntentSender(int, java.lang.String, java.lang.String, int, int, android.os.IBinder, java.lang.String, int, android.content.Intent[], java.lang.String[], int, android.os.Bundle)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        int i0, i1, i2, i3, i4;
        java.lang.String r1, r3, r11;
        android.os.IBinder r2;
        android.content.Intent[] r4;
        java.lang.String[] r5;
        android.os.Bundle r6;
        com.android.server.wm.WindowManagerGlobalLock r7;
        com.android.server.wm.ActivityTaskManagerService $r8, $r9;
        java.lang.Throwable $r10;
        android.content.IIntentSender r12;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        i0 := @parameter0: int;

        r11 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r2 := @parameter5: android.os.IBinder;

        r3 := @parameter6: java.lang.String;

        i3 := @parameter7: int;

        r4 := @parameter8: android.content.Intent[];

        r5 := @parameter9: java.lang.String[];

        i4 := @parameter10: int;

        r6 := @parameter11: android.os.Bundle;

        $r8 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r7 = $r8.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r7;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r9 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r12 = virtualinvoke $r9.<com.android.server.wm.ActivityTaskManagerService: android.content.IIntentSender getIntentSenderLocked(int,java.lang.String,java.lang.String,int,int,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle)>(i0, r11, r1, i1, i2, r2, r3, i3, r4, r5, i4, r6);

        exitmonitor r7;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return r12;

     label3:
        $r10 := @caughtexception;

     label4:
        exitmonitor r7;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public com.android.server.wm.ActivityMetricsLaunchObserverRegistry getLaunchObserverRegistry()
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3;
        com.android.server.wm.ActivityStackSupervisor $r4;
        com.android.server.wm.ActivityMetricsLogger $r5;
        java.lang.Throwable $r6;
        com.android.server.wm.ActivityMetricsLaunchObserverRegistry r7;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r4 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityStackSupervisor mStackSupervisor>;

        $r5 = virtualinvoke $r4.<com.android.server.wm.ActivityStackSupervisor: com.android.server.wm.ActivityMetricsLogger getActivityMetricsLogger()>();

        r7 = virtualinvoke $r5.<com.android.server.wm.ActivityMetricsLogger: com.android.server.wm.ActivityMetricsLaunchObserverRegistry getLaunchObserverRegistry()>();

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return r7;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public com.android.server.wm.WindowProcessController getPreviousProcess()
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3;
        java.lang.Throwable $r4;
        com.android.server.wm.WindowProcessController r5;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r5 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController mPreviousProcess>;

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return r5;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public com.android.server.wm.ActivityServiceConnectionsHolder getServiceConnectionsHolder(android.os.IBinder)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityRecord r2;
        com.android.server.wm.ActivityTaskManagerService $r3, $r5;
        com.android.server.wm.ActivityServiceConnectionsHolder $r4, r8, r9;
        java.lang.Throwable $r6;
        android.os.IBinder r7;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r7 := @parameter0: android.os.IBinder;

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label01:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        r2 = staticinvoke <com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityRecord isInStackLocked(android.os.IBinder)>(r7);

     label02:
        if r2 != null goto label05;

     label03:
        exitmonitor r1;

     label04:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return null;

     label05:
        $r4 = r2.<com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityServiceConnectionsHolder mServiceConnectionsHolder>;

        if $r4 != null goto label06;

        r8 = new com.android.server.wm.ActivityServiceConnectionsHolder;

        $r5 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        specialinvoke r8.<com.android.server.wm.ActivityServiceConnectionsHolder: void <init>(com.android.server.wm.ActivityTaskManagerService,com.android.server.wm.ActivityRecord)>($r5, r2);

        r2.<com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityServiceConnectionsHolder mServiceConnectionsHolder> = r8;

     label06:
        r9 = r2.<com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityServiceConnectionsHolder mServiceConnectionsHolder>;

        exitmonitor r1;

     label07:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return r9;

     label08:
        $r6 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public android.app.ActivityManager$TaskSnapshot getTaskSnapshotBlocking(int, boolean)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        int i0;
        boolean z0;
        com.android.server.wm.ActivityTaskManagerService $r1;
        android.app.ActivityManager$TaskSnapshot $r2;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r2 = staticinvoke <com.android.server.wm.ActivityTaskManagerService: android.app.ActivityManager$TaskSnapshot access$1900(com.android.server.wm.ActivityTaskManagerService,int,boolean,boolean)>($r1, i0, z0, 1);

        return $r2;
    }

    public com.android.server.wm.ActivityTaskManagerInternal$ActivityTokens getTopActivityForTask(int)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        int i0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3;
        com.android.server.wm.RootWindowContainer $r4;
        boolean $z0;
        com.android.server.wm.WindowProcessController $r5;
        com.android.server.wm.ActivityRecord$Token $r6;
        android.os.Binder $r7;
        android.app.IApplicationThread $r8;
        java.lang.String $r11;
        java.lang.Throwable $r12;
        com.android.server.wm.Task r13;
        com.android.server.wm.ActivityRecord r14;
        java.lang.StringBuilder r15;
        com.android.server.wm.ActivityTaskManagerInternal$ActivityTokens r16;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label01:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r4 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        r13 = virtualinvoke $r4.<com.android.server.wm.RootWindowContainer: com.android.server.wm.Task anyTaskForId(int)>(i0);

     label02:
        if r13 != null goto label05;

     label03:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityTaskManager", "getApplicationThreadForTopActivity failed: Requested task not found");

        exitmonitor r1;

     label04:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return null;

     label05:
        r14 = virtualinvoke r13.<com.android.server.wm.Task: com.android.server.wm.ActivityRecord getTopNonFinishingActivity()>();

     label06:
        if r14 != null goto label09;

     label07:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityTaskManager", "getApplicationThreadForTopActivity failed: Requested activity not found");

        exitmonitor r1;

     label08:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return null;

     label09:
        $z0 = virtualinvoke r14.<com.android.server.wm.ActivityRecord: boolean attachedToProcess()>();

        if $z0 != 0 goto label11;

        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getApplicationThreadForTopActivity failed: No process for ");

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        $r11 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityTaskManager", $r11);

        exitmonitor r1;

     label10:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return null;

     label11:
        r16 = new com.android.server.wm.ActivityTaskManagerInternal$ActivityTokens;

        $r6 = r14.<com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityRecord$Token appToken>;

        $r7 = r14.<com.android.server.wm.ActivityRecord: android.os.Binder assistToken>;

        $r5 = r14.<com.android.server.wm.ActivityRecord: com.android.server.wm.WindowProcessController app>;

        $r8 = virtualinvoke $r5.<com.android.server.wm.WindowProcessController: android.app.IApplicationThread getThread()>();

        specialinvoke r16.<com.android.server.wm.ActivityTaskManagerInternal$ActivityTokens: void <init>(com.android.server.wm.ActivityTaskManagerInternal,android.os.IBinder,android.os.IBinder,android.app.IApplicationThread)>(r0, $r6, $r7, $r8);

        exitmonitor r1;

     label12:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return r16;

     label13:
        $r12 := @caughtexception;

     label14:
        exitmonitor r1;

     label15:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public com.android.server.wm.WindowProcessController getTopApp()
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        java.lang.Object r1;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3, $r4;
        com.android.server.wm.RootWindowContainer $r5, r7;
        java.lang.Throwable $r6;
        com.android.server.wm.WindowProcessController r8;
        com.android.server.wm.ActivityRecord r9;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: java.lang.Object mGlobalLockWithoutBoost>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r7 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

     label02:
        r8 = null;

        if r7 != null goto label05;

     label03:
        exitmonitor r1;

     label04:
        return null;

     label05:
        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r5 = $r4.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        r9 = virtualinvoke $r5.<com.android.server.wm.RootWindowContainer: com.android.server.wm.ActivityRecord getTopResumedActivity()>();

     label06:
        if r9 == null goto label08;

     label07:
        r8 = r9.<com.android.server.wm.ActivityRecord: com.android.server.wm.WindowProcessController app>;

     label08:
        exitmonitor r1;

     label09:
        return r8;

     label10:
        $r6 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public int getTopProcessState()
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        java.lang.Object r1;
        int i0;
        com.android.server.wm.ActivityTaskManagerService $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: java.lang.Object mGlobalLockWithoutBoost>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        i0 = $r4.<com.android.server.wm.ActivityTaskManagerService: int mTopProcessState>;

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.util.List getTopVisibleActivities()
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3;
        com.android.server.wm.RootWindowContainer $r4;
        java.lang.Throwable $r5;
        java.util.List r6;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r4 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        r6 = virtualinvoke $r4.<com.android.server.wm.RootWindowContainer: java.util.List getTopVisibleActivities()>();

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return r6;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean handleAppCrashInActivityController(java.lang.String, int, java.lang.String, java.lang.String, long, java.lang.String, java.lang.Runnable)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        int i0;
        java.lang.String r1, r2, r3, r15;
        long l1;
        java.lang.Runnable r4;
        com.android.server.wm.WindowManagerGlobalLock r5;
        com.android.server.wm.ActivityTaskManagerService $r6, $r7, $r9, $r13;
        android.app.IActivityController $r8, $r10;
        boolean $z0;
        java.lang.Throwable $r11;
        android.os.RemoteException $r12;
        com.android.server.Watchdog $r14;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r15 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        l1 := @parameter4: long;

        r3 := @parameter5: java.lang.String;

        r4 := @parameter6: java.lang.Runnable;

        $r6 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r5 = $r6.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r5;

     label01:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r7 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r8 = $r7.<com.android.server.wm.ActivityTaskManagerService: android.app.IActivityController mController>;

        if $r8 != null goto label03;

        exitmonitor r5;

     label02:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return 0;

     label03:
        $r9 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r10 = $r9.<com.android.server.wm.ActivityTaskManagerService: android.app.IActivityController mController>;

        $z0 = interfaceinvoke $r10.<android.app.IActivityController: boolean appCrashed(java.lang.String,int,java.lang.String,java.lang.String,long,java.lang.String)>(r15, i0, r1, r2, l1, r3);

        if $z0 != 0 goto label06;

        interfaceinvoke r4.<java.lang.Runnable: void run()>();

     label04:
        exitmonitor r5;

     label05:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return 1;

     label06:
        goto label09;

     label07:
        $r12 := @caughtexception;

     label08:
        $r13 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r13.<com.android.server.wm.ActivityTaskManagerService: android.app.IActivityController mController> = null;

        $r14 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        virtualinvoke $r14.<com.android.server.Watchdog: void setActivityController(android.app.IActivityController)>(null);

     label09:
        exitmonitor r5;

     label10:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return 0;

     label11:
        $r11 := @caughtexception;

     label12:
        exitmonitor r5;

     label13:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch android.os.RemoteException from label03 to label04 with label07;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public void handleAppDied(com.android.server.wm.WindowProcessController, boolean, java.lang.Runnable)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        boolean z0, z1, $z2, $z3;
        java.lang.Runnable r1;
        java.lang.Object r2;
        com.android.server.wm.ActivityTaskManagerService $r3, $r4, $r6, $r7, $r9, $r10, $r14;
        com.android.server.wm.RootWindowContainer $r5, $r8, $r11;
        java.lang.Throwable $r12, $r13;
        com.android.server.wm.WindowProcessController r15;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r15 := @parameter0: com.android.server.wm.WindowProcessController;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.lang.Runnable;

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r2 = $r3.<com.android.server.wm.ActivityTaskManagerService: java.lang.Object mGlobalLockWithoutBoost>;

        entermonitor r2;

     label01:
        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r5 = $r4.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        z1 = virtualinvoke $r5.<com.android.server.wm.RootWindowContainer: boolean handleAppDied(com.android.server.wm.WindowProcessController)>(r15);

        virtualinvoke r15.<com.android.server.wm.WindowProcessController: void clearRecentTasks()>();

        virtualinvoke r15.<com.android.server.wm.WindowProcessController: void clearActivities()>();

        $z2 = virtualinvoke r15.<com.android.server.wm.WindowProcessController: boolean isInstrumenting()>();

        if $z2 == 0 goto label02;

        interfaceinvoke r1.<java.lang.Runnable: void run()>();

     label02:
        if z0 != 0 goto label10;

        if z1 == 0 goto label10;

     label03:
        $r6 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        virtualinvoke $r6.<com.android.server.wm.ActivityTaskManagerService: void deferWindowLayout()>();

     label04:
        $r7 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r8 = $r7.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        $z3 = virtualinvoke $r8.<com.android.server.wm.RootWindowContainer: boolean resumeFocusedStacksTopActivities()>();

        if $z3 != 0 goto label05;

        $r10 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r11 = $r10.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        virtualinvoke $r11.<com.android.server.wm.RootWindowContainer: void ensureActivitiesVisible(com.android.server.wm.ActivityRecord,int,boolean)>(null, 0, 0);

     label05:
        $r9 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        virtualinvoke $r9.<com.android.server.wm.ActivityTaskManagerService: void continueWindowLayout()>();

     label06:
        goto label10;

     label07:
        $r13 := @caughtexception;

     label08:
        $r14 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        virtualinvoke $r14.<com.android.server.wm.ActivityTaskManagerService: void continueWindowLayout()>();

     label09:
        throw $r13;

     label10:
        exitmonitor r2;

     label11:
        return;

     label12:
        $r12 := @caughtexception;

     label13:
        exitmonitor r2;

     label14:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public boolean hasResumedActivity(int)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        int i0, i1, i2;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3;
        com.android.server.wm.WindowProcessControllerMap $r4;
        java.lang.Object $r5;
        com.android.server.wm.WindowProcessController $r6;
        boolean $z0;
        java.lang.Throwable $r7;
        android.util.ArraySet r8;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        i1 := @parameter0: int;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label01:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r4 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessControllerMap mProcessMap>;

        r8 = virtualinvoke $r4.<com.android.server.wm.WindowProcessControllerMap: android.util.ArraySet getProcesses(int)>(i1);

     label02:
        i2 = 0;

     label03:
        i0 = virtualinvoke r8.<android.util.ArraySet: int size()>();

     label04:
        if i2 >= i0 goto label08;

     label05:
        $r5 = virtualinvoke r8.<android.util.ArraySet: java.lang.Object valueAt(int)>(i2);

        $r6 = (com.android.server.wm.WindowProcessController) $r5;

        $z0 = virtualinvoke $r6.<com.android.server.wm.WindowProcessController: boolean hasResumedActivity()>();

        if $z0 == 0 goto label07;

        exitmonitor r1;

     label06:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return 1;

     label07:
        i2 = i2 + 1;

        goto label04;

     label08:
        exitmonitor r1;

     label09:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return 0;

     label10:
        $r7 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public boolean isCallerRecents(int)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        int i0;
        com.android.server.wm.ActivityTaskManagerService $r1;
        com.android.server.wm.RecentTasks $r2;
        boolean $z0;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RecentTasks getRecentTasks()>();

        $z0 = virtualinvoke $r2.<com.android.server.wm.RecentTasks: boolean isCallerRecents(int)>(i0);

        return $z0;
    }

    public boolean isDreaming()
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        boolean z0;
        com.android.server.wm.ActivityTaskManagerService $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        z0 = staticinvoke <com.android.server.wm.ActivityTaskManagerService: boolean access$800(com.android.server.wm.ActivityTaskManagerService)>($r4);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return z0;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean isFactoryTestProcess(com.android.server.wm.WindowProcessController)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        java.lang.Object r1;
        int i0, $i1, $i2, $i3, $i4;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3, $r4, $r6, $r8, $r14;
        android.content.pm.ApplicationInfo $r5;
        android.content.ComponentName $r7, $r9;
        java.lang.String $r10, $r11;
        boolean $z1, z2;
        java.lang.Throwable $r12;
        com.android.server.wm.WindowProcessController r13;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r13 := @parameter0: com.android.server.wm.WindowProcessController;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: java.lang.Object mGlobalLockWithoutBoost>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        i0 = $r3.<com.android.server.wm.ActivityTaskManagerService: int mFactoryTest>;

     label02:
        if i0 != 0 goto label05;

     label03:
        exitmonitor r1;

     label04:
        return 0;

     label05:
        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $i1 = $r4.<com.android.server.wm.ActivityTaskManagerService: int mFactoryTest>;

        if $i1 != 1 goto label07;

        $r6 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r7 = $r6.<com.android.server.wm.ActivityTaskManagerService: android.content.ComponentName mTopComponent>;

        if $r7 == null goto label07;

        $r10 = r13.<com.android.server.wm.WindowProcessController: java.lang.String mName>;

        $r8 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r9 = $r8.<com.android.server.wm.ActivityTaskManagerService: android.content.ComponentName mTopComponent>;

        $r11 = virtualinvoke $r9.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z1 == 0 goto label07;

        exitmonitor r1;

     label06:
        return 1;

     label07:
        z2 = 0;

     label08:
        $r14 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $i4 = $r14.<com.android.server.wm.ActivityTaskManagerService: int mFactoryTest>;

        if $i4 != 2 goto label12;

     label09:
        z2 = 0;

     label10:
        $r5 = r13.<com.android.server.wm.WindowProcessController: android.content.pm.ApplicationInfo mInfo>;

        $i2 = $r5.<android.content.pm.ApplicationInfo: int flags>;

        $i3 = $i2 & 16;

        if $i3 == 0 goto label12;

     label11:
        z2 = 1;

     label12:
        exitmonitor r1;

     label13:
        return z2;

     label14:
        $r12 := @caughtexception;

     label15:
        exitmonitor r1;

     label16:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    public boolean isGetTasksAllowed(java.lang.String, int, int)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        int i0, i1;
        com.android.server.wm.WindowManagerGlobalLock r1;
        boolean z0;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3;
        java.lang.Throwable $r4;
        java.lang.String r5;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r5 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        z0 = virtualinvoke $r3.<com.android.server.wm.ActivityTaskManagerService: boolean isGetTasksAllowed(java.lang.String,int,int)>(r5, i0, i1);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return z0;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean isHeavyWeightProcess(com.android.server.wm.WindowProcessController)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        java.lang.Object r1;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3;
        com.android.server.wm.WindowProcessController $r4, r6;
        java.lang.Throwable $r5;
        boolean z0;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r6 := @parameter0: com.android.server.wm.WindowProcessController;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: java.lang.Object mGlobalLockWithoutBoost>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r4 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController mHeavyWeightProcess>;

        if r6 != $r4 goto label3;

     label2:
        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        exitmonitor r1;

     label5:
        return z0;

     label6:
        $r5 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public boolean isRecentsComponentHomeActivity(int)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        int i0;
        com.android.server.wm.ActivityTaskManagerService $r1;
        com.android.server.wm.RecentTasks $r2;
        boolean $z0;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RecentTasks getRecentTasks()>();

        $z0 = virtualinvoke $r2.<com.android.server.wm.RecentTasks: boolean isRecentsComponentHomeActivity(int)>(i0);

        return $z0;
    }

    public boolean isShuttingDown()
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        boolean z0;
        com.android.server.wm.ActivityTaskManagerService $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        z0 = $r4.<com.android.server.wm.ActivityTaskManagerService: boolean mShuttingDown>;

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return z0;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean isSleeping()
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        java.lang.Object r1;
        boolean z0;
        com.android.server.wm.ActivityTaskManagerService $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: java.lang.Object mGlobalLockWithoutBoost>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        z0 = virtualinvoke $r4.<com.android.server.wm.ActivityTaskManagerService: boolean isSleepingLocked()>();

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean isUidForeground(int)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        int i0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        boolean z0;
        com.android.server.wm.ActivityTaskManagerService $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        z0 = virtualinvoke $r4.<com.android.server.wm.ActivityTaskManagerService: boolean isUidForeground(int)>(i0);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return z0;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void lambda$showSystemReadyErrorDialogsIfNeeded$0$ActivityTaskManagerService$LocalService()
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.ActivityTaskManagerService $r2, $r4, $r7, $r10, $r13, $r16;
        boolean $z0;
        com.android.server.am.BaseErrorDialog $r3;
        android.content.Context $r5, $r8, $r11, $r14;
        android.view.Window $r6;
        java.lang.CharSequence $r9, $r12, $r15;
        com.android.server.wm.ActivityTaskManagerService$UiHandler $r17;
        android.os.Message $r18;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $z0 = staticinvoke <com.android.server.wm.ActivityTaskManagerService: boolean access$1000(com.android.server.wm.ActivityTaskManagerService)>($r2);

        if $z0 == 0 goto label1;

        $r3 = new com.android.server.am.BaseErrorDialog;

        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r5 = $r4.<com.android.server.wm.ActivityTaskManagerService: android.content.Context mUiContext>;

        specialinvoke $r3.<com.android.server.am.BaseErrorDialog: void <init>(android.content.Context)>($r5);

        $r6 = virtualinvoke $r3.<android.app.AlertDialog: android.view.Window getWindow()>();

        virtualinvoke $r6.<android.view.Window: void setType(int)>(2010);

        virtualinvoke $r3.<android.app.AlertDialog: void setCancelable(boolean)>(0);

        $r7 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r8 = $r7.<com.android.server.wm.ActivityTaskManagerService: android.content.Context mUiContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: java.lang.CharSequence getText(int)>(17039631);

        virtualinvoke $r3.<android.app.AlertDialog: void setTitle(java.lang.CharSequence)>($r9);

        $r10 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r11 = $r10.<com.android.server.wm.ActivityTaskManagerService: android.content.Context mUiContext>;

        $r12 = virtualinvoke $r11.<android.content.Context: java.lang.CharSequence getText(int)>(17041340);

        virtualinvoke $r3.<android.app.AlertDialog: void setMessage(java.lang.CharSequence)>($r12);

        $r13 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r14 = $r13.<com.android.server.wm.ActivityTaskManagerService: android.content.Context mUiContext>;

        $r15 = virtualinvoke $r14.<android.content.Context: java.lang.CharSequence getText(int)>(17039370);

        $r16 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r17 = $r16.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityTaskManagerService$UiHandler mUiHandler>;

        $r18 = virtualinvoke $r17.<com.android.server.wm.ActivityTaskManagerService$UiHandler: android.os.Message obtainMessage(int,java.lang.Object)>(1, $r3);

        virtualinvoke $r3.<android.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.os.Message)>(-1, $r15, $r18);

        virtualinvoke $r3.<android.app.AlertDialog: void show()>();

     label1:
        return;
    }

    public void lambda$showSystemReadyErrorDialogsIfNeeded$1$ActivityTaskManagerService$LocalService()
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.ActivityTaskManagerService $r2, $r4, $r7, $r10, $r13, $r16;
        boolean $z0;
        com.android.server.am.BaseErrorDialog $r3;
        android.content.Context $r5, $r8, $r11, $r14;
        android.view.Window $r6;
        java.lang.CharSequence $r9, $r12, $r15;
        com.android.server.wm.ActivityTaskManagerService$UiHandler $r17;
        android.os.Message $r18;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $z0 = staticinvoke <com.android.server.wm.ActivityTaskManagerService: boolean access$1000(com.android.server.wm.ActivityTaskManagerService)>($r2);

        if $z0 == 0 goto label1;

        $r3 = new com.android.server.am.BaseErrorDialog;

        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r5 = $r4.<com.android.server.wm.ActivityTaskManagerService: android.content.Context mUiContext>;

        specialinvoke $r3.<com.android.server.am.BaseErrorDialog: void <init>(android.content.Context)>($r5);

        $r6 = virtualinvoke $r3.<android.app.AlertDialog: android.view.Window getWindow()>();

        virtualinvoke $r6.<android.view.Window: void setType(int)>(2010);

        virtualinvoke $r3.<android.app.AlertDialog: void setCancelable(boolean)>(0);

        $r7 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r8 = $r7.<com.android.server.wm.ActivityTaskManagerService: android.content.Context mUiContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: java.lang.CharSequence getText(int)>(17039631);

        virtualinvoke $r3.<android.app.AlertDialog: void setTitle(java.lang.CharSequence)>($r9);

        $r10 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r11 = $r10.<com.android.server.wm.ActivityTaskManagerService: android.content.Context mUiContext>;

        $r12 = virtualinvoke $r11.<android.content.Context: java.lang.CharSequence getText(int)>(17041339);

        virtualinvoke $r3.<android.app.AlertDialog: void setMessage(java.lang.CharSequence)>($r12);

        $r13 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r14 = $r13.<com.android.server.wm.ActivityTaskManagerService: android.content.Context mUiContext>;

        $r15 = virtualinvoke $r14.<android.content.Context: java.lang.CharSequence getText(int)>(17039370);

        $r16 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r17 = $r16.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityTaskManagerService$UiHandler mUiHandler>;

        $r18 = virtualinvoke $r17.<com.android.server.wm.ActivityTaskManagerService$UiHandler: android.os.Message obtainMessage(int,java.lang.Object)>(1, $r3);

        virtualinvoke $r3.<android.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.os.Message)>(-1, $r15, $r18);

        virtualinvoke $r3.<android.app.AlertDialog: void show()>();

     label1:
        return;
    }

    public void lambda$updateTopComponentForFactoryTest$2$ActivityTaskManagerService$LocalService(java.lang.CharSequence)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        java.lang.CharSequence r1;
        com.android.server.wm.FactoryErrorDialog $r2;
        com.android.server.wm.ActivityTaskManagerService $r3, $r5;
        android.content.Context $r4;
        android.app.ActivityManagerInternal $r6;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = new com.android.server.wm.FactoryErrorDialog;

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r4 = $r3.<com.android.server.wm.ActivityTaskManagerService: android.content.Context mUiContext>;

        specialinvoke $r2.<com.android.server.wm.FactoryErrorDialog: void <init>(android.content.Context,java.lang.CharSequence)>($r4, r1);

        virtualinvoke $r2.<android.app.Dialog: void show()>();

        $r5 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r6 = $r5.<com.android.server.wm.ActivityTaskManagerService: android.app.ActivityManagerInternal mAmInternal>;

        virtualinvoke $r6.<android.app.ActivityManagerInternal: void ensureBootCompleted()>();

        return;
    }

    public void loadRecentTasksForUser(int)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        int i0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r3, $r4;
        com.android.server.wm.RecentTasks $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r5 = staticinvoke <com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RecentTasks access$1700(com.android.server.wm.ActivityTaskManagerService)>($r4);

        virtualinvoke $r5.<com.android.server.wm.RecentTasks: void loadUserRecentsLocked(int)>(i0);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void notifyActiveVoiceInteractionServiceChanged(android.content.ComponentName)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3;
        java.lang.Throwable $r4;
        android.content.ComponentName r5;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r5 := @parameter0: android.content.ComponentName;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r3.<com.android.server.wm.ActivityTaskManagerService: android.content.ComponentName mActiveVoiceInteractionServiceComponent> = r5;

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void notifyDreamStateChanged(boolean)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        boolean z0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        z0 := @parameter0: boolean;

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        staticinvoke <com.android.server.wm.ActivityTaskManagerService: boolean access$802(com.android.server.wm.ActivityTaskManagerService,boolean)>($r4, z0);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void notifyKeyguardFlagsChanged(java.lang.Runnable, int)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3, $r6;
        com.android.server.wm.RootWindowContainer $r4, $r7;
        com.android.server.wm.AppTransition $r5;
        int $i0, i1;
        java.lang.Throwable $r8;
        java.lang.Runnable r9;
        com.android.server.wm.DisplayContent r10, r11;
        boolean z0;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r9 := @parameter0: java.lang.Runnable;

        i1 := @parameter1: int;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label01:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r4 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        r10 = virtualinvoke $r4.<com.android.server.wm.RootWindowContainer: com.android.server.wm.DisplayContent getDisplayContent(int)>(i1);

     label02:
        if r10 != null goto label05;

     label03:
        exitmonitor r1;

     label04:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label05:
        r11 = r10.<com.android.server.wm.DisplayContent: com.android.server.wm.DisplayContent mDisplayContent>;

        $r5 = r11.<com.android.server.wm.DisplayContent: com.android.server.wm.AppTransition mAppTransition>;

        $i0 = virtualinvoke $r5.<com.android.server.wm.AppTransition: int getAppTransition()>();

        if $i0 == 0 goto label07;

     label06:
        z0 = 1;

        goto label08;

     label07:
        z0 = 0;

     label08:
        if z0 != 0 goto label10;

     label09:
        virtualinvoke r11.<com.android.server.wm.DisplayContent: void prepareAppTransition(int,boolean)>(0, 0);

     label10:
        $r6 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r7 = $r6.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        virtualinvoke $r7.<com.android.server.wm.RootWindowContainer: void ensureActivitiesVisible(com.android.server.wm.ActivityRecord,int,boolean)>(null, 0, 0);

     label11:
        if z0 != 0 goto label13;

     label12:
        virtualinvoke r11.<com.android.server.wm.DisplayContent: void executeAppTransition()>();

     label13:
        exitmonitor r1;

     label14:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        if r9 == null goto label15;

        interfaceinvoke r9.<java.lang.Runnable: void run()>();

     label15:
        return;

     label16:
        $r8 := @caughtexception;

     label17:
        exitmonitor r1;

     label18:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    public void notifyKeyguardTrustedChanged()
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r3, $r4, $r6;
        com.android.server.wm.KeyguardController $r5;
        boolean $z0;
        com.android.server.wm.RootWindowContainer $r7;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r5 = $r4.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.KeyguardController mKeyguardController>;

        $z0 = virtualinvoke $r5.<com.android.server.wm.KeyguardController: boolean isKeyguardShowing(int)>(0);

        if $z0 == 0 goto label2;

        $r6 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r7 = $r6.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        virtualinvoke $r7.<com.android.server.wm.RootWindowContainer: void ensureActivitiesVisible(com.android.server.wm.ActivityRecord,int,boolean)>(null, 0, 0);

     label2:
        exitmonitor r1;

     label3:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label4:
        $r8 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void notifyLockedProfile(int, int)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        int i0, i1, $i3;
        boolean z0, $z1, $z2;
        long l2;
        android.content.pm.IPackageManager $r1;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3, $r5, $r7;
        android.app.ActivityManagerInternal $r4;
        com.android.server.wm.KeyguardController $r6;
        com.android.server.wm.RootWindowContainer $r8;
        java.lang.Throwable $r9, $r12;
        android.os.RemoteException $r10;
        java.lang.SecurityException $r11, r16;
        com.android.server.wm.WindowManagerGlobalLock r13;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

     label01:
        $r1 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        z0 = interfaceinvoke $r1.<android.content.pm.IPackageManager: boolean isUidPrivileged(int)>($i3);

     label02:
        if z0 == 0 goto label15;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r13 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r13;

     label03:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r4 = $r3.<com.android.server.wm.ActivityTaskManagerService: android.app.ActivityManagerInternal mAmInternal>;

        $z1 = virtualinvoke $r4.<android.app.ActivityManagerInternal: boolean shouldConfirmCredentials(int)>(i0);

        if $z1 == 0 goto label06;

        $r5 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r6 = $r5.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.KeyguardController mKeyguardController>;

        $z2 = virtualinvoke $r6.<com.android.server.wm.KeyguardController: boolean isKeyguardLocked()>();

        if $z2 == 0 goto label05;

        virtualinvoke r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: boolean startHomeActivity(int,java.lang.String)>(i1, "notifyLockedProfile");

     label05:
        $r7 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r8 = $r7.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        virtualinvoke $r8.<com.android.server.wm.RootWindowContainer: void lockAllProfileTasks(int)>(i0);

     label06:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

     label07:
        exitmonitor r13;

     label08:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label09:
        $r9 := @caughtexception;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

     label11:
        throw $r9;

     label12:
        $r12 := @caughtexception;

     label13:
        exitmonitor r13;

     label14:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r12;

     label15:
        r16 = new java.lang.SecurityException;

        specialinvoke r16.<java.lang.SecurityException: void <init>(java.lang.String)>("Only privileged app can call notifyLockedProfile");

        throw r16;

     label16:
        $r10 := @caughtexception;

        $r11 = new java.lang.SecurityException;

        specialinvoke $r11.<java.lang.SecurityException: void <init>(java.lang.String,java.lang.Throwable)>("Fail to check is caller a privileged app", $r10);

        throw $r11;

        catch android.os.RemoteException from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label11 to label12 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
        catch android.os.RemoteException from label15 to label16 with label16;
    }

    public void notifySingleTaskDisplayDrawn(int)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        int i0;
        com.android.server.wm.ActivityTaskManagerService $r1;
        com.android.server.wm.TaskChangeNotificationController $r2;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r2 = staticinvoke <com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.TaskChangeNotificationController access$500(com.android.server.wm.ActivityTaskManagerService)>($r1);

        virtualinvoke $r2.<com.android.server.wm.TaskChangeNotificationController: void notifySingleTaskDisplayDrawn(int)>(i0);

        return;
    }

    public void onActiveUidsCleared()
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.ActivityTaskManagerService $r1;
        com.android.server.wm.MirrorActiveUids $r2;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        $r1 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r2 = staticinvoke <com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.MirrorActiveUids access$1500(com.android.server.wm.ActivityTaskManagerService)>($r1);

        virtualinvoke $r2.<com.android.server.wm.MirrorActiveUids: void onActiveUidsCleared()>();

        return;
    }

    public void onCleanUpApplicationRecord(com.android.server.wm.WindowProcessController)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        java.lang.Object r1;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3, $r5, $r7, $r8;
        com.android.server.wm.WindowProcessController $r4, $r6, r10;
        java.lang.Throwable $r9;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r10 := @parameter0: com.android.server.wm.WindowProcessController;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: java.lang.Object mGlobalLockWithoutBoost>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r4 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController mHomeProcess>;

        if r10 != $r4 goto label2;

        $r8 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r8.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController mHomeProcess> = null;

     label2:
        $r5 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r6 = $r5.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController mPreviousProcess>;

        if r10 != $r6 goto label3;

        $r7 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r7.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController mPreviousProcess> = null;

     label3:
        exitmonitor r1;

     label4:
        return;

     label5:
        $r9 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public boolean onForceStopPackage(java.lang.String, boolean, boolean, int)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        boolean z0, z1, $z2, z3, z4;
        int i0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3, $r5;
        com.android.server.wm.ActivityStartController $r4;
        com.android.server.wm.RootWindowContainer $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r8 := @parameter0: java.lang.String;

        z3 := @parameter1: boolean;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r4 = virtualinvoke $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityStartController getActivityStartController()>();

        z1 = virtualinvoke $r4.<com.android.server.wm.ActivityStartController: boolean clearPendingActivityLaunches(java.lang.String)>(r8);

        $r5 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r6 = $r5.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        z4 = virtualinvoke $r6.<com.android.server.wm.RootWindowContainer: boolean finishDisabledPackageActivities(java.lang.String,java.util.Set,boolean,boolean,int)>(r8, null, z3, z0, i0);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        $z2 = z1 | z4;

        return $z2;

     label3:
        $r7 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onHandleAppCrash(com.android.server.wm.WindowProcessController)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3;
        com.android.server.wm.RootWindowContainer $r4;
        java.lang.Throwable $r5;
        com.android.server.wm.WindowProcessController r6;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r6 := @parameter0: com.android.server.wm.WindowProcessController;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r4 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        virtualinvoke $r4.<com.android.server.wm.RootWindowContainer: void handleAppCrash(com.android.server.wm.WindowProcessController)>(r6);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onImeWindowSetOnDisplay(int, int)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        int i0, i1, $i2;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.WindowProcessController r2;
        boolean $z0;
        com.android.server.wm.ActivityTaskManagerService $r3, $r4, $r6;
        com.android.server.wm.RootWindowContainer $r5;
        com.android.server.wm.WindowProcessControllerMap $r7;
        java.lang.Throwable $r8;
        com.android.server.wm.DisplayContent r9;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = <com.android.server.inputmethod.InputMethodSystemProperty: boolean MULTI_CLIENT_IME_ENABLED>;

        if $z0 == 0 goto label01;

        return;

     label01:
        $i2 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if i0 == $i2 goto label16;

        if i0 >= 0 goto label02;

        goto label16;

     label02:
        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label03:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r5 = $r4.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        r9 = virtualinvoke $r5.<com.android.server.wm.RootWindowContainer: com.android.server.wm.DisplayContent getDisplayContent(int)>(i1);

     label04:
        if r9 != null goto label07;

     label05:
        exitmonitor r1;

     label06:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label07:
        $r6 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r7 = $r6.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessControllerMap mProcessMap>;

        r2 = virtualinvoke $r7.<com.android.server.wm.WindowProcessControllerMap: com.android.server.wm.WindowProcessController getProcess(int)>(i0);

     label08:
        if r2 != null goto label11;

     label09:
        exitmonitor r1;

     label10:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label11:
        virtualinvoke r2.<com.android.server.wm.WindowProcessController: void registerDisplayConfigurationListener(com.android.server.wm.DisplayContent)>(r9);

        exitmonitor r1;

     label12:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label13:
        $r8 := @caughtexception;

     label14:
        exitmonitor r1;

     label15:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r8;

     label16:
        return;

        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public void onLocalVoiceInteractionStarted(android.os.IBinder, android.service.voice.IVoiceInteractionSession, com.android.internal.app.IVoiceInteractor)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        android.service.voice.IVoiceInteractionSession r1;
        com.android.internal.app.IVoiceInteractor r2;
        com.android.server.wm.WindowManagerGlobalLock r3;
        com.android.server.wm.ActivityTaskManagerService $r4, $r5;
        java.lang.Throwable $r6;
        android.os.IBinder r7;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r7 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.service.voice.IVoiceInteractionSession;

        r2 := @parameter2: com.android.internal.app.IVoiceInteractor;

        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r3 = $r4.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r3;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r5 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        staticinvoke <com.android.server.wm.ActivityTaskManagerService: void access$400(com.android.server.wm.ActivityTaskManagerService,android.os.IBinder,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor)>($r5, r7, r1, r2);

        exitmonitor r3;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r3;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onPackageAdded(java.lang.String, boolean)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        boolean z0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3;
        com.android.server.wm.CompatModePackages $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r6 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r4 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.CompatModePackages mCompatModePackages>;

        virtualinvoke $r4.<com.android.server.wm.CompatModePackages: void handlePackageAddedLocked(java.lang.String,boolean)>(r6, z0);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onPackageDataCleared(java.lang.String)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3, $r5;
        com.android.server.wm.CompatModePackages $r4;
        com.android.server.wm.AppWarnings $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r8 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r4 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.CompatModePackages mCompatModePackages>;

        virtualinvoke $r4.<com.android.server.wm.CompatModePackages: void handlePackageDataClearedLocked(java.lang.String)>(r8);

        $r5 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r6 = $r5.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.AppWarnings mAppWarnings>;

        virtualinvoke $r6.<com.android.server.wm.AppWarnings: void onPackageDataCleared(java.lang.String)>(r8);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r7 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onPackageReplaced(android.content.pm.ApplicationInfo)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3;
        com.android.server.wm.RootWindowContainer $r4;
        java.lang.Throwable $r5;
        android.content.pm.ApplicationInfo r6;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r6 := @parameter0: android.content.pm.ApplicationInfo;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r4 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        virtualinvoke $r4.<com.android.server.wm.RootWindowContainer: void updateActivityApplicationInfo(android.content.pm.ApplicationInfo)>(r6);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onPackageUninstalled(java.lang.String)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3, $r5;
        com.android.server.wm.AppWarnings $r4;
        com.android.server.wm.CompatModePackages $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r8 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r4 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.AppWarnings mAppWarnings>;

        virtualinvoke $r4.<com.android.server.wm.AppWarnings: void onPackageUninstalled(java.lang.String)>(r8);

        $r5 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r6 = $r5.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.CompatModePackages mCompatModePackages>;

        virtualinvoke $r6.<com.android.server.wm.CompatModePackages: void handlePackageUninstalledLocked(java.lang.String)>(r8);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r7 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onPackagesSuspendedChanged(java.lang.String[], boolean, int)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        boolean z0;
        int i0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3;
        com.android.server.wm.RecentTasks $r4;
        java.lang.Throwable $r5;
        java.lang.String[] r6;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r6 := @parameter0: java.lang.String[];

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r4 = staticinvoke <com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RecentTasks access$1700(com.android.server.wm.ActivityTaskManagerService)>($r3);

        virtualinvoke $r4.<com.android.server.wm.RecentTasks: void onPackagesSuspendedChanged(java.lang.String[],boolean,int)>(r6, z0, i0);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onProcessAdded(com.android.server.wm.WindowProcessController)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        java.lang.Object r1;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3;
        int $i0;
        java.lang.String $r4;
        com.android.internal.app.ProcessMap $r5;
        java.lang.Throwable $r7;
        com.android.server.wm.WindowProcessController r8;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r8 := @parameter0: com.android.server.wm.WindowProcessController;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: java.lang.Object mGlobalLockWithoutBoost>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r5 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r4 = r8.<com.android.server.wm.WindowProcessController: java.lang.String mName>;

        $i0 = r8.<com.android.server.wm.WindowProcessController: int mUid>;

        virtualinvoke $r5.<com.android.internal.app.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>($r4, $i0, r8);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r7 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onProcessMapped(int, com.android.server.wm.WindowProcessController)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        int i0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3;
        com.android.server.wm.WindowProcessControllerMap $r4;
        java.lang.Throwable $r5;
        com.android.server.wm.WindowProcessController r6;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        i0 := @parameter0: int;

        r6 := @parameter1: com.android.server.wm.WindowProcessController;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r4 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessControllerMap mProcessMap>;

        virtualinvoke $r4.<com.android.server.wm.WindowProcessControllerMap: void put(int,com.android.server.wm.WindowProcessController)>(i0, r6);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onProcessRemoved(java.lang.String, int)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        int i0;
        java.lang.Object r1;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3;
        com.android.internal.app.ProcessMap $r4;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r7 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: java.lang.Object mGlobalLockWithoutBoost>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r4 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        virtualinvoke $r4.<com.android.internal.app.ProcessMap: java.lang.Object remove(java.lang.String,int)>(r7, i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onProcessUnMapped(int)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        int i0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r3, $r4;
        com.android.server.wm.WindowProcessControllerMap $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r5 = $r4.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessControllerMap mProcessMap>;

        virtualinvoke $r5.<com.android.server.wm.WindowProcessControllerMap: void remove(int)>(i0);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onUidActive(int, int)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        int i0, i1;
        com.android.server.wm.ActivityTaskManagerService $r1;
        com.android.server.wm.MirrorActiveUids $r2;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r2 = staticinvoke <com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.MirrorActiveUids access$1500(com.android.server.wm.ActivityTaskManagerService)>($r1);

        virtualinvoke $r2.<com.android.server.wm.MirrorActiveUids: void onUidActive(int,int)>(i0, i1);

        return;
    }

    public void onUidAddedToPendingTempWhitelist(int, java.lang.String)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        int i0;
        java.lang.Object r1;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3;
        android.util.SparseArray $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        i0 := @parameter0: int;

        r6 := @parameter1: java.lang.String;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: java.lang.Object mGlobalLockWithoutBoost>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r4 = staticinvoke <com.android.server.wm.ActivityTaskManagerService: android.util.SparseArray access$1600(com.android.server.wm.ActivityTaskManagerService)>($r3);

        virtualinvoke $r4.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r6);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onUidInactive(int)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        int i0;
        com.android.server.wm.ActivityTaskManagerService $r1;
        com.android.server.wm.MirrorActiveUids $r2;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r2 = staticinvoke <com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.MirrorActiveUids access$1500(com.android.server.wm.ActivityTaskManagerService)>($r1);

        virtualinvoke $r2.<com.android.server.wm.MirrorActiveUids: void onUidInactive(int)>(i0);

        return;
    }

    public void onUidProcStateChanged(int, int)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        int i0, i1;
        com.android.server.wm.ActivityTaskManagerService $r1;
        com.android.server.wm.MirrorActiveUids $r2;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r2 = staticinvoke <com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.MirrorActiveUids access$1500(com.android.server.wm.ActivityTaskManagerService)>($r1);

        virtualinvoke $r2.<com.android.server.wm.MirrorActiveUids: void onUidProcStateChanged(int,int)>(i0, i1);

        return;
    }

    public void onUidRemovedFromPendingTempWhitelist(int)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        int i0;
        java.lang.Object r1;
        com.android.server.wm.ActivityTaskManagerService $r3, $r4;
        android.util.SparseArray $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: java.lang.Object mGlobalLockWithoutBoost>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r5 = staticinvoke <com.android.server.wm.ActivityTaskManagerService: android.util.SparseArray access$1600(com.android.server.wm.ActivityTaskManagerService)>($r4);

        virtualinvoke $r5.<android.util.SparseArray: void remove(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onUserStopped(int)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        int i0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r3, $r4, $r6;
        com.android.server.wm.RecentTasks $r5;
        android.util.SparseArray $r7;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r5 = virtualinvoke $r4.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RecentTasks getRecentTasks()>();

        virtualinvoke $r5.<com.android.server.wm.RecentTasks: void unloadUserDataFromMemoryLocked(int)>(i0);

        $r6 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r7 = $r6.<com.android.server.wm.ActivityTaskManagerService: android.util.SparseArray mAllowAppSwitchUids>;

        virtualinvoke $r7.<android.util.SparseArray: void remove(int)>(i0);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r8 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void preBindApplication(com.android.server.wm.WindowProcessController)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        java.lang.Object r1;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3;
        com.android.server.wm.ActivityStackSupervisor $r4;
        com.android.server.wm.ActivityMetricsLogger $r5;
        android.content.pm.ApplicationInfo $r6;
        java.lang.Throwable $r7;
        com.android.server.wm.WindowProcessController r8;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r8 := @parameter0: com.android.server.wm.WindowProcessController;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: java.lang.Object mGlobalLockWithoutBoost>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r4 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityStackSupervisor mStackSupervisor>;

        $r5 = virtualinvoke $r4.<com.android.server.wm.ActivityStackSupervisor: com.android.server.wm.ActivityMetricsLogger getActivityMetricsLogger()>();

        $r6 = r8.<com.android.server.wm.WindowProcessController: android.content.pm.ApplicationInfo mInfo>;

        virtualinvoke $r5.<com.android.server.wm.ActivityMetricsLogger: void notifyBindApplication(android.content.pm.ApplicationInfo)>($r6);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r7 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void rankTaskLayersIfNeeded()
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        java.lang.Object r1;
        com.android.server.wm.ActivityTaskManagerService $r3, $r4, $r6;
        com.android.server.wm.RootWindowContainer $r5, $r7;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: java.lang.Object mGlobalLockWithoutBoost>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r5 = $r4.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        if $r5 == null goto label2;

        $r6 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r7 = $r6.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        virtualinvoke $r7.<com.android.server.wm.RootWindowContainer: void rankTaskLayersIfNeeded()>();

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r8 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void registerScreenObserver(com.android.server.wm.ActivityTaskManagerInternal$ScreenObserver)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.ActivityTaskManagerInternal$ScreenObserver r1;
        com.android.server.wm.ActivityTaskManagerService $r2;
        java.util.List $r3;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r1 := @parameter0: com.android.server.wm.ActivityTaskManagerInternal$ScreenObserver;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r3 = $r2.<com.android.server.wm.ActivityTaskManagerService: java.util.List mScreenObservers>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void removeRecentTasksByPackageName(java.lang.String, int)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        int i0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3;
        com.android.server.wm.RecentTasks $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r6 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r4 = staticinvoke <com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RecentTasks access$1700(com.android.server.wm.ActivityTaskManagerService)>($r3);

        virtualinvoke $r4.<com.android.server.wm.RecentTasks: void removeTasksByPackageName(java.lang.String,int)>(r6, i0);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void removeUser(int)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        int i0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r3, $r4;
        com.android.server.wm.RootWindowContainer $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r5 = $r4.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        virtualinvoke $r5.<com.android.server.wm.RootWindowContainer: void removeUser(int)>(i0);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void resumeTopActivities(boolean)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        boolean z0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r3, $r4, $r6;
        com.android.server.wm.RootWindowContainer $r5;
        com.android.server.wm.ActivityStackSupervisor $r7;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        z0 := @parameter0: boolean;

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r5 = $r4.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        virtualinvoke $r5.<com.android.server.wm.RootWindowContainer: boolean resumeFocusedStacksTopActivities()>();

     label2:
        if z0 == 0 goto label4;

     label3:
        $r6 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r7 = $r6.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r7.<com.android.server.wm.ActivityStackSupervisor: void scheduleIdle()>();

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label6:
        $r8 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void saveANRState(java.lang.String)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        java.io.StringWriter r2;
        com.android.internal.util.FastPrintWriter r3;
        java.text.DateFormat r4;
        java.util.Date r5;
        com.android.server.wm.ActivityTaskManagerService $r6, $r11, $r13, $r14;
        java.lang.String $r8, $r10, $r15, $r18, r20;
        com.android.server.wm.ActivityStartController $r12;
        java.lang.Throwable $r19;
        java.lang.StringBuilder r21, r22;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r20 := @parameter0: java.lang.String;

        $r6 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r6.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        r2 = new java.io.StringWriter;

        specialinvoke r2.<java.io.StringWriter: void <init>()>();

        r3 = new com.android.internal.util.FastPrintWriter;

        specialinvoke r3.<com.android.internal.util.FastPrintWriter: void <init>(java.io.Writer,boolean,int)>(r2, 0, 1024);

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ANR time: ");

        r4 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateTimeInstance()>();

        r5 = new java.util.Date;

        specialinvoke r5.<java.util.Date: void <init>()>();

        $r8 = virtualinvoke r4.<java.text.DateFormat: java.lang.String format(java.util.Date)>(r5);

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>($r10);

     label2:
        if r20 == null goto label4;

     label3:
        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Reason: ");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        $r18 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>($r18);

     label4:
        virtualinvoke r3.<java.io.PrintWriter: void println()>();

        $r11 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r12 = virtualinvoke $r11.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityStartController getActivityStartController()>();

        virtualinvoke $r12.<com.android.server.wm.ActivityStartController: void dump(java.io.PrintWriter,java.lang.String,java.lang.String)>(r3, "  ", null);

        virtualinvoke r3.<java.io.PrintWriter: void println()>();

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>("-------------------------------------------------------------------------------");

        $r13 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        virtualinvoke $r13.<com.android.server.wm.ActivityTaskManagerService: void dumpActivitiesLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,boolean,java.lang.String,java.lang.String)>(null, r3, null, 0, 1, 0, null, "");

        virtualinvoke r3.<java.io.PrintWriter: void println()>();

        virtualinvoke r3.<java.io.PrintWriter: void close()>();

        $r14 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r15 = virtualinvoke r2.<java.io.StringWriter: java.lang.String toString()>();

        $r14.<com.android.server.wm.ActivityTaskManagerService: java.lang.String mLastANRState> = $r15;

        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label6:
        $r19 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r19;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void scheduleDestroyAllActivities(java.lang.String)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3;
        com.android.server.wm.RootWindowContainer $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r6 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r4 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        virtualinvoke $r4.<com.android.server.wm.RootWindowContainer: void scheduleDestroyAllActivities(java.lang.String)>(r6);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void sendActivityResult(int, android.os.IBinder, java.lang.String, int, int, android.content.Intent)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        int i0, i1, i2;
        java.lang.String r1;
        android.content.Intent r2;
        com.android.server.uri.NeededUriGrants r3;
        com.android.server.wm.ActivityTaskManagerService $r4, $r6, $r7;
        com.android.server.wm.ActivityStack $r5;
        java.lang.Throwable $r8, $r9, $r10, r16;
        android.os.IBinder r11;
        com.android.server.wm.WindowManagerGlobalLock r12, r14;
        com.android.server.wm.ActivityRecord r13;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        i0 := @parameter0: int;

        r11 := @parameter1: android.os.IBinder;

        r1 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r2 := @parameter5: android.content.Intent;

        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r12 = $r4.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r12;

     label01:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        r13 = staticinvoke <com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityRecord isInStackLocked(android.os.IBinder)>(r11);

     label02:
        if r13 == null goto label12;

     label03:
        $r5 = virtualinvoke r13.<com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityStack getRootTask()>();

        if $r5 != null goto label05;

     label04:
        goto label12;

     label05:
        exitmonitor r12;

     label06:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        $r6 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r3 = staticinvoke <com.android.server.wm.ActivityTaskManagerService: com.android.server.uri.NeededUriGrants access$1200(com.android.server.wm.ActivityTaskManagerService,android.content.Intent,com.android.server.wm.ActivityRecord)>($r6, r2, r13);

        $r7 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r14 = $r7.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r14;

     label07:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        virtualinvoke r13.<com.android.server.wm.ActivityRecord: void sendResult(int,java.lang.String,int,int,android.content.Intent,com.android.server.uri.NeededUriGrants)>(i0, r1, i1, i2, r2, r3);

        exitmonitor r14;

     label08:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label09:
        $r10 := @caughtexception;

     label10:
        exitmonitor r14;

     label11:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r10;

     label12:
        exitmonitor r12;

     label13:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label14:
        $r8 := @caughtexception;

        r16 = $r8;

     label15:
        exitmonitor r12;

     label16:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw r16;

     label17:
        $r9 := @caughtexception;

        r16 = $r9;

        goto label15;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
    }

    public void setAllowAppSwitches(java.lang.String, int, int)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        int i0, i1;
        com.android.server.wm.WindowManagerGlobalLock r1;
        android.util.ArrayMap r2, r16;
        com.android.server.wm.ActivityTaskManagerService $r3, $r5, $r6, $r12;
        android.app.ActivityManagerInternal $r4;
        boolean $z0;
        android.util.SparseArray $r7, $r13;
        java.lang.Object $r8;
        java.lang.Integer $r9;
        java.lang.Throwable $r14;
        java.lang.String r15;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r15 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r4 = $r3.<com.android.server.wm.ActivityTaskManagerService: android.app.ActivityManagerInternal mAmInternal>;

        $z0 = virtualinvoke $r4.<android.app.ActivityManagerInternal: boolean isUserRunning(int,int)>(i1, 1);

        if $z0 != 0 goto label01;

        return;

     label01:
        $r5 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r5.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label02:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r6 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r7 = $r6.<com.android.server.wm.ActivityTaskManagerService: android.util.SparseArray mAllowAppSwitchUids>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r2 = (android.util.ArrayMap) $r8;

     label03:
        r16 = r2;

        if r2 != null goto label08;

        if i0 >= 0 goto label06;

     label04:
        exitmonitor r1;

     label05:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label06:
        r16 = new android.util.ArrayMap;

        specialinvoke r16.<android.util.ArrayMap: void <init>()>();

     label07:
        $r12 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r13 = $r12.<com.android.server.wm.ActivityTaskManagerService: android.util.SparseArray mAllowAppSwitchUids>;

        virtualinvoke $r13.<android.util.SparseArray: void put(int,java.lang.Object)>(i1, r16);

     label08:
        if i0 >= 0 goto label11;

     label09:
        virtualinvoke r16.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r15);

     label10:
        goto label12;

     label11:
        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke r16.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r15, $r9);

     label12:
        exitmonitor r1;

     label13:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label14:
        $r14 := @caughtexception;

     label15:
        exitmonitor r1;

     label16:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r14;

        catch java.lang.Throwable from label02 to label03 with label14;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label11 to label12 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    public void setCompanionAppPackages(int, java.util.Set)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        int i0, i1;
        java.util.Iterator r1;
        java.util.HashSet $r2;
        boolean $z0;
        com.android.server.wm.ActivityTaskManagerService $r3, $r4, $r9;
        java.util.Map $r5;
        java.lang.Integer $r6, $r11;
        java.lang.Object $r8;
        android.content.pm.PackageManagerInternal $r10;
        java.lang.Throwable $r12;
        java.util.Set r13;
        java.lang.String r15;
        com.android.server.wm.WindowManagerGlobalLock r16;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        i0 := @parameter0: int;

        r13 := @parameter1: java.util.Set;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r1 = interfaceinvoke r13.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r15 = (java.lang.String) $r8;

        $r9 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r10 = virtualinvoke $r9.<com.android.server.wm.ActivityTaskManagerService: android.content.pm.PackageManagerInternal getPackageManagerInternalLocked()>();

        i1 = virtualinvoke $r10.<android.content.pm.PackageManagerInternal: int getPackageUid(java.lang.String,int,int)>(r15, 0, i0);

        if i1 < 0 goto label2;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r11);

     label2:
        goto label1;

     label3:
        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r16 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r16;

     label4:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r5 = staticinvoke <com.android.server.wm.ActivityTaskManagerService: java.util.Map access$2000(com.android.server.wm.ActivityTaskManagerService)>($r4);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r2);

        exitmonitor r16;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label6:
        $r12 := @caughtexception;

     label7:
        exitmonitor r16;

     label8:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r12;

        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void setDeviceOwnerUid(int)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        int i0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        virtualinvoke $r4.<com.android.server.wm.ActivityTaskManagerService: void setDeviceOwnerUid(int)>(i0);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setFocusedActivity(android.os.IBinder)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        java.lang.StringBuilder r2;
        com.android.server.wm.ActivityTaskManagerService $r3, $r7;
        java.lang.String $r6;
        boolean $z0;
        com.android.server.wm.RootWindowContainer $r8;
        java.lang.Throwable $r9;
        android.os.IBinder r10;
        com.android.server.wm.ActivityRecord r11;
        java.lang.IllegalArgumentException r12;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r10 := @parameter0: android.os.IBinder;

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        r11 = staticinvoke <com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityRecord forTokenLocked(android.os.IBinder)>(r10);

     label2:
        if r11 == null goto label6;

     label3:
        $z0 = virtualinvoke r11.<com.android.server.wm.ActivityRecord: boolean moveFocusableActivityToTop(java.lang.String)>("setFocusedActivity");

        if $z0 == 0 goto label4;

        $r7 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r8 = $r7.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        virtualinvoke $r8.<com.android.server.wm.RootWindowContainer: boolean resumeFocusedStacksTopActivities()>();

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label6:
        r12 = new java.lang.IllegalArgumentException;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setFocusedActivity: No activity record matching token=");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);

        $r6 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw r12;

     label7:
        $r9 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label6 to label7 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void setProfileApp(java.lang.String)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3;
        java.lang.Throwable $r4;
        java.lang.String r5;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r5 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r3.<com.android.server.wm.ActivityTaskManagerService: java.lang.String mProfileApp> = r5;

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setProfileProc(com.android.server.wm.WindowProcessController)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3;
        java.lang.Throwable $r4;
        com.android.server.wm.WindowProcessController r5;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r5 := @parameter0: com.android.server.wm.WindowProcessController;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController mProfileProc> = r5;

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setProfilerInfo(android.app.ProfilerInfo)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3;
        java.lang.Throwable $r4;
        android.app.ProfilerInfo r5;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r5 := @parameter0: android.app.ProfilerInfo;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r3.<com.android.server.wm.ActivityTaskManagerService: android.app.ProfilerInfo mProfilerInfo> = r5;

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setVr2dDisplayId(int)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        int i0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r4.<com.android.server.wm.ActivityTaskManagerService: int mVr2dDisplayId> = i0;

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean showStrictModeViolationDialog()
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z2, z3;
        java.lang.Throwable $r7;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $z0 = staticinvoke <com.android.server.wm.ActivityTaskManagerService: boolean access$1000(com.android.server.wm.ActivityTaskManagerService)>($r4);

        if $z0 == 0 goto label3;

        $r5 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $z1 = staticinvoke <com.android.server.wm.ActivityTaskManagerService: boolean access$1100(com.android.server.wm.ActivityTaskManagerService)>($r5);

        if $z1 != 0 goto label3;

        $r6 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $z2 = $r6.<com.android.server.wm.ActivityTaskManagerService: boolean mShuttingDown>;

        if $z2 != 0 goto label3;

     label2:
        z3 = 1;

        goto label4;

     label3:
        z3 = 0;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return z3;

     label6:
        $r7 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void showSystemReadyErrorDialogsIfNeeded()
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r2, $r4, $r5;
        android.content.pm.IPackageManager $r3;
        boolean $z0, $z1;
        android.os.RemoteException $r6;
        java.lang.Throwable $r7;
        com.android.server.wm.ActivityTaskManagerService$UiHandler r8, r12;
        com.android.server.wm._$$Lambda$ActivityTaskManagerService$LocalService$hXNJNh8HjV10X1ZEOI6o0Yzmq8o r9;
        com.android.server.wm._$$Lambda$ActivityTaskManagerService$LocalService$xIfx_hFO4SXy_Nq34zoEHe3S9eU r13;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $z0 = interfaceinvoke $r3.<android.content.pm.IPackageManager: boolean hasSystemUidErrors()>();

        if $z0 == 0 goto label2;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityTaskManager", "UIDs on the system are inconsistent, you need to wipe your data partition or your device will be unstable.");

        $r5 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r8 = $r5.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityTaskManagerService$UiHandler mUiHandler>;

        r9 = new com.android.server.wm._$$Lambda$ActivityTaskManagerService$LocalService$hXNJNh8HjV10X1ZEOI6o0Yzmq8o;

        specialinvoke r9.<com.android.server.wm._$$Lambda$ActivityTaskManagerService$LocalService$hXNJNh8HjV10X1ZEOI6o0Yzmq8o: void <init>(com.android.server.wm.ActivityTaskManagerService$LocalService)>(r0);

        virtualinvoke r8.<com.android.server.wm.ActivityTaskManagerService$UiHandler: boolean post(java.lang.Runnable)>(r9);

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        goto label8;

     label4:
        $r6 := @caughtexception;

     label5:
        $z1 = staticinvoke <android.os.Build: boolean isBuildConsistent()>();

        if $z1 != 0 goto label6;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityTaskManager", "Build fingerprint is not consistent, warning user");

        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r12 = $r4.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityTaskManagerService$UiHandler mUiHandler>;

        r13 = new com.android.server.wm._$$Lambda$ActivityTaskManagerService$LocalService$xIfx_hFO4SXy_Nq34zoEHe3S9eU;

        specialinvoke r13.<com.android.server.wm._$$Lambda$ActivityTaskManagerService$LocalService$xIfx_hFO4SXy_Nq34zoEHe3S9eU: void <init>(com.android.server.wm.ActivityTaskManagerService$LocalService)>(r0);

        virtualinvoke r12.<com.android.server.wm.ActivityTaskManagerService$UiHandler: boolean post(java.lang.Runnable)>(r13);

     label6:
        exitmonitor r1;

     label7:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label8:
        exitmonitor r1;

     label9:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r7;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
        catch java.lang.Throwable from label6 to label7 with label3;
        catch java.lang.Throwable from label8 to label9 with label3;
    }

    public boolean shuttingDown(boolean, int)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        int i0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r3, $r4, $r5, $r7, $r8, $r9;
        com.android.server.wm.RootWindowContainer $r6;
        com.android.server.wm.ActivityStackSupervisor $r10;
        java.lang.Throwable $r11;
        boolean z0, z1;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r4.<com.android.server.wm.ActivityTaskManagerService: boolean mShuttingDown> = 1;

        $r5 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r6 = $r5.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        virtualinvoke $r6.<com.android.server.wm.RootWindowContainer: void prepareForShutdown()>();

        $r7 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        staticinvoke <com.android.server.wm.ActivityTaskManagerService: void access$900(com.android.server.wm.ActivityTaskManagerService,boolean)>($r7, z0);

        $r8 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        virtualinvoke $r8.<com.android.server.wm.ActivityTaskManagerService: void notifyTaskPersisterLocked(com.android.server.wm.Task,boolean)>(null, 1);

        $r9 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r10 = $r9.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityStackSupervisor mStackSupervisor>;

        z1 = virtualinvoke $r10.<com.android.server.wm.ActivityStackSupervisor: boolean shutdownLocked(int)>(i0);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return z1;

     label3:
        $r11 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int startActivitiesAsPackage(java.lang.String, java.lang.String, int, android.content.Intent[], android.os.Bundle)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        java.lang.String r1, $r10, r15;
        int i0, $i2, $i3, i4, i5, $i6;
        android.content.Intent[] r2;
        android.os.Bundle r3;
        java.lang.String[] r4;
        long l1;
        com.android.server.wm.ActivityTaskManagerService $r6, $r20;
        android.content.Context $r7;
        android.content.Intent $r8;
        android.content.ContentResolver $r9;
        java.lang.Throwable $r11, $r14, r17;
        android.os.RemoteException $r12, $r13;
        android.content.pm.IPackageManager r16;
        com.android.server.wm.ActivityStartController $r21;
        com.android.server.wm.SafeActivityOptions $r22;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r15 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 := @parameter3: android.content.Intent[];

        r3 := @parameter4: android.os.Bundle;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r2, "intents");

        $i2 = lengthof r2;

        r4 = newarray (java.lang.String)[$i2];

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        i4 = 0;

     label01:
        $i3 = lengthof r2;

        if i4 >= $i3 goto label03;

        $r8 = r2[i4];

        $r6 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r7 = $r6.<com.android.server.wm.ActivityTaskManagerService: android.content.Context mContext>;

        $r9 = virtualinvoke $r7.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r10 = virtualinvoke $r8.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r9);

        r4[i4] = $r10;

     label02:
        i4 = i4 + 1;

        goto label01;

     label03:
        r16 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

     label04:
        i5 = interfaceinvoke r16.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int,int)>(r15, 268435456, i0);

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label12;

     label06:
        $r11 := @caughtexception;

        r17 = $r11;

        goto label09;

     label07:
        $r13 := @caughtexception;

        goto label11;

     label08:
        $r14 := @caughtexception;

        r17 = $r14;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r17;

     label10:
        $r12 := @caughtexception;

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        i5 = 0;

     label12:
        $r20 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r21 = virtualinvoke $r20.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityStartController getActivityStartController()>();

        $r22 = staticinvoke <com.android.server.wm.SafeActivityOptions: com.android.server.wm.SafeActivityOptions fromBundle(android.os.Bundle)>(r3);

        $i6 = virtualinvoke $r21.<com.android.server.wm.ActivityStartController: int startActivitiesInPackage(int,java.lang.String,java.lang.String,android.content.Intent[],java.lang.String[],android.os.IBinder,com.android.server.wm.SafeActivityOptions,int,boolean,com.android.server.am.PendingIntentRecord,boolean)>(i5, r15, r1, r2, r4, null, $r22, i0, 0, null, 0);

        return $i6;

        catch android.os.RemoteException from label01 to label02 with label10;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch android.os.RemoteException from label03 to label04 with label10;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch android.os.RemoteException from label04 to label05 with label07;
        catch java.lang.Throwable from label04 to label05 with label06;
    }

    public int startActivitiesInPackage(int, int, int, java.lang.String, java.lang.String, android.content.Intent[], java.lang.String[], android.os.IBinder, com.android.server.wm.SafeActivityOptions, int, boolean, com.android.server.am.PendingIntentRecord, boolean)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        int i0, i1, i2, i3, $i4;
        java.lang.String r1, r2;
        android.content.Intent[] r3;
        java.lang.String[] r4;
        android.os.IBinder r5;
        com.android.server.wm.SafeActivityOptions r6;
        boolean z0, z1;
        com.android.server.am.PendingIntentRecord r7;
        com.android.server.wm.ActivityTaskManagerService $r8, $r9;
        com.android.server.wm.ActivityStartController $r10;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: java.lang.String;

        r3 := @parameter5: android.content.Intent[];

        r4 := @parameter6: java.lang.String[];

        r5 := @parameter7: android.os.IBinder;

        r6 := @parameter8: com.android.server.wm.SafeActivityOptions;

        i3 := @parameter9: int;

        z0 := @parameter10: boolean;

        r7 := @parameter11: com.android.server.am.PendingIntentRecord;

        z1 := @parameter12: boolean;

        $r8 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        virtualinvoke $r8.<com.android.server.wm.ActivityTaskManagerService: void assertPackageMatchesCallingUid(java.lang.String)>(r1);

        $r9 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r10 = virtualinvoke $r9.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityStartController getActivityStartController()>();

        $i4 = virtualinvoke $r10.<com.android.server.wm.ActivityStartController: int startActivitiesInPackage(int,int,int,java.lang.String,java.lang.String,android.content.Intent[],java.lang.String[],android.os.IBinder,com.android.server.wm.SafeActivityOptions,int,boolean,com.android.server.am.PendingIntentRecord,boolean)>(i0, i1, i2, r1, r2, r3, r4, r5, r6, i3, z0, r7, z1);

        return $i4;
    }

    public int startActivityAsUser(android.app.IApplicationThread, java.lang.String, java.lang.String, android.content.Intent, android.os.IBinder, int, android.os.Bundle, int)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        android.app.IApplicationThread r1;
        java.lang.String r2, r3, $r10;
        android.content.Intent r4;
        android.os.IBinder r5;
        int i0, i1, $i2;
        android.os.Bundle r6;
        com.android.server.wm.ActivityTaskManagerService r7;
        android.content.Context $r8;
        android.content.ContentResolver $r9;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.content.Intent;

        r5 := @parameter4: android.os.IBinder;

        i0 := @parameter5: int;

        r6 := @parameter6: android.os.Bundle;

        i1 := @parameter7: int;

        r7 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r8 = r7.<com.android.server.wm.ActivityTaskManagerService: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r10 = virtualinvoke r4.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r9);

        $i2 = staticinvoke <com.android.server.wm.ActivityTaskManagerService: int access$600(com.android.server.wm.ActivityTaskManagerService,android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int,boolean)>(r7, r1, r2, r3, r4, $r10, r5, null, 0, i0, null, r6, i1, 0);

        return $i2;
    }

    public int startActivityInPackage(int, int, int, java.lang.String, java.lang.String, android.content.Intent, java.lang.String, android.os.IBinder, java.lang.String, int, int, com.android.server.wm.SafeActivityOptions, int, com.android.server.wm.Task, java.lang.String, boolean, com.android.server.am.PendingIntentRecord, boolean)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        int i0, i1, i2, i3, i4, i5, $i6;
        java.lang.String r1, r2, r4, r6, r9;
        android.content.Intent r3;
        android.os.IBinder r5;
        com.android.server.wm.SafeActivityOptions r7;
        com.android.server.wm.Task r8;
        boolean z0, z1;
        com.android.server.am.PendingIntentRecord r10;
        com.android.server.wm.ActivityTaskManagerService $r11, $r12;
        com.android.server.wm.ActivityStartController $r13;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: java.lang.String;

        r3 := @parameter5: android.content.Intent;

        r4 := @parameter6: java.lang.String;

        r5 := @parameter7: android.os.IBinder;

        r6 := @parameter8: java.lang.String;

        i3 := @parameter9: int;

        i4 := @parameter10: int;

        r7 := @parameter11: com.android.server.wm.SafeActivityOptions;

        i5 := @parameter12: int;

        r8 := @parameter13: com.android.server.wm.Task;

        r9 := @parameter14: java.lang.String;

        z0 := @parameter15: boolean;

        r10 := @parameter16: com.android.server.am.PendingIntentRecord;

        z1 := @parameter17: boolean;

        $r11 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        virtualinvoke $r11.<com.android.server.wm.ActivityTaskManagerService: void assertPackageMatchesCallingUid(java.lang.String)>(r1);

        $r12 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r13 = virtualinvoke $r12.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityStartController getActivityStartController()>();

        $i6 = virtualinvoke $r13.<com.android.server.wm.ActivityStartController: int startActivityInPackage(int,int,int,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,com.android.server.wm.SafeActivityOptions,int,com.android.server.wm.Task,java.lang.String,boolean,com.android.server.am.PendingIntentRecord,boolean)>(i0, i1, i2, r1, r2, r3, r4, r5, r6, i3, i4, r7, i5, r8, r9, z0, r10, z1);

        return $i6;
    }

    public void startConfirmDeviceCredentialIntent(android.content.Intent, android.os.Bundle)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        long l0;
        android.app.ActivityOptions r2, r15;
        com.android.server.wm.ActivityTaskManagerService $r3, $r5, $r7;
        android.app.ActivityManagerInternal $r4;
        android.content.Context $r8;
        android.os.Bundle $r9, r14;
        android.os.UserHandle $r10;
        java.lang.Throwable $r11, $r12;
        android.content.Intent r13;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r13 := @parameter0: android.content.Intent;

        r14 := @parameter1: android.os.Bundle;

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r4 = $r3.<com.android.server.wm.ActivityTaskManagerService: android.app.ActivityManagerInternal mAmInternal>;

        virtualinvoke $r4.<android.app.ActivityManagerInternal: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.MANAGE_ACTIVITY_STACKS", "startConfirmDeviceCredentialIntent");

        $r5 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r5.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label01:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        virtualinvoke r13.<android.content.Intent: android.content.Intent addFlags(int)>(276824064);

     label03:
        if r14 == null goto label06;

     label04:
        r2 = new android.app.ActivityOptions;

        specialinvoke r2.<android.app.ActivityOptions: void <init>(android.os.Bundle)>(r14);

     label05:
        r15 = r2;

        goto label07;

     label06:
        r15 = staticinvoke <android.app.ActivityOptions: android.app.ActivityOptions makeBasic()>();

     label07:
        $r7 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r8 = $r7.<com.android.server.wm.ActivityTaskManagerService: android.content.Context mContext>;

        $r9 = virtualinvoke r15.<android.app.ActivityOptions: android.os.Bundle toBundle()>();

        $r10 = <android.os.UserHandle: android.os.UserHandle CURRENT>;

        virtualinvoke $r8.<android.content.Context: void startActivityAsUser(android.content.Intent,android.os.Bundle,android.os.UserHandle)>(r13, $r9, $r10);

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label09:
        exitmonitor r1;

     label10:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label11:
        $r12 := @caughtexception;

     label12:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label13:
        throw $r12;

     label14:
        $r11 := @caughtexception;

     label15:
        exitmonitor r1;

     label16:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label13 to label14 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    public boolean startHomeActivity(int, java.lang.String)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        int i0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        boolean z0;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3;
        com.android.server.wm.RootWindowContainer $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        i0 := @parameter0: int;

        r6 := @parameter1: java.lang.String;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r4 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        z0 = virtualinvoke $r4.<com.android.server.wm.RootWindowContainer: boolean startHomeOnDisplay(int,java.lang.String,int)>(i0, r6, 0);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return z0;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean startHomeOnAllDisplays(int, java.lang.String)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        int i0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        boolean z0;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3;
        com.android.server.wm.RootWindowContainer $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        i0 := @parameter0: int;

        r6 := @parameter1: java.lang.String;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r4 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        z0 = virtualinvoke $r4.<com.android.server.wm.RootWindowContainer: boolean startHomeOnAllDisplays(int,java.lang.String)>(i0, r6);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return z0;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean startHomeOnDisplay(int, java.lang.String, int, boolean, boolean)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        int i0, i1;
        boolean z0, z1, z2;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3;
        com.android.server.wm.RootWindowContainer $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        i0 := @parameter0: int;

        r6 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        z1 := @parameter3: boolean;

        z0 := @parameter4: boolean;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r4 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        z2 = virtualinvoke $r4.<com.android.server.wm.RootWindowContainer: boolean startHomeOnDisplay(int,java.lang.String,int,boolean,boolean)>(i0, r6, i1, z1, z0);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return z2;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean switchUser(int, com.android.server.am.UserState)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        int i0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        boolean z0;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3;
        com.android.server.wm.RootWindowContainer $r4;
        java.lang.Throwable $r5;
        com.android.server.am.UserState r6;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        i0 := @parameter0: int;

        r6 := @parameter1: com.android.server.am.UserState;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r4 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        z0 = virtualinvoke $r4.<com.android.server.wm.RootWindowContainer: boolean switchUser(int,com.android.server.am.UserState)>(i0, r6);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return z0;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void updateTopComponentForFactoryTest()
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService r2, $r3, $r4, $r5, $r7, $r10, $r11, $r12, $r13, $r14, $r17, $r18;
        int $i0, $i1, $i2;
        android.content.Context $r6, $r8, $r15;
        android.content.res.Resources $r9, $r16;
        java.lang.String $r19, $r20;
        java.lang.Throwable $r21;
        android.content.pm.PackageManager r22;
        android.content.Intent r23;
        android.content.pm.ResolveInfo r24;
        android.content.pm.ActivityInfo r25;
        android.content.pm.ApplicationInfo r26;
        android.content.ComponentName r27;
        java.lang.CharSequence r28;
        com.android.server.wm.ActivityTaskManagerService$UiHandler r29;
        com.android.server.wm._$$Lambda$ActivityTaskManagerService$LocalService$smesvyl87CxHptMAvRA559Glc1k r30;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label01:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r4 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $i0 = $r4.<com.android.server.wm.ActivityTaskManagerService: int mFactoryTest>;

        if $i0 == 1 goto label03;

        exitmonitor r1;

     label02:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label03:
        $r5 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r6 = $r5.<com.android.server.wm.ActivityTaskManagerService: android.content.Context mContext>;

        r22 = virtualinvoke $r6.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r23 = new android.content.Intent;

        specialinvoke r23.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.FACTORY_TEST");

        r24 = virtualinvoke r22.<android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)>(r23, 1024);

     label04:
        if r24 == null goto label09;

     label05:
        r25 = r24.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        r26 = r25.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = r26.<android.content.pm.ApplicationInfo: int flags>;

        $i2 = 1 & $i1;

        if $i2 == 0 goto label07;

        $r17 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r17.<com.android.server.wm.ActivityTaskManagerService: java.lang.String mTopAction> = "android.intent.action.FACTORY_TEST";

        $r18 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r18.<com.android.server.wm.ActivityTaskManagerService: java.lang.String mTopData> = null;

        r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r27 = new android.content.ComponentName;

        $r20 = r26.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r19 = r25.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke r27.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r20, $r19);

        r2.<com.android.server.wm.ActivityTaskManagerService: android.content.ComponentName mTopComponent> = r27;

     label06:
        r28 = null;

        goto label08;

     label07:
        $r14 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r15 = $r14.<com.android.server.wm.ActivityTaskManagerService: android.content.Context mContext>;

        $r16 = virtualinvoke $r15.<android.content.Context: android.content.res.Resources getResources()>();

        r28 = virtualinvoke $r16.<android.content.res.Resources: java.lang.CharSequence getText(int)>(17040184);

     label08:
        goto label10;

     label09:
        $r7 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r8 = $r7.<com.android.server.wm.ActivityTaskManagerService: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: android.content.res.Resources getResources()>();

        r28 = virtualinvoke $r9.<android.content.res.Resources: java.lang.CharSequence getText(int)>(17040183);

     label10:
        if r28 != null goto label13;

     label11:
        exitmonitor r1;

     label12:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label13:
        $r10 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r10.<com.android.server.wm.ActivityTaskManagerService: java.lang.String mTopAction> = null;

        $r11 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r11.<com.android.server.wm.ActivityTaskManagerService: java.lang.String mTopData> = null;

        $r12 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r12.<com.android.server.wm.ActivityTaskManagerService: android.content.ComponentName mTopComponent> = null;

        $r13 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r29 = $r13.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityTaskManagerService$UiHandler mUiHandler>;

        r30 = new com.android.server.wm._$$Lambda$ActivityTaskManagerService$LocalService$smesvyl87CxHptMAvRA559Glc1k;

        specialinvoke r30.<com.android.server.wm._$$Lambda$ActivityTaskManagerService$LocalService$smesvyl87CxHptMAvRA559Glc1k: void <init>(com.android.server.wm.ActivityTaskManagerService$LocalService,java.lang.CharSequence)>(r0, r28);

        virtualinvoke r29.<com.android.server.wm.ActivityTaskManagerService$UiHandler: boolean post(java.lang.Runnable)>(r30);

     label14:
        exitmonitor r1;

     label15:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label16:
        $r21 := @caughtexception;

     label17:
        exitmonitor r1;

     label18:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r21;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    public void updateUserConfiguration()
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        int i0;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3, $r5, $r7, $r10, $r12;
        android.content.res.Configuration $r4, r14;
        android.app.ActivityManagerInternal $r6;
        android.content.Context $r8, $r11;
        android.content.ContentResolver $r9;
        boolean $z0;
        java.lang.Throwable $r13;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        r14 = new android.content.res.Configuration;

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r4 = virtualinvoke $r3.<com.android.server.wm.ActivityTaskManagerService: android.content.res.Configuration getGlobalConfiguration()>();

        specialinvoke r14.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>($r4);

        $r5 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r6 = $r5.<com.android.server.wm.ActivityTaskManagerService: android.app.ActivityManagerInternal mAmInternal>;

        i0 = virtualinvoke $r6.<android.app.ActivityManagerInternal: int getCurrentUserId()>();

        $r7 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r8 = $r7.<com.android.server.wm.ActivityTaskManagerService: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r10 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r11 = $r10.<com.android.server.wm.ActivityTaskManagerService: android.content.Context mContext>;

        $z0 = staticinvoke <android.provider.Settings$System: boolean canWrite(android.content.Context)>($r11);

        staticinvoke <android.provider.Settings$System: void adjustConfigurationForUser(android.content.ContentResolver,android.content.res.Configuration,int,boolean)>($r9, r14, i0, $z0);

        $r12 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        staticinvoke <com.android.server.wm.ActivityTaskManagerService: boolean access$1800(com.android.server.wm.ActivityTaskManagerService,android.content.res.Configuration,com.android.server.wm.ActivityRecord,boolean,boolean,int,boolean)>($r12, r14, null, 0, 0, i0, 0);

     label2:
        exitmonitor r1;

     label3:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label4:
        $r13 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r13;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void writeActivitiesToProto(android.util.proto.ProtoOutputStream)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r2, $r3;
        com.android.server.wm.RootWindowContainer $r4;
        java.lang.Throwable $r5;
        android.util.proto.ProtoOutputStream r6;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r6 := @parameter0: android.util.proto.ProtoOutputStream;

        $r2 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r4 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        virtualinvoke $r4.<com.android.server.wm.RootWindowContainer: void dumpDebug(android.util.proto.ProtoOutputStream,long,int)>(r6, 1146756268034L, 0);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void writeProcessesToProto(android.util.proto.ProtoOutputStream, java.lang.String, int, boolean)
    {
        com.android.server.wm.ActivityTaskManagerService$LocalService r0;
        java.lang.String r1, $r48, $r52, r68;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        com.android.server.wm.WindowManagerGlobalLock r2;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        com.android.server.wm.ActivityTaskManagerService $r5, $r6, $r8, $r14, $r16, $r19, $r21, $r22, $r25, $r27, $r30, $r32, $r33, $r34, $r36, $r38, $r40, $r43, $r46, $r49, $r50, $r53, $r58, $r60, $r62, $r64;
        com.android.server.am.AppTimeTracker $r7, $r9;
        java.lang.Object $r10, $r11, $r12;
        java.lang.Integer $r13;
        com.android.server.wm.WindowProcessController $r15, $r17, $r20, $r23, $r26, $r28, $r59, $r61, $r63;
        android.util.ArraySet $r18, $r24, $r29;
        long $l0, l2, l3, l5;
        android.content.res.Configuration $r31;
        android.service.voice.IVoiceInteractionSession $r35, $r51;
        com.android.server.wm.VrController $r37;
        android.app.IActivityController $r39, $r47;
        com.android.server.wm.ActivityStackSupervisor $r41, $r44;
        android.os.PowerManager$WakeLock $r42, $r45, $r54;
        java.lang.Throwable $r55;
        android.util.proto.ProtoOutputStream r56;
        int i1, i4;
        com.android.server.wm.ActivityStack r57;
        com.android.server.wm.CompatModePackages $r65;
        java.util.HashMap $r66;
        java.util.Set $r67;

        r0 := @this: com.android.server.wm.ActivityTaskManagerService$LocalService;

        r56 := @parameter0: android.util.proto.ProtoOutputStream;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r5 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r2 = $r5.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r2;

     label01:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

     label02:
        if r1 != null goto label09;

     label03:
        $r30 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r31 = virtualinvoke $r30.<com.android.server.wm.ActivityTaskManagerService: android.content.res.Configuration getGlobalConfiguration()>();

        virtualinvoke $r31.<android.content.res.Configuration: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r56, 1146756268051L);

        $r32 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        r57 = virtualinvoke $r32.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityStack getTopDisplayFocusedStack()>();

     label04:
        if r57 == null goto label06;

     label05:
        $z6 = r57.<com.android.server.wm.ActivityStack: boolean mConfigWillChange>;

        virtualinvoke r56.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366165L, $z6);

     label06:
        $r33 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        staticinvoke <com.android.server.wm.ActivityTaskManagerService: void access$1400(com.android.server.wm.ActivityTaskManagerService,android.util.proto.ProtoOutputStream,int,boolean)>($r33, r56, i1, z0);

        $r34 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r35 = $r34.<com.android.server.wm.ActivityTaskManagerService: android.service.voice.IVoiceInteractionSession mRunningVoice>;

        if $r35 == null goto label07;

        l2 = virtualinvoke r56.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268060L);

        $r50 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r51 = $r50.<com.android.server.wm.ActivityTaskManagerService: android.service.voice.IVoiceInteractionSession mRunningVoice>;

        $r52 = virtualinvoke $r51.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r56.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333441L, $r52);

        $r53 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r54 = $r53.<com.android.server.wm.ActivityTaskManagerService: android.os.PowerManager$WakeLock mVoiceWakeLock>;

        virtualinvoke $r54.<android.os.PowerManager$WakeLock: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r56, 1146756268034L);

        virtualinvoke r56.<android.util.proto.ProtoOutputStream: void end(long)>(l2);

     label07:
        $r36 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r37 = $r36.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.VrController mVrController>;

        virtualinvoke $r37.<com.android.server.wm.VrController: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r56, 1146756268061L);

        $r38 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r39 = $r38.<com.android.server.wm.ActivityTaskManagerService: android.app.IActivityController mController>;

        if $r39 == null goto label08;

        l3 = virtualinvoke r56.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268069L);

        $r46 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r47 = $r46.<com.android.server.wm.ActivityTaskManagerService: android.app.IActivityController mController>;

        $r48 = virtualinvoke $r47.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r56.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333441L, $r48);

        $r49 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $z5 = $r49.<com.android.server.wm.ActivityTaskManagerService: boolean mControllerIsAMonkey>;

        virtualinvoke r56.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366146L, $z5);

        virtualinvoke r56.<android.util.proto.ProtoOutputStream: void end(long)>(l3);

     label08:
        $r40 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r41 = $r40.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityStackSupervisor mStackSupervisor>;

        $r42 = $r41.<com.android.server.wm.ActivityStackSupervisor: android.os.PowerManager$WakeLock mGoingToSleepWakeLock>;

        virtualinvoke $r42.<android.os.PowerManager$WakeLock: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r56, 1146756268079L);

        $r43 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r44 = $r43.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityStackSupervisor mStackSupervisor>;

        $r45 = $r44.<com.android.server.wm.ActivityStackSupervisor: android.os.PowerManager$WakeLock mLaunchingActivityWakeLock>;

        virtualinvoke $r45.<android.os.PowerManager$WakeLock: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r56, 1146756268080L);

     label09:
        $r58 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r59 = $r58.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController mHomeProcess>;

        if $r59 == null goto label13;

     label10:
        if r1 == null goto label12;

     label11:
        $r27 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r28 = $r27.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController mHomeProcess>;

        $r29 = $r28.<com.android.server.wm.WindowProcessController: android.util.ArraySet mPkgList>;

        $z4 = virtualinvoke $r29.<android.util.ArraySet: boolean contains(java.lang.Object)>(r1);

        if $z4 == 0 goto label13;

     label12:
        $r25 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r26 = $r25.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController mHomeProcess>;

        virtualinvoke $r26.<com.android.server.wm.WindowProcessController: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r56, 1146756268047L);

     label13:
        $r60 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r61 = $r60.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController mPreviousProcess>;

        if $r61 == null goto label17;

     label14:
        if r1 == null goto label16;

     label15:
        $r22 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r23 = $r22.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController mPreviousProcess>;

        $r24 = $r23.<com.android.server.wm.WindowProcessController: android.util.ArraySet mPkgList>;

        $z3 = virtualinvoke $r24.<android.util.ArraySet: boolean contains(java.lang.Object)>(r1);

        if $z3 == 0 goto label17;

     label16:
        $r19 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r20 = $r19.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController mPreviousProcess>;

        virtualinvoke $r20.<com.android.server.wm.WindowProcessController: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r56, 1146756268048L);

        $r21 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $l0 = $r21.<com.android.server.wm.ActivityTaskManagerService: long mPreviousProcessVisibleTime>;

        virtualinvoke r56.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529681L, $l0);

     label17:
        $r62 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r63 = $r62.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController mHeavyWeightProcess>;

        if $r63 == null goto label21;

     label18:
        if r1 == null goto label20;

     label19:
        $r16 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r17 = $r16.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController mHeavyWeightProcess>;

        $r18 = $r17.<com.android.server.wm.WindowProcessController: android.util.ArraySet mPkgList>;

        $z2 = virtualinvoke $r18.<android.util.ArraySet: boolean contains(java.lang.Object)>(r1);

        if $z2 == 0 goto label21;

     label20:
        $r14 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r15 = $r14.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController mHeavyWeightProcess>;

        virtualinvoke $r15.<com.android.server.wm.WindowProcessController: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r56, 1146756268050L);

     label21:
        $r64 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r65 = $r64.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.CompatModePackages mCompatModePackages>;

        $r66 = virtualinvoke $r65.<com.android.server.wm.CompatModePackages: java.util.HashMap getPackages()>();

        $r67 = virtualinvoke $r66.<java.util.HashMap: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r67.<java.util.Set: java.util.Iterator iterator()>();

     label22:
        $z7 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label27;

        $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r10;

        $r11 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        r68 = (java.lang.String) $r11;

        $r12 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (java.lang.Integer) $r12;

        i4 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

     label23:
        if r1 == null goto label25;

     label24:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r68);

        if $z1 == 0 goto label26;

     label25:
        l5 = virtualinvoke r56.<android.util.proto.ProtoOutputStream: long start(long)>(2246267895830L);

        virtualinvoke r56.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333441L, r68);

        virtualinvoke r56.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464258L, i4);

        virtualinvoke r56.<android.util.proto.ProtoOutputStream: void end(long)>(l5);

     label26:
        goto label22;

     label27:
        $r6 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r7 = $r6.<com.android.server.wm.ActivityTaskManagerService: com.android.server.am.AppTimeTracker mCurAppTimeTracker>;

        if $r7 == null goto label28;

        $r8 = r0.<com.android.server.wm.ActivityTaskManagerService$LocalService: com.android.server.wm.ActivityTaskManagerService this$0>;

        $r9 = $r8.<com.android.server.wm.ActivityTaskManagerService: com.android.server.am.AppTimeTracker mCurAppTimeTracker>;

        virtualinvoke $r9.<com.android.server.am.AppTimeTracker: void dumpDebug(android.util.proto.ProtoOutputStream,long,boolean)>(r56, 1146756268063L, 1);

     label28:
        exitmonitor r2;

     label29:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label30:
        $r55 := @caughtexception;

     label31:
        exitmonitor r2;

     label32:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r55;

        catch java.lang.Throwable from label01 to label02 with label30;
        catch java.lang.Throwable from label03 to label04 with label30;
        catch java.lang.Throwable from label05 to label06 with label30;
        catch java.lang.Throwable from label06 to label07 with label30;
        catch java.lang.Throwable from label07 to label08 with label30;
        catch java.lang.Throwable from label08 to label09 with label30;
        catch java.lang.Throwable from label09 to label10 with label30;
        catch java.lang.Throwable from label11 to label12 with label30;
        catch java.lang.Throwable from label12 to label13 with label30;
        catch java.lang.Throwable from label13 to label14 with label30;
        catch java.lang.Throwable from label15 to label16 with label30;
        catch java.lang.Throwable from label16 to label17 with label30;
        catch java.lang.Throwable from label17 to label18 with label30;
        catch java.lang.Throwable from label19 to label20 with label30;
        catch java.lang.Throwable from label20 to label21 with label30;
        catch java.lang.Throwable from label21 to label22 with label30;
        catch java.lang.Throwable from label22 to label23 with label30;
        catch java.lang.Throwable from label24 to label25 with label30;
        catch java.lang.Throwable from label25 to label26 with label30;
        catch java.lang.Throwable from label27 to label28 with label30;
        catch java.lang.Throwable from label28 to label29 with label30;
        catch java.lang.Throwable from label31 to label32 with label30;
    }
}
