public class com.android.server.wm.AppTransitionController extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final com.android.server.wm.DisplayContent mDisplayContent;
    private android.view.RemoteAnimationDefinition mRemoteAnimationDefinition;
    private final com.android.server.wm.WindowManagerService mService;
    private final android.util.ArrayMap mTempTransitionReasons;
    private final com.android.server.wm.WallpaperController mWallpaperControllerLocked;

    void <init>(com.android.server.wm.WindowManagerService, com.android.server.wm.DisplayContent)
    {
        com.android.server.wm.AppTransitionController r0;
        com.android.server.wm.WindowManagerService r1;
        com.android.server.wm.DisplayContent r2;
        android.util.ArrayMap $r3;
        com.android.server.wm.WallpaperController $r4;

        r0 := @this: com.android.server.wm.AppTransitionController;

        r1 := @parameter0: com.android.server.wm.WindowManagerService;

        r2 := @parameter1: com.android.server.wm.DisplayContent;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.wm.AppTransitionController: android.view.RemoteAnimationDefinition mRemoteAnimationDefinition> = null;

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.wm.AppTransitionController: android.util.ArrayMap mTempTransitionReasons> = $r3;

        r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.WindowManagerService mService> = r1;

        r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent> = r2;

        $r4 = r2.<com.android.server.wm.DisplayContent: com.android.server.wm.WallpaperController mWallpaperController>;

        r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.WallpaperController mWallpaperControllerLocked> = $r4;

        return;
    }

    private void applyAnimations(android.util.ArraySet, android.util.ArraySet, int, android.view.WindowManager$LayoutParams, boolean)
    {
        com.android.server.wm.AppTransitionController r0;
        android.util.ArraySet r1, r3, r4, r8;
        int i0, $i1;
        android.view.WindowManager$LayoutParams r2;
        boolean z0, $z1, $z2;
        com.android.server.wm.DisplayContent $r5, $r7;
        com.android.server.wm.WindowManagerService $r6;
        com.android.server.wm.AccessibilityController r9;

        r0 := @this: com.android.server.wm.AppTransitionController;

        r8 := @parameter0: android.util.ArraySet;

        r1 := @parameter1: android.util.ArraySet;

        i0 := @parameter2: int;

        r2 := @parameter3: android.view.WindowManager$LayoutParams;

        z0 := @parameter4: boolean;

        if i0 == -1 goto label3;

        $z1 = virtualinvoke r8.<android.util.ArraySet: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        $z2 = virtualinvoke r1.<android.util.ArraySet: boolean isEmpty()>();

        if $z2 == 0 goto label1;

        goto label3;

     label1:
        r3 = staticinvoke <com.android.server.wm.AppTransitionController: android.util.ArraySet getAnimationTargets(android.util.ArraySet,android.util.ArraySet,boolean)>(r8, r1, 1);

        r4 = staticinvoke <com.android.server.wm.AppTransitionController: android.util.ArraySet getAnimationTargets(android.util.ArraySet,android.util.ArraySet,boolean)>(r8, r1, 0);

        specialinvoke r0.<com.android.server.wm.AppTransitionController: void applyAnimations(android.util.ArraySet,android.util.ArraySet,int,boolean,android.view.WindowManager$LayoutParams,boolean)>(r3, r8, i0, 1, r2, z0);

        specialinvoke r0.<com.android.server.wm.AppTransitionController: void applyAnimations(android.util.ArraySet,android.util.ArraySet,int,boolean,android.view.WindowManager$LayoutParams,boolean)>(r4, r1, i0, 0, r2, z0);

        $r5 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r6 = $r5.<com.android.server.wm.DisplayContent: com.android.server.wm.WindowManagerService mWmService>;

        r9 = $r6.<com.android.server.wm.WindowManagerService: com.android.server.wm.AccessibilityController mAccessibilityController>;

        if r9 == null goto label2;

        $r7 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $i1 = virtualinvoke $r7.<com.android.server.wm.DisplayContent: int getDisplayId()>();

        virtualinvoke r9.<com.android.server.wm.AccessibilityController: void onAppWindowTransitionLocked(int,int)>($i1, i0);

     label2:
        return;

     label3:
        return;
    }

    private void applyAnimations(android.util.ArraySet, android.util.ArraySet, int, boolean, android.view.WindowManager$LayoutParams, boolean)
    {
        com.android.server.wm.AppTransitionController r0;
        android.util.ArraySet r1, r2;
        int i0, i1, $i2, i3, i4;
        boolean z0, z1, $z3;
        android.view.WindowManager$LayoutParams r3;
        com.android.server.wm.WindowContainer r4;
        com.android.server.wm.ActivityRecord r6;
        java.lang.Object $r7, $r9;
        java.util.ArrayList $r8;

        r0 := @this: com.android.server.wm.AppTransitionController;

        r1 := @parameter0: android.util.ArraySet;

        r2 := @parameter1: android.util.ArraySet;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        r3 := @parameter4: android.view.WindowManager$LayoutParams;

        z1 := @parameter5: boolean;

        i1 = virtualinvoke r1.<android.util.ArraySet: int size()>();

        i3 = 0;

     label1:
        if i3 >= i1 goto label5;

        $r7 = virtualinvoke r1.<android.util.ArraySet: java.lang.Object valueAt(int)>(i3);

        r4 = (com.android.server.wm.WindowContainer) $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        i4 = 0;

     label2:
        $i2 = virtualinvoke r2.<android.util.ArraySet: int size()>();

        if i4 >= $i2 goto label4;

        $r9 = virtualinvoke r2.<android.util.ArraySet: java.lang.Object valueAt(int)>(i4);

        r6 = (com.android.server.wm.ActivityRecord) $r9;

        $z3 = virtualinvoke r6.<com.android.server.wm.ActivityRecord: boolean isDescendantOf(com.android.server.wm.WindowContainer)>(r4);

        if $z3 == 0 goto label3;

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

     label3:
        i4 = i4 + 1;

        goto label2;

     label4:
        virtualinvoke r4.<com.android.server.wm.WindowContainer: boolean applyAnimation(android.view.WindowManager$LayoutParams,int,boolean,boolean,java.util.ArrayList)>(r3, i0, z0, z1, $r8);

        i3 = i3 + 1;

        goto label1;

     label5:
        return;
    }

    private boolean canBeWallpaperTarget(android.util.ArraySet)
    {
        com.android.server.wm.AppTransitionController r0;
        android.util.ArraySet r1;
        int $i0, i1;
        java.lang.Object $r2;
        com.android.server.wm.ActivityRecord $r3;
        boolean $z0;

        r0 := @this: com.android.server.wm.AppTransitionController;

        r1 := @parameter0: android.util.ArraySet;

        $i0 = virtualinvoke r1.<android.util.ArraySet: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r2 = virtualinvoke r1.<android.util.ArraySet: java.lang.Object valueAt(int)>(i1);

        $r3 = (com.android.server.wm.ActivityRecord) $r2;

        $z0 = virtualinvoke $r3.<com.android.server.wm.ActivityRecord: boolean windowsCanBeWallpaperTarget()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return 0;
    }

    private static android.util.ArraySet collectActivityTypes(android.util.ArraySet, android.util.ArraySet, android.util.ArraySet)
    {
        android.util.ArraySet r0, r1, r2, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8;
        java.lang.Object $r5, $r8, $r11;
        com.android.server.wm.WindowContainer $r6;
        java.lang.Integer $r7, $r10, $r13;
        com.android.server.wm.ActivityRecord $r9, $r12;

        r0 := @parameter0: android.util.ArraySet;

        r1 := @parameter1: android.util.ArraySet;

        r2 := @parameter2: android.util.ArraySet;

        $r4 = new android.util.ArraySet;

        specialinvoke $r4.<android.util.ArraySet: void <init>()>();

        $i0 = virtualinvoke r0.<android.util.ArraySet: int size()>();

        i6 = $i0 - 1;

     label1:
        if i6 < 0 goto label2;

        $r11 = virtualinvoke r0.<android.util.ArraySet: java.lang.Object valueAt(int)>(i6);

        $r12 = (com.android.server.wm.ActivityRecord) $r11;

        $i5 = virtualinvoke $r12.<com.android.server.wm.ActivityRecord: int getActivityType()>();

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        virtualinvoke $r4.<android.util.ArraySet: boolean add(java.lang.Object)>($r13);

        i6 = i6 + -1;

        goto label1;

     label2:
        $i1 = virtualinvoke r1.<android.util.ArraySet: int size()>();

        i7 = $i1 - 1;

     label3:
        if i7 < 0 goto label4;

        $r8 = virtualinvoke r1.<android.util.ArraySet: java.lang.Object valueAt(int)>(i7);

        $r9 = (com.android.server.wm.ActivityRecord) $r8;

        $i4 = virtualinvoke $r9.<com.android.server.wm.ActivityRecord: int getActivityType()>();

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        virtualinvoke $r4.<android.util.ArraySet: boolean add(java.lang.Object)>($r10);

        i7 = i7 + -1;

        goto label3;

     label4:
        $i2 = virtualinvoke r2.<android.util.ArraySet: int size()>();

        i8 = $i2 - 1;

     label5:
        if i8 < 0 goto label6;

        $r5 = virtualinvoke r2.<android.util.ArraySet: java.lang.Object valueAt(int)>(i8);

        $r6 = (com.android.server.wm.WindowContainer) $r5;

        $i3 = virtualinvoke $r6.<com.android.server.wm.WindowContainer: int getActivityType()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        virtualinvoke $r4.<android.util.ArraySet: boolean add(java.lang.Object)>($r7);

        i8 = i8 + -1;

        goto label5;

     label6:
        return $r4;
    }

    private boolean containsVoiceInteraction(android.util.ArraySet)
    {
        com.android.server.wm.AppTransitionController r0;
        android.util.ArraySet r1;
        int $i0, i1;
        java.lang.Object $r2;
        com.android.server.wm.ActivityRecord $r3;
        boolean $z0;

        r0 := @this: com.android.server.wm.AppTransitionController;

        r1 := @parameter0: android.util.ArraySet;

        $i0 = virtualinvoke r1.<android.util.ArraySet: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r2 = virtualinvoke r1.<android.util.ArraySet: java.lang.Object valueAt(int)>(i1);

        $r3 = (com.android.server.wm.ActivityRecord) $r2;

        $z0 = $r3.<com.android.server.wm.ActivityRecord: boolean mVoiceInteraction>;

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return 0;
    }

    private com.android.server.wm.ActivityRecord findAnimLayoutParamsToken(int, android.util.ArraySet)
    {
        com.android.server.wm.AppTransitionController r0;
        int i0;
        android.util.ArraySet r1, r2, r3, r12;
        com.android.server.wm.DisplayContent $r4, $r5, $r6;
        com.android.server.wm.'-$$Lambda$AppTransitionController$o_nkoN7a-ZHaSAgJCQZcboKz9Ig' $r8;
        com.android.server.wm.'-$$Lambda$AppTransitionController$ZU-2ppbyGJ7-UsXREbcW1x9TJH0' $r9;
        com.android.server.wm.ActivityRecord $r10, $r11, r13, r14;
        com.android.server.wm._$$Lambda$AppTransitionController$z5kCoexPNTWFncmRBfeXr6HA2JA r15;
        java.util.function.Predicate r16, r17;

        r0 := @this: com.android.server.wm.AppTransitionController;

        i0 := @parameter0: int;

        r12 := @parameter1: android.util.ArraySet;

        $r4 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        r1 = $r4.<com.android.server.wm.DisplayContent: android.util.ArraySet mClosingApps>;

        $r5 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        r2 = $r5.<com.android.server.wm.DisplayContent: android.util.ArraySet mOpeningApps>;

        $r6 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        r3 = $r6.<com.android.server.wm.DisplayContent: android.util.ArraySet mChangingContainers>;

        r15 = new com.android.server.wm._$$Lambda$AppTransitionController$z5kCoexPNTWFncmRBfeXr6HA2JA;

        specialinvoke r15.<com.android.server.wm._$$Lambda$AppTransitionController$z5kCoexPNTWFncmRBfeXr6HA2JA: void <init>(int,android.util.ArraySet)>(i0, r12);

        r13 = staticinvoke <com.android.server.wm.AppTransitionController: com.android.server.wm.ActivityRecord lookForHighestTokenWithFilter(android.util.ArraySet,android.util.ArraySet,android.util.ArraySet,java.util.function.Predicate)>(r1, r2, r3, r15);

        if r13 == null goto label1;

        $r11 = staticinvoke <com.android.server.wm.AppTransitionController: com.android.server.wm.ActivityRecord getAppFromContainer(com.android.server.wm.WindowContainer)>(r13);

        return $r11;

     label1:
        $r8 = <com.android.server.wm._$$Lambda$AppTransitionController$o_nkoN7a_ZHaSAgJCQZcboKz9Ig: com.android.server.wm.'-$$Lambda$AppTransitionController$o_nkoN7a-ZHaSAgJCQZcboKz9Ig' INSTANCE>;

        r16 = (java.util.function.Predicate) $r8;

        r14 = staticinvoke <com.android.server.wm.AppTransitionController: com.android.server.wm.ActivityRecord lookForHighestTokenWithFilter(android.util.ArraySet,android.util.ArraySet,android.util.ArraySet,java.util.function.Predicate)>(r1, r2, r3, r16);

        if r14 == null goto label2;

        return r14;

     label2:
        $r9 = <com.android.server.wm._$$Lambda$AppTransitionController$ZU_2ppbyGJ7_UsXREbcW1x9TJH0: com.android.server.wm.'-$$Lambda$AppTransitionController$ZU-2ppbyGJ7-UsXREbcW1x9TJH0' INSTANCE>;

        r17 = (java.util.function.Predicate) $r9;

        $r10 = staticinvoke <com.android.server.wm.AppTransitionController: com.android.server.wm.ActivityRecord lookForHighestTokenWithFilter(android.util.ArraySet,android.util.ArraySet,android.util.ArraySet,java.util.function.Predicate)>(r1, r2, r3, r17);

        return $r10;
    }

    private static android.view.WindowManager$LayoutParams getAnimLp(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.ActivityRecord r0;
        android.view.WindowManager$LayoutParams r1;
        com.android.server.wm.WindowState r2;

        r0 := @parameter0: com.android.server.wm.ActivityRecord;

        r1 = null;

        if r0 == null goto label1;

        r2 = virtualinvoke r0.<com.android.server.wm.ActivityRecord: com.android.server.wm.WindowState findMainWindow()>();

        goto label2;

     label1:
        r2 = null;

     label2:
        if r2 == null goto label3;

        r1 = r2.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

     label3:
        return r1;
    }

    static android.util.ArraySet getAnimationTargets(android.util.ArraySet, android.util.ArraySet, boolean)
    {
        boolean z0, z1, $z2, $z3, $z4, $z8, $z9, $z10, $z11, $z14, $z16, z17, z18, z19;
        com.android.server.wm.WindowContainer r1, r2, r23, r26;
        java.util.LinkedList $r3;
        android.util.ArraySet $r4, $r5, $r11, r17, r18, r19;
        java.util.ArrayList $r6;
        java.lang.Object[] $r7, $r13;
        com.android.server.wm.ProtoLogGroup $r8, $r14;
        java.lang.Object $r9, $r10, $r12;
        java.lang.Boolean $r15, $r16;
        int i0, $i1, i2, $i3, i4, $i5;
        com.android.server.wm.ActivityRecord r20;
        java.lang.String r21, r27, r28;

        r17 := @parameter0: android.util.ArraySet;

        r18 := @parameter1: android.util.ArraySet;

        z0 := @parameter2: boolean;

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

        if z0 == 0 goto label01;

        r19 = r17;

        goto label02;

     label01:
        r19 = r18;

     label02:
        i0 = 0;

     label03:
        $i1 = virtualinvoke r19.<android.util.ArraySet: int size()>();

        if i0 >= $i1 goto label05;

        $r12 = virtualinvoke r19.<android.util.ArraySet: java.lang.Object valueAt(int)>(i0);

        r20 = (com.android.server.wm.ActivityRecord) $r12;

        $z14 = virtualinvoke r20.<com.android.server.wm.ActivityRecord: boolean shouldApplyAnimation(boolean)>(z0);

        if $z14 == 0 goto label04;

        virtualinvoke $r3.<java.util.LinkedList: boolean add(java.lang.Object)>(r20);

        $z16 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_APP_TRANSITIONS_enabled>;

        if $z16 == 0 goto label04;

        r21 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r20);

        z1 = virtualinvoke r20.<com.android.server.wm.ActivityRecord: boolean isVisible()>();

        $r14 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_APP_TRANSITIONS>;

        $r13 = newarray (java.lang.Object)[3];

        $r13[0] = r21;

        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1);

        $r13[1] = $r15;

        $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r13[2] = $r16;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void v(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r14, 1967975839, 60, null, $r13);

     label04:
        i0 = i0 + 1;

        goto label03;

     label05:
        $z2 = <com.android.server.wm.WindowManagerService: boolean sHierarchicalAnimations>;

        if $z2 != 0 goto label06;

        $r11 = new android.util.ArraySet;

        specialinvoke $r11.<android.util.ArraySet: void <init>(java.util.Collection)>($r3);

        return $r11;

     label06:
        if z0 == 0 goto label07;

        r17 = r18;

        goto label07;

     label07:
        $r4 = new android.util.ArraySet;

        specialinvoke $r4.<android.util.ArraySet: void <init>()>();

        i2 = 0;

     label08:
        $i3 = virtualinvoke r17.<android.util.ArraySet: int size()>();

        if i2 >= $i3 goto label11;

        $r10 = virtualinvoke r17.<android.util.ArraySet: java.lang.Object valueAt(int)>(i2);

        r23 = (com.android.server.wm.WindowContainer) $r10;

     label09:
        if r23 == null goto label10;

        virtualinvoke $r4.<android.util.ArraySet: boolean add(java.lang.Object)>(r23);

        r23 = virtualinvoke r23.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getParent()>();

        goto label09;

     label10:
        i2 = i2 + 1;

        goto label08;

     label11:
        $r5 = new android.util.ArraySet;

        specialinvoke $r5.<android.util.ArraySet: void <init>()>();

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

     label12:
        $z3 = virtualinvoke $r3.<java.util.LinkedList: boolean isEmpty()>();

        if $z3 != 0 goto label22;

        $r9 = virtualinvoke $r3.<java.util.LinkedList: java.lang.Object removeFirst()>();

        r1 = (com.android.server.wm.WindowContainer) $r9;

        r26 = virtualinvoke r1.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getParent()>();

        virtualinvoke $r6.<java.util.ArrayList: void clear()>();

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        z17 = 1;

        if r26 == null goto label18;

        $z8 = virtualinvoke r26.<com.android.server.wm.WindowContainer: boolean canCreateRemoteAnimationTarget()>();

        if $z8 != 0 goto label13;

        goto label18;

     label13:
        $z9 = virtualinvoke $r4.<android.util.ArraySet: boolean contains(java.lang.Object)>(r26);

        if $z9 == 0 goto label14;

        z17 = 0;

     label14:
        i4 = 0;

     label15:
        z18 = z17;

        $i5 = virtualinvoke r26.<com.android.server.wm.WindowContainer: int getChildCount()>();

        if i4 >= $i5 goto label19;

        r2 = virtualinvoke r26.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getChildAt(int)>(i4);

        $z10 = virtualinvoke $r3.<java.util.LinkedList: boolean remove(java.lang.Object)>(r2);

        if $z10 == 0 goto label16;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        z19 = z17;

        goto label17;

     label16:
        z19 = z17;

        if r2 == r1 goto label17;

        z19 = z17;

        $z11 = virtualinvoke r2.<com.android.server.wm.WindowContainer: boolean isVisible()>();

        if $z11 == 0 goto label17;

        z19 = 0;

     label17:
        i4 = i4 + 1;

        z17 = z19;

        goto label15;

     label18:
        z18 = 0;

     label19:
        if z18 == 0 goto label20;

        virtualinvoke $r3.<java.util.LinkedList: boolean add(java.lang.Object)>(r26);

        goto label21;

     label20:
        virtualinvoke $r5.<android.util.ArraySet: boolean addAll(java.util.Collection)>($r6);

     label21:
        goto label12;

     label22:
        $z4 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_APP_TRANSITIONS_ANIM_enabled>;

        if $z4 == 0 goto label23;

        r27 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r19);

        r28 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        $r8 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_APP_TRANSITIONS_ANIM>;

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = r27;

        $r7[1] = r28;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void v(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r8, 1460759282, 0, null, $r7);

     label23:
        return $r5;
    }

    static com.android.server.wm.ActivityRecord getAppFromContainer(com.android.server.wm.WindowContainer)
    {
        com.android.server.wm.Task $r0, $r1;
        com.android.server.wm.WindowContainer r2;
        com.android.server.wm.ActivityRecord r3;

        r2 := @parameter0: com.android.server.wm.WindowContainer;

        $r0 = virtualinvoke r2.<com.android.server.wm.WindowContainer: com.android.server.wm.Task asTask()>();

        if $r0 == null goto label1;

        $r1 = virtualinvoke r2.<com.android.server.wm.WindowContainer: com.android.server.wm.Task asTask()>();

        r3 = virtualinvoke $r1.<com.android.server.wm.Task: com.android.server.wm.ActivityRecord getTopNonFinishingActivity()>();

        goto label2;

     label1:
        r3 = virtualinvoke r2.<com.android.server.wm.WindowContainer: com.android.server.wm.ActivityRecord asActivityRecord()>();

     label2:
        return r3;
    }

    private com.android.server.wm.ActivityRecord getTopApp(android.util.ArraySet, boolean)
    {
        com.android.server.wm.AppTransitionController r0;
        android.util.ArraySet r1;
        boolean z0, $z1;
        com.android.server.wm.ActivityRecord r2, r5, r6;
        int i0, $i1, i2, i3, i4;
        java.lang.Object $r3;
        com.android.server.wm.WindowContainer $r4;

        r0 := @this: com.android.server.wm.AppTransitionController;

        r1 := @parameter0: android.util.ArraySet;

        z0 := @parameter1: boolean;

        i2 = -2147483648;

        r5 = null;

        $i1 = virtualinvoke r1.<android.util.ArraySet: int size()>();

        i3 = $i1 - 1;

     label1:
        if i3 < 0 goto label4;

        $r3 = virtualinvoke r1.<android.util.ArraySet: java.lang.Object valueAt(int)>(i3);

        $r4 = (com.android.server.wm.WindowContainer) $r3;

        r2 = staticinvoke <com.android.server.wm.AppTransitionController: com.android.server.wm.ActivityRecord getAppFromContainer(com.android.server.wm.WindowContainer)>($r4);

        i4 = i2;

        r6 = r5;

        if r2 == null goto label3;

        if z0 == 0 goto label2;

        $z1 = virtualinvoke r2.<com.android.server.wm.ActivityRecord: boolean isVisible()>();

        if $z1 != 0 goto label2;

        i4 = i2;

        r6 = r5;

        goto label3;

     label2:
        i0 = virtualinvoke r2.<com.android.server.wm.ActivityRecord: int getPrefixOrderIndex()>();

        i4 = i2;

        r6 = r5;

        if i0 <= i2 goto label3;

        i4 = i0;

        r6 = r2;

     label3:
        i3 = i3 + -1;

        i2 = i4;

        r5 = r6;

        goto label1;

     label4:
        return r5;
    }

    private void handleChangingApps(int)
    {
        com.android.server.wm.AppTransitionController r0;
        int i0, i1, i2;
        android.util.ArraySet r1;
        com.android.server.wm.WindowContainer r2;
        java.lang.String r3;
        com.android.server.wm.DisplayContent $r4;
        java.lang.Object $r5;
        boolean $z0;
        java.lang.Object[] $r6;
        com.android.server.wm.ProtoLogGroup $r7;

        r0 := @this: com.android.server.wm.AppTransitionController;

        i0 := @parameter0: int;

        $r4 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        r1 = $r4.<com.android.server.wm.DisplayContent: android.util.ArraySet mChangingContainers>;

        i1 = virtualinvoke r1.<android.util.ArraySet: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        $r5 = virtualinvoke r1.<android.util.ArraySet: java.lang.Object valueAt(int)>(i2);

        r2 = (com.android.server.wm.WindowContainer) $r5;

        $z0 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_APP_TRANSITIONS_enabled>;

        if $z0 == 0 goto label2;

        r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        $r7 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_APP_TRANSITIONS>;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r3;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void v(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r7, 186668272, 0, null, $r6);

     label2:
        virtualinvoke r2.<com.android.server.wm.WindowContainer: boolean applyAnimation(android.view.WindowManager$LayoutParams,int,boolean,boolean,java.util.ArrayList)>(null, i0, 1, 0, null);

        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    private void handleClosingApps()
    {
        com.android.server.wm.AppTransitionController r0;
        android.util.ArraySet r1;
        int i0, i1;
        com.android.server.wm.ActivityRecord r2;
        java.lang.String r3;
        com.android.server.wm.DisplayContent $r4, $r10;
        java.lang.Object $r5;
        boolean $z0, $z1, $z2;
        com.android.server.wm.WindowState $r6, $r7;
        java.lang.Object[] $r8;
        com.android.server.wm.ProtoLogGroup $r9;
        com.android.server.wm.AppTransition $r11;

        r0 := @this: com.android.server.wm.AppTransitionController;

        $r4 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        r1 = $r4.<com.android.server.wm.DisplayContent: android.util.ArraySet mClosingApps>;

        i0 = virtualinvoke r1.<android.util.ArraySet: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label5;

        $r5 = virtualinvoke r1.<android.util.ArraySet: java.lang.Object valueAt(int)>(i1);

        r2 = (com.android.server.wm.ActivityRecord) $r5;

        $z0 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_APP_TRANSITIONS_enabled>;

        if $z0 == 0 goto label2;

        r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        $r9 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_APP_TRANSITIONS>;

        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = r3;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void v(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r9, 794570322, 0, null, $r8);

     label2:
        virtualinvoke r2.<com.android.server.wm.ActivityRecord: void commitVisibility(boolean,boolean)>(0, 0);

        virtualinvoke r2.<com.android.server.wm.ActivityRecord: void updateReportedVisibilityLocked()>();

        r2.<com.android.server.wm.ActivityRecord: boolean allDrawn> = 1;

        $r6 = r2.<com.android.server.wm.ActivityRecord: com.android.server.wm.WindowState startingWindow>;

        if $r6 == null goto label3;

        $r7 = r2.<com.android.server.wm.ActivityRecord: com.android.server.wm.WindowState startingWindow>;

        $z1 = $r7.<com.android.server.wm.WindowState: boolean mAnimatingExit>;

        if $z1 != 0 goto label3;

        virtualinvoke r2.<com.android.server.wm.ActivityRecord: void removeStartingWindow()>();

     label3:
        $r10 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r11 = $r10.<com.android.server.wm.DisplayContent: com.android.server.wm.AppTransition mAppTransition>;

        $z2 = virtualinvoke $r11.<com.android.server.wm.AppTransition: boolean isNextAppTransitionThumbnailDown()>();

        if $z2 == 0 goto label4;

        virtualinvoke r2.<com.android.server.wm.ActivityRecord: void attachThumbnailAnimation()>();

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        return;
    }

    private void handleNonAppWindowsInTransition(int, int)
    {
        com.android.server.wm.AppTransitionController r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        com.android.server.wm.WindowManagerService $r1, $r2;
        float $f0;
        com.android.server.wm.DisplayContent $r3, r7;
        com.android.server.wm.WallpaperController $r4;
        boolean z0, z1, z2, z3;
        com.android.server.policy.WindowManagerPolicy r5;
        android.view.animation.Animation r6;

        r0 := @this: com.android.server.wm.AppTransitionController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 = 0;

        if i0 != 20 goto label03;

        $i4 = i1 & 4;

        if $i4 == 0 goto label03;

        $i5 = i1 & 2;

        if $i5 != 0 goto label03;

        $i6 = i1 & 8;

        if $i6 != 0 goto label03;

        $r1 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.WindowManagerService mService>;

        r5 = $r1.<com.android.server.wm.WindowManagerService: com.android.server.policy.WindowManagerPolicy mPolicy>;

        $i7 = i1 & 1;

        if $i7 == 0 goto label01;

        z1 = 1;

        goto label02;

     label01:
        z1 = 0;

     label02:
        r6 = interfaceinvoke r5.<com.android.server.policy.WindowManagerPolicy: android.view.animation.Animation createKeyguardWallpaperExit(boolean)>(z1);

        if r6 == null goto label03;

        $r2 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.WindowManagerService mService>;

        $f0 = virtualinvoke $r2.<com.android.server.wm.WindowManagerService: float getTransitionAnimationScaleLocked()>();

        virtualinvoke r6.<android.view.animation.Animation: void scaleCurrentDuration(float)>($f0);

        $r3 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r4 = $r3.<com.android.server.wm.DisplayContent: com.android.server.wm.WallpaperController mWallpaperController>;

        virtualinvoke $r4.<com.android.server.wm.WallpaperController: void startWallpaperAnimation(android.view.animation.Animation)>(r6);

     label03:
        if i0 == 20 goto label04;

        if i0 != 21 goto label10;

     label04:
        r7 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        if i0 != 21 goto label05;

        z2 = 1;

        goto label06;

     label05:
        z2 = 0;

     label06:
        $i2 = i1 & 1;

        if $i2 == 0 goto label07;

        z3 = 1;

        goto label08;

     label07:
        z3 = 0;

     label08:
        $i3 = i1 & 8;

        if $i3 == 0 goto label09;

        z0 = 1;

     label09:
        virtualinvoke r7.<com.android.server.wm.DisplayContent: void startKeyguardExitOnNonAppWindows(boolean,boolean,boolean)>(z2, z3, z0);

     label10:
        return;
    }

    private void handleOpeningApps()
    {
        com.android.server.wm.AppTransitionController r0;
        int i0, i1;
        com.android.server.wm.ActivityRecord r1;
        com.android.server.wm.DisplayContent $r2, $r4, $r7, $r19;
        java.lang.Object $r3;
        boolean $z0, $z2, $z3, $z4;
        android.os.IBinder $r5;
        java.util.List $r6;
        com.android.server.wm.AppTransition $r8, $r20;
        android.util.ArraySet $r9, r14;
        java.lang.Object[] $r10;
        com.android.server.wm.ProtoLogGroup $r11;
        java.lang.Throwable $r12;
        com.android.server.wm.WindowManagerService $r13, $r17, $r18;
        java.lang.String r15;
        com.android.server.wm.WindowContainer r16;

        r0 := @this: com.android.server.wm.AppTransitionController;

        $r2 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        r14 = $r2.<com.android.server.wm.DisplayContent: android.util.ArraySet mOpeningApps>;

        i0 = virtualinvoke r14.<android.util.ArraySet: int size()>();

        i1 = 0;

     label01:
        if i1 >= i0 goto label10;

        $r3 = virtualinvoke r14.<android.util.ArraySet: java.lang.Object valueAt(int)>(i1);

        r1 = (com.android.server.wm.ActivityRecord) $r3;

        $z0 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_APP_TRANSITIONS_enabled>;

        if $z0 == 0 goto label02;

        r15 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        $r11 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_APP_TRANSITIONS>;

        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = r15;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void v(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r11, 1628345525, 0, null, $r10);

     label02:
        virtualinvoke r1.<com.android.server.wm.ActivityRecord: void commitVisibility(boolean,boolean)>(1, 0);

        r16 = virtualinvoke r1.<com.android.server.wm.ActivityRecord: com.android.server.wm.WindowContainer getAnimatingContainer(int,int)>(2, 1);

        if r16 == null goto label03;

        $r9 = virtualinvoke r16.<com.android.server.wm.WindowContainer: android.util.ArraySet getAnimationSources()>();

        $z3 = virtualinvoke $r9.<android.util.ArraySet: boolean contains(java.lang.Object)>(r1);

        if $z3 != 0 goto label04;

     label03:
        $r4 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r6 = $r4.<com.android.server.wm.DisplayContent: java.util.List mNoAnimationNotifyOnTransitionFinished>;

        $r5 = r1.<com.android.server.wm.ActivityRecord: android.os.IBinder token>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r5);

     label04:
        virtualinvoke r1.<com.android.server.wm.ActivityRecord: void updateReportedVisibilityLocked()>();

        r1.<com.android.server.wm.ActivityRecord: boolean waitingToShow> = 0;

        $r17 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r17.<com.android.server.wm.WindowManagerService: void openSurfaceTransaction()>();

     label05:
        virtualinvoke r1.<com.android.server.wm.ActivityRecord: void showAllWindowsLocked()>();

     label06:
        $r18 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r18.<com.android.server.wm.WindowManagerService: void closeSurfaceTransaction(java.lang.String)>("handleAppTransitionReady");

        $r19 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r20 = $r19.<com.android.server.wm.DisplayContent: com.android.server.wm.AppTransition mAppTransition>;

        $z4 = virtualinvoke $r20.<com.android.server.wm.AppTransition: boolean isNextAppTransitionThumbnailUp()>();

        if $z4 == 0 goto label07;

        virtualinvoke r1.<com.android.server.wm.ActivityRecord: void attachThumbnailAnimation()>();

        goto label08;

     label07:
        $r7 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r8 = $r7.<com.android.server.wm.DisplayContent: com.android.server.wm.AppTransition mAppTransition>;

        $z2 = virtualinvoke $r8.<com.android.server.wm.AppTransition: boolean isNextAppTransitionOpenCrossProfileApps()>();

        if $z2 == 0 goto label08;

        virtualinvoke r1.<com.android.server.wm.ActivityRecord: void attachCrossProfileAppsThumbnailAnimation()>();

     label08:
        i1 = i1 + 1;

        goto label01;

     label09:
        $r12 := @caughtexception;

        $r13 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r13.<com.android.server.wm.WindowManagerService: void closeSurfaceTransaction(java.lang.String)>("handleAppTransitionReady");

        throw $r12;

     label10:
        return;

        catch java.lang.Throwable from label05 to label06 with label09;
    }

    static boolean lambda$findAnimLayoutParamsToken$1(int, android.util.ArraySet, com.android.server.wm.ActivityRecord)
    {
        int i0;
        android.util.ArraySet r0;
        com.android.server.wm.ActivityRecord r1;
        android.view.RemoteAnimationDefinition $r2, $r3;
        boolean $z0, z1;

        i0 := @parameter0: int;

        r0 := @parameter1: android.util.ArraySet;

        r1 := @parameter2: com.android.server.wm.ActivityRecord;

        $r2 = virtualinvoke r1.<com.android.server.wm.ActivityRecord: android.view.RemoteAnimationDefinition getRemoteAnimationDefinition()>();

        if $r2 == null goto label1;

        $r3 = virtualinvoke r1.<com.android.server.wm.ActivityRecord: android.view.RemoteAnimationDefinition getRemoteAnimationDefinition()>();

        $z0 = virtualinvoke $r3.<android.view.RemoteAnimationDefinition: boolean hasTransition(int,android.util.ArraySet)>(i0, r0);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    static boolean lambda$findAnimLayoutParamsToken$2(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.ActivityRecord r0;
        boolean $z0, z1;
        com.android.server.wm.WindowState $r1;

        r0 := @parameter0: com.android.server.wm.ActivityRecord;

        $z0 = virtualinvoke r0.<com.android.server.wm.ActivityRecord: boolean fillsParent()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<com.android.server.wm.ActivityRecord: com.android.server.wm.WindowState findMainWindow()>();

        if $r1 == null goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    static boolean lambda$findAnimLayoutParamsToken$3(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.ActivityRecord r0;
        com.android.server.wm.WindowState $r1;
        boolean z0;

        r0 := @parameter0: com.android.server.wm.ActivityRecord;

        $r1 = virtualinvoke r0.<com.android.server.wm.ActivityRecord: com.android.server.wm.WindowState findMainWindow()>();

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private static com.android.server.wm.ActivityRecord lookForHighestTokenWithFilter(android.util.ArraySet, android.util.ArraySet, android.util.ArraySet, java.util.function.Predicate)
    {
        android.util.ArraySet r0, r1, r2;
        java.util.function.Predicate r3;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, i8, i9, i10;
        com.android.server.wm.ActivityRecord r4, r8, r10;
        java.lang.Object $r5, $r6, $r7;
        boolean $z0;
        com.android.server.wm.WindowContainer r9;

        r0 := @parameter0: android.util.ArraySet;

        r1 := @parameter1: android.util.ArraySet;

        r2 := @parameter2: android.util.ArraySet;

        r3 := @parameter3: java.util.function.Predicate;

        i0 = virtualinvoke r0.<android.util.ArraySet: int size()>();

        $i4 = virtualinvoke r1.<android.util.ArraySet: int size()>();

        i1 = $i4 + i0;

        i2 = virtualinvoke r2.<android.util.ArraySet: int size()>();

        i8 = -2147483648;

        r8 = null;

        i9 = 0;

     label1:
        $i5 = i2 + i1;

        if i9 >= $i5 goto label6;

        if i9 >= i0 goto label2;

        $r7 = virtualinvoke r0.<android.util.ArraySet: java.lang.Object valueAt(int)>(i9);

        r9 = (com.android.server.wm.WindowContainer) $r7;

        goto label4;

     label2:
        if i9 >= i1 goto label3;

        $i7 = i9 - i0;

        $r6 = virtualinvoke r1.<android.util.ArraySet: java.lang.Object valueAt(int)>($i7);

        r9 = (com.android.server.wm.WindowContainer) $r6;

        goto label4;

     label3:
        $i6 = i9 - i1;

        $r5 = virtualinvoke r2.<android.util.ArraySet: java.lang.Object valueAt(int)>($i6);

        r9 = (com.android.server.wm.WindowContainer) $r5;

     label4:
        i3 = virtualinvoke r9.<com.android.server.wm.WindowContainer: int getPrefixOrderIndex()>();

        r4 = staticinvoke <com.android.server.wm.AppTransitionController: com.android.server.wm.ActivityRecord getAppFromContainer(com.android.server.wm.WindowContainer)>(r9);

        i10 = i8;

        r10 = r8;

        if r4 == null goto label5;

        i10 = i8;

        r10 = r8;

        $z0 = interfaceinvoke r3.<java.util.function.Predicate: boolean test(java.lang.Object)>(r4);

        if $z0 == 0 goto label5;

        i10 = i8;

        r10 = r8;

        if i3 <= i8 goto label5;

        i10 = i3;

        r10 = r4;

     label5:
        i9 = i9 + 1;

        i8 = i10;

        r8 = r10;

        goto label1;

     label6:
        return r8;
    }

    private int maybeUpdateTransitToWallpaper(int, boolean, boolean)
    {
        com.android.server.wm.AppTransitionController r0;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, z15, $z16, $z17, $z18;
        com.android.server.wm.WindowState r1, r37;
        android.util.ArraySet r2, r3, $r17, $r41, $r43;
        com.android.server.wm.ActivityRecord r4, r5, $r11, $r12, $r18, $r19, $r20;
        java.lang.String r6, r7, r8, r9, $r13, $r21, $r24, $r29, r44, r45, r46, r47;
        com.android.server.wm.WallpaperController $r10, $r35, $r36;
        java.lang.Object[] $r14, $r22, $r25, $r27, $r30, $r32;
        com.android.server.wm.ProtoLogGroup $r15, $r23, $r26, $r28, $r31, $r33;
        com.android.server.wm.DisplayContent $r16, $r38, $r39, $r40, $r42;
        android.view.WindowManager$LayoutParams $r34;
        int $i1, $i2, i3, i5, i6;

        r0 := @this: com.android.server.wm.AppTransitionController;

        i3 := @parameter0: int;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        if i3 == 0 goto label19;

        if i3 == 26 goto label19;

        if i3 == 19 goto label19;

        $z3 = staticinvoke <com.android.server.wm.AppTransition: boolean isChangeTransit(int)>(i3);

        if $z3 == 0 goto label01;

        goto label19;

     label01:
        $r10 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.WallpaperController mWallpaperControllerLocked>;

        r1 = virtualinvoke $r10.<com.android.server.wm.WallpaperController: com.android.server.wm.WindowState getWallpaperTarget()>();

        if r1 == null goto label04;

        $r34 = r1.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i1 = $r34.<android.view.WindowManager$LayoutParams: int flags>;

        $i2 = $i1 & 1048576;

        if $i2 != 0 goto label03;

        if i3 == 8 goto label02;

        if i3 != 10 goto label04;

     label02:
        $r35 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.WallpaperController mWallpaperControllerLocked>;

        $z14 = virtualinvoke $r35.<com.android.server.wm.WallpaperController: boolean isWallpaperVisible()>();

        if $z14 == 0 goto label04;

     label03:
        z15 = 1;

        goto label05;

     label04:
        z15 = 0;

     label05:
        $r36 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.WallpaperController mWallpaperControllerLocked>;

        $z16 = virtualinvoke $r36.<com.android.server.wm.WallpaperController: boolean isWallpaperTargetAnimating()>();

        if $z16 != 0 goto label07;

        if z15 != 0 goto label06;

        goto label07;

     label06:
        r37 = r1;

        goto label08;

     label07:
        r37 = null;

     label08:
        $r38 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        r2 = $r38.<com.android.server.wm.DisplayContent: android.util.ArraySet mOpeningApps>;

        $r39 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        r3 = $r39.<com.android.server.wm.DisplayContent: android.util.ArraySet mClosingApps>;

        $r40 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r41 = $r40.<com.android.server.wm.DisplayContent: android.util.ArraySet mOpeningApps>;

        r4 = specialinvoke r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.ActivityRecord getTopApp(android.util.ArraySet,boolean)>($r41, 0);

        $r42 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r43 = $r42.<com.android.server.wm.DisplayContent: android.util.ArraySet mClosingApps>;

        r5 = specialinvoke r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.ActivityRecord getTopApp(android.util.ArraySet,boolean)>($r43, 1);

        z2 = specialinvoke r0.<com.android.server.wm.AppTransitionController: boolean canBeWallpaperTarget(android.util.ArraySet)>(r2);

        $z17 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_APP_TRANSITIONS_enabled>;

        if $z17 == 0 goto label09;

        r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r37);

        r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r3);

        $r33 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_APP_TRANSITIONS>;

        $r32 = newarray (java.lang.Object)[4];

        $r32[0] = r6;

        $r32[1] = r7;

        $r32[2] = r8;

        $r32[3] = r9;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void v(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r33, -371630969, 0, null, $r32);

        goto label09;

     label09:
        if z2 == 0 goto label10;

        if i3 != 20 goto label10;

        i5 = 21;

        $z13 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_APP_TRANSITIONS_enabled>;

        if $z13 == 0 goto label18;

        $r29 = staticinvoke <com.android.server.wm.AppTransition: java.lang.String appTransitionToString(int)>(21);

        r44 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r29);

        $r31 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_APP_TRANSITIONS>;

        $r30 = newarray (java.lang.Object)[1];

        $r30[0] = r44;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void v(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r31, -129722369, 0, null, $r30);

        i5 = 21;

        goto label18;

     label10:
        i5 = i3;

        $z4 = staticinvoke <com.android.server.wm.AppTransition: boolean isKeyguardGoingAwayTransit(int)>(i3);

        if $z4 != 0 goto label18;

        if z1 == 0 goto label16;

        if z0 == 0 goto label16;

        $z12 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_APP_TRANSITIONS_enabled>;

        if $z12 == 0 goto label11;

        $r28 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_APP_TRANSITIONS>;

        $r27 = (java.lang.Object[]) null;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void v(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r28, 100936473, 0, null, $r27);

     label11:
        tableswitch(i3)
        {
            case 6: goto label14;
            case 7: goto label13;
            case 8: goto label14;
            case 9: goto label13;
            case 10: goto label14;
            case 11: goto label13;
            default: goto label12;
        };

     label12:
        i6 = i3;

        goto label15;

     label13:
        i6 = 15;

        goto label15;

     label14:
        i6 = 14;

     label15:
        i5 = i6;

        $z18 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_APP_TRANSITIONS_enabled>;

        if $z18 == 0 goto label18;

        $r24 = staticinvoke <com.android.server.wm.AppTransition: java.lang.String appTransitionToString(int)>(i6);

        r45 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r24);

        $r26 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_APP_TRANSITIONS>;

        $r25 = newarray (java.lang.Object)[1];

        $r25[0] = r45;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void v(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r26, -129722369, 0, null, $r25);

        i5 = i6;

        goto label18;

     label16:
        if r37 == null goto label17;

        $r16 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r17 = $r16.<com.android.server.wm.DisplayContent: android.util.ArraySet mOpeningApps>;

        $z8 = virtualinvoke $r17.<android.util.ArraySet: boolean isEmpty()>();

        if $z8 != 0 goto label17;

        $r18 = r37.<com.android.server.wm.WindowState: com.android.server.wm.ActivityRecord mActivityRecord>;

        $z9 = virtualinvoke r2.<android.util.ArraySet: boolean contains(java.lang.Object)>($r18);

        if $z9 != 0 goto label17;

        $r19 = r37.<com.android.server.wm.WindowState: com.android.server.wm.ActivityRecord mActivityRecord>;

        $z10 = virtualinvoke r3.<android.util.ArraySet: boolean contains(java.lang.Object)>($r19);

        if $z10 == 0 goto label17;

        $r20 = r37.<com.android.server.wm.WindowState: com.android.server.wm.ActivityRecord mActivityRecord>;

        if r5 != $r20 goto label17;

        i5 = 12;

        $z11 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_APP_TRANSITIONS_enabled>;

        if $z11 == 0 goto label18;

        $r21 = staticinvoke <com.android.server.wm.AppTransition: java.lang.String appTransitionToString(int)>(12);

        r46 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r21);

        $r23 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_APP_TRANSITIONS>;

        $r22 = newarray (java.lang.Object)[1];

        $r22[0] = r46;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void v(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r23, -1044506655, 0, null, $r22);

        i5 = 12;

        goto label18;

     label17:
        i5 = i3;

        if r1 == null goto label18;

        i5 = i3;

        $z5 = virtualinvoke r1.<com.android.server.wm.WindowState: boolean isVisibleLw()>();

        if $z5 == 0 goto label18;

        i5 = i3;

        $r11 = r1.<com.android.server.wm.WindowState: com.android.server.wm.ActivityRecord mActivityRecord>;

        $z6 = virtualinvoke r2.<android.util.ArraySet: boolean contains(java.lang.Object)>($r11);

        if $z6 == 0 goto label18;

        i5 = i3;

        $r12 = r1.<com.android.server.wm.WindowState: com.android.server.wm.ActivityRecord mActivityRecord>;

        if r4 != $r12 goto label18;

        i5 = i3;

        if i3 == 25 goto label18;

        i5 = 13;

        $z7 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_APP_TRANSITIONS_enabled>;

        if $z7 == 0 goto label18;

        $r13 = staticinvoke <com.android.server.wm.AppTransition: java.lang.String appTransitionToString(int)>(13);

        r47 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r13);

        $r15 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_APP_TRANSITIONS>;

        $r14 = newarray (java.lang.Object)[1];

        $r14[0] = r47;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void v(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r15, -793346159, 0, null, $r14);

        i5 = 13;

     label18:
        return i5;

     label19:
        return i3;
    }

    private void overrideWithRemoteAnimationIfSet(com.android.server.wm.ActivityRecord, int, android.util.ArraySet)
    {
        com.android.server.wm.AppTransitionController r0;
        com.android.server.wm.ActivityRecord r1;
        int i0;
        com.android.server.wm.DisplayContent $r2;
        com.android.server.wm.AppTransition $r3;
        android.util.ArraySet r4;
        android.view.RemoteAnimationAdapter r5;

        r0 := @this: com.android.server.wm.AppTransitionController;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        i0 := @parameter1: int;

        r4 := @parameter2: android.util.ArraySet;

        if i0 != 26 goto label1;

        return;

     label1:
        if r1 != null goto label2;

        return;

     label2:
        r5 = virtualinvoke r0.<com.android.server.wm.AppTransitionController: android.view.RemoteAnimationAdapter getRemoteAnimationOverride(com.android.server.wm.WindowContainer,int,android.util.ArraySet)>(r1, i0, r4);

        if r5 == null goto label3;

        $r2 = virtualinvoke r1.<com.android.server.wm.ActivityRecord: com.android.server.wm.DisplayContent getDisplayContent()>();

        $r3 = $r2.<com.android.server.wm.DisplayContent: com.android.server.wm.AppTransition mAppTransition>;

        virtualinvoke $r3.<com.android.server.wm.AppTransition: void overridePendingAppTransitionRemote(android.view.RemoteAnimationAdapter)>(r5);

     label3:
        return;
    }

    private boolean transitionGoodToGo(android.util.ArraySet, android.util.ArrayMap)
    {
        com.android.server.wm.AppTransitionController r0;
        android.util.ArrayMap r1;
        long l0;
        com.android.server.wm.ScreenRotationAnimation r2;
        com.android.server.wm.ActivityRecord r3;
        java.lang.String r4, r5, $r20, r51;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, z18, z19, z20, z21, z22, z23, z24;
        com.android.server.wm.ProtoLogGroup r6, $r22, $r24, $r41, $r46;
        com.android.server.wm.WindowManagerService $r7, $r42;
        com.android.server.wm.RootWindowContainer $r8;
        com.android.server.wm.DisplayContent $r9, $r10, $r12, $r14, $r18, $r38, $r43;
        com.android.server.wm.AppTransition $r11, $r13, $r44;
        com.android.server.wm.UnknownAppVisibilityController $r15, $r19;
        com.android.server.wm.WallpaperController $r16, $r17;
        java.lang.Object[] $r21, $r23, $r33, $r40, $r45;
        java.lang.Object $r25;
        com.android.server.wm.WindowContainer $r26;
        com.android.server.wm.StartingData $r27;
        java.lang.Integer $r28, $r30;
        com.android.server.wm.WindowState $r32;
        java.lang.Boolean $r34, $r35, $r36, $r37, $r48, $r49;
        com.android.server.wm.DisplayRotation $r39;
        int $i1, i4, $i5, i11;
        java.lang.Long $r47;
        android.util.ArraySet r50;
        byte b10;

        r0 := @this: com.android.server.wm.AppTransitionController;

        r50 := @parameter0: android.util.ArraySet;

        r1 := @parameter1: android.util.ArrayMap;

        z18 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_APP_TRANSITIONS_enabled>;

        if z18 == 0 goto label01;

        $i1 = virtualinvoke r50.<android.util.ArraySet: int size()>();

        l0 = (long) $i1;

        $r42 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.WindowManagerService mService>;

        z19 = $r42.<com.android.server.wm.WindowManagerService: boolean mDisplayFrozen>;

        $r43 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r44 = $r43.<com.android.server.wm.DisplayContent: com.android.server.wm.AppTransition mAppTransition>;

        z20 = virtualinvoke $r44.<com.android.server.wm.AppTransition: boolean isTimeout()>();

        $r46 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_APP_TRANSITIONS>;

        $r45 = newarray (java.lang.Object)[3];

        $r47 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r45[0] = $r47;

        $r48 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z19);

        $r45[1] = $r48;

        $r49 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z20);

        $r45[2] = $r49;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void v(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r46, 2045641491, 61, null, $r45);

     label01:
        $r7 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.WindowManagerService mService>;

        $r8 = $r7.<com.android.server.wm.WindowManagerService: com.android.server.wm.RootWindowContainer mRoot>;

        $r9 = virtualinvoke $r8.<com.android.server.wm.RootWindowContainer: com.android.server.wm.DisplayContent getDisplayContent(int)>(0);

        r2 = virtualinvoke $r9.<com.android.server.wm.DisplayContent: com.android.server.wm.ScreenRotationAnimation getRotationAnimation()>();

        $r10 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r11 = $r10.<com.android.server.wm.DisplayContent: com.android.server.wm.AppTransition mAppTransition>;

        $z2 = virtualinvoke $r11.<com.android.server.wm.AppTransition: boolean isTimeout()>();

        if $z2 != 0 goto label23;

        if r2 == null goto label03;

        $z15 = virtualinvoke r2.<com.android.server.wm.ScreenRotationAnimation: boolean isAnimating()>();

        if $z15 == 0 goto label03;

        $r38 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r39 = virtualinvoke $r38.<com.android.server.wm.DisplayContent: com.android.server.wm.DisplayRotation getDisplayRotation()>();

        $z16 = virtualinvoke $r39.<com.android.server.wm.DisplayRotation: boolean needsUpdate()>();

        if $z16 == 0 goto label03;

        $z17 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_APP_TRANSITIONS_enabled>;

        if $z17 == 0 goto label02;

        $r41 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_APP_TRANSITIONS>;

        $r40 = (java.lang.Object[]) null;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void v(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r41, 628276090, 0, null, $r40);

     label02:
        return 0;

     label03:
        i4 = 0;

     label04:
        $i5 = virtualinvoke r50.<android.util.ArraySet: int size()>();

        if i4 >= $i5 goto label14;

        $r25 = virtualinvoke r50.<android.util.ArraySet: java.lang.Object valueAt(int)>(i4);

        $r26 = (com.android.server.wm.WindowContainer) $r25;

        r3 = staticinvoke <com.android.server.wm.AppTransitionController: com.android.server.wm.ActivityRecord getAppFromContainer(com.android.server.wm.WindowContainer)>($r26);

        if r3 != null goto label05;

        goto label13;

     label05:
        $z9 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_APP_TRANSITIONS_enabled>;

        if $z9 == 0 goto label06;

        r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r3);

        z0 = r3.<com.android.server.wm.ActivityRecord: boolean allDrawn>;

        z1 = r3.<com.android.server.wm.ActivityRecord: boolean startingDisplayed>;

        z21 = r3.<com.android.server.wm.ActivityRecord: boolean startingMoved>;

        z22 = virtualinvoke r3.<com.android.server.wm.ActivityRecord: boolean isRelaunching()>();

        $r32 = r3.<com.android.server.wm.ActivityRecord: com.android.server.wm.WindowState startingWindow>;

        r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r32);

        r6 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_APP_TRANSITIONS>;

        $r33 = newarray (java.lang.Object)[6];

        $r33[0] = r4;

        $r34 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r33[1] = $r34;

        $r35 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1);

        $r33[2] = $r35;

        $r36 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z21);

        $r33[3] = $r36;

        $r37 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z22);

        $r33[4] = $r37;

        $r33[5] = r5;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void v(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>(r6, 289967521, 1020, null, $r33);

        goto label06;

     label06:
        $z10 = r3.<com.android.server.wm.ActivityRecord: boolean allDrawn>;

        if $z10 == 0 goto label07;

        $z14 = virtualinvoke r3.<com.android.server.wm.ActivityRecord: boolean isRelaunching()>();

        if $z14 != 0 goto label07;

        z23 = 1;

        goto label08;

     label07:
        z23 = 0;

     label08:
        if z23 != 0 goto label09;

        $z12 = r3.<com.android.server.wm.ActivityRecord: boolean startingDisplayed>;

        if $z12 != 0 goto label09;

        $z13 = r3.<com.android.server.wm.ActivityRecord: boolean startingMoved>;

        if $z13 != 0 goto label09;

        return 0;

     label09:
        if z23 == 0 goto label10;

        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        virtualinvoke r1.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r30);

        goto label13;

     label10:
        $r27 = r3.<com.android.server.wm.ActivityRecord: com.android.server.wm.StartingData mStartingData>;

        $z11 = $r27 instanceof com.android.server.wm.SplashScreenStartingData;

        if $z11 == 0 goto label11;

        b10 = 1;

        goto label12;

     label11:
        b10 = 4;

     label12:
        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b10);

        virtualinvoke r1.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r28);

     label13:
        i11 = i4 + 1;

        i4 = i11;

        goto label04;

     label14:
        $r12 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r13 = $r12.<com.android.server.wm.DisplayContent: com.android.server.wm.AppTransition mAppTransition>;

        $z3 = virtualinvoke $r13.<com.android.server.wm.AppTransition: boolean isFetchingAppTransitionsSpecs()>();

        if $z3 == 0 goto label16;

        $z8 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_APP_TRANSITIONS_enabled>;

        if $z8 == 0 goto label15;

        $r24 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_APP_TRANSITIONS>;

        $r23 = (java.lang.Object[]) null;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void v(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r24, -1009117329, 0, null, $r23);

        goto label15;

     label15:
        return 0;

     label16:
        $r14 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r15 = $r14.<com.android.server.wm.DisplayContent: com.android.server.wm.UnknownAppVisibilityController mUnknownAppVisibilityController>;

        $z4 = virtualinvoke $r15.<com.android.server.wm.UnknownAppVisibilityController: boolean allResolved()>();

        if $z4 != 0 goto label18;

        $z7 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_APP_TRANSITIONS_enabled>;

        if $z7 == 0 goto label17;

        $r18 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r19 = $r18.<com.android.server.wm.DisplayContent: com.android.server.wm.UnknownAppVisibilityController mUnknownAppVisibilityController>;

        $r20 = virtualinvoke $r19.<com.android.server.wm.UnknownAppVisibilityController: java.lang.String getDebugMessage()>();

        r51 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r20);

        $r22 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_APP_TRANSITIONS>;

        $r21 = newarray (java.lang.Object)[1];

        $r21[0] = r51;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void v(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r22, -379068494, 0, null, $r21);

        goto label17;

     label17:
        return 0;

     label18:
        $r16 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.WallpaperController mWallpaperControllerLocked>;

        $z5 = virtualinvoke $r16.<com.android.server.wm.WallpaperController: boolean isWallpaperVisible()>();

        if $z5 == 0 goto label20;

        $r17 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.WallpaperController mWallpaperControllerLocked>;

        $z6 = virtualinvoke $r17.<com.android.server.wm.WallpaperController: boolean wallpaperTransitionReady()>();

        if $z6 == 0 goto label19;

        goto label20;

     label19:
        z24 = 0;

        goto label21;

     label20:
        z24 = 1;

     label21:
        if z24 == 0 goto label22;

        return 1;

     label22:
        return 0;

     label23:
        return 1;
    }

    android.view.RemoteAnimationAdapter getRemoteAnimationOverride(com.android.server.wm.WindowContainer, int, android.util.ArraySet)
    {
        com.android.server.wm.AppTransitionController r0;
        int i0;
        android.util.ArraySet r1;
        android.view.RemoteAnimationAdapter $r2, r5;
        com.android.server.wm.WindowContainer r3;
        android.view.RemoteAnimationDefinition r4, r6;

        r0 := @this: com.android.server.wm.AppTransitionController;

        r3 := @parameter0: com.android.server.wm.WindowContainer;

        i0 := @parameter1: int;

        r1 := @parameter2: android.util.ArraySet;

        r4 = virtualinvoke r3.<com.android.server.wm.WindowContainer: android.view.RemoteAnimationDefinition getRemoteAnimationDefinition()>();

        if r4 == null goto label1;

        r5 = virtualinvoke r4.<android.view.RemoteAnimationDefinition: android.view.RemoteAnimationAdapter getAdapter(int,android.util.ArraySet)>(i0, r1);

        if r5 == null goto label1;

        return r5;

     label1:
        r6 = r0.<com.android.server.wm.AppTransitionController: android.view.RemoteAnimationDefinition mRemoteAnimationDefinition>;

        if r6 != null goto label2;

        return null;

     label2:
        $r2 = virtualinvoke r6.<android.view.RemoteAnimationDefinition: android.view.RemoteAnimationAdapter getAdapter(int,android.util.ArraySet)>(i0, r1);

        return $r2;
    }

    void handleAppTransitionReady()
    {
        com.android.server.wm.AppTransitionController r0;
        com.android.server.wm.ActivityRecord r1, r2, $r35, r49, r59, r64;
        android.view.WindowManager$LayoutParams r3;
        android.util.ArrayMap $r4, $r6, $r9, $r96;
        com.android.server.wm.DisplayContent $r5, $r8, $r11, $r12, $r13, $r15, $r20, $r26, $r28, $r32, $r43, $r44, $r46, $r47, $r50, $r52, $r54, $r56, $r60, $r62, $r65, $r67, $r71, $r73, $r75, $r81, $r82, $r84, $r86, $r88, $r90, $r91, r97;
        android.util.ArraySet $r7, $r10, $r14, $r16, $r21, $r27, $r29, $r33, $r48, $r51, $r53, $r55, $r57, r58, $r61, $r63, $r66, $r68, r72, r74, $r76, $r83, $r85, $r87;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, z7, z8, z9, $z10, z11, $z12, z13;
        com.android.server.wm.WallpaperController $r17, $r18;
        com.android.server.wm.WindowState $r19;
        int $i0, $i1, $i2, $i3, i4, i5, i6, i7, i8, i9, $i10, i11, i12, i13;
        com.android.server.wm.WindowManagerService $r23, $r39, $r69, $r77, $r79, $r92;
        com.android.server.wm._$$Lambda$AppTransitionController$wKDCdmYJWN9Qk9bjArILV5j7lEY $r24;
        com.android.server.wm.WindowAnimator $r25;
        java.lang.Object $r30, $r34;
        com.android.server.wm.WindowContainer $r31;
        java.lang.Object[] $r36;
        com.android.server.wm.ProtoLogGroup $r37;
        java.lang.Throwable $r38, $r41, r98;
        com.android.server.wm.SurfaceAnimationRunner $r40, $r70, $r78;
        com.android.server.wm.AppTransition r42;
        java.util.List $r45;
        com.android.server.wm.TaskSnapshotController $r80;
        com.android.server.wm.UnknownAppVisibilityController $r89;
        com.android.server.wm.ActivityTaskManagerService $r93;
        com.android.server.wm.ActivityStackSupervisor $r94;
        com.android.server.wm.ActivityMetricsLogger $r95;

        r0 := @this: com.android.server.wm.AppTransitionController;

        $r4 = r0.<com.android.server.wm.AppTransitionController: android.util.ArrayMap mTempTransitionReasons>;

        virtualinvoke $r4.<android.util.ArrayMap: void clear()>();

        $r5 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r7 = $r5.<com.android.server.wm.DisplayContent: android.util.ArraySet mOpeningApps>;

        $r6 = r0.<com.android.server.wm.AppTransitionController: android.util.ArrayMap mTempTransitionReasons>;

        $z1 = specialinvoke r0.<com.android.server.wm.AppTransitionController: boolean transitionGoodToGo(android.util.ArraySet,android.util.ArrayMap)>($r7, $r6);

        if $z1 == 0 goto label24;

        $r8 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r10 = $r8.<com.android.server.wm.DisplayContent: android.util.ArraySet mChangingContainers>;

        $r9 = r0.<com.android.server.wm.AppTransitionController: android.util.ArrayMap mTempTransitionReasons>;

        $z2 = specialinvoke r0.<com.android.server.wm.AppTransitionController: boolean transitionGoodToGo(android.util.ArraySet,android.util.ArrayMap)>($r10, $r9);

        if $z2 != 0 goto label01;

        goto label24;

     label01:
        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(32L, "AppTransitionReady");

        z7 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_APP_TRANSITIONS_enabled>;

        if z7 == 0 goto label02;

        $r37 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_APP_TRANSITIONS>;

        $r36 = (java.lang.Object[]) null;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void v(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r37, 255692476, 0, null, $r36);

     label02:
        $r11 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        r42 = $r11.<com.android.server.wm.DisplayContent: com.android.server.wm.AppTransition mAppTransition>;

        i4 = virtualinvoke r42.<com.android.server.wm.AppTransition: int getAppTransition()>();

        i5 = i4;

        $r12 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $z3 = $r12.<com.android.server.wm.DisplayContent: boolean mSkipAppTransitionAnimation>;

        if $z3 == 0 goto label03;

        i5 = i4;

        $z6 = staticinvoke <com.android.server.wm.AppTransition: boolean isKeyguardGoingAwayTransit(int)>(i4);

        if $z6 != 0 goto label03;

        i5 = -1;

     label03:
        $r43 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r43.<com.android.server.wm.DisplayContent: boolean mSkipAppTransitionAnimation> = 0;

        $r44 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r45 = $r44.<com.android.server.wm.DisplayContent: java.util.List mNoAnimationNotifyOnTransitionFinished>;

        interfaceinvoke $r45.<java.util.List: void clear()>();

        virtualinvoke r42.<com.android.server.wm.AppTransition: void removeAppTransitionTimeoutCallbacks()>();

        $r46 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r46.<com.android.server.wm.DisplayContent: boolean mWallpaperMayChange> = 0;

        $r47 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r48 = $r47.<com.android.server.wm.DisplayContent: android.util.ArraySet mOpeningApps>;

        i6 = virtualinvoke $r48.<android.util.ArraySet: int size()>();

        i7 = 0;

     label04:
        if i7 >= i6 goto label05;

        $r32 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r33 = $r32.<com.android.server.wm.DisplayContent: android.util.ArraySet mOpeningApps>;

        $r34 = virtualinvoke $r33.<android.util.ArraySet: java.lang.Object valueAtUnchecked(int)>(i7);

        $r35 = (com.android.server.wm.ActivityRecord) $r34;

        virtualinvoke $r35.<com.android.server.wm.ActivityRecord: void clearAnimatingFlags()>();

        i7 = i7 + 1;

        goto label04;

     label05:
        $r13 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r14 = $r13.<com.android.server.wm.DisplayContent: android.util.ArraySet mChangingContainers>;

        i8 = virtualinvoke $r14.<android.util.ArraySet: int size()>();

        i9 = 0;

     label06:
        if i9 >= i8 goto label08;

        $r28 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r29 = $r28.<com.android.server.wm.DisplayContent: android.util.ArraySet mChangingContainers>;

        $r30 = virtualinvoke $r29.<android.util.ArraySet: java.lang.Object valueAtUnchecked(int)>(i9);

        $r31 = (com.android.server.wm.WindowContainer) $r30;

        r49 = staticinvoke <com.android.server.wm.AppTransitionController: com.android.server.wm.ActivityRecord getAppFromContainer(com.android.server.wm.WindowContainer)>($r31);

        if r49 == null goto label07;

        virtualinvoke r49.<com.android.server.wm.ActivityRecord: void clearAnimatingFlags()>();

     label07:
        i9 = i9 + 1;

        goto label06;

     label08:
        $r17 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.WallpaperController mWallpaperControllerLocked>;

        $r15 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r16 = $r15.<com.android.server.wm.DisplayContent: android.util.ArraySet mOpeningApps>;

        virtualinvoke $r17.<com.android.server.wm.WallpaperController: void adjustWallpaperWindowsForAppTransitionIfNeeded(android.util.ArraySet)>($r16);

        $r18 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.WallpaperController mWallpaperControllerLocked>;

        $r19 = virtualinvoke $r18.<com.android.server.wm.WallpaperController: com.android.server.wm.WindowState getWallpaperTarget()>();

        if $r19 == null goto label09;

        z8 = 1;

        goto label10;

     label09:
        z8 = 0;

     label10:
        $r20 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r21 = $r20.<com.android.server.wm.DisplayContent: android.util.ArraySet mOpeningApps>;

        $z4 = specialinvoke r0.<com.android.server.wm.AppTransitionController: boolean canBeWallpaperTarget(android.util.ArraySet)>($r21);

        if $z4 == 0 goto label11;

        if z8 == 0 goto label11;

        z9 = 1;

        goto label12;

     label11:
        z9 = 0;

     label12:
        $r50 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r51 = $r50.<com.android.server.wm.DisplayContent: android.util.ArraySet mClosingApps>;

        $z10 = specialinvoke r0.<com.android.server.wm.AppTransitionController: boolean canBeWallpaperTarget(android.util.ArraySet)>($r51);

        if $z10 == 0 goto label13;

        if z8 == 0 goto label13;

        z11 = 1;

        goto label14;

     label13:
        z11 = 0;

     label14:
        $i10 = virtualinvoke r0.<com.android.server.wm.AppTransitionController: int maybeUpdateTransitToTranslucentAnim(int)>(i5);

        i11 = specialinvoke r0.<com.android.server.wm.AppTransitionController: int maybeUpdateTransitToWallpaper(int,boolean,boolean)>($i10, z9, z11);

        $r52 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r53 = $r52.<com.android.server.wm.DisplayContent: android.util.ArraySet mOpeningApps>;

        $r54 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r55 = $r54.<com.android.server.wm.DisplayContent: android.util.ArraySet mClosingApps>;

        $r56 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r57 = $r56.<com.android.server.wm.DisplayContent: android.util.ArraySet mChangingContainers>;

        r58 = staticinvoke <com.android.server.wm.AppTransitionController: android.util.ArraySet collectActivityTypes(android.util.ArraySet,android.util.ArraySet,android.util.ArraySet)>($r53, $r55, $r57);

        r59 = specialinvoke r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.ActivityRecord findAnimLayoutParamsToken(int,android.util.ArraySet)>(i11, r58);

        $r60 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r61 = $r60.<com.android.server.wm.DisplayContent: android.util.ArraySet mOpeningApps>;

        r1 = specialinvoke r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.ActivityRecord getTopApp(android.util.ArraySet,boolean)>($r61, 0);

        $r62 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r63 = $r62.<com.android.server.wm.DisplayContent: android.util.ArraySet mClosingApps>;

        r64 = specialinvoke r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.ActivityRecord getTopApp(android.util.ArraySet,boolean)>($r63, 0);

        $r65 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r66 = $r65.<com.android.server.wm.DisplayContent: android.util.ArraySet mChangingContainers>;

        r2 = specialinvoke r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.ActivityRecord getTopApp(android.util.ArraySet,boolean)>($r66, 0);

        r3 = staticinvoke <com.android.server.wm.AppTransitionController: android.view.WindowManager$LayoutParams getAnimLp(com.android.server.wm.ActivityRecord)>(r59);

        specialinvoke r0.<com.android.server.wm.AppTransitionController: void overrideWithRemoteAnimationIfSet(com.android.server.wm.ActivityRecord,int,android.util.ArraySet)>(r59, i11, r58);

        $r67 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r68 = $r67.<com.android.server.wm.DisplayContent: android.util.ArraySet mOpeningApps>;

        $z12 = specialinvoke r0.<com.android.server.wm.AppTransitionController: boolean containsVoiceInteraction(android.util.ArraySet)>($r68);

        if $z12 != 0 goto label15;

        z13 = 0;

        $r26 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r27 = $r26.<com.android.server.wm.DisplayContent: android.util.ArraySet mOpeningApps>;

        $z5 = specialinvoke r0.<com.android.server.wm.AppTransitionController: boolean containsVoiceInteraction(android.util.ArraySet)>($r27);

        if $z5 == 0 goto label16;

     label15:
        z13 = 1;

     label16:
        $r69 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.WindowManagerService mService>;

        $r70 = $r69.<com.android.server.wm.WindowManagerService: com.android.server.wm.SurfaceAnimationRunner mSurfaceAnimationRunner>;

        virtualinvoke $r70.<com.android.server.wm.SurfaceAnimationRunner: void deferStartingAnimations()>();

     label17:
        $r71 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        r72 = $r71.<com.android.server.wm.DisplayContent: android.util.ArraySet mOpeningApps>;

        $r73 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        r74 = $r73.<com.android.server.wm.DisplayContent: android.util.ArraySet mClosingApps>;

     label18:
        specialinvoke r0.<com.android.server.wm.AppTransitionController: void applyAnimations(android.util.ArraySet,android.util.ArraySet,int,android.view.WindowManager$LayoutParams,boolean)>(r72, r74, i11, r3, z13);

        specialinvoke r0.<com.android.server.wm.AppTransitionController: void handleClosingApps()>();

        specialinvoke r0.<com.android.server.wm.AppTransitionController: void handleOpeningApps()>();

        specialinvoke r0.<com.android.server.wm.AppTransitionController: void handleChangingApps(int)>(i11);

        virtualinvoke r42.<com.android.server.wm.AppTransition: void setLastAppTransition(int,com.android.server.wm.ActivityRecord,com.android.server.wm.ActivityRecord,com.android.server.wm.ActivityRecord)>(i11, r1, r64, r2);

        i12 = virtualinvoke r42.<com.android.server.wm.AppTransition: int getTransitFlags()>();

        $r75 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r76 = $r75.<com.android.server.wm.DisplayContent: android.util.ArraySet mOpeningApps>;

        i13 = virtualinvoke r42.<com.android.server.wm.AppTransition: int goodToGo(int,com.android.server.wm.ActivityRecord,android.util.ArraySet)>(i11, r1, $r76);

        specialinvoke r0.<com.android.server.wm.AppTransitionController: void handleNonAppWindowsInTransition(int,int)>(i11, i12);

        virtualinvoke r42.<com.android.server.wm.AppTransition: void postAnimationCallback()>();

        virtualinvoke r42.<com.android.server.wm.AppTransition: void clear()>();

     label19:
        $r77 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.WindowManagerService mService>;

        $r78 = $r77.<com.android.server.wm.WindowManagerService: com.android.server.wm.SurfaceAnimationRunner mSurfaceAnimationRunner>;

        virtualinvoke $r78.<com.android.server.wm.SurfaceAnimationRunner: void continueStartingAnimations()>();

        $r79 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.WindowManagerService mService>;

        $r80 = $r79.<com.android.server.wm.WindowManagerService: com.android.server.wm.TaskSnapshotController mTaskSnapshotController>;

        $r81 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        virtualinvoke $r80.<com.android.server.wm.TaskSnapshotController: void onTransitionStarting(com.android.server.wm.DisplayContent)>($r81);

        $r82 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r83 = $r82.<com.android.server.wm.DisplayContent: android.util.ArraySet mOpeningApps>;

        virtualinvoke $r83.<android.util.ArraySet: void clear()>();

        $r84 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r85 = $r84.<com.android.server.wm.DisplayContent: android.util.ArraySet mClosingApps>;

        virtualinvoke $r85.<android.util.ArraySet: void clear()>();

        $r86 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r87 = $r86.<com.android.server.wm.DisplayContent: android.util.ArraySet mChangingContainers>;

        virtualinvoke $r87.<android.util.ArraySet: void clear()>();

        $r88 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r89 = $r88.<com.android.server.wm.DisplayContent: com.android.server.wm.UnknownAppVisibilityController mUnknownAppVisibilityController>;

        virtualinvoke $r89.<com.android.server.wm.UnknownAppVisibilityController: void clear()>();

        $r90 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        virtualinvoke $r90.<com.android.server.wm.DisplayContent: void setLayoutNeeded()>();

        $r91 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        virtualinvoke $r91.<com.android.server.wm.DisplayContent: com.android.server.wm.WindowState computeImeTarget(boolean)>(1);

        $r92 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.WindowManagerService mService>;

        $r93 = $r92.<com.android.server.wm.WindowManagerService: com.android.server.wm.ActivityTaskManagerService mAtmService>;

        $r94 = $r93.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityStackSupervisor mStackSupervisor>;

        $r95 = virtualinvoke $r94.<com.android.server.wm.ActivityStackSupervisor: com.android.server.wm.ActivityMetricsLogger getActivityMetricsLogger()>();

        $r96 = r0.<com.android.server.wm.AppTransitionController: android.util.ArrayMap mTempTransitionReasons>;

        virtualinvoke $r95.<com.android.server.wm.ActivityMetricsLogger: void notifyTransitionStarting(android.util.ArrayMap)>($r96);

        if i11 != 28 goto label20;

        $r23 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.WindowManagerService mService>;

        $r25 = $r23.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowAnimator mAnimator>;

        $r24 = new com.android.server.wm._$$Lambda$AppTransitionController$wKDCdmYJWN9Qk9bjArILV5j7lEY;

        specialinvoke $r24.<com.android.server.wm._$$Lambda$AppTransitionController$wKDCdmYJWN9Qk9bjArILV5j7lEY: void <init>(com.android.server.wm.AppTransitionController)>(r0);

        virtualinvoke $r25.<com.android.server.wm.WindowAnimator: void addAfterPrepareSurfacesRunnable(java.lang.Runnable)>($r24);

     label20:
        staticinvoke <android.os.Trace: void traceEnd(long)>(32L);

        r97 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $i2 = r97.<com.android.server.wm.DisplayContent: int pendingLayoutChanges>;

        $i0 = i13 | 1;

        $i1 = $i0 | 2;

        $i3 = $i2 | $i1;

        r97.<com.android.server.wm.DisplayContent: int pendingLayoutChanges> = $i3;

        return;

     label21:
        $r38 := @caughtexception;

        r98 = $r38;

        goto label23;

     label22:
        $r41 := @caughtexception;

        r98 = $r41;

     label23:
        $r39 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.WindowManagerService mService>;

        $r40 = $r39.<com.android.server.wm.WindowManagerService: com.android.server.wm.SurfaceAnimationRunner mSurfaceAnimationRunner>;

        virtualinvoke $r40.<com.android.server.wm.SurfaceAnimationRunner: void continueStartingAnimations()>();

        throw r98;

     label24:
        return;

        catch java.lang.Throwable from label17 to label18 with label22;
        catch java.lang.Throwable from label18 to label19 with label21;
    }

    boolean isTransitWithinTask(int, com.android.server.wm.Task)
    {
        com.android.server.wm.AppTransitionController r0;
        int i0;
        com.android.server.wm.Task r1, $r8, $r11;
        com.android.server.wm.DisplayContent $r2, $r4, $r12;
        android.util.ArraySet $r3, $r5, $r13;
        boolean $z0, $z1, $z2;
        java.lang.Object $r6, $r9;
        com.android.server.wm.ActivityRecord $r7, $r10;
        java.util.Iterator r14, r15;

        r0 := @this: com.android.server.wm.AppTransitionController;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.wm.Task;

        if r1 == null goto label9;

        $r2 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r3 = $r2.<com.android.server.wm.DisplayContent: android.util.ArraySet mChangingContainers>;

        $z0 = virtualinvoke $r3.<android.util.ArraySet: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        goto label9;

     label1:
        if i0 == 6 goto label2;

        if i0 == 7 goto label2;

        if i0 == 18 goto label2;

        return 0;

     label2:
        $r12 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r13 = $r12.<com.android.server.wm.DisplayContent: android.util.ArraySet mOpeningApps>;

        r14 = virtualinvoke $r13.<android.util.ArraySet: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r9 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (com.android.server.wm.ActivityRecord) $r9;

        $r11 = virtualinvoke $r10.<com.android.server.wm.ActivityRecord: com.android.server.wm.Task getTask()>();

        if $r11 == r1 goto label4;

        return 0;

     label4:
        goto label3;

     label5:
        $r4 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r5 = $r4.<com.android.server.wm.DisplayContent: android.util.ArraySet mClosingApps>;

        r15 = virtualinvoke $r5.<android.util.ArraySet: java.util.Iterator iterator()>();

     label6:
        $z1 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r6 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (com.android.server.wm.ActivityRecord) $r6;

        $r8 = virtualinvoke $r7.<com.android.server.wm.ActivityRecord: com.android.server.wm.Task getTask()>();

        if $r8 == r1 goto label7;

        return 0;

     label7:
        goto label6;

     label8:
        return 1;

     label9:
        return 0;
    }

    public void lambda$handleAppTransitionReady$0$AppTransitionController()
    {
        com.android.server.wm.AppTransitionController r0;
        com.android.server.wm.WindowManagerService $r1;
        com.android.server.wm.DisplayContent $r2;
        com.android.server.wm.ActivityTaskManagerInternal $r3;
        int $i0;

        r0 := @this: com.android.server.wm.AppTransitionController;

        $r1 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.WindowManagerService mService>;

        $r3 = $r1.<com.android.server.wm.WindowManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        $r2 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $i0 = virtualinvoke $r2.<com.android.server.wm.DisplayContent: int getDisplayId()>();

        virtualinvoke $r3.<com.android.server.wm.ActivityTaskManagerInternal: void notifySingleTaskDisplayDrawn(int)>($i0);

        return;
    }

    int maybeUpdateTransitToTranslucentAnim(int)
    {
        com.android.server.wm.AppTransitionController r0;
        int i0, $i1, $i2, i3, i4;
        com.android.server.wm.ActivityRecord r1, $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8, z9, $z10, z11, z12, z14, z15;
        com.android.server.wm.DisplayContent $r2, $r4, $r6, $r8, $r12, $r15, $r17;
        android.util.ArraySet $r3, $r5, $r7, $r9, $r13, $r16, $r18;
        java.lang.Object $r10, $r14;

        r0 := @this: com.android.server.wm.AppTransitionController;

        i0 := @parameter0: int;

        $z0 = staticinvoke <com.android.server.wm.AppTransition: boolean isChangeTransit(int)>(i0);

        if $z0 == 0 goto label01;

        return i0;

     label01:
        $z1 = staticinvoke <com.android.server.wm.AppTransition: boolean isTaskTransit(int)>(i0);

        if $z1 != 0 goto label03;

        $z7 = staticinvoke <com.android.server.wm.AppTransition: boolean isActivityTransit(int)>(i0);

        if $z7 == 0 goto label02;

        goto label03;

     label02:
        z8 = 0;

        goto label04;

     label03:
        z8 = 1;

     label04:
        z9 = 1;

        $r15 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r16 = $r15.<com.android.server.wm.DisplayContent: android.util.ArraySet mOpeningApps>;

        $z10 = virtualinvoke $r16.<android.util.ArraySet: boolean isEmpty()>();

        z11 = $z10 ^ 1;

        $r17 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r18 = $r17.<com.android.server.wm.DisplayContent: android.util.ArraySet mOpeningApps>;

        $i2 = virtualinvoke $r18.<android.util.ArraySet: int size()>();

        i3 = $i2 - 1;

     label05:
        if i3 < 0 goto label07;

        $r12 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r13 = $r12.<com.android.server.wm.DisplayContent: android.util.ArraySet mOpeningApps>;

        $r14 = virtualinvoke $r13.<android.util.ArraySet: java.lang.Object valueAt(int)>(i3);

        r1 = (com.android.server.wm.ActivityRecord) $r14;

        z12 = z11;

        $z5 = virtualinvoke r1.<com.android.server.wm.ActivityRecord: boolean isVisible()>();

        if $z5 != 0 goto label06;

        z9 = 0;

        z12 = z11;

        $z6 = virtualinvoke r1.<com.android.server.wm.ActivityRecord: boolean fillsParent()>();

        if $z6 == 0 goto label06;

        z12 = 0;

        z9 = 0;

     label06:
        i3 = i3 + -1;

        z11 = z12;

        goto label05;

     label07:
        $r2 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r3 = $r2.<com.android.server.wm.DisplayContent: android.util.ArraySet mClosingApps>;

        $z2 = virtualinvoke $r3.<android.util.ArraySet: boolean isEmpty()>();

        z14 = $z2 ^ 1;

        $r4 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r5 = $r4.<com.android.server.wm.DisplayContent: android.util.ArraySet mClosingApps>;

        $i1 = virtualinvoke $r5.<android.util.ArraySet: int size()>();

        i4 = $i1 - 1;

     label08:
        z15 = z14;

        if i4 < 0 goto label10;

        $r8 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r9 = $r8.<com.android.server.wm.DisplayContent: android.util.ArraySet mClosingApps>;

        $r10 = virtualinvoke $r9.<android.util.ArraySet: java.lang.Object valueAt(int)>(i4);

        $r11 = (com.android.server.wm.ActivityRecord) $r10;

        $z4 = virtualinvoke $r11.<com.android.server.wm.ActivityRecord: boolean fillsParent()>();

        if $z4 == 0 goto label09;

        z15 = 0;

        goto label10;

     label09:
        i4 = i4 + -1;

        goto label08;

     label10:
        if z8 == 0 goto label11;

        if z15 == 0 goto label11;

        if z9 == 0 goto label11;

        return 25;

     label11:
        if z8 == 0 goto label12;

        if z11 == 0 goto label12;

        $r6 = r0.<com.android.server.wm.AppTransitionController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r7 = $r6.<com.android.server.wm.DisplayContent: android.util.ArraySet mClosingApps>;

        $z3 = virtualinvoke $r7.<android.util.ArraySet: boolean isEmpty()>();

        if $z3 == 0 goto label12;

        return 24;

     label12:
        return i0;
    }

    void registerRemoteAnimations(android.view.RemoteAnimationDefinition)
    {
        com.android.server.wm.AppTransitionController r0;
        android.view.RemoteAnimationDefinition r1;

        r0 := @this: com.android.server.wm.AppTransitionController;

        r1 := @parameter0: android.view.RemoteAnimationDefinition;

        r0.<com.android.server.wm.AppTransitionController: android.view.RemoteAnimationDefinition mRemoteAnimationDefinition> = r1;

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.wm.AppTransitionController: java.lang.String TAG> = "WindowManager";

        return;
    }
}
