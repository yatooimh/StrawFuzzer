class com.android.server.wm.AppWarnings extends java.lang.Object
{
    private static final java.lang.String CONFIG_FILE_NAME;
    public static final int FLAG_HIDE_COMPILE_SDK;
    public static final int FLAG_HIDE_DEPRECATED_SDK;
    public static final int FLAG_HIDE_DISPLAY_SIZE;
    private static final java.lang.String TAG;
    private java.util.HashSet mAlwaysShowUnsupportedCompileSdkWarningActivities;
    private final com.android.server.wm.ActivityTaskManagerService mAtm;
    private final android.util.AtomicFile mConfigFile;
    private com.android.server.wm.DeprecatedTargetSdkVersionDialog mDeprecatedTargetSdkVersionDialog;
    private final com.android.server.wm.AppWarnings$ConfigHandler mHandler;
    private final java.util.HashMap mPackageFlags;
    private final android.content.Context mUiContext;
    private final com.android.server.wm.AppWarnings$UiHandler mUiHandler;
    private com.android.server.wm.UnsupportedCompileSdkDialog mUnsupportedCompileSdkDialog;
    private com.android.server.wm.UnsupportedDisplaySizeDialog mUnsupportedDisplaySizeDialog;

    public void <init>(com.android.server.wm.ActivityTaskManagerService, android.content.Context, android.os.Handler, android.os.Handler, java.io.File)
    {
        com.android.server.wm.AppWarnings r0;
        com.android.server.wm.ActivityTaskManagerService r1;
        android.content.Context r2;
        android.os.Handler r3, r4;
        java.io.File r5, $r13;
        java.util.HashMap $r6;
        java.util.HashSet $r7;
        com.android.server.wm.AppWarnings$ConfigHandler $r8;
        android.os.Looper $r9, $r11;
        com.android.server.wm.AppWarnings$UiHandler $r10;
        android.util.AtomicFile $r12;

        r0 := @this: com.android.server.wm.AppWarnings;

        r1 := @parameter0: com.android.server.wm.ActivityTaskManagerService;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: android.os.Handler;

        r4 := @parameter3: android.os.Handler;

        r5 := @parameter4: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.wm.AppWarnings: java.util.HashMap mPackageFlags> = $r6;

        $r7 = new java.util.HashSet;

        specialinvoke $r7.<java.util.HashSet: void <init>()>();

        r0.<com.android.server.wm.AppWarnings: java.util.HashSet mAlwaysShowUnsupportedCompileSdkWarningActivities> = $r7;

        r0.<com.android.server.wm.AppWarnings: com.android.server.wm.ActivityTaskManagerService mAtm> = r1;

        r0.<com.android.server.wm.AppWarnings: android.content.Context mUiContext> = r2;

        $r8 = new com.android.server.wm.AppWarnings$ConfigHandler;

        $r9 = virtualinvoke r3.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke $r8.<com.android.server.wm.AppWarnings$ConfigHandler: void <init>(com.android.server.wm.AppWarnings,android.os.Looper)>(r0, $r9);

        r0.<com.android.server.wm.AppWarnings: com.android.server.wm.AppWarnings$ConfigHandler mHandler> = $r8;

        $r10 = new com.android.server.wm.AppWarnings$UiHandler;

        $r11 = virtualinvoke r4.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke $r10.<com.android.server.wm.AppWarnings$UiHandler: void <init>(com.android.server.wm.AppWarnings,android.os.Looper)>(r0, $r11);

        r0.<com.android.server.wm.AppWarnings: com.android.server.wm.AppWarnings$UiHandler mUiHandler> = $r10;

        $r12 = new android.util.AtomicFile;

        $r13 = new java.io.File;

        specialinvoke $r13.<java.io.File: void <init>(java.io.File,java.lang.String)>(r5, "packages-warnings.xml");

        specialinvoke $r12.<android.util.AtomicFile: void <init>(java.io.File,java.lang.String)>($r13, "warnings-config");

        r0.<com.android.server.wm.AppWarnings: android.util.AtomicFile mConfigFile> = $r12;

        specialinvoke r0.<com.android.server.wm.AppWarnings: void readConfigFromFileAmsThread()>();

        return;
    }

    static void access$000(com.android.server.wm.AppWarnings, com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.AppWarnings r0;
        com.android.server.wm.ActivityRecord r1;

        r0 := @parameter0: com.android.server.wm.AppWarnings;

        r1 := @parameter1: com.android.server.wm.ActivityRecord;

        specialinvoke r0.<com.android.server.wm.AppWarnings: void showUnsupportedDisplaySizeDialogUiThread(com.android.server.wm.ActivityRecord)>(r1);

        return;
    }

    static void access$100(com.android.server.wm.AppWarnings)
    {
        com.android.server.wm.AppWarnings r0;

        r0 := @parameter0: com.android.server.wm.AppWarnings;

        specialinvoke r0.<com.android.server.wm.AppWarnings: void hideUnsupportedDisplaySizeDialogUiThread()>();

        return;
    }

    static void access$200(com.android.server.wm.AppWarnings, com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.AppWarnings r0;
        com.android.server.wm.ActivityRecord r1;

        r0 := @parameter0: com.android.server.wm.AppWarnings;

        r1 := @parameter1: com.android.server.wm.ActivityRecord;

        specialinvoke r0.<com.android.server.wm.AppWarnings: void showUnsupportedCompileSdkDialogUiThread(com.android.server.wm.ActivityRecord)>(r1);

        return;
    }

    static void access$300(com.android.server.wm.AppWarnings, java.lang.String)
    {
        com.android.server.wm.AppWarnings r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.wm.AppWarnings;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.wm.AppWarnings: void hideDialogsForPackageUiThread(java.lang.String)>(r1);

        return;
    }

    static void access$400(com.android.server.wm.AppWarnings, com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.AppWarnings r0;
        com.android.server.wm.ActivityRecord r1;

        r0 := @parameter0: com.android.server.wm.AppWarnings;

        r1 := @parameter1: com.android.server.wm.ActivityRecord;

        specialinvoke r0.<com.android.server.wm.AppWarnings: void showDeprecatedTargetSdkDialogUiThread(com.android.server.wm.ActivityRecord)>(r1);

        return;
    }

    static void access$500(com.android.server.wm.AppWarnings)
    {
        com.android.server.wm.AppWarnings r0;

        r0 := @parameter0: com.android.server.wm.AppWarnings;

        specialinvoke r0.<com.android.server.wm.AppWarnings: void writeConfigToFileAmsThread()>();

        return;
    }

    private int getPackageFlags(java.lang.String)
    {
        com.android.server.wm.AppWarnings r0;
        java.util.HashMap r1, $r2;
        int i0;
        java.lang.Integer $r3, $r5;
        java.lang.Object $r4;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: com.android.server.wm.AppWarnings;

        r7 := @parameter0: java.lang.String;

        r1 = r0.<com.android.server.wm.AppWarnings: java.util.HashMap mPackageFlags>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.wm.AppWarnings: java.util.HashMap mPackageFlags>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>(r7, $r3);

        $r5 = (java.lang.Integer) $r4;

        i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void hideDialogsForPackageUiThread(java.lang.String)
    {
        com.android.server.wm.AppWarnings r0;
        java.lang.String r1, $r3, $r5, $r7;
        com.android.server.wm.DeprecatedTargetSdkVersionDialog $r2, r10;
        boolean $z0, $z1, $z2;
        com.android.server.wm.UnsupportedCompileSdkDialog $r4, r9;
        com.android.server.wm.UnsupportedDisplaySizeDialog $r6, r8;

        r0 := @this: com.android.server.wm.AppWarnings;

        r1 := @parameter0: java.lang.String;

        r8 = r0.<com.android.server.wm.AppWarnings: com.android.server.wm.UnsupportedDisplaySizeDialog mUnsupportedDisplaySizeDialog>;

        if r8 == null goto label2;

        if r1 == null goto label1;

        $r7 = virtualinvoke r8.<com.android.server.wm.UnsupportedDisplaySizeDialog: java.lang.String getPackageName()>();

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z2 == 0 goto label2;

     label1:
        $r6 = r0.<com.android.server.wm.AppWarnings: com.android.server.wm.UnsupportedDisplaySizeDialog mUnsupportedDisplaySizeDialog>;

        virtualinvoke $r6.<com.android.server.wm.UnsupportedDisplaySizeDialog: void dismiss()>();

        r0.<com.android.server.wm.AppWarnings: com.android.server.wm.UnsupportedDisplaySizeDialog mUnsupportedDisplaySizeDialog> = null;

     label2:
        r9 = r0.<com.android.server.wm.AppWarnings: com.android.server.wm.UnsupportedCompileSdkDialog mUnsupportedCompileSdkDialog>;

        if r9 == null goto label4;

        if r1 == null goto label3;

        $r5 = virtualinvoke r9.<com.android.server.wm.UnsupportedCompileSdkDialog: java.lang.String getPackageName()>();

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label4;

     label3:
        $r4 = r0.<com.android.server.wm.AppWarnings: com.android.server.wm.UnsupportedCompileSdkDialog mUnsupportedCompileSdkDialog>;

        virtualinvoke $r4.<com.android.server.wm.UnsupportedCompileSdkDialog: void dismiss()>();

        r0.<com.android.server.wm.AppWarnings: com.android.server.wm.UnsupportedCompileSdkDialog mUnsupportedCompileSdkDialog> = null;

     label4:
        r10 = r0.<com.android.server.wm.AppWarnings: com.android.server.wm.DeprecatedTargetSdkVersionDialog mDeprecatedTargetSdkVersionDialog>;

        if r10 == null goto label6;

        if r1 == null goto label5;

        $r3 = virtualinvoke r10.<com.android.server.wm.DeprecatedTargetSdkVersionDialog: java.lang.String getPackageName()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label6;

     label5:
        $r2 = r0.<com.android.server.wm.AppWarnings: com.android.server.wm.DeprecatedTargetSdkVersionDialog mDeprecatedTargetSdkVersionDialog>;

        virtualinvoke $r2.<com.android.server.wm.DeprecatedTargetSdkVersionDialog: void dismiss()>();

        r0.<com.android.server.wm.AppWarnings: com.android.server.wm.DeprecatedTargetSdkVersionDialog mDeprecatedTargetSdkVersionDialog> = null;

     label6:
        return;
    }

    private void hideUnsupportedDisplaySizeDialogUiThread()
    {
        com.android.server.wm.AppWarnings r0;
        com.android.server.wm.UnsupportedDisplaySizeDialog r1;

        r0 := @this: com.android.server.wm.AppWarnings;

        r1 = r0.<com.android.server.wm.AppWarnings: com.android.server.wm.UnsupportedDisplaySizeDialog mUnsupportedDisplaySizeDialog>;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.server.wm.UnsupportedDisplaySizeDialog: void dismiss()>();

        r0.<com.android.server.wm.AppWarnings: com.android.server.wm.UnsupportedDisplaySizeDialog mUnsupportedDisplaySizeDialog> = null;

     label1:
        return;
    }

    private void readConfigFromFileAmsThread()
    {
        com.android.server.wm.AppWarnings r0;
        java.io.FileInputStream r1, r18, r19, r20;
        org.xmlpull.v1.XmlPullParser r2;
        java.lang.String r3, $r6, $r7, $r8, $r9, r22, r23;
        android.util.AtomicFile $r4;
        java.nio.charset.Charset $r5;
        boolean $z0, $z1;
        int $i0, i3, i4, i6, i7;
        java.lang.Throwable $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        java.util.HashMap $r25;
        java.lang.Integer $r26;

        r0 := @this: com.android.server.wm.AppWarnings;

        r18 = null;

        r19 = null;

        r20 = null;

     label01:
        $r4 = r0.<com.android.server.wm.AppWarnings: android.util.AtomicFile mConfigFile>;

        r1 = virtualinvoke $r4.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

     label02:
        r20 = r1;

        r18 = r1;

        r19 = r1;

     label03:
        r2 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

     label04:
        r20 = r1;

        r18 = r1;

        r19 = r1;

     label05:
        $r5 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r6 = virtualinvoke $r5.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r1, $r6);

     label06:
        r20 = r1;

        r18 = r1;

        r19 = r1;

     label07:
        i3 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label08:
        if i3 == 2 goto label11;

        if i3 == 1 goto label11;

        r20 = r1;

        r18 = r1;

        r19 = r1;

     label09:
        i3 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int next()>();

     label10:
        goto label08;

     label11:
        if i3 != 1 goto label16;

        if r1 == null goto label15;

     label12:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label13:
        goto label15;

     label14:
        $r12 := @caughtexception;

     label15:
        return;

     label16:
        r20 = r1;

        r18 = r1;

        r19 = r1;

     label17:
        $r7 = "packages";

        $r8 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label39;

     label18:
        r20 = r1;

        r18 = r1;

        r19 = r1;

     label19:
        i4 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int next()>();

     label20:
        if i4 != 2 goto label36;

        r20 = r1;

        r18 = r1;

        r19 = r1;

     label21:
        r22 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

     label22:
        r20 = r1;

        r18 = r1;

        r19 = r1;

     label23:
        $i0 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i0 != 2 goto label36;

     label24:
        r20 = r1;

        r18 = r1;

        r19 = r1;

     label25:
        $r9 = "package";

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r22);

        if $z1 == 0 goto label36;

     label26:
        r20 = r1;

        r18 = r1;

        r19 = r1;

     label27:
        r23 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

     label28:
        if r23 == null goto label36;

        r20 = r1;

        r18 = r1;

        r19 = r1;

     label29:
        r3 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "flags");

     label30:
        i6 = 0;

        if r3 == null goto label34;

        r20 = r1;

        r18 = r1;

        r19 = r1;

     label31:
        i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

     label32:
        goto label34;

     label33:
        $r16 := @caughtexception;

        i6 = 0;

     label34:
        r20 = r1;

        r18 = r1;

        r19 = r1;

     label35:
        $r25 = r0.<com.android.server.wm.AppWarnings: java.util.HashMap mPackageFlags>;

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);

        virtualinvoke $r25.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r23, $r26);

     label36:
        r20 = r1;

        r18 = r1;

        r19 = r1;

     label37:
        i7 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int next()>();

     label38:
        i4 = i7;

        if i7 != 1 goto label20;

     label39:
        if r1 == null goto label54;

     label40:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label41:
        goto label54;

     label42:
        $r15 := @caughtexception;

        goto label41;

     label43:
        $r14 := @caughtexception;

        goto label55;

     label44:
        $r17 := @caughtexception;

        if r18 == null goto label46;

        r20 = r18;

     label45:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AppWarnings", "Error reading package metadata", $r17);

     label46:
        if r18 == null goto label54;

     label47:
        virtualinvoke r18.<java.io.FileInputStream: void close()>();

     label48:
        goto label41;

     label49:
        $r11 := @caughtexception;

        r20 = r19;

     label50:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AppWarnings", "Error reading package metadata", $r11);

     label51:
        if r19 == null goto label54;

     label52:
        virtualinvoke r19.<java.io.FileInputStream: void close()>();

     label53:
        goto label41;

     label54:
        return;

     label55:
        if r20 == null goto label59;

     label56:
        virtualinvoke r20.<java.io.FileInputStream: void close()>();

     label57:
        goto label59;

     label58:
        $r13 := @caughtexception;

     label59:
        throw $r14;

        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label49;
        catch java.io.IOException from label01 to label02 with label44;
        catch java.lang.Throwable from label01 to label02 with label43;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label49;
        catch java.io.IOException from label03 to label04 with label44;
        catch java.lang.Throwable from label03 to label04 with label43;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label06 with label49;
        catch java.io.IOException from label05 to label06 with label44;
        catch java.lang.Throwable from label05 to label06 with label43;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label08 with label49;
        catch java.io.IOException from label07 to label08 with label44;
        catch java.lang.Throwable from label07 to label08 with label43;
        catch org.xmlpull.v1.XmlPullParserException from label09 to label10 with label49;
        catch java.io.IOException from label09 to label10 with label44;
        catch java.lang.Throwable from label09 to label10 with label43;
        catch java.io.IOException from label12 to label13 with label14;
        catch org.xmlpull.v1.XmlPullParserException from label17 to label18 with label49;
        catch java.io.IOException from label17 to label18 with label44;
        catch java.lang.Throwable from label17 to label18 with label43;
        catch org.xmlpull.v1.XmlPullParserException from label19 to label20 with label49;
        catch java.io.IOException from label19 to label20 with label44;
        catch java.lang.Throwable from label19 to label20 with label43;
        catch org.xmlpull.v1.XmlPullParserException from label21 to label22 with label49;
        catch java.io.IOException from label21 to label22 with label44;
        catch java.lang.Throwable from label21 to label22 with label43;
        catch org.xmlpull.v1.XmlPullParserException from label23 to label24 with label49;
        catch java.io.IOException from label23 to label24 with label44;
        catch java.lang.Throwable from label23 to label24 with label43;
        catch org.xmlpull.v1.XmlPullParserException from label25 to label26 with label49;
        catch java.io.IOException from label25 to label26 with label44;
        catch java.lang.Throwable from label25 to label26 with label43;
        catch org.xmlpull.v1.XmlPullParserException from label27 to label28 with label49;
        catch java.io.IOException from label27 to label28 with label44;
        catch java.lang.Throwable from label27 to label28 with label43;
        catch org.xmlpull.v1.XmlPullParserException from label29 to label30 with label49;
        catch java.io.IOException from label29 to label30 with label44;
        catch java.lang.Throwable from label29 to label30 with label43;
        catch java.lang.NumberFormatException from label31 to label32 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label31 to label32 with label49;
        catch java.io.IOException from label31 to label32 with label44;
        catch java.lang.Throwable from label31 to label32 with label43;
        catch org.xmlpull.v1.XmlPullParserException from label35 to label36 with label49;
        catch java.io.IOException from label35 to label36 with label44;
        catch java.lang.Throwable from label35 to label36 with label43;
        catch org.xmlpull.v1.XmlPullParserException from label37 to label38 with label49;
        catch java.io.IOException from label37 to label38 with label44;
        catch java.lang.Throwable from label37 to label38 with label43;
        catch java.io.IOException from label40 to label41 with label42;
        catch java.lang.Throwable from label45 to label46 with label43;
        catch java.io.IOException from label47 to label48 with label42;
        catch java.lang.Throwable from label50 to label51 with label43;
        catch java.io.IOException from label52 to label53 with label42;
        catch java.io.IOException from label56 to label57 with label58;
    }

    private void removePackageAndHideDialogs(java.lang.String)
    {
        com.android.server.wm.AppWarnings r0;
        java.util.HashMap r1, $r3;
        com.android.server.wm.AppWarnings$UiHandler $r2;
        com.android.server.wm.AppWarnings$ConfigHandler $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: com.android.server.wm.AppWarnings;

        r7 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.wm.AppWarnings: com.android.server.wm.AppWarnings$UiHandler mUiHandler>;

        virtualinvoke $r2.<com.android.server.wm.AppWarnings$UiHandler: void hideDialogsForPackage(java.lang.String)>(r7);

        r1 = r0.<com.android.server.wm.AppWarnings: java.util.HashMap mPackageFlags>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.wm.AppWarnings: java.util.HashMap mPackageFlags>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r7);

        $r5 = r0.<com.android.server.wm.AppWarnings: com.android.server.wm.AppWarnings$ConfigHandler mHandler>;

        virtualinvoke $r5.<com.android.server.wm.AppWarnings$ConfigHandler: void scheduleWrite()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void showDeprecatedTargetSdkDialogUiThread(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.AppWarnings r0;
        com.android.server.wm.DeprecatedTargetSdkVersionDialog r1, $r3;
        java.lang.String $r2;
        boolean $z0;
        android.content.pm.ActivityInfo $r4;
        android.content.pm.ApplicationInfo $r5;
        android.content.Context $r6;
        com.android.server.wm.ActivityRecord r7;

        r0 := @this: com.android.server.wm.AppWarnings;

        r7 := @parameter0: com.android.server.wm.ActivityRecord;

        r1 = r0.<com.android.server.wm.AppWarnings: com.android.server.wm.DeprecatedTargetSdkVersionDialog mDeprecatedTargetSdkVersionDialog>;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.server.wm.DeprecatedTargetSdkVersionDialog: void dismiss()>();

        r0.<com.android.server.wm.AppWarnings: com.android.server.wm.DeprecatedTargetSdkVersionDialog mDeprecatedTargetSdkVersionDialog> = null;

     label1:
        if r7 == null goto label2;

        $r2 = r7.<com.android.server.wm.ActivityRecord: java.lang.String packageName>;

        $z0 = virtualinvoke r0.<com.android.server.wm.AppWarnings: boolean hasPackageFlag(java.lang.String,int)>($r2, 4);

        if $z0 != 0 goto label2;

        $r3 = new com.android.server.wm.DeprecatedTargetSdkVersionDialog;

        $r6 = r0.<com.android.server.wm.AppWarnings: android.content.Context mUiContext>;

        $r4 = r7.<com.android.server.wm.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r5 = $r4.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        specialinvoke $r3.<com.android.server.wm.DeprecatedTargetSdkVersionDialog: void <init>(com.android.server.wm.AppWarnings,android.content.Context,android.content.pm.ApplicationInfo)>(r0, $r6, $r5);

        r0.<com.android.server.wm.AppWarnings: com.android.server.wm.DeprecatedTargetSdkVersionDialog mDeprecatedTargetSdkVersionDialog> = $r3;

        virtualinvoke $r3.<com.android.server.wm.DeprecatedTargetSdkVersionDialog: void show()>();

     label2:
        return;
    }

    private void showUnsupportedCompileSdkDialogUiThread(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.AppWarnings r0;
        com.android.server.wm.UnsupportedCompileSdkDialog r1, $r3;
        java.lang.String $r2;
        boolean $z0;
        android.content.pm.ActivityInfo $r4;
        android.content.pm.ApplicationInfo $r5;
        android.content.Context $r6;
        com.android.server.wm.ActivityRecord r7;

        r0 := @this: com.android.server.wm.AppWarnings;

        r7 := @parameter0: com.android.server.wm.ActivityRecord;

        r1 = r0.<com.android.server.wm.AppWarnings: com.android.server.wm.UnsupportedCompileSdkDialog mUnsupportedCompileSdkDialog>;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.server.wm.UnsupportedCompileSdkDialog: void dismiss()>();

        r0.<com.android.server.wm.AppWarnings: com.android.server.wm.UnsupportedCompileSdkDialog mUnsupportedCompileSdkDialog> = null;

     label1:
        if r7 == null goto label2;

        $r2 = r7.<com.android.server.wm.ActivityRecord: java.lang.String packageName>;

        $z0 = virtualinvoke r0.<com.android.server.wm.AppWarnings: boolean hasPackageFlag(java.lang.String,int)>($r2, 2);

        if $z0 != 0 goto label2;

        $r3 = new com.android.server.wm.UnsupportedCompileSdkDialog;

        $r6 = r0.<com.android.server.wm.AppWarnings: android.content.Context mUiContext>;

        $r4 = r7.<com.android.server.wm.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r5 = $r4.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        specialinvoke $r3.<com.android.server.wm.UnsupportedCompileSdkDialog: void <init>(com.android.server.wm.AppWarnings,android.content.Context,android.content.pm.ApplicationInfo)>(r0, $r6, $r5);

        r0.<com.android.server.wm.AppWarnings: com.android.server.wm.UnsupportedCompileSdkDialog mUnsupportedCompileSdkDialog> = $r3;

        virtualinvoke $r3.<com.android.server.wm.UnsupportedCompileSdkDialog: void show()>();

     label2:
        return;
    }

    private void showUnsupportedDisplaySizeDialogUiThread(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.AppWarnings r0;
        com.android.server.wm.UnsupportedDisplaySizeDialog r1, $r3;
        java.lang.String $r2;
        boolean $z0;
        android.content.pm.ActivityInfo $r4;
        android.content.pm.ApplicationInfo $r5;
        android.content.Context $r6;
        com.android.server.wm.ActivityRecord r7;

        r0 := @this: com.android.server.wm.AppWarnings;

        r7 := @parameter0: com.android.server.wm.ActivityRecord;

        r1 = r0.<com.android.server.wm.AppWarnings: com.android.server.wm.UnsupportedDisplaySizeDialog mUnsupportedDisplaySizeDialog>;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.server.wm.UnsupportedDisplaySizeDialog: void dismiss()>();

        r0.<com.android.server.wm.AppWarnings: com.android.server.wm.UnsupportedDisplaySizeDialog mUnsupportedDisplaySizeDialog> = null;

     label1:
        if r7 == null goto label2;

        $r2 = r7.<com.android.server.wm.ActivityRecord: java.lang.String packageName>;

        $z0 = virtualinvoke r0.<com.android.server.wm.AppWarnings: boolean hasPackageFlag(java.lang.String,int)>($r2, 1);

        if $z0 != 0 goto label2;

        $r3 = new com.android.server.wm.UnsupportedDisplaySizeDialog;

        $r6 = r0.<com.android.server.wm.AppWarnings: android.content.Context mUiContext>;

        $r4 = r7.<com.android.server.wm.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r5 = $r4.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        specialinvoke $r3.<com.android.server.wm.UnsupportedDisplaySizeDialog: void <init>(com.android.server.wm.AppWarnings,android.content.Context,android.content.pm.ApplicationInfo)>(r0, $r6, $r5);

        r0.<com.android.server.wm.AppWarnings: com.android.server.wm.UnsupportedDisplaySizeDialog mUnsupportedDisplaySizeDialog> = $r3;

        virtualinvoke $r3.<com.android.server.wm.UnsupportedDisplaySizeDialog: void show()>();

     label2:
        return;
    }

    private void writeConfigToFileAmsThread()
    {
        com.android.server.wm.AppWarnings r0;
        com.android.internal.util.FastXmlSerializer r1;
        java.util.Iterator r2;
        java.lang.String r3, $r7, $r19;
        int i0;
        java.util.HashMap $r4, r25, r26;
        android.util.AtomicFile $r5, $r12, $r24;
        java.nio.charset.Charset $r6;
        java.lang.Boolean $r8;
        java.util.Set $r10;
        java.lang.Object $r13, $r14, $r15;
        java.lang.Integer $r16;
        java.lang.Throwable $r22, $r23;
        java.io.FileOutputStream r27, r28;
        boolean $z0;
        java.util.Map$Entry r29;

        r0 := @this: com.android.server.wm.AppWarnings;

        r25 = r0.<com.android.server.wm.AppWarnings: java.util.HashMap mPackageFlags>;

        entermonitor r25;

     label01:
        r26 = new java.util.HashMap;

        $r4 = r0.<com.android.server.wm.AppWarnings: java.util.HashMap mPackageFlags>;

        specialinvoke r26.<java.util.HashMap: void <init>(java.util.Map)>($r4);

        exitmonitor r25;

     label02:
        r27 = null;

     label03:
        $r5 = r0.<com.android.server.wm.AppWarnings: android.util.AtomicFile mConfigFile>;

        r28 = virtualinvoke $r5.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

     label04:
        r27 = r28;

     label05:
        r1 = new com.android.internal.util.FastXmlSerializer;

     label06:
        r27 = r28;

     label07:
        specialinvoke r1.<com.android.internal.util.FastXmlSerializer: void <init>()>();

     label08:
        r27 = r28;

     label09:
        $r6 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r7 = virtualinvoke $r6.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r28, $r7);

     label10:
        r27 = r28;

     label11:
        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r8);

     label12:
        r27 = r28;

     label13:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

     label14:
        r27 = r28;

     label15:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "packages");

     label16:
        r27 = r28;

     label17:
        $r10 = virtualinvoke r26.<java.util.HashMap: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label18:
        r27 = r28;

     label19:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label36;

     label20:
        r27 = r28;

     label21:
        $r13 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r29 = (java.util.Map$Entry) $r13;

     label22:
        r27 = r28;

     label23:
        $r14 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getKey()>();

        r3 = (java.lang.String) $r14;

     label24:
        r27 = r28;

     label25:
        $r15 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r16 = (java.lang.Integer) $r15;

        i0 = virtualinvoke $r16.<java.lang.Integer: int intValue()>();

     label26:
        if i0 != 0 goto label27;

        goto label18;

     label27:
        r27 = r28;

     label28:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "package");

     label29:
        r27 = r28;

     label30:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r3);

     label31:
        r27 = r28;

     label32:
        $r19 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "flags", $r19);

     label33:
        r27 = r28;

     label34:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "package");

     label35:
        goto label18;

     label36:
        r27 = r28;

     label37:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "packages");

     label38:
        r27 = r28;

     label39:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

     label40:
        r27 = r28;

     label41:
        $r12 = r0.<com.android.server.wm.AppWarnings: android.util.AtomicFile mConfigFile>;

        virtualinvoke $r12.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r28);

     label42:
        goto label44;

     label43:
        $r23 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AppWarnings", "Error writing package metadata", $r23);

        if r27 == null goto label44;

        $r24 = r0.<com.android.server.wm.AppWarnings: android.util.AtomicFile mConfigFile>;

        virtualinvoke $r24.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r27);

     label44:
        return;

     label45:
        $r22 := @caughtexception;

     label46:
        exitmonitor r25;

     label47:
        throw $r22;

        catch java.lang.Throwable from label01 to label02 with label45;
        catch java.io.IOException from label03 to label04 with label43;
        catch java.io.IOException from label05 to label06 with label43;
        catch java.io.IOException from label07 to label08 with label43;
        catch java.io.IOException from label09 to label10 with label43;
        catch java.io.IOException from label11 to label12 with label43;
        catch java.io.IOException from label13 to label14 with label43;
        catch java.io.IOException from label15 to label16 with label43;
        catch java.io.IOException from label17 to label18 with label43;
        catch java.io.IOException from label19 to label20 with label43;
        catch java.io.IOException from label21 to label22 with label43;
        catch java.io.IOException from label23 to label24 with label43;
        catch java.io.IOException from label25 to label26 with label43;
        catch java.io.IOException from label28 to label29 with label43;
        catch java.io.IOException from label30 to label31 with label43;
        catch java.io.IOException from label32 to label33 with label43;
        catch java.io.IOException from label34 to label35 with label43;
        catch java.io.IOException from label37 to label38 with label43;
        catch java.io.IOException from label39 to label40 with label43;
        catch java.io.IOException from label41 to label42 with label43;
        catch java.lang.Throwable from label46 to label47 with label45;
    }

    void alwaysShowUnsupportedCompileSdkWarning(android.content.ComponentName)
    {
        com.android.server.wm.AppWarnings r0;
        android.content.ComponentName r1;
        java.util.HashSet $r2;

        r0 := @this: com.android.server.wm.AppWarnings;

        r1 := @parameter0: android.content.ComponentName;

        $r2 = r0.<com.android.server.wm.AppWarnings: java.util.HashSet mAlwaysShowUnsupportedCompileSdkWarningActivities>;

        virtualinvoke $r2.<java.util.HashSet: boolean add(java.lang.Object)>(r1);

        return;
    }

    boolean hasPackageFlag(java.lang.String, int)
    {
        com.android.server.wm.AppWarnings r0;
        java.lang.String r1;
        int i0, $i1, $i2;
        boolean z0;

        r0 := @this: com.android.server.wm.AppWarnings;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = specialinvoke r0.<com.android.server.wm.AppWarnings: int getPackageFlags(java.lang.String)>(r1);

        $i2 = $i1 & i0;

        if $i2 != i0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void onDensityChanged()
    {
        com.android.server.wm.AppWarnings r0;
        com.android.server.wm.AppWarnings$UiHandler $r1;

        r0 := @this: com.android.server.wm.AppWarnings;

        $r1 = r0.<com.android.server.wm.AppWarnings: com.android.server.wm.AppWarnings$UiHandler mUiHandler>;

        virtualinvoke $r1.<com.android.server.wm.AppWarnings$UiHandler: void hideUnsupportedDisplaySizeDialog()>();

        return;
    }

    public void onPackageDataCleared(java.lang.String)
    {
        com.android.server.wm.AppWarnings r0;
        java.lang.String r1;

        r0 := @this: com.android.server.wm.AppWarnings;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.android.server.wm.AppWarnings: void removePackageAndHideDialogs(java.lang.String)>(r1);

        return;
    }

    public void onPackageUninstalled(java.lang.String)
    {
        com.android.server.wm.AppWarnings r0;
        java.lang.String r1;

        r0 := @this: com.android.server.wm.AppWarnings;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.android.server.wm.AppWarnings: void removePackageAndHideDialogs(java.lang.String)>(r1);

        return;
    }

    public void onResumeActivity(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.AppWarnings r0;
        com.android.server.wm.ActivityRecord r1;

        r0 := @this: com.android.server.wm.AppWarnings;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        virtualinvoke r0.<com.android.server.wm.AppWarnings: void showUnsupportedDisplaySizeDialogIfNeeded(com.android.server.wm.ActivityRecord)>(r1);

        return;
    }

    public void onStartActivity(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.AppWarnings r0;
        com.android.server.wm.ActivityRecord r1;

        r0 := @this: com.android.server.wm.AppWarnings;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        virtualinvoke r0.<com.android.server.wm.AppWarnings: void showUnsupportedCompileSdkDialogIfNeeded(com.android.server.wm.ActivityRecord)>(r1);

        virtualinvoke r0.<com.android.server.wm.AppWarnings: void showUnsupportedDisplaySizeDialogIfNeeded(com.android.server.wm.ActivityRecord)>(r1);

        virtualinvoke r0.<com.android.server.wm.AppWarnings: void showDeprecatedTargetDialogIfNeeded(com.android.server.wm.ActivityRecord)>(r1);

        return;
    }

    void setPackageFlag(java.lang.String, int, boolean)
    {
        com.android.server.wm.AppWarnings r0;
        boolean z0;
        java.util.HashMap r1, $r2, $r5;
        int i0, i1, i2;
        com.android.server.wm.AppWarnings$ConfigHandler $r4;
        java.lang.Integer $r6;
        java.lang.Throwable $r8;
        java.lang.String r9;

        r0 := @this: com.android.server.wm.AppWarnings;

        r9 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        r1 = r0.<com.android.server.wm.AppWarnings: java.util.HashMap mPackageFlags>;

        entermonitor r1;

     label01:
        i0 = specialinvoke r0.<com.android.server.wm.AppWarnings: int getPackageFlags(java.lang.String)>(r9);

     label02:
        if z0 == 0 goto label03;

        i2 = i0 | i1;

        goto label04;

     label03:
        i2 = i1 & i0;

     label04:
        if i0 == i2 goto label09;

        if i2 == 0 goto label07;

     label05:
        $r5 = r0.<com.android.server.wm.AppWarnings: java.util.HashMap mPackageFlags>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, $r6);

     label06:
        goto label08;

     label07:
        $r2 = r0.<com.android.server.wm.AppWarnings: java.util.HashMap mPackageFlags>;

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r9);

     label08:
        $r4 = r0.<com.android.server.wm.AppWarnings: com.android.server.wm.AppWarnings$ConfigHandler mHandler>;

        virtualinvoke $r4.<com.android.server.wm.AppWarnings$ConfigHandler: void scheduleWrite()>();

     label09:
        exitmonitor r1;

     label10:
        return;

     label11:
        $r8 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public void showDeprecatedTargetDialogIfNeeded(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.AppWarnings r0;
        com.android.server.wm.ActivityRecord r1;
        android.content.pm.ActivityInfo $r2;
        android.content.pm.ApplicationInfo $r3;
        int $i0, $i1;
        com.android.server.wm.AppWarnings$UiHandler $r4;

        r0 := @this: com.android.server.wm.AppWarnings;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        $r2 = r1.<com.android.server.wm.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r3 = $r2.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = $r3.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        $i0 = <android.os.Build$VERSION: int MIN_SUPPORTED_TARGET_SDK_INT>;

        if $i1 >= $i0 goto label1;

        $r4 = r0.<com.android.server.wm.AppWarnings: com.android.server.wm.AppWarnings$UiHandler mUiHandler>;

        virtualinvoke $r4.<com.android.server.wm.AppWarnings$UiHandler: void showDeprecatedTargetDialog(com.android.server.wm.ActivityRecord)>(r1);

     label1:
        return;
    }

    public void showUnsupportedCompileSdkDialogIfNeeded(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.AppWarnings r0;
        com.android.server.wm.ActivityRecord r1;
        int i0, i1, $i2;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        android.content.pm.ActivityInfo $r2, $r4, $r9, $r11, $r17;
        android.content.pm.ApplicationInfo $r3, $r5, $r10, $r12, $r18;
        java.lang.String $r6, $r13, $r14, $r15, $r16, $r19, $r20;
        android.content.ComponentName $r7;
        java.util.HashSet $r8;
        com.android.server.wm.AppWarnings$UiHandler $r21;

        r0 := @this: com.android.server.wm.AppWarnings;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        $r2 = r1.<com.android.server.wm.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r3 = $r2.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r3.<android.content.pm.ApplicationInfo: int compileSdkVersion>;

        if $i2 == 0 goto label7;

        $r4 = r1.<com.android.server.wm.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r5 = $r4.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r6 = $r5.<android.content.pm.ApplicationInfo: java.lang.String compileSdkVersionCodename>;

        if $r6 != null goto label1;

        goto label7;

     label1:
        $r8 = r0.<com.android.server.wm.AppWarnings: java.util.HashSet mAlwaysShowUnsupportedCompileSdkWarningActivities>;

        $r7 = r1.<com.android.server.wm.ActivityRecord: android.content.ComponentName mActivityComponent>;

        $z2 = virtualinvoke $r8.<java.util.HashSet: boolean contains(java.lang.Object)>($r7);

        if $z2 != 0 goto label2;

        return;

     label2:
        $r9 = r1.<com.android.server.wm.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r10 = $r9.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        i0 = $r10.<android.content.pm.ApplicationInfo: int compileSdkVersion>;

        i1 = <android.os.Build$VERSION: int SDK_INT>;

        $r14 = "REL";

        $r11 = r1.<com.android.server.wm.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r12 = $r11.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r13 = $r12.<android.content.pm.ApplicationInfo: java.lang.String compileSdkVersionCodename>;

        $z3 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        z0 = $z3 ^ 1;

        $r16 = "REL";

        $r15 = <android.os.Build$VERSION: java.lang.String CODENAME>;

        $z4 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        z1 = $z4 ^ 1;

        if z0 == 0 goto label3;

        if i0 < i1 goto label5;

     label3:
        if z1 == 0 goto label4;

        if i1 < i0 goto label5;

     label4:
        if z0 == 0 goto label6;

        if z1 == 0 goto label6;

        if i1 != i0 goto label6;

        $r20 = <android.os.Build$VERSION: java.lang.String CODENAME>;

        $r17 = r1.<com.android.server.wm.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r18 = $r17.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r19 = $r18.<android.content.pm.ApplicationInfo: java.lang.String compileSdkVersionCodename>;

        $z5 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>($r19);

        if $z5 != 0 goto label6;

     label5:
        $r21 = r0.<com.android.server.wm.AppWarnings: com.android.server.wm.AppWarnings$UiHandler mUiHandler>;

        virtualinvoke $r21.<com.android.server.wm.AppWarnings$UiHandler: void showUnsupportedCompileSdkDialog(com.android.server.wm.ActivityRecord)>(r1);

     label6:
        return;

     label7:
        return;
    }

    public void showUnsupportedDisplaySizeDialogIfNeeded(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.AppWarnings r0;
        com.android.server.wm.ActivityRecord r1;
        android.content.res.Configuration r2;
        com.android.server.wm.ActivityTaskManagerService $r3;
        int $i0, $i1, $i2, $i3;
        android.content.pm.ActivityInfo $r4;
        android.content.pm.ApplicationInfo $r5;
        com.android.server.wm.AppWarnings$UiHandler $r6;

        r0 := @this: com.android.server.wm.AppWarnings;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        $r3 = r0.<com.android.server.wm.AppWarnings: com.android.server.wm.ActivityTaskManagerService mAtm>;

        r2 = virtualinvoke $r3.<com.android.server.wm.ActivityTaskManagerService: android.content.res.Configuration getGlobalConfiguration()>();

        $i1 = r2.<android.content.res.Configuration: int densityDpi>;

        $i0 = <android.util.DisplayMetrics: int DENSITY_DEVICE_STABLE>;

        if $i1 == $i0 goto label1;

        $r4 = r1.<com.android.server.wm.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r5 = $r4.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r5.<android.content.pm.ApplicationInfo: int requiresSmallestWidthDp>;

        $i2 = r2.<android.content.res.Configuration: int smallestScreenWidthDp>;

        if $i3 <= $i2 goto label1;

        $r6 = r0.<com.android.server.wm.AppWarnings: com.android.server.wm.AppWarnings$UiHandler mUiHandler>;

        virtualinvoke $r6.<com.android.server.wm.AppWarnings$UiHandler: void showUnsupportedDisplaySizeDialog(com.android.server.wm.ActivityRecord)>(r1);

     label1:
        return;
    }

    public static void <clinit>()
    {
        <com.android.server.wm.AppWarnings: java.lang.String TAG> = "AppWarnings";

        <com.android.server.wm.AppWarnings: int FLAG_HIDE_DISPLAY_SIZE> = 1;

        <com.android.server.wm.AppWarnings: int FLAG_HIDE_DEPRECATED_SDK> = 4;

        <com.android.server.wm.AppWarnings: int FLAG_HIDE_COMPILE_SDK> = 2;

        <com.android.server.wm.AppWarnings: java.lang.String CONFIG_FILE_NAME> = "packages-warnings.xml";

        return;
    }
}
