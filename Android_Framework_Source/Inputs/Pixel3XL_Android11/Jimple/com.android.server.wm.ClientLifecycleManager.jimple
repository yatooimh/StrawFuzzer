class com.android.server.wm.ClientLifecycleManager extends java.lang.Object
{

    void <init>()
    {
        com.android.server.wm.ClientLifecycleManager r0;

        r0 := @this: com.android.server.wm.ClientLifecycleManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static android.app.servertransaction.ClientTransaction transactionWithCallback(android.app.IApplicationThread, android.os.IBinder, android.app.servertransaction.ClientTransactionItem)
    {
        android.os.IBinder r0;
        android.app.servertransaction.ClientTransactionItem r1;
        android.app.IApplicationThread r2;
        android.app.servertransaction.ClientTransaction r3;

        r2 := @parameter0: android.app.IApplicationThread;

        r0 := @parameter1: android.os.IBinder;

        r1 := @parameter2: android.app.servertransaction.ClientTransactionItem;

        r3 = staticinvoke <android.app.servertransaction.ClientTransaction: android.app.servertransaction.ClientTransaction obtain(android.app.IApplicationThread,android.os.IBinder)>(r2, r0);

        virtualinvoke r3.<android.app.servertransaction.ClientTransaction: void addCallback(android.app.servertransaction.ClientTransactionItem)>(r1);

        return r3;
    }

    private static android.app.servertransaction.ClientTransaction transactionWithState(android.app.IApplicationThread, android.os.IBinder, android.app.servertransaction.ActivityLifecycleItem)
    {
        android.os.IBinder r0;
        android.app.servertransaction.ActivityLifecycleItem r1;
        android.app.IApplicationThread r2;
        android.app.servertransaction.ClientTransaction r3;

        r2 := @parameter0: android.app.IApplicationThread;

        r0 := @parameter1: android.os.IBinder;

        r1 := @parameter2: android.app.servertransaction.ActivityLifecycleItem;

        r3 = staticinvoke <android.app.servertransaction.ClientTransaction: android.app.servertransaction.ClientTransaction obtain(android.app.IApplicationThread,android.os.IBinder)>(r2, r0);

        virtualinvoke r3.<android.app.servertransaction.ClientTransaction: void setLifecycleStateRequest(android.app.servertransaction.ActivityLifecycleItem)>(r1);

        return r3;
    }

    void scheduleTransaction(android.app.IApplicationThread, android.app.servertransaction.ClientTransactionItem) throws android.os.RemoteException
    {
        com.android.server.wm.ClientLifecycleManager r0;
        android.app.IApplicationThread r1;
        android.app.servertransaction.ClientTransactionItem r2;
        android.app.servertransaction.ClientTransaction $r3;

        r0 := @this: com.android.server.wm.ClientLifecycleManager;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: android.app.servertransaction.ClientTransactionItem;

        $r3 = staticinvoke <com.android.server.wm.ClientLifecycleManager: android.app.servertransaction.ClientTransaction transactionWithCallback(android.app.IApplicationThread,android.os.IBinder,android.app.servertransaction.ClientTransactionItem)>(r1, null, r2);

        virtualinvoke r0.<com.android.server.wm.ClientLifecycleManager: void scheduleTransaction(android.app.servertransaction.ClientTransaction)>($r3);

        return;
    }

    void scheduleTransaction(android.app.IApplicationThread, android.os.IBinder, android.app.servertransaction.ActivityLifecycleItem) throws android.os.RemoteException
    {
        com.android.server.wm.ClientLifecycleManager r0;
        android.app.IApplicationThread r1;
        android.os.IBinder r2;
        android.app.servertransaction.ActivityLifecycleItem r3;
        android.app.servertransaction.ClientTransaction $r4;

        r0 := @this: com.android.server.wm.ClientLifecycleManager;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: android.os.IBinder;

        r3 := @parameter2: android.app.servertransaction.ActivityLifecycleItem;

        $r4 = staticinvoke <com.android.server.wm.ClientLifecycleManager: android.app.servertransaction.ClientTransaction transactionWithState(android.app.IApplicationThread,android.os.IBinder,android.app.servertransaction.ActivityLifecycleItem)>(r1, r2, r3);

        virtualinvoke r0.<com.android.server.wm.ClientLifecycleManager: void scheduleTransaction(android.app.servertransaction.ClientTransaction)>($r4);

        return;
    }

    void scheduleTransaction(android.app.IApplicationThread, android.os.IBinder, android.app.servertransaction.ClientTransactionItem) throws android.os.RemoteException
    {
        com.android.server.wm.ClientLifecycleManager r0;
        android.app.IApplicationThread r1;
        android.os.IBinder r2;
        android.app.servertransaction.ClientTransactionItem r3;
        android.app.servertransaction.ClientTransaction $r4;

        r0 := @this: com.android.server.wm.ClientLifecycleManager;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: android.os.IBinder;

        r3 := @parameter2: android.app.servertransaction.ClientTransactionItem;

        $r4 = staticinvoke <com.android.server.wm.ClientLifecycleManager: android.app.servertransaction.ClientTransaction transactionWithCallback(android.app.IApplicationThread,android.os.IBinder,android.app.servertransaction.ClientTransactionItem)>(r1, r2, r3);

        virtualinvoke r0.<com.android.server.wm.ClientLifecycleManager: void scheduleTransaction(android.app.servertransaction.ClientTransaction)>($r4);

        return;
    }

    void scheduleTransaction(android.app.servertransaction.ClientTransaction) throws android.os.RemoteException
    {
        com.android.server.wm.ClientLifecycleManager r0;
        android.app.servertransaction.ClientTransaction r1;
        android.app.IApplicationThread r2;
        boolean $z0;

        r0 := @this: com.android.server.wm.ClientLifecycleManager;

        r1 := @parameter0: android.app.servertransaction.ClientTransaction;

        r2 = virtualinvoke r1.<android.app.servertransaction.ClientTransaction: android.app.IApplicationThread getClient()>();

        virtualinvoke r1.<android.app.servertransaction.ClientTransaction: void schedule()>();

        $z0 = r2 instanceof android.os.Binder;

        if $z0 != 0 goto label1;

        virtualinvoke r1.<android.app.servertransaction.ClientTransaction: void recycle()>();

     label1:
        return;
    }
}
