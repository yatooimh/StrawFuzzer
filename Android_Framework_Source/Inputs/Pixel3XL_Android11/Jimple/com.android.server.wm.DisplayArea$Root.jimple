public class com.android.server.wm.DisplayArea$Root extends com.android.server.wm.DisplayArea
{
    private final com.android.server.wm.Dimmer mDimmer;
    private final android.graphics.Rect mTmpDimBoundsRect;

    void <init>(com.android.server.wm.WindowManagerService)
    {
        com.android.server.wm.DisplayArea$Root r0;
        com.android.server.wm.WindowManagerService r1;
        com.android.server.wm.DisplayArea$Type $r2;
        com.android.server.wm.Dimmer $r3;
        android.graphics.Rect $r4;

        r0 := @this: com.android.server.wm.DisplayArea$Root;

        r1 := @parameter0: com.android.server.wm.WindowManagerService;

        $r2 = <com.android.server.wm.DisplayArea$Type: com.android.server.wm.DisplayArea$Type ANY>;

        specialinvoke r0.<com.android.server.wm.DisplayArea: void <init>(com.android.server.wm.WindowManagerService,com.android.server.wm.DisplayArea$Type,java.lang.String,int)>(r1, $r2, "DisplayArea.Root", 0);

        $r3 = new com.android.server.wm.Dimmer;

        specialinvoke $r3.<com.android.server.wm.Dimmer: void <init>(com.android.server.wm.WindowContainer)>(r0);

        r0.<com.android.server.wm.DisplayArea$Root: com.android.server.wm.Dimmer mDimmer> = $r3;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.DisplayArea$Root: android.graphics.Rect mTmpDimBoundsRect> = $r4;

        return;
    }

    static java.lang.Boolean lambda$prepareSurfaces$0(com.android.server.wm.Task)
    {
        com.android.server.wm.Task r0;
        boolean $z0, $z1;
        java.lang.Boolean $r1;

        r0 := @parameter0: com.android.server.wm.Task;

        $z0 = virtualinvoke r0.<com.android.server.wm.Task: boolean canAffectSystemUiFlags()>();

        $z1 = $z0 ^ 1;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        return $r1;
    }

    public volatile void commitPendingTransaction()
    {
        com.android.server.wm.DisplayArea$Root r0;

        r0 := @this: com.android.server.wm.DisplayArea$Root;

        specialinvoke r0.<com.android.server.wm.DisplayArea: void commitPendingTransaction()>();

        return;
    }

    public volatile int compareTo(com.android.server.wm.WindowContainer)
    {
        com.android.server.wm.DisplayArea$Root r0;
        com.android.server.wm.WindowContainer r1;
        int $i0;

        r0 := @this: com.android.server.wm.DisplayArea$Root;

        r1 := @parameter0: com.android.server.wm.WindowContainer;

        $i0 = specialinvoke r0.<com.android.server.wm.DisplayArea: int compareTo(com.android.server.wm.WindowContainer)>(r1);

        return $i0;
    }

    public volatile android.view.SurfaceControl getAnimationLeashParent()
    {
        com.android.server.wm.DisplayArea$Root r0;
        android.view.SurfaceControl $r1;

        r0 := @this: com.android.server.wm.DisplayArea$Root;

        $r1 = specialinvoke r0.<com.android.server.wm.DisplayArea: android.view.SurfaceControl getAnimationLeashParent()>();

        return $r1;
    }

    com.android.server.wm.Dimmer getDimmer()
    {
        com.android.server.wm.DisplayArea$Root r0;
        com.android.server.wm.Dimmer $r1;

        r0 := @this: com.android.server.wm.DisplayArea$Root;

        $r1 = r0.<com.android.server.wm.DisplayArea$Root: com.android.server.wm.Dimmer mDimmer>;

        return $r1;
    }

    public volatile android.view.SurfaceControl getFreezeSnapshotTarget()
    {
        com.android.server.wm.DisplayArea$Root r0;
        android.view.SurfaceControl $r1;

        r0 := @this: com.android.server.wm.DisplayArea$Root;

        $r1 = specialinvoke r0.<com.android.server.wm.DisplayArea: android.view.SurfaceControl getFreezeSnapshotTarget()>();

        return $r1;
    }

    public volatile android.view.SurfaceControl getParentSurfaceControl()
    {
        com.android.server.wm.DisplayArea$Root r0;
        android.view.SurfaceControl $r1;

        r0 := @this: com.android.server.wm.DisplayArea$Root;

        $r1 = specialinvoke r0.<com.android.server.wm.DisplayArea: android.view.SurfaceControl getParentSurfaceControl()>();

        return $r1;
    }

    public volatile android.view.SurfaceControl$Transaction getPendingTransaction()
    {
        com.android.server.wm.DisplayArea$Root r0;
        android.view.SurfaceControl$Transaction $r1;

        r0 := @this: com.android.server.wm.DisplayArea$Root;

        $r1 = specialinvoke r0.<com.android.server.wm.DisplayArea: android.view.SurfaceControl$Transaction getPendingTransaction()>();

        return $r1;
    }

    public volatile android.view.SurfaceControl getSurfaceControl()
    {
        com.android.server.wm.DisplayArea$Root r0;
        android.view.SurfaceControl $r1;

        r0 := @this: com.android.server.wm.DisplayArea$Root;

        $r1 = specialinvoke r0.<com.android.server.wm.DisplayArea: android.view.SurfaceControl getSurfaceControl()>();

        return $r1;
    }

    public volatile int getSurfaceHeight()
    {
        com.android.server.wm.DisplayArea$Root r0;
        int $i0;

        r0 := @this: com.android.server.wm.DisplayArea$Root;

        $i0 = specialinvoke r0.<com.android.server.wm.DisplayArea: int getSurfaceHeight()>();

        return $i0;
    }

    public volatile int getSurfaceWidth()
    {
        com.android.server.wm.DisplayArea$Root r0;
        int $i0;

        r0 := @this: com.android.server.wm.DisplayArea$Root;

        $i0 = specialinvoke r0.<com.android.server.wm.DisplayArea: int getSurfaceWidth()>();

        return $i0;
    }

    public volatile android.view.SurfaceControl$Transaction getSyncTransaction()
    {
        com.android.server.wm.DisplayArea$Root r0;
        android.view.SurfaceControl$Transaction $r1;

        r0 := @this: com.android.server.wm.DisplayArea$Root;

        $r1 = specialinvoke r0.<com.android.server.wm.DisplayArea: android.view.SurfaceControl$Transaction getSyncTransaction()>();

        return $r1;
    }

    public volatile android.view.SurfaceControl$Builder makeAnimationLeash()
    {
        com.android.server.wm.DisplayArea$Root r0;
        android.view.SurfaceControl$Builder $r1;

        r0 := @this: com.android.server.wm.DisplayArea$Root;

        $r1 = specialinvoke r0.<com.android.server.wm.DisplayArea: android.view.SurfaceControl$Builder makeAnimationLeash()>();

        return $r1;
    }

    public volatile void onAnimationLeashCreated(android.view.SurfaceControl$Transaction, android.view.SurfaceControl)
    {
        com.android.server.wm.DisplayArea$Root r0;
        android.view.SurfaceControl$Transaction r1;
        android.view.SurfaceControl r2;

        r0 := @this: com.android.server.wm.DisplayArea$Root;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        r2 := @parameter1: android.view.SurfaceControl;

        specialinvoke r0.<com.android.server.wm.DisplayArea: void onAnimationLeashCreated(android.view.SurfaceControl$Transaction,android.view.SurfaceControl)>(r1, r2);

        return;
    }

    public volatile void onAnimationLeashLost(android.view.SurfaceControl$Transaction)
    {
        com.android.server.wm.DisplayArea$Root r0;
        android.view.SurfaceControl$Transaction r1;

        r0 := @this: com.android.server.wm.DisplayArea$Root;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        specialinvoke r0.<com.android.server.wm.DisplayArea: void onAnimationLeashLost(android.view.SurfaceControl$Transaction)>(r1);

        return;
    }

    public volatile void onRequestedOverrideConfigurationChanged(android.content.res.Configuration)
    {
        com.android.server.wm.DisplayArea$Root r0;
        android.content.res.Configuration r1;

        r0 := @this: com.android.server.wm.DisplayArea$Root;

        r1 := @parameter0: android.content.res.Configuration;

        specialinvoke r0.<com.android.server.wm.DisplayArea: void onRequestedOverrideConfigurationChanged(android.content.res.Configuration)>(r1);

        return;
    }

    public volatile void onTransactionReady(int, java.util.Set)
    {
        com.android.server.wm.DisplayArea$Root r0;
        int i0;
        java.util.Set r1;

        r0 := @this: com.android.server.wm.DisplayArea$Root;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.Set;

        specialinvoke r0.<com.android.server.wm.DisplayArea: void onTransactionReady(int,java.util.Set)>(i0, r1);

        return;
    }

    void prepareSurfaces()
    {
        com.android.server.wm.DisplayArea$Root r0;
        com.android.server.wm.Dimmer $r1, $r4, $r7;
        android.graphics.Rect $r2, $r6;
        com.android.server.wm.'-$$Lambda$DisplayArea$Root$FFTAJJ7j74rtyQzx7LluB65mKYM' $r3;
        boolean $z0, $z1;
        android.view.SurfaceControl$Transaction $r5;
        java.util.function.Function r8;

        r0 := @this: com.android.server.wm.DisplayArea$Root;

        $r1 = r0.<com.android.server.wm.DisplayArea$Root: com.android.server.wm.Dimmer mDimmer>;

        virtualinvoke $r1.<com.android.server.wm.Dimmer: void resetDimStates()>();

        specialinvoke r0.<com.android.server.wm.DisplayArea: void prepareSurfaces()>();

        $r2 = r0.<com.android.server.wm.DisplayArea$Root: android.graphics.Rect mTmpDimBoundsRect>;

        virtualinvoke r0.<com.android.server.wm.DisplayArea$Root: void getBounds(android.graphics.Rect)>($r2);

        $r3 = <com.android.server.wm._$$Lambda$DisplayArea$Root$FFTAJJ7j74rtyQzx7LluB65mKYM: com.android.server.wm.'-$$Lambda$DisplayArea$Root$FFTAJJ7j74rtyQzx7LluB65mKYM' INSTANCE>;

        r8 = (java.util.function.Function) $r3;

        $z0 = virtualinvoke r0.<com.android.server.wm.DisplayArea$Root: boolean forAllTasks(java.util.function.Function)>(r8);

        if $z0 == 0 goto label1;

        $r7 = r0.<com.android.server.wm.DisplayArea$Root: com.android.server.wm.Dimmer mDimmer>;

        virtualinvoke $r7.<com.android.server.wm.Dimmer: void resetDimStates()>();

     label1:
        $r4 = r0.<com.android.server.wm.DisplayArea$Root: com.android.server.wm.Dimmer mDimmer>;

        $r5 = virtualinvoke r0.<com.android.server.wm.DisplayArea$Root: android.view.SurfaceControl$Transaction getPendingTransaction()>();

        $r6 = r0.<com.android.server.wm.DisplayArea$Root: android.graphics.Rect mTmpDimBoundsRect>;

        $z1 = virtualinvoke $r4.<com.android.server.wm.Dimmer: boolean updateDims(android.view.SurfaceControl$Transaction,android.graphics.Rect)>($r5, $r6);

        if $z1 == 0 goto label2;

        virtualinvoke r0.<com.android.server.wm.DisplayArea$Root: void scheduleAnimation()>();

     label2:
        return;
    }
}
