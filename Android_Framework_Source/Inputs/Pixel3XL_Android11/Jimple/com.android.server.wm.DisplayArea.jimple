public class com.android.server.wm.DisplayArea extends com.android.server.wm.WindowContainer
{
    final int mFeatureId;
    private final java.lang.String mName;
    android.window.IDisplayAreaOrganizer mOrganizer;
    private final com.android.server.wm.DisplayAreaOrganizerController mOrganizerController;
    private final android.content.res.Configuration mTmpConfiguration;
    protected final com.android.server.wm.DisplayArea$Type mType;

    void <init>(com.android.server.wm.WindowManagerService, com.android.server.wm.DisplayArea$Type, java.lang.String)
    {
        com.android.server.wm.DisplayArea r0;
        com.android.server.wm.WindowManagerService r1;
        com.android.server.wm.DisplayArea$Type r2;
        java.lang.String r3;

        r0 := @this: com.android.server.wm.DisplayArea;

        r1 := @parameter0: com.android.server.wm.WindowManagerService;

        r2 := @parameter1: com.android.server.wm.DisplayArea$Type;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<com.android.server.wm.DisplayArea: void <init>(com.android.server.wm.WindowManagerService,com.android.server.wm.DisplayArea$Type,java.lang.String,int)>(r1, r2, r3, -1);

        return;
    }

    void <init>(com.android.server.wm.WindowManagerService, com.android.server.wm.DisplayArea$Type, java.lang.String, int)
    {
        com.android.server.wm.DisplayArea r0;
        com.android.server.wm.WindowManagerService r1;
        com.android.server.wm.DisplayArea$Type r2;
        java.lang.String r3;
        int i0;
        android.content.res.Configuration $r4;
        com.android.server.wm.WindowContainer$RemoteToken $r5;
        com.android.server.wm.ActivityTaskManagerService $r6;
        com.android.server.wm.WindowOrganizerController $r7;
        com.android.server.wm.DisplayAreaOrganizerController $r8;

        r0 := @this: com.android.server.wm.DisplayArea;

        r1 := @parameter0: com.android.server.wm.WindowManagerService;

        r2 := @parameter1: com.android.server.wm.DisplayArea$Type;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        specialinvoke r0.<com.android.server.wm.WindowContainer: void <init>(com.android.server.wm.WindowManagerService)>(r1);

        $r4 = new android.content.res.Configuration;

        specialinvoke $r4.<android.content.res.Configuration: void <init>()>();

        r0.<com.android.server.wm.DisplayArea: android.content.res.Configuration mTmpConfiguration> = $r4;

        r0.<com.android.server.wm.DisplayArea: int mOrientation> = -2;

        r0.<com.android.server.wm.DisplayArea: com.android.server.wm.DisplayArea$Type mType> = r2;

        r0.<com.android.server.wm.DisplayArea: java.lang.String mName> = r3;

        r0.<com.android.server.wm.DisplayArea: int mFeatureId> = i0;

        $r5 = new com.android.server.wm.WindowContainer$RemoteToken;

        specialinvoke $r5.<com.android.server.wm.WindowContainer$RemoteToken: void <init>(com.android.server.wm.WindowContainer)>(r0);

        r0.<com.android.server.wm.DisplayArea: com.android.server.wm.WindowContainer$RemoteToken mRemoteToken> = $r5;

        $r6 = r1.<com.android.server.wm.WindowManagerService: com.android.server.wm.ActivityTaskManagerService mAtmService>;

        $r7 = $r6.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowOrganizerController mWindowOrganizerController>;

        $r8 = $r7.<com.android.server.wm.WindowOrganizerController: com.android.server.wm.DisplayAreaOrganizerController mDisplayAreaOrganizerController>;

        r0.<com.android.server.wm.DisplayArea: com.android.server.wm.DisplayAreaOrganizerController mOrganizerController> = $r8;

        return;
    }

    public volatile void commitPendingTransaction()
    {
        com.android.server.wm.DisplayArea r0;

        r0 := @this: com.android.server.wm.DisplayArea;

        specialinvoke r0.<com.android.server.wm.WindowContainer: void commitPendingTransaction()>();

        return;
    }

    public volatile int compareTo(com.android.server.wm.WindowContainer)
    {
        com.android.server.wm.DisplayArea r0;
        com.android.server.wm.WindowContainer r1;
        int $i0;

        r0 := @this: com.android.server.wm.DisplayArea;

        r1 := @parameter0: com.android.server.wm.WindowContainer;

        $i0 = specialinvoke r0.<com.android.server.wm.WindowContainer: int compareTo(com.android.server.wm.WindowContainer)>(r1);

        return $i0;
    }

    public final void dumpDebug(android.util.proto.ProtoOutputStream, long, int)
    {
        com.android.server.wm.DisplayArea r0;
        android.util.proto.ProtoOutputStream r1;
        int i0;
        java.lang.String $r2;
        long l1, l2;

        r0 := @this: com.android.server.wm.DisplayArea;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        l1 := @parameter1: long;

        i0 := @parameter2: int;

        l2 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(l1);

        specialinvoke r0.<com.android.server.wm.WindowContainer: void dumpDebug(android.util.proto.ProtoOutputStream,long,int)>(r1, 1146756268033L, i0);

        $r2 = r0.<com.android.server.wm.DisplayArea: java.lang.String mName>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333442L, $r2);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l2);

        return;
    }

    boolean fillsParent()
    {
        com.android.server.wm.DisplayArea r0;

        r0 := @this: com.android.server.wm.DisplayArea;

        return 1;
    }

    void forAllDisplayAreas(java.util.function.Consumer)
    {
        com.android.server.wm.DisplayArea r0;
        java.util.function.Consumer r1;

        r0 := @this: com.android.server.wm.DisplayArea;

        r1 := @parameter0: java.util.function.Consumer;

        specialinvoke r0.<com.android.server.wm.WindowContainer: void forAllDisplayAreas(java.util.function.Consumer)>(r1);

        interfaceinvoke r1.<java.util.function.Consumer: void accept(java.lang.Object)>(r0);

        return;
    }

    public volatile android.view.SurfaceControl getAnimationLeashParent()
    {
        com.android.server.wm.DisplayArea r0;
        android.view.SurfaceControl $r1;

        r0 := @this: com.android.server.wm.DisplayArea;

        $r1 = specialinvoke r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl getAnimationLeashParent()>();

        return $r1;
    }

    com.android.server.wm.DisplayArea getDisplayArea()
    {
        com.android.server.wm.DisplayArea r0;

        r0 := @this: com.android.server.wm.DisplayArea;

        return r0;
    }

    android.window.DisplayAreaInfo getDisplayAreaInfo()
    {
        com.android.server.wm.DisplayArea r0;
        android.window.DisplayAreaInfo $r2;
        com.android.server.wm.WindowContainer$RemoteToken $r3;
        android.window.WindowContainerToken $r4;
        com.android.server.wm.DisplayContent $r5;
        int $i0, $i1;
        android.content.res.Configuration $r6, $r7;

        r0 := @this: com.android.server.wm.DisplayArea;

        $r2 = new android.window.DisplayAreaInfo;

        $r3 = r0.<com.android.server.wm.DisplayArea: com.android.server.wm.WindowContainer$RemoteToken mRemoteToken>;

        $r4 = virtualinvoke $r3.<com.android.server.wm.WindowContainer$RemoteToken: android.window.WindowContainerToken toWindowContainerToken()>();

        $r5 = virtualinvoke r0.<com.android.server.wm.DisplayArea: com.android.server.wm.DisplayContent getDisplayContent()>();

        $i0 = virtualinvoke $r5.<com.android.server.wm.DisplayContent: int getDisplayId()>();

        $i1 = r0.<com.android.server.wm.DisplayArea: int mFeatureId>;

        specialinvoke $r2.<android.window.DisplayAreaInfo: void <init>(android.window.WindowContainerToken,int,int)>($r4, $i0, $i1);

        $r6 = $r2.<android.window.DisplayAreaInfo: android.content.res.Configuration configuration>;

        $r7 = virtualinvoke r0.<com.android.server.wm.DisplayArea: android.content.res.Configuration getConfiguration()>();

        virtualinvoke $r6.<android.content.res.Configuration: void setTo(android.content.res.Configuration)>($r7);

        return $r2;
    }

    public volatile android.view.SurfaceControl getFreezeSnapshotTarget()
    {
        com.android.server.wm.DisplayArea r0;
        android.view.SurfaceControl $r1;

        r0 := @this: com.android.server.wm.DisplayArea;

        $r1 = specialinvoke r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl getFreezeSnapshotTarget()>();

        return $r1;
    }

    java.lang.String getName()
    {
        com.android.server.wm.DisplayArea r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.wm.DisplayArea;

        $r1 = r0.<com.android.server.wm.DisplayArea: java.lang.String mName>;

        return $r1;
    }

    public volatile android.view.SurfaceControl getParentSurfaceControl()
    {
        com.android.server.wm.DisplayArea r0;
        android.view.SurfaceControl $r1;

        r0 := @this: com.android.server.wm.DisplayArea;

        $r1 = specialinvoke r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl getParentSurfaceControl()>();

        return $r1;
    }

    public volatile android.view.SurfaceControl$Transaction getPendingTransaction()
    {
        com.android.server.wm.DisplayArea r0;
        android.view.SurfaceControl$Transaction $r1;

        r0 := @this: com.android.server.wm.DisplayArea;

        $r1 = specialinvoke r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl$Transaction getPendingTransaction()>();

        return $r1;
    }

    long getProtoFieldId()
    {
        com.android.server.wm.DisplayArea r0;

        r0 := @this: com.android.server.wm.DisplayArea;

        return 1146756268036L;
    }

    public volatile android.view.SurfaceControl getSurfaceControl()
    {
        com.android.server.wm.DisplayArea r0;
        android.view.SurfaceControl $r1;

        r0 := @this: com.android.server.wm.DisplayArea;

        $r1 = specialinvoke r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl getSurfaceControl()>();

        return $r1;
    }

    public volatile int getSurfaceHeight()
    {
        com.android.server.wm.DisplayArea r0;
        int $i0;

        r0 := @this: com.android.server.wm.DisplayArea;

        $i0 = specialinvoke r0.<com.android.server.wm.WindowContainer: int getSurfaceHeight()>();

        return $i0;
    }

    public volatile int getSurfaceWidth()
    {
        com.android.server.wm.DisplayArea r0;
        int $i0;

        r0 := @this: com.android.server.wm.DisplayArea;

        $i0 = specialinvoke r0.<com.android.server.wm.WindowContainer: int getSurfaceWidth()>();

        return $i0;
    }

    public volatile android.view.SurfaceControl$Transaction getSyncTransaction()
    {
        com.android.server.wm.DisplayArea r0;
        android.view.SurfaceControl$Transaction $r1;

        r0 := @this: com.android.server.wm.DisplayArea;

        $r1 = specialinvoke r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl$Transaction getSyncTransaction()>();

        return $r1;
    }

    boolean isOrganized()
    {
        com.android.server.wm.DisplayArea r0;
        android.window.IDisplayAreaOrganizer $r1;
        boolean z0;

        r0 := @this: com.android.server.wm.DisplayArea;

        $r1 = r0.<com.android.server.wm.DisplayArea: android.window.IDisplayAreaOrganizer mOrganizer>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public volatile android.view.SurfaceControl$Builder makeAnimationLeash()
    {
        com.android.server.wm.DisplayArea r0;
        android.view.SurfaceControl$Builder $r1;

        r0 := @this: com.android.server.wm.DisplayArea;

        $r1 = specialinvoke r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl$Builder makeAnimationLeash()>();

        return $r1;
    }

    boolean needsZBoost()
    {
        com.android.server.wm.DisplayArea r0;

        r0 := @this: com.android.server.wm.DisplayArea;

        return 0;
    }

    public volatile void onAnimationLeashCreated(android.view.SurfaceControl$Transaction, android.view.SurfaceControl)
    {
        com.android.server.wm.DisplayArea r0;
        android.view.SurfaceControl$Transaction r1;
        android.view.SurfaceControl r2;

        r0 := @this: com.android.server.wm.DisplayArea;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        r2 := @parameter1: android.view.SurfaceControl;

        specialinvoke r0.<com.android.server.wm.WindowContainer: void onAnimationLeashCreated(android.view.SurfaceControl$Transaction,android.view.SurfaceControl)>(r1, r2);

        return;
    }

    public volatile void onAnimationLeashLost(android.view.SurfaceControl$Transaction)
    {
        com.android.server.wm.DisplayArea r0;
        android.view.SurfaceControl$Transaction r1;

        r0 := @this: com.android.server.wm.DisplayArea;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        specialinvoke r0.<com.android.server.wm.WindowContainer: void onAnimationLeashLost(android.view.SurfaceControl$Transaction)>(r1);

        return;
    }

    void onChildPositionChanged(com.android.server.wm.WindowContainer)
    {
        com.android.server.wm.DisplayArea r0;
        com.android.server.wm.WindowContainer r1, r2, r3;
        com.android.server.wm.DisplayArea$Type $r4, $r5, $r6, $r7;
        boolean $z0;
        int $i0, $i1, i2;

        r0 := @this: com.android.server.wm.DisplayArea;

        r1 := @parameter0: com.android.server.wm.WindowContainer;

        specialinvoke r0.<com.android.server.wm.WindowContainer: void onChildPositionChanged(com.android.server.wm.WindowContainer)>(r1);

        $r4 = r0.<com.android.server.wm.DisplayArea: com.android.server.wm.DisplayArea$Type mType>;

        $r5 = staticinvoke <com.android.server.wm.DisplayArea$Type: com.android.server.wm.DisplayArea$Type typeOf(com.android.server.wm.WindowContainer)>(r1);

        staticinvoke <com.android.server.wm.DisplayArea$Type: void checkChild(com.android.server.wm.DisplayArea$Type,com.android.server.wm.DisplayArea$Type)>($r4, $r5);

        $z0 = r1 instanceof com.android.server.wm.ActivityStack;

        if $z0 == 0 goto label1;

        return;

     label1:
        i2 = 1;

     label2:
        $i0 = virtualinvoke r0.<com.android.server.wm.DisplayArea: int getChildCount()>();

        if i2 >= $i0 goto label5;

        $i1 = i2 - 1;

        r2 = virtualinvoke r0.<com.android.server.wm.DisplayArea: com.android.server.wm.WindowContainer getChildAt(int)>($i1);

        r3 = virtualinvoke r0.<com.android.server.wm.DisplayArea: com.android.server.wm.WindowContainer getChildAt(int)>(i2);

        if r1 == r2 goto label3;

        if r1 != r3 goto label4;

     label3:
        $r6 = staticinvoke <com.android.server.wm.DisplayArea$Type: com.android.server.wm.DisplayArea$Type typeOf(com.android.server.wm.WindowContainer)>(r2);

        $r7 = staticinvoke <com.android.server.wm.DisplayArea$Type: com.android.server.wm.DisplayArea$Type typeOf(com.android.server.wm.WindowContainer)>(r3);

        staticinvoke <com.android.server.wm.DisplayArea$Type: void checkSiblings(com.android.server.wm.DisplayArea$Type,com.android.server.wm.DisplayArea$Type)>($r6, $r7);

     label4:
        i2 = i2 + 1;

        goto label2;

     label5:
        return;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        com.android.server.wm.DisplayArea r0;
        android.content.res.Configuration r1, $r2, $r3, $r5, $r6;
        android.window.IDisplayAreaOrganizer $r4, $r7;
        int $i0;
        com.android.server.wm.DisplayAreaOrganizerController $r8;

        r0 := @this: com.android.server.wm.DisplayArea;

        r1 := @parameter0: android.content.res.Configuration;

        $r2 = r0.<com.android.server.wm.DisplayArea: android.content.res.Configuration mTmpConfiguration>;

        $r3 = virtualinvoke r0.<com.android.server.wm.DisplayArea: android.content.res.Configuration getConfiguration()>();

        virtualinvoke $r2.<android.content.res.Configuration: void setTo(android.content.res.Configuration)>($r3);

        specialinvoke r0.<com.android.server.wm.WindowContainer: void onConfigurationChanged(android.content.res.Configuration)>(r1);

        $r4 = r0.<com.android.server.wm.DisplayArea: android.window.IDisplayAreaOrganizer mOrganizer>;

        if $r4 == null goto label1;

        $r5 = virtualinvoke r0.<com.android.server.wm.DisplayArea: android.content.res.Configuration getConfiguration()>();

        $r6 = r0.<com.android.server.wm.DisplayArea: android.content.res.Configuration mTmpConfiguration>;

        $i0 = virtualinvoke $r5.<android.content.res.Configuration: int diff(android.content.res.Configuration)>($r6);

        if $i0 == 0 goto label1;

        $r8 = r0.<com.android.server.wm.DisplayArea: com.android.server.wm.DisplayAreaOrganizerController mOrganizerController>;

        $r7 = r0.<com.android.server.wm.DisplayArea: android.window.IDisplayAreaOrganizer mOrganizer>;

        virtualinvoke $r8.<com.android.server.wm.DisplayAreaOrganizerController: void onDisplayAreaInfoChanged(android.window.IDisplayAreaOrganizer,com.android.server.wm.DisplayArea)>($r7, r0);

     label1:
        return;
    }

    public volatile void onRequestedOverrideConfigurationChanged(android.content.res.Configuration)
    {
        com.android.server.wm.DisplayArea r0;
        android.content.res.Configuration r1;

        r0 := @this: com.android.server.wm.DisplayArea;

        r1 := @parameter0: android.content.res.Configuration;

        specialinvoke r0.<com.android.server.wm.WindowContainer: void onRequestedOverrideConfigurationChanged(android.content.res.Configuration)>(r1);

        return;
    }

    public volatile void onTransactionReady(int, java.util.Set)
    {
        com.android.server.wm.DisplayArea r0;
        int i0;
        java.util.Set r1;

        r0 := @this: com.android.server.wm.DisplayArea;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.Set;

        specialinvoke r0.<com.android.server.wm.WindowContainer: void onTransactionReady(int,java.util.Set)>(i0, r1);

        return;
    }

    void sendDisplayAreaAppeared()
    {
        com.android.server.wm.DisplayArea r0;
        android.window.IDisplayAreaOrganizer r1;
        com.android.server.wm.DisplayAreaOrganizerController $r2;

        r0 := @this: com.android.server.wm.DisplayArea;

        r1 = r0.<com.android.server.wm.DisplayArea: android.window.IDisplayAreaOrganizer mOrganizer>;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<com.android.server.wm.DisplayArea: com.android.server.wm.DisplayAreaOrganizerController mOrganizerController>;

        virtualinvoke $r2.<com.android.server.wm.DisplayAreaOrganizerController: void onDisplayAreaAppeared(android.window.IDisplayAreaOrganizer,com.android.server.wm.DisplayArea)>(r1, r0);

        return;
    }

    void sendDisplayAreaVanished(android.window.IDisplayAreaOrganizer)
    {
        com.android.server.wm.DisplayArea r0;
        android.window.IDisplayAreaOrganizer r1;
        com.android.server.wm.DisplayAreaOrganizerController $r2;

        r0 := @this: com.android.server.wm.DisplayArea;

        r1 := @parameter0: android.window.IDisplayAreaOrganizer;

        if r1 != null goto label1;

        return;

     label1:
        virtualinvoke r0.<com.android.server.wm.DisplayArea: void migrateToNewSurfaceControl()>();

        $r2 = r0.<com.android.server.wm.DisplayArea: com.android.server.wm.DisplayAreaOrganizerController mOrganizerController>;

        virtualinvoke $r2.<com.android.server.wm.DisplayAreaOrganizerController: void onDisplayAreaVanished(android.window.IDisplayAreaOrganizer,com.android.server.wm.DisplayArea)>(r1, r0);

        return;
    }

    void setOrganizer(android.window.IDisplayAreaOrganizer)
    {
        com.android.server.wm.DisplayArea r0;
        android.window.IDisplayAreaOrganizer r1, r2, $r3;

        r0 := @this: com.android.server.wm.DisplayArea;

        r1 := @parameter0: android.window.IDisplayAreaOrganizer;

        $r3 = r0.<com.android.server.wm.DisplayArea: android.window.IDisplayAreaOrganizer mOrganizer>;

        if $r3 != r1 goto label1;

        return;

     label1:
        r2 = r0.<com.android.server.wm.DisplayArea: android.window.IDisplayAreaOrganizer mOrganizer>;

        r0.<com.android.server.wm.DisplayArea: android.window.IDisplayAreaOrganizer mOrganizer> = r1;

        virtualinvoke r0.<com.android.server.wm.DisplayArea: void sendDisplayAreaVanished(android.window.IDisplayAreaOrganizer)>(r2);

        virtualinvoke r0.<com.android.server.wm.DisplayArea: void sendDisplayAreaAppeared()>();

        return;
    }

    public java.lang.String toString()
    {
        com.android.server.wm.DisplayArea r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r7;
        int $i0;

        r0 := @this: com.android.server.wm.DisplayArea;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<com.android.server.wm.DisplayArea: java.lang.String mName>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }
}
