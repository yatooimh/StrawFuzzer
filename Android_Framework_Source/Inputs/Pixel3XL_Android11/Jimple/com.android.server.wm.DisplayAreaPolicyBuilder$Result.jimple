class com.android.server.wm.DisplayAreaPolicyBuilder$Result extends com.android.server.wm.DisplayAreaPolicy
{
    private static final int LEAF_TYPE_IME_CONTAINERS;
    private static final int LEAF_TYPE_TASK_CONTAINERS;
    private static final int LEAF_TYPE_TOKENS;
    private final com.android.server.wm.DisplayArea$Tokens[] mAreaForLayer;
    private final java.util.Map mAreas;
    private final java.util.ArrayList mFeatures;
    private final int mMaxWindowLayer;

    void <init>(com.android.server.wm.WindowManagerService, com.android.server.wm.DisplayContent, com.android.server.wm.DisplayArea$Root, com.android.server.wm.DisplayArea, java.util.List, java.util.ArrayList)
    {
        com.android.server.wm.DisplayAreaPolicyBuilder$Result r0;
        com.android.server.wm.WindowManagerService r1, $r7;
        com.android.server.wm.DisplayContent r2;
        com.android.server.wm.DisplayArea$Root r3;
        com.android.server.wm.DisplayArea r4;
        java.util.List r5;
        java.util.ArrayList r6, $r11, $r12, $r15;
        com.android.server.policy.WindowManagerPolicy $r8;
        com.android.server.wm.DisplayArea$Tokens[] $r9;
        java.util.HashMap $r10;
        int $i0, $i1, i2, i3;
        java.util.Map $r13;
        java.lang.Object $r14;
        com.android.server.wm.DisplayAreaPolicyBuilder$Feature $r16;

        r0 := @this: com.android.server.wm.DisplayAreaPolicyBuilder$Result;

        r1 := @parameter0: com.android.server.wm.WindowManagerService;

        r2 := @parameter1: com.android.server.wm.DisplayContent;

        r3 := @parameter2: com.android.server.wm.DisplayArea$Root;

        r4 := @parameter3: com.android.server.wm.DisplayArea;

        r5 := @parameter4: java.util.List;

        r6 := @parameter5: java.util.ArrayList;

        specialinvoke r0.<com.android.server.wm.DisplayAreaPolicy: void <init>(com.android.server.wm.WindowManagerService,com.android.server.wm.DisplayContent,com.android.server.wm.DisplayArea$Root,com.android.server.wm.DisplayArea,java.util.List)>(r1, r2, r3, r4, r5);

        $r7 = r0.<com.android.server.wm.DisplayAreaPolicyBuilder$Result: com.android.server.wm.WindowManagerService mWmService>;

        $r8 = $r7.<com.android.server.wm.WindowManagerService: com.android.server.policy.WindowManagerPolicy mPolicy>;

        i2 = interfaceinvoke $r8.<com.android.server.policy.WindowManagerPolicy: int getMaxWindowLayer()>();

        r0.<com.android.server.wm.DisplayAreaPolicyBuilder$Result: int mMaxWindowLayer> = i2;

        $r9 = newarray (com.android.server.wm.DisplayArea$Tokens)[i2];

        r0.<com.android.server.wm.DisplayAreaPolicyBuilder$Result: com.android.server.wm.DisplayArea$Tokens[] mAreaForLayer> = $r9;

        r0.<com.android.server.wm.DisplayAreaPolicyBuilder$Result: java.util.ArrayList mFeatures> = r6;

        $r10 = new java.util.HashMap;

        $i0 = virtualinvoke r6.<java.util.ArrayList: int size()>();

        specialinvoke $r10.<java.util.HashMap: void <init>(int)>($i0);

        r0.<com.android.server.wm.DisplayAreaPolicyBuilder$Result: java.util.Map mAreas> = $r10;

        i3 = 0;

     label1:
        $r11 = r0.<com.android.server.wm.DisplayAreaPolicyBuilder$Result: java.util.ArrayList mFeatures>;

        $i1 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        if i3 >= $i1 goto label2;

        $r13 = r0.<com.android.server.wm.DisplayAreaPolicyBuilder$Result: java.util.Map mAreas>;

        $r12 = r0.<com.android.server.wm.DisplayAreaPolicyBuilder$Result: java.util.ArrayList mFeatures>;

        $r14 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r16 = (com.android.server.wm.DisplayAreaPolicyBuilder$Feature) $r14;

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r15);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    private void addTaskDisplayAreasToLayer(com.android.server.wm.DisplayAreaPolicyBuilder$PendingArea, int)
    {
        com.android.server.wm.DisplayAreaPolicyBuilder$Result r0;
        com.android.server.wm.DisplayAreaPolicyBuilder$PendingArea r1, $r4;
        int i0, i1, i2;
        java.util.List $r3, $r5;
        java.lang.Object $r6;
        com.android.server.wm.DisplayArea $r7;
        java.util.ArrayList $r8;

        r0 := @this: com.android.server.wm.DisplayAreaPolicyBuilder$Result;

        r1 := @parameter0: com.android.server.wm.DisplayAreaPolicyBuilder$PendingArea;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.server.wm.DisplayAreaPolicyBuilder$Result: java.util.List mTaskDisplayAreas>;

        i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r4 = new com.android.server.wm.DisplayAreaPolicyBuilder$PendingArea;

        specialinvoke $r4.<com.android.server.wm.DisplayAreaPolicyBuilder$PendingArea: void <init>(com.android.server.wm.DisplayAreaPolicyBuilder$Feature,int,com.android.server.wm.DisplayAreaPolicyBuilder$PendingArea)>(null, i0, r1);

        $r5 = r0.<com.android.server.wm.DisplayAreaPolicyBuilder$Result: java.util.List mTaskDisplayAreas>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i2);

        $r7 = (com.android.server.wm.DisplayArea) $r6;

        $r4.<com.android.server.wm.DisplayAreaPolicyBuilder$PendingArea: com.android.server.wm.DisplayArea mExisting> = $r7;

        $r4.<com.android.server.wm.DisplayAreaPolicyBuilder$PendingArea: int mMaxLayer> = i0;

        $r8 = r1.<com.android.server.wm.DisplayAreaPolicyBuilder$PendingArea: java.util.ArrayList mChildren>;

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    private static int typeOfLayer(com.android.server.policy.WindowManagerPolicy, int)
    {
        com.android.server.policy.WindowManagerPolicy r0;
        int i0, $i1, $i2;

        r0 := @parameter0: com.android.server.policy.WindowManagerPolicy;

        i0 := @parameter1: int;

        if i0 != 2 goto label1;

        return 1;

     label1:
        $i1 = interfaceinvoke r0.<com.android.server.policy.WindowManagerPolicy: int getWindowLayerFromTypeLw(int)>(2011);

        if i0 == $i1 goto label3;

        $i2 = interfaceinvoke r0.<com.android.server.policy.WindowManagerPolicy: int getWindowLayerFromTypeLw(int)>(2012);

        if i0 != $i2 goto label2;

        goto label3;

     label2:
        return 0;

     label3:
        return 2;
    }

    public void addWindow(com.android.server.wm.WindowToken)
    {
        com.android.server.wm.DisplayAreaPolicyBuilder$Result r0;
        com.android.server.wm.WindowToken r1;
        com.android.server.wm.DisplayArea$Tokens $r2;

        r0 := @this: com.android.server.wm.DisplayAreaPolicyBuilder$Result;

        r1 := @parameter0: com.android.server.wm.WindowToken;

        $r2 = virtualinvoke r0.<com.android.server.wm.DisplayAreaPolicyBuilder$Result: com.android.server.wm.DisplayArea$Tokens findAreaForToken(com.android.server.wm.WindowToken)>(r1);

        virtualinvoke $r2.<com.android.server.wm.DisplayArea$Tokens: void addChild(com.android.server.wm.WindowToken)>(r1);

        return;
    }

    public void attachDisplayAreas()
    {
        com.android.server.wm.DisplayAreaPolicyBuilder$Result r0;
        com.android.server.wm.DisplayAreaPolicyBuilder$PendingArea[] r1;
        com.android.server.wm.DisplayAreaPolicyBuilder$Feature r3;
        int i0, $i1, $i2, $i4, i5, i6, i7, i8, i9, i10;
        com.android.server.wm.DisplayAreaPolicyBuilder$PendingArea $r4, $r12, $r13, $r14, $r18, $r19, $r20, $r22, $r23, r24, r25, r26, $r27, $r28, $r30;
        java.util.ArrayList $r5, $r15, $r21, $r31;
        java.util.Map $r6;
        com.android.server.wm.DisplayArea$Tokens[] $r7;
        com.android.server.wm.DisplayArea$Root $r8;
        com.android.server.wm.WindowManagerService $r9;
        com.android.server.policy.WindowManagerPolicy $r10;
        com.android.server.wm.DisplayArea $r11;
        java.lang.Object $r16;
        boolean[] $r17;
        boolean $z1;

        r0 := @this: com.android.server.wm.DisplayAreaPolicyBuilder$Result;

        $i1 = r0.<com.android.server.wm.DisplayAreaPolicyBuilder$Result: int mMaxWindowLayer>;

        r1 = newarray (com.android.server.wm.DisplayAreaPolicyBuilder$PendingArea)[$i1];

        $r4 = new com.android.server.wm.DisplayAreaPolicyBuilder$PendingArea;

        specialinvoke $r4.<com.android.server.wm.DisplayAreaPolicyBuilder$PendingArea: void <init>(com.android.server.wm.DisplayAreaPolicyBuilder$Feature,int,com.android.server.wm.DisplayAreaPolicyBuilder$PendingArea)>(null, 0, null);

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],java.lang.Object)>(r1, $r4);

        $r5 = r0.<com.android.server.wm.DisplayAreaPolicyBuilder$Result: java.util.ArrayList mFeatures>;

        i5 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i6 = 0;

     label01:
        if i6 >= i5 goto label08;

        r24 = null;

        i7 = 0;

     label02:
        $i4 = r0.<com.android.server.wm.DisplayAreaPolicyBuilder$Result: int mMaxWindowLayer>;

        if i7 >= $i4 goto label07;

        $r15 = r0.<com.android.server.wm.DisplayAreaPolicyBuilder$Result: java.util.ArrayList mFeatures>;

        $r16 = virtualinvoke $r15.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        r3 = (com.android.server.wm.DisplayAreaPolicyBuilder$Feature) $r16;

        $r17 = staticinvoke <com.android.server.wm.DisplayAreaPolicyBuilder$Feature: boolean[] access$100(com.android.server.wm.DisplayAreaPolicyBuilder$Feature)>(r3);

        $z1 = $r17[i7];

        if $z1 == 0 goto label05;

        if r24 == null goto label03;

        r25 = r24;

        $r23 = r24.<com.android.server.wm.DisplayAreaPolicyBuilder$PendingArea: com.android.server.wm.DisplayAreaPolicyBuilder$PendingArea mParent>;

        $r22 = r1[i7];

        if $r23 == $r22 goto label04;

     label03:
        $r18 = new com.android.server.wm.DisplayAreaPolicyBuilder$PendingArea;

        $r19 = r1[i7];

        specialinvoke $r18.<com.android.server.wm.DisplayAreaPolicyBuilder$PendingArea: void <init>(com.android.server.wm.DisplayAreaPolicyBuilder$Feature,int,com.android.server.wm.DisplayAreaPolicyBuilder$PendingArea)>(r3, i7, $r19);

        r25 = $r18;

        $r20 = r1[i7];

        $r21 = $r20.<com.android.server.wm.DisplayAreaPolicyBuilder$PendingArea: java.util.ArrayList mChildren>;

        virtualinvoke $r21.<java.util.ArrayList: boolean add(java.lang.Object)>($r18);

     label04:
        r1[i7] = r25;

        r24 = r25;

        goto label06;

     label05:
        r24 = null;

     label06:
        i7 = i7 + 1;

        goto label02;

     label07:
        i6 = i6 + 1;

        goto label01;

     label08:
        r26 = null;

        i8 = 0;

        i9 = 0;

     label09:
        $i2 = r0.<com.android.server.wm.DisplayAreaPolicyBuilder$Result: int mMaxWindowLayer>;

        if i9 >= $i2 goto label13;

        $r9 = r0.<com.android.server.wm.DisplayAreaPolicyBuilder$Result: com.android.server.wm.WindowManagerService mWmService>;

        $r10 = $r9.<com.android.server.wm.WindowManagerService: com.android.server.policy.WindowManagerPolicy mPolicy>;

        i0 = staticinvoke <com.android.server.wm.DisplayAreaPolicyBuilder$Result: int typeOfLayer(com.android.server.policy.WindowManagerPolicy,int)>($r10, i9);

        if r26 == null goto label10;

        $r14 = r26.<com.android.server.wm.DisplayAreaPolicyBuilder$PendingArea: com.android.server.wm.DisplayAreaPolicyBuilder$PendingArea mParent>;

        $r13 = r1[i9];

        if $r14 != $r13 goto label10;

        i10 = i8;

        if i0 == i8 goto label12;

     label10:
        $r27 = new com.android.server.wm.DisplayAreaPolicyBuilder$PendingArea;

        $r28 = r1[i9];

        specialinvoke $r27.<com.android.server.wm.DisplayAreaPolicyBuilder$PendingArea: void <init>(com.android.server.wm.DisplayAreaPolicyBuilder$Feature,int,com.android.server.wm.DisplayAreaPolicyBuilder$PendingArea)>(null, i9, $r28);

        $r30 = r1[i9];

        $r31 = $r30.<com.android.server.wm.DisplayAreaPolicyBuilder$PendingArea: java.util.ArrayList mChildren>;

        virtualinvoke $r31.<java.util.ArrayList: boolean add(java.lang.Object)>($r27);

        if i0 != 1 goto label11;

        $r12 = r1[i9];

        specialinvoke r0.<com.android.server.wm.DisplayAreaPolicyBuilder$Result: void addTaskDisplayAreasToLayer(com.android.server.wm.DisplayAreaPolicyBuilder$PendingArea,int)>($r12, i9);

        r26 = $r27;

        i10 = i0;

        goto label12;

     label11:
        r26 = $r27;

        i10 = i0;

        if i0 != 2 goto label12;

        $r11 = r0.<com.android.server.wm.DisplayAreaPolicyBuilder$Result: com.android.server.wm.DisplayArea mImeContainer>;

        $r27.<com.android.server.wm.DisplayAreaPolicyBuilder$PendingArea: com.android.server.wm.DisplayArea mExisting> = $r11;

        i10 = i0;

        r26 = $r27;

     label12:
        r26.<com.android.server.wm.DisplayAreaPolicyBuilder$PendingArea: int mMaxLayer> = i9;

        i9 = i9 + 1;

        i8 = i10;

        goto label09;

     label13:
        virtualinvoke $r4.<com.android.server.wm.DisplayAreaPolicyBuilder$PendingArea: int computeMaxLayer()>();

        $r8 = r0.<com.android.server.wm.DisplayAreaPolicyBuilder$Result: com.android.server.wm.DisplayArea$Root mRoot>;

        $r7 = r0.<com.android.server.wm.DisplayAreaPolicyBuilder$Result: com.android.server.wm.DisplayArea$Tokens[] mAreaForLayer>;

        $r6 = r0.<com.android.server.wm.DisplayAreaPolicyBuilder$Result: java.util.Map mAreas>;

        virtualinvoke $r4.<com.android.server.wm.DisplayAreaPolicyBuilder$PendingArea: void instantiateChildren(com.android.server.wm.DisplayArea,com.android.server.wm.DisplayArea$Tokens[],int,java.util.Map)>($r8, $r7, 0, $r6);

        return;
    }

    com.android.server.wm.DisplayArea$Tokens findAreaForToken(com.android.server.wm.WindowToken)
    {
        com.android.server.wm.DisplayAreaPolicyBuilder$Result r0;
        com.android.server.wm.WindowToken r1;
        boolean $z0;
        int $i0, i1;
        com.android.server.wm.DisplayArea$Tokens[] $r2;
        com.android.server.wm.DisplayArea$Tokens $r3;

        r0 := @this: com.android.server.wm.DisplayAreaPolicyBuilder$Result;

        r1 := @parameter0: com.android.server.wm.WindowToken;

        i1 = virtualinvoke r1.<com.android.server.wm.WindowToken: int getWindowLayerFromType()>();

        if i1 != 2 goto label1;

        i1 = i1 + 1;

        goto label2;

     label1:
        $z0 = r1.<com.android.server.wm.WindowToken: boolean mRoundedCornerOverlay>;

        if $z0 == 0 goto label2;

        $i0 = r0.<com.android.server.wm.DisplayAreaPolicyBuilder$Result: int mMaxWindowLayer>;

        i1 = $i0 - 1;

     label2:
        $r2 = r0.<com.android.server.wm.DisplayAreaPolicyBuilder$Result: com.android.server.wm.DisplayArea$Tokens[] mAreaForLayer>;

        $r3 = $r2[i1];

        return $r3;
    }

    public java.util.List getDisplayAreas(com.android.server.wm.DisplayAreaPolicyBuilder$Feature)
    {
        com.android.server.wm.DisplayAreaPolicyBuilder$Result r0;
        com.android.server.wm.DisplayAreaPolicyBuilder$Feature r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.util.List $r4;

        r0 := @this: com.android.server.wm.DisplayAreaPolicyBuilder$Result;

        r1 := @parameter0: com.android.server.wm.DisplayAreaPolicyBuilder$Feature;

        $r2 = r0.<com.android.server.wm.DisplayAreaPolicyBuilder$Result: java.util.Map mAreas>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.util.List) $r3;

        return $r4;
    }

    public static void <clinit>()
    {
        <com.android.server.wm.DisplayAreaPolicyBuilder$Result: int LEAF_TYPE_TOKENS> = 0;

        <com.android.server.wm.DisplayAreaPolicyBuilder$Result: int LEAF_TYPE_TASK_CONTAINERS> = 1;

        <com.android.server.wm.DisplayAreaPolicyBuilder$Result: int LEAF_TYPE_IME_CONTAINERS> = 2;

        return;
    }
}
