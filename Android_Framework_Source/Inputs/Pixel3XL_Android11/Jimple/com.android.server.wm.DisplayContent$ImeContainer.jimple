class com.android.server.wm.DisplayContent$ImeContainer extends com.android.server.wm.DisplayArea$Tokens
{
    boolean mNeedsLayer;

    void <init>(com.android.server.wm.WindowManagerService)
    {
        com.android.server.wm.DisplayContent$ImeContainer r0;
        com.android.server.wm.WindowManagerService r1;
        com.android.server.wm.DisplayArea$Type $r2;

        r0 := @this: com.android.server.wm.DisplayContent$ImeContainer;

        r1 := @parameter0: com.android.server.wm.WindowManagerService;

        $r2 = <com.android.server.wm.DisplayArea$Type: com.android.server.wm.DisplayArea$Type ABOVE_TASKS>;

        specialinvoke r0.<com.android.server.wm.DisplayArea$Tokens: void <init>(com.android.server.wm.WindowManagerService,com.android.server.wm.DisplayArea$Type,java.lang.String)>(r1, $r2, "ImeContainer");

        r0.<com.android.server.wm.DisplayContent$ImeContainer: boolean mNeedsLayer> = 0;

        return;
    }

    private boolean skipImeWindowsDuringTraversal(com.android.server.wm.DisplayContent)
    {
        com.android.server.wm.DisplayContent$ImeContainer r0;
        com.android.server.wm.DisplayContent r1;
        com.android.server.wm.WindowState $r2;
        com.android.server.wm.TaskDisplayArea $r3;
        boolean $z0, z1;

        r0 := @this: com.android.server.wm.DisplayContent$ImeContainer;

        r1 := @parameter0: com.android.server.wm.DisplayContent;

        $r2 = r1.<com.android.server.wm.DisplayContent: com.android.server.wm.WindowState mInputMethodTarget>;

        if $r2 == null goto label1;

        $r3 = virtualinvoke r1.<com.android.server.wm.DisplayContent: com.android.server.wm.TaskDisplayArea getDefaultTaskDisplayArea()>();

        $z0 = virtualinvoke $r3.<com.android.server.wm.TaskDisplayArea: boolean isSplitScreenModeActivated()>();

        if $z0 != 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    void assignLayer(android.view.SurfaceControl$Transaction, int)
    {
        com.android.server.wm.DisplayContent$ImeContainer r0;
        android.view.SurfaceControl$Transaction r1;
        int i0;
        boolean $z0;

        r0 := @this: com.android.server.wm.DisplayContent$ImeContainer;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        i0 := @parameter1: int;

        $z0 = r0.<com.android.server.wm.DisplayContent$ImeContainer: boolean mNeedsLayer>;

        if $z0 != 0 goto label1;

        return;

     label1:
        specialinvoke r0.<com.android.server.wm.DisplayArea$Tokens: void assignLayer(android.view.SurfaceControl$Transaction,int)>(r1, i0);

        r0.<com.android.server.wm.DisplayContent$ImeContainer: boolean mNeedsLayer> = 0;

        return;
    }

    void assignRelativeLayer(android.view.SurfaceControl$Transaction, android.view.SurfaceControl, int)
    {
        com.android.server.wm.DisplayContent$ImeContainer r0;
        android.view.SurfaceControl$Transaction r1;
        android.view.SurfaceControl r2;
        int i0;
        boolean $z0;

        r0 := @this: com.android.server.wm.DisplayContent$ImeContainer;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        r2 := @parameter1: android.view.SurfaceControl;

        i0 := @parameter2: int;

        $z0 = r0.<com.android.server.wm.DisplayContent$ImeContainer: boolean mNeedsLayer>;

        if $z0 != 0 goto label1;

        return;

     label1:
        specialinvoke r0.<com.android.server.wm.DisplayArea$Tokens: void assignRelativeLayer(android.view.SurfaceControl$Transaction,android.view.SurfaceControl,int)>(r1, r2, i0);

        r0.<com.android.server.wm.DisplayContent$ImeContainer: boolean mNeedsLayer> = 0;

        return;
    }

    boolean forAllWindowForce(com.android.internal.util.ToBooleanFunction, boolean)
    {
        com.android.server.wm.DisplayContent$ImeContainer r0;
        com.android.internal.util.ToBooleanFunction r1;
        boolean z0, $z1;

        r0 := @this: com.android.server.wm.DisplayContent$ImeContainer;

        r1 := @parameter0: com.android.internal.util.ToBooleanFunction;

        z0 := @parameter1: boolean;

        $z1 = specialinvoke r0.<com.android.server.wm.DisplayArea$Tokens: boolean forAllWindows(com.android.internal.util.ToBooleanFunction,boolean)>(r1, z0);

        return $z1;
    }

    boolean forAllWindows(com.android.internal.util.ToBooleanFunction, boolean)
    {
        com.android.server.wm.DisplayContent$ImeContainer r0;
        com.android.internal.util.ToBooleanFunction r1;
        boolean z0, $z1, $z2;
        com.android.server.wm.DisplayContent $r2;

        r0 := @this: com.android.server.wm.DisplayContent$ImeContainer;

        r1 := @parameter0: com.android.internal.util.ToBooleanFunction;

        z0 := @parameter1: boolean;

        $r2 = r0.<com.android.server.wm.DisplayContent$ImeContainer: com.android.server.wm.DisplayContent mDisplayContent>;

        $z1 = specialinvoke r0.<com.android.server.wm.DisplayContent$ImeContainer: boolean skipImeWindowsDuringTraversal(com.android.server.wm.DisplayContent)>($r2);

        if $z1 == 0 goto label1;

        return 0;

     label1:
        $z2 = specialinvoke r0.<com.android.server.wm.DisplayArea$Tokens: boolean forAllWindows(com.android.internal.util.ToBooleanFunction,boolean)>(r1, z0);

        return $z2;
    }

    int getOrientation(int)
    {
        com.android.server.wm.DisplayContent$ImeContainer r0;
        int i0;

        r0 := @this: com.android.server.wm.DisplayContent$ImeContainer;

        i0 := @parameter0: int;

        return i0;
    }

    public void setNeedsLayer()
    {
        com.android.server.wm.DisplayContent$ImeContainer r0;

        r0 := @this: com.android.server.wm.DisplayContent$ImeContainer;

        r0.<com.android.server.wm.DisplayContent$ImeContainer: boolean mNeedsLayer> = 1;

        return;
    }
}
