class com.android.server.wm.DisplayContent$NonAppWindowContainers extends com.android.server.wm.DisplayContent$DisplayChildWindowContainer
{
    private final com.android.server.wm.Dimmer mDimmer;
    private final java.lang.String mName;
    private final android.graphics.Rect mTmpDimBoundsRect;
    private final java.util.Comparator mWindowComparator;
    final com.android.server.wm.DisplayContent this$0;

    void <init>(com.android.server.wm.DisplayContent, java.lang.String, com.android.server.wm.WindowManagerService)
    {
        com.android.server.wm.DisplayContent$NonAppWindowContainers r0;
        com.android.server.wm.DisplayContent r1;
        java.lang.String r2;
        com.android.server.wm.WindowManagerService r3;
        com.android.server.wm._$$Lambda$DisplayContent$NonAppWindowContainers$nqCymC3xR9b3qaeohnnJJpSiajc $r4;
        com.android.server.wm.Dimmer $r5;
        android.graphics.Rect $r6;

        r0 := @this: com.android.server.wm.DisplayContent$NonAppWindowContainers;

        r1 := @parameter0: com.android.server.wm.DisplayContent;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.android.server.wm.WindowManagerService;

        r0.<com.android.server.wm.DisplayContent$NonAppWindowContainers: com.android.server.wm.DisplayContent this$0> = r1;

        specialinvoke r0.<com.android.server.wm.DisplayContent$DisplayChildWindowContainer: void <init>(com.android.server.wm.WindowManagerService)>(r3);

        $r4 = new com.android.server.wm._$$Lambda$DisplayContent$NonAppWindowContainers$nqCymC3xR9b3qaeohnnJJpSiajc;

        specialinvoke $r4.<com.android.server.wm._$$Lambda$DisplayContent$NonAppWindowContainers$nqCymC3xR9b3qaeohnnJJpSiajc: void <init>(com.android.server.wm.DisplayContent$NonAppWindowContainers)>(r0);

        r0.<com.android.server.wm.DisplayContent$NonAppWindowContainers: java.util.Comparator mWindowComparator> = $r4;

        $r5 = new com.android.server.wm.Dimmer;

        specialinvoke $r5.<com.android.server.wm.Dimmer: void <init>(com.android.server.wm.WindowContainer)>(r0);

        r0.<com.android.server.wm.DisplayContent$NonAppWindowContainers: com.android.server.wm.Dimmer mDimmer> = $r5;

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.DisplayContent$NonAppWindowContainers: android.graphics.Rect mTmpDimBoundsRect> = $r6;

        r0.<com.android.server.wm.DisplayContent$NonAppWindowContainers: java.lang.String mName> = r2;

        return;
    }

    void addChild(com.android.server.wm.WindowToken)
    {
        com.android.server.wm.DisplayContent$NonAppWindowContainers r0;
        com.android.server.wm.WindowToken r1;
        java.util.Comparator $r2;

        r0 := @this: com.android.server.wm.DisplayContent$NonAppWindowContainers;

        r1 := @parameter0: com.android.server.wm.WindowToken;

        $r2 = r0.<com.android.server.wm.DisplayContent$NonAppWindowContainers: java.util.Comparator mWindowComparator>;

        virtualinvoke r0.<com.android.server.wm.DisplayContent$NonAppWindowContainers: void addChild(com.android.server.wm.WindowContainer,java.util.Comparator)>(r1, $r2);

        return;
    }

    com.android.server.wm.Dimmer getDimmer()
    {
        com.android.server.wm.DisplayContent$NonAppWindowContainers r0;
        com.android.server.wm.Dimmer $r1;

        r0 := @this: com.android.server.wm.DisplayContent$NonAppWindowContainers;

        $r1 = r0.<com.android.server.wm.DisplayContent$NonAppWindowContainers: com.android.server.wm.Dimmer mDimmer>;

        return $r1;
    }

    java.lang.String getName()
    {
        com.android.server.wm.DisplayContent$NonAppWindowContainers r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.wm.DisplayContent$NonAppWindowContainers;

        $r1 = r0.<com.android.server.wm.DisplayContent$NonAppWindowContainers: java.lang.String mName>;

        return $r1;
    }

    int getOrientation(int)
    {
        com.android.server.wm.DisplayContent$NonAppWindowContainers r0;
        int i0;
        java.lang.String r1;
        boolean $z0;
        java.lang.Object[] $r2;
        com.android.server.wm.ProtoLogGroup $r3;

        r0 := @this: com.android.server.wm.DisplayContent$NonAppWindowContainers;

        i0 := @parameter0: int;

        $z0 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_ORIENTATION_enabled>;

        if $z0 == 0 goto label1;

        r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        $r3 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_ORIENTATION>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r1;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void w(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r3, 1389009035, 0, null, $r2);

     label1:
        return -2;
    }

    boolean hasActivity()
    {
        com.android.server.wm.DisplayContent$NonAppWindowContainers r0;

        r0 := @this: com.android.server.wm.DisplayContent$NonAppWindowContainers;

        return 0;
    }

    public int lambda$new$0$DisplayContent$NonAppWindowContainers(com.android.server.wm.WindowToken, com.android.server.wm.WindowToken)
    {
        com.android.server.wm.DisplayContent$NonAppWindowContainers r0;
        com.android.server.wm.WindowToken r1, r2;
        com.android.server.wm.WindowManagerService $r3, $r5;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3;
        com.android.server.policy.WindowManagerPolicy $r4, $r6;
        byte b4;

        r0 := @this: com.android.server.wm.DisplayContent$NonAppWindowContainers;

        r1 := @parameter0: com.android.server.wm.WindowToken;

        r2 := @parameter1: com.android.server.wm.WindowToken;

        $r3 = r0.<com.android.server.wm.DisplayContent$NonAppWindowContainers: com.android.server.wm.WindowManagerService mWmService>;

        $r4 = $r3.<com.android.server.wm.WindowManagerService: com.android.server.policy.WindowManagerPolicy mPolicy>;

        $i0 = r1.<com.android.server.wm.WindowToken: int windowType>;

        $z0 = r1.<com.android.server.wm.WindowToken: boolean mOwnerCanManageAppTokens>;

        $i1 = interfaceinvoke $r4.<com.android.server.policy.WindowManagerPolicy: int getWindowLayerFromTypeLw(int,boolean)>($i0, $z0);

        $r5 = r0.<com.android.server.wm.DisplayContent$NonAppWindowContainers: com.android.server.wm.WindowManagerService mWmService>;

        $r6 = $r5.<com.android.server.wm.WindowManagerService: com.android.server.policy.WindowManagerPolicy mPolicy>;

        $i2 = r2.<com.android.server.wm.WindowToken: int windowType>;

        $z1 = r2.<com.android.server.wm.WindowToken: boolean mOwnerCanManageAppTokens>;

        $i3 = interfaceinvoke $r6.<com.android.server.policy.WindowManagerPolicy: int getWindowLayerFromTypeLw(int,boolean)>($i2, $z1);

        if $i1 >= $i3 goto label1;

        b4 = -1;

        goto label2;

     label1:
        b4 = 1;

     label2:
        return b4;
    }

    void prepareSurfaces()
    {
        com.android.server.wm.DisplayContent$NonAppWindowContainers r0;
        com.android.server.wm.Dimmer $r1, $r3;
        android.graphics.Rect $r2, $r5;
        android.view.SurfaceControl$Transaction $r4;
        boolean $z0;

        r0 := @this: com.android.server.wm.DisplayContent$NonAppWindowContainers;

        $r1 = r0.<com.android.server.wm.DisplayContent$NonAppWindowContainers: com.android.server.wm.Dimmer mDimmer>;

        virtualinvoke $r1.<com.android.server.wm.Dimmer: void resetDimStates()>();

        specialinvoke r0.<com.android.server.wm.DisplayContent$DisplayChildWindowContainer: void prepareSurfaces()>();

        $r2 = r0.<com.android.server.wm.DisplayContent$NonAppWindowContainers: android.graphics.Rect mTmpDimBoundsRect>;

        virtualinvoke r0.<com.android.server.wm.DisplayContent$NonAppWindowContainers: void getBounds(android.graphics.Rect)>($r2);

        $r3 = r0.<com.android.server.wm.DisplayContent$NonAppWindowContainers: com.android.server.wm.Dimmer mDimmer>;

        $r4 = virtualinvoke r0.<com.android.server.wm.DisplayContent$NonAppWindowContainers: android.view.SurfaceControl$Transaction getPendingTransaction()>();

        $r5 = r0.<com.android.server.wm.DisplayContent$NonAppWindowContainers: android.graphics.Rect mTmpDimBoundsRect>;

        $z0 = virtualinvoke $r3.<com.android.server.wm.Dimmer: boolean updateDims(android.view.SurfaceControl$Transaction,android.graphics.Rect)>($r4, $r5);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.server.wm.DisplayContent$NonAppWindowContainers: void scheduleAnimation()>();

     label1:
        return;
    }

    boolean shouldMagnify()
    {
        com.android.server.wm.DisplayContent$NonAppWindowContainers r0;

        r0 := @this: com.android.server.wm.DisplayContent$NonAppWindowContainers;

        return 0;
    }
}
