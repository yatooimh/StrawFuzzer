public class com.android.server.wm.DisplayPolicy extends java.lang.Object
{
    private static final boolean ALTERNATE_CAR_MODE_NAV_SIZE;
    static final int ANIMATION_NONE;
    static final int ANIMATION_STYLEABLE;
    private static final boolean DEBUG;
    private static final int MSG_DISABLE_POINTER_LOCATION;
    private static final int MSG_DISPOSE_INPUT_CONSUMER;
    private static final int MSG_ENABLE_POINTER_LOCATION;
    private static final int MSG_REQUEST_TRANSIENT_BARS;
    private static final int MSG_REQUEST_TRANSIENT_BARS_ARG_NAVIGATION;
    private static final int MSG_REQUEST_TRANSIENT_BARS_ARG_STATUS;
    private static final int NAV_BAR_FORCE_TRANSPARENT;
    private static final int NAV_BAR_OPAQUE_WHEN_FREEFORM_OR_DOCKED;
    private static final int NAV_BAR_TRANSLUCENT_WHEN_FREEFORM_OPAQUE_OTHERWISE;
    private static final long PANIC_GESTURE_EXPIRATION;
    private static final int SYSTEM_UI_CHANGING_LAYOUT;
    private static final java.lang.String TAG;
    private static final android.graphics.Rect sTmpDisplayCutoutSafeExceptMaybeBarsRect;
    private static final android.graphics.Rect sTmpLastParentFrame;
    private static final android.graphics.Rect sTmpNavFrame;
    private static final android.graphics.Rect sTmpRect;
    private final android.view.accessibility.AccessibilityManager mAccessibilityManager;
    private boolean mAllowLockscreenWhenOn;
    private volatile boolean mAwake;
    private int mBottomGestureAdditionalInset;
    private final boolean mCarDockEnablesAccelerometer;
    private final java.lang.Runnable mClearHideNavigationFlag;
    private final android.content.Context mContext;
    private android.content.res.Resources mCurrentUserResources;
    private final boolean mDeskDockEnablesAccelerometer;
    private final com.android.server.wm.DisplayContent mDisplayContent;
    private volatile int mDockMode;
    private final android.graphics.Rect mDockedStackBounds;
    private boolean mDreamingLockscreen;
    private com.android.server.wm.WindowState mFocusedWindow;
    private int mForceClearedSystemUiFlags;
    private boolean mForceShowSystemBars;
    private boolean mForceShowSystemBarsFromExternal;
    private boolean mForceStatusBar;
    private boolean mForcingShowNavBar;
    private int mForcingShowNavBarLayer;
    private android.graphics.Insets mForwardedInsets;
    private final com.android.internal.policy.GestureNavigationSettingsObserver mGestureNavigationSettingsObserver;
    private final android.os.Handler mHandler;
    private volatile boolean mHasNavigationBar;
    private volatile boolean mHasStatusBar;
    private volatile boolean mHdmiPlugged;
    private final java.lang.Runnable mHiddenNavPanic;
    private final com.android.server.wm.ImmersiveModeConfirmation mImmersiveModeConfirmation;
    com.android.server.policy.WindowManagerPolicy$InputConsumer mInputConsumer;
    private boolean mIsFreeformWindowOverlappingWithNavBar;
    private volatile boolean mKeyguardDrawComplete;
    private int mLastAppearance;
    private int mLastBehavior;
    private int mLastDockedAppearance;
    private final android.graphics.Rect mLastDockedStackBounds;
    private boolean mLastFocusIsFullscreen;
    private boolean mLastFocusIsImmersive;
    private com.android.server.wm.WindowState mLastFocusedWindow;
    private int mLastFullscreenAppearance;
    private boolean mLastImmersiveMode;
    private boolean mLastNavAllowedHidden;
    private boolean mLastNavTranslucent;
    private boolean mLastNavVisible;
    private final android.graphics.Rect mLastNonDockedStackBounds;
    private boolean mLastNotificationShadeForcesShowingNavigation;
    private boolean mLastShowingDream;
    int mLastSystemUiFlags;
    private int mLeftGestureInset;
    private volatile int mLidState;
    private final java.lang.Object mLock;
    private int mNavBarOpacityMode;
    private final com.android.server.wm.BarController$OnBarVisibilityChangedListener mNavBarVisibilityListener;
    private boolean mNavButtonForcedVisible;
    private com.android.server.wm.WindowState mNavigationBar;
    private volatile boolean mNavigationBarAlwaysShowOnSideGesture;
    private volatile boolean mNavigationBarCanMove;
    private final com.android.server.wm.BarController mNavigationBarController;
    private int[] mNavigationBarFrameHeightForRotationDefault;
    private int[] mNavigationBarHeightForRotationDefault;
    private int[] mNavigationBarHeightForRotationInCarMode;
    private volatile boolean mNavigationBarLetsThroughTaps;
    private int mNavigationBarPosition;
    private int[] mNavigationBarWidthForRotationDefault;
    private int[] mNavigationBarWidthForRotationInCarMode;
    private final android.graphics.Rect mNonDockedStackBounds;
    private com.android.server.wm.WindowState mNotificationShade;
    private long mPendingPanicGestureUptime;
    private volatile boolean mPersistentVrModeEnabled;
    private com.android.internal.widget.PointerLocationView mPointerLocationView;
    private com.android.server.wm.RefreshRatePolicy mRefreshRatePolicy;
    private int mResettingSystemUiFlags;
    private int mRightGestureInset;
    private final android.util.ArraySet mScreenDecorWindows;
    private volatile boolean mScreenOnEarly;
    private volatile boolean mScreenOnFully;
    private volatile com.android.server.policy.WindowManagerPolicy$ScreenOnListener mScreenOnListener;
    private final com.android.internal.util.ScreenshotHelper mScreenshotHelper;
    private final com.android.server.wm.WindowManagerService mService;
    private final java.lang.Object mServiceAcquireLock;
    private boolean mShowingDream;
    private com.android.server.wm.WindowState mStatusBar;
    private final com.android.server.wm.StatusBarController mStatusBarController;
    private final int[] mStatusBarHeightForRotation;
    private com.android.server.statusbar.StatusBarManagerInternal mStatusBarManagerInternal;
    private final com.android.server.wm.SystemGesturesPointerEventListener mSystemGestures;
    private com.android.server.wm.WindowState mTopDockedOpaqueOrDimmingWindowState;
    private com.android.server.wm.WindowState mTopDockedOpaqueWindowState;
    private com.android.server.wm.WindowState mTopFullscreenOpaqueOrDimmingWindowState;
    private com.android.server.wm.WindowState mTopFullscreenOpaqueWindowState;
    private boolean mTopIsFullscreen;
    private final android.content.Context mUiContext;
    private volatile boolean mWindowManagerDrawComplete;

    static void <clinit>()
    {
        android.graphics.Rect $r0, $r1, $r2, $r3;

        <com.android.server.wm.DisplayPolicy: java.lang.String TAG> = "WindowManager";

        <com.android.server.wm.DisplayPolicy: int SYSTEM_UI_CHANGING_LAYOUT> = -1073709042;

        <com.android.server.wm.DisplayPolicy: long PANIC_GESTURE_EXPIRATION> = 30000L;

        <com.android.server.wm.DisplayPolicy: int NAV_BAR_TRANSLUCENT_WHEN_FREEFORM_OPAQUE_OTHERWISE> = 1;

        <com.android.server.wm.DisplayPolicy: int NAV_BAR_OPAQUE_WHEN_FREEFORM_OR_DOCKED> = 0;

        <com.android.server.wm.DisplayPolicy: int NAV_BAR_FORCE_TRANSPARENT> = 2;

        <com.android.server.wm.DisplayPolicy: int MSG_REQUEST_TRANSIENT_BARS_ARG_STATUS> = 0;

        <com.android.server.wm.DisplayPolicy: int MSG_REQUEST_TRANSIENT_BARS_ARG_NAVIGATION> = 1;

        <com.android.server.wm.DisplayPolicy: int MSG_REQUEST_TRANSIENT_BARS> = 2;

        <com.android.server.wm.DisplayPolicy: int MSG_ENABLE_POINTER_LOCATION> = 4;

        <com.android.server.wm.DisplayPolicy: int MSG_DISPOSE_INPUT_CONSUMER> = 3;

        <com.android.server.wm.DisplayPolicy: int MSG_DISABLE_POINTER_LOCATION> = 5;

        <com.android.server.wm.DisplayPolicy: boolean DEBUG> = 0;

        <com.android.server.wm.DisplayPolicy: int ANIMATION_STYLEABLE> = 0;

        <com.android.server.wm.DisplayPolicy: int ANIMATION_NONE> = -1;

        <com.android.server.wm.DisplayPolicy: boolean ALTERNATE_CAR_MODE_NAV_SIZE> = 0;

        $r0 = new android.graphics.Rect;

        specialinvoke $r0.<android.graphics.Rect: void <init>()>();

        <com.android.server.wm.DisplayPolicy: android.graphics.Rect sTmpDisplayCutoutSafeExceptMaybeBarsRect> = $r0;

        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>()>();

        <com.android.server.wm.DisplayPolicy: android.graphics.Rect sTmpRect> = $r1;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        <com.android.server.wm.DisplayPolicy: android.graphics.Rect sTmpNavFrame> = $r2;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        <com.android.server.wm.DisplayPolicy: android.graphics.Rect sTmpLastParentFrame> = $r3;

        return;
    }

    void <init>(com.android.server.wm.WindowManagerService, com.android.server.wm.DisplayContent)
    {
        com.android.server.wm.DisplayPolicy r0;
        int i0, $i1;
        java.lang.Object $r1, $r21, $r26;
        android.util.ArraySet $r2;
        int[] $r3, $r4, $r5, $r6, $r7, $r8;
        com.android.server.wm.DisplayPolicy$1 $r9;
        android.graphics.Rect $r10, $r11, $r12, $r13;
        android.graphics.Insets $r14;
        com.android.server.wm.DisplayPolicy$3 $r15;
        com.android.server.wm.DisplayPolicy$4 $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z11, $z12, $z13;
        android.content.Context $r17, $r24, $r25, $r32, $r38, $r50, $r53, $r58, r62, r63;
        android.view.Display $r18;
        com.android.server.wm.ActivityTaskManagerService $r19, $r59;
        android.app.ActivityThread $r20;
        com.android.server.wm.StatusBarController $r22, $r33;
        com.android.server.wm.BarController $r23;
        android.view.accessibility.AccessibilityManager $r27;
        android.os.Handler $r28, $r49, r71;
        com.android.server.wm.DisplayPolicy$PolicyHandler $r29;
        com.android.server.wm.SystemGesturesPointerEventListener $r30;
        com.android.server.wm.DisplayPolicy$2 $r31;
        com.android.server.wm.AppTransition $r34;
        com.android.server.wm.WindowManagerInternal$AppTransitionListener $r35;
        com.android.server.wm.ImmersiveModeConfirmation $r36;
        com.android.server.wm.WindowManagerService $r37, $r43, $r45, r60;
        com.android.server.wm.DisplayContent $r39, $r40, $r42, r61;
        com.android.server.wm.RefreshRatePolicy $r41;
        android.view.DisplayInfo $r44;
        com.android.server.wm.HighRefreshRateBlacklist $r46;
        com.android.internal.policy.GestureNavigationSettingsObserver $r47;
        com.android.server.wm._$$Lambda$DisplayPolicy$E7j9SKAujlVEAp0eeRWet1AUkHs $r48;
        com.android.server.wm._$$Lambda$o8Xf30aea0t_A93AFKY5pBW0IDI $r52;
        android.content.res.Resources $r54, r64;
        java.lang.String $r55, $r56, r69;
        com.android.internal.util.ScreenshotHelper $r57, r68;
        android.os.Looper r65;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r60 := @parameter0: com.android.server.wm.WindowManagerService;

        r61 := @parameter1: com.android.server.wm.DisplayContent;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<com.android.server.wm.DisplayPolicy: java.lang.Object mServiceAcquireLock> = $r1;

        r0.<com.android.server.wm.DisplayPolicy: int mLidState> = -1;

        r0.<com.android.server.wm.DisplayPolicy: int mDockMode> = 0;

        $r2 = new android.util.ArraySet;

        specialinvoke $r2.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.wm.DisplayPolicy: android.util.ArraySet mScreenDecorWindows> = $r2;

        r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mStatusBar> = null;

        r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNotificationShade> = null;

        $r3 = newarray (int)[4];

        r0.<com.android.server.wm.DisplayPolicy: int[] mStatusBarHeightForRotation> = $r3;

        r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNavigationBar> = null;

        r0.<com.android.server.wm.DisplayPolicy: int mNavigationBarPosition> = 4;

        $r4 = newarray (int)[4];

        r0.<com.android.server.wm.DisplayPolicy: int[] mNavigationBarHeightForRotationDefault> = $r4;

        $r5 = newarray (int)[4];

        r0.<com.android.server.wm.DisplayPolicy: int[] mNavigationBarWidthForRotationDefault> = $r5;

        $r6 = newarray (int)[4];

        r0.<com.android.server.wm.DisplayPolicy: int[] mNavigationBarHeightForRotationInCarMode> = $r6;

        $r7 = newarray (int)[4];

        r0.<com.android.server.wm.DisplayPolicy: int[] mNavigationBarWidthForRotationInCarMode> = $r7;

        $r8 = newarray (int)[4];

        r0.<com.android.server.wm.DisplayPolicy: int[] mNavigationBarFrameHeightForRotationDefault> = $r8;

        $r9 = new com.android.server.wm.DisplayPolicy$1;

        specialinvoke $r9.<com.android.server.wm.DisplayPolicy$1: void <init>(com.android.server.wm.DisplayPolicy)>(r0);

        r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.BarController$OnBarVisibilityChangedListener mNavBarVisibilityListener> = $r9;

        r0.<com.android.server.wm.DisplayPolicy: int mResettingSystemUiFlags> = 0;

        r0.<com.android.server.wm.DisplayPolicy: int mForceClearedSystemUiFlags> = 0;

        $r10 = new android.graphics.Rect;

        specialinvoke $r10.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.DisplayPolicy: android.graphics.Rect mNonDockedStackBounds> = $r10;

        $r11 = new android.graphics.Rect;

        specialinvoke $r11.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.DisplayPolicy: android.graphics.Rect mDockedStackBounds> = $r11;

        $r12 = new android.graphics.Rect;

        specialinvoke $r12.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.DisplayPolicy: android.graphics.Rect mLastNonDockedStackBounds> = $r12;

        $r13 = new android.graphics.Rect;

        specialinvoke $r13.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.DisplayPolicy: android.graphics.Rect mLastDockedStackBounds> = $r13;

        r0.<com.android.server.wm.DisplayPolicy: boolean mLastFocusIsFullscreen> = 0;

        r0.<com.android.server.wm.DisplayPolicy: boolean mLastFocusIsImmersive> = 0;

        r0.<com.android.server.wm.DisplayPolicy: int mNavBarOpacityMode> = 0;

        r0.<com.android.server.wm.DisplayPolicy: com.android.server.policy.WindowManagerPolicy$InputConsumer mInputConsumer> = null;

        $r14 = <android.graphics.Insets: android.graphics.Insets NONE>;

        r0.<com.android.server.wm.DisplayPolicy: android.graphics.Insets mForwardedInsets> = $r14;

        $r15 = new com.android.server.wm.DisplayPolicy$3;

        specialinvoke $r15.<com.android.server.wm.DisplayPolicy$3: void <init>(com.android.server.wm.DisplayPolicy)>(r0);

        r0.<com.android.server.wm.DisplayPolicy: java.lang.Runnable mClearHideNavigationFlag> = $r15;

        $r16 = new com.android.server.wm.DisplayPolicy$4;

        specialinvoke $r16.<com.android.server.wm.DisplayPolicy$4: void <init>(com.android.server.wm.DisplayPolicy)>(r0);

        r0.<com.android.server.wm.DisplayPolicy: java.lang.Runnable mHiddenNavPanic> = $r16;

        r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowManagerService mService> = r60;

        $z0 = r61.<com.android.server.wm.DisplayContent: boolean isDefaultDisplay>;

        if $z0 == 0 goto label01;

        r62 = r60.<com.android.server.wm.WindowManagerService: android.content.Context mContext>;

        goto label02;

     label01:
        $r17 = r60.<com.android.server.wm.WindowManagerService: android.content.Context mContext>;

        $r18 = virtualinvoke r61.<com.android.server.wm.DisplayContent: android.view.Display getDisplay()>();

        r62 = virtualinvoke $r17.<android.content.Context: android.content.Context createDisplayContext(android.view.Display)>($r18);

     label02:
        r0.<com.android.server.wm.DisplayPolicy: android.content.Context mContext> = r62;

        $z1 = r61.<com.android.server.wm.DisplayContent: boolean isDefaultDisplay>;

        if $z1 == 0 goto label03;

        $r59 = r60.<com.android.server.wm.WindowManagerService: com.android.server.wm.ActivityTaskManagerService mAtmService>;

        r63 = $r59.<com.android.server.wm.ActivityTaskManagerService: android.content.Context mUiContext>;

        goto label04;

     label03:
        $r19 = r60.<com.android.server.wm.WindowManagerService: com.android.server.wm.ActivityTaskManagerService mAtmService>;

        $r20 = $r19.<com.android.server.wm.ActivityTaskManagerService: android.app.ActivityThread mSystemThread>;

        $i1 = virtualinvoke r61.<com.android.server.wm.DisplayContent: int getDisplayId()>();

        r63 = virtualinvoke $r20.<android.app.ActivityThread: android.app.ContextImpl createSystemUiContext(int)>($i1);

     label04:
        r0.<com.android.server.wm.DisplayPolicy: android.content.Context mUiContext> = r63;

        r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent> = r61;

        $r21 = virtualinvoke r60.<com.android.server.wm.WindowManagerService: java.lang.Object getWindowManagerLock()>();

        r0.<com.android.server.wm.DisplayPolicy: java.lang.Object mLock> = $r21;

        i0 = virtualinvoke r61.<com.android.server.wm.DisplayContent: int getDisplayId()>();

        $r22 = new com.android.server.wm.StatusBarController;

        specialinvoke $r22.<com.android.server.wm.StatusBarController: void <init>(int)>(i0);

        r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.StatusBarController mStatusBarController> = $r22;

        $r23 = new com.android.server.wm.BarController;

        specialinvoke $r23.<com.android.server.wm.BarController: void <init>(java.lang.String,int,int,int,int,int,int,int,int)>("NavigationBar", i0, 134217728, 536870912, -2147483648, 2, 2019, 134217728, 32768);

        r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.BarController mNavigationBarController> = $r23;

        $r24 = r0.<com.android.server.wm.DisplayPolicy: android.content.Context mContext>;

        r64 = virtualinvoke $r24.<android.content.Context: android.content.res.Resources getResources()>();

        $z2 = virtualinvoke r64.<android.content.res.Resources: boolean getBoolean(int)>(17891390);

        r0.<com.android.server.wm.DisplayPolicy: boolean mCarDockEnablesAccelerometer> = $z2;

        $z3 = virtualinvoke r64.<android.content.res.Resources: boolean getBoolean(int)>(17891406);

        r0.<com.android.server.wm.DisplayPolicy: boolean mDeskDockEnablesAccelerometer> = $z3;

        $z4 = virtualinvoke r64.<android.content.res.Resources: boolean getBoolean(int)>(17891463);

        r0.<com.android.server.wm.DisplayPolicy: boolean mForceShowSystemBarsFromExternal> = $z4;

        $r25 = r0.<com.android.server.wm.DisplayPolicy: android.content.Context mContext>;

        $r26 = virtualinvoke $r25.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("accessibility");

        $r27 = (android.view.accessibility.AccessibilityManager) $r26;

        r0.<com.android.server.wm.DisplayPolicy: android.view.accessibility.AccessibilityManager mAccessibilityManager> = $r27;

        $z5 = r61.<com.android.server.wm.DisplayContent: boolean isDefaultDisplay>;

        if $z5 != 0 goto label05;

        r0.<com.android.server.wm.DisplayPolicy: boolean mAwake> = 1;

        r0.<com.android.server.wm.DisplayPolicy: boolean mScreenOnEarly> = 1;

        r0.<com.android.server.wm.DisplayPolicy: boolean mScreenOnFully> = 1;

     label05:
        $r28 = staticinvoke <com.android.server.UiThread: android.os.Handler getHandler()>();

        r65 = virtualinvoke $r28.<android.os.Handler: android.os.Looper getLooper()>();

        $r29 = new com.android.server.wm.DisplayPolicy$PolicyHandler;

        specialinvoke $r29.<com.android.server.wm.DisplayPolicy$PolicyHandler: void <init>(com.android.server.wm.DisplayPolicy,android.os.Looper)>(r0, r65);

        r0.<com.android.server.wm.DisplayPolicy: android.os.Handler mHandler> = $r29;

        $r30 = new com.android.server.wm.SystemGesturesPointerEventListener;

        $r32 = r0.<com.android.server.wm.DisplayPolicy: android.content.Context mContext>;

        $r31 = new com.android.server.wm.DisplayPolicy$2;

        specialinvoke $r31.<com.android.server.wm.DisplayPolicy$2: void <init>(com.android.server.wm.DisplayPolicy)>(r0);

        specialinvoke $r30.<com.android.server.wm.SystemGesturesPointerEventListener: void <init>(android.content.Context,android.os.Handler,com.android.server.wm.SystemGesturesPointerEventListener$Callbacks)>($r32, $r29, $r31);

        r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.SystemGesturesPointerEventListener mSystemGestures> = $r30;

        virtualinvoke r61.<com.android.server.wm.DisplayContent: void registerPointerEventListener(android.view.WindowManagerPolicyConstants$PointerEventListener)>($r30);

        $r34 = r61.<com.android.server.wm.DisplayContent: com.android.server.wm.AppTransition mAppTransition>;

        $r33 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.StatusBarController mStatusBarController>;

        $r35 = virtualinvoke $r33.<com.android.server.wm.StatusBarController: com.android.server.wm.WindowManagerInternal$AppTransitionListener getAppTransitionListener()>();

        virtualinvoke $r34.<com.android.server.wm.AppTransition: void registerListenerLocked(com.android.server.wm.WindowManagerInternal$AppTransitionListener)>($r35);

        $r36 = new com.android.server.wm.ImmersiveModeConfirmation;

        $r38 = r0.<com.android.server.wm.DisplayPolicy: android.content.Context mContext>;

        $r37 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowManagerService mService>;

        $z6 = $r37.<com.android.server.wm.WindowManagerService: boolean mVrModeEnabled>;

        specialinvoke $r36.<com.android.server.wm.ImmersiveModeConfirmation: void <init>(android.content.Context,android.os.Looper,boolean)>($r38, r65, $z6);

        r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.ImmersiveModeConfirmation mImmersiveModeConfirmation> = $r36;

        $z7 = r61.<com.android.server.wm.DisplayContent: boolean isDefaultDisplay>;

        if $z7 == 0 goto label06;

        $r57 = new com.android.internal.util.ScreenshotHelper;

        $r58 = r0.<com.android.server.wm.DisplayPolicy: android.content.Context mContext>;

        specialinvoke $r57.<com.android.internal.util.ScreenshotHelper: void <init>(android.content.Context)>($r58);

        r68 = $r57;

        goto label07;

     label06:
        r68 = null;

     label07:
        r0.<com.android.server.wm.DisplayPolicy: com.android.internal.util.ScreenshotHelper mScreenshotHelper> = r68;

        $r39 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $z8 = $r39.<com.android.server.wm.DisplayContent: boolean isDefaultDisplay>;

        if $z8 == 0 goto label10;

        r0.<com.android.server.wm.DisplayPolicy: boolean mHasStatusBar> = 1;

        $r53 = r0.<com.android.server.wm.DisplayPolicy: android.content.Context mContext>;

        $r54 = virtualinvoke $r53.<android.content.Context: android.content.res.Resources getResources()>();

        $z11 = virtualinvoke $r54.<android.content.res.Resources: boolean getBoolean(int)>(17891524);

        r0.<com.android.server.wm.DisplayPolicy: boolean mHasNavigationBar> = $z11;

        r69 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("qemu.hw.mainkeys");

        $r55 = "1";

        $z12 = virtualinvoke $r55.<java.lang.String: boolean equals(java.lang.Object)>(r69);

        if $z12 == 0 goto label08;

        r0.<com.android.server.wm.DisplayPolicy: boolean mHasNavigationBar> = 0;

        goto label09;

     label08:
        $r56 = "0";

        $z13 = virtualinvoke $r56.<java.lang.String: boolean equals(java.lang.Object)>(r69);

        if $z13 == 0 goto label09;

        r0.<com.android.server.wm.DisplayPolicy: boolean mHasNavigationBar> = 1;

     label09:
        goto label11;

     label10:
        r0.<com.android.server.wm.DisplayPolicy: boolean mHasStatusBar> = 0;

        $r40 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $z9 = virtualinvoke $r40.<com.android.server.wm.DisplayContent: boolean supportsSystemDecorations()>();

        r0.<com.android.server.wm.DisplayPolicy: boolean mHasNavigationBar> = $z9;

     label11:
        $r41 = new com.android.server.wm.RefreshRatePolicy;

        $r43 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowManagerService mService>;

        $r42 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $r44 = virtualinvoke $r42.<com.android.server.wm.DisplayContent: android.view.DisplayInfo getDisplayInfo()>();

        $r45 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowManagerService mService>;

        $r46 = $r45.<com.android.server.wm.WindowManagerService: com.android.server.wm.HighRefreshRateBlacklist mHighRefreshRateBlacklist>;

        specialinvoke $r41.<com.android.server.wm.RefreshRatePolicy: void <init>(com.android.server.wm.WindowManagerService,android.view.DisplayInfo,com.android.server.wm.HighRefreshRateBlacklist)>($r43, $r44, $r46);

        r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.RefreshRatePolicy mRefreshRatePolicy> = $r41;

        $r47 = new com.android.internal.policy.GestureNavigationSettingsObserver;

        $r49 = r0.<com.android.server.wm.DisplayPolicy: android.os.Handler mHandler>;

        $r50 = r0.<com.android.server.wm.DisplayPolicy: android.content.Context mContext>;

        $r48 = new com.android.server.wm._$$Lambda$DisplayPolicy$E7j9SKAujlVEAp0eeRWet1AUkHs;

        specialinvoke $r48.<com.android.server.wm._$$Lambda$DisplayPolicy$E7j9SKAujlVEAp0eeRWet1AUkHs: void <init>(com.android.server.wm.DisplayPolicy)>(r0);

        specialinvoke $r47.<com.android.internal.policy.GestureNavigationSettingsObserver: void <init>(android.os.Handler,android.content.Context,java.lang.Runnable)>($r49, $r50, $r48);

        r0.<com.android.server.wm.DisplayPolicy: com.android.internal.policy.GestureNavigationSettingsObserver mGestureNavigationSettingsObserver> = $r47;

        r71 = r0.<com.android.server.wm.DisplayPolicy: android.os.Handler mHandler>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r47);

        $r52 = new com.android.server.wm._$$Lambda$o8Xf30aea0t_A93AFKY5pBW0IDI;

        specialinvoke $r52.<com.android.server.wm._$$Lambda$o8Xf30aea0t_A93AFKY5pBW0IDI: void <init>(com.android.internal.policy.GestureNavigationSettingsObserver)>($r47);

        virtualinvoke r71.<android.os.Handler: boolean post(java.lang.Runnable)>($r52);

        return;
    }

    static android.view.accessibility.AccessibilityManager access$000(com.android.server.wm.DisplayPolicy)
    {
        com.android.server.wm.DisplayPolicy r0;
        android.view.accessibility.AccessibilityManager $r1;

        r0 := @parameter0: com.android.server.wm.DisplayPolicy;

        $r1 = r0.<com.android.server.wm.DisplayPolicy: android.view.accessibility.AccessibilityManager mAccessibilityManager>;

        return $r1;
    }

    static java.lang.Object access$100(com.android.server.wm.DisplayPolicy)
    {
        com.android.server.wm.DisplayPolicy r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.wm.DisplayPolicy;

        $r1 = r0.<com.android.server.wm.DisplayPolicy: java.lang.Object mLock>;

        return $r1;
    }

    static boolean access$1000(com.android.server.wm.DisplayPolicy)
    {
        com.android.server.wm.DisplayPolicy r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.wm.DisplayPolicy;

        $z0 = r0.<com.android.server.wm.DisplayPolicy: boolean mNavigationBarAlwaysShowOnSideGesture>;

        return $z0;
    }

    static com.android.server.wm.SystemGesturesPointerEventListener access$1100(com.android.server.wm.DisplayPolicy)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.SystemGesturesPointerEventListener $r1;

        r0 := @parameter0: com.android.server.wm.DisplayPolicy;

        $r1 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.SystemGesturesPointerEventListener mSystemGestures>;

        return $r1;
    }

    static com.android.server.wm.WindowManagerService access$1200(com.android.server.wm.DisplayPolicy)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.WindowManagerService $r1;

        r0 := @parameter0: com.android.server.wm.DisplayPolicy;

        $r1 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowManagerService mService>;

        return $r1;
    }

    static android.os.Handler access$1300(com.android.server.wm.DisplayPolicy)
    {
        com.android.server.wm.DisplayPolicy r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.wm.DisplayPolicy;

        $r1 = r0.<com.android.server.wm.DisplayPolicy: android.os.Handler mHandler>;

        return $r1;
    }

    static int access$1400(com.android.server.wm.DisplayPolicy)
    {
        com.android.server.wm.DisplayPolicy r0;
        int $i0;

        r0 := @parameter0: com.android.server.wm.DisplayPolicy;

        $i0 = r0.<com.android.server.wm.DisplayPolicy: int mForceClearedSystemUiFlags>;

        return $i0;
    }

    static int access$1402(com.android.server.wm.DisplayPolicy, int)
    {
        com.android.server.wm.DisplayPolicy r0;
        int i0;

        r0 := @parameter0: com.android.server.wm.DisplayPolicy;

        i0 := @parameter1: int;

        r0.<com.android.server.wm.DisplayPolicy: int mForceClearedSystemUiFlags> = i0;

        return i0;
    }

    static int access$1472(com.android.server.wm.DisplayPolicy, int)
    {
        com.android.server.wm.DisplayPolicy r0;
        int $i0, i1, i2;

        r0 := @parameter0: com.android.server.wm.DisplayPolicy;

        i1 := @parameter1: int;

        $i0 = r0.<com.android.server.wm.DisplayPolicy: int mForceClearedSystemUiFlags>;

        i2 = $i0 & i1;

        r0.<com.android.server.wm.DisplayPolicy: int mForceClearedSystemUiFlags> = i2;

        return i2;
    }

    static int access$1500(com.android.server.wm.DisplayPolicy)
    {
        com.android.server.wm.DisplayPolicy r0;
        int $i0;

        r0 := @parameter0: com.android.server.wm.DisplayPolicy;

        $i0 = r0.<com.android.server.wm.DisplayPolicy: int mResettingSystemUiFlags>;

        return $i0;
    }

    static int access$1502(com.android.server.wm.DisplayPolicy, int)
    {
        com.android.server.wm.DisplayPolicy r0;
        int i0;

        r0 := @parameter0: com.android.server.wm.DisplayPolicy;

        i0 := @parameter1: int;

        r0.<com.android.server.wm.DisplayPolicy: int mResettingSystemUiFlags> = i0;

        return i0;
    }

    static java.lang.Runnable access$1600(com.android.server.wm.DisplayPolicy)
    {
        com.android.server.wm.DisplayPolicy r0;
        java.lang.Runnable $r1;

        r0 := @parameter0: com.android.server.wm.DisplayPolicy;

        $r1 = r0.<com.android.server.wm.DisplayPolicy: java.lang.Runnable mClearHideNavigationFlag>;

        return $r1;
    }

    static long access$1702(com.android.server.wm.DisplayPolicy, long)
    {
        com.android.server.wm.DisplayPolicy r0;
        long l0;

        r0 := @parameter0: com.android.server.wm.DisplayPolicy;

        l0 := @parameter1: long;

        r0.<com.android.server.wm.DisplayPolicy: long mPendingPanicGestureUptime> = l0;

        return l0;
    }

    static boolean access$1800(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        $z0 = staticinvoke <com.android.server.wm.DisplayPolicy: boolean isNavBarEmpty(int)>(i0);

        return $z0;
    }

    static com.android.server.wm.BarController access$1900(com.android.server.wm.DisplayPolicy)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.BarController $r1;

        r0 := @parameter0: com.android.server.wm.DisplayPolicy;

        $r1 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.BarController mNavigationBarController>;

        return $r1;
    }

    static com.android.server.wm.WindowState access$200(com.android.server.wm.DisplayPolicy)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.WindowState $r1;

        r0 := @parameter0: com.android.server.wm.DisplayPolicy;

        $r1 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mStatusBar>;

        return $r1;
    }

    static com.android.server.wm.WindowState access$300(com.android.server.wm.DisplayPolicy)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.WindowState $r1;

        r0 := @parameter0: com.android.server.wm.DisplayPolicy;

        $r1 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNavigationBar>;

        return $r1;
    }

    static void access$400(com.android.server.wm.DisplayPolicy, com.android.server.wm.WindowState)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.WindowState r1;

        r0 := @parameter0: com.android.server.wm.DisplayPolicy;

        r1 := @parameter1: com.android.server.wm.WindowState;

        specialinvoke r0.<com.android.server.wm.DisplayPolicy: void requestTransientBars(com.android.server.wm.WindowState)>(r1);

        return;
    }

    static void access$500(com.android.server.wm.DisplayPolicy, com.android.server.policy.WindowManagerPolicy$InputConsumer)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.policy.WindowManagerPolicy$InputConsumer r1;

        r0 := @parameter0: com.android.server.wm.DisplayPolicy;

        r1 := @parameter1: com.android.server.policy.WindowManagerPolicy$InputConsumer;

        specialinvoke r0.<com.android.server.wm.DisplayPolicy: void disposeInputConsumer(com.android.server.policy.WindowManagerPolicy$InputConsumer)>(r1);

        return;
    }

    static void access$600(com.android.server.wm.DisplayPolicy)
    {
        com.android.server.wm.DisplayPolicy r0;

        r0 := @parameter0: com.android.server.wm.DisplayPolicy;

        specialinvoke r0.<com.android.server.wm.DisplayPolicy: void enablePointerLocation()>();

        return;
    }

    static void access$700(com.android.server.wm.DisplayPolicy)
    {
        com.android.server.wm.DisplayPolicy r0;

        r0 := @parameter0: com.android.server.wm.DisplayPolicy;

        specialinvoke r0.<com.android.server.wm.DisplayPolicy: void disablePointerLocation()>();

        return;
    }

    static int access$800(com.android.server.wm.DisplayPolicy)
    {
        com.android.server.wm.DisplayPolicy r0;
        int $i0;

        r0 := @parameter0: com.android.server.wm.DisplayPolicy;

        $i0 = r0.<com.android.server.wm.DisplayPolicy: int mNavigationBarPosition>;

        return $i0;
    }

    static com.android.server.wm.DisplayContent access$900(com.android.server.wm.DisplayPolicy)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.DisplayContent $r1;

        r0 := @parameter0: com.android.server.wm.DisplayPolicy;

        $r1 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        return $r1;
    }

    private void applyStableConstraints(int, int, android.graphics.Rect, com.android.server.wm.DisplayFrames)
    {
        com.android.server.wm.DisplayPolicy r0;
        int i0, i1, $i2, $i3;
        android.graphics.Rect r1, $r3, $r4;
        com.android.server.wm.DisplayFrames r2;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.graphics.Rect;

        r2 := @parameter3: com.android.server.wm.DisplayFrames;

        $i2 = i0 & 256;

        if $i2 != 0 goto label1;

        return;

     label1:
        $i3 = i1 & 1024;

        if $i3 == 0 goto label2;

        $r4 = r2.<com.android.server.wm.DisplayFrames: android.graphics.Rect mStableFullscreen>;

        virtualinvoke r1.<android.graphics.Rect: void intersectUnchecked(android.graphics.Rect)>($r4);

        goto label3;

     label2:
        $r3 = r2.<com.android.server.wm.DisplayFrames: android.graphics.Rect mStable>;

        virtualinvoke r1.<android.graphics.Rect: void intersectUnchecked(android.graphics.Rect)>($r3);

     label3:
        return;
    }

    private boolean canHideNavigationBar()
    {
        com.android.server.wm.DisplayPolicy r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $z0 = virtualinvoke r0.<com.android.server.wm.DisplayPolicy: boolean hasNavigationBar()>();

        return $z0;
    }

    private boolean canReceiveInput(com.android.server.wm.WindowState)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.WindowState r1;
        android.view.WindowManager$LayoutParams $r2, $r3;
        int $i0, $i1, $i2, i3;
        boolean $z0, z1, z2, z3;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 := @parameter0: com.android.server.wm.WindowState;

        $r2 = virtualinvoke r1.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams getAttrs()>();

        i3 = $r2.<android.view.WindowManager$LayoutParams: int flags>;

        z1 = 1;

        $i0 = i3 & 8;

        if $i0 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        $r3 = virtualinvoke r1.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams getAttrs()>();

        $i1 = $r3.<android.view.WindowManager$LayoutParams: int flags>;

        $i2 = $i1 & 131072;

        if $i2 == 0 goto label3;

        z3 = 1;

        goto label4;

     label3:
        z3 = 0;

     label4:
        $z0 = z2 ^ z3;

        if $z0 != 0 goto label5;

        goto label6;

     label5:
        z1 = 0;

     label6:
        return z1;
    }

    static com.android.server.wm.WindowState chooseNavigationColorWindowLw(com.android.server.wm.WindowState, com.android.server.wm.WindowState, com.android.server.wm.WindowState, int)
    {
        com.android.server.wm.WindowState r0, r1, r2, r3;
        boolean $z0, $z1, $z2, z3;
        int $i0, $i1, $i2, i3;

        r2 := @parameter0: com.android.server.wm.WindowState;

        r0 := @parameter1: com.android.server.wm.WindowState;

        r1 := @parameter2: com.android.server.wm.WindowState;

        i3 := @parameter3: int;

        if r1 == null goto label1;

        $z2 = virtualinvoke r1.<com.android.server.wm.WindowState: boolean isVisibleLw()>();

        if $z2 == 0 goto label1;

        if i3 != 4 goto label1;

        $i1 = staticinvoke <com.android.server.wm.PolicyControl: int getWindowFlags(com.android.server.wm.WindowState,android.view.WindowManager$LayoutParams)>(r1, null);

        $i2 = $i1 & -2147483648;

        if $i2 == 0 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        if r2 == null goto label4;

        if r0 != r2 goto label4;

        if z3 == 0 goto label3;

        r2 = r1;

        goto label3;

     label3:
        return r2;

     label4:
        if r0 == null goto label8;

        $z0 = virtualinvoke r0.<com.android.server.wm.WindowState: boolean isDimming()>();

        if $z0 != 0 goto label5;

        goto label8;

     label5:
        if z3 != 0 goto label6;

        return r0;

     label6:
        $i0 = staticinvoke <com.android.server.wm.PolicyControl: int getWindowFlags(com.android.server.wm.WindowState,android.view.WindowManager$LayoutParams)>(r0, null);

        $z1 = staticinvoke <android.view.WindowManager$LayoutParams: boolean mayUseInputMethod(int)>($i0);

        if $z1 == 0 goto label7;

        return r1;

     label7:
        return r0;

     label8:
        r3 = null;

        if z3 == 0 goto label9;

        r3 = r1;

     label9:
        return r3;
    }

    private void clearClearableFlagsLw()
    {
        com.android.server.wm.DisplayPolicy r0;
        int i0, i1;
        com.android.server.wm.DisplayContent $r1;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        i0 = r0.<com.android.server.wm.DisplayPolicy: int mResettingSystemUiFlags>;

        i1 = i0 | 7;

        if i1 == i0 goto label1;

        r0.<com.android.server.wm.DisplayPolicy: int mResettingSystemUiFlags> = i1;

        $r1 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        virtualinvoke $r1.<com.android.server.wm.DisplayContent: void reevaluateStatusBarVisibility()>();

     label1:
        return;
    }

    private int configureNavBarOpacity(int, boolean, boolean, boolean, boolean, boolean)
    {
        com.android.server.wm.DisplayPolicy r0;
        int i0, i1, i2;
        boolean z0, z1, z2, z3, z4, $z5;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        z3 := @parameter4: boolean;

        z4 := @parameter5: boolean;

        i1 = r0.<com.android.server.wm.DisplayPolicy: int mNavBarOpacityMode>;

        if i1 != 2 goto label2;

        if z3 == 0 goto label1;

        if z4 == 0 goto label1;

        i2 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: int setNavBarTransparentFlag(int)>(i0);

        goto label9;

     label1:
        i2 = i0;

        if z0 == 0 goto label9;

        i2 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: int setNavBarOpaqueFlag(int)>(i0);

        goto label9;

     label2:
        if i1 != 0 goto label6;

        if z0 != 0 goto label4;

        if z1 != 0 goto label4;

        if z2 == 0 goto label3;

        goto label4;

     label3:
        i2 = i0;

        if z3 == 0 goto label9;

        i2 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: int setNavBarTransparentFlag(int)>(i0);

        goto label9;

     label4:
        $z5 = r0.<com.android.server.wm.DisplayPolicy: boolean mIsFreeformWindowOverlappingWithNavBar>;

        if $z5 == 0 goto label5;

        i2 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: int setNavBarTranslucentFlag(int)>(i0);

        goto label9;

     label5:
        i2 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: int setNavBarOpaqueFlag(int)>(i0);

        goto label9;

     label6:
        i2 = i0;

        if i1 != 1 goto label9;

        if z2 == 0 goto label7;

        i2 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: int setNavBarOpaqueFlag(int)>(i0);

        goto label9;

     label7:
        if z1 == 0 goto label8;

        i2 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: int setNavBarTranslucentFlag(int)>(i0);

        goto label9;

     label8:
        i2 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: int setNavBarOpaqueFlag(int)>(i0);

     label9:
        return i2;
    }

    private void disablePointerLocation()
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.internal.widget.PointerLocationView r1, $r5;
        com.android.server.wm.DisplayContent $r2;
        android.content.Context $r3;
        java.lang.Object $r4;
        android.view.WindowManager $r6;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 = r0.<com.android.server.wm.DisplayPolicy: com.android.internal.widget.PointerLocationView mPointerLocationView>;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        virtualinvoke $r2.<com.android.server.wm.DisplayContent: void unregisterPointerEventListener(android.view.WindowManagerPolicyConstants$PointerEventListener)>(r1);

        $r3 = r0.<com.android.server.wm.DisplayPolicy: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/view/WindowManager;");

        $r6 = (android.view.WindowManager) $r4;

        $r5 = r0.<com.android.server.wm.DisplayPolicy: com.android.internal.widget.PointerLocationView mPointerLocationView>;

        interfaceinvoke $r6.<android.view.WindowManager: void removeView(android.view.View)>($r5);

        r0.<com.android.server.wm.DisplayPolicy: com.android.internal.widget.PointerLocationView mPointerLocationView> = null;

        return;
    }

    private void disposeInputConsumer(com.android.server.policy.WindowManagerPolicy$InputConsumer)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.policy.WindowManagerPolicy$InputConsumer r1;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 := @parameter0: com.android.server.policy.WindowManagerPolicy$InputConsumer;

        if r1 == null goto label1;

        interfaceinvoke r1.<com.android.server.policy.WindowManagerPolicy$InputConsumer: void dispose()>();

     label1:
        return;
    }

    private boolean drawsBarBackground(int, com.android.server.wm.WindowState, com.android.server.wm.BarController, int)
    {
        com.android.server.wm.DisplayPolicy r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        com.android.server.wm.WindowState r1;
        com.android.server.wm.BarController r2;
        android.view.WindowManager$LayoutParams $r3, $r4;
        boolean z1, z2, z3, z4;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.wm.WindowState;

        r2 := @parameter2: com.android.server.wm.BarController;

        i1 := @parameter3: int;

        z1 = virtualinvoke r2.<com.android.server.wm.BarController: boolean isTransparentAllowed(com.android.server.wm.WindowState)>(r1);

        if z1 != 0 goto label1;

        return 0;

     label1:
        if r1 != null goto label2;

        return 1;

     label2:
        $r3 = virtualinvoke r1.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams getAttrs()>();

        $i2 = $r3.<android.view.WindowManager$LayoutParams: int flags>;

        $i3 = $i2 & -2147483648;

        if $i3 == 0 goto label3;

        z2 = 1;

        goto label4;

     label3:
        z2 = 0;

     label4:
        $r4 = virtualinvoke r1.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams getAttrs()>();

        $i4 = $r4.<android.view.WindowManager$LayoutParams: int privateFlags>;

        $i5 = $i4 & 131072;

        if $i5 == 0 goto label5;

        z3 = 1;

        goto label6;

     label5:
        z3 = 0;

     label6:
        if z3 != 0 goto label7;

        z4 = 0;

        if z2 == 0 goto label8;

        z4 = 0;

        $i6 = i0 & i1;

        if $i6 != 0 goto label8;

     label7:
        z4 = 1;

     label8:
        return z4;
    }

    private boolean drawsNavigationBarBackground(int, com.android.server.wm.WindowState)
    {
        com.android.server.wm.DisplayPolicy r0;
        int i0;
        com.android.server.wm.WindowState r1;
        com.android.server.wm.BarController $r2;
        boolean $z0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.wm.WindowState;

        $r2 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.BarController mNavigationBarController>;

        $z0 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: boolean drawsBarBackground(int,com.android.server.wm.WindowState,com.android.server.wm.BarController,int)>(i0, r1, $r2, 134217728);

        return $z0;
    }

    private boolean drawsStatusBarBackground(int, com.android.server.wm.WindowState)
    {
        com.android.server.wm.DisplayPolicy r0;
        int i0;
        com.android.server.wm.WindowState r1;
        com.android.server.wm.StatusBarController $r2;
        boolean $z0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.wm.WindowState;

        $r2 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.StatusBarController mStatusBarController>;

        $z0 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: boolean drawsBarBackground(int,com.android.server.wm.WindowState,com.android.server.wm.BarController,int)>(i0, r1, $r2, 67108864);

        return $z0;
    }

    private void enablePointerLocation()
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.internal.widget.PointerLocationView $r2, $r3, $r12, $r14;
        android.content.Context $r4, $r10;
        android.view.WindowManager$LayoutParams $r5;
        boolean $z0;
        java.lang.StringBuilder $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r9;
        java.lang.Object $r11;
        android.view.WindowManager $r13;
        com.android.server.wm.DisplayContent $r15;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $r2 = r0.<com.android.server.wm.DisplayPolicy: com.android.internal.widget.PointerLocationView mPointerLocationView>;

        if $r2 == null goto label1;

        return;

     label1:
        $r3 = new com.android.internal.widget.PointerLocationView;

        $r4 = r0.<com.android.server.wm.DisplayPolicy: android.content.Context mContext>;

        specialinvoke $r3.<com.android.internal.widget.PointerLocationView: void <init>(android.content.Context)>($r4);

        r0.<com.android.server.wm.DisplayPolicy: com.android.internal.widget.PointerLocationView mPointerLocationView> = $r3;

        virtualinvoke $r3.<com.android.internal.widget.PointerLocationView: void setPrintCoords(boolean)>(0);

        $r5 = new android.view.WindowManager$LayoutParams;

        specialinvoke $r5.<android.view.WindowManager$LayoutParams: void <init>(int,int)>(-1, -1);

        $r5.<android.view.WindowManager$LayoutParams: int type> = 2015;

        $r5.<android.view.WindowManager$LayoutParams: int flags> = 280;

        virtualinvoke $r5.<android.view.WindowManager$LayoutParams: void setFitInsetsTypes(int)>(0);

        $r5.<android.view.WindowManager$LayoutParams: int layoutInDisplayCutoutMode> = 1;

        $z0 = staticinvoke <android.app.ActivityManager: boolean isHighEndGfx()>();

        if $z0 == 0 goto label2;

        $i3 = $r5.<android.view.WindowManager$LayoutParams: int flags>;

        $i4 = $i3 | 16777216;

        $r5.<android.view.WindowManager$LayoutParams: int flags> = $i4;

        $i5 = $r5.<android.view.WindowManager$LayoutParams: int privateFlags>;

        $i6 = $i5 | 2;

        $r5.<android.view.WindowManager$LayoutParams: int privateFlags> = $i6;

     label2:
        $r5.<android.view.WindowManager$LayoutParams: int format> = -3;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PointerLocation - display ");

        $i0 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: int getDisplayId()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<android.view.WindowManager$LayoutParams: void setTitle(java.lang.CharSequence)>($r9);

        $i1 = $r5.<android.view.WindowManager$LayoutParams: int inputFeatures>;

        $i2 = $i1 | 2;

        $r5.<android.view.WindowManager$LayoutParams: int inputFeatures> = $i2;

        $r10 = r0.<com.android.server.wm.DisplayPolicy: android.content.Context mContext>;

        $r11 = virtualinvoke $r10.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/view/WindowManager;");

        $r13 = (android.view.WindowManager) $r11;

        $r12 = r0.<com.android.server.wm.DisplayPolicy: com.android.internal.widget.PointerLocationView mPointerLocationView>;

        interfaceinvoke $r13.<android.view.WindowManager: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r12, $r5);

        $r15 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $r14 = r0.<com.android.server.wm.DisplayPolicy: com.android.internal.widget.PointerLocationView mPointerLocationView>;

        virtualinvoke $r15.<com.android.server.wm.DisplayContent: void registerPointerEventListener(android.view.WindowManagerPolicyConstants$PointerEventListener)>($r14);

        return;
    }

    private static void enforceSingleInsetsTypeCorrespondingToWindowType(int[])
    {
        int[] r0;
        int i0, i1, i2, i3;
        java.lang.IllegalArgumentException $r1;

        r0 := @parameter0: int[];

        i2 = 0;

        i0 = lengthof r0;

        i3 = 0;

     label1:
        if i3 >= i0 goto label5;

        i1 = r0[i3];

        if i1 == 0 goto label2;

        if i1 == 1 goto label2;

        if i1 == 2 goto label2;

        goto label3;

     label2:
        i2 = i2 + 1;

        if i2 > 1 goto label4;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Multiple InsetsTypes corresponding to Window type");

        throw $r1;

     label5:
        return;
    }

    private int getDisplayId()
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.DisplayContent $r1;
        int $i0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $r1 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $i0 = virtualinvoke $r1.<com.android.server.wm.DisplayContent: int getDisplayId()>();

        return $i0;
    }

    private static int getImpliedSysUiFlagsForLayout(android.view.WindowManager$LayoutParams)
    {
        android.view.WindowManager$LayoutParams r0;
        int $i0, $i1, $i3, $i4, $i6, $i7;
        short $s2, s5;
        boolean z0;

        r0 := @parameter0: android.view.WindowManager$LayoutParams;

        s5 = 0;

        $i0 = r0.<android.view.WindowManager$LayoutParams: int privateFlags>;

        $i1 = $i0 & 131072;

        if $i1 == 0 goto label1;

        $i3 = r0.<android.view.WindowManager$LayoutParams: int height>;

        if $i3 != -1 goto label1;

        $i4 = r0.<android.view.WindowManager$LayoutParams: int width>;

        if $i4 != -1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        $i6 = r0.<android.view.WindowManager$LayoutParams: int flags>;

        $i7 = $i6 & -2147483648;

        if $i7 != 0 goto label3;

        if z0 == 0 goto label4;

     label3:
        $s2 = 0 | 512;

        s5 = $s2 | 1024;

     label4:
        return s5;
    }

    private int getNavigationBarFrameHeight(int, int)
    {
        com.android.server.wm.DisplayPolicy r0;
        int i0, i1, $i2;
        int[] $r1;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.wm.DisplayPolicy: int[] mNavigationBarFrameHeightForRotationDefault>;

        $i2 = $r1[i0];

        return $i2;
    }

    private int getNavigationBarHeight(int, int)
    {
        com.android.server.wm.DisplayPolicy r0;
        int i0, i1, $i2;
        int[] $r1;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.wm.DisplayPolicy: int[] mNavigationBarHeightForRotationDefault>;

        $i2 = $r1[i0];

        return $i2;
    }

    private int getNavigationBarWidth(int, int)
    {
        com.android.server.wm.DisplayPolicy r0;
        int i0, i1, $i2;
        int[] $r1;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.wm.DisplayPolicy: int[] mNavigationBarWidthForRotationDefault>;

        $i2 = $r1[i0];

        return $i2;
    }

    private int getStatusBarHeight(com.android.server.wm.DisplayFrames)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.DisplayFrames r1;
        int $i0, $i1, $i2, $i3;
        int[] $r2;
        android.graphics.Rect $r3;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 := @parameter0: com.android.server.wm.DisplayFrames;

        $r2 = r0.<com.android.server.wm.DisplayPolicy: int[] mStatusBarHeightForRotation>;

        $i0 = r1.<com.android.server.wm.DisplayFrames: int mRotation>;

        $i2 = $r2[$i0];

        $r3 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mDisplayCutoutSafe>;

        $i1 = $r3.<android.graphics.Rect: int top>;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i1);

        return $i3;
    }

    private static android.util.Pair getTransientState(int, int)
    {
        int i0, i1;
        android.util.IntArray $r2, $r3;
        int[] $r4, $r5;
        android.util.Pair $r6;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = new android.util.IntArray;

        specialinvoke $r2.<android.util.IntArray: void <init>(int)>(0);

        $r3 = new android.util.IntArray;

        specialinvoke $r3.<android.util.IntArray: void <init>(int)>(0);

        staticinvoke <com.android.server.wm.DisplayPolicy: void updateTransientState(int,int,int,int,android.util.IntArray,android.util.IntArray)>(i0, i1, 67108864, 0, $r2, $r3);

        staticinvoke <com.android.server.wm.DisplayPolicy: void updateTransientState(int,int,int,int,android.util.IntArray,android.util.IntArray)>(i0, i1, 134217728, 1, $r2, $r3);

        $r4 = virtualinvoke $r2.<android.util.IntArray: int[] toArray()>();

        $r5 = virtualinvoke $r3.<android.util.IntArray: int[] toArray()>();

        $r6 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>($r4, $r5);

        return $r6;
    }

    private boolean hasStatusBarServicePermission(int, int)
    {
        com.android.server.wm.DisplayPolicy r0;
        int i0, i1, $i2;
        android.content.Context $r1;
        boolean z0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.wm.DisplayPolicy: android.content.Context mContext>;

        $i2 = virtualinvoke $r1.<android.content.Context: int checkPermission(java.lang.String,int,int)>("android.permission.STATUS_BAR_SERVICE", i0, i1);

        if $i2 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean isImmersiveMode(int)
    {
        com.android.server.wm.DisplayPolicy r0;
        int i0, $i1, $i2;
        com.android.server.wm.WindowState $r1;
        boolean $z0, z1;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNavigationBar>;

        if $r1 == null goto label1;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        $i2 = i0 & 6144;

        if $i2 == 0 goto label1;

        $z0 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: boolean canHideNavigationBar()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    private boolean isImmersiveMode(com.android.server.wm.WindowState)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.WindowState r1, r2, $r6;
        int i0;
        android.view.WindowManager$LayoutParams $r3;
        android.view.InsetsFlags $r4;
        boolean $z0, $z1, $z2, z3;
        com.android.server.wm.InsetsPolicy $r5;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 := @parameter0: com.android.server.wm.WindowState;

        $r3 = r1.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $r4 = $r3.<android.view.WindowManager$LayoutParams: android.view.InsetsFlags insetsFlags>;

        i0 = $r4.<android.view.InsetsFlags: int behavior>;

        r2 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNavigationBar>;

        z3 = 1;

        if r2 == null goto label2;

        $z0 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: boolean canHideNavigationBar()>();

        if $z0 == 0 goto label2;

        if i0 == 1 goto label1;

        if i0 != 2 goto label2;

     label1:
        $r5 = virtualinvoke r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.InsetsPolicy getInsetsPolicy()>();

        $z1 = virtualinvoke $r5.<com.android.server.wm.InsetsPolicy: boolean isHidden(int)>(1);

        if $z1 == 0 goto label2;

        $r6 = virtualinvoke r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState getNotificationShade()>();

        if r1 == $r6 goto label2;

        $z2 = virtualinvoke r1.<com.android.server.wm.WindowState: boolean isActivityTypeDream()>();

        if $z2 != 0 goto label2;

        goto label3;

     label2:
        z3 = 0;

     label3:
        return z3;
    }

    private boolean isKeyguardOccluded()
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.WindowManagerService $r1;
        com.android.server.policy.WindowManagerPolicy $r2;
        boolean $z0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $r1 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowManagerService mService>;

        $r2 = $r1.<com.android.server.wm.WindowManagerService: com.android.server.policy.WindowManagerPolicy mPolicy>;

        $z0 = interfaceinvoke $r2.<com.android.server.policy.WindowManagerPolicy: boolean isKeyguardOccluded()>();

        return $z0;
    }

    private static boolean isNavBarEmpty(int)
    {
        int i0, $i1;
        boolean z0;

        i0 := @parameter0: int;

        $i1 = i0 & 23068672;

        if $i1 != 23068672 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    static boolean isOverlappingWithNavBar(com.android.server.wm.WindowState, com.android.server.wm.WindowState)
    {
        com.android.server.wm.WindowState r0, r1;
        boolean $z0, $z1, $z2;
        com.android.server.wm.ActivityRecord $r2;
        android.graphics.Rect $r3, $r4;

        r0 := @parameter0: com.android.server.wm.WindowState;

        r1 := @parameter1: com.android.server.wm.WindowState;

        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<com.android.server.wm.WindowState: boolean isVisibleLw()>();

        if $z0 == 0 goto label2;

        $r2 = r0.<com.android.server.wm.WindowState: com.android.server.wm.ActivityRecord mActivityRecord>;

        if $r2 == null goto label2;

        $z1 = virtualinvoke r0.<com.android.server.wm.WindowState: boolean isVisibleLw()>();

        if $z1 != 0 goto label1;

        goto label2;

     label1:
        $r3 = virtualinvoke r0.<com.android.server.wm.WindowState: android.graphics.Rect getFrameLw()>();

        $r4 = virtualinvoke r1.<com.android.server.wm.WindowState: android.graphics.Rect getFrameLw()>();

        $z2 = staticinvoke <android.graphics.Rect: boolean intersects(android.graphics.Rect,android.graphics.Rect)>($r3, $r4);

        return $z2;

     label2:
        return 0;
    }

    static void lambda$addWindowLw$4(com.android.server.wm.DisplayFrames, com.android.server.wm.WindowState, android.graphics.Rect)
    {
        com.android.server.wm.DisplayFrames r0;
        com.android.server.wm.WindowState r1;
        android.graphics.Rect r2, $r3;

        r0 := @parameter0: com.android.server.wm.DisplayFrames;

        r1 := @parameter1: com.android.server.wm.WindowState;

        r2 := @parameter2: android.graphics.Rect;

        $r3 = virtualinvoke r1.<com.android.server.wm.WindowState: android.graphics.Rect getFrameLw()>();

        virtualinvoke r2.<android.graphics.Rect: void set(android.graphics.Rect)>($r3);

        return;
    }

    static boolean lambda$canToastShowWhenLocked$1(int, com.android.server.wm.WindowState)
    {
        int i0, $i1;
        com.android.server.wm.WindowState r0;
        com.android.server.wm.Session $r1;
        boolean $z0, $z1, z2;

        i0 := @parameter0: int;

        r0 := @parameter1: com.android.server.wm.WindowState;

        $r1 = r0.<com.android.server.wm.WindowState: com.android.server.wm.Session mSession>;

        $i1 = $r1.<com.android.server.wm.Session: int mPid>;

        if i0 != $i1 goto label1;

        $z0 = virtualinvoke r0.<com.android.server.wm.WindowState: boolean isVisible()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<com.android.server.wm.WindowState: boolean canShowWhenLocked()>();

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    private boolean layoutNavigationBar(com.android.server.wm.DisplayFrames, int, boolean, boolean, boolean, boolean, android.graphics.Rect)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.DisplayFrames r1;
        boolean z0, z1, z2, z3, z4, $z5, $z7, $z8, $z12, $z13, $z16, $z18, $z19;
        android.graphics.Rect r2, r3, $r6, $r7, $r8, $r11, $r12, $r13, $r17, $r19, $r21, $r22, $r26, $r28, $r30, $r31, $r35, $r37, r39, r40, r41, r42, r43, $r44, $r45, $r46, $r47, $r50, $r51;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16, i17, i18, i19;
        com.android.server.wm.WindowState $r4, $r15, $r24, $r33, $r48, $r52;
        com.android.server.wm.BarController $r5, $r9, $r10, $r14, $r16, $r18, $r20, $r23, $r25, $r27, $r29, $r32, $r34, $r36, $r38;
        com.android.server.wm.WindowFrames r49;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 := @parameter0: com.android.server.wm.DisplayFrames;

        i14 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        z3 := @parameter5: boolean;

        r2 := @parameter6: android.graphics.Rect;

        $r4 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNavigationBar>;

        if $r4 != null goto label01;

        return 0;

     label01:
        r3 = <com.android.server.wm.DisplayPolicy: android.graphics.Rect sTmpNavFrame>;

        $r5 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.BarController mNavigationBarController>;

        z4 = virtualinvoke $r5.<com.android.server.wm.BarController: boolean isTransientShowing()>();

        i0 = r1.<com.android.server.wm.DisplayFrames: int mRotation>;

        i15 = r1.<com.android.server.wm.DisplayFrames: int mDisplayHeight>;

        i1 = r1.<com.android.server.wm.DisplayFrames: int mDisplayWidth>;

        r39 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mDock>;

        i2 = virtualinvoke r0.<com.android.server.wm.DisplayPolicy: int navigationBarPosition(int,int,int)>(i1, i15, i0);

        r40 = <com.android.server.wm.DisplayPolicy: android.graphics.Rect sTmpRect>;

        $r6 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        virtualinvoke r40.<android.graphics.Rect: void set(android.graphics.Rect)>($r6);

        $r7 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mDisplayCutoutSafe>;

        virtualinvoke r40.<android.graphics.Rect: void intersectUnchecked(android.graphics.Rect)>($r7);

        if i2 != 4 goto label08;

        $i9 = r40.<android.graphics.Rect: int bottom>;

        $i10 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: int getNavigationBarFrameHeight(int,int)>(i0, i14);

        i16 = $i9 - $i10;

        $z16 = r0.<com.android.server.wm.DisplayPolicy: boolean mNavButtonForcedVisible>;

        if $z16 == 0 goto label02;

        i17 = i16;

        goto label03;

     label02:
        $i11 = r40.<android.graphics.Rect: int bottom>;

        $i12 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: int getNavigationBarHeight(int,int)>(i0, i14);

        i17 = $i11 - $i12;

     label03:
        $r30 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        $i13 = $r30.<android.graphics.Rect: int bottom>;

        virtualinvoke r3.<android.graphics.Rect: void set(int,int,int,int)>(0, i16, i1, $i13);

        r41 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mStable>;

        $r31 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mStableFullscreen>;

        $r31.<android.graphics.Rect: int bottom> = i17;

        r41.<android.graphics.Rect: int bottom> = i17;

        if z4 == 0 goto label04;

        $r38 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.BarController mNavigationBarController>;

        virtualinvoke $r38.<com.android.server.wm.BarController: boolean setBarShowingLw(boolean)>(1);

        goto label06;

     label04:
        if z0 == 0 goto label05;

        $r36 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.BarController mNavigationBarController>;

        virtualinvoke $r36.<com.android.server.wm.BarController: boolean setBarShowingLw(boolean)>(1);

        $r37 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mRestricted>;

        $r37.<android.graphics.Rect: int bottom> = i17;

        r39.<android.graphics.Rect: int bottom> = i17;

        goto label06;

     label05:
        $r32 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.BarController mNavigationBarController>;

        virtualinvoke $r32.<com.android.server.wm.BarController: boolean setBarShowingLw(boolean)>(z3);

     label06:
        if z0 == 0 goto label07;

        if z1 != 0 goto label07;

        if z2 != 0 goto label07;

        $r33 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNavigationBar>;

        $z18 = virtualinvoke $r33.<com.android.server.wm.WindowState: boolean isAnimatingLw()>();

        if $z18 != 0 goto label07;

        $r34 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.BarController mNavigationBarController>;

        $z19 = virtualinvoke $r34.<com.android.server.wm.BarController: boolean wasRecentlyTranslucent()>();

        if $z19 != 0 goto label07;

        $r35 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mSystem>;

        $r35.<android.graphics.Rect: int bottom> = i17;

     label07:
        goto label16;

     label08:
        if i2 != 2 goto label12;

        $i6 = r40.<android.graphics.Rect: int right>;

        $i7 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: int getNavigationBarWidth(int,int)>(i0, i14);

        i18 = $i6 - $i7;

        $r21 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        $i8 = $r21.<android.graphics.Rect: int right>;

        virtualinvoke r3.<android.graphics.Rect: void set(int,int,int,int)>(i18, 0, $i8, i15);

        r42 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mStable>;

        $r22 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mStableFullscreen>;

        $r22.<android.graphics.Rect: int right> = i18;

        r42.<android.graphics.Rect: int right> = i18;

        if z4 == 0 goto label09;

        $r29 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.BarController mNavigationBarController>;

        virtualinvoke $r29.<com.android.server.wm.BarController: boolean setBarShowingLw(boolean)>(1);

        goto label11;

     label09:
        if z0 == 0 goto label10;

        $r27 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.BarController mNavigationBarController>;

        virtualinvoke $r27.<com.android.server.wm.BarController: boolean setBarShowingLw(boolean)>(1);

        $r28 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mRestricted>;

        $r28.<android.graphics.Rect: int right> = i18;

        r39.<android.graphics.Rect: int right> = i18;

        goto label11;

     label10:
        $r23 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.BarController mNavigationBarController>;

        virtualinvoke $r23.<com.android.server.wm.BarController: boolean setBarShowingLw(boolean)>(z3);

     label11:
        if z0 == 0 goto label16;

        if z1 != 0 goto label16;

        if z2 != 0 goto label16;

        $r24 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNavigationBar>;

        $z12 = virtualinvoke $r24.<com.android.server.wm.WindowState: boolean isAnimatingLw()>();

        if $z12 != 0 goto label16;

        $r25 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.BarController mNavigationBarController>;

        $z13 = virtualinvoke $r25.<com.android.server.wm.BarController: boolean wasRecentlyTranslucent()>();

        if $z13 != 0 goto label16;

        $r26 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mSystem>;

        $r26.<android.graphics.Rect: int right> = i18;

        goto label16;

     label12:
        if i2 != 1 goto label16;

        $i3 = r40.<android.graphics.Rect: int left>;

        $i4 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: int getNavigationBarWidth(int,int)>(i0, i14);

        i19 = $i3 + $i4;

        $r12 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        $i5 = $r12.<android.graphics.Rect: int left>;

        virtualinvoke r3.<android.graphics.Rect: void set(int,int,int,int)>($i5, 0, i19, i15);

        r43 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mStable>;

        $r13 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mStableFullscreen>;

        $r13.<android.graphics.Rect: int left> = i19;

        r43.<android.graphics.Rect: int left> = i19;

        if z4 == 0 goto label13;

        $r20 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.BarController mNavigationBarController>;

        virtualinvoke $r20.<com.android.server.wm.BarController: boolean setBarShowingLw(boolean)>(1);

        goto label15;

     label13:
        if z0 == 0 goto label14;

        $r18 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.BarController mNavigationBarController>;

        virtualinvoke $r18.<com.android.server.wm.BarController: boolean setBarShowingLw(boolean)>(1);

        $r19 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mRestricted>;

        $r19.<android.graphics.Rect: int left> = i19;

        r39.<android.graphics.Rect: int left> = i19;

        goto label15;

     label14:
        $r14 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.BarController mNavigationBarController>;

        virtualinvoke $r14.<com.android.server.wm.BarController: boolean setBarShowingLw(boolean)>(z3);

     label15:
        if z0 == 0 goto label16;

        if z1 != 0 goto label16;

        if z2 != 0 goto label16;

        $r15 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNavigationBar>;

        $z7 = virtualinvoke $r15.<com.android.server.wm.WindowState: boolean isAnimatingLw()>();

        if $z7 != 0 goto label16;

        $r16 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.BarController mNavigationBarController>;

        $z8 = virtualinvoke $r16.<com.android.server.wm.BarController: boolean wasRecentlyTranslucent()>();

        if $z8 != 0 goto label16;

        $r17 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mSystem>;

        $r17.<android.graphics.Rect: int left> = i19;

        goto label16;

     label16:
        $r44 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mCurrent>;

        virtualinvoke $r44.<android.graphics.Rect: void set(android.graphics.Rect)>(r39);

        $r45 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mVoiceContent>;

        virtualinvoke $r45.<android.graphics.Rect: void set(android.graphics.Rect)>(r39);

        $r46 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mContent>;

        virtualinvoke $r46.<android.graphics.Rect: void set(android.graphics.Rect)>(r39);

        $r47 = <com.android.server.wm.DisplayPolicy: android.graphics.Rect sTmpRect>;

        virtualinvoke $r47.<android.graphics.Rect: void setEmpty()>();

        $r48 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNavigationBar>;

        r49 = virtualinvoke $r48.<com.android.server.wm.WindowState: com.android.server.wm.WindowFrames getLayoutingWindowFrames()>();

        $r50 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mDisplayCutoutSafe>;

        $r51 = <com.android.server.wm.DisplayPolicy: android.graphics.Rect sTmpRect>;

        virtualinvoke r49.<com.android.server.wm.WindowFrames: void setFrames(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>(r3, r3, $r50, r3, $r51, r3);

        $r52 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNavigationBar>;

        virtualinvoke $r52.<com.android.server.wm.WindowState: void computeFrame(com.android.server.wm.DisplayFrames)>(r1);

        if r2 == null goto label17;

        $r11 = r49.<com.android.server.wm.WindowFrames: android.graphics.Rect mContentFrame>;

        virtualinvoke r2.<android.graphics.Rect: void set(android.graphics.Rect)>($r11);

        goto label18;

     label17:
        r0.<com.android.server.wm.DisplayPolicy: int mNavigationBarPosition> = i2;

        $r9 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.BarController mNavigationBarController>;

        $r8 = r49.<com.android.server.wm.WindowFrames: android.graphics.Rect mContentFrame>;

        virtualinvoke $r9.<com.android.server.wm.BarController: void setContentFrame(android.graphics.Rect)>($r8);

     label18:
        $r10 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.BarController mNavigationBarController>;

        $z5 = virtualinvoke $r10.<com.android.server.wm.BarController: boolean checkHiddenLw()>();

        return $z5;
    }

    private void layoutScreenDecorWindows(com.android.server.wm.DisplayFrames, com.android.server.wm.WindowFrames)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.WindowFrames r1, r53;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i22, $i23, $i24, $i25, $i26, $i27, i28;
        android.graphics.Rect r2, $r4, $r6, $r7, $r8, $r9, $r10, $r13, $r14, $r15, $r16, $r17, $r18, r54;
        android.util.ArraySet $r3, $r5, $r11;
        boolean $z0, $z1, z2;
        java.lang.Object $r12;
        java.lang.StringBuilder $r19, $r29, $r39;
        java.lang.String $r28, $r38, $r48;
        java.lang.Throwable $r49;
        com.android.server.wm.DisplayFrames r50;
        com.android.server.wm.WindowState r52;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r50 := @parameter0: com.android.server.wm.DisplayFrames;

        r1 := @parameter1: com.android.server.wm.WindowFrames;

        $r3 = r0.<com.android.server.wm.DisplayPolicy: android.util.ArraySet mScreenDecorWindows>;

        $z0 = virtualinvoke $r3.<android.util.ArraySet: boolean isEmpty()>();

        if $z0 == 0 goto label01;

        return;

     label01:
        $r4 = <com.android.server.wm.DisplayPolicy: android.graphics.Rect sTmpRect>;

        virtualinvoke $r4.<android.graphics.Rect: void setEmpty()>();

        i0 = r50.<com.android.server.wm.DisplayFrames: int mDisplayId>;

        r2 = r50.<com.android.server.wm.DisplayFrames: android.graphics.Rect mDock>;

        i1 = r50.<com.android.server.wm.DisplayFrames: int mDisplayHeight>;

        i2 = r50.<com.android.server.wm.DisplayFrames: int mDisplayWidth>;

        $r5 = r0.<com.android.server.wm.DisplayPolicy: android.util.ArraySet mScreenDecorWindows>;

        $i3 = virtualinvoke $r5.<android.util.ArraySet: int size()>();

        i28 = $i3 - 1;

     label02:
        if i28 < 0 goto label19;

        $r11 = r0.<com.android.server.wm.DisplayPolicy: android.util.ArraySet mScreenDecorWindows>;

        $r12 = virtualinvoke $r11.<android.util.ArraySet: java.lang.Object valueAt(int)>(i28);

        r52 = (com.android.server.wm.WindowState) $r12;

        $i4 = virtualinvoke r52.<com.android.server.wm.WindowState: int getDisplayId()>();

        if $i4 != i0 goto label18;

        $z1 = virtualinvoke r52.<com.android.server.wm.WindowState: boolean isVisibleLw()>();

        if $z1 != 0 goto label03;

        goto label18;

     label03:
        if r1 == null goto label04;

        z2 = 1;

        goto label05;

     label04:
        z2 = 0;

     label05:
        if z2 == 0 goto label06;

        virtualinvoke r52.<com.android.server.wm.WindowState: void setSimulatedWindowFrames(com.android.server.wm.WindowFrames)>(r1);

     label06:
        r53 = virtualinvoke r52.<com.android.server.wm.WindowState: com.android.server.wm.WindowFrames getLayoutingWindowFrames()>();

        $r18 = r50.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        $r17 = r50.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        $r16 = r50.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        $r15 = r50.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        $r14 = <com.android.server.wm.DisplayPolicy: android.graphics.Rect sTmpRect>;

        $r13 = r50.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        virtualinvoke r53.<com.android.server.wm.WindowFrames: void setFrames(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>($r18, $r17, $r16, $r15, $r14, $r13);

     label07:
        virtualinvoke r52.<com.android.server.wm.WindowState: void computeFrame(com.android.server.wm.DisplayFrames)>(r50);

     label08:
        if z2 == 0 goto label09;

        virtualinvoke r52.<com.android.server.wm.WindowState: void setSimulatedWindowFrames(com.android.server.wm.WindowFrames)>(null);

     label09:
        r54 = r53.<com.android.server.wm.WindowFrames: android.graphics.Rect mFrame>;

        $i5 = r54.<android.graphics.Rect: int left>;

        if $i5 > 0 goto label12;

        $i18 = r54.<android.graphics.Rect: int top>;

        if $i18 > 0 goto label12;

        $i19 = r54.<android.graphics.Rect: int bottom>;

        if $i19 < i1 goto label10;

        $i26 = r54.<android.graphics.Rect: int right>;

        $i25 = r2.<android.graphics.Rect: int left>;

        $i27 = staticinvoke <java.lang.Math: int max(int,int)>($i26, $i25);

        r2.<android.graphics.Rect: int left> = $i27;

        goto label18;

     label10:
        $i20 = r54.<android.graphics.Rect: int right>;

        if $i20 < i2 goto label11;

        $i23 = r54.<android.graphics.Rect: int bottom>;

        $i22 = r2.<android.graphics.Rect: int top>;

        $i24 = staticinvoke <java.lang.Math: int max(int,int)>($i23, $i22);

        r2.<android.graphics.Rect: int top> = $i24;

        goto label18;

     label11:
        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("layoutScreenDecorWindows: Ignoring decor win=");

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r52);

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not docked on left or top of display. frame=");

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r54);

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" displayWidth=");

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" displayHeight=");

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r48 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", $r48);

        goto label18;

     label12:
        $i6 = r54.<android.graphics.Rect: int right>;

        if $i6 < i2 goto label15;

        $i8 = r54.<android.graphics.Rect: int bottom>;

        if $i8 < i1 goto label15;

        $i9 = r54.<android.graphics.Rect: int top>;

        if $i9 > 0 goto label13;

        $i16 = r54.<android.graphics.Rect: int left>;

        $i15 = r2.<android.graphics.Rect: int right>;

        $i17 = staticinvoke <java.lang.Math: int min(int,int)>($i16, $i15);

        r2.<android.graphics.Rect: int right> = $i17;

        goto label18;

     label13:
        $i10 = r54.<android.graphics.Rect: int left>;

        if $i10 > 0 goto label14;

        $i13 = r54.<android.graphics.Rect: int top>;

        $i12 = r2.<android.graphics.Rect: int bottom>;

        $i14 = staticinvoke <java.lang.Math: int min(int,int)>($i13, $i12);

        r2.<android.graphics.Rect: int bottom> = $i14;

        goto label18;

     label14:
        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("layoutScreenDecorWindows: Ignoring decor win=");

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r52);

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not docked on right or bottom of display. frame=");

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r54);

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" displayWidth=");

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" displayHeight=");

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r38 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", $r38);

        goto label18;

     label15:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("layoutScreenDecorWindows: Ignoring decor win=");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r52);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not docked on one of the sides of the display. frame=");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r54);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" displayWidth=");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" displayHeight=");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r28 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", $r28);

        goto label18;

     label16:
        $r49 := @caughtexception;

        if z2 == 0 goto label17;

        virtualinvoke r52.<com.android.server.wm.WindowState: void setSimulatedWindowFrames(com.android.server.wm.WindowFrames)>(null);

     label17:
        throw $r49;

     label18:
        i28 = i28 + -1;

        goto label02;

     label19:
        $r6 = r50.<com.android.server.wm.DisplayFrames: android.graphics.Rect mRestricted>;

        virtualinvoke $r6.<android.graphics.Rect: void set(android.graphics.Rect)>(r2);

        $r7 = r50.<com.android.server.wm.DisplayFrames: android.graphics.Rect mCurrent>;

        virtualinvoke $r7.<android.graphics.Rect: void set(android.graphics.Rect)>(r2);

        $r8 = r50.<com.android.server.wm.DisplayFrames: android.graphics.Rect mVoiceContent>;

        virtualinvoke $r8.<android.graphics.Rect: void set(android.graphics.Rect)>(r2);

        $r9 = r50.<com.android.server.wm.DisplayFrames: android.graphics.Rect mSystem>;

        virtualinvoke $r9.<android.graphics.Rect: void set(android.graphics.Rect)>(r2);

        $r10 = r50.<com.android.server.wm.DisplayFrames: android.graphics.Rect mContent>;

        virtualinvoke $r10.<android.graphics.Rect: void set(android.graphics.Rect)>(r2);

        return;

        catch java.lang.Throwable from label07 to label08 with label16;
    }

    private boolean layoutStatusBar(com.android.server.wm.DisplayFrames, int, android.graphics.Rect)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.DisplayFrames r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        android.graphics.Rect $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r28, $r29, $r30, $r31, $r34, $r35, $r38, r39, r42;
        com.android.server.wm.WindowState $r3, $r10, $r27, $r33, r40;
        int[] $r12;
        com.android.server.wm.StatusBarController $r26, $r32, $r43;
        boolean $z1, $z2, $z3, $z4, z5, z6, $z7;
        com.android.server.wm.DisplayContent $r36;
        com.android.server.wm.InsetsPolicy $r37;
        com.android.server.wm.WindowFrames r41;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 := @parameter0: com.android.server.wm.DisplayFrames;

        i0 := @parameter1: int;

        r39 := @parameter2: android.graphics.Rect;

        r40 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mStatusBar>;

        z5 = 0;

        if r40 != null goto label1;

        return 0;

     label1:
        $r2 = <com.android.server.wm.DisplayPolicy: android.graphics.Rect sTmpRect>;

        virtualinvoke $r2.<android.graphics.Rect: void setEmpty()>();

        $r3 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mStatusBar>;

        r41 = virtualinvoke $r3.<com.android.server.wm.WindowState: com.android.server.wm.WindowFrames getLayoutingWindowFrames()>();

        $r9 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        $r8 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        $r7 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mStable>;

        $r6 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mStable>;

        $r5 = <com.android.server.wm.DisplayPolicy: android.graphics.Rect sTmpRect>;

        $r4 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mStable>;

        virtualinvoke r41.<com.android.server.wm.WindowFrames: void setFrames(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>($r9, $r8, $r7, $r6, $r5, $r4);

        $r10 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mStatusBar>;

        virtualinvoke $r10.<com.android.server.wm.WindowState: void computeFrame(com.android.server.wm.DisplayFrames)>(r1);

        $r13 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mStable>;

        $r11 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        $i3 = $r11.<android.graphics.Rect: int top>;

        $r12 = r0.<com.android.server.wm.DisplayPolicy: int[] mStatusBarHeightForRotation>;

        $i1 = r1.<com.android.server.wm.DisplayFrames: int mRotation>;

        $i2 = $r12[$i1];

        $i4 = $i3 + $i2;

        $r13.<android.graphics.Rect: int top> = $i4;

        $r16 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mStable>;

        $r14 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mStable>;

        $i6 = $r14.<android.graphics.Rect: int top>;

        $r15 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mDisplayCutoutSafe>;

        $i5 = $r15.<android.graphics.Rect: int top>;

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>($i6, $i5);

        $r16.<android.graphics.Rect: int top> = $i7;

        $r18 = <com.android.server.wm.DisplayPolicy: android.graphics.Rect sTmpRect>;

        $r17 = r41.<com.android.server.wm.WindowFrames: android.graphics.Rect mContentFrame>;

        virtualinvoke $r18.<android.graphics.Rect: void set(android.graphics.Rect)>($r17);

        $r20 = <com.android.server.wm.DisplayPolicy: android.graphics.Rect sTmpRect>;

        $r19 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mDisplayCutoutSafe>;

        virtualinvoke $r20.<android.graphics.Rect: boolean intersect(android.graphics.Rect)>($r19);

        $r22 = <com.android.server.wm.DisplayPolicy: android.graphics.Rect sTmpRect>;

        $r21 = r41.<com.android.server.wm.WindowFrames: android.graphics.Rect mContentFrame>;

        $i8 = $r21.<android.graphics.Rect: int top>;

        $r22.<android.graphics.Rect: int top> = $i8;

        $r24 = <com.android.server.wm.DisplayPolicy: android.graphics.Rect sTmpRect>;

        $r23 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mStable>;

        $i9 = $r23.<android.graphics.Rect: int top>;

        $r24.<android.graphics.Rect: int bottom> = $i9;

        if r39 == null goto label2;

        $r38 = <com.android.server.wm.DisplayPolicy: android.graphics.Rect sTmpRect>;

        virtualinvoke r39.<android.graphics.Rect: void set(android.graphics.Rect)>($r38);

        goto label3;

     label2:
        $r26 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.StatusBarController mStatusBarController>;

        $r25 = <com.android.server.wm.DisplayPolicy: android.graphics.Rect sTmpRect>;

        virtualinvoke $r26.<com.android.server.wm.StatusBarController: void setContentFrame(android.graphics.Rect)>($r25);

     label3:
        $i10 = 67108864 & i0;

        if $i10 != 0 goto label5;

        $r36 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $r37 = virtualinvoke $r36.<com.android.server.wm.DisplayContent: com.android.server.wm.InsetsPolicy getInsetsPolicy()>();

        $z4 = virtualinvoke $r37.<com.android.server.wm.InsetsPolicy: boolean isTransient(int)>(0);

        if $z4 == 0 goto label4;

        goto label5;

     label4:
        z6 = 0;

        goto label6;

     label5:
        z6 = 1;

     label6:
        $i13 = 1073741832 & i0;

        if $i13 == 0 goto label7;

        z5 = 1;

     label7:
        $r27 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mStatusBar>;

        $z1 = virtualinvoke $r27.<com.android.server.wm.WindowState: boolean isVisibleLw()>();

        if $z1 == 0 goto label8;

        if z6 != 0 goto label8;

        r42 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mDock>;

        $r28 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mStable>;

        $i11 = $r28.<android.graphics.Rect: int top>;

        r42.<android.graphics.Rect: int top> = $i11;

        $r29 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mContent>;

        virtualinvoke $r29.<android.graphics.Rect: void set(android.graphics.Rect)>(r42);

        $r30 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mVoiceContent>;

        virtualinvoke $r30.<android.graphics.Rect: void set(android.graphics.Rect)>(r42);

        $r31 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mCurrent>;

        virtualinvoke $r31.<android.graphics.Rect: void set(android.graphics.Rect)>(r42);

        if z5 != 0 goto label8;

        $r32 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.StatusBarController mStatusBarController>;

        $z2 = virtualinvoke $r32.<com.android.server.wm.StatusBarController: boolean wasRecentlyTranslucent()>();

        if $z2 != 0 goto label8;

        $r33 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mStatusBar>;

        $z3 = virtualinvoke $r33.<com.android.server.wm.WindowState: boolean isAnimatingLw()>();

        if $z3 != 0 goto label8;

        $r35 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mSystem>;

        $r34 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mStable>;

        $i12 = $r34.<android.graphics.Rect: int top>;

        $r35.<android.graphics.Rect: int top> = $i12;

     label8:
        $r43 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.StatusBarController mStatusBarController>;

        $z7 = virtualinvoke $r43.<com.android.server.wm.StatusBarController: boolean checkHiddenLw()>();

        return $z7;
    }

    private void layoutWallpaper(com.android.server.wm.DisplayFrames, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.DisplayFrames r1;
        android.graphics.Rect r2, r3, r4, $r5, $r6, $r7;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 := @parameter0: com.android.server.wm.DisplayFrames;

        r2 := @parameter1: android.graphics.Rect;

        r3 := @parameter2: android.graphics.Rect;

        r4 := @parameter3: android.graphics.Rect;

        $r5 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        virtualinvoke r3.<android.graphics.Rect: void set(android.graphics.Rect)>($r5);

        $r6 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        virtualinvoke r2.<android.graphics.Rect: void set(android.graphics.Rect)>($r6);

        $r7 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        virtualinvoke r4.<android.graphics.Rect: void set(android.graphics.Rect)>($r7);

        return;
    }

    private void offsetInputMethodWindowLw(com.android.server.wm.WindowState, com.android.server.wm.DisplayFrames)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.WindowState r1;
        com.android.server.wm.DisplayFrames r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20, i21, i22, i23;
        android.graphics.Rect $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r16, $r17, $r18;
        com.android.server.wm.WindowManagerService $r14;
        com.android.server.policy.WindowManagerPolicy $r15;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 := @parameter0: com.android.server.wm.WindowState;

        r2 := @parameter1: com.android.server.wm.DisplayFrames;

        i19 = r2.<com.android.server.wm.DisplayFrames: int mRotation>;

        $i2 = r2.<com.android.server.wm.DisplayFrames: int mDisplayWidth>;

        $i1 = r2.<com.android.server.wm.DisplayFrames: int mDisplayHeight>;

        i0 = virtualinvoke r0.<com.android.server.wm.DisplayPolicy: int navigationBarPosition(int,int,int)>($i2, $i1, i19);

        $r3 = virtualinvoke r1.<com.android.server.wm.WindowState: android.graphics.Rect getDisplayFrameLw()>();

        $i3 = $r3.<android.graphics.Rect: int top>;

        $r4 = virtualinvoke r1.<com.android.server.wm.WindowState: android.graphics.Rect getContentFrameLw()>();

        $i4 = $r4.<android.graphics.Rect: int top>;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i4);

        $r5 = virtualinvoke r1.<com.android.server.wm.WindowState: android.graphics.Rect getGivenContentInsetsLw()>();

        $i6 = $r5.<android.graphics.Rect: int top>;

        i20 = $i5 + $i6;

        $r7 = r2.<com.android.server.wm.DisplayFrames: android.graphics.Rect mContent>;

        $r6 = r2.<com.android.server.wm.DisplayFrames: android.graphics.Rect mContent>;

        $i7 = $r6.<android.graphics.Rect: int bottom>;

        $i8 = staticinvoke <java.lang.Math: int min(int,int)>($i7, i20);

        $r7.<android.graphics.Rect: int bottom> = $i8;

        if i0 != 4 goto label1;

        $r14 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowManagerService mService>;

        $r15 = $r14.<com.android.server.wm.WindowManagerService: com.android.server.policy.WindowManagerPolicy mPolicy>;

        $i14 = interfaceinvoke $r15.<com.android.server.policy.WindowManagerPolicy: int getUiMode()>();

        i21 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: int getNavigationBarFrameHeight(int,int)>(i19, $i14);

        $r18 = r2.<com.android.server.wm.DisplayFrames: android.graphics.Rect mContent>;

        $r16 = r2.<com.android.server.wm.DisplayFrames: android.graphics.Rect mContent>;

        $i17 = $r16.<android.graphics.Rect: int bottom>;

        $r17 = r2.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        $i15 = $r17.<android.graphics.Rect: int bottom>;

        $i16 = $i15 - i21;

        $i18 = staticinvoke <java.lang.Math: int min(int,int)>($i17, $i16);

        $r18.<android.graphics.Rect: int bottom> = $i18;

     label1:
        $r9 = r2.<com.android.server.wm.DisplayFrames: android.graphics.Rect mVoiceContent>;

        $r8 = r2.<com.android.server.wm.DisplayFrames: android.graphics.Rect mVoiceContent>;

        $i9 = $r8.<android.graphics.Rect: int bottom>;

        $i10 = staticinvoke <java.lang.Math: int min(int,int)>($i9, i20);

        $r9.<android.graphics.Rect: int bottom> = $i10;

        $r10 = virtualinvoke r1.<com.android.server.wm.WindowState: android.graphics.Rect getVisibleFrameLw()>();

        i22 = $r10.<android.graphics.Rect: int top>;

        $r11 = virtualinvoke r1.<com.android.server.wm.WindowState: android.graphics.Rect getGivenVisibleInsetsLw()>();

        i23 = $r11.<android.graphics.Rect: int top>;

        $r13 = r2.<com.android.server.wm.DisplayFrames: android.graphics.Rect mCurrent>;

        $r12 = r2.<com.android.server.wm.DisplayFrames: android.graphics.Rect mCurrent>;

        $i12 = $r12.<android.graphics.Rect: int bottom>;

        $i11 = i22 + i23;

        $i13 = staticinvoke <java.lang.Math: int min(int,int)>($i12, $i11);

        $r13.<android.graphics.Rect: int bottom> = $i13;

        return;
    }

    private void offsetVoiceInputWindowLw(com.android.server.wm.WindowState, com.android.server.wm.DisplayFrames)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.WindowState r1;
        com.android.server.wm.DisplayFrames r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        android.graphics.Rect $r3, $r4, $r5, $r6, $r7;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 := @parameter0: com.android.server.wm.WindowState;

        r2 := @parameter1: com.android.server.wm.DisplayFrames;

        $r3 = virtualinvoke r1.<com.android.server.wm.WindowState: android.graphics.Rect getDisplayFrameLw()>();

        $i2 = $r3.<android.graphics.Rect: int top>;

        $r4 = virtualinvoke r1.<com.android.server.wm.WindowState: android.graphics.Rect getContentFrameLw()>();

        $i3 = $r4.<android.graphics.Rect: int top>;

        i0 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i3);

        $r5 = virtualinvoke r1.<com.android.server.wm.WindowState: android.graphics.Rect getGivenContentInsetsLw()>();

        i1 = $r5.<android.graphics.Rect: int top>;

        $r7 = r2.<com.android.server.wm.DisplayFrames: android.graphics.Rect mVoiceContent>;

        $r6 = r2.<com.android.server.wm.DisplayFrames: android.graphics.Rect mVoiceContent>;

        $i5 = $r6.<android.graphics.Rect: int bottom>;

        $i4 = i0 + i1;

        $i6 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i4);

        $r7.<android.graphics.Rect: int bottom> = $i6;

        return;
    }

    private void postAdjustDisplayFrames(com.android.server.wm.DisplayFrames)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.DisplayFrames r1;
        android.graphics.Rect $r2, $r3, $r5, $r7, $r8, $r9, $r10;
        int $i0, $i1, $i2, $i3, $i4;
        android.graphics.Insets $r4, $r6;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 := @parameter0: com.android.server.wm.DisplayFrames;

        $r2 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mDisplayCutoutSafe>;

        $i1 = $r2.<android.graphics.Rect: int top>;

        $r3 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        $i0 = $r3.<android.graphics.Rect: int top>;

        if $i1 <= $i0 goto label1;

        $r10 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mDisplayCutoutSafe>;

        $r8 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mDisplayCutoutSafe>;

        $i3 = $r8.<android.graphics.Rect: int top>;

        $r9 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mStable>;

        $i2 = $r9.<android.graphics.Rect: int top>;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i2);

        $r10.<android.graphics.Rect: int top> = $i4;

     label1:
        $r5 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mCurrent>;

        $r4 = r0.<com.android.server.wm.DisplayPolicy: android.graphics.Insets mForwardedInsets>;

        virtualinvoke $r5.<android.graphics.Rect: void inset(android.graphics.Insets)>($r4);

        $r7 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mContent>;

        $r6 = r0.<com.android.server.wm.DisplayPolicy: android.graphics.Insets mForwardedInsets>;

        virtualinvoke $r7.<android.graphics.Rect: void inset(android.graphics.Insets)>($r6);

        return;
    }

    private void requestTransientBars(com.android.server.wm.WindowState)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.WindowState r1, $r8, $r9, $r10;
        boolean z0, $z1, $z2, $z3, $z4, $z5, z6;
        com.android.server.wm.WindowManagerService $r2;
        com.android.server.policy.WindowManagerPolicy $r3;
        com.android.server.wm.StatusBarController $r4, $r7;
        com.android.server.wm.BarController $r5, $r6;
        int $i1, $i2, $i3, i4, i5, i6;
        com.android.server.wm.DisplayContent $r11;
        com.android.server.wm.InsetsPolicy $r12, $r15;
        int[] $r13;
        android.util.IntArray $r14;
        com.android.server.wm.InsetsSourceProvider r16;
        com.android.server.wm.InsetsControlTarget r17;
        com.android.server.wm.ImmersiveModeConfirmation $r18;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 := @parameter0: com.android.server.wm.WindowState;

        $r2 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowManagerService mService>;

        $r3 = $r2.<com.android.server.wm.WindowManagerService: com.android.server.policy.WindowManagerPolicy mPolicy>;

        $z1 = interfaceinvoke $r3.<com.android.server.policy.WindowManagerPolicy: boolean isUserSetupComplete()>();

        if $z1 != 0 goto label01;

        return;

     label01:
        i4 = <android.view.ViewRootImpl: int sNewInsetsMode>;

        z6 = 1;

        if i4 != 2 goto label09;

        r16 = virtualinvoke r1.<com.android.server.wm.WindowState: com.android.server.wm.InsetsSourceProvider getControllableInsetProvider()>();

        if r16 == null goto label02;

        r17 = virtualinvoke r16.<com.android.server.wm.InsetsSourceProvider: com.android.server.wm.InsetsControlTarget getControlTarget()>();

        goto label03;

     label02:
        r17 = null;

     label03:
        if r17 == null goto label08;

        $r9 = virtualinvoke r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState getNotificationShade()>();

        if r17 != $r9 goto label04;

        goto label08;

     label04:
        $r10 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNavigationBar>;

        if r1 != $r10 goto label05;

        $r15 = virtualinvoke r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.InsetsPolicy getInsetsPolicy()>();

        $z5 = virtualinvoke $r15.<com.android.server.wm.InsetsPolicy: boolean isHidden(int)>(1);

        if $z5 != 0 goto label05;

        $i3 = staticinvoke <android.view.WindowInsets$Type: int navigationBars()>();

        interfaceinvoke r17.<com.android.server.wm.InsetsControlTarget: void showInsets(int,boolean)>($i3, 0);

        return;

     label05:
        i5 = staticinvoke <android.view.WindowInsets$Type: int systemBars()>();

        i6 = i5;

        $z4 = interfaceinvoke r17.<com.android.server.wm.InsetsControlTarget: boolean canShowTransient()>();

        if $z4 == 0 goto label06;

        $r11 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $r12 = virtualinvoke $r11.<com.android.server.wm.DisplayContent: com.android.server.wm.InsetsPolicy getInsetsPolicy()>();

        $r13 = newarray (int)[2];

        $r13[0] = 0;

        $r13[1] = 1;

        $r14 = staticinvoke <android.util.IntArray: android.util.IntArray wrap(int[])>($r13);

        $i2 = virtualinvoke $r12.<com.android.server.wm.InsetsPolicy: int showTransient(android.util.IntArray)>($r14);

        i6 = i5 & $i2;

     label06:
        if i6 == 0 goto label07;

        interfaceinvoke r17.<com.android.server.wm.InsetsControlTarget: void showInsets(int,boolean)>(i6, 0);

     label07:
        goto label16;

     label08:
        return;

     label09:
        $r4 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.StatusBarController mStatusBarController>;

        z0 = virtualinvoke $r4.<com.android.server.wm.StatusBarController: boolean checkShowTransientBarLw()>();

        $r5 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.BarController mNavigationBarController>;

        $z2 = virtualinvoke $r5.<com.android.server.wm.BarController: boolean checkShowTransientBarLw()>();

        if $z2 == 0 goto label10;

        $i1 = r0.<com.android.server.wm.DisplayPolicy: int mLastSystemUiFlags>;

        $z3 = staticinvoke <com.android.server.wm.DisplayPolicy: boolean isNavBarEmpty(int)>($i1);

        if $z3 != 0 goto label10;

        goto label11;

     label10:
        z6 = 0;

     label11:
        if z0 != 0 goto label12;

        if z6 == 0 goto label16;

     label12:
        if z6 != 0 goto label13;

        $r8 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNavigationBar>;

        if r1 != $r8 goto label13;

        return;

     label13:
        if z0 == 0 goto label14;

        $r7 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.StatusBarController mStatusBarController>;

        virtualinvoke $r7.<com.android.server.wm.StatusBarController: void showTransient()>();

     label14:
        if z6 == 0 goto label15;

        $r6 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.BarController mNavigationBarController>;

        virtualinvoke $r6.<com.android.server.wm.BarController: void showTransient()>();

     label15:
        virtualinvoke r0.<com.android.server.wm.DisplayPolicy: int updateSystemUiVisibilityLw()>();

     label16:
        $r18 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.ImmersiveModeConfirmation mImmersiveModeConfirmation>;

        virtualinvoke $r18.<com.android.server.wm.ImmersiveModeConfirmation: void confirmCurrentPrompt()>();

        return;
    }

    private void setAttachedWindowFrames(com.android.server.wm.WindowState, int, int, com.android.server.wm.WindowState, boolean, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect, com.android.server.wm.DisplayFrames)
    {
        com.android.server.wm.DisplayPolicy r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        com.android.server.wm.WindowState r1, r16;
        boolean z0, $z1, $z2, $z3, $z4, $z6;
        android.graphics.Rect r2, r3, r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, r17, r18, r19, r20;
        com.android.server.wm.DisplayFrames r4;
        android.view.WindowManager$LayoutParams r6;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r16 := @parameter0: com.android.server.wm.WindowState;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: com.android.server.wm.WindowState;

        z0 := @parameter4: boolean;

        r2 := @parameter5: android.graphics.Rect;

        r17 := @parameter6: android.graphics.Rect;

        r18 := @parameter7: android.graphics.Rect;

        r3 := @parameter8: android.graphics.Rect;

        r4 := @parameter9: com.android.server.wm.DisplayFrames;

        $z1 = virtualinvoke r16.<com.android.server.wm.WindowState: boolean isInputMethodTarget()>();

        if $z1 != 0 goto label01;

        $z6 = virtualinvoke r1.<com.android.server.wm.WindowState: boolean isInputMethodTarget()>();

        if $z6 == 0 goto label01;

        $r13 = r4.<com.android.server.wm.DisplayFrames: android.graphics.Rect mDock>;

        virtualinvoke r3.<android.graphics.Rect: void set(android.graphics.Rect)>($r13);

        $r14 = r4.<com.android.server.wm.DisplayFrames: android.graphics.Rect mDock>;

        virtualinvoke r18.<android.graphics.Rect: void set(android.graphics.Rect)>($r14);

        $r15 = r4.<com.android.server.wm.DisplayFrames: android.graphics.Rect mDock>;

        virtualinvoke r17.<android.graphics.Rect: void set(android.graphics.Rect)>($r15);

        goto label10;

     label01:
        r5 = virtualinvoke r1.<com.android.server.wm.WindowState: android.graphics.Rect getDisplayFrameLw()>();

        r6 = r1.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        r19 = r5;

        $i2 = r6.<android.view.WindowManager$LayoutParams: int privateFlags>;

        $i3 = $i2 & 131072;

        if $i3 == 0 goto label02;

        r19 = r5;

        $i5 = r6.<android.view.WindowManager$LayoutParams: int flags>;

        $i6 = $i5 & -2147483648;

        if $i6 != 0 goto label02;

        r19 = r5;

        $i7 = r6.<android.view.WindowManager$LayoutParams: int systemUiVisibility>;

        $i8 = $i7 & 512;

        if $i8 != 0 goto label02;

        $r11 = new android.graphics.Rect;

        specialinvoke $r11.<android.graphics.Rect: void <init>(android.graphics.Rect)>(r5);

        r19 = $r11;

        $r12 = r4.<com.android.server.wm.DisplayFrames: android.graphics.Rect mRestricted>;

        virtualinvoke $r11.<android.graphics.Rect: boolean intersect(android.graphics.Rect)>($r12);

     label02:
        if i1 == 16 goto label05;

        $i4 = 1073741824 & i0;

        if $i4 == 0 goto label03;

        r20 = virtualinvoke r1.<com.android.server.wm.WindowState: android.graphics.Rect getContentFrameLw()>();

        goto label04;

     label03:
        r20 = r19;

     label04:
        virtualinvoke r18.<android.graphics.Rect: void set(android.graphics.Rect)>(r20);

        goto label08;

     label05:
        $r7 = virtualinvoke r1.<com.android.server.wm.WindowState: android.graphics.Rect getContentFrameLw()>();

        virtualinvoke r18.<android.graphics.Rect: void set(android.graphics.Rect)>($r7);

        $z2 = virtualinvoke r1.<com.android.server.wm.WindowState: boolean isVoiceInteraction()>();

        if $z2 == 0 goto label06;

        $r10 = r4.<com.android.server.wm.DisplayFrames: android.graphics.Rect mVoiceContent>;

        virtualinvoke r18.<android.graphics.Rect: void intersectUnchecked(android.graphics.Rect)>($r10);

        goto label08;

     label06:
        $z3 = virtualinvoke r16.<com.android.server.wm.WindowState: boolean isInputMethodTarget()>();

        if $z3 != 0 goto label07;

        $z4 = virtualinvoke r1.<com.android.server.wm.WindowState: boolean isInputMethodTarget()>();

        if $z4 == 0 goto label08;

     label07:
        $r8 = r4.<com.android.server.wm.DisplayFrames: android.graphics.Rect mContent>;

        virtualinvoke r18.<android.graphics.Rect: void intersectUnchecked(android.graphics.Rect)>($r8);

     label08:
        if z0 == 0 goto label09;

        r18 = r19;

        goto label09;

     label09:
        virtualinvoke r17.<android.graphics.Rect: void set(android.graphics.Rect)>(r18);

        $r9 = virtualinvoke r1.<com.android.server.wm.WindowState: android.graphics.Rect getVisibleFrameLw()>();

        virtualinvoke r3.<android.graphics.Rect: void set(android.graphics.Rect)>($r9);

     label10:
        $i9 = i0 & 256;

        if $i9 != 0 goto label11;

        r17 = virtualinvoke r1.<com.android.server.wm.WindowState: android.graphics.Rect getFrameLw()>();

        goto label11;

     label11:
        virtualinvoke r2.<android.graphics.Rect: void set(android.graphics.Rect)>(r17);

        return;
    }

    private int setNavBarOpaqueFlag(int)
    {
        com.android.server.wm.DisplayPolicy r0;
        int i0, $i1;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        i0 := @parameter0: int;

        $i1 = 2147450879 & i0;

        return $i1;
    }

    private int setNavBarTranslucentFlag(int)
    {
        com.android.server.wm.DisplayPolicy r0;
        int i0, $i1, $i2;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        i0 := @parameter0: int;

        $i1 = i0 & -32769;

        $i2 = -2147483648 | $i1;

        return $i2;
    }

    private int setNavBarTransparentFlag(int)
    {
        com.android.server.wm.DisplayPolicy r0;
        int i0, $i1, $i2;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        i0 := @parameter0: int;

        $i1 = i0 & 2147483647;

        $i2 = 32768 | $i1;

        return $i2;
    }

    private void simulateLayoutDecorWindow(com.android.server.wm.WindowState, com.android.server.wm.DisplayFrames, android.view.InsetsState, com.android.server.wm.WindowFrames, android.util.SparseArray, java.util.function.Consumer)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.WindowState r1;
        android.view.InsetsState r2;
        com.android.server.wm.WindowFrames r3;
        android.util.SparseArray r4;
        java.util.function.Consumer r5;
        android.graphics.Rect $r7;
        android.view.WindowManager$LayoutParams $r8;
        int $i0;
        com.android.server.wm.DisplayContent $r9;
        com.android.server.wm.InsetsStateController $r10;
        java.lang.Throwable $r11;
        com.android.server.wm.DisplayFrames r12;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 := @parameter0: com.android.server.wm.WindowState;

        r12 := @parameter1: com.android.server.wm.DisplayFrames;

        r2 := @parameter2: android.view.InsetsState;

        r3 := @parameter3: com.android.server.wm.WindowFrames;

        r4 := @parameter4: android.util.SparseArray;

        r5 := @parameter5: java.util.function.Consumer;

        virtualinvoke r1.<com.android.server.wm.WindowState: void setSimulatedWindowFrames(com.android.server.wm.WindowFrames)>(r3);

        $r7 = new android.graphics.Rect;

        specialinvoke $r7.<android.graphics.Rect: void <init>()>();

     label1:
        interfaceinvoke r5.<java.util.function.Consumer: void accept(java.lang.Object)>($r7);

     label2:
        virtualinvoke r1.<com.android.server.wm.WindowState: void setSimulatedWindowFrames(com.android.server.wm.WindowFrames)>(null);

        $r8 = r1.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i0 = $r8.<android.view.WindowManager$LayoutParams: int type>;

        virtualinvoke r4.<android.util.SparseArray: void put(int,java.lang.Object)>($i0, $r7);

        $r9 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $r10 = virtualinvoke $r9.<com.android.server.wm.DisplayContent: com.android.server.wm.InsetsStateController getInsetsStateController()>();

        virtualinvoke $r10.<com.android.server.wm.InsetsStateController: void computeSimulatedState(android.view.InsetsState,com.android.server.wm.WindowState,com.android.server.wm.DisplayFrames,com.android.server.wm.WindowFrames)>(r2, r1, r12, r3);

        return;

     label3:
        $r11 := @caughtexception;

        virtualinvoke r1.<com.android.server.wm.WindowState: void setSimulatedWindowFrames(com.android.server.wm.WindowFrames)>(null);

        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private boolean supportsPointerLocation()
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.DisplayContent $r1, $r2;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $r1 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $z0 = $r1.<com.android.server.wm.DisplayContent: boolean isDefaultDisplay>;

        if $z0 != 0 goto label2;

        $r2 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $z1 = virtualinvoke $r2.<com.android.server.wm.DisplayContent: boolean isPrivate()>();

        if $z1 != 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    private void updateCurrentUserResources()
    {
        com.android.server.wm.DisplayPolicy r0;
        int i0, $i1;
        android.content.Context r1;
        android.app.LoadedApk r2;
        com.android.server.wm.WindowManagerService $r3;
        android.app.ActivityManagerInternal $r4;
        android.app.ActivityThread $r5;
        java.lang.String $r6, $r8;
        android.app.ResourcesManager $r7;
        java.lang.String[] $r9, $r12;
        android.content.pm.ApplicationInfo $r10;
        com.android.server.wm.DisplayContent $r11;
        android.content.res.Resources $r13, $r15, $r16;
        android.content.res.CompatibilityInfo $r14;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $r3 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowManagerService mService>;

        $r4 = $r3.<com.android.server.wm.WindowManagerService: android.app.ActivityManagerInternal mAmInternal>;

        i0 = virtualinvoke $r4.<android.app.ActivityManagerInternal: int getCurrentUserId()>();

        r1 = virtualinvoke r0.<com.android.server.wm.DisplayPolicy: android.content.Context getSystemUiContext()>();

        if i0 != 0 goto label1;

        $r16 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        r0.<com.android.server.wm.DisplayPolicy: android.content.res.Resources mCurrentUserResources> = $r16;

        return;

     label1:
        $r5 = staticinvoke <android.app.ActivityThread: android.app.ActivityThread currentActivityThread()>();

        $r6 = virtualinvoke r1.<android.content.Context: java.lang.String getPackageName()>();

        r2 = virtualinvoke $r5.<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(java.lang.String,android.content.res.CompatibilityInfo,int,int)>($r6, null, 0, i0);

        $r7 = staticinvoke <android.app.ResourcesManager: android.app.ResourcesManager getInstance()>();

        $r8 = virtualinvoke r2.<android.app.LoadedApk: java.lang.String getResDir()>();

        $r9 = virtualinvoke r2.<android.app.LoadedApk: java.lang.String[] getOverlayDirs()>();

        $r10 = virtualinvoke r2.<android.app.LoadedApk: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $r12 = $r10.<android.content.pm.ApplicationInfo: java.lang.String[] sharedLibraryFiles>;

        $r11 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $i1 = virtualinvoke $r11.<com.android.server.wm.DisplayContent: int getDisplayId()>();

        $r13 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r14 = virtualinvoke $r13.<android.content.res.Resources: android.content.res.CompatibilityInfo getCompatibilityInfo()>();

        $r15 = virtualinvoke $r7.<android.app.ResourcesManager: android.content.res.Resources getResources(android.os.IBinder,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],int,android.content.res.Configuration,android.content.res.CompatibilityInfo,java.lang.ClassLoader,java.util.List)>(null, $r8, null, $r9, $r12, $i1, null, $r14, null, null);

        r0.<com.android.server.wm.DisplayPolicy: android.content.res.Resources mCurrentUserResources> = $r15;

        return;
    }

    private static void updateInsetsStateForDisplayCutout(com.android.server.wm.DisplayFrames, android.view.InsetsState)
    {
        android.view.InsetsState r0;
        android.graphics.Rect r1, r9;
        com.android.server.wm.utils.WmDisplayCutout $r2;
        android.view.DisplayCutout $r3;
        boolean $z0;
        android.view.InsetsSource $r4, $r5, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        com.android.server.wm.DisplayFrames r8;

        r8 := @parameter0: com.android.server.wm.DisplayFrames;

        r0 := @parameter1: android.view.InsetsState;

        $r2 = r8.<com.android.server.wm.DisplayFrames: com.android.server.wm.utils.WmDisplayCutout mDisplayCutout>;

        $r3 = virtualinvoke $r2.<com.android.server.wm.utils.WmDisplayCutout: android.view.DisplayCutout getDisplayCutout()>();

        $z0 = virtualinvoke $r3.<android.view.DisplayCutout: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.view.InsetsState: void removeSource(int)>(9);

        virtualinvoke r0.<android.view.InsetsState: void removeSource(int)>(10);

        virtualinvoke r0.<android.view.InsetsState: void removeSource(int)>(11);

        virtualinvoke r0.<android.view.InsetsState: void removeSource(int)>(12);

        return;

     label1:
        r1 = r8.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        r9 = r8.<com.android.server.wm.DisplayFrames: android.graphics.Rect mDisplayCutoutSafe>;

        $r4 = virtualinvoke r0.<android.view.InsetsState: android.view.InsetsSource getSource(int)>(9);

        $i3 = r1.<android.graphics.Rect: int left>;

        $i2 = r1.<android.graphics.Rect: int top>;

        $i1 = r9.<android.graphics.Rect: int left>;

        $i0 = r1.<android.graphics.Rect: int bottom>;

        virtualinvoke $r4.<android.view.InsetsSource: void setFrame(int,int,int,int)>($i3, $i2, $i1, $i0);

        $r5 = virtualinvoke r0.<android.view.InsetsState: android.view.InsetsSource getSource(int)>(10);

        $i7 = r1.<android.graphics.Rect: int left>;

        $i6 = r1.<android.graphics.Rect: int top>;

        $i5 = r1.<android.graphics.Rect: int right>;

        $i4 = r9.<android.graphics.Rect: int top>;

        virtualinvoke $r5.<android.view.InsetsSource: void setFrame(int,int,int,int)>($i7, $i6, $i5, $i4);

        $r6 = virtualinvoke r0.<android.view.InsetsState: android.view.InsetsSource getSource(int)>(11);

        $i11 = r9.<android.graphics.Rect: int right>;

        $i10 = r1.<android.graphics.Rect: int top>;

        $i9 = r1.<android.graphics.Rect: int right>;

        $i8 = r1.<android.graphics.Rect: int bottom>;

        virtualinvoke $r6.<android.view.InsetsSource: void setFrame(int,int,int,int)>($i11, $i10, $i9, $i8);

        $r7 = virtualinvoke r0.<android.view.InsetsState: android.view.InsetsSource getSource(int)>(12);

        $i15 = r1.<android.graphics.Rect: int left>;

        $i14 = r9.<android.graphics.Rect: int bottom>;

        $i13 = r1.<android.graphics.Rect: int right>;

        $i12 = r1.<android.graphics.Rect: int bottom>;

        virtualinvoke $r7.<android.view.InsetsSource: void setFrame(int,int,int,int)>($i15, $i14, $i13, $i12);

        return;
    }

    private int updateLightNavigationBarAppearanceLw(int, com.android.server.wm.WindowState, com.android.server.wm.WindowState, com.android.server.wm.WindowState, com.android.server.wm.WindowState)
    {
        com.android.server.wm.DisplayPolicy r0;
        int i0, $i1, $i2, $i3, i4, i5;
        com.android.server.wm.WindowState r1, r2, r3, r4;
        android.view.WindowManager$LayoutParams $r5;
        android.view.InsetsFlags $r6;
        boolean $z0, $z1;
        com.android.server.wm.BarController $r7;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.wm.WindowState;

        r2 := @parameter2: com.android.server.wm.WindowState;

        r3 := @parameter3: com.android.server.wm.WindowState;

        r4 := @parameter4: com.android.server.wm.WindowState;

        i4 = i0;

        if r4 == null goto label4;

        if r4 == r3 goto label2;

        if r4 != r1 goto label1;

        goto label2;

     label1:
        i5 = i0;

        if r4 != r2 goto label3;

        i5 = i0;

        $z0 = virtualinvoke r4.<com.android.server.wm.WindowState: boolean isDimming()>();

        if $z0 == 0 goto label3;

        i5 = i0 & -17;

        goto label3;

     label2:
        $i3 = i0 & -17;

        $r5 = r4.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $r6 = $r5.<android.view.WindowManager$LayoutParams: android.view.InsetsFlags insetsFlags>;

        $i1 = $r6.<android.view.InsetsFlags: int appearance>;

        $i2 = $i1 & 16;

        i5 = $i3 | $i2;

     label3:
        i4 = i5;

        $r7 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.BarController mNavigationBarController>;

        $z1 = virtualinvoke $r7.<com.android.server.wm.BarController: boolean isLightAppearanceAllowed(com.android.server.wm.WindowState)>(r4);

        if $z1 != 0 goto label4;

        i4 = i5 & -17;

     label4:
        return i4;
    }

    static int updateLightNavigationBarLw(int, com.android.server.wm.WindowState, com.android.server.wm.WindowState, com.android.server.wm.WindowState, com.android.server.wm.WindowState)
    {
        int i0, $i1, $i2, $i3, i4;
        com.android.server.wm.WindowState r0, r1, r2, r3;
        boolean $z0;

        i0 := @parameter0: int;

        r0 := @parameter1: com.android.server.wm.WindowState;

        r1 := @parameter2: com.android.server.wm.WindowState;

        r2 := @parameter3: com.android.server.wm.WindowState;

        r3 := @parameter4: com.android.server.wm.WindowState;

        i4 = i0;

        if r3 == null goto label3;

        if r3 == r2 goto label2;

        if r3 != r0 goto label1;

        goto label2;

     label1:
        i4 = i0;

        if r3 != r1 goto label3;

        i4 = i0;

        $z0 = virtualinvoke r3.<com.android.server.wm.WindowState: boolean isDimming()>();

        if $z0 == 0 goto label3;

        i4 = i0 & -17;

        goto label3;

     label2:
        $i1 = i0 & -17;

        $i2 = staticinvoke <com.android.server.wm.PolicyControl: int getSystemUiVisibility(com.android.server.wm.WindowState,android.view.WindowManager$LayoutParams)>(r3, null);

        $i3 = $i2 & 16;

        i4 = $i1 | $i3;

     label3:
        return i4;
    }

    private int updateLightStatusBarAppearanceLw(int, com.android.server.wm.WindowState, com.android.server.wm.WindowState)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.WindowState r1, r4;
        boolean $z0, $z1, $z2, z3, $z4;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8, i9;
        android.view.WindowManager$LayoutParams $r2;
        android.view.InsetsFlags $r3;
        com.android.server.wm.StatusBarController $r5;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        i5 := @parameter0: int;

        r1 := @parameter1: com.android.server.wm.WindowState;

        r4 := @parameter2: com.android.server.wm.WindowState;

        $z0 = virtualinvoke r0.<com.android.server.wm.DisplayPolicy: boolean isKeyguardShowing()>();

        if $z0 == 0 goto label1;

        $z2 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: boolean isKeyguardOccluded()>();

        if $z2 != 0 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        if z3 == 0 goto label3;

        r4 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNotificationShade>;

        goto label3;

     label3:
        i6 = i5;

        if r4 == null goto label8;

        if r4 == r1 goto label5;

        if z3 == 0 goto label4;

        goto label5;

     label4:
        i7 = i5;

        $z1 = virtualinvoke r4.<com.android.server.wm.WindowState: boolean isDimming()>();

        if $z1 == 0 goto label6;

        i8 = i5 & -9;

        goto label7;

     label5:
        $i0 = staticinvoke <com.android.server.wm.PolicyControl: int getSystemUiVisibility(com.android.server.wm.WindowState,android.view.WindowManager$LayoutParams)>(r4, null);

        i9 = staticinvoke <android.view.InsetsFlags: int getAppearance(int)>($i0);

        $i4 = i5 & -9;

        $r2 = r4.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $r3 = $r2.<android.view.WindowManager$LayoutParams: android.view.InsetsFlags insetsFlags>;

        $i1 = $r3.<android.view.InsetsFlags: int appearance>;

        $i2 = $i1 | i9;

        $i3 = $i2 & 8;

        i7 = $i4 | $i3;

     label6:
        i8 = i7;

     label7:
        i6 = i8;

        $r5 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.StatusBarController mStatusBarController>;

        $z4 = virtualinvoke $r5.<com.android.server.wm.StatusBarController: boolean isLightAppearanceAllowed(com.android.server.wm.WindowState)>(r4);

        if $z4 != 0 goto label8;

        i6 = i8 & -9;

     label8:
        return i6;
    }

    private android.util.Pair updateSystemBarsLw(com.android.server.wm.WindowState, int, int)
    {
        com.android.server.wm.DisplayPolicy r0, r45;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, z18, z19, z20, z21, $z22, z23, z24, z25, z26, z27, z28, z29, z30, z31, $z32, z33, $z34, z35, z36, z37, z38, z39, z40, z41;
        int i0, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i12, $i13, $i14, $i15, $i16, i17, i18, i19, i20, i21, i22, $i23, i24, i25, $i26, $i27, i29, $i30, i31, i32, $i33, i34;
        long l1, l2, $l10;
        com.android.server.wm.DisplayContent $r1, $r3, $r5, $r9, $r13, $r44;
        com.android.server.wm.TaskDisplayArea $r2, $r4;
        com.android.server.wm.DockedStackDividerController $r6;
        com.android.server.wm.WindowState $r7, $r10, $r11, $r12, $r14, $r15, $r16, r28, r29, $r33, $r35, $r36, $r37, $r38, $r39, r41, $r42, r50;
        com.android.server.wm.BarController $r8, $r27, $r31, $r34, $r47;
        java.lang.Integer $r17;
        android.util.Pair $r18;
        com.android.server.wm.WindowManagerService $r19, $r22, $r24, $r43;
        com.android.server.policy.WindowManagerPolicy $r20, $r23, $r25;
        com.android.server.wm.ImmersiveModeConfirmation $r21;
        com.android.server.wm.StatusBarController $r26, $r30, $r32, $r46, $r48;
        byte $b11, $b28;
        android.view.WindowManager$LayoutParams $r40;
        java.lang.String r49;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r28 := @parameter0: com.android.server.wm.WindowState;

        i17 := @parameter1: int;

        i18 := @parameter2: int;

        $r1 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $r2 = virtualinvoke $r1.<com.android.server.wm.DisplayContent: com.android.server.wm.TaskDisplayArea getDefaultTaskDisplayArea()>();

        z18 = virtualinvoke $r2.<com.android.server.wm.TaskDisplayArea: boolean isStackVisible(int)>(3);

        $r3 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $r4 = virtualinvoke $r3.<com.android.server.wm.DisplayContent: com.android.server.wm.TaskDisplayArea getDefaultTaskDisplayArea()>();

        z0 = virtualinvoke $r4.<com.android.server.wm.TaskDisplayArea: boolean isStackVisible(int)>(5);

        $r5 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $r6 = virtualinvoke $r5.<com.android.server.wm.DisplayContent: com.android.server.wm.DockedStackDividerController getDockedDividerController()>();

        z19 = virtualinvoke $r6.<com.android.server.wm.DockedStackDividerController: boolean isResizing()>();

        if z18 != 0 goto label02;

        $z16 = virtualinvoke r28.<com.android.server.wm.WindowState: boolean inFreeformWindowingMode()>();

        if $z16 != 0 goto label02;

        if z19 != 0 goto label02;

        $z17 = r0.<com.android.server.wm.DisplayPolicy: boolean mForceShowSystemBarsFromExternal>;

        if $z17 == 0 goto label01;

        goto label02;

     label01:
        z20 = 0;

        goto label03;

     label02:
        z20 = 1;

     label03:
        r0.<com.android.server.wm.DisplayPolicy: boolean mForceShowSystemBars> = z20;

        if z20 == 0 goto label04;

        $z15 = virtualinvoke r0.<com.android.server.wm.DisplayPolicy: boolean isKeyguardShowing()>();

        if $z15 != 0 goto label04;

        z21 = 1;

        goto label05;

     label04:
        z21 = 0;

     label05:
        $z22 = virtualinvoke r0.<com.android.server.wm.DisplayPolicy: boolean isKeyguardShowing()>();

        if $z22 == 0 goto label06;

        $z14 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: boolean isKeyguardOccluded()>();

        if $z14 != 0 goto label06;

        r29 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNotificationShade>;

        goto label07;

     label06:
        r29 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopFullscreenOpaqueWindowState>;

     label07:
        $r30 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.StatusBarController mStatusBarController>;

        i19 = virtualinvoke $r30.<com.android.server.wm.StatusBarController: int applyTranslucentFlagLw(com.android.server.wm.WindowState,int,int)>(r29, i18, i17);

        $r31 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.BarController mNavigationBarController>;

        i20 = virtualinvoke $r31.<com.android.server.wm.BarController: int applyTranslucentFlagLw(com.android.server.wm.WindowState,int,int)>(r29, i19, i17);

        $r32 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.StatusBarController mStatusBarController>;

        $r33 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopDockedOpaqueWindowState>;

        i21 = virtualinvoke $r32.<com.android.server.wm.StatusBarController: int applyTranslucentFlagLw(com.android.server.wm.WindowState,int,int)>($r33, 0, 0);

        $r34 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.BarController mNavigationBarController>;

        $r35 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopDockedOpaqueWindowState>;

        i22 = virtualinvoke $r34.<com.android.server.wm.BarController: int applyTranslucentFlagLw(com.android.server.wm.WindowState,int,int)>($r35, i21, 0);

        $r36 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopFullscreenOpaqueWindowState>;

        z1 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: boolean drawsStatusBarBackground(int,com.android.server.wm.WindowState)>(i20, $r36);

        $r37 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopDockedOpaqueWindowState>;

        z2 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: boolean drawsStatusBarBackground(int,com.android.server.wm.WindowState)>(i22, $r37);

        $r38 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopFullscreenOpaqueWindowState>;

        z3 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: boolean drawsNavigationBarBackground(int,com.android.server.wm.WindowState)>(i20, $r38);

        $r39 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopDockedOpaqueWindowState>;

        z23 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: boolean drawsNavigationBarBackground(int,com.android.server.wm.WindowState)>(i22, $r39);

        $r40 = virtualinvoke r28.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams getAttrs()>();

        $i23 = $r40.<android.view.WindowManager$LayoutParams: int type>;

        if $i23 != 2040 goto label08;

        z24 = 1;

        goto label09;

     label08:
        z24 = 0;

     label09:
        i24 = i20;

        if z24 == 0 goto label11;

        i24 = i20;

        $z12 = virtualinvoke r0.<com.android.server.wm.DisplayPolicy: boolean isKeyguardShowing()>();

        if $z12 != 0 goto label11;

        i25 = 14342;

        $z13 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: boolean isKeyguardOccluded()>();

        if $z13 == 0 goto label10;

        i25 = 14342 | -1073741824;

     label10:
        $i16 = i25 & i20;

        $i15 = i17 & i25;

        i24 = $i16 | $i15;

     label11:
        if z1 == 0 goto label12;

        if z2 == 0 goto label12;

        $i14 = i24 | 8;

        i24 = $i14 & -1073741825;

        goto label13;

     label12:
        if z21 == 0 goto label13;

        i24 = i24 & -1073741833;

        goto label13;

     label13:
        i0 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: int configureNavBarOpacity(int,boolean,boolean,boolean,boolean,boolean)>(i24, z18, z0, z19, z3, z23);

        $i26 = i0 & 4096;

        if $i26 == 0 goto label14;

        z25 = 1;

        goto label15;

     label14:
        z25 = 0;

     label15:
        r41 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopFullscreenOpaqueWindowState>;

        if r41 == null goto label16;

        $i12 = staticinvoke <com.android.server.wm.PolicyControl: int getWindowFlags(com.android.server.wm.WindowState,android.view.WindowManager$LayoutParams)>(r41, null);

        $i13 = $i12 & 1024;

        if $i13 == 0 goto label16;

        z26 = 1;

        goto label17;

     label16:
        z26 = 0;

     label17:
        $i27 = i0 & 4;

        if $i27 == 0 goto label18;

        z27 = 1;

        goto label19;

     label18:
        z27 = 0;

     label19:
        $i3 = i0 & 2;

        if $i3 == 0 goto label20;

        z28 = 1;

        goto label21;

     label20:
        z28 = 0;

     label21:
        $r7 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mStatusBar>;

        if $r7 == null goto label23;

        if z24 != 0 goto label22;

        $z11 = r0.<com.android.server.wm.DisplayPolicy: boolean mForceShowSystemBars>;

        if $z11 != 0 goto label23;

        if z26 != 0 goto label22;

        if z27 == 0 goto label23;

        if z25 == 0 goto label23;

     label22:
        z29 = 1;

        goto label24;

     label23:
        z29 = 0;

     label24:
        $r42 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNavigationBar>;

        if $r42 == null goto label25;

        $z10 = r0.<com.android.server.wm.DisplayPolicy: boolean mForceShowSystemBars>;

        if $z10 != 0 goto label25;

        if z28 == 0 goto label25;

        if z25 == 0 goto label25;

        z30 = 1;

        goto label26;

     label25:
        z30 = 0;

     label26:
        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l2 = r0.<com.android.server.wm.DisplayPolicy: long mPendingPanicGestureUptime>;

        $b28 = l2 cmp 0L;

        if $b28 == 0 goto label27;

        $l10 = l1 - l2;

        $b11 = $l10 cmp 30000L;

        if $b11 > 0 goto label27;

        z31 = 1;

        goto label28;

     label27:
        z31 = 0;

     label28:
        $r43 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowManagerService mService>;

        $r44 = virtualinvoke $r43.<com.android.server.wm.WindowManagerService: com.android.server.wm.DisplayContent getDefaultDisplayContentLocked()>();

        r45 = virtualinvoke $r44.<com.android.server.wm.DisplayContent: com.android.server.wm.DisplayPolicy getDisplayPolicy()>();

        if z31 == 0 goto label29;

        if z28 == 0 goto label29;

        $z7 = virtualinvoke r0.<com.android.server.wm.DisplayPolicy: boolean isKeyguardShowing()>();

        if $z7 != 0 goto label29;

        $z8 = virtualinvoke r45.<com.android.server.wm.DisplayPolicy: boolean isKeyguardDrawComplete()>();

        if $z8 == 0 goto label29;

        r0.<com.android.server.wm.DisplayPolicy: long mPendingPanicGestureUptime> = 0L;

        $r26 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.StatusBarController mStatusBarController>;

        virtualinvoke $r26.<com.android.server.wm.StatusBarController: void showTransient()>();

        $z9 = staticinvoke <com.android.server.wm.DisplayPolicy: boolean isNavBarEmpty(int)>(i0);

        if $z9 != 0 goto label29;

        $r27 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.BarController mNavigationBarController>;

        virtualinvoke $r27.<com.android.server.wm.BarController: void showTransient()>();

     label29:
        $r46 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.StatusBarController mStatusBarController>;

        $z32 = virtualinvoke $r46.<com.android.server.wm.StatusBarController: boolean isTransientShowRequested()>();

        if $z32 == 0 goto label30;

        if z29 != 0 goto label30;

        if z27 == 0 goto label30;

        z33 = 1;

        goto label31;

     label30:
        z33 = 0;

     label31:
        $r47 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.BarController mNavigationBarController>;

        $z34 = virtualinvoke $r47.<com.android.server.wm.BarController: boolean isTransientShowRequested()>();

        if $z34 == 0 goto label32;

        if z30 != 0 goto label32;

        z35 = 1;

        goto label33;

     label32:
        z35 = 0;

     label33:
        if z33 != 0 goto label34;

        if z35 != 0 goto label34;

        i29 = i0;

        $z6 = r0.<com.android.server.wm.DisplayPolicy: boolean mForceShowSystemBars>;

        if $z6 == 0 goto label35;

        goto label34;

     label34:
        specialinvoke r0.<com.android.server.wm.DisplayPolicy: void clearClearableFlagsLw()>();

        i29 = i0 & -8;

     label35:
        $i30 = i29 & 2048;

        if $i30 == 0 goto label36;

        z36 = 1;

        goto label37;

     label36:
        z36 = 0;

     label37:
        $i4 = i29 & 4096;

        if $i4 == 0 goto label38;

        z37 = 1;

        goto label39;

     label38:
        z37 = 0;

     label39:
        if z36 != 0 goto label41;

        if z37 == 0 goto label40;

        goto label41;

     label40:
        z38 = 0;

        goto label42;

     label41:
        z38 = 1;

     label42:
        if z28 == 0 goto label43;

        if z38 != 0 goto label43;

        i31 = i29;

        $r22 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowManagerService mService>;

        $r23 = $r22.<com.android.server.wm.WindowManagerService: com.android.server.policy.WindowManagerPolicy mPolicy>;

        $i8 = interfaceinvoke $r23.<com.android.server.policy.WindowManagerPolicy: int getWindowLayerLw(com.android.server.policy.WindowManagerPolicy$WindowState)>(r28);

        $r24 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowManagerService mService>;

        $r25 = $r24.<com.android.server.wm.WindowManagerService: com.android.server.policy.WindowManagerPolicy mPolicy>;

        $i9 = interfaceinvoke $r25.<com.android.server.policy.WindowManagerPolicy: int getWindowLayerFromTypeLw(int)>(2022);

        if $i8 <= $i9 goto label44;

        i31 = i29 & -3;

        goto label44;

     label43:
        i31 = i29;

     label44:
        $r48 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.StatusBarController mStatusBarController>;

        i32 = virtualinvoke $r48.<com.android.server.wm.StatusBarController: int updateVisibilityLw(boolean,int,int)>(z29, i17, i31);

        $i33 = <android.view.ViewRootImpl: int sNewInsetsMode>;

        if $i33 != 2 goto label45;

        z39 = 1;

        goto label46;

     label45:
        z39 = 0;

     label46:
        if z39 == 0 goto label47;

        z40 = r0.<com.android.server.wm.DisplayPolicy: boolean mLastImmersiveMode>;

        goto label48;

     label47:
        z40 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: boolean isImmersiveMode(int)>(i17);

     label48:
        if z39 == 0 goto label49;

        z41 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: boolean isImmersiveMode(com.android.server.wm.WindowState)>(r28);

        goto label50;

     label49:
        z41 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: boolean isImmersiveMode(int)>(i32);

     label50:
        if z40 == z41 goto label51;

        r0.<com.android.server.wm.DisplayPolicy: boolean mLastImmersiveMode> = z41;

        r49 = virtualinvoke r28.<com.android.server.wm.WindowState: java.lang.String getOwningPackage()>();

        $r21 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.ImmersiveModeConfirmation mImmersiveModeConfirmation>;

        $r19 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowManagerService mService>;

        $r20 = $r19.<com.android.server.wm.WindowManagerService: com.android.server.policy.WindowManagerPolicy mPolicy>;

        $z4 = interfaceinvoke $r20.<com.android.server.policy.WindowManagerPolicy: boolean isUserSetupComplete()>();

        $i7 = virtualinvoke r28.<com.android.server.wm.WindowState: int getSystemUiVisibility()>();

        $z5 = staticinvoke <com.android.server.wm.DisplayPolicy: boolean isNavBarEmpty(int)>($i7);

        virtualinvoke $r21.<com.android.server.wm.ImmersiveModeConfirmation: void immersiveModeChangedLw(java.lang.String,boolean,boolean,boolean)>(r49, z41, $z4, $z5);

        goto label51;

     label51:
        $r8 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.BarController mNavigationBarController>;

        i34 = virtualinvoke $r8.<com.android.server.wm.BarController: int updateVisibilityLw(boolean,int,int)>(z30, i17, i32);

        $r12 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopFullscreenOpaqueWindowState>;

        $r11 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopFullscreenOpaqueOrDimmingWindowState>;

        $r9 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $r10 = $r9.<com.android.server.wm.DisplayContent: com.android.server.wm.WindowState mInputMethodWindow>;

        $i5 = r0.<com.android.server.wm.DisplayPolicy: int mNavigationBarPosition>;

        r50 = staticinvoke <com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState chooseNavigationColorWindowLw(com.android.server.wm.WindowState,com.android.server.wm.WindowState,com.android.server.wm.WindowState,int)>($r12, $r11, $r10, $i5);

        $r16 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopFullscreenOpaqueWindowState>;

        $r15 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopFullscreenOpaqueOrDimmingWindowState>;

        $r13 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $r14 = $r13.<com.android.server.wm.DisplayContent: com.android.server.wm.WindowState mInputMethodWindow>;

        $i6 = staticinvoke <com.android.server.wm.DisplayPolicy: int updateLightNavigationBarLw(int,com.android.server.wm.WindowState,com.android.server.wm.WindowState,com.android.server.wm.WindowState,com.android.server.wm.WindowState)>(i34, $r16, $r15, $r14, r50);

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r18 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>($r17, r50);

        return $r18;
    }

    private static void updateTransientState(int, int, int, int, android.util.IntArray, android.util.IntArray)
    {
        int i0, i1, $i2, $i3, i4, i5;
        android.util.IntArray r0, r1;
        boolean z1, z2;

        i4 := @parameter0: int;

        i5 := @parameter1: int;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r0 := @parameter4: android.util.IntArray;

        r1 := @parameter5: android.util.IntArray;

        $i2 = i5 & i0;

        if $i2 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        $i3 = i4 & i0;

        if $i3 == 0 goto label3;

        z2 = 1;

        goto label4;

     label3:
        z2 = 0;

     label4:
        if z1 != 0 goto label5;

        if z2 == 0 goto label5;

        virtualinvoke r0.<android.util.IntArray: void add(int)>(i1);

        goto label6;

     label5:
        if z1 == 0 goto label6;

        if z2 != 0 goto label6;

        virtualinvoke r1.<android.util.IntArray: void add(int)>(i1);

     label6:
        return;
    }

    void addWindowLw(com.android.server.wm.WindowState, android.view.WindowManager$LayoutParams)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.WindowState r1;
        int i0, $i1, $i2, i3, i4, i5;
        com.android.server.wm.StatusBarController $r2;
        com.android.server.wm.DisplayContent $r4, $r5, $r6, $r11, $r14, $r16, $r18, $r20, $r21, $r25;
        com.android.server.wm.BarController $r7, $r9;
        com.android.server.wm.BarController$OnBarVisibilityChangedListener $r8;
        com.android.server.wm.'-$$Lambda$DisplayPolicy$_FEXboPObSj41eBmuQropgw92iw' $r12;
        boolean $z0;
        com.android.server.wm.WindowManagerService $r22;
        com.android.server.policy.WindowManagerPolicy $r23;
        int[] $r24, r28;
        android.util.ArraySet $r26;
        android.view.WindowManager$LayoutParams r27;
        com.android.server.wm._$$Lambda$DisplayPolicy$J8sIwXJvltUaPM3jEGO948Bx9ig r30;
        com.android.server.wm._$$Lambda$DisplayPolicy$3MnyIKSHFLqhfUifWEQPNp__J6A r31;
        com.android.server.wm._$$Lambda$DisplayPolicy$LkHee4mchNXMwNt7HLgsMzHofeE r32;
        com.android.server.wm._$$Lambda$DisplayPolicy$IOyP8YVRG92tn9u1muYWZgBbgc0 r33;
        com.android.server.wm._$$Lambda$DisplayPolicy$LFEaXRr2IF3nhPJdP5h3swIhnus r34;
        com.android.server.wm._$$Lambda$DisplayPolicy$NcnTU5Z6X56cfSOOwc98WQ4IVv8 r35;
        com.android.internal.util.function.TriConsumer r36;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 := @parameter0: com.android.server.wm.WindowState;

        r27 := @parameter1: android.view.WindowManager$LayoutParams;

        $i1 = r27.<android.view.WindowManager$LayoutParams: int privateFlags>;

        $i2 = $i1 & 4194304;

        if $i2 == 0 goto label1;

        $r26 = r0.<com.android.server.wm.DisplayPolicy: android.util.ArraySet mScreenDecorWindows>;

        virtualinvoke $r26.<android.util.ArraySet: boolean add(java.lang.Object)>(r1);

     label1:
        i3 = r27.<android.view.WindowManager$LayoutParams: int type>;

        i4 = 0;

        if i3 == 2000 goto label5;

        if i3 == 2019 goto label4;

        if i3 == 2040 goto label3;

        $r24 = r27.<android.view.WindowManager$LayoutParams: int[] providesInsetsTypes>;

        if $r24 == null goto label6;

        r28 = r27.<android.view.WindowManager$LayoutParams: int[] providesInsetsTypes>;

        i5 = lengthof r28;

     label2:
        if i4 >= i5 goto label6;

        i0 = r28[i4];

        $r25 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        virtualinvoke $r25.<com.android.server.wm.DisplayContent: void setInsetProvider(int,com.android.server.wm.WindowState,com.android.internal.util.function.TriConsumer)>(i0, r1, null);

        i4 = i4 + 1;

        goto label2;

     label3:
        r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNotificationShade> = r1;

        $r21 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $z0 = $r21.<com.android.server.wm.DisplayContent: boolean isDefaultDisplay>;

        if $z0 == 0 goto label6;

        $r22 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowManagerService mService>;

        $r23 = $r22.<com.android.server.wm.WindowManagerService: com.android.server.policy.WindowManagerPolicy mPolicy>;

        interfaceinvoke $r23.<com.android.server.policy.WindowManagerPolicy: void setKeyguardCandidateLw(com.android.server.policy.WindowManagerPolicy$WindowState)>(r1);

        goto label6;

     label4:
        r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNavigationBar> = r1;

        $r7 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.BarController mNavigationBarController>;

        virtualinvoke $r7.<com.android.server.wm.BarController: void setWindow(com.android.server.wm.WindowState)>(r1);

        $r9 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.BarController mNavigationBarController>;

        $r8 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.BarController$OnBarVisibilityChangedListener mNavBarVisibilityListener>;

        virtualinvoke $r9.<com.android.server.wm.BarController: void setOnBarVisibilityChangedListener(com.android.server.wm.BarController$OnBarVisibilityChangedListener,boolean)>($r8, 1);

        $r11 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        r30 = new com.android.server.wm._$$Lambda$DisplayPolicy$J8sIwXJvltUaPM3jEGO948Bx9ig;

        specialinvoke r30.<com.android.server.wm._$$Lambda$DisplayPolicy$J8sIwXJvltUaPM3jEGO948Bx9ig: void <init>(com.android.server.wm.DisplayPolicy)>(r0);

        $r12 = <com.android.server.wm._$$Lambda$DisplayPolicy$_FEXboPObSj41eBmuQropgw92iw: com.android.server.wm.'-$$Lambda$DisplayPolicy$_FEXboPObSj41eBmuQropgw92iw' INSTANCE>;

        r36 = (com.android.internal.util.function.TriConsumer) $r12;

        virtualinvoke $r11.<com.android.server.wm.DisplayContent: void setInsetProvider(int,com.android.server.wm.WindowState,com.android.internal.util.function.TriConsumer,com.android.internal.util.function.TriConsumer)>(1, r1, r30, r36);

        $r14 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        r31 = new com.android.server.wm._$$Lambda$DisplayPolicy$3MnyIKSHFLqhfUifWEQPNp__J6A;

        specialinvoke r31.<com.android.server.wm._$$Lambda$DisplayPolicy$3MnyIKSHFLqhfUifWEQPNp__J6A: void <init>(com.android.server.wm.DisplayPolicy)>(r0);

        virtualinvoke $r14.<com.android.server.wm.DisplayContent: void setInsetProvider(int,com.android.server.wm.WindowState,com.android.internal.util.function.TriConsumer)>(4, r1, r31);

        $r16 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        r32 = new com.android.server.wm._$$Lambda$DisplayPolicy$LkHee4mchNXMwNt7HLgsMzHofeE;

        specialinvoke r32.<com.android.server.wm._$$Lambda$DisplayPolicy$LkHee4mchNXMwNt7HLgsMzHofeE: void <init>(com.android.server.wm.DisplayPolicy)>(r0);

        virtualinvoke $r16.<com.android.server.wm.DisplayContent: void setInsetProvider(int,com.android.server.wm.WindowState,com.android.internal.util.function.TriConsumer)>(5, r1, r32);

        $r18 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        r33 = new com.android.server.wm._$$Lambda$DisplayPolicy$IOyP8YVRG92tn9u1muYWZgBbgc0;

        specialinvoke r33.<com.android.server.wm._$$Lambda$DisplayPolicy$IOyP8YVRG92tn9u1muYWZgBbgc0: void <init>(com.android.server.wm.DisplayPolicy)>(r0);

        virtualinvoke $r18.<com.android.server.wm.DisplayContent: void setInsetProvider(int,com.android.server.wm.WindowState,com.android.internal.util.function.TriConsumer)>(6, r1, r33);

        $r20 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        r34 = new com.android.server.wm._$$Lambda$DisplayPolicy$LFEaXRr2IF3nhPJdP5h3swIhnus;

        specialinvoke r34.<com.android.server.wm._$$Lambda$DisplayPolicy$LFEaXRr2IF3nhPJdP5h3swIhnus: void <init>(com.android.server.wm.DisplayPolicy)>(r0);

        virtualinvoke $r20.<com.android.server.wm.DisplayContent: void setInsetProvider(int,com.android.server.wm.WindowState,com.android.internal.util.function.TriConsumer)>(8, r1, r34);

        goto label6;

     label5:
        r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mStatusBar> = r1;

        $r2 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.StatusBarController mStatusBarController>;

        virtualinvoke $r2.<com.android.server.wm.StatusBarController: void setWindow(com.android.server.wm.WindowState)>(r1);

        r35 = new com.android.server.wm._$$Lambda$DisplayPolicy$NcnTU5Z6X56cfSOOwc98WQ4IVv8;

        specialinvoke r35.<com.android.server.wm._$$Lambda$DisplayPolicy$NcnTU5Z6X56cfSOOwc98WQ4IVv8: void <init>(com.android.server.wm.DisplayPolicy)>(r0);

        $r4 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        virtualinvoke $r4.<com.android.server.wm.DisplayContent: void setInsetProvider(int,com.android.server.wm.WindowState,com.android.internal.util.function.TriConsumer)>(0, r1, r35);

        $r5 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        virtualinvoke $r5.<com.android.server.wm.DisplayContent: void setInsetProvider(int,com.android.server.wm.WindowState,com.android.internal.util.function.TriConsumer)>(3, r1, r35);

        $r6 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        virtualinvoke $r6.<com.android.server.wm.DisplayContent: void setInsetProvider(int,com.android.server.wm.WindowState,com.android.internal.util.function.TriConsumer)>(7, r1, r35);

     label6:
        return;
    }

    public int adjustSystemUiVisibilityLw(int)
    {
        com.android.server.wm.DisplayPolicy r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        com.android.server.wm.StatusBarController $r1;
        com.android.server.wm.BarController $r2;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.StatusBarController mStatusBarController>;

        $i2 = r0.<com.android.server.wm.DisplayPolicy: int mLastSystemUiFlags>;

        virtualinvoke $r1.<com.android.server.wm.StatusBarController: void adjustSystemUiVisibilityLw(int,int)>($i2, i0);

        $r2 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.BarController mNavigationBarController>;

        $i3 = r0.<com.android.server.wm.DisplayPolicy: int mLastSystemUiFlags>;

        virtualinvoke $r2.<com.android.server.wm.BarController: void adjustSystemUiVisibilityLw(int,int)>($i3, i0);

        $i4 = r0.<com.android.server.wm.DisplayPolicy: int mResettingSystemUiFlags>;

        i1 = $i4 & i0;

        r0.<com.android.server.wm.DisplayPolicy: int mResettingSystemUiFlags> = i1;

        $i6 = i1 & i0;

        $i5 = r0.<com.android.server.wm.DisplayPolicy: int mForceClearedSystemUiFlags>;

        $i7 = $i6 & $i5;

        return $i7;
    }

    public void adjustWindowParamsLw(com.android.server.wm.WindowState, android.view.WindowManager$LayoutParams, int, int)
    {
        com.android.server.wm.DisplayPolicy r0;
        android.view.WindowManager$LayoutParams r1, $r5;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i15, $i16, $i17, $i18, i21, i22, $i24, $i25;
        android.util.ArraySet $r2, $r15, $r16;
        boolean $z0, $z1, $z2, $z3, $z4, z7, $z8;
        com.android.server.wm.ActivityRecord $r3, $r4;
        java.lang.StringBuilder $r6;
        java.lang.RuntimeException $r11;
        java.lang.String $r12;
        com.android.server.wm.WindowManagerService $r13;
        com.android.server.policy.WindowManagerPolicy $r14;
        long $l13, $l19, $l23, $l26;
        byte $b14, $b20;
        com.android.server.wm.WindowState r17;
        android.view.accessibility.AccessibilityManager $r18;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r17 := @parameter0: com.android.server.wm.WindowState;

        r1 := @parameter1: android.view.WindowManager$LayoutParams;

        i0 := @parameter2: int;

        i21 := @parameter3: int;

        $i1 = r1.<android.view.WindowManager$LayoutParams: int privateFlags>;

        $i2 = $i1 & 4194304;

        if $i2 == 0 goto label01;

        z7 = 1;

        goto label02;

     label01:
        z7 = 0;

     label02:
        $r2 = r0.<com.android.server.wm.DisplayPolicy: android.util.ArraySet mScreenDecorWindows>;

        $z0 = virtualinvoke $r2.<android.util.ArraySet: boolean contains(java.lang.Object)>(r17);

        if $z0 == 0 goto label03;

        if z7 != 0 goto label04;

        $r16 = r0.<com.android.server.wm.DisplayPolicy: android.util.ArraySet mScreenDecorWindows>;

        virtualinvoke $r16.<android.util.ArraySet: boolean remove(java.lang.Object)>(r17);

        goto label04;

     label03:
        if z7 == 0 goto label04;

        $z4 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: boolean hasStatusBarServicePermission(int,int)>(i0, i21);

        if $z4 == 0 goto label04;

        $r15 = r0.<com.android.server.wm.DisplayPolicy: android.util.ArraySet mScreenDecorWindows>;

        virtualinvoke $r15.<android.util.ArraySet: boolean add(java.lang.Object)>(r17);

     label04:
        i22 = r1.<android.view.WindowManager$LayoutParams: int type>;

        if i22 == 1 goto label12;

        if i22 == 2013 goto label11;

        if i22 == 2015 goto label10;

        if i22 == 2040 goto label09;

        if i22 == 2005 goto label05;

        if i22 == 2006 goto label10;

        goto label14;

     label05:
        $l13 = r1.<android.view.WindowManager$LayoutParams: long hideTimeoutMilliseconds>;

        $b14 = $l13 cmp 0L;

        if $b14 < 0 goto label06;

        $l19 = r1.<android.view.WindowManager$LayoutParams: long hideTimeoutMilliseconds>;

        $b20 = $l19 cmp 3500L;

        if $b20 <= 0 goto label07;

     label06:
        r1.<android.view.WindowManager$LayoutParams: long hideTimeoutMilliseconds> = 3500L;

     label07:
        $r18 = r0.<com.android.server.wm.DisplayPolicy: android.view.accessibility.AccessibilityManager mAccessibilityManager>;

        $l23 = r1.<android.view.WindowManager$LayoutParams: long hideTimeoutMilliseconds>;

        $i24 = (int) $l23;

        $i25 = virtualinvoke $r18.<android.view.accessibility.AccessibilityManager: int getRecommendedTimeoutMillis(int,int)>($i24, 2);

        $l26 = (long) $i25;

        r1.<android.view.WindowManager$LayoutParams: long hideTimeoutMilliseconds> = $l26;

        r1.<android.view.WindowManager$LayoutParams: int windowAnimations> = 16973828;

        $z8 = virtualinvoke r0.<com.android.server.wm.DisplayPolicy: boolean canToastShowWhenLocked(int)>(i0);

        if $z8 == 0 goto label08;

        $i17 = r1.<android.view.WindowManager$LayoutParams: int flags>;

        $i18 = $i17 | 524288;

        r1.<android.view.WindowManager$LayoutParams: int flags> = $i18;

     label08:
        $i15 = r1.<android.view.WindowManager$LayoutParams: int flags>;

        $i16 = $i15 | 16;

        r1.<android.view.WindowManager$LayoutParams: int flags> = $i16;

        goto label14;

     label09:
        $r13 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowManagerService mService>;

        $r14 = $r13.<com.android.server.wm.WindowManagerService: com.android.server.policy.WindowManagerPolicy mPolicy>;

        $z3 = interfaceinvoke $r14.<com.android.server.policy.WindowManagerPolicy: boolean isKeyguardOccluded()>();

        if $z3 == 0 goto label14;

        $i11 = r1.<android.view.WindowManager$LayoutParams: int flags>;

        $i12 = $i11 & -1048577;

        r1.<android.view.WindowManager$LayoutParams: int flags> = $i12;

        goto label14;

     label10:
        $i7 = r1.<android.view.WindowManager$LayoutParams: int flags>;

        $i8 = $i7 | 24;

        r1.<android.view.WindowManager$LayoutParams: int flags> = $i8;

        $i9 = r1.<android.view.WindowManager$LayoutParams: int flags>;

        $i10 = $i9 & -262145;

        r1.<android.view.WindowManager$LayoutParams: int flags> = $i10;

        goto label14;

     label11:
        r1.<android.view.WindowManager$LayoutParams: int layoutInDisplayCutoutMode> = 3;

        goto label14;

     label12:
        $z1 = virtualinvoke r1.<android.view.WindowManager$LayoutParams: boolean isFullscreen()>();

        if $z1 == 0 goto label14;

        $r3 = r17.<com.android.server.wm.WindowState: com.android.server.wm.ActivityRecord mActivityRecord>;

        if $r3 == null goto label14;

        $r4 = r17.<com.android.server.wm.WindowState: com.android.server.wm.ActivityRecord mActivityRecord>;

        $z2 = virtualinvoke $r4.<com.android.server.wm.ActivityRecord: boolean fillsParent()>();

        if $z2 == 0 goto label14;

        $r5 = r17.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i3 = $r5.<android.view.WindowManager$LayoutParams: int privateFlags>;

        $i4 = $i3 & 131072;

        if $i4 == 0 goto label14;

        $i5 = virtualinvoke r1.<android.view.WindowManager$LayoutParams: int getFitInsetsTypes()>();

        if $i5 != 0 goto label13;

        goto label14;

     label13:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal attributes: Main activity window that isn\'t translucent trying to fit insets: ");

        $i6 = virtualinvoke r1.<android.view.WindowManager$LayoutParams: int getFitInsetsTypes()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" attrs=");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = new java.lang.RuntimeException;

        $r12 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>($r12);

        throw $r11;

     label14:
        return;
    }

    public void applyPostLayoutPolicyLw(com.android.server.wm.WindowState, android.view.WindowManager$LayoutParams, com.android.server.wm.WindowState, com.android.server.wm.WindowState)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.WindowState r1, r2, r3, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r14, $r15, $r16, r17, $r18;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, z12, z13, z14, z15, $z16;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        com.android.server.wm.WindowManagerService $r4;
        com.android.server.policy.WindowManagerPolicy $r5;
        android.view.WindowManager$LayoutParams r12;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 := @parameter0: com.android.server.wm.WindowState;

        r12 := @parameter1: android.view.WindowManager$LayoutParams;

        r2 := @parameter2: com.android.server.wm.WindowState;

        r3 := @parameter3: com.android.server.wm.WindowState;

        z0 = virtualinvoke r1.<com.android.server.wm.WindowState: boolean canAffectSystemUiFlags()>();

        $r4 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowManagerService mService>;

        $r5 = $r4.<com.android.server.wm.WindowManagerService: com.android.server.policy.WindowManagerPolicy mPolicy>;

        interfaceinvoke $r5.<com.android.server.policy.WindowManagerPolicy: void applyKeyguardPolicyLw(com.android.server.policy.WindowManagerPolicy$WindowState,com.android.server.policy.WindowManagerPolicy$WindowState)>(r1, r3);

        i0 = staticinvoke <com.android.server.wm.PolicyControl: int getWindowFlags(com.android.server.wm.WindowState,android.view.WindowManager$LayoutParams)>(r1, r12);

        $r6 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopFullscreenOpaqueWindowState>;

        if $r6 != null goto label01;

        if z0 == 0 goto label01;

        $i6 = r12.<android.view.WindowManager$LayoutParams: int type>;

        if $i6 != 2011 goto label01;

        r0.<com.android.server.wm.DisplayPolicy: boolean mForcingShowNavBar> = 1;

        $i7 = virtualinvoke r1.<com.android.server.wm.WindowState: int getSurfaceLayer()>();

        r0.<com.android.server.wm.DisplayPolicy: int mForcingShowNavBarLayer> = $i7;

     label01:
        i8 = r12.<android.view.WindowManager$LayoutParams: int type>;

        z12 = 0;

        if i8 < 1 goto label02;

        $i5 = r12.<android.view.WindowManager$LayoutParams: int type>;

        if $i5 >= 2000 goto label02;

        z13 = 1;

        goto label03;

     label02:
        z13 = 0;

     label03:
        i1 = virtualinvoke r1.<com.android.server.wm.WindowState: int getWindowingMode()>();

        if i1 == 1 goto label04;

        if i1 != 4 goto label05;

     label04:
        z12 = 1;

     label05:
        z14 = z13;

        $r13 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopFullscreenOpaqueWindowState>;

        if $r13 != null goto label10;

        z14 = z13;

        if z0 == 0 goto label10;

        $i3 = i0 & 2048;

        if $i3 == 0 goto label06;

        r0.<com.android.server.wm.DisplayPolicy: boolean mForceStatusBar> = 1;

     label06:
        z15 = z13;

        $z7 = virtualinvoke r1.<com.android.server.wm.WindowState: boolean isDreamWindow()>();

        if $z7 == 0 goto label08;

        $z9 = r0.<com.android.server.wm.DisplayPolicy: boolean mDreamingLockscreen>;

        if $z9 == 0 goto label07;

        z15 = z13;

        $z10 = virtualinvoke r1.<com.android.server.wm.WindowState: boolean isVisibleLw()>();

        if $z10 == 0 goto label08;

        z15 = z13;

        $z11 = virtualinvoke r1.<com.android.server.wm.WindowState: boolean hasDrawnLw()>();

        if $z11 == 0 goto label08;

     label07:
        r0.<com.android.server.wm.DisplayPolicy: boolean mShowingDream> = 1;

        z15 = 1;

     label08:
        z14 = z15;

        if z15 == 0 goto label10;

        z14 = z15;

        if r2 != null goto label10;

        z14 = z15;

        $z8 = virtualinvoke r12.<android.view.WindowManager$LayoutParams: boolean isFullscreen()>();

        if $z8 == 0 goto label10;

        z14 = z15;

        if z12 == 0 goto label10;

        r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopFullscreenOpaqueWindowState> = r1;

        $r11 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopFullscreenOpaqueOrDimmingWindowState>;

        if $r11 != null goto label09;

        r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopFullscreenOpaqueOrDimmingWindowState> = r1;

     label09:
        z14 = z15;

        $i4 = i0 & 1;

        if $i4 == 0 goto label10;

        r0.<com.android.server.wm.DisplayPolicy: boolean mAllowLockscreenWhenOn> = 1;

        z14 = z15;

     label10:
        if z0 == 0 goto label12;

        $i2 = r12.<android.view.WindowManager$LayoutParams: int type>;

        if $i2 != 2031 goto label12;

        $r8 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopFullscreenOpaqueWindowState>;

        if $r8 != null goto label11;

        r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopFullscreenOpaqueWindowState> = r1;

        $r10 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopFullscreenOpaqueOrDimmingWindowState>;

        if $r10 != null goto label11;

        r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopFullscreenOpaqueOrDimmingWindowState> = r1;

     label11:
        $r14 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopDockedOpaqueWindowState>;

        if $r14 != null goto label12;

        r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopDockedOpaqueWindowState> = r1;

        $r9 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopDockedOpaqueOrDimmingWindowState>;

        if $r9 != null goto label12;

        r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopDockedOpaqueOrDimmingWindowState> = r1;

     label12:
        $r15 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopFullscreenOpaqueOrDimmingWindowState>;

        if $r15 != null goto label13;

        if z0 == 0 goto label13;

        $z6 = virtualinvoke r1.<com.android.server.wm.WindowState: boolean isDimming()>();

        if $z6 == 0 goto label13;

        if z12 == 0 goto label13;

        r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopFullscreenOpaqueOrDimmingWindowState> = r1;

     label13:
        $r16 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopDockedOpaqueWindowState>;

        if $r16 != null goto label14;

        if z0 == 0 goto label14;

        if z14 == 0 goto label14;

        if r2 != null goto label14;

        $z5 = virtualinvoke r12.<android.view.WindowManager$LayoutParams: boolean isFullscreen()>();

        if $z5 == 0 goto label14;

        if i1 != 3 goto label14;

        r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopDockedOpaqueWindowState> = r1;

        $r7 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopDockedOpaqueOrDimmingWindowState>;

        if $r7 != null goto label14;

        r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopDockedOpaqueOrDimmingWindowState> = r1;

     label14:
        $z16 = virtualinvoke r0.<com.android.server.wm.DisplayPolicy: boolean hasNavigationBar()>();

        if $z16 == 0 goto label15;

        r17 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNavigationBar>;

        goto label16;

     label15:
        r17 = null;

     label16:
        $z1 = r0.<com.android.server.wm.DisplayPolicy: boolean mIsFreeformWindowOverlappingWithNavBar>;

        if $z1 != 0 goto label17;

        $z3 = virtualinvoke r1.<com.android.server.wm.WindowState: boolean inFreeformWindowingMode()>();

        if $z3 == 0 goto label17;

        $z4 = staticinvoke <com.android.server.wm.DisplayPolicy: boolean isOverlappingWithNavBar(com.android.server.wm.WindowState,com.android.server.wm.WindowState)>(r1, r17);

        if $z4 == 0 goto label17;

        r0.<com.android.server.wm.DisplayPolicy: boolean mIsFreeformWindowOverlappingWithNavBar> = 1;

     label17:
        $r18 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopDockedOpaqueOrDimmingWindowState>;

        if $r18 != null goto label18;

        if z0 == 0 goto label18;

        $z2 = virtualinvoke r1.<com.android.server.wm.WindowState: boolean isDimming()>();

        if $z2 == 0 goto label18;

        if i1 != 3 goto label18;

        r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopDockedOpaqueOrDimmingWindowState> = r1;

     label18:
        return;
    }

    public boolean areSystemBarsForcedShownLw(com.android.server.wm.WindowState)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.WindowState r1;
        boolean $z0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 := @parameter0: com.android.server.wm.WindowState;

        $z0 = r0.<com.android.server.wm.DisplayPolicy: boolean mForceShowSystemBars>;

        return $z0;
    }

    public void beginLayoutLw(com.android.server.wm.DisplayFrames, int)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.DisplayFrames r1;
        int i0, i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, i11, i12, $i13, $i14;
        boolean z0, $z1, $z2, z3, z4, z5, z6, z7, z8, z9, z10, $z11, $z12, z13, $z14, $z15, $z16;
        com.android.server.wm.DisplayContent $r2, $r9;
        com.android.server.wm.InsetsStateController $r3, $r10;
        android.view.InsetsState $r4;
        android.graphics.Rect $r5, $r7;
        com.android.server.wm.SystemGesturesPointerEventListener $r6, $r8;
        android.view.WindowManager$LayoutParams $r11;
        com.android.server.wm.InsetsSourceProvider r12;
        com.android.server.wm.WindowState r13;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 := @parameter0: com.android.server.wm.DisplayFrames;

        i0 := @parameter1: int;

        virtualinvoke r1.<com.android.server.wm.DisplayFrames: void onBeginLayout()>();

        $r2 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $r3 = virtualinvoke $r2.<com.android.server.wm.DisplayContent: com.android.server.wm.InsetsStateController getInsetsStateController()>();

        $r4 = virtualinvoke $r3.<com.android.server.wm.InsetsStateController: android.view.InsetsState getRawInsetsState()>();

        staticinvoke <com.android.server.wm.DisplayPolicy: void updateInsetsStateForDisplayCutout(com.android.server.wm.DisplayFrames,android.view.InsetsState)>(r1, $r4);

        $r6 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.SystemGesturesPointerEventListener mSystemGestures>;

        $r5 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        $i2 = virtualinvoke $r5.<android.graphics.Rect: int width()>();

        $r6.<com.android.server.wm.SystemGesturesPointerEventListener: int screenWidth> = $i2;

        $r8 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.SystemGesturesPointerEventListener mSystemGestures>;

        $r7 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        $i3 = virtualinvoke $r7.<android.graphics.Rect: int height()>();

        $r8.<com.android.server.wm.SystemGesturesPointerEventListener: int screenHeight> = $i3;

        i1 = r0.<com.android.server.wm.DisplayPolicy: int mLastSystemUiFlags>;

        i11 = r0.<com.android.server.wm.DisplayPolicy: int mLastBehavior>;

        $r9 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $r10 = virtualinvoke $r9.<com.android.server.wm.DisplayContent: com.android.server.wm.InsetsStateController getInsetsStateController()>();

        r12 = virtualinvoke $r10.<com.android.server.wm.InsetsStateController: com.android.server.wm.InsetsSourceProvider peekSourceProvider(int)>(1);

        i12 = <android.view.ViewRootImpl: int sNewInsetsMode>;

        z3 = 0;

        if i12 == 2 goto label02;

        $i10 = i1 & 2;

        if $i10 != 0 goto label01;

        z4 = 1;

        goto label04;

     label01:
        z4 = 0;

        goto label04;

     label02:
        if r12 == null goto label03;

        z4 = virtualinvoke r12.<com.android.server.wm.InsetsSourceProvider: boolean isClientVisible()>();

        goto label04;

     label03:
        z4 = staticinvoke <android.view.InsetsState: boolean getDefaultVisibility(int)>(1);

     label04:
        $i13 = -2147450880 & i1;

        if $i13 == 0 goto label05;

        z5 = 1;

        goto label06;

     label05:
        z5 = 0;

     label06:
        $i4 = i1 & 2048;

        if $i4 != 0 goto label08;

        $i9 = i11 & 1;

        if $i9 == 0 goto label07;

        goto label08;

     label07:
        z6 = 0;

        goto label09;

     label08:
        z6 = 1;

     label09:
        $i14 = i1 & 4096;

        if $i14 != 0 goto label11;

        $i8 = i11 & 2;

        if $i8 == 0 goto label10;

        goto label11;

     label10:
        z7 = 0;

        goto label12;

     label11:
        z7 = 1;

     label12:
        if z6 != 0 goto label14;

        if z7 == 0 goto label13;

        goto label14;

     label13:
        z8 = 0;

        goto label15;

     label14:
        z8 = 1;

     label15:
        if z7 != 0 goto label16;

        z9 = 1;

        goto label17;

     label16:
        z9 = 0;

     label17:
        z0 = z5 & z9;

        $z1 = virtualinvoke r0.<com.android.server.wm.DisplayPolicy: boolean isKeyguardShowing()>();

        if $z1 == 0 goto label18;

        $z2 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: boolean isKeyguardOccluded()>();

        if $z2 != 0 goto label18;

        z10 = 1;

        goto label19;

     label18:
        z10 = 0;

     label19:
        if z10 != 0 goto label20;

        r13 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNotificationShade>;

        if r13 == null goto label20;

        $r11 = virtualinvoke r13.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams getAttrs()>();

        $i6 = $r11.<android.view.WindowManager$LayoutParams: int privateFlags>;

        $i7 = $i6 & 8388608;

        if $i7 == 0 goto label20;

        z3 = 1;

        goto label20;

     label20:
        virtualinvoke r0.<com.android.server.wm.DisplayPolicy: void updateHideNavInputEventReceiver()>();

        $z11 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: boolean canHideNavigationBar()>();

        $z12 = 1 ^ $z11;

        z13 = z4 | $z12;

        $z14 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: boolean layoutNavigationBar(com.android.server.wm.DisplayFrames,int,boolean,boolean,boolean,boolean,android.graphics.Rect)>(r1, i0, z13, z0, z8, z3, null);

        $z15 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: boolean layoutStatusBar(com.android.server.wm.DisplayFrames,int,android.graphics.Rect)>(r1, i1, null);

        $z16 = $z14 | $z15;

        if $z16 == 0 goto label21;

        virtualinvoke r0.<com.android.server.wm.DisplayPolicy: int updateSystemUiVisibilityLw()>();

     label21:
        specialinvoke r0.<com.android.server.wm.DisplayPolicy: void layoutScreenDecorWindows(com.android.server.wm.DisplayFrames,com.android.server.wm.WindowFrames)>(r1, null);

        specialinvoke r0.<com.android.server.wm.DisplayPolicy: void postAdjustDisplayFrames(com.android.server.wm.DisplayFrames)>(r1);

        r0.<com.android.server.wm.DisplayPolicy: boolean mLastNavVisible> = z13;

        r0.<com.android.server.wm.DisplayPolicy: boolean mLastNavTranslucent> = z0;

        r0.<com.android.server.wm.DisplayPolicy: boolean mLastNavAllowedHidden> = z8;

        r0.<com.android.server.wm.DisplayPolicy: boolean mLastNotificationShadeForcesShowingNavigation> = z3;

        return;
    }

    public void beginPostLayoutPolicyLw()
    {
        com.android.server.wm.DisplayPolicy r0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopFullscreenOpaqueWindowState> = null;

        r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopFullscreenOpaqueOrDimmingWindowState> = null;

        r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopDockedOpaqueWindowState> = null;

        r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopDockedOpaqueOrDimmingWindowState> = null;

        r0.<com.android.server.wm.DisplayPolicy: boolean mForceStatusBar> = 0;

        r0.<com.android.server.wm.DisplayPolicy: boolean mForcingShowNavBar> = 0;

        r0.<com.android.server.wm.DisplayPolicy: int mForcingShowNavBarLayer> = -1;

        r0.<com.android.server.wm.DisplayPolicy: boolean mAllowLockscreenWhenOn> = 0;

        r0.<com.android.server.wm.DisplayPolicy: boolean mShowingDream> = 0;

        r0.<com.android.server.wm.DisplayPolicy: boolean mIsFreeformWindowOverlappingWithNavBar> = 0;

        return;
    }

    boolean canToastShowWhenLocked(int)
    {
        com.android.server.wm.DisplayPolicy r0;
        int i0;
        com.android.server.wm._$$Lambda$DisplayPolicy$9vMdRW11iw1rRp_fzUkWacwvib0 $r1;
        com.android.server.wm.DisplayContent $r2;
        boolean $z0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $r1 = new com.android.server.wm._$$Lambda$DisplayPolicy$9vMdRW11iw1rRp_fzUkWacwvib0;

        specialinvoke $r1.<com.android.server.wm._$$Lambda$DisplayPolicy$9vMdRW11iw1rRp_fzUkWacwvib0: void <init>(int)>(i0);

        $z0 = virtualinvoke $r2.<com.android.server.wm.DisplayContent: boolean forAllWindows(com.android.internal.util.ToBooleanFunction,boolean)>($r1, 1);

        return $z0;
    }

    void convertNonDecorInsetsToStableInsets(android.graphics.Rect, int)
    {
        com.android.server.wm.DisplayPolicy r0;
        android.graphics.Rect r1;
        int i0, $i1, $i2, $i3;
        int[] $r2;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 := @parameter0: android.graphics.Rect;

        i0 := @parameter1: int;

        $i2 = r1.<android.graphics.Rect: int top>;

        $r2 = r0.<com.android.server.wm.DisplayPolicy: int[] mStatusBarHeightForRotation>;

        $i1 = $r2[i0];

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i1);

        r1.<android.graphics.Rect: int top> = $i3;

        return;
    }

    void dump(java.lang.String, java.io.PrintWriter)
    {
        com.android.server.wm.DisplayPolicy r0;
        java.lang.StringBuilder $r2, $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.String $r5, $r6, $r19, r26, r29, $r30, $r31, $r32;
        com.android.server.wm.WindowState $r7, $r8, $r9, $r10, $r11, $r20, $r21, $r22, $r23, $r24, $r25, $r33;
        com.android.server.wm.StatusBarController $r12;
        com.android.server.wm.BarController $r13;
        android.os.Handler $r14;
        android.util.PrintWriterPrinter $r15;
        java.io.PrintWriter r27;
        android.os.Looper r34;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r26 := @parameter0: java.lang.String;

        r27 := @parameter1: java.io.PrintWriter;

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>(r26);

        virtualinvoke r27.<java.io.PrintWriter: void println(java.lang.String)>("DisplayPolicy");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        r29 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>(r29);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>("mCarDockEnablesAccelerometer=");

        $z0 = r0.<com.android.server.wm.DisplayPolicy: boolean mCarDockEnablesAccelerometer>;

        virtualinvoke r27.<java.io.PrintWriter: void print(boolean)>($z0);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>(" mDeskDockEnablesAccelerometer=");

        $z1 = r0.<com.android.server.wm.DisplayPolicy: boolean mDeskDockEnablesAccelerometer>;

        virtualinvoke r27.<java.io.PrintWriter: void println(boolean)>($z1);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>(r29);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>("mDockMode=");

        $i0 = r0.<com.android.server.wm.DisplayPolicy: int mDockMode>;

        $r5 = staticinvoke <android.content.Intent: java.lang.String dockStateToString(int)>($i0);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>($r5);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>(" mLidState=");

        $i1 = r0.<com.android.server.wm.DisplayPolicy: int mLidState>;

        $r6 = staticinvoke <com.android.server.policy.WindowManagerPolicy$WindowManagerFuncs: java.lang.String lidStateToString(int)>($i1);

        virtualinvoke r27.<java.io.PrintWriter: void println(java.lang.String)>($r6);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>(r29);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>("mAwake=");

        $z2 = r0.<com.android.server.wm.DisplayPolicy: boolean mAwake>;

        virtualinvoke r27.<java.io.PrintWriter: void print(boolean)>($z2);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>(" mScreenOnEarly=");

        $z3 = r0.<com.android.server.wm.DisplayPolicy: boolean mScreenOnEarly>;

        virtualinvoke r27.<java.io.PrintWriter: void print(boolean)>($z3);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>(" mScreenOnFully=");

        $z4 = r0.<com.android.server.wm.DisplayPolicy: boolean mScreenOnFully>;

        virtualinvoke r27.<java.io.PrintWriter: void println(boolean)>($z4);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>(r29);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>("mKeyguardDrawComplete=");

        $z5 = r0.<com.android.server.wm.DisplayPolicy: boolean mKeyguardDrawComplete>;

        virtualinvoke r27.<java.io.PrintWriter: void print(boolean)>($z5);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>(" mWindowManagerDrawComplete=");

        $z6 = r0.<com.android.server.wm.DisplayPolicy: boolean mWindowManagerDrawComplete>;

        virtualinvoke r27.<java.io.PrintWriter: void println(boolean)>($z6);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>(r29);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>("mHdmiPlugged=");

        $z7 = r0.<com.android.server.wm.DisplayPolicy: boolean mHdmiPlugged>;

        virtualinvoke r27.<java.io.PrintWriter: void println(boolean)>($z7);

        $i2 = r0.<com.android.server.wm.DisplayPolicy: int mLastSystemUiFlags>;

        if $i2 != 0 goto label1;

        $i6 = r0.<com.android.server.wm.DisplayPolicy: int mResettingSystemUiFlags>;

        if $i6 != 0 goto label1;

        $i7 = r0.<com.android.server.wm.DisplayPolicy: int mForceClearedSystemUiFlags>;

        if $i7 == 0 goto label2;

     label1:
        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>(r29);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>("mLastSystemUiFlags=0x");

        $i8 = r0.<com.android.server.wm.DisplayPolicy: int mLastSystemUiFlags>;

        $r30 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i8);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>($r30);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>(" mResettingSystemUiFlags=0x");

        $i9 = r0.<com.android.server.wm.DisplayPolicy: int mResettingSystemUiFlags>;

        $r31 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i9);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>($r31);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>(" mForceClearedSystemUiFlags=0x");

        $i10 = r0.<com.android.server.wm.DisplayPolicy: int mForceClearedSystemUiFlags>;

        $r32 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i10);

        virtualinvoke r27.<java.io.PrintWriter: void println(java.lang.String)>($r32);

     label2:
        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>(r29);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>("mShowingDream=");

        $z16 = r0.<com.android.server.wm.DisplayPolicy: boolean mShowingDream>;

        virtualinvoke r27.<java.io.PrintWriter: void print(boolean)>($z16);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>(" mDreamingLockscreen=");

        $z17 = r0.<com.android.server.wm.DisplayPolicy: boolean mDreamingLockscreen>;

        virtualinvoke r27.<java.io.PrintWriter: void print(boolean)>($z17);

        $r33 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mStatusBar>;

        if $r33 == null goto label3;

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>(r29);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>("mStatusBar=");

        $r25 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mStatusBar>;

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.Object)>($r25);

     label3:
        $r7 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNotificationShade>;

        if $r7 == null goto label4;

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>(r29);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>("mExpandedPanel=");

        $r24 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNotificationShade>;

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.Object)>($r24);

     label4:
        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>(" isKeyguardShowing=");

        $z8 = virtualinvoke r0.<com.android.server.wm.DisplayPolicy: boolean isKeyguardShowing()>();

        virtualinvoke r27.<java.io.PrintWriter: void println(boolean)>($z8);

        $r8 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNavigationBar>;

        if $r8 == null goto label5;

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>(r29);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>("mNavigationBar=");

        $r23 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNavigationBar>;

        virtualinvoke r27.<java.io.PrintWriter: void println(java.lang.Object)>($r23);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>(r29);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>("mNavBarOpacityMode=");

        $i4 = r0.<com.android.server.wm.DisplayPolicy: int mNavBarOpacityMode>;

        virtualinvoke r27.<java.io.PrintWriter: void println(int)>($i4);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>(r29);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>("mNavigationBarCanMove=");

        $z15 = r0.<com.android.server.wm.DisplayPolicy: boolean mNavigationBarCanMove>;

        virtualinvoke r27.<java.io.PrintWriter: void println(boolean)>($z15);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>(r29);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>("mNavigationBarPosition=");

        $i5 = r0.<com.android.server.wm.DisplayPolicy: int mNavigationBarPosition>;

        virtualinvoke r27.<java.io.PrintWriter: void println(int)>($i5);

     label5:
        $r9 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mFocusedWindow>;

        if $r9 == null goto label6;

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>(r29);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>("mFocusedWindow=");

        $r22 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mFocusedWindow>;

        virtualinvoke r27.<java.io.PrintWriter: void println(java.lang.Object)>($r22);

     label6:
        $r10 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopFullscreenOpaqueWindowState>;

        if $r10 == null goto label7;

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>(r29);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>("mTopFullscreenOpaqueWindowState=");

        $r21 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopFullscreenOpaqueWindowState>;

        virtualinvoke r27.<java.io.PrintWriter: void println(java.lang.Object)>($r21);

     label7:
        $r11 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopFullscreenOpaqueOrDimmingWindowState>;

        if $r11 == null goto label8;

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>(r29);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>("mTopFullscreenOpaqueOrDimmingWindowState=");

        $r20 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopFullscreenOpaqueOrDimmingWindowState>;

        virtualinvoke r27.<java.io.PrintWriter: void println(java.lang.Object)>($r20);

     label8:
        $z9 = r0.<com.android.server.wm.DisplayPolicy: boolean mForcingShowNavBar>;

        if $z9 == 0 goto label9;

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>(r29);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>("mForcingShowNavBar=");

        $z14 = r0.<com.android.server.wm.DisplayPolicy: boolean mForcingShowNavBar>;

        virtualinvoke r27.<java.io.PrintWriter: void println(boolean)>($z14);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>(r29);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>("mForcingShowNavBarLayer=");

        $i3 = r0.<com.android.server.wm.DisplayPolicy: int mForcingShowNavBarLayer>;

        virtualinvoke r27.<java.io.PrintWriter: void println(int)>($i3);

     label9:
        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>(r29);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>("mTopIsFullscreen=");

        $z10 = r0.<com.android.server.wm.DisplayPolicy: boolean mTopIsFullscreen>;

        virtualinvoke r27.<java.io.PrintWriter: void println(boolean)>($z10);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>(r29);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>("mForceStatusBar=");

        $z11 = r0.<com.android.server.wm.DisplayPolicy: boolean mForceStatusBar>;

        virtualinvoke r27.<java.io.PrintWriter: void print(boolean)>($z11);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>(r29);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>("mForceShowSystemBarsFromExternal=");

        $z12 = r0.<com.android.server.wm.DisplayPolicy: boolean mForceShowSystemBarsFromExternal>;

        virtualinvoke r27.<java.io.PrintWriter: void print(boolean)>($z12);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>(" mAllowLockscreenWhenOn=");

        $z13 = r0.<com.android.server.wm.DisplayPolicy: boolean mAllowLockscreenWhenOn>;

        virtualinvoke r27.<java.io.PrintWriter: void println(boolean)>($z13);

        $r12 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.StatusBarController mStatusBarController>;

        virtualinvoke $r12.<com.android.server.wm.StatusBarController: void dump(java.io.PrintWriter,java.lang.String)>(r27, r29);

        $r13 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.BarController mNavigationBarController>;

        virtualinvoke $r13.<com.android.server.wm.BarController: void dump(java.io.PrintWriter,java.lang.String)>(r27, r29);

        virtualinvoke r27.<java.io.PrintWriter: void print(java.lang.String)>(r29);

        virtualinvoke r27.<java.io.PrintWriter: void println(java.lang.String)>("Looper state:");

        $r14 = r0.<com.android.server.wm.DisplayPolicy: android.os.Handler mHandler>;

        r34 = virtualinvoke $r14.<android.os.Handler: android.os.Looper getLooper()>();

        $r15 = new android.util.PrintWriterPrinter;

        specialinvoke $r15.<android.util.PrintWriterPrinter: void <init>(java.io.PrintWriter)>(r27);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r34.<android.os.Looper: void dump(android.util.Printer,java.lang.String)>($r15, $r19);

        return;
    }

    public boolean finishKeyguardDrawn()
    {
        com.android.server.wm.DisplayPolicy r0;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 = r0.<com.android.server.wm.DisplayPolicy: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z0 = r0.<com.android.server.wm.DisplayPolicy: boolean mScreenOnEarly>;

        if $z0 == 0 goto label5;

        $z1 = r0.<com.android.server.wm.DisplayPolicy: boolean mKeyguardDrawComplete>;

        if $z1 == 0 goto label3;

     label2:
        goto label5;

     label3:
        r0.<com.android.server.wm.DisplayPolicy: boolean mKeyguardDrawComplete> = 1;

        r0.<com.android.server.wm.DisplayPolicy: boolean mWindowManagerDrawComplete> = 0;

        exitmonitor r1;

     label4:
        return 1;

     label5:
        exitmonitor r1;

     label6:
        return 0;

     label7:
        $r3 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public int finishPostLayoutPolicyLw()
    {
        com.android.server.wm.DisplayPolicy r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, z14, z16, z17, z18, $z19, z20, $z23, z24;
        com.android.server.wm.WindowManagerService $r1, $r3, $r16;
        com.android.server.policy.WindowManagerPolicy $r2, $r17;
        int $i2, $i3, $i5, $i6, i9, i11, $i14, $i15;
        android.view.WindowManager$LayoutParams $r4, $r15;
        com.android.server.wm.StatusBarController $r5, $r6, $r9, $r10, $r13, $r14, r20, $r21;
        com.android.server.wm.WindowState $r7, $r8, r18, r19;
        com.android.server.wm.DisplayContent $r11;
        com.android.server.wm.TaskDisplayArea $r12;
        byte b7, b10, b12, b13;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        b7 = 0;

        z14 = 0;

        $z1 = r0.<com.android.server.wm.DisplayPolicy: boolean mShowingDream>;

        if $z1 != 0 goto label01;

        $r16 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowManagerService mService>;

        $r17 = $r16.<com.android.server.wm.WindowManagerService: com.android.server.policy.WindowManagerPolicy mPolicy>;

        $z13 = interfaceinvoke $r17.<com.android.server.policy.WindowManagerPolicy: boolean isKeyguardShowingAndNotOccluded()>();

        r0.<com.android.server.wm.DisplayPolicy: boolean mDreamingLockscreen> = $z13;

     label01:
        r18 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mStatusBar>;

        if r18 == null goto label15;

        $r4 = virtualinvoke r18.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams getAttrs()>();

        i9 = $r4.<android.view.WindowManager$LayoutParams: int privateFlags>;

        z16 = 1;

        $i3 = i9 & 4096;

        if $i3 == 0 goto label02;

        z17 = 1;

        goto label03;

     label02:
        z17 = 0;

     label03:
        r19 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNotificationShade>;

        if r19 == null goto label04;

        $r15 = virtualinvoke r19.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams getAttrs()>();

        $i5 = $r15.<android.view.WindowManager$LayoutParams: int privateFlags>;

        $i6 = $i5 & 8388608;

        if $i6 == 0 goto label04;

        z18 = 1;

        goto label05;

     label04:
        z18 = 0;

     label05:
        z0 = virtualinvoke r0.<com.android.server.wm.DisplayPolicy: boolean topAppHidesStatusBar()>();

        $z19 = r0.<com.android.server.wm.DisplayPolicy: boolean mForceStatusBar>;

        if $z19 != 0 goto label10;

        if z17 == 0 goto label06;

        goto label10;

     label06:
        b7 = 0;

        z14 = 0;

        z20 = z0;

        $r8 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopFullscreenOpaqueWindowState>;

        if $r8 == null goto label14;

        $r9 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.StatusBarController mStatusBarController>;

        $z8 = virtualinvoke $r9.<com.android.server.wm.StatusBarController: boolean isTransientShowing()>();

        if $z8 == 0 goto label07;

        b7 = 0;

        z14 = z0;

        z20 = z0;

        $r14 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.StatusBarController mStatusBarController>;

        $z12 = virtualinvoke $r14.<com.android.server.wm.StatusBarController: boolean setBarShowingLw(boolean)>(1);

        if $z12 == 0 goto label14;

        b7 = 0 | 1;

        z14 = z0;

        z20 = z0;

        goto label14;

     label07:
        if z0 == 0 goto label08;

        $r11 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $r12 = virtualinvoke $r11.<com.android.server.wm.DisplayContent: com.android.server.wm.TaskDisplayArea getDefaultTaskDisplayArea()>();

        $z10 = virtualinvoke $r12.<com.android.server.wm.TaskDisplayArea: boolean isStackVisible(int)>(3);

        if $z10 != 0 goto label08;

        b7 = 0;

        z14 = z0;

        z20 = z0;

        $r13 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.StatusBarController mStatusBarController>;

        $z11 = virtualinvoke $r13.<com.android.server.wm.StatusBarController: boolean setBarShowingLw(boolean)>(0);

        if $z11 == 0 goto label14;

        b7 = 0 | 1;

        z14 = z0;

        z20 = z0;

        goto label14;

     label08:
        b7 = 0;

        $r10 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.StatusBarController mStatusBarController>;

        $z9 = virtualinvoke $r10.<com.android.server.wm.StatusBarController: boolean setBarShowingLw(boolean)>(1);

        if $z9 == 0 goto label09;

        b7 = 0 | 1;

     label09:
        z20 = 0;

        z14 = z0;

        goto label14;

     label10:
        b10 = 0;

        $r5 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.StatusBarController mStatusBarController>;

        $z4 = virtualinvoke $r5.<com.android.server.wm.StatusBarController: boolean setBarShowingLw(boolean)>(1);

        if $z4 == 0 goto label11;

        b10 = 0 | 1;

     label11:
        $z5 = r0.<com.android.server.wm.DisplayPolicy: boolean mTopIsFullscreen>;

        if $z5 == 0 goto label12;

        $r7 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mStatusBar>;

        $z7 = virtualinvoke $r7.<com.android.server.wm.WindowState: boolean isAnimatingLw()>();

        if $z7 == 0 goto label12;

        goto label13;

     label12:
        z16 = 0;

     label13:
        b7 = b10;

        z14 = z16;

        z20 = z0;

        if z18 == 0 goto label14;

        b7 = b10;

        z14 = z16;

        z20 = z0;

        $r6 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.StatusBarController mStatusBarController>;

        $z6 = virtualinvoke $r6.<com.android.server.wm.StatusBarController: boolean isTransientShowing()>();

        if $z6 == 0 goto label14;

        r20 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.StatusBarController mStatusBarController>;

        i11 = r0.<com.android.server.wm.DisplayPolicy: int mLastSystemUiFlags>;

        virtualinvoke r20.<com.android.server.wm.StatusBarController: int updateVisibilityLw(boolean,int,int)>(0, i11, i11);

        z20 = z0;

        z14 = z16;

        b7 = b10;

     label14:
        $r21 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.StatusBarController mStatusBarController>;

        virtualinvoke $r21.<com.android.server.wm.StatusBarController: void setTopAppHidesStatusBar(boolean)>(z20);

     label15:
        b12 = b7;

        $z23 = r0.<com.android.server.wm.DisplayPolicy: boolean mTopIsFullscreen>;

        if $z23 == z14 goto label17;

        b12 = b7;

        if z14 != 0 goto label16;

        b12 = b7 | 1;

     label16:
        r0.<com.android.server.wm.DisplayPolicy: boolean mTopIsFullscreen> = z14;

     label17:
        b13 = b12;

        $i14 = virtualinvoke r0.<com.android.server.wm.DisplayPolicy: int updateSystemUiVisibilityLw()>();

        $i15 = $i14 & -1073709042;

        if $i15 == 0 goto label18;

        b13 = b12 | 1;

     label18:
        z24 = r0.<com.android.server.wm.DisplayPolicy: boolean mShowingDream>;

        $z2 = r0.<com.android.server.wm.DisplayPolicy: boolean mLastShowingDream>;

        if z24 == $z2 goto label19;

        r0.<com.android.server.wm.DisplayPolicy: boolean mLastShowingDream> = z24;

        $r3 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r3.<com.android.server.wm.WindowManagerService: void notifyShowingDreamChanged()>();

     label19:
        $r1 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowManagerService mService>;

        $r2 = $r1.<com.android.server.wm.WindowManagerService: com.android.server.policy.WindowManagerPolicy mPolicy>;

        $i2 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: int getDisplayId()>();

        $z3 = r0.<com.android.server.wm.DisplayPolicy: boolean mAllowLockscreenWhenOn>;

        interfaceinvoke $r2.<com.android.server.policy.WindowManagerPolicy: void setAllowLockscreenWhenOn(int,boolean)>($i2, $z3);

        return b13;
    }

    public boolean finishScreenTurningOn()
    {
        com.android.server.wm.DisplayPolicy r0;
        java.lang.Object r1;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.lang.Object[] $r3, $r5;
        com.android.server.wm.ProtoLogGroup $r4, $r6;
        java.lang.Boolean $r7, $r8, $r9, $r10, $r11;
        java.lang.Throwable $r12;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 = r0.<com.android.server.wm.DisplayPolicy: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $z5 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_SCREEN_ON_enabled>;

        if $z5 == 0 goto label02;

        z0 = r0.<com.android.server.wm.DisplayPolicy: boolean mAwake>;

        z1 = r0.<com.android.server.wm.DisplayPolicy: boolean mScreenOnEarly>;

        z2 = r0.<com.android.server.wm.DisplayPolicy: boolean mScreenOnFully>;

        z3 = r0.<com.android.server.wm.DisplayPolicy: boolean mKeyguardDrawComplete>;

        z4 = r0.<com.android.server.wm.DisplayPolicy: boolean mWindowManagerDrawComplete>;

        $r6 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_SCREEN_ON>;

        $r5 = newarray (java.lang.Object)[5];

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r5[0] = $r7;

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1);

        $r5[1] = $r8;

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z2);

        $r5[2] = $r9;

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z3);

        $r5[3] = $r10;

        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z4);

        $r5[4] = $r11;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void d(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r6, 1865125884, 1023, null, $r5);

     label02:
        $z6 = r0.<com.android.server.wm.DisplayPolicy: boolean mScreenOnFully>;

        if $z6 != 0 goto label07;

        $z7 = r0.<com.android.server.wm.DisplayPolicy: boolean mScreenOnEarly>;

        if $z7 == 0 goto label07;

        $z8 = r0.<com.android.server.wm.DisplayPolicy: boolean mWindowManagerDrawComplete>;

        if $z8 == 0 goto label07;

        $z9 = r0.<com.android.server.wm.DisplayPolicy: boolean mAwake>;

        if $z9 == 0 goto label04;

        $z11 = r0.<com.android.server.wm.DisplayPolicy: boolean mKeyguardDrawComplete>;

        if $z11 != 0 goto label04;

     label03:
        goto label07;

     label04:
        $z10 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_SCREEN_ON_enabled>;

        if $z10 == 0 goto label05;

        $r4 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_SCREEN_ON>;

        $r3 = (java.lang.Object[]) null;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void i(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r4, 1140424002, 0, null, $r3);

     label05:
        r0.<com.android.server.wm.DisplayPolicy: com.android.server.policy.WindowManagerPolicy$ScreenOnListener mScreenOnListener> = null;

        r0.<com.android.server.wm.DisplayPolicy: boolean mScreenOnFully> = 1;

        exitmonitor r1;

     label06:
        return 1;

     label07:
        exitmonitor r1;

     label08:
        return 0;

     label09:
        $r12 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public boolean finishWindowsDrawn()
    {
        com.android.server.wm.DisplayPolicy r0;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 = r0.<com.android.server.wm.DisplayPolicy: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z0 = r0.<com.android.server.wm.DisplayPolicy: boolean mScreenOnEarly>;

        if $z0 == 0 goto label5;

        $z1 = r0.<com.android.server.wm.DisplayPolicy: boolean mWindowManagerDrawComplete>;

        if $z1 == 0 goto label3;

     label2:
        goto label5;

     label3:
        r0.<com.android.server.wm.DisplayPolicy: boolean mWindowManagerDrawComplete> = 1;

        exitmonitor r1;

     label4:
        return 1;

     label5:
        exitmonitor r1;

     label6:
        return 0;

     label7:
        $r3 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public int focusChangedLw(com.android.server.wm.WindowState, com.android.server.wm.WindowState)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.WindowState r1, r2;
        com.android.server.wm.DisplayContent $r3;
        boolean $z0;
        int $i0, $i1;
        com.android.server.wm.WindowManagerService $r4;
        com.android.server.policy.WindowManagerPolicy $r5;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 := @parameter0: com.android.server.wm.WindowState;

        r2 := @parameter1: com.android.server.wm.WindowState;

        r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mFocusedWindow> = r2;

        r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mLastFocusedWindow> = r1;

        $r3 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $z0 = $r3.<com.android.server.wm.DisplayContent: boolean isDefaultDisplay>;

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowManagerService mService>;

        $r5 = $r4.<com.android.server.wm.WindowManagerService: com.android.server.policy.WindowManagerPolicy mPolicy>;

        interfaceinvoke $r5.<com.android.server.policy.WindowManagerPolicy: void onDefaultDisplayFocusChangedLw(com.android.server.policy.WindowManagerPolicy$WindowState)>(r2);

     label1:
        $i0 = virtualinvoke r0.<com.android.server.wm.DisplayPolicy: int updateSystemUiVisibilityLw()>();

        $i1 = $i0 & -1073709042;

        if $i1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public int getConfigDisplayHeight(int, int, int, int, android.view.DisplayCutout)
    {
        com.android.server.wm.DisplayPolicy r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, i9;
        android.view.DisplayCutout r1;
        int[] $r2;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: android.view.DisplayCutout;

        $r2 = r0.<com.android.server.wm.DisplayPolicy: int[] mStatusBarHeightForRotation>;

        i4 = $r2[i2];

        i9 = i4;

        if r1 == null goto label1;

        $i7 = virtualinvoke r1.<android.view.DisplayCutout: int getSafeInsetTop()>();

        $i8 = i4 - $i7;

        i9 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i8);

     label1:
        $i5 = virtualinvoke r0.<com.android.server.wm.DisplayPolicy: int getNonDecorDisplayHeight(int,int,int,int,android.view.DisplayCutout)>(i0, i1, i2, i3, r1);

        $i6 = $i5 - i9;

        return $i6;
    }

    public int getConfigDisplayWidth(int, int, int, int, android.view.DisplayCutout)
    {
        com.android.server.wm.DisplayPolicy r0;
        int i0, i1, i2, i3, $i4;
        android.view.DisplayCutout r1;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: android.view.DisplayCutout;

        $i4 = virtualinvoke r0.<com.android.server.wm.DisplayPolicy: int getNonDecorDisplayWidth(int,int,int,int,android.view.DisplayCutout)>(i0, i1, i2, i3, r1);

        return $i4;
    }

    android.content.Context getContext()
    {
        com.android.server.wm.DisplayPolicy r0;
        android.content.Context $r1;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $r1 = r0.<com.android.server.wm.DisplayPolicy: android.content.Context mContext>;

        return $r1;
    }

    android.content.res.Resources getCurrentUserResources()
    {
        com.android.server.wm.DisplayPolicy r0;
        android.content.res.Resources $r1, $r2;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $r1 = r0.<com.android.server.wm.DisplayPolicy: android.content.res.Resources mCurrentUserResources>;

        if $r1 != null goto label1;

        specialinvoke r0.<com.android.server.wm.DisplayPolicy: void updateCurrentUserResources()>();

     label1:
        $r2 = r0.<com.android.server.wm.DisplayPolicy: android.content.res.Resources mCurrentUserResources>;

        return $r2;
    }

    public int getDockMode()
    {
        com.android.server.wm.DisplayPolicy r0;
        int $i0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $i0 = r0.<com.android.server.wm.DisplayPolicy: int mDockMode>;

        return $i0;
    }

    boolean getForceShowSystemBars()
    {
        com.android.server.wm.DisplayPolicy r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $z0 = r0.<com.android.server.wm.DisplayPolicy: boolean mForceShowSystemBarsFromExternal>;

        return $z0;
    }

    public android.graphics.Insets getForwardedInsets()
    {
        com.android.server.wm.DisplayPolicy r0;
        android.graphics.Insets $r1;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $r1 = r0.<com.android.server.wm.DisplayPolicy: android.graphics.Insets mForwardedInsets>;

        return $r1;
    }

    com.android.internal.util.function.TriConsumer getImeSourceFrameProvider()
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm._$$Lambda$DisplayPolicy$fwCI8IxKb1uS701UG_ckKN4Wwsc $r1;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $r1 = new com.android.server.wm._$$Lambda$DisplayPolicy$fwCI8IxKb1uS701UG_ckKN4Wwsc;

        specialinvoke $r1.<com.android.server.wm._$$Lambda$DisplayPolicy$fwCI8IxKb1uS701UG_ckKN4Wwsc: void <init>(com.android.server.wm.DisplayPolicy)>(r0);

        return $r1;
    }

    com.android.server.wm.InsetsPolicy getInsetsPolicy()
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.DisplayContent $r1;
        com.android.server.wm.InsetsPolicy $r2;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $r1 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $r2 = virtualinvoke $r1.<com.android.server.wm.DisplayContent: com.android.server.wm.InsetsPolicy getInsetsPolicy()>();

        return $r2;
    }

    boolean getLayoutHint(android.view.WindowManager$LayoutParams, com.android.server.wm.WindowToken, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect, android.view.DisplayCutout$ParcelableWrapper)
    {
        com.android.server.wm.DisplayPolicy r0;
        android.graphics.Rect r1, r2, r3, $r6, $r8, $r9, $r13, r18, r20, r21;
        android.view.DisplayCutout$ParcelableWrapper r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, $i14;
        com.android.server.wm.DisplayContent $r5;
        android.view.DisplayCutout $r7, $r12;
        boolean $z0, $z2, $z4, $z5, z6, z7, z8, z9, z10;
        com.android.server.wm.utils.WmDisplayCutout $r10, $r11;
        android.view.WindowManager$LayoutParams r14;
        com.android.server.wm.WindowToken r15;
        com.android.server.wm.ActivityRecord r16;
        com.android.server.wm.Task r17;
        com.android.server.wm.DisplayFrames r19;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r14 := @parameter0: android.view.WindowManager$LayoutParams;

        r15 := @parameter1: com.android.server.wm.WindowToken;

        r1 := @parameter2: android.graphics.Rect;

        r2 := @parameter3: android.graphics.Rect;

        r3 := @parameter4: android.graphics.Rect;

        r4 := @parameter5: android.view.DisplayCutout$ParcelableWrapper;

        i0 = staticinvoke <com.android.server.wm.PolicyControl: int getWindowFlags(com.android.server.wm.WindowState,android.view.WindowManager$LayoutParams)>(null, r14);

        i12 = r14.<android.view.WindowManager$LayoutParams: int privateFlags>;

        i13 = staticinvoke <com.android.server.wm.PolicyControl: int getSystemUiVisibility(com.android.server.wm.WindowState,android.view.WindowManager$LayoutParams)>(null, r14);

        $i2 = staticinvoke <com.android.server.wm.DisplayPolicy: int getImpliedSysUiFlagsForLayout(android.view.WindowManager$LayoutParams)>(r14);

        i1 = $i2 | i13;

        $i3 = i0 & 256;

        if $i3 == 0 goto label01;

        z6 = 1;

        goto label02;

     label01:
        z6 = 0;

     label02:
        if z6 == 0 goto label03;

        $i11 = 65536 & i0;

        if $i11 == 0 goto label03;

        z7 = 1;

        goto label04;

     label03:
        z7 = 0;

     label04:
        $i14 = 4194304 & i12;

        if $i14 == 0 goto label05;

        z8 = 1;

        goto label06;

     label05:
        z8 = 0;

     label06:
        if r15 == null goto label07;

        $z5 = virtualinvoke r15.<com.android.server.wm.WindowToken: boolean isFixedRotationTransforming()>();

        if $z5 == 0 goto label07;

        z9 = 1;

        goto label08;

     label07:
        z9 = 0;

     label08:
        if r15 == null goto label09;

        r16 = virtualinvoke r15.<com.android.server.wm.WindowToken: com.android.server.wm.ActivityRecord asActivityRecord()>();

        goto label10;

     label09:
        r16 = null;

     label10:
        if r16 == null goto label11;

        r17 = virtualinvoke r16.<com.android.server.wm.ActivityRecord: com.android.server.wm.Task getTask()>();

        goto label12;

     label11:
        r17 = null;

     label12:
        if z9 == 0 goto label13;

        r18 = virtualinvoke r15.<com.android.server.wm.WindowToken: android.graphics.Rect getBounds()>();

        goto label15;

     label13:
        if r17 == null goto label14;

        r18 = virtualinvoke r17.<com.android.server.wm.Task: android.graphics.Rect getBounds()>();

        goto label15;

     label14:
        r18 = null;

     label15:
        if z9 == 0 goto label16;

        r19 = virtualinvoke r15.<com.android.server.wm.WindowToken: com.android.server.wm.DisplayFrames getFixedRotationTransformDisplayFrames()>();

        goto label17;

     label16:
        $r5 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        r19 = $r5.<com.android.server.wm.DisplayContent: com.android.server.wm.DisplayFrames mDisplayFrames>;

     label17:
        if z7 == 0 goto label31;

        if z8 != 0 goto label31;

        $i4 = i1 & 512;

        if $i4 != 0 goto label19;

        $i8 = virtualinvoke r14.<android.view.WindowManager$LayoutParams: int getFitInsetsTypes()>();

        $i9 = staticinvoke <android.view.WindowInsets$Type: int navigationBars()>();

        $i10 = $i8 & $i9;

        if $i10 != 0 goto label18;

        goto label19;

     label18:
        $r13 = r19.<com.android.server.wm.DisplayFrames: android.graphics.Rect mRestricted>;

        virtualinvoke r1.<android.graphics.Rect: void set(android.graphics.Rect)>($r13);

        goto label20;

     label19:
        $r9 = r19.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        virtualinvoke r1.<android.graphics.Rect: void set(android.graphics.Rect)>($r9);

     label20:
        if r17 == null goto label21;

        $z4 = virtualinvoke r17.<com.android.server.wm.Task: boolean isFloating()>();

        if $z4 == 0 goto label21;

        z10 = 1;

        goto label22;

     label21:
        z10 = 0;

     label22:
        if z10 == 0 goto label23;

        r20 = null;

        goto label24;

     label23:
        r20 = r19.<com.android.server.wm.DisplayFrames: android.graphics.Rect mStable>;

     label24:
        if z10 == 0 goto label25;

        r21 = null;

        goto label29;

     label25:
        $i5 = i1 & 256;

        if $i5 == 0 goto label27;

        $i7 = i0 & 1024;

        if $i7 == 0 goto label26;

        r21 = r19.<com.android.server.wm.DisplayFrames: android.graphics.Rect mStableFullscreen>;

        goto label29;

     label26:
        r21 = r19.<com.android.server.wm.DisplayFrames: android.graphics.Rect mStable>;

        goto label29;

     label27:
        $i6 = i0 & 1024;

        if $i6 == 0 goto label28;

        r21 = r19.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        goto label29;

     label28:
        r21 = r19.<com.android.server.wm.DisplayFrames: android.graphics.Rect mCurrent>;

     label29:
        if r18 == null goto label30;

        virtualinvoke r1.<android.graphics.Rect: boolean intersect(android.graphics.Rect)>(r18);

     label30:
        staticinvoke <com.android.server.wm.utils.InsetUtils: void insetsBetweenFrames(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>(r1, r21, r2);

        staticinvoke <com.android.server.wm.utils.InsetUtils: void insetsBetweenFrames(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>(r1, r20, r3);

        $r10 = r19.<com.android.server.wm.DisplayFrames: com.android.server.wm.utils.WmDisplayCutout mDisplayCutout>;

        $r11 = virtualinvoke $r10.<com.android.server.wm.utils.WmDisplayCutout: com.android.server.wm.utils.WmDisplayCutout calculateRelativeTo(android.graphics.Rect)>(r1);

        $r12 = virtualinvoke $r11.<com.android.server.wm.utils.WmDisplayCutout: android.view.DisplayCutout getDisplayCutout()>();

        virtualinvoke r4.<android.view.DisplayCutout$ParcelableWrapper: void set(android.view.DisplayCutout)>($r12);

        $z2 = r0.<com.android.server.wm.DisplayPolicy: boolean mForceShowSystemBars>;

        return $z2;

     label31:
        if z6 == 0 goto label32;

        $r8 = r19.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        virtualinvoke r1.<android.graphics.Rect: void set(android.graphics.Rect)>($r8);

        goto label33;

     label32:
        $r6 = r19.<com.android.server.wm.DisplayFrames: android.graphics.Rect mStable>;

        virtualinvoke r1.<android.graphics.Rect: void set(android.graphics.Rect)>($r6);

     label33:
        if r18 == null goto label34;

        virtualinvoke r1.<android.graphics.Rect: boolean intersect(android.graphics.Rect)>(r18);

     label34:
        virtualinvoke r2.<android.graphics.Rect: void setEmpty()>();

        virtualinvoke r3.<android.graphics.Rect: void setEmpty()>();

        $r7 = <android.view.DisplayCutout: android.view.DisplayCutout NO_CUTOUT>;

        virtualinvoke r4.<android.view.DisplayCutout$ParcelableWrapper: void set(android.view.DisplayCutout)>($r7);

        $z0 = r0.<com.android.server.wm.DisplayPolicy: boolean mForceShowSystemBars>;

        return $z0;
    }

    public int getLidState()
    {
        com.android.server.wm.DisplayPolicy r0;
        int $i0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $i0 = r0.<com.android.server.wm.DisplayPolicy: int mLidState>;

        return $i0;
    }

    public int getNavBarPosition()
    {
        com.android.server.wm.DisplayPolicy r0;
        int $i0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $i0 = r0.<com.android.server.wm.DisplayPolicy: int mNavigationBarPosition>;

        return $i0;
    }

    com.android.server.wm.WindowState getNavigationBar()
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.WindowState $r1;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $r1 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNavigationBar>;

        return $r1;
    }

    public int getNonDecorDisplayHeight(int, int, int, int, android.view.DisplayCutout)
    {
        com.android.server.wm.DisplayPolicy r0;
        int i0, i1, i2, $i4, $i5, $i6, $i7, $i8, i9, i10, i11;
        android.view.DisplayCutout r1;
        boolean $z0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        i9 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r1 := @parameter4: android.view.DisplayCutout;

        i10 = i0;

        $z0 = virtualinvoke r0.<com.android.server.wm.DisplayPolicy: boolean hasNavigationBar()>();

        if $z0 == 0 goto label1;

        i10 = i0;

        $i7 = virtualinvoke r0.<com.android.server.wm.DisplayPolicy: int navigationBarPosition(int,int,int)>(i9, i0, i1);

        if $i7 != 4 goto label1;

        $i8 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: int getNavigationBarHeight(int,int)>(i1, i2);

        i10 = i0 - $i8;

     label1:
        i11 = i10;

        if r1 == null goto label2;

        $i4 = virtualinvoke r1.<android.view.DisplayCutout: int getSafeInsetTop()>();

        $i5 = virtualinvoke r1.<android.view.DisplayCutout: int getSafeInsetBottom()>();

        $i6 = $i4 + $i5;

        i11 = i10 - $i6;

     label2:
        return i11;
    }

    public int getNonDecorDisplayWidth(int, int, int, int, android.view.DisplayCutout)
    {
        com.android.server.wm.DisplayPolicy r0;
        int i0, i1, i2, $i4, $i5, $i6, $i7, i8, i9, i10, i11;
        android.view.DisplayCutout r1;
        boolean $z0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        i8 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r1 := @parameter4: android.view.DisplayCutout;

        i9 = i8;

        $z0 = virtualinvoke r0.<com.android.server.wm.DisplayPolicy: boolean hasNavigationBar()>();

        if $z0 == 0 goto label2;

        i10 = virtualinvoke r0.<com.android.server.wm.DisplayPolicy: int navigationBarPosition(int,int,int)>(i8, i0, i1);

        if i10 == 1 goto label1;

        i9 = i8;

        if i10 != 2 goto label2;

     label1:
        $i7 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: int getNavigationBarWidth(int,int)>(i1, i2);

        i9 = i8 - $i7;

     label2:
        i11 = i9;

        if r1 == null goto label3;

        $i4 = virtualinvoke r1.<android.view.DisplayCutout: int getSafeInsetLeft()>();

        $i5 = virtualinvoke r1.<android.view.DisplayCutout: int getSafeInsetRight()>();

        $i6 = $i4 + $i5;

        i11 = i9 - $i6;

     label3:
        return i11;
    }

    public void getNonDecorInsetsLw(int, int, int, android.view.DisplayCutout, android.graphics.Rect)
    {
        com.android.server.wm.DisplayPolicy r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19;
        android.view.DisplayCutout r1;
        android.graphics.Rect r2;
        boolean $z0;
        com.android.server.wm.WindowManagerService $r3;
        com.android.server.policy.WindowManagerPolicy $r4;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        i0 := @parameter0: int;

        i18 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: android.view.DisplayCutout;

        r2 := @parameter4: android.graphics.Rect;

        virtualinvoke r2.<android.graphics.Rect: void setEmpty()>();

        $z0 = virtualinvoke r0.<com.android.server.wm.DisplayPolicy: boolean hasNavigationBar()>();

        if $z0 == 0 goto label3;

        $r3 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowManagerService mService>;

        $r4 = $r3.<com.android.server.wm.WindowManagerService: com.android.server.policy.WindowManagerPolicy mPolicy>;

        i2 = interfaceinvoke $r4.<com.android.server.policy.WindowManagerPolicy: int getUiMode()>();

        i19 = virtualinvoke r0.<com.android.server.wm.DisplayPolicy: int navigationBarPosition(int,int,int)>(i18, i1, i0);

        if i19 != 4 goto label1;

        $i17 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: int getNavigationBarHeight(int,int)>(i0, i2);

        r2.<android.graphics.Rect: int bottom> = $i17;

        goto label3;

     label1:
        if i19 != 2 goto label2;

        $i16 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: int getNavigationBarWidth(int,int)>(i0, i2);

        r2.<android.graphics.Rect: int right> = $i16;

        goto label3;

     label2:
        if i19 != 1 goto label3;

        $i15 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: int getNavigationBarWidth(int,int)>(i0, i2);

        r2.<android.graphics.Rect: int left> = $i15;

     label3:
        if r1 == null goto label4;

        $i3 = r2.<android.graphics.Rect: int left>;

        $i4 = virtualinvoke r1.<android.view.DisplayCutout: int getSafeInsetLeft()>();

        $i5 = $i3 + $i4;

        r2.<android.graphics.Rect: int left> = $i5;

        $i6 = r2.<android.graphics.Rect: int top>;

        $i7 = virtualinvoke r1.<android.view.DisplayCutout: int getSafeInsetTop()>();

        $i8 = $i6 + $i7;

        r2.<android.graphics.Rect: int top> = $i8;

        $i9 = r2.<android.graphics.Rect: int right>;

        $i10 = virtualinvoke r1.<android.view.DisplayCutout: int getSafeInsetRight()>();

        $i11 = $i9 + $i10;

        r2.<android.graphics.Rect: int right> = $i11;

        $i12 = r2.<android.graphics.Rect: int bottom>;

        $i13 = virtualinvoke r1.<android.view.DisplayCutout: int getSafeInsetBottom()>();

        $i14 = $i12 + $i13;

        r2.<android.graphics.Rect: int bottom> = $i14;

     label4:
        return;
    }

    com.android.server.wm.WindowState getNotificationShade()
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.WindowState $r1;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $r1 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNotificationShade>;

        return $r1;
    }

    com.android.server.wm.RefreshRatePolicy getRefreshRatePolicy()
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.RefreshRatePolicy $r1;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $r1 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.RefreshRatePolicy mRefreshRatePolicy>;

        return $r1;
    }

    public com.android.server.policy.WindowManagerPolicy$ScreenOnListener getScreenOnListener()
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.policy.WindowManagerPolicy$ScreenOnListener $r1;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $r1 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.policy.WindowManagerPolicy$ScreenOnListener mScreenOnListener>;

        return $r1;
    }

    public void getStableInsetsLw(int, int, int, android.view.DisplayCutout, android.graphics.Rect)
    {
        com.android.server.wm.DisplayPolicy r0;
        int i0, i1, i2;
        android.view.DisplayCutout r1;
        android.graphics.Rect r2;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: android.view.DisplayCutout;

        r2 := @parameter4: android.graphics.Rect;

        virtualinvoke r2.<android.graphics.Rect: void setEmpty()>();

        virtualinvoke r0.<com.android.server.wm.DisplayPolicy: void getNonDecorInsetsLw(int,int,int,android.view.DisplayCutout,android.graphics.Rect)>(i0, i1, i2, r1, r2);

        virtualinvoke r0.<com.android.server.wm.DisplayPolicy: void convertNonDecorInsetsToStableInsets(android.graphics.Rect,int)>(r2, i0);

        return;
    }

    com.android.server.wm.WindowState getStatusBar()
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.WindowState $r1;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $r1 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mStatusBar>;

        return $r1;
    }

    com.android.server.wm.StatusBarController getStatusBarController()
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.StatusBarController $r1;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $r1 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.StatusBarController mStatusBarController>;

        return $r1;
    }

    com.android.server.statusbar.StatusBarManagerInternal getStatusBarManagerInternal()
    {
        com.android.server.wm.DisplayPolicy r0;
        java.lang.Object r1, $r3;
        com.android.server.statusbar.StatusBarManagerInternal $r2, $r4, r6;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 = r0.<com.android.server.wm.DisplayPolicy: java.lang.Object mServiceAcquireLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.statusbar.StatusBarManagerInternal mStatusBarManagerInternal>;

        if $r2 != null goto label2;

        $r3 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/statusbar/StatusBarManagerInternal;");

        $r4 = (com.android.server.statusbar.StatusBarManagerInternal) $r3;

        r0.<com.android.server.wm.DisplayPolicy: com.android.server.statusbar.StatusBarManagerInternal mStatusBarManagerInternal> = $r4;

     label2:
        r6 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.statusbar.StatusBarManagerInternal mStatusBarManagerInternal>;

        exitmonitor r1;

     label3:
        return r6;

     label4:
        $r5 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    android.content.Context getSystemUiContext()
    {
        com.android.server.wm.DisplayPolicy r0;
        android.content.Context $r1;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $r1 = r0.<com.android.server.wm.DisplayPolicy: android.content.Context mUiContext>;

        return $r1;
    }

    com.android.server.wm.WindowState getTopFullscreenOpaqueWindow()
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.WindowState $r1;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $r1 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopFullscreenOpaqueWindowState>;

        return $r1;
    }

    float getWindowCornerRadius()
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.DisplayContent $r1;
        android.view.Display $r2;
        int $i0;
        android.content.Context $r3;
        android.content.res.Resources $r4;
        float f0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $r1 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $r2 = virtualinvoke $r1.<com.android.server.wm.DisplayContent: android.view.Display getDisplay()>();

        $i0 = virtualinvoke $r2.<android.view.Display: int getType()>();

        if $i0 != 1 goto label1;

        $r3 = r0.<com.android.server.wm.DisplayPolicy: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        f0 = staticinvoke <com.android.internal.policy.ScreenDecorationsUtils: float getWindowCornerRadius(android.content.res.Resources)>($r4);

        goto label2;

     label1:
        f0 = 0.0F;

     label2:
        return f0;
    }

    public boolean hasNavigationBar()
    {
        com.android.server.wm.DisplayPolicy r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $z0 = r0.<com.android.server.wm.DisplayPolicy: boolean mHasNavigationBar>;

        return $z0;
    }

    boolean hasSideGestures()
    {
        com.android.server.wm.DisplayPolicy r0;
        boolean $z0, z1;
        int $i0, $i1;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $z0 = r0.<com.android.server.wm.DisplayPolicy: boolean mHasNavigationBar>;

        if $z0 == 0 goto label2;

        $i0 = r0.<com.android.server.wm.DisplayPolicy: int mLeftGestureInset>;

        if $i0 > 0 goto label1;

        $i1 = r0.<com.android.server.wm.DisplayPolicy: int mRightGestureInset>;

        if $i1 <= 0 goto label2;

     label1:
        z1 = 1;

        goto label3;

     label2:
        z1 = 0;

     label3:
        return z1;
    }

    public boolean hasStatusBar()
    {
        com.android.server.wm.DisplayPolicy r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $z0 = r0.<com.android.server.wm.DisplayPolicy: boolean mHasStatusBar>;

        return $z0;
    }

    public boolean isAwake()
    {
        com.android.server.wm.DisplayPolicy r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $z0 = r0.<com.android.server.wm.DisplayPolicy: boolean mAwake>;

        return $z0;
    }

    boolean isCarDockEnablesAccelerometer()
    {
        com.android.server.wm.DisplayPolicy r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $z0 = r0.<com.android.server.wm.DisplayPolicy: boolean mCarDockEnablesAccelerometer>;

        return $z0;
    }

    boolean isDeskDockEnablesAccelerometer()
    {
        com.android.server.wm.DisplayPolicy r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $z0 = r0.<com.android.server.wm.DisplayPolicy: boolean mDeskDockEnablesAccelerometer>;

        return $z0;
    }

    boolean isHdmiPlugged()
    {
        com.android.server.wm.DisplayPolicy r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $z0 = r0.<com.android.server.wm.DisplayPolicy: boolean mHdmiPlugged>;

        return $z0;
    }

    public boolean isKeyguardDrawComplete()
    {
        com.android.server.wm.DisplayPolicy r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $z0 = r0.<com.android.server.wm.DisplayPolicy: boolean mKeyguardDrawComplete>;

        return $z0;
    }

    boolean isKeyguardShowing()
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.WindowManagerService $r1;
        com.android.server.policy.WindowManagerPolicy $r2;
        boolean $z0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $r1 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowManagerService mService>;

        $r2 = $r1.<com.android.server.wm.WindowManagerService: com.android.server.policy.WindowManagerPolicy mPolicy>;

        $z0 = interfaceinvoke $r2.<com.android.server.policy.WindowManagerPolicy: boolean isKeyguardShowing()>();

        return $z0;
    }

    public boolean isPersistentVrModeEnabled()
    {
        com.android.server.wm.DisplayPolicy r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $z0 = r0.<com.android.server.wm.DisplayPolicy: boolean mPersistentVrModeEnabled>;

        return $z0;
    }

    public boolean isScreenOnEarly()
    {
        com.android.server.wm.DisplayPolicy r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $z0 = r0.<com.android.server.wm.DisplayPolicy: boolean mScreenOnEarly>;

        return $z0;
    }

    public boolean isScreenOnFully()
    {
        com.android.server.wm.DisplayPolicy r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $z0 = r0.<com.android.server.wm.DisplayPolicy: boolean mScreenOnFully>;

        return $z0;
    }

    boolean isShowingDreamLw()
    {
        com.android.server.wm.DisplayPolicy r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $z0 = r0.<com.android.server.wm.DisplayPolicy: boolean mShowingDream>;

        return $z0;
    }

    boolean isTopLayoutFullscreen()
    {
        com.android.server.wm.DisplayPolicy r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $z0 = r0.<com.android.server.wm.DisplayPolicy: boolean mTopIsFullscreen>;

        return $z0;
    }

    boolean isWindowExcludedFromContent(com.android.server.wm.WindowState)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.WindowState r1;
        com.android.internal.widget.PointerLocationView $r2, $r3;
        android.view.IWindow $r4;
        android.os.IBinder $r5;
        boolean z0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 := @parameter0: com.android.server.wm.WindowState;

        z0 = 0;

        if r1 == null goto label2;

        $r2 = r0.<com.android.server.wm.DisplayPolicy: com.android.internal.widget.PointerLocationView mPointerLocationView>;

        if $r2 == null goto label2;

        $r4 = r1.<com.android.server.wm.WindowState: android.view.IWindow mClient>;

        $r3 = r0.<com.android.server.wm.DisplayPolicy: com.android.internal.widget.PointerLocationView mPointerLocationView>;

        $r5 = virtualinvoke $r3.<com.android.internal.widget.PointerLocationView: android.os.IBinder getWindowToken()>();

        if $r4 != $r5 goto label1;

        z0 = 1;

     label1:
        return z0;

     label2:
        return 0;
    }

    public boolean isWindowManagerDrawComplete()
    {
        com.android.server.wm.DisplayPolicy r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $z0 = r0.<com.android.server.wm.DisplayPolicy: boolean mWindowManagerDrawComplete>;

        return $z0;
    }

    public void lambda$addWindowLw$2$DisplayPolicy(com.android.server.wm.DisplayFrames, com.android.server.wm.WindowState, android.graphics.Rect)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.DisplayFrames r1;
        com.android.server.wm.WindowState r2;
        android.graphics.Rect r3;
        int $i0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 := @parameter0: com.android.server.wm.DisplayFrames;

        r2 := @parameter1: com.android.server.wm.WindowState;

        r3 := @parameter2: android.graphics.Rect;

        r3.<android.graphics.Rect: int top> = 0;

        $i0 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: int getStatusBarHeight(com.android.server.wm.DisplayFrames)>(r1);

        r3.<android.graphics.Rect: int bottom> = $i0;

        return;
    }

    public void lambda$addWindowLw$3$DisplayPolicy(com.android.server.wm.DisplayFrames, com.android.server.wm.WindowState, android.graphics.Rect)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.DisplayFrames r1;
        com.android.server.wm.WindowState r2;
        android.graphics.Rect r3, $r4, $r5, $r6, $r7, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0;
        com.android.server.wm.DisplayContent $r9;
        android.content.res.Configuration $r10;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 := @parameter0: com.android.server.wm.DisplayFrames;

        r2 := @parameter1: com.android.server.wm.WindowState;

        r3 := @parameter2: android.graphics.Rect;

        $i2 = r1.<com.android.server.wm.DisplayFrames: int mDisplayWidth>;

        $i1 = r1.<com.android.server.wm.DisplayFrames: int mDisplayHeight>;

        $i0 = r1.<com.android.server.wm.DisplayFrames: int mRotation>;

        $i3 = virtualinvoke r0.<com.android.server.wm.DisplayPolicy: int navigationBarPosition(int,int,int)>($i2, $i1, $i0);

        if $i3 != 4 goto label1;

        $z0 = r0.<com.android.server.wm.DisplayPolicy: boolean mNavButtonForcedVisible>;

        if $z0 != 0 goto label1;

        $r5 = <com.android.server.wm.DisplayPolicy: android.graphics.Rect sTmpRect>;

        $r4 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        virtualinvoke $r5.<android.graphics.Rect: void set(android.graphics.Rect)>($r4);

        $r7 = <com.android.server.wm.DisplayPolicy: android.graphics.Rect sTmpRect>;

        $r6 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mDisplayCutoutSafe>;

        virtualinvoke $r7.<android.graphics.Rect: void intersectUnchecked(android.graphics.Rect)>($r6);

        $r8 = <com.android.server.wm.DisplayPolicy: android.graphics.Rect sTmpRect>;

        $i4 = $r8.<android.graphics.Rect: int bottom>;

        $i5 = r1.<com.android.server.wm.DisplayFrames: int mRotation>;

        $r9 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $r10 = virtualinvoke $r9.<com.android.server.wm.DisplayContent: android.content.res.Configuration getConfiguration()>();

        $i6 = $r10.<android.content.res.Configuration: int uiMode>;

        $i7 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: int getNavigationBarHeight(int,int)>($i5, $i6);

        $i8 = $i4 - $i7;

        r3.<android.graphics.Rect: int top> = $i8;

     label1:
        return;
    }

    public void lambda$addWindowLw$5$DisplayPolicy(com.android.server.wm.DisplayFrames, com.android.server.wm.WindowState, android.graphics.Rect)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.DisplayFrames r1;
        com.android.server.wm.WindowState r2;
        android.graphics.Rect r3;
        int $i0, $i1, $i2;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 := @parameter0: com.android.server.wm.DisplayFrames;

        r2 := @parameter1: com.android.server.wm.WindowState;

        r3 := @parameter2: android.graphics.Rect;

        $i1 = r3.<android.graphics.Rect: int top>;

        $i0 = r0.<com.android.server.wm.DisplayPolicy: int mBottomGestureAdditionalInset>;

        $i2 = $i1 - $i0;

        r3.<android.graphics.Rect: int top> = $i2;

        return;
    }

    public void lambda$addWindowLw$6$DisplayPolicy(com.android.server.wm.DisplayFrames, com.android.server.wm.WindowState, android.graphics.Rect)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.DisplayFrames r1;
        com.android.server.wm.WindowState r2;
        android.graphics.Rect r3, $r4;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 := @parameter0: com.android.server.wm.DisplayFrames;

        r2 := @parameter1: com.android.server.wm.WindowState;

        r3 := @parameter2: android.graphics.Rect;

        r3.<android.graphics.Rect: int left> = 0;

        r3.<android.graphics.Rect: int top> = 0;

        $i0 = r1.<com.android.server.wm.DisplayFrames: int mDisplayHeight>;

        r3.<android.graphics.Rect: int bottom> = $i0;

        $r4 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        $i2 = $r4.<android.graphics.Rect: int left>;

        $i1 = r0.<com.android.server.wm.DisplayPolicy: int mLeftGestureInset>;

        $i3 = $i2 + $i1;

        r3.<android.graphics.Rect: int right> = $i3;

        return;
    }

    public void lambda$addWindowLw$7$DisplayPolicy(com.android.server.wm.DisplayFrames, com.android.server.wm.WindowState, android.graphics.Rect)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.DisplayFrames r1;
        com.android.server.wm.WindowState r2;
        android.graphics.Rect r3, $r4;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 := @parameter0: com.android.server.wm.DisplayFrames;

        r2 := @parameter1: com.android.server.wm.WindowState;

        r3 := @parameter2: android.graphics.Rect;

        $r4 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        $i1 = $r4.<android.graphics.Rect: int right>;

        $i0 = r0.<com.android.server.wm.DisplayPolicy: int mRightGestureInset>;

        $i2 = $i1 - $i0;

        r3.<android.graphics.Rect: int left> = $i2;

        r3.<android.graphics.Rect: int top> = 0;

        $i3 = r1.<com.android.server.wm.DisplayFrames: int mDisplayHeight>;

        r3.<android.graphics.Rect: int bottom> = $i3;

        $i4 = r1.<com.android.server.wm.DisplayFrames: int mDisplayWidth>;

        r3.<android.graphics.Rect: int right> = $i4;

        return;
    }

    public void lambda$addWindowLw$8$DisplayPolicy(com.android.server.wm.DisplayFrames, com.android.server.wm.WindowState, android.graphics.Rect)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.DisplayFrames r1;
        com.android.server.wm.WindowState r2;
        android.graphics.Rect r3;
        android.view.WindowManager$LayoutParams $r4;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 := @parameter0: com.android.server.wm.DisplayFrames;

        r2 := @parameter1: com.android.server.wm.WindowState;

        r3 := @parameter2: android.graphics.Rect;

        $r4 = virtualinvoke r2.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams getAttrs()>();

        $i0 = $r4.<android.view.WindowManager$LayoutParams: int flags>;

        $i1 = $i0 & 16;

        if $i1 != 0 goto label1;

        $z0 = r0.<com.android.server.wm.DisplayPolicy: boolean mNavigationBarLetsThroughTaps>;

        if $z0 == 0 goto label2;

     label1:
        virtualinvoke r3.<android.graphics.Rect: void setEmpty()>();

     label2:
        return;
    }

    public void lambda$getImeSourceFrameProvider$9$DisplayPolicy(com.android.server.wm.DisplayFrames, com.android.server.wm.WindowState, android.graphics.Rect)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.DisplayFrames r1;
        com.android.server.wm.WindowState r2, $r4, $r7;
        android.graphics.Rect r3, $r5, $r6, $r8, $r9, $r10, $r11;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 := @parameter0: com.android.server.wm.DisplayFrames;

        r2 := @parameter1: com.android.server.wm.WindowState;

        r3 := @parameter2: android.graphics.Rect;

        $r4 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNavigationBar>;

        if $r4 == null goto label1;

        $i2 = r1.<com.android.server.wm.DisplayFrames: int mDisplayWidth>;

        $i1 = r1.<com.android.server.wm.DisplayFrames: int mDisplayHeight>;

        $i0 = r1.<com.android.server.wm.DisplayFrames: int mRotation>;

        $i3 = virtualinvoke r0.<com.android.server.wm.DisplayPolicy: int navigationBarPosition(int,int,int)>($i2, $i1, $i0);

        if $i3 != 4 goto label1;

        $r6 = <com.android.server.wm.DisplayPolicy: android.graphics.Rect sTmpRect>;

        virtualinvoke $r6.<android.graphics.Rect: void set(android.graphics.Rect)>(r3);

        $r8 = <com.android.server.wm.DisplayPolicy: android.graphics.Rect sTmpRect>;

        $r7 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNavigationBar>;

        $r9 = virtualinvoke $r7.<com.android.server.wm.WindowState: android.graphics.Rect getFrameLw()>();

        virtualinvoke $r8.<android.graphics.Rect: void intersectUnchecked(android.graphics.Rect)>($r9);

        $r10 = virtualinvoke r2.<com.android.server.wm.WindowState: android.graphics.Rect getGivenContentInsetsLw()>();

        virtualinvoke r3.<android.graphics.Rect: void inset(android.graphics.Rect)>($r10);

        $r11 = <com.android.server.wm.DisplayPolicy: android.graphics.Rect sTmpRect>;

        virtualinvoke r3.<android.graphics.Rect: void union(android.graphics.Rect)>($r11);

        goto label2;

     label1:
        $r5 = virtualinvoke r2.<com.android.server.wm.WindowState: android.graphics.Rect getGivenContentInsetsLw()>();

        virtualinvoke r3.<android.graphics.Rect: void inset(android.graphics.Rect)>($r5);

     label2:
        return;
    }

    public void lambda$new$0$DisplayPolicy()
    {
        com.android.server.wm.DisplayPolicy r0;
        java.lang.Object r1;
        com.android.server.wm.SystemGesturesPointerEventListener $r3;
        com.android.server.wm.DisplayContent $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 = r0.<com.android.server.wm.DisplayPolicy: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        virtualinvoke r0.<com.android.server.wm.DisplayPolicy: void onConfigurationChanged()>();

        $r3 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.SystemGesturesPointerEventListener mSystemGestures>;

        virtualinvoke $r3.<com.android.server.wm.SystemGesturesPointerEventListener: void onConfigurationChanged()>();

        $r4 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        virtualinvoke $r4.<com.android.server.wm.DisplayContent: boolean updateSystemGestureExclusion()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void lambda$notifyDisplayReady$13$DisplayPolicy()
    {
        com.android.server.wm.DisplayPolicy r0;
        int i0;
        com.android.server.wallpaper.WallpaperManagerInternal r1;
        com.android.server.statusbar.StatusBarManagerInternal $r2;
        java.lang.Object $r3;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        i0 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: int getDisplayId()>();

        $r2 = virtualinvoke r0.<com.android.server.wm.DisplayPolicy: com.android.server.statusbar.StatusBarManagerInternal getStatusBarManagerInternal()>();

        interfaceinvoke $r2.<com.android.server.statusbar.StatusBarManagerInternal: void onDisplayReady(int)>(i0);

        $r3 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/wallpaper/WallpaperManagerInternal;");

        r1 = (com.android.server.wallpaper.WallpaperManagerInternal) $r3;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.server.wallpaper.WallpaperManagerInternal: void onDisplayReady(int)>(i0);

     label1:
        return;
    }

    public void lambda$simulateLayoutDisplay$10$DisplayPolicy(com.android.server.wm.DisplayFrames, android.graphics.Rect)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.DisplayFrames r1;
        android.graphics.Rect r2;
        com.android.server.wm.DisplayContent $r3;
        android.content.res.Configuration $r4;
        boolean $z0, $z1, $z2, $z3;
        int $i0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 := @parameter0: com.android.server.wm.DisplayFrames;

        r2 := @parameter1: android.graphics.Rect;

        $r3 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $r4 = virtualinvoke $r3.<com.android.server.wm.DisplayContent: android.content.res.Configuration getConfiguration()>();

        $i0 = $r4.<android.content.res.Configuration: int uiMode>;

        $z3 = r0.<com.android.server.wm.DisplayPolicy: boolean mLastNavVisible>;

        $z2 = r0.<com.android.server.wm.DisplayPolicy: boolean mLastNavTranslucent>;

        $z1 = r0.<com.android.server.wm.DisplayPolicy: boolean mLastNavAllowedHidden>;

        $z0 = r0.<com.android.server.wm.DisplayPolicy: boolean mLastNotificationShadeForcesShowingNavigation>;

        specialinvoke r0.<com.android.server.wm.DisplayPolicy: boolean layoutNavigationBar(com.android.server.wm.DisplayFrames,int,boolean,boolean,boolean,boolean,android.graphics.Rect)>(r1, $i0, $z3, $z2, $z1, $z0, r2);

        return;
    }

    public void lambda$simulateLayoutDisplay$11$DisplayPolicy(com.android.server.wm.DisplayFrames, android.graphics.Rect)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.DisplayFrames r1;
        android.graphics.Rect r2;
        int $i0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 := @parameter0: com.android.server.wm.DisplayFrames;

        r2 := @parameter1: android.graphics.Rect;

        $i0 = r0.<com.android.server.wm.DisplayPolicy: int mLastSystemUiFlags>;

        specialinvoke r0.<com.android.server.wm.DisplayPolicy: boolean layoutStatusBar(com.android.server.wm.DisplayFrames,int,android.graphics.Rect)>(r1, $i0, r2);

        return;
    }

    public android.view.InputEventReceiver lambda$updateHideNavInputEventReceiver$12$DisplayPolicy(android.view.InputChannel, android.os.Looper)
    {
        com.android.server.wm.DisplayPolicy r0;
        android.view.InputChannel r1;
        android.os.Looper r2;
        com.android.server.wm.DisplayPolicy$HideNavInputEventReceiver $r3;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 := @parameter0: android.view.InputChannel;

        r2 := @parameter1: android.os.Looper;

        $r3 = new com.android.server.wm.DisplayPolicy$HideNavInputEventReceiver;

        specialinvoke $r3.<com.android.server.wm.DisplayPolicy$HideNavInputEventReceiver: void <init>(com.android.server.wm.DisplayPolicy,android.view.InputChannel,android.os.Looper)>(r0, r1, r2);

        return $r3;
    }

    public void lambda$updateSystemUiVisibilityLw$14$DisplayPolicy(int, java.lang.String, android.util.Pair, int, com.android.internal.view.AppearanceRegion[], boolean, boolean, boolean)
    {
        com.android.server.wm.DisplayPolicy r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        com.android.internal.view.AppearanceRegion[] r1;
        boolean z0, z1, z2;
        com.android.server.statusbar.StatusBarManagerInternal r2;
        java.lang.Object $r3, $r5, $r8, $r10, r15;
        int[] $r4, $r6, $r9, $r11;
        com.android.server.wm.DisplayContent $r7;
        java.lang.Throwable $r12;
        java.lang.String r13;
        android.util.Pair r14;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        i0 := @parameter0: int;

        r13 := @parameter1: java.lang.String;

        r14 := @parameter2: android.util.Pair;

        i1 := @parameter3: int;

        r1 := @parameter4: com.android.internal.view.AppearanceRegion[];

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        z2 := @parameter7: boolean;

        r2 = virtualinvoke r0.<com.android.server.wm.DisplayPolicy: com.android.server.statusbar.StatusBarManagerInternal getStatusBarManagerInternal()>();

        if r2 == null goto label8;

        i2 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: int getDisplayId()>();

        $i3 = 67043328 & i0;

        interfaceinvoke r2.<com.android.server.statusbar.StatusBarManagerInternal: void setDisableFlags(int,int,java.lang.String)>(i2, $i3, r13);

        $r3 = r14.<android.util.Pair: java.lang.Object first>;

        $r4 = (int[]) $r3;

        $i4 = lengthof $r4;

        if $i4 <= 0 goto label1;

        $r10 = r14.<android.util.Pair: java.lang.Object first>;

        $r11 = (int[]) $r10;

        interfaceinvoke r2.<com.android.server.statusbar.StatusBarManagerInternal: void showTransient(int,int[])>(i2, $r11);

     label1:
        $r5 = r14.<android.util.Pair: java.lang.Object second>;

        $r6 = (int[]) $r5;

        $i5 = lengthof $r6;

        if $i5 <= 0 goto label2;

        $r8 = r14.<android.util.Pair: java.lang.Object second>;

        $r9 = (int[]) $r8;

        interfaceinvoke r2.<com.android.server.statusbar.StatusBarManagerInternal: void abortTransient(int,int[])>(i2, $r9);

     label2:
        interfaceinvoke r2.<com.android.server.statusbar.StatusBarManagerInternal: void onSystemBarAppearanceChanged(int,int,com.android.internal.view.AppearanceRegion[],boolean)>(i2, i1, r1, z0);

        interfaceinvoke r2.<com.android.server.statusbar.StatusBarManagerInternal: void topAppWindowChanged(int,boolean,boolean)>(i2, z1, z2);

        r15 = r0.<com.android.server.wm.DisplayPolicy: java.lang.Object mLock>;

        entermonitor r15;

     label3:
        $r7 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $i6 = -805306369 & i0;

        virtualinvoke $r7.<com.android.server.wm.DisplayContent: void statusBarVisibilityChanged(int)>($i6);

        exitmonitor r15;

     label4:
        goto label8;

     label5:
        $r12 := @caughtexception;

     label6:
        exitmonitor r15;

     label7:
        throw $r12;

     label8:
        return;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void layoutWindowLw(com.android.server.wm.WindowState, com.android.server.wm.WindowState, com.android.server.wm.DisplayFrames)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.WindowState r1, $r8, $r9, $r14, $r93, r104, r109, r120, $r121;
        android.view.WindowManager$LayoutParams r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, i58, i59, i60, i61, i62, $i63, i64, i65, i66, i67, i68, i69, i70, i71, i72, i73, i74, i75, i76, i77, $i78, i79, i80, i81, $i82, i84, i85, i86, i87, $i88, $i89, $i90, $i91, i92, i93, i94, $i95, i101, $i102, $i103, i104;
        com.android.server.wm.WindowFrames r3;
        android.graphics.Rect r4, r5, r6, r7, $r11, $r12, $r13, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r94, $r95, $r96, $r97, r107, r108, r111, r114, r115, r116, r117, r118, r119, $r123, $r124, r129, r131, r132, r133, $r135, $r136, $r137, r140, $r141;
        android.util.ArraySet $r10, r110;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, z18, z19, z20, z21, z22, z23, z24, z25, $z26, z27, $z28;
        android.view.InsetsState $r25, $r26, $r100;
        com.android.server.wm.WindowManagerService $r91;
        com.android.server.policy.WindowManagerPolicy $r92;
        com.android.server.wm.DisplayContent $r98;
        com.android.server.wm.InsetsPolicy $r99;
        java.lang.Object $r101;
        java.lang.Integer $r102;
        android.graphics.Insets $r103, r112;
        com.android.server.wm.DisplayFrames r105, r106, r126, r139;
        android.view.InsetsSource r113;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 := @parameter0: com.android.server.wm.WindowState;

        r104 := @parameter1: com.android.server.wm.WindowState;

        r105 := @parameter2: com.android.server.wm.DisplayFrames;

        $r8 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mStatusBar>;

        if r1 != $r8 goto label002;

        $z17 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: boolean canReceiveInput(com.android.server.wm.WindowState)>(r1);

        if $z17 == 0 goto label001;

        goto label002;

     label001:
        goto label125;

     label002:
        $r9 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNavigationBar>;

        if r1 == $r9 goto label125;

        $r10 = r0.<com.android.server.wm.DisplayPolicy: android.util.ArraySet mScreenDecorWindows>;

        $z0 = virtualinvoke $r10.<android.util.ArraySet: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label003;

        goto label125;

     label003:
        r2 = virtualinvoke r1.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams getAttrs()>();

        i58 = r2.<android.view.WindowManager$LayoutParams: int type>;

        i0 = staticinvoke <com.android.server.wm.PolicyControl: int getWindowFlags(com.android.server.wm.WindowState,android.view.WindowManager$LayoutParams)>(r1, r2);

        i59 = r2.<android.view.WindowManager$LayoutParams: int privateFlags>;

        i60 = r2.<android.view.WindowManager$LayoutParams: int softInputMode>;

        i1 = staticinvoke <com.android.server.wm.PolicyControl: int getSystemUiVisibility(com.android.server.wm.WindowState,android.view.WindowManager$LayoutParams)>(null, r2);

        $i2 = staticinvoke <com.android.server.wm.DisplayPolicy: int getImpliedSysUiFlagsForLayout(android.view.WindowManager$LayoutParams)>(r2);

        i61 = i1 | $i2;

        r106 = virtualinvoke r1.<com.android.server.wm.WindowState: com.android.server.wm.DisplayFrames getDisplayFrames(com.android.server.wm.DisplayFrames)>(r105);

        r3 = virtualinvoke r1.<com.android.server.wm.WindowState: com.android.server.wm.WindowFrames getWindowFrames()>();

        $r12 = <com.android.server.wm.DisplayPolicy: android.graphics.Rect sTmpLastParentFrame>;

        $r11 = r3.<com.android.server.wm.WindowFrames: android.graphics.Rect mParentFrame>;

        virtualinvoke $r12.<android.graphics.Rect: void set(android.graphics.Rect)>($r11);

        r4 = r3.<com.android.server.wm.WindowFrames: android.graphics.Rect mParentFrame>;

        r5 = r3.<com.android.server.wm.WindowFrames: android.graphics.Rect mDisplayFrame>;

        r6 = r3.<com.android.server.wm.WindowFrames: android.graphics.Rect mContentFrame>;

        r7 = r3.<com.android.server.wm.WindowFrames: android.graphics.Rect mVisibleFrame>;

        r107 = r3.<com.android.server.wm.WindowFrames: android.graphics.Rect mDecorFrame>;

        r108 = r3.<com.android.server.wm.WindowFrames: android.graphics.Rect mStableFrame>;

        virtualinvoke r107.<android.graphics.Rect: void setEmpty()>();

        virtualinvoke r3.<com.android.server.wm.WindowFrames: void setParentFrameWasClippedByDisplayCutout(boolean)>(0);

        $z1 = virtualinvoke r0.<com.android.server.wm.DisplayPolicy: boolean hasNavigationBar()>();

        if $z1 == 0 goto label004;

        r109 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNavigationBar>;

        if r109 == null goto label004;

        $z16 = virtualinvoke r109.<com.android.server.wm.WindowState: boolean isVisibleLw()>();

        if $z16 == 0 goto label004;

        z18 = 1;

        goto label005;

     label004:
        z18 = 0;

     label005:
        i62 = i60 & 240;

        $i63 = i0 & 256;

        if $i63 != 256 goto label006;

        z19 = 1;

        goto label007;

     label006:
        z19 = 0;

     label007:
        $i3 = i0 & 65536;

        if $i3 != 65536 goto label008;

        z20 = 1;

        goto label009;

     label008:
        z20 = 0;

     label009:
        $r13 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mStable>;

        virtualinvoke r108.<android.graphics.Rect: void set(android.graphics.Rect)>($r13);

        $i4 = <android.view.ViewRootImpl: int sNewInsetsMode>;

        if $i4 != 2 goto label030;

        i64 = virtualinvoke r2.<android.view.WindowManager$LayoutParams: int getFitInsetsTypes()>();

        i65 = virtualinvoke r2.<android.view.WindowManager$LayoutParams: int getFitInsetsSides()>();

        r110 = staticinvoke <android.view.InsetsState: android.util.ArraySet toInternalType(int)>(i64);

        r111 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        r112 = staticinvoke <android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>(0, 0, 0, 0);

        i66 = virtualinvoke r110.<android.util.ArraySet: int size()>();

        i67 = i66 + -1;

     label010:
        if i67 < 0 goto label013;

        $r98 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $r99 = virtualinvoke $r98.<com.android.server.wm.DisplayContent: com.android.server.wm.InsetsPolicy getInsetsPolicy()>();

        $r100 = virtualinvoke $r99.<com.android.server.wm.InsetsPolicy: android.view.InsetsState getInsetsForDispatch(com.android.server.wm.WindowState)>(r1);

        $r101 = virtualinvoke r110.<android.util.ArraySet: java.lang.Object valueAt(int)>(i67);

        $r102 = (java.lang.Integer) $r101;

        $i57 = virtualinvoke $r102.<java.lang.Integer: int intValue()>();

        r113 = virtualinvoke $r100.<android.view.InsetsState: android.view.InsetsSource peekSource(int)>($i57);

        if r113 != null goto label011;

        goto label012;

     label011:
        $z15 = virtualinvoke r2.<android.view.WindowManager$LayoutParams: boolean isFitInsetsIgnoringVisibility()>();

        $r103 = virtualinvoke r113.<android.view.InsetsSource: android.graphics.Insets calculateInsets(android.graphics.Rect,boolean)>(r111, $z15);

        r112 = staticinvoke <android.graphics.Insets: android.graphics.Insets max(android.graphics.Insets,android.graphics.Insets)>(r112, $r103);

     label012:
        i67 = i67 + -1;

        goto label010;

     label013:
        $i48 = i65 & 1;

        if $i48 == 0 goto label014;

        i68 = r112.<android.graphics.Insets: int left>;

        goto label015;

     label014:
        i68 = 0;

     label015:
        $i49 = i65 & 2;

        if $i49 == 0 goto label016;

        i69 = r112.<android.graphics.Insets: int top>;

        goto label017;

     label016:
        i69 = 0;

     label017:
        $i50 = i65 & 4;

        if $i50 == 0 goto label018;

        i70 = r112.<android.graphics.Insets: int right>;

        goto label019;

     label018:
        i70 = 0;

     label019:
        $i51 = i65 & 8;

        if $i51 == 0 goto label020;

        i71 = r112.<android.graphics.Insets: int bottom>;

        goto label021;

     label020:
        i71 = 0;

     label021:
        $i52 = r111.<android.graphics.Rect: int right>;

        $i55 = $i52 - i70;

        $i53 = r111.<android.graphics.Rect: int bottom>;

        $i54 = $i53 - i71;

        virtualinvoke r5.<android.graphics.Rect: void set(int,int,int,int)>(i68, i69, $i55, $i54);

        if r104 != null goto label024;

        virtualinvoke r4.<android.graphics.Rect: void set(android.graphics.Rect)>(r5);

        if i62 == 48 goto label022;

        r114 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mCurrent>;

        goto label023;

     label022:
        r114 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mDock>;

     label023:
        virtualinvoke r7.<android.graphics.Rect: void set(android.graphics.Rect)>(r114);

        goto label027;

     label024:
        $i56 = i0 & 256;

        if $i56 != 0 goto label025;

        r115 = virtualinvoke r104.<com.android.server.wm.WindowState: android.graphics.Rect getFrameLw()>();

        goto label026;

     label025:
        r115 = r5;

     label026:
        virtualinvoke r4.<android.graphics.Rect: void set(android.graphics.Rect)>(r115);

        $r96 = virtualinvoke r104.<com.android.server.wm.WindowState: android.graphics.Rect getVisibleFrameLw()>();

        virtualinvoke r7.<android.graphics.Rect: void set(android.graphics.Rect)>($r96);

     label027:
        if i62 == 16 goto label028;

        r116 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mDock>;

        goto label029;

     label028:
        r116 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mContent>;

     label029:
        virtualinvoke r6.<android.graphics.Rect: void set(android.graphics.Rect)>(r116);

        $r97 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mSystem>;

        virtualinvoke r107.<android.graphics.Rect: void set(android.graphics.Rect)>($r97);

        r117 = r6;

        r118 = r5;

        r119 = r4;

        i72 = i58;

        goto label097;

     label030:
        if i58 != 2011 goto label035;

        $r85 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mDock>;

        virtualinvoke r7.<android.graphics.Rect: void set(android.graphics.Rect)>($r85);

        $r86 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mDock>;

        virtualinvoke r6.<android.graphics.Rect: void set(android.graphics.Rect)>($r86);

        $r87 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mDock>;

        virtualinvoke r5.<android.graphics.Rect: void set(android.graphics.Rect)>($r87);

        $r88 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mDock>;

        virtualinvoke r4.<android.graphics.Rect: void set(android.graphics.Rect)>($r88);

        $r89 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        i73 = $r89.<android.graphics.Rect: int bottom>;

        r5.<android.graphics.Rect: int bottom> = i73;

        r4.<android.graphics.Rect: int bottom> = i73;

        $r90 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mStable>;

        i74 = $r90.<android.graphics.Rect: int bottom>;

        r7.<android.graphics.Rect: int bottom> = i74;

        r6.<android.graphics.Rect: int bottom> = i74;

        r120 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mStatusBar>;

        if r120 == null goto label032;

        $r93 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mFocusedWindow>;

        if $r93 != r120 goto label032;

        $z14 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: boolean canReceiveInput(com.android.server.wm.WindowState)>(r120);

        if $z14 == 0 goto label032;

        i75 = r0.<com.android.server.wm.DisplayPolicy: int mNavigationBarPosition>;

        if i75 != 2 goto label031;

        $r95 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mStable>;

        i76 = $r95.<android.graphics.Rect: int right>;

        r7.<android.graphics.Rect: int right> = i76;

        r6.<android.graphics.Rect: int right> = i76;

        r5.<android.graphics.Rect: int right> = i76;

        r4.<android.graphics.Rect: int right> = i76;

        goto label032;

     label031:
        if i75 != 1 goto label032;

        $r94 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mStable>;

        i77 = $r94.<android.graphics.Rect: int left>;

        r7.<android.graphics.Rect: int left> = i77;

        r6.<android.graphics.Rect: int left> = i77;

        r5.<android.graphics.Rect: int left> = i77;

        r4.<android.graphics.Rect: int left> = i77;

        goto label032;

     label032:
        $i78 = r0.<com.android.server.wm.DisplayPolicy: int mNavigationBarPosition>;

        if $i78 != 4 goto label034;

        i79 = r106.<com.android.server.wm.DisplayFrames: int mRotation>;

        $r91 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowManagerService mService>;

        $r92 = $r91.<com.android.server.wm.WindowManagerService: com.android.server.policy.WindowManagerPolicy mPolicy>;

        i80 = interfaceinvoke $r92.<com.android.server.policy.WindowManagerPolicy: int getUiMode()>();

        $i38 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: int getNavigationBarFrameHeight(int,int)>(i79, i80);

        $i39 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: int getNavigationBarHeight(int,int)>(i79, i80);

        i81 = $i38 - $i39;

        if i81 <= 0 goto label033;

        $i40 = r6.<android.graphics.Rect: int bottom>;

        $i41 = $i40 - i81;

        r6.<android.graphics.Rect: int bottom> = $i41;

        $i42 = r108.<android.graphics.Rect: int bottom>;

        $i43 = $i42 - i81;

        r108.<android.graphics.Rect: int bottom> = $i43;

        $i44 = r7.<android.graphics.Rect: int bottom>;

        $i45 = $i44 - i81;

        r7.<android.graphics.Rect: int bottom> = $i45;

        $i46 = r107.<android.graphics.Rect: int bottom>;

        $i47 = $i46 - i81;

        r107.<android.graphics.Rect: int bottom> = $i47;

        goto label034;

     label033:
        goto label034;

     label034:
        r2.<android.view.WindowManager$LayoutParams: int gravity> = 80;

        r117 = r6;

        r118 = r5;

        r119 = r4;

        i72 = i58;

        goto label097;

     label035:
        if i58 != 2031 goto label039;

        $r80 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        virtualinvoke r5.<android.graphics.Rect: void set(android.graphics.Rect)>($r80);

        $r81 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        virtualinvoke r4.<android.graphics.Rect: void set(android.graphics.Rect)>($r81);

        if i62 == 16 goto label036;

        $r84 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mDock>;

        virtualinvoke r6.<android.graphics.Rect: void set(android.graphics.Rect)>($r84);

        goto label037;

     label036:
        $r82 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mContent>;

        virtualinvoke r6.<android.graphics.Rect: void set(android.graphics.Rect)>($r82);

     label037:
        if i62 == 48 goto label038;

        $r83 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mCurrent>;

        virtualinvoke r7.<android.graphics.Rect: void set(android.graphics.Rect)>($r83);

        r117 = r6;

        r118 = r5;

        r119 = r4;

        i72 = i58;

        goto label097;

     label038:
        virtualinvoke r7.<android.graphics.Rect: void set(android.graphics.Rect)>(r6);

        r117 = r6;

        r118 = r5;

        r119 = r4;

        i72 = i58;

        goto label097;

     label039:
        if i58 != 2013 goto label040;

        specialinvoke r0.<com.android.server.wm.DisplayPolicy: void layoutWallpaper(com.android.server.wm.DisplayFrames,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>(r106, r4, r5, r6);

        r117 = r6;

        r118 = r5;

        r119 = r4;

        i72 = i58;

        goto label097;

     label040:
        $r14 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mStatusBar>;

        if r1 == $r14 goto label094;

        if i58 != 2040 goto label041;

        goto label094;

     label041:
        $r31 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mSystem>;

        virtualinvoke r107.<android.graphics.Rect: void set(android.graphics.Rect)>($r31);

        if i58 < 1 goto label042;

        if i58 > 99 goto label042;

        z21 = 1;

        goto label043;

     label042:
        z21 = 0;

     label043:
        $r121 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopFullscreenOpaqueWindowState>;

        if r1 != $r121 goto label044;

        $z13 = virtualinvoke r1.<com.android.server.wm.WindowState: boolean isAnimatingLw()>();

        if $z13 != 0 goto label044;

        z22 = 1;

        goto label045;

     label044:
        z22 = 0;

     label045:
        if z21 == 0 goto label048;

        if z22 != 0 goto label048;

        $i27 = i61 & 4;

        if $i27 != 0 goto label046;

        $i33 = i0 & 1024;

        if $i33 != 0 goto label046;

        $i34 = 67108864 & i0;

        if $i34 != 0 goto label046;

        $i35 = i0 & -2147483648;

        if $i35 != 0 goto label046;

        $i36 = i59 & 131072;

        if $i36 != 0 goto label046;

        $r79 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mStable>;

        $i37 = $r79.<android.graphics.Rect: int top>;

        r107.<android.graphics.Rect: int top> = $i37;

     label046:
        $i82 = 134217728 & i0;

        if $i82 != 0 goto label047;

        $i28 = i61 & 2;

        if $i28 != 0 goto label047;

        $i29 = i0 & -2147483648;

        if $i29 != 0 goto label048;

        $i30 = i59 & 131072;

        if $i30 != 0 goto label048;

        $r77 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mStable>;

        $i31 = $r77.<android.graphics.Rect: int bottom>;

        r107.<android.graphics.Rect: int bottom> = $i31;

        $r78 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mStable>;

        $i32 = $r78.<android.graphics.Rect: int right>;

        r107.<android.graphics.Rect: int right> = $i32;

        goto label048;

     label047:
        goto label048;

     label048:
        if z19 == 0 goto label069;

        if z20 == 0 goto label069;

        if r104 == null goto label049;

        specialinvoke r0.<com.android.server.wm.DisplayPolicy: void setAttachedWindowFrames(com.android.server.wm.WindowState,int,int,com.android.server.wm.WindowState,boolean,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,com.android.server.wm.DisplayFrames)>(r1, i0, i62, r104, 1, r4, r5, r6, r7, r106);

        r117 = r6;

        r118 = r5;

        r119 = r4;

        i72 = i58;

        goto label097;

     label049:
        if i58 == 2041 goto label055;

        if i58 != 2017 goto label050;

        goto label055;

     label050:
        $i26 = i61 & 512;

        if $i26 == 0 goto label054;

        if i58 < 1 goto label051;

        if i58 <= 1999 goto label053;

     label051:
        if i58 == 2020 goto label053;

        if i58 != 2009 goto label052;

        goto label053;

     label052:
        goto label054;

     label053:
        $r123 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        virtualinvoke r5.<android.graphics.Rect: void set(android.graphics.Rect)>($r123);

        $r124 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        virtualinvoke r4.<android.graphics.Rect: void set(android.graphics.Rect)>($r124);

        goto label062;

     label054:
        $r75 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mRestricted>;

        virtualinvoke r5.<android.graphics.Rect: void set(android.graphics.Rect)>($r75);

        $r76 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mRestricted>;

        virtualinvoke r4.<android.graphics.Rect: void set(android.graphics.Rect)>($r76);

        goto label062;

     label055:
        r126 = r106;

        if z18 == 0 goto label056;

        r129 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mDock>;

        goto label057;

     label056:
        r129 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

     label057:
        i84 = r129.<android.graphics.Rect: int left>;

        r5.<android.graphics.Rect: int left> = i84;

        r4.<android.graphics.Rect: int left> = i84;

        $r65 = r126.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        i85 = $r65.<android.graphics.Rect: int top>;

        r5.<android.graphics.Rect: int top> = i85;

        r4.<android.graphics.Rect: int top> = i85;

        if z18 == 0 goto label058;

        $r74 = r126.<com.android.server.wm.DisplayFrames: android.graphics.Rect mRestricted>;

        i86 = $r74.<android.graphics.Rect: int right>;

        goto label059;

     label058:
        $r66 = r126.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        i86 = $r66.<android.graphics.Rect: int right>;

     label059:
        r5.<android.graphics.Rect: int right> = i86;

        r4.<android.graphics.Rect: int right> = i86;

        if z18 == 0 goto label060;

        $r73 = r126.<com.android.server.wm.DisplayFrames: android.graphics.Rect mRestricted>;

        i87 = $r73.<android.graphics.Rect: int bottom>;

        goto label061;

     label060:
        $r67 = r126.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        i87 = $r67.<android.graphics.Rect: int bottom>;

     label061:
        r5.<android.graphics.Rect: int bottom> = i87;

        r4.<android.graphics.Rect: int bottom> = i87;

     label062:
        $i88 = i0 & 1024;

        if $i88 != 0 goto label066;

        $z12 = virtualinvoke r1.<com.android.server.wm.WindowState: boolean isVoiceInteraction()>();

        if $z12 == 0 goto label063;

        $r72 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mVoiceContent>;

        virtualinvoke r6.<android.graphics.Rect: void set(android.graphics.Rect)>($r72);

        goto label067;

     label063:
        $i25 = <android.view.ViewRootImpl: int sNewInsetsMode>;

        if $i25 != 0 goto label065;

        if i62 == 16 goto label064;

        goto label065;

     label064:
        $r71 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mContent>;

        virtualinvoke r6.<android.graphics.Rect: void set(android.graphics.Rect)>($r71);

        goto label067;

     label065:
        $r70 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mDock>;

        virtualinvoke r6.<android.graphics.Rect: void set(android.graphics.Rect)>($r70);

        goto label067;

     label066:
        $r68 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mRestricted>;

        virtualinvoke r6.<android.graphics.Rect: void set(android.graphics.Rect)>($r68);

     label067:
        specialinvoke r0.<com.android.server.wm.DisplayPolicy: void applyStableConstraints(int,int,android.graphics.Rect,com.android.server.wm.DisplayFrames)>(i61, i0, r6, r106);

        $i89 = <android.view.ViewRootImpl: int sNewInsetsMode>;

        if $i89 != 0 goto label068;

        if i62 == 48 goto label068;

        $r69 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mCurrent>;

        virtualinvoke r7.<android.graphics.Rect: void set(android.graphics.Rect)>($r69);

        r117 = r6;

        r118 = r5;

        r119 = r4;

        i72 = i58;

        goto label097;

     label068:
        virtualinvoke r7.<android.graphics.Rect: void set(android.graphics.Rect)>(r6);

        r117 = r6;

        r118 = r5;

        r119 = r4;

        i72 = i58;

        goto label097;

     label069:
        if z19 != 0 goto label079;

        $i24 = i61 & 1536;

        if $i24 == 0 goto label070;

        goto label079;

     label070:
        if r104 == null goto label071;

        specialinvoke r0.<com.android.server.wm.DisplayPolicy: void setAttachedWindowFrames(com.android.server.wm.WindowState,int,int,com.android.server.wm.WindowState,boolean,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,com.android.server.wm.DisplayFrames)>(r1, i0, i62, r104, 0, r4, r5, r6, r7, r106);

        r117 = r6;

        r118 = r5;

        r119 = r4;

        i72 = i58;

        goto label097;

     label071:
        if i58 != 2041 goto label072;

        r131 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mRestricted>;

        virtualinvoke r6.<android.graphics.Rect: void set(android.graphics.Rect)>(r131);

        r132 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mRestricted>;

        virtualinvoke r5.<android.graphics.Rect: void set(android.graphics.Rect)>(r132);

        r133 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mRestricted>;

        virtualinvoke r4.<android.graphics.Rect: void set(android.graphics.Rect)>(r133);

        r117 = r6;

        r118 = r5;

        r119 = r4;

        i72 = i58;

        goto label097;

     label072:
        if i58 == 2005 goto label078;

        if i58 != 2003 goto label073;

        goto label078;

     label073:
        $r57 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mContent>;

        virtualinvoke r4.<android.graphics.Rect: void set(android.graphics.Rect)>($r57);

        $z11 = virtualinvoke r1.<com.android.server.wm.WindowState: boolean isVoiceInteraction()>();

        if $z11 == 0 goto label074;

        $r63 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mVoiceContent>;

        virtualinvoke r6.<android.graphics.Rect: void set(android.graphics.Rect)>($r63);

        $r64 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mVoiceContent>;

        virtualinvoke r5.<android.graphics.Rect: void set(android.graphics.Rect)>($r64);

        goto label076;

     label074:
        if i62 == 16 goto label075;

        $r61 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mDock>;

        virtualinvoke r6.<android.graphics.Rect: void set(android.graphics.Rect)>($r61);

        $r62 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mDock>;

        virtualinvoke r5.<android.graphics.Rect: void set(android.graphics.Rect)>($r62);

        goto label076;

     label075:
        $r58 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mContent>;

        virtualinvoke r6.<android.graphics.Rect: void set(android.graphics.Rect)>($r58);

        $r59 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mContent>;

        virtualinvoke r5.<android.graphics.Rect: void set(android.graphics.Rect)>($r59);

     label076:
        $i90 = <android.view.ViewRootImpl: int sNewInsetsMode>;

        if $i90 != 0 goto label077;

        if i62 == 48 goto label077;

        $r60 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mCurrent>;

        virtualinvoke r7.<android.graphics.Rect: void set(android.graphics.Rect)>($r60);

        r117 = r6;

        r118 = r5;

        r119 = r4;

        i72 = i58;

        goto label097;

     label077:
        virtualinvoke r7.<android.graphics.Rect: void set(android.graphics.Rect)>(r6);

        r117 = r6;

        r118 = r5;

        r119 = r4;

        i72 = i58;

        goto label097;

     label078:
        $r54 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mStable>;

        virtualinvoke r6.<android.graphics.Rect: void set(android.graphics.Rect)>($r54);

        $r55 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mStable>;

        virtualinvoke r5.<android.graphics.Rect: void set(android.graphics.Rect)>($r55);

        $r56 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mStable>;

        virtualinvoke r4.<android.graphics.Rect: void set(android.graphics.Rect)>($r56);

        r117 = r6;

        r118 = r5;

        r119 = r4;

        i72 = i58;

        goto label097;

     label079:
        if i58 == 2041 goto label091;

        if i58 != 2017 goto label080;

        goto label091;

     label080:
        if i58 == 2019 goto label090;

        if i58 != 2024 goto label081;

        goto label090;

     label081:
        if i58 == 2015 goto label082;

        if i58 != 2036 goto label083;

     label082:
        $i21 = i0 & 1024;

        if $i21 == 0 goto label083;

        $r51 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        virtualinvoke r6.<android.graphics.Rect: void set(android.graphics.Rect)>($r51);

        $r52 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        virtualinvoke r5.<android.graphics.Rect: void set(android.graphics.Rect)>($r52);

        $r53 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        virtualinvoke r4.<android.graphics.Rect: void set(android.graphics.Rect)>($r53);

        goto label092;

     label083:
        if i58 != 2021 goto label084;

        $r48 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        virtualinvoke r6.<android.graphics.Rect: void set(android.graphics.Rect)>($r48);

        $r49 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        virtualinvoke r5.<android.graphics.Rect: void set(android.graphics.Rect)>($r49);

        $r50 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        virtualinvoke r4.<android.graphics.Rect: void set(android.graphics.Rect)>($r50);

        goto label092;

     label084:
        $i22 = i61 & 512;

        if $i22 == 0 goto label086;

        if i58 == 2040 goto label085;

        if i58 == 2005 goto label085;

        if i58 == 2034 goto label085;

        if i58 == 2033 goto label085;

        if i58 < 1 goto label086;

        if i58 > 1999 goto label086;

     label085:
        $r135 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        virtualinvoke r6.<android.graphics.Rect: void set(android.graphics.Rect)>($r135);

        $r136 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        virtualinvoke r5.<android.graphics.Rect: void set(android.graphics.Rect)>($r136);

        $r137 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        virtualinvoke r4.<android.graphics.Rect: void set(android.graphics.Rect)>($r137);

        goto label092;

     label086:
        $i91 = i61 & 1024;

        if $i91 == 0 goto label089;

        $r44 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mRestricted>;

        virtualinvoke r5.<android.graphics.Rect: void set(android.graphics.Rect)>($r44);

        $r45 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mRestricted>;

        virtualinvoke r4.<android.graphics.Rect: void set(android.graphics.Rect)>($r45);

        $i23 = <android.view.ViewRootImpl: int sNewInsetsMode>;

        if $i23 != 0 goto label088;

        if i62 == 16 goto label087;

        goto label088;

     label087:
        $r47 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mContent>;

        virtualinvoke r6.<android.graphics.Rect: void set(android.graphics.Rect)>($r47);

        goto label092;

     label088:
        $r46 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mDock>;

        virtualinvoke r6.<android.graphics.Rect: void set(android.graphics.Rect)>($r46);

        goto label092;

     label089:
        $r41 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mRestricted>;

        virtualinvoke r6.<android.graphics.Rect: void set(android.graphics.Rect)>($r41);

        $r42 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mRestricted>;

        virtualinvoke r5.<android.graphics.Rect: void set(android.graphics.Rect)>($r42);

        $r43 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mRestricted>;

        virtualinvoke r4.<android.graphics.Rect: void set(android.graphics.Rect)>($r43);

        goto label092;

     label090:
        $r39 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        virtualinvoke r5.<android.graphics.Rect: void set(android.graphics.Rect)>($r39);

        $r40 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        virtualinvoke r4.<android.graphics.Rect: void set(android.graphics.Rect)>($r40);

        goto label092;

     label091:
        $r32 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        virtualinvoke r6.<android.graphics.Rect: void set(android.graphics.Rect)>($r32);

        $r33 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        virtualinvoke r5.<android.graphics.Rect: void set(android.graphics.Rect)>($r33);

        $r34 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        virtualinvoke r4.<android.graphics.Rect: void set(android.graphics.Rect)>($r34);

        if z18 == 0 goto label092;

        $r36 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mDock>;

        i92 = $r36.<android.graphics.Rect: int left>;

        r6.<android.graphics.Rect: int left> = i92;

        r5.<android.graphics.Rect: int left> = i92;

        r4.<android.graphics.Rect: int left> = i92;

        $r37 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mRestricted>;

        i93 = $r37.<android.graphics.Rect: int right>;

        r6.<android.graphics.Rect: int right> = i93;

        r5.<android.graphics.Rect: int right> = i93;

        r4.<android.graphics.Rect: int right> = i93;

        $r38 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mRestricted>;

        i94 = $r38.<android.graphics.Rect: int bottom>;

        r6.<android.graphics.Rect: int bottom> = i94;

        r5.<android.graphics.Rect: int bottom> = i94;

        r4.<android.graphics.Rect: int bottom> = i94;

     label092:
        specialinvoke r0.<com.android.server.wm.DisplayPolicy: void applyStableConstraints(int,int,android.graphics.Rect,com.android.server.wm.DisplayFrames)>(i61, i0, r6, r106);

        $i95 = <android.view.ViewRootImpl: int sNewInsetsMode>;

        if $i95 != 0 goto label093;

        if i62 == 48 goto label093;

        $r35 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mCurrent>;

        virtualinvoke r7.<android.graphics.Rect: void set(android.graphics.Rect)>($r35);

        r117 = r6;

        r118 = r5;

        r119 = r4;

        i72 = i58;

        goto label097;

     label093:
        virtualinvoke r7.<android.graphics.Rect: void set(android.graphics.Rect)>(r6);

        r117 = r6;

        r118 = r5;

        r119 = r4;

        i72 = i58;

        goto label097;

     label094:
        r139 = r106;

        $r15 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        virtualinvoke r5.<android.graphics.Rect: void set(android.graphics.Rect)>($r15);

        $r16 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        virtualinvoke r4.<android.graphics.Rect: void set(android.graphics.Rect)>($r16);

        $r17 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mStable>;

        virtualinvoke r6.<android.graphics.Rect: void set(android.graphics.Rect)>($r17);

        $r18 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mStable>;

        virtualinvoke r7.<android.graphics.Rect: void set(android.graphics.Rect)>($r18);

        if i62 != 16 goto label095;

        r117 = r6;

        r118 = r5;

        r119 = r4;

        i72 = i58;

        $i19 = r6.<android.graphics.Rect: int bottom>;

        $r29 = r139.<com.android.server.wm.DisplayFrames: android.graphics.Rect mContent>;

        $i18 = $r29.<android.graphics.Rect: int bottom>;

        if $i19 <= $i18 goto label097;

        $r30 = r139.<com.android.server.wm.DisplayFrames: android.graphics.Rect mContent>;

        $i20 = $r30.<android.graphics.Rect: int bottom>;

        r6.<android.graphics.Rect: int bottom> = $i20;

        r106 = r139;

        r117 = r6;

        r118 = r5;

        r119 = r4;

        i72 = i58;

        goto label097;

     label095:
        $i6 = r6.<android.graphics.Rect: int bottom>;

        $r19 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mDock>;

        $i5 = $r19.<android.graphics.Rect: int bottom>;

        if $i6 <= $i5 goto label096;

        $r28 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mDock>;

        $i17 = $r28.<android.graphics.Rect: int bottom>;

        r6.<android.graphics.Rect: int bottom> = $i17;

     label096:
        r106 = r139;

        r117 = r6;

        r118 = r5;

        r119 = r4;

        i72 = i58;

        $i8 = r7.<android.graphics.Rect: int bottom>;

        $r20 = r139.<com.android.server.wm.DisplayFrames: android.graphics.Rect mContent>;

        $i7 = $r20.<android.graphics.Rect: int bottom>;

        if $i8 <= $i7 goto label097;

        $r27 = r139.<com.android.server.wm.DisplayFrames: android.graphics.Rect mContent>;

        $i16 = $r27.<android.graphics.Rect: int bottom>;

        r7.<android.graphics.Rect: int bottom> = $i16;

        i72 = i58;

        r119 = r4;

        r118 = r5;

        r117 = r6;

        r106 = r139;

     label097:
        i101 = r2.<android.view.WindowManager$LayoutParams: int layoutInDisplayCutoutMode>;

        if r104 == null goto label098;

        if z19 != 0 goto label098;

        z23 = 1;

        goto label099;

     label098:
        z23 = 0;

     label099:
        $i102 = i0 & 1024;

        if $i102 != 0 goto label101;

        $i14 = i1 & 4;

        if $i14 != 0 goto label101;

        $i15 = <android.view.ViewRootImpl: int sNewInsetsMode>;

        if $i15 != 2 goto label100;

        $r26 = virtualinvoke r1.<com.android.server.wm.WindowState: android.view.InsetsState getRequestedInsetsState()>();

        $z10 = virtualinvoke $r26.<android.view.InsetsState: boolean getSourceOrDefaultVisibility(int)>(0);

        if $z10 != 0 goto label100;

        goto label101;

     label100:
        z24 = 0;

        goto label102;

     label101:
        z24 = 1;

     label102:
        $i103 = i1 & 2;

        if $i103 != 0 goto label104;

        $i13 = <android.view.ViewRootImpl: int sNewInsetsMode>;

        if $i13 != 2 goto label103;

        $r25 = virtualinvoke r1.<com.android.server.wm.WindowState: android.view.InsetsState getRequestedInsetsState()>();

        $z9 = virtualinvoke $r25.<android.view.InsetsState: boolean getSourceOrDefaultVisibility(int)>(1);

        if $z9 != 0 goto label103;

        goto label104;

     label103:
        z25 = 0;

        goto label105;

     label104:
        z25 = 1;

     label105:
        $z26 = virtualinvoke r2.<android.view.WindowManager$LayoutParams: boolean isFullscreen()>();

        if $z26 != 0 goto label106;

        if z19 == 0 goto label106;

        if i72 == 1 goto label106;

        z27 = 1;

        goto label107;

     label106:
        z27 = 0;

     label107:
        if i101 == 3 goto label120;

        r140 = <com.android.server.wm.DisplayPolicy: android.graphics.Rect sTmpDisplayCutoutSafeExceptMaybeBarsRect>;

        $r22 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mDisplayCutoutSafe>;

        virtualinvoke r140.<android.graphics.Rect: void set(android.graphics.Rect)>($r22);

        if i101 != 1 goto label109;

        $i12 = r106.<com.android.server.wm.DisplayFrames: int mDisplayWidth>;

        $i11 = r106.<com.android.server.wm.DisplayFrames: int mDisplayHeight>;

        if $i12 >= $i11 goto label108;

        r140.<android.graphics.Rect: int top> = -2147483648;

        r140.<android.graphics.Rect: int bottom> = 2147483647;

        goto label109;

     label108:
        r140.<android.graphics.Rect: int left> = -2147483648;

        r140.<android.graphics.Rect: int right> = 2147483647;

        goto label109;

     label109:
        if z19 == 0 goto label111;

        if z20 == 0 goto label111;

        if z24 != 0 goto label111;

        if i101 == 0 goto label110;

        if i101 != 1 goto label111;

     label110:
        r140.<android.graphics.Rect: int top> = -2147483648;

     label111:
        if z19 == 0 goto label117;

        if z20 == 0 goto label117;

        if z25 != 0 goto label117;

        if i101 == 0 goto label113;

        if i101 != 1 goto label112;

        goto label113;

     label112:
        goto label117;

     label113:
        i104 = r0.<com.android.server.wm.DisplayPolicy: int mNavigationBarPosition>;

        if i104 == 1 goto label116;

        if i104 == 2 goto label115;

        if i104 == 4 goto label114;

        goto label117;

     label114:
        r140.<android.graphics.Rect: int bottom> = 2147483647;

        goto label117;

     label115:
        r140.<android.graphics.Rect: int right> = 2147483647;

        goto label117;

     label116:
        r140.<android.graphics.Rect: int left> = -2147483648;

        goto label117;

     label117:
        if i72 != 2011 goto label118;

        $i10 = r0.<com.android.server.wm.DisplayPolicy: int mNavigationBarPosition>;

        if $i10 != 4 goto label118;

        r140.<android.graphics.Rect: int bottom> = 2147483647;

     label118:
        if z23 != 0 goto label119;

        if z27 != 0 goto label119;

        $r23 = <com.android.server.wm.DisplayPolicy: android.graphics.Rect sTmpRect>;

        virtualinvoke $r23.<android.graphics.Rect: void set(android.graphics.Rect)>(r119);

        virtualinvoke r119.<android.graphics.Rect: void intersectUnchecked(android.graphics.Rect)>(r140);

        $r24 = <com.android.server.wm.DisplayPolicy: android.graphics.Rect sTmpRect>;

        $z7 = virtualinvoke $r24.<android.graphics.Rect: boolean equals(java.lang.Object)>(r119);

        $z8 = $z7 ^ 1;

        virtualinvoke r3.<com.android.server.wm.WindowFrames: void setParentFrameWasClippedByDisplayCutout(boolean)>($z8);

        goto label119;

     label119:
        virtualinvoke r118.<android.graphics.Rect: void intersectUnchecked(android.graphics.Rect)>(r140);

        goto label120;

     label120:
        $r21 = r106.<com.android.server.wm.DisplayFrames: android.graphics.Rect mDisplayCutoutSafe>;

        virtualinvoke r117.<android.graphics.Rect: void intersectUnchecked(android.graphics.Rect)>($r21);

        $i9 = i0 & 512;

        if $i9 == 0 goto label121;

        if i72 == 2010 goto label121;

        $z6 = virtualinvoke r1.<com.android.server.wm.WindowState: boolean inMultiWindowMode()>();

        if $z6 != 0 goto label121;

        r118.<android.graphics.Rect: int top> = -10000;

        r118.<android.graphics.Rect: int left> = -10000;

        r118.<android.graphics.Rect: int bottom> = 10000;

        r118.<android.graphics.Rect: int right> = 10000;

        if i72 == 2013 goto label121;

        r7.<android.graphics.Rect: int top> = -10000;

        r7.<android.graphics.Rect: int left> = -10000;

        r117.<android.graphics.Rect: int top> = -10000;

        r117.<android.graphics.Rect: int left> = -10000;

        r7.<android.graphics.Rect: int bottom> = 10000;

        r7.<android.graphics.Rect: int right> = 10000;

        r117.<android.graphics.Rect: int bottom> = 10000;

        r117.<android.graphics.Rect: int right> = 10000;

     label121:
        $r141 = <com.android.server.wm.DisplayPolicy: android.graphics.Rect sTmpLastParentFrame>;

        $z28 = virtualinvoke $r141.<android.graphics.Rect: boolean equals(java.lang.Object)>(r119);

        if $z28 != 0 goto label122;

        virtualinvoke r3.<com.android.server.wm.WindowFrames: void setContentChanged(boolean)>(1);

     label122:
        virtualinvoke r1.<com.android.server.wm.WindowState: void computeFrame(com.android.server.wm.DisplayFrames)>(r106);

        if i72 != 2011 goto label123;

        $z4 = virtualinvoke r1.<com.android.server.wm.WindowState: boolean isVisibleLw()>();

        if $z4 == 0 goto label123;

        $z5 = virtualinvoke r1.<com.android.server.wm.WindowState: boolean getGivenInsetsPendingLw()>();

        if $z5 != 0 goto label123;

        specialinvoke r0.<com.android.server.wm.DisplayPolicy: void offsetInputMethodWindowLw(com.android.server.wm.WindowState,com.android.server.wm.DisplayFrames)>(r1, r106);

     label123:
        if i72 != 2031 goto label124;

        $z2 = virtualinvoke r1.<com.android.server.wm.WindowState: boolean isVisibleLw()>();

        if $z2 == 0 goto label124;

        $z3 = virtualinvoke r1.<com.android.server.wm.WindowState: boolean getGivenInsetsPendingLw()>();

        if $z3 != 0 goto label124;

        specialinvoke r0.<com.android.server.wm.DisplayPolicy: void offsetVoiceInputWindowLw(com.android.server.wm.WindowState,com.android.server.wm.DisplayFrames)>(r1, r106);

     label124:
        return;

     label125:
        return;
    }

    public boolean navigationBarCanMove()
    {
        com.android.server.wm.DisplayPolicy r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $z0 = r0.<com.android.server.wm.DisplayPolicy: boolean mNavigationBarCanMove>;

        return $z0;
    }

    int navigationBarPosition(int, int, int)
    {
        com.android.server.wm.DisplayPolicy r0;
        int i0, i1, i2;
        boolean $z0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $z0 = virtualinvoke r0.<com.android.server.wm.DisplayPolicy: boolean navigationBarCanMove()>();

        if $z0 == 0 goto label2;

        if i0 <= i1 goto label2;

        if i2 != 3 goto label1;

        return 1;

     label1:
        if i2 != 1 goto label2;

        return 2;

     label2:
        return 4;
    }

    void notifyDisplayReady()
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm._$$Lambda$DisplayPolicy$P8D337iYIcX04InNbwQCJWD0nmU $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $r2 = r0.<com.android.server.wm.DisplayPolicy: android.os.Handler mHandler>;

        $r1 = new com.android.server.wm._$$Lambda$DisplayPolicy$P8D337iYIcX04InNbwQCJWD0nmU;

        specialinvoke $r1.<com.android.server.wm._$$Lambda$DisplayPolicy$P8D337iYIcX04InNbwQCJWD0nmU: void <init>(com.android.server.wm.DisplayPolicy)>(r0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    public void onConfigurationChanged()
    {
        com.android.server.wm.DisplayPolicy r0;
        android.content.res.Resources r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14, i15, i16, i17;
        com.android.server.wm.DisplayContent $r2;
        com.android.server.wm.WindowManagerService $r3;
        com.android.server.policy.WindowManagerPolicy $r4;
        boolean $z0, $z1, $z2, $z3;
        com.android.internal.policy.GestureNavigationSettingsObserver $r5, $r6, $r7;
        com.android.server.wm.DisplayRotation r8;
        int[] r9, r10, r11, r12, r13, r14, r15, r16;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $r2 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        r8 = virtualinvoke $r2.<com.android.server.wm.DisplayContent: com.android.server.wm.DisplayRotation getDisplayRotation()>();

        r1 = virtualinvoke r0.<com.android.server.wm.DisplayPolicy: android.content.res.Resources getCurrentUserResources()>();

        i0 = virtualinvoke r8.<com.android.server.wm.DisplayRotation: int getPortraitRotation()>();

        i1 = virtualinvoke r8.<com.android.server.wm.DisplayRotation: int getUpsideDownRotation()>();

        i2 = virtualinvoke r8.<com.android.server.wm.DisplayRotation: int getLandscapeRotation()>();

        i3 = virtualinvoke r8.<com.android.server.wm.DisplayRotation: int getSeascapeRotation()>();

        $r3 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowManagerService mService>;

        $r4 = $r3.<com.android.server.wm.WindowManagerService: com.android.server.policy.WindowManagerPolicy mPolicy>;

        i4 = interfaceinvoke $r4.<com.android.server.policy.WindowManagerPolicy: int getUiMode()>();

        $z0 = virtualinvoke r0.<com.android.server.wm.DisplayPolicy: boolean hasStatusBar()>();

        if $z0 == 0 goto label1;

        r9 = r0.<com.android.server.wm.DisplayPolicy: int[] mStatusBarHeightForRotation>;

        i11 = virtualinvoke r1.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105481);

        r9[i1] = i11;

        r9[i0] = i11;

        r10 = r0.<com.android.server.wm.DisplayPolicy: int[] mStatusBarHeightForRotation>;

        i12 = virtualinvoke r1.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105480);

        r10[i3] = i12;

        r10[i2] = i12;

        goto label2;

     label1:
        r11 = r0.<com.android.server.wm.DisplayPolicy: int[] mStatusBarHeightForRotation>;

        r11[i3] = 0;

        r11[i2] = 0;

        r11[i1] = 0;

        r11[i0] = 0;

     label2:
        r12 = r0.<com.android.server.wm.DisplayPolicy: int[] mNavigationBarHeightForRotationDefault>;

        i13 = virtualinvoke r1.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105326);

        r12[i1] = i13;

        r12[i0] = i13;

        r13 = r0.<com.android.server.wm.DisplayPolicy: int[] mNavigationBarHeightForRotationDefault>;

        i14 = virtualinvoke r1.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105328);

        r13[i3] = i14;

        r13[i2] = i14;

        r14 = r0.<com.android.server.wm.DisplayPolicy: int[] mNavigationBarFrameHeightForRotationDefault>;

        i15 = virtualinvoke r1.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105323);

        r14[i1] = i15;

        r14[i0] = i15;

        r15 = r0.<com.android.server.wm.DisplayPolicy: int[] mNavigationBarFrameHeightForRotationDefault>;

        i16 = virtualinvoke r1.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105324);

        r15[i3] = i16;

        r15[i2] = i16;

        r16 = r0.<com.android.server.wm.DisplayPolicy: int[] mNavigationBarWidthForRotationDefault>;

        i17 = virtualinvoke r1.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105331);

        r16[i3] = i17;

        r16[i2] = i17;

        r16[i1] = i17;

        r16[i0] = i17;

        $i5 = virtualinvoke r1.<android.content.res.Resources: int getInteger(int)>(17694851);

        r0.<com.android.server.wm.DisplayPolicy: int mNavBarOpacityMode> = $i5;

        $r5 = r0.<com.android.server.wm.DisplayPolicy: com.android.internal.policy.GestureNavigationSettingsObserver mGestureNavigationSettingsObserver>;

        $i6 = virtualinvoke $r5.<com.android.internal.policy.GestureNavigationSettingsObserver: int getLeftSensitivity(android.content.res.Resources)>(r1);

        r0.<com.android.server.wm.DisplayPolicy: int mLeftGestureInset> = $i6;

        $r6 = r0.<com.android.server.wm.DisplayPolicy: com.android.internal.policy.GestureNavigationSettingsObserver mGestureNavigationSettingsObserver>;

        $i7 = virtualinvoke $r6.<com.android.internal.policy.GestureNavigationSettingsObserver: int getRightSensitivity(android.content.res.Resources)>(r1);

        r0.<com.android.server.wm.DisplayPolicy: int mRightGestureInset> = $i7;

        $r7 = r0.<com.android.server.wm.DisplayPolicy: com.android.internal.policy.GestureNavigationSettingsObserver mGestureNavigationSettingsObserver>;

        $z1 = virtualinvoke $r7.<com.android.internal.policy.GestureNavigationSettingsObserver: boolean areNavigationButtonForcedVisible()>();

        r0.<com.android.server.wm.DisplayPolicy: boolean mNavButtonForcedVisible> = $z1;

        $z2 = virtualinvoke r1.<android.content.res.Resources: boolean getBoolean(int)>(17891492);

        r0.<com.android.server.wm.DisplayPolicy: boolean mNavigationBarLetsThroughTaps> = $z2;

        $z3 = virtualinvoke r1.<android.content.res.Resources: boolean getBoolean(int)>(17891489);

        r0.<com.android.server.wm.DisplayPolicy: boolean mNavigationBarAlwaysShowOnSideGesture> = $z3;

        $i8 = virtualinvoke r1.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105325);

        $i9 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: int getNavigationBarFrameHeight(int,int)>(i0, i4);

        $i10 = $i8 - $i9;

        r0.<com.android.server.wm.DisplayPolicy: int mBottomGestureAdditionalInset> = $i10;

        virtualinvoke r0.<com.android.server.wm.DisplayPolicy: void updateConfigurationAndScreenSizeDependentBehaviors()>();

        return;
    }

    public void onLockTaskStateChangedLw(int)
    {
        com.android.server.wm.DisplayPolicy r0;
        int i0;
        com.android.server.wm.ImmersiveModeConfirmation $r1;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.ImmersiveModeConfirmation mImmersiveModeConfirmation>;

        virtualinvoke $r1.<com.android.server.wm.ImmersiveModeConfirmation: void onLockTaskModeChangedLw(int)>(i0);

        return;
    }

    public void onOverlayChangedLw()
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.SystemGesturesPointerEventListener $r1;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        specialinvoke r0.<com.android.server.wm.DisplayPolicy: void updateCurrentUserResources()>();

        virtualinvoke r0.<com.android.server.wm.DisplayPolicy: void onConfigurationChanged()>();

        $r1 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.SystemGesturesPointerEventListener mSystemGestures>;

        virtualinvoke $r1.<com.android.server.wm.SystemGesturesPointerEventListener: void onConfigurationChanged()>();

        return;
    }

    void onPowerKeyDown(boolean)
    {
        com.android.server.wm.DisplayPolicy r0;
        boolean z0, $z1, $z2, $z3;
        com.android.server.wm.ImmersiveModeConfirmation $r1;
        long $l0;
        int $i1, $i2;
        java.lang.Runnable $r2;
        android.os.Handler $r3;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.ImmersiveModeConfirmation mImmersiveModeConfirmation>;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $i1 = r0.<com.android.server.wm.DisplayPolicy: int mLastSystemUiFlags>;

        $z1 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: boolean isImmersiveMode(int)>($i1);

        $i2 = r0.<com.android.server.wm.DisplayPolicy: int mLastSystemUiFlags>;

        $z2 = staticinvoke <com.android.server.wm.DisplayPolicy: boolean isNavBarEmpty(int)>($i2);

        $z3 = virtualinvoke $r1.<com.android.server.wm.ImmersiveModeConfirmation: boolean onPowerKeyDown(boolean,long,boolean,boolean)>(z0, $l0, $z1, $z2);

        if $z3 == 0 goto label1;

        $r3 = r0.<com.android.server.wm.DisplayPolicy: android.os.Handler mHandler>;

        $r2 = r0.<com.android.server.wm.DisplayPolicy: java.lang.Runnable mHiddenNavPanic>;

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

     label1:
        return;
    }

    void onVrStateChangedLw(boolean)
    {
        com.android.server.wm.DisplayPolicy r0;
        boolean z0;
        com.android.server.wm.ImmersiveModeConfirmation $r1;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.ImmersiveModeConfirmation mImmersiveModeConfirmation>;

        virtualinvoke $r1.<com.android.server.wm.ImmersiveModeConfirmation: void onVrStateChangedLw(boolean)>(z0);

        return;
    }

    void release()
    {
        com.android.server.wm.DisplayPolicy r0;
        android.os.Handler r1;
        com.android.internal.policy.GestureNavigationSettingsObserver r2;
        com.android.server.wm._$$Lambda$neohyhAIBSbDm4hUahIEOo5bYNY $r4;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 = r0.<com.android.server.wm.DisplayPolicy: android.os.Handler mHandler>;

        r2 = r0.<com.android.server.wm.DisplayPolicy: com.android.internal.policy.GestureNavigationSettingsObserver mGestureNavigationSettingsObserver>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r4 = new com.android.server.wm._$$Lambda$neohyhAIBSbDm4hUahIEOo5bYNY;

        specialinvoke $r4.<com.android.server.wm._$$Lambda$neohyhAIBSbDm4hUahIEOo5bYNY: void <init>(com.android.internal.policy.GestureNavigationSettingsObserver)>(r2);

        virtualinvoke r1.<android.os.Handler: boolean post(java.lang.Runnable)>($r4);

        return;
    }

    void removeWindowLw(com.android.server.wm.WindowState)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.WindowState r1, $r2, $r3, $r4, $r13;
        android.util.ArraySet $r5;
        com.android.server.wm.DisplayContent $r6, $r10, $r12;
        boolean $z1;
        com.android.server.wm.WindowManagerService $r7;
        com.android.server.policy.WindowManagerPolicy $r8;
        com.android.server.wm.BarController $r9;
        com.android.server.wm.StatusBarController $r11;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 := @parameter0: com.android.server.wm.WindowState;

        $r2 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mStatusBar>;

        if $r2 != r1 goto label1;

        r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mStatusBar> = null;

        $r11 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.StatusBarController mStatusBarController>;

        virtualinvoke $r11.<com.android.server.wm.StatusBarController: void setWindow(com.android.server.wm.WindowState)>(null);

        $r12 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        virtualinvoke $r12.<com.android.server.wm.DisplayContent: void setInsetProvider(int,com.android.server.wm.WindowState,com.android.internal.util.function.TriConsumer)>(0, null, null);

        goto label3;

     label1:
        $r3 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNavigationBar>;

        if $r3 != r1 goto label2;

        r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNavigationBar> = null;

        $r9 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.BarController mNavigationBarController>;

        virtualinvoke $r9.<com.android.server.wm.BarController: void setWindow(com.android.server.wm.WindowState)>(null);

        $r10 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        virtualinvoke $r10.<com.android.server.wm.DisplayContent: void setInsetProvider(int,com.android.server.wm.WindowState,com.android.internal.util.function.TriConsumer)>(1, null, null);

        goto label3;

     label2:
        $r4 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNotificationShade>;

        if $r4 != r1 goto label3;

        r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNotificationShade> = null;

        $r6 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $z1 = $r6.<com.android.server.wm.DisplayContent: boolean isDefaultDisplay>;

        if $z1 == 0 goto label3;

        $r7 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowManagerService mService>;

        $r8 = $r7.<com.android.server.wm.WindowManagerService: com.android.server.policy.WindowManagerPolicy mPolicy>;

        interfaceinvoke $r8.<com.android.server.policy.WindowManagerPolicy: void setKeyguardCandidateLw(com.android.server.policy.WindowManagerPolicy$WindowState)>(null);

     label3:
        $r13 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mLastFocusedWindow>;

        if $r13 != r1 goto label4;

        r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mLastFocusedWindow> = null;

     label4:
        $r5 = r0.<com.android.server.wm.DisplayPolicy: android.util.ArraySet mScreenDecorWindows>;

        virtualinvoke $r5.<android.util.ArraySet: boolean remove(java.lang.Object)>(r1);

        return;
    }

    void resetSystemUiVisibilityLw()
    {
        com.android.server.wm.DisplayPolicy r0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r0.<com.android.server.wm.DisplayPolicy: int mLastSystemUiFlags> = 0;

        virtualinvoke r0.<com.android.server.wm.DisplayPolicy: int updateSystemUiVisibilityLw()>();

        return;
    }

    public void screenTurnedOff()
    {
        com.android.server.wm.DisplayPolicy r0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 = r0.<com.android.server.wm.DisplayPolicy: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<com.android.server.wm.DisplayPolicy: boolean mScreenOnEarly> = 0;

        r0.<com.android.server.wm.DisplayPolicy: boolean mScreenOnFully> = 0;

        r0.<com.android.server.wm.DisplayPolicy: boolean mKeyguardDrawComplete> = 0;

        r0.<com.android.server.wm.DisplayPolicy: boolean mWindowManagerDrawComplete> = 0;

        r0.<com.android.server.wm.DisplayPolicy: com.android.server.policy.WindowManagerPolicy$ScreenOnListener mScreenOnListener> = null;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void screenTurnedOn(com.android.server.policy.WindowManagerPolicy$ScreenOnListener)
    {
        com.android.server.wm.DisplayPolicy r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        com.android.server.policy.WindowManagerPolicy$ScreenOnListener r3;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r3 := @parameter0: com.android.server.policy.WindowManagerPolicy$ScreenOnListener;

        r1 = r0.<com.android.server.wm.DisplayPolicy: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<com.android.server.wm.DisplayPolicy: boolean mScreenOnEarly> = 1;

        r0.<com.android.server.wm.DisplayPolicy: boolean mScreenOnFully> = 0;

        r0.<com.android.server.wm.DisplayPolicy: boolean mKeyguardDrawComplete> = 0;

        r0.<com.android.server.wm.DisplayPolicy: boolean mWindowManagerDrawComplete> = 0;

        r0.<com.android.server.wm.DisplayPolicy: com.android.server.policy.WindowManagerPolicy$ScreenOnListener mScreenOnListener> = r3;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    int selectAnimation(com.android.server.wm.WindowState, int)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.WindowState r1, $r2, $r3;
        int i0, i1, $i2;
        boolean $z0, $z1, $z2;
        android.view.WindowManager$LayoutParams $r4;
        com.android.server.wm.WindowManagerService $r5;
        com.android.server.policy.WindowManagerPolicy $r6;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 := @parameter0: com.android.server.wm.WindowState;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mStatusBar>;

        if r1 != $r2 goto label04;

        if i0 == 2 goto label03;

        if i0 != 4 goto label01;

        goto label03;

     label01:
        if i0 == 1 goto label02;

        if i0 != 3 goto label18;

     label02:
        return 17432621;

     label03:
        return 17432622;

     label04:
        $r3 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNavigationBar>;

        if r1 != $r3 goto label18;

        $r4 = virtualinvoke r1.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams getAttrs()>();

        $i2 = $r4.<android.view.WindowManager$LayoutParams: int windowAnimations>;

        if $i2 == 0 goto label05;

        return 0;

     label05:
        i1 = r0.<com.android.server.wm.DisplayPolicy: int mNavigationBarPosition>;

        if i1 != 4 goto label10;

        if i0 == 2 goto label08;

        if i0 != 4 goto label06;

        goto label08;

     label06:
        if i0 == 1 goto label07;

        if i0 != 3 goto label18;

     label07:
        return 17432614;

     label08:
        $r5 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowManagerService mService>;

        $r6 = $r5.<com.android.server.wm.WindowManagerService: com.android.server.policy.WindowManagerPolicy mPolicy>;

        $z2 = interfaceinvoke $r6.<com.android.server.policy.WindowManagerPolicy: boolean isKeyguardShowingAndNotOccluded()>();

        if $z2 == 0 goto label09;

        return 17432616;

     label09:
        return 17432615;

     label10:
        if i1 != 2 goto label14;

        if i0 == 2 goto label13;

        if i0 != 4 goto label11;

        goto label13;

     label11:
        if i0 == 1 goto label12;

        if i0 != 3 goto label18;

     label12:
        return 17432619;

     label13:
        return 17432620;

     label14:
        if i1 != 1 goto label18;

        if i0 == 2 goto label17;

        if i0 != 4 goto label15;

        goto label17;

     label15:
        if i0 == 1 goto label16;

        if i0 != 3 goto label18;

     label16:
        return 17432617;

     label17:
        return 17432618;

     label18:
        if i0 != 5 goto label20;

        $z0 = virtualinvoke r1.<com.android.server.wm.WindowState: boolean hasAppShownWindows()>();

        if $z0 == 0 goto label20;

        $z1 = virtualinvoke r1.<com.android.server.wm.WindowState: boolean isActivityTypeHome()>();

        if $z1 == 0 goto label19;

        return -1;

     label19:
        return 17432595;

     label20:
        return 0;
    }

    public void setAwake(boolean)
    {
        com.android.server.wm.DisplayPolicy r0;
        boolean z0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        z0 := @parameter0: boolean;

        r0.<com.android.server.wm.DisplayPolicy: boolean mAwake> = z0;

        return;
    }

    public void setDockMode(int)
    {
        com.android.server.wm.DisplayPolicy r0;
        int i0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        i0 := @parameter0: int;

        r0.<com.android.server.wm.DisplayPolicy: int mDockMode> = i0;

        return;
    }

    void setForceShowSystemBars(boolean)
    {
        com.android.server.wm.DisplayPolicy r0;
        boolean z0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        z0 := @parameter0: boolean;

        r0.<com.android.server.wm.DisplayPolicy: boolean mForceShowSystemBarsFromExternal> = z0;

        return;
    }

    public void setForwardedInsets(android.graphics.Insets)
    {
        com.android.server.wm.DisplayPolicy r0;
        android.graphics.Insets r1;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 := @parameter0: android.graphics.Insets;

        r0.<com.android.server.wm.DisplayPolicy: android.graphics.Insets mForwardedInsets> = r1;

        return;
    }

    public void setHdmiPlugged(boolean)
    {
        com.android.server.wm.DisplayPolicy r0;
        boolean z0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.android.server.wm.DisplayPolicy: void setHdmiPlugged(boolean,boolean)>(z0, 0);

        return;
    }

    public void setHdmiPlugged(boolean, boolean)
    {
        com.android.server.wm.DisplayPolicy r0;
        boolean z0, z1, $z2;
        com.android.server.wm.WindowManagerService $r2;
        android.content.Intent $r3;
        android.os.UserHandle $r6;
        android.content.Context $r7;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        if z1 != 0 goto label1;

        $z2 = r0.<com.android.server.wm.DisplayPolicy: boolean mHdmiPlugged>;

        if $z2 == z0 goto label2;

     label1:
        r0.<com.android.server.wm.DisplayPolicy: boolean mHdmiPlugged> = z0;

        $r2 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r2.<com.android.server.wm.WindowManagerService: void updateRotation(boolean,boolean)>(1, 1);

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.HDMI_PLUGGED");

        virtualinvoke $r3.<android.content.Intent: android.content.Intent addFlags(int)>(67108864);

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("state", z0);

        $r7 = r0.<com.android.server.wm.DisplayPolicy: android.content.Context mContext>;

        $r6 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r7.<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r3, $r6);

     label2:
        return;
    }

    public void setLidState(int)
    {
        com.android.server.wm.DisplayPolicy r0;
        int i0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        i0 := @parameter0: int;

        r0.<com.android.server.wm.DisplayPolicy: int mLidState> = i0;

        return;
    }

    public void setPersistentVrModeEnabled(boolean)
    {
        com.android.server.wm.DisplayPolicy r0;
        boolean z0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        z0 := @parameter0: boolean;

        r0.<com.android.server.wm.DisplayPolicy: boolean mPersistentVrModeEnabled> = z0;

        return;
    }

    void setPointerLocationEnabled(boolean)
    {
        com.android.server.wm.DisplayPolicy r0;
        boolean z0, $z1;
        android.os.Handler r1;
        byte b0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        z0 := @parameter0: boolean;

        $z1 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: boolean supportsPointerLocation()>();

        if $z1 != 0 goto label1;

        return;

     label1:
        r1 = r0.<com.android.server.wm.DisplayPolicy: android.os.Handler mHandler>;

        if z0 == 0 goto label2;

        b0 = 4;

        goto label3;

     label2:
        b0 = 5;

     label3:
        virtualinvoke r1.<android.os.Handler: boolean sendEmptyMessage(int)>(b0);

        return;
    }

    void simulateLayoutDisplay(com.android.server.wm.DisplayFrames, android.view.InsetsState, android.util.SparseArray)
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.DisplayFrames r1;
        android.view.InsetsState r2;
        android.util.SparseArray r3;
        android.graphics.Rect $r5;
        com.android.server.wm.WindowFrames $r6;
        com.android.server.wm._$$Lambda$DisplayPolicy$ePpxrnu8spSORwTpXUqHSB2nbVI $r7;
        com.android.server.wm._$$Lambda$DisplayPolicy$1TxdQHesEg9Mz_zNwLN_fdFgqjI $r8;
        com.android.server.wm.WindowState r9, r10;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 := @parameter0: com.android.server.wm.DisplayFrames;

        r2 := @parameter1: android.view.InsetsState;

        r3 := @parameter2: android.util.SparseArray;

        virtualinvoke r1.<com.android.server.wm.DisplayFrames: void onBeginLayout()>();

        staticinvoke <com.android.server.wm.DisplayPolicy: void updateInsetsStateForDisplayCutout(com.android.server.wm.DisplayFrames,android.view.InsetsState)>(r1, r2);

        $r5 = r1.<com.android.server.wm.DisplayFrames: android.graphics.Rect mUnrestricted>;

        virtualinvoke r2.<android.view.InsetsState: void setDisplayFrame(android.graphics.Rect)>($r5);

        $r6 = new com.android.server.wm.WindowFrames;

        specialinvoke $r6.<com.android.server.wm.WindowFrames: void <init>()>();

        r9 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNavigationBar>;

        if r9 == null goto label1;

        $r8 = new com.android.server.wm._$$Lambda$DisplayPolicy$1TxdQHesEg9Mz_zNwLN_fdFgqjI;

        specialinvoke $r8.<com.android.server.wm._$$Lambda$DisplayPolicy$1TxdQHesEg9Mz_zNwLN_fdFgqjI: void <init>(com.android.server.wm.DisplayPolicy,com.android.server.wm.DisplayFrames)>(r0, r1);

        specialinvoke r0.<com.android.server.wm.DisplayPolicy: void simulateLayoutDecorWindow(com.android.server.wm.WindowState,com.android.server.wm.DisplayFrames,android.view.InsetsState,com.android.server.wm.WindowFrames,android.util.SparseArray,java.util.function.Consumer)>(r9, r1, r2, $r6, r3, $r8);

     label1:
        r10 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mStatusBar>;

        if r10 == null goto label2;

        $r7 = new com.android.server.wm._$$Lambda$DisplayPolicy$ePpxrnu8spSORwTpXUqHSB2nbVI;

        specialinvoke $r7.<com.android.server.wm._$$Lambda$DisplayPolicy$ePpxrnu8spSORwTpXUqHSB2nbVI: void <init>(com.android.server.wm.DisplayPolicy,com.android.server.wm.DisplayFrames)>(r0, r1);

        specialinvoke r0.<com.android.server.wm.DisplayPolicy: void simulateLayoutDecorWindow(com.android.server.wm.WindowState,com.android.server.wm.DisplayFrames,android.view.InsetsState,com.android.server.wm.WindowFrames,android.util.SparseArray,java.util.function.Consumer)>(r10, r1, r2, $r6, r3, $r7);

     label2:
        specialinvoke r0.<com.android.server.wm.DisplayPolicy: void layoutScreenDecorWindows(com.android.server.wm.DisplayFrames,com.android.server.wm.WindowFrames)>(r1, $r6);

        specialinvoke r0.<com.android.server.wm.DisplayPolicy: void postAdjustDisplayFrames(com.android.server.wm.DisplayFrames)>(r1);

        return;
    }

    public void switchUser()
    {
        com.android.server.wm.DisplayPolicy r0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        specialinvoke r0.<com.android.server.wm.DisplayPolicy: void updateCurrentUserResources()>();

        return;
    }

    void systemReady()
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.SystemGesturesPointerEventListener $r1;
        com.android.server.wm.WindowManagerService $r2;
        boolean $z0;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $r1 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.SystemGesturesPointerEventListener mSystemGestures>;

        virtualinvoke $r1.<com.android.server.wm.SystemGesturesPointerEventListener: void systemReady()>();

        $r2 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowManagerService mService>;

        $z0 = $r2.<com.android.server.wm.WindowManagerService: boolean mPointerLocationEnabled>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.server.wm.DisplayPolicy: void setPointerLocationEnabled(boolean)>(1);

     label1:
        return;
    }

    public void takeScreenshot(int, int)
    {
        com.android.server.wm.DisplayPolicy r0;
        int i0, i1;
        com.android.internal.util.ScreenshotHelper r1;
        boolean $z0, $z1, z2, z3;
        com.android.server.wm.WindowState r2, r3;
        android.os.Handler $r4;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<com.android.server.wm.DisplayPolicy: com.android.internal.util.ScreenshotHelper mScreenshotHelper>;

        if r1 == null goto label4;

        r2 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mStatusBar>;

        z2 = 0;

        if r2 == null goto label1;

        $z1 = virtualinvoke r2.<com.android.server.wm.WindowState: boolean isVisibleLw()>();

        if $z1 == 0 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        r3 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNavigationBar>;

        if r3 == null goto label3;

        $z0 = virtualinvoke r3.<com.android.server.wm.WindowState: boolean isVisibleLw()>();

        if $z0 == 0 goto label3;

        z2 = 1;

        goto label3;

     label3:
        $r4 = r0.<com.android.server.wm.DisplayPolicy: android.os.Handler mHandler>;

        virtualinvoke r1.<com.android.internal.util.ScreenshotHelper: void takeScreenshot(int,boolean,boolean,int,android.os.Handler,java.util.function.Consumer)>(i0, z3, z2, i1, $r4, null);

     label4:
        return;
    }

    boolean topAppHidesStatusBar()
    {
        com.android.server.wm.DisplayPolicy r0;
        int i0, i1, $i2, $i3;
        boolean $z0, $z1, z2;
        com.android.server.wm.WindowState $r1, r3;
        android.view.InsetsState $r2;
        android.view.WindowManager$LayoutParams r4;
        android.view.InsetsSource r5;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r3 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopFullscreenOpaqueWindowState>;

        z2 = 0;

        if r3 == null goto label5;

        $z0 = r0.<com.android.server.wm.DisplayPolicy: boolean mForceShowSystemBars>;

        if $z0 == 0 goto label1;

        goto label5;

     label1:
        r4 = virtualinvoke r3.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams getAttrs()>();

        i0 = staticinvoke <com.android.server.wm.PolicyControl: int getWindowFlags(com.android.server.wm.WindowState,android.view.WindowManager$LayoutParams)>(null, r4);

        i1 = staticinvoke <com.android.server.wm.PolicyControl: int getSystemUiVisibility(com.android.server.wm.WindowState,android.view.WindowManager$LayoutParams)>(null, r4);

        $r1 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopFullscreenOpaqueWindowState>;

        $r2 = virtualinvoke $r1.<com.android.server.wm.WindowState: android.view.InsetsState getRequestedInsetsState()>();

        r5 = virtualinvoke $r2.<android.view.InsetsState: android.view.InsetsSource peekSource(int)>(0);

        $i2 = i0 & 1024;

        if $i2 != 0 goto label3;

        $i3 = i1 & 4;

        if $i3 != 0 goto label3;

        if r5 == null goto label2;

        $z1 = virtualinvoke r5.<android.view.InsetsSource: boolean isVisible()>();

        if $z1 != 0 goto label2;

        goto label3;

     label2:
        goto label4;

     label3:
        z2 = 1;

     label4:
        return z2;

     label5:
        return 0;
    }

    void updateConfigurationAndScreenSizeDependentBehaviors()
    {
        com.android.server.wm.DisplayPolicy r0;
        android.content.res.Resources r1;
        com.android.server.wm.DisplayContent $r2, $r3, $r4;
        int $i0, $i1;
        boolean $z0, z1;
        com.android.server.wm.DisplayRotation $r5;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 = virtualinvoke r0.<com.android.server.wm.DisplayPolicy: android.content.res.Resources getCurrentUserResources()>();

        $r2 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $i1 = $r2.<com.android.server.wm.DisplayContent: int mBaseDisplayWidth>;

        $r3 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $i0 = $r3.<com.android.server.wm.DisplayContent: int mBaseDisplayHeight>;

        if $i1 == $i0 goto label1;

        $z0 = virtualinvoke r1.<android.content.res.Resources: boolean getBoolean(int)>(17891490);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        r0.<com.android.server.wm.DisplayPolicy: boolean mNavigationBarCanMove> = z1;

        $r4 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $r5 = virtualinvoke $r4.<com.android.server.wm.DisplayContent: com.android.server.wm.DisplayRotation getDisplayRotation()>();

        virtualinvoke $r5.<com.android.server.wm.DisplayRotation: void updateUserDependentConfiguration(android.content.res.Resources)>(r1);

        return;
    }

    void updateHideNavInputEventReceiver()
    {
        com.android.server.wm.DisplayPolicy r0;
        com.android.server.wm.DisplayContent $r1, $r6;
        boolean $z0, $z2, z3, z4;
        com.android.server.policy.WindowManagerPolicy$InputConsumer $r2, $r4, $r11, r20;
        android.os.Message $r3;
        com.android.server.wm.WindowState $r5, r18;
        com.android.server.wm.InputMonitor $r7;
        android.os.Handler $r8, r21;
        android.os.Looper $r9;
        com.android.server.wm._$$Lambda$DisplayPolicy$ZFWTJnn7zmeQfZ_Zmm9GNRwaSo8 $r10;
        android.hardware.input.InputManager $r12;
        android.view.WindowManager$LayoutParams $r13;
        android.view.InsetsFlags $r14;
        int $i2;
        com.android.server.wm.InsetsStateController r15;
        com.android.server.wm.InsetsSourceProvider r16;
        com.android.server.wm.InsetsControlTarget r17;
        android.view.InsetsState r19;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        $r1 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        r15 = virtualinvoke $r1.<com.android.server.wm.DisplayContent: com.android.server.wm.InsetsStateController getInsetsStateController()>();

        z3 = 1;

        r16 = virtualinvoke r15.<com.android.server.wm.InsetsStateController: com.android.server.wm.InsetsSourceProvider peekSourceProvider(int)>(1);

        if r16 == null goto label01;

        r17 = virtualinvoke r16.<com.android.server.wm.InsetsSourceProvider: com.android.server.wm.InsetsControlTarget getControlTarget()>();

        goto label02;

     label01:
        r17 = null;

     label02:
        $z0 = r17 instanceof com.android.server.wm.WindowState;

        if $z0 == 0 goto label03;

        r18 = (com.android.server.wm.WindowState) r17;

        goto label04;

     label03:
        r18 = null;

     label04:
        if r18 == null goto label05;

        r19 = virtualinvoke r18.<com.android.server.wm.WindowState: android.view.InsetsState getRequestedInsetsState()>();

        goto label06;

     label05:
        r19 = null;

     label06:
        if r19 == null goto label07;

        z4 = virtualinvoke r19.<android.view.InsetsState: boolean getSourceOrDefaultVisibility(int)>(1);

        goto label08;

     label07:
        z4 = staticinvoke <android.view.InsetsState: boolean getDefaultVisibility(int)>(1);

     label08:
        if r18 == null goto label09;

        $r13 = r18.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $r14 = $r13.<android.view.WindowManager$LayoutParams: android.view.InsetsFlags insetsFlags>;

        $i2 = $r14.<android.view.InsetsFlags: int behavior>;

        if $i2 != 0 goto label09;

        goto label10;

     label09:
        z3 = 0;

     label10:
        if z4 != 0 goto label12;

        if z3 != 0 goto label11;

        goto label12;

     label11:
        $r4 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.policy.WindowManagerPolicy$InputConsumer mInputConsumer>;

        if $r4 != null goto label13;

        $r5 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mStatusBar>;

        if $r5 == null goto label13;

        $z2 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: boolean canHideNavigationBar()>();

        if $z2 == 0 goto label13;

        $r6 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $r7 = virtualinvoke $r6.<com.android.server.wm.DisplayContent: com.android.server.wm.InputMonitor getInputMonitor()>();

        $r8 = r0.<com.android.server.wm.DisplayPolicy: android.os.Handler mHandler>;

        $r9 = virtualinvoke $r8.<android.os.Handler: android.os.Looper getLooper()>();

        $r10 = new com.android.server.wm._$$Lambda$DisplayPolicy$ZFWTJnn7zmeQfZ_Zmm9GNRwaSo8;

        specialinvoke $r10.<com.android.server.wm._$$Lambda$DisplayPolicy$ZFWTJnn7zmeQfZ_Zmm9GNRwaSo8: void <init>(com.android.server.wm.DisplayPolicy)>(r0);

        $r11 = virtualinvoke $r7.<com.android.server.wm.InputMonitor: com.android.server.policy.WindowManagerPolicy$InputConsumer createInputConsumer(android.os.Looper,java.lang.String,android.view.InputEventReceiver$Factory)>($r9, "nav_input_consumer", $r10);

        r0.<com.android.server.wm.DisplayPolicy: com.android.server.policy.WindowManagerPolicy$InputConsumer mInputConsumer> = $r11;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("WindowManager", "nav_input_consumer created.");

        $r12 = staticinvoke <android.hardware.input.InputManager: android.hardware.input.InputManager getInstance()>();

        virtualinvoke $r12.<android.hardware.input.InputManager: void setPointerIconType(int)>(0);

        goto label13;

     label12:
        r20 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.policy.WindowManagerPolicy$InputConsumer mInputConsumer>;

        if r20 == null goto label13;

        interfaceinvoke r20.<com.android.server.policy.WindowManagerPolicy$InputConsumer: void dismiss()>();

        r21 = r0.<com.android.server.wm.DisplayPolicy: android.os.Handler mHandler>;

        $r2 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.policy.WindowManagerPolicy$InputConsumer mInputConsumer>;

        $r3 = virtualinvoke r21.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(3, $r2);

        virtualinvoke r21.<android.os.Handler: boolean sendMessage(android.os.Message)>($r3);

        r0.<com.android.server.wm.DisplayPolicy: com.android.server.policy.WindowManagerPolicy$InputConsumer mInputConsumer> = null;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("WindowManager", "nav_input_consumer dismissed.");

     label13:
        return;
    }

    int updateSystemUiVisibilityLw()
    {
        com.android.server.wm.DisplayPolicy r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, i25, i26, $i27, i28, $i29, $i30;
        boolean z0, $z1, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z11, $z12, z13, z14, z15;
        android.util.Pair r1, r47;
        android.view.WindowManager$LayoutParams $r3, $r24, $r27, $r50;
        com.android.server.wm.ImmersiveModeConfirmation $r4;
        android.os.IBinder $r5, $r6;
        com.android.server.wm.DisplayContent $r7, $r29, $r33;
        com.android.server.wm.InsetsPolicy $r8, r49;
        android.graphics.Rect $r9, $r10, $r20, $r21, $r22, $r23, $r35, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59;
        java.lang.Object $r11, $r13;
        java.lang.Integer $r12;
        com.android.internal.view.AppearanceRegion $r14, $r18, $r19;
        com.android.server.wm._$$Lambda$DisplayPolicy$HbdRZfPpJ53Wnk7_Ueb0ycyz_AQ $r15;
        android.os.Handler $r16;
        com.android.internal.view.AppearanceRegion[] $r17, r61;
        com.android.server.wm.WindowState $r25, $r26, $r30, $r31, $r32, $r34, r37, r38, $r39, $r40, $r41, $r42, r48;
        android.view.InsetsFlags $r28, $r51;
        com.android.server.wm.WindowManagerService $r36, $r43, r46;
        com.android.server.wm.RootWindowContainer $r44;
        com.android.server.wm.TaskDisplayArea $r45;
        byte b24;
        java.lang.String r62;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r37 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mFocusedWindow>;

        if r37 == null goto label01;

        goto label02;

     label01:
        r37 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopFullscreenOpaqueWindowState>;

     label02:
        if r37 != null goto label03;

        return 0;

     label03:
        $r3 = virtualinvoke r37.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams getAttrs()>();

        $r5 = $r3.<android.view.WindowManager$LayoutParams: android.os.IBinder token>;

        $r4 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.ImmersiveModeConfirmation mImmersiveModeConfirmation>;

        $r6 = virtualinvoke $r4.<com.android.server.wm.ImmersiveModeConfirmation: android.os.IBinder getWindowToken()>();

        if $r5 != $r6 goto label10;

        r38 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mLastFocusedWindow>;

        if r38 == null goto label04;

        $z10 = virtualinvoke r38.<com.android.server.wm.WindowState: boolean canReceiveKeys()>();

        if $z10 == 0 goto label04;

        z11 = 1;

        goto label05;

     label04:
        z11 = 0;

     label05:
        $z12 = virtualinvoke r0.<com.android.server.wm.DisplayPolicy: boolean isKeyguardShowing()>();

        if $z12 == 0 goto label06;

        $z9 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: boolean isKeyguardOccluded()>();

        if $z9 != 0 goto label06;

        r37 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNotificationShade>;

        goto label08;

     label06:
        if z11 == 0 goto label07;

        r37 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mLastFocusedWindow>;

        goto label08;

     label07:
        r37 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopFullscreenOpaqueWindowState>;

     label08:
        if r37 != null goto label09;

        return 0;

     label09:
        goto label10;

     label10:
        $r7 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $r8 = virtualinvoke $r7.<com.android.server.wm.DisplayContent: com.android.server.wm.InsetsPolicy getInsetsPolicy()>();

        virtualinvoke $r8.<com.android.server.wm.InsetsPolicy: void updateBarControlTarget(com.android.server.wm.WindowState)>(r37);

        $i4 = staticinvoke <com.android.server.wm.PolicyControl: int getSystemUiVisibility(com.android.server.wm.WindowState,android.view.WindowManager$LayoutParams)>(r37, null);

        $i5 = r0.<com.android.server.wm.DisplayPolicy: int mResettingSystemUiFlags>;

        $i7 = $i4 & $i5;

        $i6 = r0.<com.android.server.wm.DisplayPolicy: int mForceClearedSystemUiFlags>;

        i23 = $i7 & $i6;

        $z1 = r0.<com.android.server.wm.DisplayPolicy: boolean mForcingShowNavBar>;

        if $z1 == 0 goto label11;

        $i20 = virtualinvoke r37.<com.android.server.wm.WindowState: int getSurfaceLayer()>();

        $i21 = r0.<com.android.server.wm.DisplayPolicy: int mForcingShowNavBarLayer>;

        if $i20 >= $i21 goto label11;

        $i22 = staticinvoke <com.android.server.wm.PolicyControl: int adjustClearableFlags(com.android.server.wm.WindowState,int)>(r37, 7);

        i23 = i23 & $i22;

        goto label11;

     label11:
        $r39 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopFullscreenOpaqueWindowState>;

        $r40 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopFullscreenOpaqueOrDimmingWindowState>;

        i0 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: int updateLightStatusBarAppearanceLw(int,com.android.server.wm.WindowState,com.android.server.wm.WindowState)>(0, $r39, $r40);

        $r41 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopDockedOpaqueWindowState>;

        $r42 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopDockedOpaqueOrDimmingWindowState>;

        i1 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: int updateLightStatusBarAppearanceLw(int,com.android.server.wm.WindowState,com.android.server.wm.WindowState)>(0, $r41, $r42);

        $r43 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowManagerService mService>;

        $r44 = $r43.<com.android.server.wm.WindowManagerService: com.android.server.wm.RootWindowContainer mRoot>;

        $r45 = virtualinvoke $r44.<com.android.server.wm.RootWindowContainer: com.android.server.wm.TaskDisplayArea getDefaultTaskDisplayArea()>();

        z0 = virtualinvoke $r45.<com.android.server.wm.TaskDisplayArea: boolean isSplitScreenModeActivated()>();

        if z0 == 0 goto label12;

        $r36 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowManagerService mService>;

        $r35 = r0.<com.android.server.wm.DisplayPolicy: android.graphics.Rect mDockedStackBounds>;

        virtualinvoke $r36.<com.android.server.wm.WindowManagerService: void getStackBounds(int,int,android.graphics.Rect)>(3, 1, $r35);

        goto label13;

     label12:
        $r9 = r0.<com.android.server.wm.DisplayPolicy: android.graphics.Rect mDockedStackBounds>;

        virtualinvoke $r9.<android.graphics.Rect: void setEmpty()>();

     label13:
        r46 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowManagerService mService>;

        if z0 == 0 goto label14;

        b24 = 4;

        goto label15;

     label14:
        b24 = 1;

     label15:
        $r10 = r0.<com.android.server.wm.DisplayPolicy: android.graphics.Rect mNonDockedStackBounds>;

        virtualinvoke r46.<com.android.server.wm.WindowManagerService: void getStackBounds(int,int,android.graphics.Rect)>(b24, 0, $r10);

        $i8 = r0.<com.android.server.wm.DisplayPolicy: int mLastSystemUiFlags>;

        r47 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: android.util.Pair updateSystemBarsLw(com.android.server.wm.WindowState,int,int)>(r37, $i8, i23);

        $r11 = r47.<android.util.Pair: java.lang.Object first>;

        $r12 = (java.lang.Integer) $r11;

        i25 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        $r13 = r47.<android.util.Pair: java.lang.Object second>;

        r48 = (com.android.server.wm.WindowState) $r13;

        if r48 == null goto label16;

        $r33 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $r34 = $r33.<com.android.server.wm.DisplayContent: com.android.server.wm.WindowState mInputMethodWindow>;

        if r48 != $r34 goto label16;

        z13 = 1;

        goto label17;

     label16:
        z13 = 0;

     label17:
        i26 = staticinvoke <android.view.InsetsFlags: int getAppearance(int)>(i25);

        $i27 = <android.view.ViewRootImpl: int sNewInsetsMode>;

        if $i27 != 2 goto label18;

        $r27 = r37.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $r28 = $r27.<android.view.WindowManager$LayoutParams: android.view.InsetsFlags insetsFlags>;

        $i17 = $r28.<android.view.InsetsFlags: int appearance>;

        $r32 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopFullscreenOpaqueWindowState>;

        $r31 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mTopFullscreenOpaqueOrDimmingWindowState>;

        $r29 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $r30 = $r29.<com.android.server.wm.DisplayContent: com.android.server.wm.WindowState mInputMethodWindow>;

        $i18 = specialinvoke r0.<com.android.server.wm.DisplayPolicy: int updateLightNavigationBarAppearanceLw(int,com.android.server.wm.WindowState,com.android.server.wm.WindowState,com.android.server.wm.WindowState,com.android.server.wm.WindowState)>($i17, $r32, $r31, $r30, r48);

        $i19 = i26 & 3;

        i28 = $i18 | $i19;

        goto label19;

     label18:
        i28 = staticinvoke <android.view.InsetsFlags: int getAppearance(int)>(i25);

     label19:
        $i9 = r0.<com.android.server.wm.DisplayPolicy: int mLastSystemUiFlags>;

        i2 = $i9 ^ i25;

        r49 = virtualinvoke r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.InsetsPolicy getInsetsPolicy()>();

        $i10 = i25 & 6;

        if $i10 != 0 goto label22;

        $r24 = r37.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i15 = staticinvoke <com.android.server.wm.PolicyControl: int getWindowFlags(com.android.server.wm.WindowState,android.view.WindowManager$LayoutParams)>(r37, $r24);

        $i16 = $i15 & 1024;

        if $i16 != 0 goto label22;

        $r25 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mStatusBar>;

        if $r25 == null goto label20;

        $z8 = virtualinvoke r49.<com.android.server.wm.InsetsPolicy: boolean isHidden(int)>(0);

        if $z8 != 0 goto label22;

     label20:
        $r26 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNavigationBar>;

        if $r26 == null goto label21;

        $z7 = virtualinvoke r49.<com.android.server.wm.InsetsPolicy: boolean isHidden(int)>(1);

        if $z7 == 0 goto label21;

        goto label22;

     label21:
        z14 = 0;

        goto label23;

     label22:
        z14 = 1;

     label23:
        $r50 = r37.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $r51 = $r50.<android.view.WindowManager$LayoutParams: android.view.InsetsFlags insetsFlags>;

        i3 = $r51.<android.view.InsetsFlags: int behavior>;

        $i29 = i25 & 6144;

        if $i29 != 0 goto label25;

        if i3 == 1 goto label25;

        if i3 != 2 goto label24;

        goto label25;

     label24:
        z15 = 0;

        goto label26;

     label25:
        z15 = 1;

     label26:
        if i2 != 0 goto label27;

        $i11 = r0.<com.android.server.wm.DisplayPolicy: int mLastAppearance>;

        if $i11 != i28 goto label27;

        $i12 = r0.<com.android.server.wm.DisplayPolicy: int mLastFullscreenAppearance>;

        if $i12 != i0 goto label27;

        $i13 = r0.<com.android.server.wm.DisplayPolicy: int mLastDockedAppearance>;

        if $i13 != i1 goto label27;

        $i14 = r0.<com.android.server.wm.DisplayPolicy: int mLastBehavior>;

        if $i14 != i3 goto label27;

        $z3 = r0.<com.android.server.wm.DisplayPolicy: boolean mLastFocusIsFullscreen>;

        if $z3 != z14 goto label27;

        $z4 = r0.<com.android.server.wm.DisplayPolicy: boolean mLastFocusIsImmersive>;

        if $z4 != z15 goto label27;

        $r21 = r0.<com.android.server.wm.DisplayPolicy: android.graphics.Rect mLastNonDockedStackBounds>;

        $r20 = r0.<com.android.server.wm.DisplayPolicy: android.graphics.Rect mNonDockedStackBounds>;

        $z5 = virtualinvoke $r21.<android.graphics.Rect: boolean equals(java.lang.Object)>($r20);

        if $z5 == 0 goto label27;

        $r23 = r0.<com.android.server.wm.DisplayPolicy: android.graphics.Rect mLastDockedStackBounds>;

        $r22 = r0.<com.android.server.wm.DisplayPolicy: android.graphics.Rect mDockedStackBounds>;

        $z6 = virtualinvoke $r23.<android.graphics.Rect: boolean equals(java.lang.Object)>($r22);

        if $z6 == 0 goto label27;

        return 0;

     label27:
        $i30 = r0.<com.android.server.wm.DisplayPolicy: int mLastSystemUiFlags>;

        r1 = staticinvoke <com.android.server.wm.DisplayPolicy: android.util.Pair getTransientState(int,int)>(i25, $i30);

        r0.<com.android.server.wm.DisplayPolicy: int mLastSystemUiFlags> = i25;

        r0.<com.android.server.wm.DisplayPolicy: int mLastAppearance> = i28;

        r0.<com.android.server.wm.DisplayPolicy: int mLastFullscreenAppearance> = i0;

        r0.<com.android.server.wm.DisplayPolicy: int mLastDockedAppearance> = i1;

        r0.<com.android.server.wm.DisplayPolicy: int mLastBehavior> = i3;

        r0.<com.android.server.wm.DisplayPolicy: boolean mLastFocusIsFullscreen> = z14;

        r0.<com.android.server.wm.DisplayPolicy: boolean mLastFocusIsImmersive> = z15;

        $r52 = r0.<com.android.server.wm.DisplayPolicy: android.graphics.Rect mLastNonDockedStackBounds>;

        $r53 = r0.<com.android.server.wm.DisplayPolicy: android.graphics.Rect mNonDockedStackBounds>;

        virtualinvoke $r52.<android.graphics.Rect: void set(android.graphics.Rect)>($r53);

        $r54 = r0.<com.android.server.wm.DisplayPolicy: android.graphics.Rect mLastDockedStackBounds>;

        $r55 = r0.<com.android.server.wm.DisplayPolicy: android.graphics.Rect mDockedStackBounds>;

        virtualinvoke $r54.<android.graphics.Rect: void set(android.graphics.Rect)>($r55);

        $r56 = new android.graphics.Rect;

        $r57 = r0.<com.android.server.wm.DisplayPolicy: android.graphics.Rect mNonDockedStackBounds>;

        specialinvoke $r56.<android.graphics.Rect: void <init>(android.graphics.Rect)>($r57);

        $r58 = new android.graphics.Rect;

        $r59 = r0.<com.android.server.wm.DisplayPolicy: android.graphics.Rect mDockedStackBounds>;

        specialinvoke $r58.<android.graphics.Rect: void <init>(android.graphics.Rect)>($r59);

        if z0 == 0 goto label28;

        $r17 = newarray (com.android.internal.view.AppearanceRegion)[2];

        $r18 = new com.android.internal.view.AppearanceRegion;

        specialinvoke $r18.<com.android.internal.view.AppearanceRegion: void <init>(int,android.graphics.Rect)>(i0, $r56);

        $r17[0] = $r18;

        $r19 = new com.android.internal.view.AppearanceRegion;

        specialinvoke $r19.<com.android.internal.view.AppearanceRegion: void <init>(int,android.graphics.Rect)>(i1, $r58);

        $r17[1] = $r19;

        r61 = $r17;

        goto label29;

     label28:
        r61 = newarray (com.android.internal.view.AppearanceRegion)[1];

        $r14 = new com.android.internal.view.AppearanceRegion;

        specialinvoke $r14.<com.android.internal.view.AppearanceRegion: void <init>(int,android.graphics.Rect)>(i0, $r56);

        r61[0] = $r14;

     label29:
        r62 = virtualinvoke r37.<com.android.server.wm.WindowState: java.lang.String toString()>();

        $r16 = r0.<com.android.server.wm.DisplayPolicy: android.os.Handler mHandler>;

        $r15 = new com.android.server.wm._$$Lambda$DisplayPolicy$HbdRZfPpJ53Wnk7_Ueb0ycyz_AQ;

        specialinvoke $r15.<com.android.server.wm._$$Lambda$DisplayPolicy$HbdRZfPpJ53Wnk7_Ueb0ycyz_AQ: void <init>(com.android.server.wm.DisplayPolicy,int,java.lang.String,android.util.Pair,int,com.android.internal.view.AppearanceRegion[],boolean,boolean,boolean)>(r0, i25, r62, r1, i28, r61, z13, z14, z15);

        virtualinvoke $r16.<android.os.Handler: boolean post(java.lang.Runnable)>($r15);

        return i2;
    }

    int validateAddingWindowLw(android.view.WindowManager$LayoutParams, int, int)
    {
        com.android.server.wm.DisplayPolicy r0;
        android.view.WindowManager$LayoutParams r1;
        int i0, i1, i2, $i3, $i4;
        android.content.Context $r2, $r3, $r5, $r8, $r9, $r10, $r11, $r14;
        int[] $r4, $r16;
        boolean $z0, $z1, $z2, $z3;
        com.android.server.wm.WindowManagerService $r6;
        com.android.server.wm.ActivityTaskManagerInternal $r7;
        com.android.server.wm.WindowState r12, r13, r15;

        r0 := @this: com.android.server.wm.DisplayPolicy;

        r1 := @parameter0: android.view.WindowManager$LayoutParams;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i3 = r1.<android.view.WindowManager$LayoutParams: int privateFlags>;

        $i4 = $i3 & 4194304;

        if $i4 == 0 goto label01;

        $r11 = r0.<com.android.server.wm.DisplayPolicy: android.content.Context mContext>;

        virtualinvoke $r11.<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.STATUS_BAR_SERVICE", i0, i1, "DisplayPolicy");

     label01:
        i2 = r1.<android.view.WindowManager$LayoutParams: int type>;

        if i2 == 2000 goto label09;

        if i2 == 2014 goto label08;

        if i2 == 2017 goto label07;

        if i2 == 2019 goto label06;

        if i2 == 2024 goto label05;

        if i2 == 2033 goto label07;

        tableswitch(i2)
        {
            case 2040: goto label04;
            case 2041: goto label07;
            case 2042: goto label03;
            default: goto label02;
        };

     label02:
        goto label10;

     label03:
        $r9 = r0.<com.android.server.wm.DisplayPolicy: android.content.Context mContext>;

        virtualinvoke $r9.<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.INTERNAL_SYSTEM_WINDOW", i0, i1, "DisplayPolicy");

        goto label10;

     label04:
        $r10 = r0.<com.android.server.wm.DisplayPolicy: android.content.Context mContext>;

        virtualinvoke $r10.<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.STATUS_BAR_SERVICE", i0, i1, "DisplayPolicy");

        r12 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNotificationShade>;

        if r12 == null goto label10;

        $z3 = virtualinvoke r12.<com.android.server.wm.WindowState: boolean isAlive()>();

        if $z3 == 0 goto label10;

        return -7;

     label05:
        $r6 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowManagerService mService>;

        $r7 = $r6.<com.android.server.wm.WindowManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        $z2 = virtualinvoke $r7.<com.android.server.wm.ActivityTaskManagerInternal: boolean isCallerRecents(int)>(i1);

        if $z2 != 0 goto label10;

        $r8 = r0.<com.android.server.wm.DisplayPolicy: android.content.Context mContext>;

        virtualinvoke $r8.<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.STATUS_BAR_SERVICE", i0, i1, "DisplayPolicy");

        goto label10;

     label06:
        $r5 = r0.<com.android.server.wm.DisplayPolicy: android.content.Context mContext>;

        virtualinvoke $r5.<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.STATUS_BAR_SERVICE", i0, i1, "DisplayPolicy");

        r13 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mNavigationBar>;

        if r13 == null goto label10;

        $z1 = virtualinvoke r13.<com.android.server.wm.WindowState: boolean isAlive()>();

        if $z1 == 0 goto label10;

        return -7;

     label07:
        $r14 = r0.<com.android.server.wm.DisplayPolicy: android.content.Context mContext>;

        virtualinvoke $r14.<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.STATUS_BAR_SERVICE", i0, i1, "DisplayPolicy");

        goto label10;

     label08:
        return -10;

     label09:
        $r2 = r0.<com.android.server.wm.DisplayPolicy: android.content.Context mContext>;

        virtualinvoke $r2.<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.STATUS_BAR_SERVICE", i0, i1, "DisplayPolicy");

        r15 = r0.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState mStatusBar>;

        if r15 == null goto label10;

        $z0 = virtualinvoke r15.<com.android.server.wm.WindowState: boolean isAlive()>();

        if $z0 == 0 goto label10;

        return -7;

     label10:
        $r16 = r1.<android.view.WindowManager$LayoutParams: int[] providesInsetsTypes>;

        if $r16 == null goto label11;

        $r3 = r0.<com.android.server.wm.DisplayPolicy: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.STATUS_BAR_SERVICE", i0, i1, "DisplayPolicy");

        $r4 = r1.<android.view.WindowManager$LayoutParams: int[] providesInsetsTypes>;

        staticinvoke <com.android.server.wm.DisplayPolicy: void enforceSingleInsetsTypeCorrespondingToWindowType(int[])>($r4);

     label11:
        return 0;
    }
}
