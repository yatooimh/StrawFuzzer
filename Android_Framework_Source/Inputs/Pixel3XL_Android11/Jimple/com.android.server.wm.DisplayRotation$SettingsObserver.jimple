class com.android.server.wm.DisplayRotation$SettingsObserver extends android.database.ContentObserver
{
    final com.android.server.wm.DisplayRotation this$0;

    void <init>(com.android.server.wm.DisplayRotation, android.os.Handler)
    {
        com.android.server.wm.DisplayRotation$SettingsObserver r0;
        com.android.server.wm.DisplayRotation r1;
        android.os.Handler r2;

        r0 := @this: com.android.server.wm.DisplayRotation$SettingsObserver;

        r1 := @parameter0: com.android.server.wm.DisplayRotation;

        r2 := @parameter1: android.os.Handler;

        r0.<com.android.server.wm.DisplayRotation$SettingsObserver: com.android.server.wm.DisplayRotation this$0> = r1;

        specialinvoke r0.<android.database.ContentObserver: void <init>(android.os.Handler)>(r2);

        return;
    }

    void observe()
    {
        com.android.server.wm.DisplayRotation$SettingsObserver r0;
        android.content.ContentResolver r1;
        com.android.server.wm.DisplayRotation $r2, $r7;
        android.content.Context $r3;
        android.net.Uri $r4, $r5, $r6;

        r0 := @this: com.android.server.wm.DisplayRotation$SettingsObserver;

        $r2 = r0.<com.android.server.wm.DisplayRotation$SettingsObserver: com.android.server.wm.DisplayRotation this$0>;

        $r3 = staticinvoke <com.android.server.wm.DisplayRotation: android.content.Context access$800(com.android.server.wm.DisplayRotation)>($r2);

        r1 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r4 = staticinvoke <android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>("show_rotation_suggestions");

        virtualinvoke r1.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>($r4, 0, r0, -1);

        $r5 = staticinvoke <android.provider.Settings$System: android.net.Uri getUriFor(java.lang.String)>("accelerometer_rotation");

        virtualinvoke r1.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>($r5, 0, r0, -1);

        $r6 = staticinvoke <android.provider.Settings$System: android.net.Uri getUriFor(java.lang.String)>("user_rotation");

        virtualinvoke r1.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>($r6, 0, r0, -1);

        $r7 = r0.<com.android.server.wm.DisplayRotation$SettingsObserver: com.android.server.wm.DisplayRotation this$0>;

        staticinvoke <com.android.server.wm.DisplayRotation: boolean access$900(com.android.server.wm.DisplayRotation)>($r7);

        return;
    }

    public void onChange(boolean)
    {
        com.android.server.wm.DisplayRotation$SettingsObserver r0;
        boolean z0, $z1;
        com.android.server.wm.DisplayRotation $r1, $r2;
        com.android.server.wm.WindowManagerService $r3;

        r0 := @this: com.android.server.wm.DisplayRotation$SettingsObserver;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.server.wm.DisplayRotation$SettingsObserver: com.android.server.wm.DisplayRotation this$0>;

        $z1 = staticinvoke <com.android.server.wm.DisplayRotation: boolean access$900(com.android.server.wm.DisplayRotation)>($r1);

        if $z1 == 0 goto label1;

        $r2 = r0.<com.android.server.wm.DisplayRotation$SettingsObserver: com.android.server.wm.DisplayRotation this$0>;

        $r3 = staticinvoke <com.android.server.wm.DisplayRotation: com.android.server.wm.WindowManagerService access$300(com.android.server.wm.DisplayRotation)>($r2);

        virtualinvoke $r3.<com.android.server.wm.WindowManagerService: void updateRotation(boolean,boolean)>(1, 0);

     label1:
        return;
    }
}
