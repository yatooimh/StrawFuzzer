public class com.android.server.wm.DockedStackDividerController extends java.lang.Object
{
    private final com.android.server.wm.DisplayContent mDisplayContent;
    private boolean mResizing;
    private final android.graphics.Rect mTouchRegion;

    void <init>(com.android.server.wm.DisplayContent)
    {
        com.android.server.wm.DockedStackDividerController r0;
        com.android.server.wm.DisplayContent r1;
        android.graphics.Rect $r2;

        r0 := @this: com.android.server.wm.DockedStackDividerController;

        r1 := @parameter0: com.android.server.wm.DisplayContent;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.DockedStackDividerController: android.graphics.Rect mTouchRegion> = $r2;

        r0.<com.android.server.wm.DockedStackDividerController: com.android.server.wm.DisplayContent mDisplayContent> = r1;

        return;
    }

    private void resetDragResizingChangeReported()
    {
        com.android.server.wm.DockedStackDividerController r0;
        com.android.server.wm.'-$$Lambda$vhwCX-wzYksBgFM46tASKUCeQRc' $r1;
        com.android.server.wm.DisplayContent $r2;
        java.util.function.Consumer r3;

        r0 := @this: com.android.server.wm.DockedStackDividerController;

        $r2 = r0.<com.android.server.wm.DockedStackDividerController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r1 = <com.android.server.wm._$$Lambda$vhwCX_wzYksBgFM46tASKUCeQRc: com.android.server.wm.'-$$Lambda$vhwCX-wzYksBgFM46tASKUCeQRc' INSTANCE>;

        r3 = (java.util.function.Consumer) $r1;

        virtualinvoke $r2.<com.android.server.wm.DisplayContent: void forAllWindows(java.util.function.Consumer,boolean)>(r3, 1);

        return;
    }

    void getTouchRegion(android.graphics.Rect)
    {
        com.android.server.wm.DockedStackDividerController r0;
        android.graphics.Rect r1, $r2;

        r0 := @this: com.android.server.wm.DockedStackDividerController;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<com.android.server.wm.DockedStackDividerController: android.graphics.Rect mTouchRegion>;

        virtualinvoke r1.<android.graphics.Rect: void set(android.graphics.Rect)>($r2);

        return;
    }

    boolean isResizing()
    {
        com.android.server.wm.DockedStackDividerController r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.DockedStackDividerController;

        $z0 = r0.<com.android.server.wm.DockedStackDividerController: boolean mResizing>;

        return $z0;
    }

    void setResizing(boolean)
    {
        com.android.server.wm.DockedStackDividerController r0;
        boolean z0, $z1;

        r0 := @this: com.android.server.wm.DockedStackDividerController;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.wm.DockedStackDividerController: boolean mResizing>;

        if $z1 == z0 goto label1;

        r0.<com.android.server.wm.DockedStackDividerController: boolean mResizing> = z0;

        specialinvoke r0.<com.android.server.wm.DockedStackDividerController: void resetDragResizingChangeReported()>();

     label1:
        return;
    }

    void setTouchRegion(android.graphics.Rect)
    {
        com.android.server.wm.DockedStackDividerController r0;
        android.graphics.Rect r1, $r2;
        com.android.server.wm.DisplayContent $r3, $r6, $r9;
        com.android.server.wm.WindowManagerService $r4, $r7;
        com.android.server.wm.AccessibilityController $r5, $r10;
        int[] $r8;
        int $i0;

        r0 := @this: com.android.server.wm.DockedStackDividerController;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<com.android.server.wm.DockedStackDividerController: android.graphics.Rect mTouchRegion>;

        virtualinvoke $r2.<android.graphics.Rect: void set(android.graphics.Rect)>(r1);

        $r3 = r0.<com.android.server.wm.DockedStackDividerController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r4 = $r3.<com.android.server.wm.DisplayContent: com.android.server.wm.WindowManagerService mWmService>;

        $r5 = $r4.<com.android.server.wm.WindowManagerService: com.android.server.wm.AccessibilityController mAccessibilityController>;

        if $r5 == null goto label1;

        $r6 = r0.<com.android.server.wm.DockedStackDividerController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r7 = $r6.<com.android.server.wm.DisplayContent: com.android.server.wm.WindowManagerService mWmService>;

        $r10 = $r7.<com.android.server.wm.WindowManagerService: com.android.server.wm.AccessibilityController mAccessibilityController>;

        $r8 = newarray (int)[1];

        $r9 = r0.<com.android.server.wm.DockedStackDividerController: com.android.server.wm.DisplayContent mDisplayContent>;

        $i0 = virtualinvoke $r9.<com.android.server.wm.DisplayContent: int getDisplayId()>();

        $r8[0] = $i0;

        virtualinvoke $r10.<com.android.server.wm.AccessibilityController: void onSomeWindowResizedOrMovedLocked(int[])>($r8);

     label1:
        return;
    }
}
