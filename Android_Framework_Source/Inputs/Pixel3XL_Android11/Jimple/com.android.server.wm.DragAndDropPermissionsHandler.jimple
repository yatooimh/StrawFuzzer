class com.android.server.wm.DragAndDropPermissionsHandler extends com.android.internal.view.IDragAndDropPermissions$Stub implements android.os.IBinder$DeathRecipient
{
    private android.os.IBinder mActivityToken;
    private final int mMode;
    private android.os.IBinder mPermissionOwnerToken;
    private final int mSourceUid;
    private final int mSourceUserId;
    private final java.lang.String mTargetPackage;
    private final int mTargetUserId;
    private android.os.IBinder mTransientToken;
    private final java.util.ArrayList mUris;

    void <init>(android.content.ClipData, int, java.lang.String, int, int, int)
    {
        com.android.server.wm.DragAndDropPermissionsHandler r0;
        android.content.ClipData r1;
        int i0, i1, i2, i3;
        java.lang.String r2;
        java.util.ArrayList $r4;

        r0 := @this: com.android.server.wm.DragAndDropPermissionsHandler;

        r1 := @parameter0: android.content.ClipData;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        specialinvoke r0.<com.android.internal.view.IDragAndDropPermissions$Stub: void <init>()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.wm.DragAndDropPermissionsHandler: java.util.ArrayList mUris> = $r4;

        r0.<com.android.server.wm.DragAndDropPermissionsHandler: android.os.IBinder mActivityToken> = null;

        r0.<com.android.server.wm.DragAndDropPermissionsHandler: android.os.IBinder mPermissionOwnerToken> = null;

        r0.<com.android.server.wm.DragAndDropPermissionsHandler: android.os.IBinder mTransientToken> = null;

        r0.<com.android.server.wm.DragAndDropPermissionsHandler: int mSourceUid> = i0;

        r0.<com.android.server.wm.DragAndDropPermissionsHandler: java.lang.String mTargetPackage> = r2;

        r0.<com.android.server.wm.DragAndDropPermissionsHandler: int mMode> = i1;

        r0.<com.android.server.wm.DragAndDropPermissionsHandler: int mSourceUserId> = i2;

        r0.<com.android.server.wm.DragAndDropPermissionsHandler: int mTargetUserId> = i3;

        virtualinvoke r1.<android.content.ClipData: void collectUris(java.util.List)>($r4);

        return;
    }

    private void doTake(android.os.IBinder) throws android.os.RemoteException
    {
        com.android.server.wm.DragAndDropPermissionsHandler r0;
        long l0;
        java.util.ArrayList $r1, $r3;
        int $i1, $i2, $i3, $i4, $i5, i6;
        android.app.IUriGrantsManager $r2;
        java.lang.String $r4;
        java.lang.Object $r5;
        android.net.Uri $r6;
        java.lang.Throwable $r7;
        android.os.IBinder r8;

        r0 := @this: com.android.server.wm.DragAndDropPermissionsHandler;

        r8 := @parameter0: android.os.IBinder;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        i6 = 0;

     label1:
        $r1 = r0.<com.android.server.wm.DragAndDropPermissionsHandler: java.util.ArrayList mUris>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if i6 >= $i1 goto label3;

        $r2 = staticinvoke <android.app.UriGrantsManager: android.app.IUriGrantsManager getService()>();

        $i2 = r0.<com.android.server.wm.DragAndDropPermissionsHandler: int mSourceUid>;

        $r4 = r0.<com.android.server.wm.DragAndDropPermissionsHandler: java.lang.String mTargetPackage>;

        $r3 = r0.<com.android.server.wm.DragAndDropPermissionsHandler: java.util.ArrayList mUris>;

        $r5 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $r6 = (android.net.Uri) $r5;

        $i5 = r0.<com.android.server.wm.DragAndDropPermissionsHandler: int mMode>;

        $i4 = r0.<com.android.server.wm.DragAndDropPermissionsHandler: int mSourceUserId>;

        $i3 = r0.<com.android.server.wm.DragAndDropPermissionsHandler: int mTargetUserId>;

        interfaceinvoke $r2.<android.app.IUriGrantsManager: void grantUriPermissionFromOwner(android.os.IBinder,int,java.lang.String,android.net.Uri,int,int,int)>(r8, $i2, $r4, $r6, $i5, $i4, $i3);

     label2:
        i6 = i6 + 1;

        goto label1;

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label4:
        $r7 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void binderDied()
    {
        com.android.server.wm.DragAndDropPermissionsHandler r0;
        android.os.RemoteException $r2;

        r0 := @this: com.android.server.wm.DragAndDropPermissionsHandler;

     label1:
        virtualinvoke r0.<com.android.server.wm.DragAndDropPermissionsHandler: void release()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void release() throws android.os.RemoteException
    {
        com.android.server.wm.DragAndDropPermissionsHandler r0;
        com.android.server.uri.UriGrantsManagerInternal r1;
        android.os.IBinder $r2, $r3, $r4, $r10, $r11, r14;
        java.lang.Object $r5, $r7;
        java.util.ArrayList $r6, $r17;
        int $i0, $i1, i2, $i3;
        android.net.Uri $r8;
        android.app.IActivityTaskManager $r9;
        java.lang.Throwable $r12;
        java.lang.Exception $r13;

        r0 := @this: com.android.server.wm.DragAndDropPermissionsHandler;

        $r2 = r0.<com.android.server.wm.DragAndDropPermissionsHandler: android.os.IBinder mActivityToken>;

        if $r2 != null goto label1;

        $r11 = r0.<com.android.server.wm.DragAndDropPermissionsHandler: android.os.IBinder mPermissionOwnerToken>;

        if $r11 != null goto label1;

        return;

     label1:
        $r3 = r0.<com.android.server.wm.DragAndDropPermissionsHandler: android.os.IBinder mActivityToken>;

        if $r3 == null goto label6;

     label2:
        $r9 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r10 = r0.<com.android.server.wm.DragAndDropPermissionsHandler: android.os.IBinder mActivityToken>;

        r14 = interfaceinvoke $r9.<android.app.IActivityTaskManager: android.os.IBinder getUriPermissionOwnerForActivity(android.os.IBinder)>($r10);

     label3:
        r0.<com.android.server.wm.DragAndDropPermissionsHandler: android.os.IBinder mActivityToken> = null;

        goto label7;

     label4:
        $r12 := @caughtexception;

        r0.<com.android.server.wm.DragAndDropPermissionsHandler: android.os.IBinder mActivityToken> = null;

        throw $r12;

     label5:
        $r13 := @caughtexception;

        r0.<com.android.server.wm.DragAndDropPermissionsHandler: android.os.IBinder mActivityToken> = null;

        return;

     label6:
        r14 = r0.<com.android.server.wm.DragAndDropPermissionsHandler: android.os.IBinder mPermissionOwnerToken>;

        r0.<com.android.server.wm.DragAndDropPermissionsHandler: android.os.IBinder mPermissionOwnerToken> = null;

        $r4 = r0.<com.android.server.wm.DragAndDropPermissionsHandler: android.os.IBinder mTransientToken>;

        interfaceinvoke $r4.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

        r0.<com.android.server.wm.DragAndDropPermissionsHandler: android.os.IBinder mTransientToken> = null;

     label7:
        $r5 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/uri/UriGrantsManagerInternal;");

        r1 = (com.android.server.uri.UriGrantsManagerInternal) $r5;

        i2 = 0;

     label8:
        $r17 = r0.<com.android.server.wm.DragAndDropPermissionsHandler: java.util.ArrayList mUris>;

        $i3 = virtualinvoke $r17.<java.util.ArrayList: int size()>();

        if i2 >= $i3 goto label9;

        $r6 = r0.<com.android.server.wm.DragAndDropPermissionsHandler: java.util.ArrayList mUris>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r8 = (android.net.Uri) $r7;

        $i1 = r0.<com.android.server.wm.DragAndDropPermissionsHandler: int mMode>;

        $i0 = r0.<com.android.server.wm.DragAndDropPermissionsHandler: int mSourceUserId>;

        interfaceinvoke r1.<com.android.server.uri.UriGrantsManagerInternal: void revokeUriPermissionFromOwner(android.os.IBinder,android.net.Uri,int,int)>(r14, $r8, $i1, $i0);

        i2 = i2 + 1;

        goto label8;

     label9:
        return;

        catch java.lang.Exception from label2 to label3 with label5;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public void take(android.os.IBinder) throws android.os.RemoteException
    {
        com.android.server.wm.DragAndDropPermissionsHandler r0;
        android.os.IBinder r1, $r2, $r3, $r5, $r6;
        android.app.IActivityTaskManager $r4;

        r0 := @this: com.android.server.wm.DragAndDropPermissionsHandler;

        r1 := @parameter0: android.os.IBinder;

        $r2 = r0.<com.android.server.wm.DragAndDropPermissionsHandler: android.os.IBinder mActivityToken>;

        if $r2 != null goto label2;

        $r3 = r0.<com.android.server.wm.DragAndDropPermissionsHandler: android.os.IBinder mPermissionOwnerToken>;

        if $r3 == null goto label1;

        goto label2;

     label1:
        r0.<com.android.server.wm.DragAndDropPermissionsHandler: android.os.IBinder mActivityToken> = r1;

        $r4 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r5 = r0.<com.android.server.wm.DragAndDropPermissionsHandler: android.os.IBinder mActivityToken>;

        $r6 = interfaceinvoke $r4.<android.app.IActivityTaskManager: android.os.IBinder getUriPermissionOwnerForActivity(android.os.IBinder)>($r5);

        specialinvoke r0.<com.android.server.wm.DragAndDropPermissionsHandler: void doTake(android.os.IBinder)>($r6);

        return;

     label2:
        return;
    }

    public void takeTransient(android.os.IBinder) throws android.os.RemoteException
    {
        com.android.server.wm.DragAndDropPermissionsHandler r0;
        android.os.IBinder r1, $r2, $r3, $r6, $r7;
        java.lang.Object $r4;
        com.android.server.uri.UriGrantsManagerInternal $r5;

        r0 := @this: com.android.server.wm.DragAndDropPermissionsHandler;

        r1 := @parameter0: android.os.IBinder;

        $r2 = r0.<com.android.server.wm.DragAndDropPermissionsHandler: android.os.IBinder mActivityToken>;

        if $r2 != null goto label2;

        $r3 = r0.<com.android.server.wm.DragAndDropPermissionsHandler: android.os.IBinder mPermissionOwnerToken>;

        if $r3 == null goto label1;

        goto label2;

     label1:
        $r4 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/uri/UriGrantsManagerInternal;");

        $r5 = (com.android.server.uri.UriGrantsManagerInternal) $r4;

        $r6 = interfaceinvoke $r5.<com.android.server.uri.UriGrantsManagerInternal: android.os.IBinder newUriPermissionOwner(java.lang.String)>("drop");

        r0.<com.android.server.wm.DragAndDropPermissionsHandler: android.os.IBinder mPermissionOwnerToken> = $r6;

        r0.<com.android.server.wm.DragAndDropPermissionsHandler: android.os.IBinder mTransientToken> = r1;

        interfaceinvoke r1.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

        $r7 = r0.<com.android.server.wm.DragAndDropPermissionsHandler: android.os.IBinder mPermissionOwnerToken>;

        specialinvoke r0.<com.android.server.wm.DragAndDropPermissionsHandler: void doTake(android.os.IBinder)>($r7);

        return;

     label2:
        return;
    }
}
