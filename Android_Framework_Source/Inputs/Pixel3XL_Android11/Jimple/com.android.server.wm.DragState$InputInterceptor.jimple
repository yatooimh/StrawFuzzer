class com.android.server.wm.DragState$InputInterceptor extends java.lang.Object
{
    android.view.InputChannel mClientChannel;
    android.view.InputApplicationHandle mDragApplicationHandle;
    android.view.InputWindowHandle mDragWindowHandle;
    com.android.server.wm.DragInputEventReceiver mInputEventReceiver;
    android.view.InputChannel mServerChannel;
    final com.android.server.wm.DragState this$0;

    void <init>(com.android.server.wm.DragState, android.view.Display)
    {
        com.android.server.wm.DragState$InputInterceptor r0;
        com.android.server.wm.DragState r1;
        android.view.InputChannel $r2, $r3, $r5, $r10, $r18;
        com.android.server.wm.WindowManagerService $r4, $r8;
        com.android.server.input.InputManagerService $r6;
        com.android.server.wm.DragInputEventReceiver $r7;
        com.android.server.wm.WindowManagerService$H $r9;
        android.os.Looper $r11;
        com.android.server.wm.DragDropController $r12;
        android.view.InputApplicationHandle $r13, $r15, $r17;
        android.os.Binder $r14;
        android.view.InputWindowHandle $r16, $r19, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r35, $r36, $r37, $r39;
        int $i0, $i1, $i2, $i3, $i4;
        android.os.IBinder $r20;
        android.graphics.Region $r34;
        android.graphics.Point $r38, $r40;
        boolean $z0;
        com.android.server.wm.DisplayContent $r41;
        com.android.server.wm.DisplayRotation $r42;
        java.lang.Object[] $r43;
        com.android.server.wm.ProtoLogGroup $r44;
        android.view.Display r45;
        android.view.InputChannel[] r46;

        r0 := @this: com.android.server.wm.DragState$InputInterceptor;

        r1 := @parameter0: com.android.server.wm.DragState;

        r45 := @parameter1: android.view.Display;

        r0.<com.android.server.wm.DragState$InputInterceptor: com.android.server.wm.DragState this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r46 = staticinvoke <android.view.InputChannel: android.view.InputChannel[] openInputChannelPair(java.lang.String)>("drag");

        $r2 = r46[0];

        r0.<com.android.server.wm.DragState$InputInterceptor: android.view.InputChannel mServerChannel> = $r2;

        $r3 = r46[1];

        r0.<com.android.server.wm.DragState$InputInterceptor: android.view.InputChannel mClientChannel> = $r3;

        $r4 = r1.<com.android.server.wm.DragState: com.android.server.wm.WindowManagerService mService>;

        $r6 = $r4.<com.android.server.wm.WindowManagerService: com.android.server.input.InputManagerService mInputManager>;

        $r5 = r0.<com.android.server.wm.DragState$InputInterceptor: android.view.InputChannel mServerChannel>;

        virtualinvoke $r6.<com.android.server.input.InputManagerService: void registerInputChannel(android.view.InputChannel)>($r5);

        $r7 = new com.android.server.wm.DragInputEventReceiver;

        $r10 = r0.<com.android.server.wm.DragState$InputInterceptor: android.view.InputChannel mClientChannel>;

        $r8 = r1.<com.android.server.wm.DragState: com.android.server.wm.WindowManagerService mService>;

        $r9 = $r8.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerService$H mH>;

        $r11 = virtualinvoke $r9.<com.android.server.wm.WindowManagerService$H: android.os.Looper getLooper()>();

        $r12 = r1.<com.android.server.wm.DragState: com.android.server.wm.DragDropController mDragDropController>;

        specialinvoke $r7.<com.android.server.wm.DragInputEventReceiver: void <init>(android.view.InputChannel,android.os.Looper,com.android.server.wm.DragDropController)>($r10, $r11, $r12);

        r0.<com.android.server.wm.DragState$InputInterceptor: com.android.server.wm.DragInputEventReceiver mInputEventReceiver> = $r7;

        $r13 = new android.view.InputApplicationHandle;

        $r14 = new android.os.Binder;

        specialinvoke $r14.<android.os.Binder: void <init>()>();

        specialinvoke $r13.<android.view.InputApplicationHandle: void <init>(android.os.IBinder)>($r14);

        r0.<com.android.server.wm.DragState$InputInterceptor: android.view.InputApplicationHandle mDragApplicationHandle> = $r13;

        $r13.<android.view.InputApplicationHandle: java.lang.String name> = "drag";

        $r15 = r0.<com.android.server.wm.DragState$InputInterceptor: android.view.InputApplicationHandle mDragApplicationHandle>;

        $r15.<android.view.InputApplicationHandle: long dispatchingTimeoutNanos> = 5000000000L;

        $r16 = new android.view.InputWindowHandle;

        $r17 = r0.<com.android.server.wm.DragState$InputInterceptor: android.view.InputApplicationHandle mDragApplicationHandle>;

        $i0 = virtualinvoke r45.<android.view.Display: int getDisplayId()>();

        specialinvoke $r16.<android.view.InputWindowHandle: void <init>(android.view.InputApplicationHandle,int)>($r17, $i0);

        r0.<com.android.server.wm.DragState$InputInterceptor: android.view.InputWindowHandle mDragWindowHandle> = $r16;

        $r16.<android.view.InputWindowHandle: java.lang.String name> = "drag";

        $r19 = r0.<com.android.server.wm.DragState$InputInterceptor: android.view.InputWindowHandle mDragWindowHandle>;

        $r18 = r0.<com.android.server.wm.DragState$InputInterceptor: android.view.InputChannel mServerChannel>;

        $r20 = virtualinvoke $r18.<android.view.InputChannel: android.os.IBinder getToken()>();

        $r19.<android.view.InputWindowHandle: android.os.IBinder token> = $r20;

        $r21 = r0.<com.android.server.wm.DragState$InputInterceptor: android.view.InputWindowHandle mDragWindowHandle>;

        $r21.<android.view.InputWindowHandle: int layoutParamsFlags> = 0;

        $r22 = r0.<com.android.server.wm.DragState$InputInterceptor: android.view.InputWindowHandle mDragWindowHandle>;

        $r22.<android.view.InputWindowHandle: int layoutParamsType> = 2016;

        $r23 = r0.<com.android.server.wm.DragState$InputInterceptor: android.view.InputWindowHandle mDragWindowHandle>;

        $r23.<android.view.InputWindowHandle: long dispatchingTimeoutNanos> = 5000000000L;

        $r24 = r0.<com.android.server.wm.DragState$InputInterceptor: android.view.InputWindowHandle mDragWindowHandle>;

        $r24.<android.view.InputWindowHandle: boolean visible> = 1;

        $r25 = r0.<com.android.server.wm.DragState$InputInterceptor: android.view.InputWindowHandle mDragWindowHandle>;

        $r25.<android.view.InputWindowHandle: boolean canReceiveKeys> = 0;

        $r26 = r0.<com.android.server.wm.DragState$InputInterceptor: android.view.InputWindowHandle mDragWindowHandle>;

        $r26.<android.view.InputWindowHandle: boolean hasFocus> = 1;

        $r27 = r0.<com.android.server.wm.DragState$InputInterceptor: android.view.InputWindowHandle mDragWindowHandle>;

        $r27.<android.view.InputWindowHandle: boolean hasWallpaper> = 0;

        $r28 = r0.<com.android.server.wm.DragState$InputInterceptor: android.view.InputWindowHandle mDragWindowHandle>;

        $r28.<android.view.InputWindowHandle: boolean paused> = 0;

        $r29 = r0.<com.android.server.wm.DragState$InputInterceptor: android.view.InputWindowHandle mDragWindowHandle>;

        $i1 = staticinvoke <android.os.Process: int myPid()>();

        $r29.<android.view.InputWindowHandle: int ownerPid> = $i1;

        $r30 = r0.<com.android.server.wm.DragState$InputInterceptor: android.view.InputWindowHandle mDragWindowHandle>;

        $i2 = staticinvoke <android.os.Process: int myUid()>();

        $r30.<android.view.InputWindowHandle: int ownerUid> = $i2;

        $r31 = r0.<com.android.server.wm.DragState$InputInterceptor: android.view.InputWindowHandle mDragWindowHandle>;

        $r31.<android.view.InputWindowHandle: int inputFeatures> = 0;

        $r32 = r0.<com.android.server.wm.DragState$InputInterceptor: android.view.InputWindowHandle mDragWindowHandle>;

        $r32.<android.view.InputWindowHandle: float scaleFactor> = 1.0F;

        $r33 = r0.<com.android.server.wm.DragState$InputInterceptor: android.view.InputWindowHandle mDragWindowHandle>;

        $r34 = $r33.<android.view.InputWindowHandle: android.graphics.Region touchableRegion>;

        virtualinvoke $r34.<android.graphics.Region: void setEmpty()>();

        $r35 = r0.<com.android.server.wm.DragState$InputInterceptor: android.view.InputWindowHandle mDragWindowHandle>;

        $r35.<android.view.InputWindowHandle: int frameLeft> = 0;

        $r36 = r0.<com.android.server.wm.DragState$InputInterceptor: android.view.InputWindowHandle mDragWindowHandle>;

        $r36.<android.view.InputWindowHandle: int frameTop> = 0;

        $r37 = r0.<com.android.server.wm.DragState$InputInterceptor: android.view.InputWindowHandle mDragWindowHandle>;

        $r38 = staticinvoke <com.android.server.wm.DragState: android.graphics.Point access$000(com.android.server.wm.DragState)>(r1);

        $i3 = $r38.<android.graphics.Point: int x>;

        $r37.<android.view.InputWindowHandle: int frameRight> = $i3;

        $r39 = r0.<com.android.server.wm.DragState$InputInterceptor: android.view.InputWindowHandle mDragWindowHandle>;

        $r40 = staticinvoke <com.android.server.wm.DragState: android.graphics.Point access$000(com.android.server.wm.DragState)>(r1);

        $i4 = $r40.<android.graphics.Point: int y>;

        $r39.<android.view.InputWindowHandle: int frameBottom> = $i4;

        $z0 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_ORIENTATION_enabled>;

        if $z0 == 0 goto label1;

        $r44 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_ORIENTATION>;

        $r43 = (java.lang.Object[]) null;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void d(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r44, -694710814, 0, null, $r43);

     label1:
        $r41 = r1.<com.android.server.wm.DragState: com.android.server.wm.DisplayContent mDisplayContent>;

        $r42 = virtualinvoke $r41.<com.android.server.wm.DisplayContent: com.android.server.wm.DisplayRotation getDisplayRotation()>();

        virtualinvoke $r42.<com.android.server.wm.DisplayRotation: void pause()>();

        return;
    }

    void tearDown()
    {
        com.android.server.wm.DragState$InputInterceptor r0;
        com.android.server.wm.DragState $r1, $r8;
        com.android.server.wm.WindowManagerService $r2;
        android.view.InputChannel $r3, $r6, $r7;
        com.android.server.input.InputManagerService $r4;
        com.android.server.wm.DragInputEventReceiver $r5;
        boolean $z0;
        com.android.server.wm.DisplayContent $r9;
        com.android.server.wm.DisplayRotation $r10;
        java.lang.Object[] $r11;
        com.android.server.wm.ProtoLogGroup $r12;

        r0 := @this: com.android.server.wm.DragState$InputInterceptor;

        $r1 = r0.<com.android.server.wm.DragState$InputInterceptor: com.android.server.wm.DragState this$0>;

        $r2 = $r1.<com.android.server.wm.DragState: com.android.server.wm.WindowManagerService mService>;

        $r4 = $r2.<com.android.server.wm.WindowManagerService: com.android.server.input.InputManagerService mInputManager>;

        $r3 = r0.<com.android.server.wm.DragState$InputInterceptor: android.view.InputChannel mServerChannel>;

        virtualinvoke $r4.<com.android.server.input.InputManagerService: void unregisterInputChannel(android.view.InputChannel)>($r3);

        $r5 = r0.<com.android.server.wm.DragState$InputInterceptor: com.android.server.wm.DragInputEventReceiver mInputEventReceiver>;

        virtualinvoke $r5.<com.android.server.wm.DragInputEventReceiver: void dispose()>();

        r0.<com.android.server.wm.DragState$InputInterceptor: com.android.server.wm.DragInputEventReceiver mInputEventReceiver> = null;

        $r6 = r0.<com.android.server.wm.DragState$InputInterceptor: android.view.InputChannel mClientChannel>;

        virtualinvoke $r6.<android.view.InputChannel: void dispose()>();

        $r7 = r0.<com.android.server.wm.DragState$InputInterceptor: android.view.InputChannel mServerChannel>;

        virtualinvoke $r7.<android.view.InputChannel: void dispose()>();

        r0.<com.android.server.wm.DragState$InputInterceptor: android.view.InputChannel mClientChannel> = null;

        r0.<com.android.server.wm.DragState$InputInterceptor: android.view.InputChannel mServerChannel> = null;

        r0.<com.android.server.wm.DragState$InputInterceptor: android.view.InputWindowHandle mDragWindowHandle> = null;

        r0.<com.android.server.wm.DragState$InputInterceptor: android.view.InputApplicationHandle mDragApplicationHandle> = null;

        $z0 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_ORIENTATION_enabled>;

        if $z0 == 0 goto label1;

        $r12 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_ORIENTATION>;

        $r11 = (java.lang.Object[]) null;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void d(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r12, 269576220, 0, null, $r11);

     label1:
        $r8 = r0.<com.android.server.wm.DragState$InputInterceptor: com.android.server.wm.DragState this$0>;

        $r9 = $r8.<com.android.server.wm.DragState: com.android.server.wm.DisplayContent mDisplayContent>;

        $r10 = virtualinvoke $r9.<com.android.server.wm.DisplayContent: com.android.server.wm.DisplayRotation getDisplayRotation()>();

        virtualinvoke $r10.<com.android.server.wm.DisplayRotation: void resume()>();

        return;
    }
}
