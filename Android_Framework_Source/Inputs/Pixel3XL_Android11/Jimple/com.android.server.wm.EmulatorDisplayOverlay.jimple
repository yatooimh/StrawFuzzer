class com.android.server.wm.EmulatorDisplayOverlay extends java.lang.Object
{
    private static final java.lang.String TAG;
    private boolean mDrawNeeded;
    private int mLastDH;
    private int mLastDW;
    private android.graphics.drawable.Drawable mOverlay;
    private int mRotation;
    private android.graphics.Point mScreenSize;
    private final android.view.Surface mSurface;
    private final android.view.SurfaceControl mSurfaceControl;
    private boolean mVisible;

    void <init>(java.util.function.Supplier, android.content.Context, com.android.server.wm.DisplayContent, int, android.view.SurfaceControl$Transaction)
    {
        com.android.server.wm.EmulatorDisplayOverlay r0;
        android.content.Context r1;
        int i0, $i1, $i2, $i3;
        android.view.SurfaceControl$Transaction r2;
        java.lang.Object $r3;
        android.view.Surface $r4, $r16;
        android.graphics.Point $r5, $r8, $r9;
        android.view.SurfaceControl$Builder $r6, $r7, $r10, $r11, $r12;
        android.graphics.drawable.Drawable $r17;
        android.view.Surface$OutOfResourcesException $r18;
        java.util.function.Supplier r19;
        com.android.server.wm.DisplayContent r20;
        android.view.Display r21;
        android.view.SurfaceControl r23, r24;

        r0 := @this: com.android.server.wm.EmulatorDisplayOverlay;

        r19 := @parameter0: java.util.function.Supplier;

        r1 := @parameter1: android.content.Context;

        r20 := @parameter2: com.android.server.wm.DisplayContent;

        i0 := @parameter3: int;

        r2 := @parameter4: android.view.SurfaceControl$Transaction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = interfaceinvoke r19.<java.util.function.Supplier: java.lang.Object get()>();

        $r4 = (android.view.Surface) $r3;

        r0.<com.android.server.wm.EmulatorDisplayOverlay: android.view.Surface mSurface> = $r4;

        r21 = virtualinvoke r20.<com.android.server.wm.DisplayContent: android.view.Display getDisplay()>();

        $r5 = new android.graphics.Point;

        specialinvoke $r5.<android.graphics.Point: void <init>()>();

        r0.<com.android.server.wm.EmulatorDisplayOverlay: android.graphics.Point mScreenSize> = $r5;

        virtualinvoke r21.<android.view.Display: void getSize(android.graphics.Point)>($r5);

        r23 = null;

     label01:
        $r6 = virtualinvoke r20.<com.android.server.wm.DisplayContent: android.view.SurfaceControl$Builder makeOverlay()>();

        $r7 = virtualinvoke $r6.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setName(java.lang.String)>("EmulatorDisplayOverlay");

        $r8 = r0.<com.android.server.wm.EmulatorDisplayOverlay: android.graphics.Point mScreenSize>;

        $i2 = $r8.<android.graphics.Point: int x>;

        $r9 = r0.<com.android.server.wm.EmulatorDisplayOverlay: android.graphics.Point mScreenSize>;

        $i1 = $r9.<android.graphics.Point: int y>;

        $r10 = virtualinvoke $r7.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setBufferSize(int,int)>($i2, $i1);

        $r11 = virtualinvoke $r10.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setFormat(int)>(-3);

        $r12 = virtualinvoke $r11.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setCallsite(java.lang.String)>("EmulatorDisplayOverlay");

        r24 = virtualinvoke $r12.<android.view.SurfaceControl$Builder: android.view.SurfaceControl build()>();

     label02:
        r23 = r24;

     label03:
        virtualinvoke r2.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setLayer(android.view.SurfaceControl,int)>(r24, i0);

     label04:
        r23 = r24;

     label05:
        virtualinvoke r2.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setPosition(android.view.SurfaceControl,float,float)>(r24, 0.0F, 0.0F);

     label06:
        r23 = r24;

     label07:
        virtualinvoke r2.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction show(android.view.SurfaceControl)>(r24);

     label08:
        r23 = r24;

     label09:
        $i3 = virtualinvoke r20.<com.android.server.wm.DisplayContent: int getDisplayId()>();

        staticinvoke <com.android.server.wm.InputMonitor: void setTrustedOverlayInputInfo(android.view.SurfaceControl,android.view.SurfaceControl$Transaction,int,java.lang.String)>(r24, r2, $i3, "EmulatorDisplayOverlay");

     label10:
        r23 = r24;

     label11:
        $r16 = r0.<com.android.server.wm.EmulatorDisplayOverlay: android.view.Surface mSurface>;

        virtualinvoke $r16.<android.view.Surface: void copyFrom(android.view.SurfaceControl)>(r24);

     label12:
        r23 = r24;

        goto label14;

     label13:
        $r18 := @caughtexception;

     label14:
        r0.<com.android.server.wm.EmulatorDisplayOverlay: android.view.SurfaceControl mSurfaceControl> = r23;

        r0.<com.android.server.wm.EmulatorDisplayOverlay: boolean mDrawNeeded> = 1;

        $r17 = virtualinvoke r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(17302234);

        r0.<com.android.server.wm.EmulatorDisplayOverlay: android.graphics.drawable.Drawable mOverlay> = $r17;

        return;

        catch android.view.Surface$OutOfResourcesException from label01 to label02 with label13;
        catch android.view.Surface$OutOfResourcesException from label03 to label04 with label13;
        catch android.view.Surface$OutOfResourcesException from label05 to label06 with label13;
        catch android.view.Surface$OutOfResourcesException from label07 to label08 with label13;
        catch android.view.Surface$OutOfResourcesException from label09 to label10 with label13;
        catch android.view.Surface$OutOfResourcesException from label11 to label12 with label13;
    }

    private void drawIfNeeded(android.view.SurfaceControl$Transaction)
    {
        com.android.server.wm.EmulatorDisplayOverlay r0;
        android.view.SurfaceControl$Transaction r1;
        int i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1;
        android.graphics.Rect $r2;
        android.graphics.Point $r3, $r4, $r8, $r9;
        android.view.Surface $r5, $r12;
        android.graphics.PorterDuff$Mode $r6;
        android.view.SurfaceControl $r7;
        android.graphics.drawable.Drawable $r10, $r11;
        android.view.Surface$OutOfResourcesException $r13;
        java.lang.Throwable $r14;
        android.graphics.Canvas r16, r17;

        r0 := @this: com.android.server.wm.EmulatorDisplayOverlay;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        $z0 = r0.<com.android.server.wm.EmulatorDisplayOverlay: boolean mDrawNeeded>;

        if $z0 == 0 goto label9;

        $z1 = r0.<com.android.server.wm.EmulatorDisplayOverlay: boolean mVisible>;

        if $z1 != 0 goto label1;

        goto label9;

     label1:
        r0.<com.android.server.wm.EmulatorDisplayOverlay: boolean mDrawNeeded> = 0;

        $r2 = new android.graphics.Rect;

        $r3 = r0.<com.android.server.wm.EmulatorDisplayOverlay: android.graphics.Point mScreenSize>;

        $i2 = $r3.<android.graphics.Point: int x>;

        $r4 = r0.<com.android.server.wm.EmulatorDisplayOverlay: android.graphics.Point mScreenSize>;

        $i1 = $r4.<android.graphics.Point: int y>;

        specialinvoke $r2.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, $i2, $i1);

        r16 = null;

     label2:
        $r5 = r0.<com.android.server.wm.EmulatorDisplayOverlay: android.view.Surface mSurface>;

        r17 = virtualinvoke $r5.<android.view.Surface: android.graphics.Canvas lockCanvas(android.graphics.Rect)>($r2);

     label3:
        r16 = r17;

     label4:
        goto label7;

     label5:
        $r13 := @caughtexception;

        r16 = null;

        goto label7;

     label6:
        $r14 := @caughtexception;

        goto label4;

     label7:
        if r16 != null goto label8;

        return;

     label8:
        $r6 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC>;

        virtualinvoke r16.<android.graphics.Canvas: void drawColor(int,android.graphics.PorterDuff$Mode)>(0, $r6);

        $r7 = r0.<com.android.server.wm.EmulatorDisplayOverlay: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setPosition(android.view.SurfaceControl,float,float)>($r7, 0.0F, 0.0F);

        $r8 = r0.<com.android.server.wm.EmulatorDisplayOverlay: android.graphics.Point mScreenSize>;

        $i4 = $r8.<android.graphics.Point: int x>;

        $r9 = r0.<com.android.server.wm.EmulatorDisplayOverlay: android.graphics.Point mScreenSize>;

        $i3 = $r9.<android.graphics.Point: int y>;

        i0 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i3);

        $r10 = r0.<com.android.server.wm.EmulatorDisplayOverlay: android.graphics.drawable.Drawable mOverlay>;

        virtualinvoke $r10.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, i0, i0);

        $r11 = r0.<com.android.server.wm.EmulatorDisplayOverlay: android.graphics.drawable.Drawable mOverlay>;

        virtualinvoke $r11.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r16);

        $r12 = r0.<com.android.server.wm.EmulatorDisplayOverlay: android.view.Surface mSurface>;

        virtualinvoke $r12.<android.view.Surface: void unlockCanvasAndPost(android.graphics.Canvas)>(r16);

        return;

     label9:
        return;

        catch java.lang.IllegalArgumentException from label2 to label3 with label6;
        catch android.view.Surface$OutOfResourcesException from label2 to label3 with label5;
    }

    void positionSurface(int, int, int, android.view.SurfaceControl$Transaction)
    {
        com.android.server.wm.EmulatorDisplayOverlay r0;
        int i0, i1, i2, $i3, $i4, $i5;
        android.view.SurfaceControl$Transaction r1;

        r0 := @this: com.android.server.wm.EmulatorDisplayOverlay;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: android.view.SurfaceControl$Transaction;

        $i3 = r0.<com.android.server.wm.EmulatorDisplayOverlay: int mLastDW>;

        if $i3 != i0 goto label1;

        $i4 = r0.<com.android.server.wm.EmulatorDisplayOverlay: int mLastDH>;

        if $i4 != i1 goto label1;

        $i5 = r0.<com.android.server.wm.EmulatorDisplayOverlay: int mRotation>;

        if $i5 != i2 goto label1;

        return;

     label1:
        r0.<com.android.server.wm.EmulatorDisplayOverlay: int mLastDW> = i0;

        r0.<com.android.server.wm.EmulatorDisplayOverlay: int mLastDH> = i1;

        r0.<com.android.server.wm.EmulatorDisplayOverlay: boolean mDrawNeeded> = 1;

        r0.<com.android.server.wm.EmulatorDisplayOverlay: int mRotation> = i2;

        specialinvoke r0.<com.android.server.wm.EmulatorDisplayOverlay: void drawIfNeeded(android.view.SurfaceControl$Transaction)>(r1);

        return;
    }

    public void setVisibility(boolean, android.view.SurfaceControl$Transaction)
    {
        com.android.server.wm.EmulatorDisplayOverlay r0;
        boolean z0;
        android.view.SurfaceControl$Transaction r1;
        android.view.SurfaceControl $r2, $r3, $r5;

        r0 := @this: com.android.server.wm.EmulatorDisplayOverlay;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.view.SurfaceControl$Transaction;

        $r2 = r0.<com.android.server.wm.EmulatorDisplayOverlay: android.view.SurfaceControl mSurfaceControl>;

        if $r2 != null goto label1;

        return;

     label1:
        r0.<com.android.server.wm.EmulatorDisplayOverlay: boolean mVisible> = z0;

        specialinvoke r0.<com.android.server.wm.EmulatorDisplayOverlay: void drawIfNeeded(android.view.SurfaceControl$Transaction)>(r1);

        if z0 == 0 goto label2;

        $r5 = r0.<com.android.server.wm.EmulatorDisplayOverlay: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction show(android.view.SurfaceControl)>($r5);

        goto label3;

     label2:
        $r3 = r0.<com.android.server.wm.EmulatorDisplayOverlay: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction hide(android.view.SurfaceControl)>($r3);

     label3:
        return;
    }

    public static void <clinit>()
    {
        <com.android.server.wm.EmulatorDisplayOverlay: java.lang.String TAG> = "WindowManager";

        return;
    }
}
