class com.android.server.wm.InputManagerCallback$1 extends java.lang.Thread
{
    final com.android.server.wm.InputManagerCallback this$0;
    final java.util.concurrent.CountDownLatch val$latch;
    final java.lang.Runnable val$monitor;
    final java.lang.String val$name;
    final long val$now;
    final boolean[] val$shouldDumpSf;

    void <init>(com.android.server.wm.InputManagerCallback, java.lang.Runnable, java.util.concurrent.CountDownLatch, long, java.lang.String, boolean[])
    {
        com.android.server.wm.InputManagerCallback$1 r0;
        com.android.server.wm.InputManagerCallback r1;
        java.lang.Runnable r2;
        java.util.concurrent.CountDownLatch r3;
        long l0;
        java.lang.String r4;
        boolean[] r5;

        r0 := @this: com.android.server.wm.InputManagerCallback$1;

        r1 := @parameter0: com.android.server.wm.InputManagerCallback;

        r2 := @parameter1: java.lang.Runnable;

        r3 := @parameter2: java.util.concurrent.CountDownLatch;

        l0 := @parameter3: long;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: boolean[];

        r0.<com.android.server.wm.InputManagerCallback$1: com.android.server.wm.InputManagerCallback this$0> = r1;

        r0.<com.android.server.wm.InputManagerCallback$1: java.lang.Runnable val$monitor> = r2;

        r0.<com.android.server.wm.InputManagerCallback$1: java.util.concurrent.CountDownLatch val$latch> = r3;

        r0.<com.android.server.wm.InputManagerCallback$1: long val$now> = l0;

        r0.<com.android.server.wm.InputManagerCallback$1: java.lang.String val$name> = r4;

        r0.<com.android.server.wm.InputManagerCallback$1: boolean[] val$shouldDumpSf> = r5;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        return;
    }

    public void run()
    {
        com.android.server.wm.InputManagerCallback$1 r0;
        long l0, $l1, $l2, $l3;
        java.lang.Runnable $r2;
        java.util.concurrent.CountDownLatch $r3;
        byte $b4;
        java.lang.String $r4, $r5, $r9, $r14;
        boolean $z0;
        boolean[] $r6;
        java.lang.StringBuilder $r7;

        r0 := @this: com.android.server.wm.InputManagerCallback$1;

        $r2 = r0.<com.android.server.wm.InputManagerCallback$1: java.lang.Runnable val$monitor>;

        interfaceinvoke $r2.<java.lang.Runnable: void run()>();

        $r3 = r0.<com.android.server.wm.InputManagerCallback$1: java.util.concurrent.CountDownLatch val$latch>;

        virtualinvoke $r3.<java.util.concurrent.CountDownLatch: void countDown()>();

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l2 = r0.<com.android.server.wm.InputManagerCallback$1: long val$now>;

        l0 = $l1 - $l2;

        $l3 = staticinvoke <com.android.server.wm.InputManagerCallback: long access$000()>();

        $b4 = l0 cmp $l3;

        if $b4 <= 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pre-dump acquired ");

        $r9 = r0.<com.android.server.wm.InputManagerCallback$1: java.lang.String val$name>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms");

        $r14 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("WindowManager", $r14);

        goto label2;

     label1:
        $r5 = "WindowManager";

        $r4 = r0.<com.android.server.wm.InputManagerCallback$1: java.lang.String val$name>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r6 = r0.<com.android.server.wm.InputManagerCallback$1: boolean[] val$shouldDumpSf>;

        $r6[0] = 0;

     label2:
        return;
    }
}
