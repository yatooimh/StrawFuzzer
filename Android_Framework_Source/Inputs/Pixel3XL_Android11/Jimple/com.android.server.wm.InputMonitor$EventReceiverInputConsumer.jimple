final class com.android.server.wm.InputMonitor$EventReceiverInputConsumer extends com.android.server.wm.InputConsumerImpl implements com.android.server.policy.WindowManagerPolicy$InputConsumer
{
    private final android.view.InputEventReceiver mInputEventReceiver;
    private com.android.server.wm.InputMonitor mInputMonitor;

    void <init>(com.android.server.wm.WindowManagerService, com.android.server.wm.InputMonitor, android.os.Looper, java.lang.String, android.view.InputEventReceiver$Factory, int, android.os.UserHandle, int)
    {
        com.android.server.wm.InputMonitor$EventReceiverInputConsumer r0;
        com.android.server.wm.WindowManagerService r1;
        com.android.server.wm.InputMonitor r2;
        android.os.Looper r3;
        java.lang.String r4;
        android.view.InputEventReceiver$Factory r5;
        int i0, i1;
        android.os.UserHandle r6;
        android.view.InputChannel $r7;
        android.view.InputEventReceiver $r8;

        r0 := @this: com.android.server.wm.InputMonitor$EventReceiverInputConsumer;

        r1 := @parameter0: com.android.server.wm.WindowManagerService;

        r2 := @parameter1: com.android.server.wm.InputMonitor;

        r3 := @parameter2: android.os.Looper;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: android.view.InputEventReceiver$Factory;

        i0 := @parameter5: int;

        r6 := @parameter6: android.os.UserHandle;

        i1 := @parameter7: int;

        specialinvoke r0.<com.android.server.wm.InputConsumerImpl: void <init>(com.android.server.wm.WindowManagerService,android.os.IBinder,java.lang.String,android.view.InputChannel,int,android.os.UserHandle,int)>(r1, null, r4, null, i0, r6, i1);

        r0.<com.android.server.wm.InputMonitor$EventReceiverInputConsumer: com.android.server.wm.InputMonitor mInputMonitor> = r2;

        $r7 = r0.<com.android.server.wm.InputMonitor$EventReceiverInputConsumer: android.view.InputChannel mClientChannel>;

        $r8 = interfaceinvoke r5.<android.view.InputEventReceiver$Factory: android.view.InputEventReceiver createInputEventReceiver(android.view.InputChannel,android.os.Looper)>($r7, r3);

        r0.<com.android.server.wm.InputMonitor$EventReceiverInputConsumer: android.view.InputEventReceiver mInputEventReceiver> = $r8;

        return;
    }

    public void dismiss()
    {
        com.android.server.wm.InputMonitor$EventReceiverInputConsumer r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.WindowManagerService $r3;
        com.android.server.wm.InputMonitor $r4, $r8, $r10;
        android.util.ArrayMap $r5;
        java.lang.String $r6;
        android.view.SurfaceControl$Transaction $r9;
        java.lang.Throwable $r11;

        r0 := @this: com.android.server.wm.InputMonitor$EventReceiverInputConsumer;

        $r3 = r0.<com.android.server.wm.InputMonitor$EventReceiverInputConsumer: com.android.server.wm.WindowManagerService mService>;

        r1 = $r3.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r4 = r0.<com.android.server.wm.InputMonitor$EventReceiverInputConsumer: com.android.server.wm.InputMonitor mInputMonitor>;

        $r5 = staticinvoke <com.android.server.wm.InputMonitor: android.util.ArrayMap access$000(com.android.server.wm.InputMonitor)>($r4);

        $r6 = r0.<com.android.server.wm.InputMonitor$EventReceiverInputConsumer: java.lang.String mName>;

        virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r6);

        $r8 = r0.<com.android.server.wm.InputMonitor$EventReceiverInputConsumer: com.android.server.wm.InputMonitor mInputMonitor>;

        $r9 = staticinvoke <com.android.server.wm.InputMonitor: android.view.SurfaceControl$Transaction access$100(com.android.server.wm.InputMonitor)>($r8);

        virtualinvoke r0.<com.android.server.wm.InputMonitor$EventReceiverInputConsumer: void hide(android.view.SurfaceControl$Transaction)>($r9);

        $r10 = r0.<com.android.server.wm.InputMonitor$EventReceiverInputConsumer: com.android.server.wm.InputMonitor mInputMonitor>;

        virtualinvoke $r10.<com.android.server.wm.InputMonitor: void updateInputWindowsLw(boolean)>(1);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r11 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void dispose()
    {
        com.android.server.wm.InputMonitor$EventReceiverInputConsumer r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.WindowManagerService $r3;
        com.android.server.wm.InputMonitor $r4, $r7;
        android.view.SurfaceControl$Transaction $r5;
        android.view.InputEventReceiver $r6;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.wm.InputMonitor$EventReceiverInputConsumer;

        $r3 = r0.<com.android.server.wm.InputMonitor$EventReceiverInputConsumer: com.android.server.wm.WindowManagerService mService>;

        r1 = $r3.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r4 = r0.<com.android.server.wm.InputMonitor$EventReceiverInputConsumer: com.android.server.wm.InputMonitor mInputMonitor>;

        $r5 = staticinvoke <com.android.server.wm.InputMonitor: android.view.SurfaceControl$Transaction access$100(com.android.server.wm.InputMonitor)>($r4);

        virtualinvoke r0.<com.android.server.wm.InputMonitor$EventReceiverInputConsumer: void disposeChannelsLw(android.view.SurfaceControl$Transaction)>($r5);

        $r6 = r0.<com.android.server.wm.InputMonitor$EventReceiverInputConsumer: android.view.InputEventReceiver mInputEventReceiver>;

        virtualinvoke $r6.<android.view.InputEventReceiver: void dispose()>();

        $r7 = r0.<com.android.server.wm.InputMonitor$EventReceiverInputConsumer: com.android.server.wm.InputMonitor mInputMonitor>;

        virtualinvoke $r7.<com.android.server.wm.InputMonitor: void updateInputWindowsLw(boolean)>(1);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r8 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
