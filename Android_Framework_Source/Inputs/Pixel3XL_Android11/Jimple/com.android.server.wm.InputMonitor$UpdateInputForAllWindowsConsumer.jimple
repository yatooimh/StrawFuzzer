final class com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer extends java.lang.Object implements java.util.function.Consumer
{
    private boolean mAddNavInputConsumerHandle;
    private boolean mAddPipInputConsumerHandle;
    private boolean mAddRecentsAnimationInputConsumerHandle;
    private boolean mAddWallpaperInputConsumerHandle;
    boolean mInDrag;
    final android.view.InputWindowHandle mInvalidInputWindow;
    com.android.server.wm.InputConsumerImpl mNavInputConsumer;
    com.android.server.wm.InputConsumerImpl mPipInputConsumer;
    com.android.server.wm.InputConsumerImpl mRecentsAnimationInputConsumer;
    com.android.server.wm.WallpaperController mWallpaperController;
    com.android.server.wm.InputConsumerImpl mWallpaperInputConsumer;
    final com.android.server.wm.InputMonitor this$0;

    private void <init>(com.android.server.wm.InputMonitor)
    {
        com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer r0;
        com.android.server.wm.InputMonitor r1, $r3;
        android.view.InputWindowHandle $r2;
        int $i0;

        r0 := @this: com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer;

        r1 := @parameter0: com.android.server.wm.InputMonitor;

        r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputMonitor this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.view.InputWindowHandle;

        $r3 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputMonitor this$0>;

        $i0 = staticinvoke <com.android.server.wm.InputMonitor: int access$1000(com.android.server.wm.InputMonitor)>($r3);

        specialinvoke $r2.<android.view.InputWindowHandle: void <init>(android.view.InputApplicationHandle,int)>(null, $i0);

        r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: android.view.InputWindowHandle mInvalidInputWindow> = $r2;

        return;
    }

    void <init>(com.android.server.wm.InputMonitor, com.android.server.wm.InputMonitor$1)
    {
        com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer r0;
        com.android.server.wm.InputMonitor r1;
        com.android.server.wm.InputMonitor$1 r2;

        r0 := @this: com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer;

        r1 := @parameter0: com.android.server.wm.InputMonitor;

        r2 := @parameter1: com.android.server.wm.InputMonitor$1;

        specialinvoke r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: void <init>(com.android.server.wm.InputMonitor)>(r1);

        return;
    }

    static void access$700(com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer, boolean)
    {
        com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer r0;
        boolean z0;

        r0 := @parameter0: com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: void updateInputWindows(boolean)>(z0);

        return;
    }

    private void updateInputWindows(boolean)
    {
        com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer r0;
        boolean z0, $z2, $z3, z4, z5, z6, z7;
        com.android.server.wm.InputMonitor r1, $r2, $r4, $r6, $r8, $r14, $r16, $r17, $r21, $r23, $r24, $r27, $r30, $r32;
        com.android.server.wm.InputConsumerImpl $r3, $r5, $r7, $r9, $r10, $r11, $r12, $r13, $r33;
        android.graphics.Rect $r15;
        com.android.server.wm.DisplayContent $r18, $r22, $r25, $r31;
        com.android.server.wm.WallpaperController $r19;
        android.view.SurfaceControl$Transaction $r20, $r26, $r28, $r34;

        r0 := @this: com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer;

        z0 := @parameter0: boolean;

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(32L, "updateInputWindows");

        $r2 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputMonitor this$0>;

        $r3 = virtualinvoke $r2.<com.android.server.wm.InputMonitor: com.android.server.wm.InputConsumerImpl getInputConsumer(java.lang.String)>("nav_input_consumer");

        r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputConsumerImpl mNavInputConsumer> = $r3;

        $r4 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputMonitor this$0>;

        $r5 = virtualinvoke $r4.<com.android.server.wm.InputMonitor: com.android.server.wm.InputConsumerImpl getInputConsumer(java.lang.String)>("pip_input_consumer");

        r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputConsumerImpl mPipInputConsumer> = $r5;

        $r6 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputMonitor this$0>;

        $r7 = virtualinvoke $r6.<com.android.server.wm.InputMonitor: com.android.server.wm.InputConsumerImpl getInputConsumer(java.lang.String)>("wallpaper_input_consumer");

        r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputConsumerImpl mWallpaperInputConsumer> = $r7;

        $r8 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputMonitor this$0>;

        $r9 = virtualinvoke $r8.<com.android.server.wm.InputMonitor: com.android.server.wm.InputConsumerImpl getInputConsumer(java.lang.String)>("recents_animation_input_consumer");

        r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputConsumerImpl mRecentsAnimationInputConsumer> = $r9;

        $r10 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputConsumerImpl mNavInputConsumer>;

        if $r10 == null goto label01;

        z4 = 1;

        goto label02;

     label01:
        z4 = 0;

     label02:
        r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: boolean mAddNavInputConsumerHandle> = z4;

        $r11 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputConsumerImpl mPipInputConsumer>;

        if $r11 == null goto label03;

        z5 = 1;

        goto label04;

     label03:
        z5 = 0;

     label04:
        r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: boolean mAddPipInputConsumerHandle> = z5;

        $r12 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputConsumerImpl mWallpaperInputConsumer>;

        if $r12 == null goto label05;

        z6 = 1;

        goto label06;

     label05:
        z6 = 0;

     label06:
        r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: boolean mAddWallpaperInputConsumerHandle> = z6;

        $r13 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputConsumerImpl mRecentsAnimationInputConsumer>;

        if $r13 == null goto label07;

        z7 = 1;

        goto label08;

     label07:
        z7 = 0;

     label08:
        r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: boolean mAddRecentsAnimationInputConsumerHandle> = z7;

        $r14 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputMonitor this$0>;

        $r15 = staticinvoke <com.android.server.wm.InputMonitor: android.graphics.Rect access$1100(com.android.server.wm.InputMonitor)>($r14);

        virtualinvoke $r15.<android.graphics.Rect: void setEmpty()>();

        $r16 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputMonitor this$0>;

        staticinvoke <com.android.server.wm.InputMonitor: boolean access$1202(com.android.server.wm.InputMonitor,boolean)>($r16, 0);

        r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: boolean mInDrag> = z0;

        $r17 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputMonitor this$0>;

        $r18 = staticinvoke <com.android.server.wm.InputMonitor: com.android.server.wm.DisplayContent access$1300(com.android.server.wm.InputMonitor)>($r17);

        $r19 = $r18.<com.android.server.wm.DisplayContent: com.android.server.wm.WallpaperController mWallpaperController>;

        r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.WallpaperController mWallpaperController> = $r19;

        r1 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputMonitor this$0>;

        $r20 = staticinvoke <com.android.server.wm.InputMonitor: android.view.SurfaceControl$Transaction access$100(com.android.server.wm.InputMonitor)>(r1);

        virtualinvoke r1.<com.android.server.wm.InputMonitor: void resetInputConsumers(android.view.SurfaceControl$Transaction)>($r20);

        $r21 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputMonitor this$0>;

        $r22 = staticinvoke <com.android.server.wm.InputMonitor: com.android.server.wm.DisplayContent access$1300(com.android.server.wm.InputMonitor)>($r21);

        virtualinvoke $r22.<com.android.server.wm.DisplayContent: void forAllWindows(java.util.function.Consumer,boolean)>(r0, 1);

        $z2 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: boolean mAddWallpaperInputConsumerHandle>;

        if $z2 == 0 goto label09;

        $r33 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputConsumerImpl mWallpaperInputConsumer>;

        $r32 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputMonitor this$0>;

        $r34 = staticinvoke <com.android.server.wm.InputMonitor: android.view.SurfaceControl$Transaction access$100(com.android.server.wm.InputMonitor)>($r32);

        virtualinvoke $r33.<com.android.server.wm.InputConsumerImpl: void show(android.view.SurfaceControl$Transaction,int)>($r34, 0);

     label09:
        $r23 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputMonitor this$0>;

        $z3 = staticinvoke <com.android.server.wm.InputMonitor: boolean access$1400(com.android.server.wm.InputMonitor)>($r23);

        if $z3 != 0 goto label10;

        $r24 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputMonitor this$0>;

        $r25 = staticinvoke <com.android.server.wm.InputMonitor: com.android.server.wm.DisplayContent access$1300(com.android.server.wm.InputMonitor)>($r24);

        $r26 = virtualinvoke $r25.<com.android.server.wm.DisplayContent: android.view.SurfaceControl$Transaction getPendingTransaction()>();

        $r27 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputMonitor this$0>;

        $r28 = staticinvoke <com.android.server.wm.InputMonitor: android.view.SurfaceControl$Transaction access$100(com.android.server.wm.InputMonitor)>($r27);

        virtualinvoke $r26.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction merge(android.view.SurfaceControl$Transaction)>($r28);

        $r30 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputMonitor this$0>;

        $r31 = staticinvoke <com.android.server.wm.InputMonitor: com.android.server.wm.DisplayContent access$1300(com.android.server.wm.InputMonitor)>($r30);

        virtualinvoke $r31.<com.android.server.wm.DisplayContent: void scheduleAnimation()>();

     label10:
        staticinvoke <android.os.Trace: void traceEnd(long)>(32L);

        return;
    }

    public void accept(com.android.server.wm.WindowState)
    {
        com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer r0;
        com.android.server.wm.WindowState r1;
        android.view.InputChannel r2;
        android.view.InputWindowHandle r3, $r6, $r13, $r43, $r52;
        int i0, i1, i2, $i3, $i4;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z11, $z12, $z13, $z14, z15, $z16, $z17, z18, $z19, $z20, $z21;
        com.android.server.wm.InputMonitor $r4, $r8, $r19, $r26, $r29, $r32, $r33, $r35, $r38, $r45, $r48, $r53, $r60, $r61;
        com.android.server.wm.WindowManagerService $r5, $r27, $r30, $r62;
        java.lang.String $r7;
        android.view.SurfaceControl$Transaction $r9, $r20, $r37, $r40, $r47, $r50, $r55;
        com.android.server.wm.WindowStateAnimator $r10, $r21, $r66, $r67;
        com.android.server.wm.WindowSurfaceController $r11, $r22;
        android.view.SurfaceControl $r12, $r23, $r44;
        android.view.WindowManager$LayoutParams $r15, $r16, $r34, $r58;
        com.android.server.wm.WallpaperController $r17;
        com.android.server.wm.DisplayContent $r25;
        com.android.server.wm.DragDropController $r28;
        com.android.server.policy.WindowManagerPolicy $r31;
        com.android.server.wm.InputConsumerImpl $r36, $r39, $r42, $r46, $r49, $r51, $r54;
        com.android.server.wm.Task $r41, r59;
        com.android.server.wm.ActivityRecord $r56;
        com.android.server.wm.RecentsAnimationController r57;
        java.util.Map $r63;
        android.os.IBinder $r64;
        com.android.internal.policy.KeyInterceptionInfo $r65;

        r0 := @this: com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer;

        r1 := @parameter0: com.android.server.wm.WindowState;

        r2 = r1.<com.android.server.wm.WindowState: android.view.InputChannel mInputChannel>;

        r3 = r1.<com.android.server.wm.WindowState: android.view.InputWindowHandle mInputWindowHandle>;

        $r4 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputMonitor this$0>;

        $r5 = staticinvoke <com.android.server.wm.InputMonitor: com.android.server.wm.WindowManagerService access$200(com.android.server.wm.InputMonitor)>($r4);

        r57 = virtualinvoke $r5.<com.android.server.wm.WindowManagerService: com.android.server.wm.RecentsAnimationController getRecentsAnimationController()>();

        if r57 == null goto label01;

        $r56 = r1.<com.android.server.wm.WindowState: com.android.server.wm.ActivityRecord mActivityRecord>;

        $z14 = virtualinvoke r57.<com.android.server.wm.RecentsAnimationController: boolean shouldApplyInputConsumer(com.android.server.wm.ActivityRecord)>($r56);

        if $z14 == 0 goto label01;

        z15 = 1;

        goto label02;

     label01:
        z15 = 0;

     label02:
        $r58 = r1.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        i0 = $r58.<android.view.WindowManager$LayoutParams: int type>;

        z0 = virtualinvoke r1.<com.android.server.wm.WindowState: boolean isVisibleLw()>();

        if r2 == null goto label13;

        if r3 == null goto label13;

        $z2 = r1.<com.android.server.wm.WindowState: boolean mRemoved>;

        if $z2 != 0 goto label13;

        $z3 = virtualinvoke r1.<com.android.server.wm.WindowState: boolean cantReceiveTouchInput()>();

        if $z3 == 0 goto label03;

        if z15 != 0 goto label03;

        goto label13;

     label03:
        $r15 = r1.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        i1 = $r15.<android.view.WindowManager$LayoutParams: int flags>;

        $r16 = r1.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        i2 = $r16.<android.view.WindowManager$LayoutParams: int privateFlags>;

        z1 = virtualinvoke r1.<com.android.server.wm.WindowState: boolean isFocused()>();

        $z4 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: boolean mAddRecentsAnimationInputConsumerHandle>;

        if $z4 == 0 goto label04;

        if z15 == 0 goto label04;

        $r51 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputConsumerImpl mRecentsAnimationInputConsumer>;

        $r52 = $r51.<com.android.server.wm.InputConsumerImpl: android.view.InputWindowHandle mWindowHandle>;

        $z13 = virtualinvoke r57.<com.android.server.wm.RecentsAnimationController: boolean updateInputConsumerForApp(android.view.InputWindowHandle,boolean)>($r52, z1);

        if $z13 == 0 goto label04;

        $r54 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputConsumerImpl mRecentsAnimationInputConsumer>;

        $r53 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputMonitor this$0>;

        $r55 = staticinvoke <com.android.server.wm.InputMonitor: android.view.SurfaceControl$Transaction access$100(com.android.server.wm.InputMonitor)>($r53);

        virtualinvoke $r54.<com.android.server.wm.InputConsumerImpl: void show(android.view.SurfaceControl$Transaction,com.android.server.wm.WindowState)>($r55, r1);

        r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: boolean mAddRecentsAnimationInputConsumerHandle> = 0;

     label04:
        $z16 = virtualinvoke r1.<com.android.server.wm.WindowState: boolean inPinnedWindowingMode()>();

        if $z16 == 0 goto label05;

        $z12 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: boolean mAddPipInputConsumerHandle>;

        if $z12 == 0 goto label05;

        $r41 = virtualinvoke r1.<com.android.server.wm.WindowState: com.android.server.wm.Task getTask()>();

        r59 = virtualinvoke $r41.<com.android.server.wm.Task: com.android.server.wm.Task getRootTask()>();

        $r42 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputConsumerImpl mPipInputConsumer>;

        $r43 = $r42.<com.android.server.wm.InputConsumerImpl: android.view.InputWindowHandle mWindowHandle>;

        $r44 = virtualinvoke r59.<com.android.server.wm.Task: android.view.SurfaceControl getSurfaceControl()>();

        virtualinvoke $r43.<android.view.InputWindowHandle: void replaceTouchableRegionWithCrop(android.view.SurfaceControl)>($r44);

        $r46 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputConsumerImpl mPipInputConsumer>;

        $r45 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputMonitor this$0>;

        $r47 = staticinvoke <com.android.server.wm.InputMonitor: android.view.SurfaceControl$Transaction access$100(com.android.server.wm.InputMonitor)>($r45);

        virtualinvoke $r46.<com.android.server.wm.InputConsumerImpl: void reparent(android.view.SurfaceControl$Transaction,com.android.server.wm.WindowContainer)>($r47, r59);

        $r49 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputConsumerImpl mPipInputConsumer>;

        $r48 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputMonitor this$0>;

        $r50 = staticinvoke <com.android.server.wm.InputMonitor: android.view.SurfaceControl$Transaction access$100(com.android.server.wm.InputMonitor)>($r48);

        virtualinvoke $r49.<com.android.server.wm.InputConsumerImpl: void show(android.view.SurfaceControl$Transaction,int)>($r50, 2147483646);

        r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: boolean mAddPipInputConsumerHandle> = 0;

     label05:
        $z17 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: boolean mAddNavInputConsumerHandle>;

        if $z17 == 0 goto label06;

        $r39 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputConsumerImpl mNavInputConsumer>;

        $r38 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputMonitor this$0>;

        $r40 = staticinvoke <com.android.server.wm.InputMonitor: android.view.SurfaceControl$Transaction access$100(com.android.server.wm.InputMonitor)>($r38);

        virtualinvoke $r39.<com.android.server.wm.InputConsumerImpl: void show(android.view.SurfaceControl$Transaction,com.android.server.wm.WindowState)>($r40, r1);

        r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: boolean mAddNavInputConsumerHandle> = 0;

     label06:
        $z5 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: boolean mAddWallpaperInputConsumerHandle>;

        if $z5 == 0 goto label07;

        $r34 = r1.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i3 = $r34.<android.view.WindowManager$LayoutParams: int type>;

        if $i3 != 2013 goto label07;

        $z11 = virtualinvoke r1.<com.android.server.wm.WindowState: boolean isVisibleLw()>();

        if $z11 == 0 goto label07;

        $r36 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputConsumerImpl mWallpaperInputConsumer>;

        $r35 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputMonitor this$0>;

        $r37 = staticinvoke <com.android.server.wm.InputMonitor: android.view.SurfaceControl$Transaction access$100(com.android.server.wm.InputMonitor)>($r35);

        virtualinvoke $r36.<com.android.server.wm.InputConsumerImpl: void show(android.view.SurfaceControl$Transaction,com.android.server.wm.WindowState)>($r37, r1);

        r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: boolean mAddWallpaperInputConsumerHandle> = 0;

     label07:
        $i4 = i2 & 2048;

        if $i4 == 0 goto label08;

        $r33 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputMonitor this$0>;

        staticinvoke <com.android.server.wm.InputMonitor: boolean access$1202(com.android.server.wm.InputMonitor,boolean)>($r33, 1);

        goto label08;

     label08:
        $r17 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.WallpaperController mWallpaperController>;

        $z6 = virtualinvoke $r17.<com.android.server.wm.WallpaperController: boolean isWallpaperTarget(com.android.server.wm.WindowState)>(r1);

        if $z6 == 0 goto label09;

        $r29 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputMonitor this$0>;

        $r30 = staticinvoke <com.android.server.wm.InputMonitor: com.android.server.wm.WindowManagerService access$200(com.android.server.wm.InputMonitor)>($r29);

        $r31 = $r30.<com.android.server.wm.WindowManagerService: com.android.server.policy.WindowManagerPolicy mPolicy>;

        $z8 = interfaceinvoke $r31.<com.android.server.policy.WindowManagerPolicy: boolean isKeyguardShowing()>();

        if $z8 != 0 goto label09;

        $r32 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputMonitor this$0>;

        $z9 = staticinvoke <com.android.server.wm.InputMonitor: boolean access$1200(com.android.server.wm.InputMonitor)>($r32);

        if $z9 != 0 goto label09;

        z18 = 1;

        goto label10;

     label09:
        z18 = 0;

     label10:
        $z19 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: boolean mInDrag>;

        if $z19 == 0 goto label11;

        if z0 == 0 goto label11;

        $r25 = virtualinvoke r1.<com.android.server.wm.WindowState: com.android.server.wm.DisplayContent getDisplayContent()>();

        $z7 = $r25.<com.android.server.wm.DisplayContent: boolean isDefaultDisplay>;

        if $z7 == 0 goto label11;

        $r26 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputMonitor this$0>;

        $r27 = staticinvoke <com.android.server.wm.InputMonitor: com.android.server.wm.WindowManagerService access$200(com.android.server.wm.InputMonitor)>($r26);

        $r28 = $r27.<com.android.server.wm.WindowManagerService: com.android.server.wm.DragDropController mDragDropController>;

        virtualinvoke $r28.<com.android.server.wm.DragDropController: void sendDragStartedIfNeededLocked(com.android.server.wm.WindowState)>(r1);

     label11:
        $r60 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputMonitor this$0>;

        virtualinvoke $r60.<com.android.server.wm.InputMonitor: void populateInputWindowHandle(android.view.InputWindowHandle,com.android.server.wm.WindowState,int,int,boolean,boolean,boolean)>(r3, r1, i1, i0, z0, z1, z18);

        $r61 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputMonitor this$0>;

        $r62 = staticinvoke <com.android.server.wm.InputMonitor: com.android.server.wm.WindowManagerService access$200(com.android.server.wm.InputMonitor)>($r61);

        $r63 = $r62.<com.android.server.wm.WindowManagerService: java.util.Map mKeyInterceptionInfoForToken>;

        $r64 = r3.<android.view.InputWindowHandle: android.os.IBinder token>;

        $r65 = virtualinvoke r1.<com.android.server.wm.WindowState: com.android.internal.policy.KeyInterceptionInfo getKeyInterceptionInfo()>();

        interfaceinvoke $r63.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r64, $r65);

        $r66 = r1.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator>;

        $z20 = virtualinvoke $r66.<com.android.server.wm.WindowStateAnimator: boolean hasSurface()>();

        if $z20 == 0 goto label12;

        $r19 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputMonitor this$0>;

        $r20 = staticinvoke <com.android.server.wm.InputMonitor: android.view.SurfaceControl$Transaction access$100(com.android.server.wm.InputMonitor)>($r19);

        $r21 = r1.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator>;

        $r22 = $r21.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowSurfaceController mSurfaceController>;

        $r23 = virtualinvoke $r22.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl getClientViewRootSurface()>();

        virtualinvoke $r20.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setInputWindowInfo(android.view.SurfaceControl,android.view.InputWindowHandle)>($r23, r3);

     label12:
        return;

     label13:
        $r67 = r1.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator>;

        $z21 = virtualinvoke $r67.<com.android.server.wm.WindowStateAnimator: boolean hasSurface()>();

        if $z21 == 0 goto label14;

        $r6 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: android.view.InputWindowHandle mInvalidInputWindow>;

        $r7 = virtualinvoke r1.<com.android.server.wm.WindowState: java.lang.String getName()>();

        staticinvoke <com.android.server.wm.InputMonitor: void access$1500(android.view.InputWindowHandle,java.lang.String,int,boolean)>($r6, $r7, i0, z0);

        $r8 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: com.android.server.wm.InputMonitor this$0>;

        $r9 = staticinvoke <com.android.server.wm.InputMonitor: android.view.SurfaceControl$Transaction access$100(com.android.server.wm.InputMonitor)>($r8);

        $r10 = r1.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator>;

        $r11 = $r10.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowSurfaceController mSurfaceController>;

        $r12 = virtualinvoke $r11.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl getClientViewRootSurface()>();

        $r13 = r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: android.view.InputWindowHandle mInvalidInputWindow>;

        virtualinvoke $r9.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setInputWindowInfo(android.view.SurfaceControl,android.view.InputWindowHandle)>($r12, $r13);

        return;

     label14:
        return;
    }

    public volatile void accept(java.lang.Object)
    {
        com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer r0;
        java.lang.Object r1;
        com.android.server.wm.WindowState $r2;

        r0 := @this: com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.android.server.wm.WindowState) r1;

        virtualinvoke r0.<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: void accept(com.android.server.wm.WindowState)>($r2);

        return;
    }
}
