class com.android.server.wm.InputMonitor$UpdateInputWindows extends java.lang.Object implements java.lang.Runnable
{
    final com.android.server.wm.InputMonitor this$0;

    private void <init>(com.android.server.wm.InputMonitor)
    {
        com.android.server.wm.InputMonitor$UpdateInputWindows r0;
        com.android.server.wm.InputMonitor r1;

        r0 := @this: com.android.server.wm.InputMonitor$UpdateInputWindows;

        r1 := @parameter0: com.android.server.wm.InputMonitor;

        r0.<com.android.server.wm.InputMonitor$UpdateInputWindows: com.android.server.wm.InputMonitor this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(com.android.server.wm.InputMonitor, com.android.server.wm.InputMonitor$1)
    {
        com.android.server.wm.InputMonitor$UpdateInputWindows r0;
        com.android.server.wm.InputMonitor r1;
        com.android.server.wm.InputMonitor$1 r2;

        r0 := @this: com.android.server.wm.InputMonitor$UpdateInputWindows;

        r1 := @parameter0: com.android.server.wm.InputMonitor;

        r2 := @parameter1: com.android.server.wm.InputMonitor$1;

        specialinvoke r0.<com.android.server.wm.InputMonitor$UpdateInputWindows: void <init>(com.android.server.wm.InputMonitor)>(r1);

        return;
    }

    public void run()
    {
        com.android.server.wm.InputMonitor$UpdateInputWindows r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        boolean z0, $z3;
        com.android.server.wm.InputMonitor $r3, $r5, $r6, $r7, $r8, $r11;
        com.android.server.wm.WindowManagerService $r4, $r9;
        com.android.server.wm.DragDropController $r10;
        com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer $r12;
        java.lang.Throwable $r13;

        r0 := @this: com.android.server.wm.InputMonitor$UpdateInputWindows;

        $r3 = r0.<com.android.server.wm.InputMonitor$UpdateInputWindows: com.android.server.wm.InputMonitor this$0>;

        $r4 = staticinvoke <com.android.server.wm.InputMonitor: com.android.server.wm.WindowManagerService access$200(com.android.server.wm.InputMonitor)>($r3);

        r1 = $r4.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r5 = r0.<com.android.server.wm.InputMonitor$UpdateInputWindows: com.android.server.wm.InputMonitor this$0>;

        staticinvoke <com.android.server.wm.InputMonitor: boolean access$302(com.android.server.wm.InputMonitor,boolean)>($r5, 0);

        $r6 = r0.<com.android.server.wm.InputMonitor$UpdateInputWindows: com.android.server.wm.InputMonitor this$0>;

        staticinvoke <com.android.server.wm.InputMonitor: boolean access$402(com.android.server.wm.InputMonitor,boolean)>($r6, 0);

        $r7 = r0.<com.android.server.wm.InputMonitor$UpdateInputWindows: com.android.server.wm.InputMonitor this$0>;

        $z3 = staticinvoke <com.android.server.wm.InputMonitor: boolean access$500(com.android.server.wm.InputMonitor)>($r7);

        if $z3 == 0 goto label3;

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r8 = r0.<com.android.server.wm.InputMonitor$UpdateInputWindows: com.android.server.wm.InputMonitor this$0>;

        $r9 = staticinvoke <com.android.server.wm.InputMonitor: com.android.server.wm.WindowManagerService access$200(com.android.server.wm.InputMonitor)>($r8);

        $r10 = $r9.<com.android.server.wm.WindowManagerService: com.android.server.wm.DragDropController mDragDropController>;

        z0 = virtualinvoke $r10.<com.android.server.wm.DragDropController: boolean dragDropActiveLocked()>();

        $r11 = r0.<com.android.server.wm.InputMonitor$UpdateInputWindows: com.android.server.wm.InputMonitor this$0>;

        $r12 = staticinvoke <com.android.server.wm.InputMonitor: com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer access$600(com.android.server.wm.InputMonitor)>($r11);

        staticinvoke <com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: void access$700(com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer,boolean)>($r12, z0);

        exitmonitor r1;

     label4:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label5:
        $r13 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r13;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }
}
