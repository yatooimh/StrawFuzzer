class com.android.server.wm.InsetsPolicy$1 extends java.lang.Object implements com.android.server.wm.InsetsControlTarget
{
    final com.android.server.wm.InsetsPolicy this$0;

    void <init>(com.android.server.wm.InsetsPolicy)
    {
        com.android.server.wm.InsetsPolicy$1 r0;
        com.android.server.wm.InsetsPolicy r1;

        r0 := @this: com.android.server.wm.InsetsPolicy$1;

        r1 := @parameter0: com.android.server.wm.InsetsPolicy;

        r0.<com.android.server.wm.InsetsPolicy$1: com.android.server.wm.InsetsPolicy this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void notifyInsetsControlChanged()
    {
        com.android.server.wm.InsetsPolicy$1 r0;
        android.view.InsetsSourceControl[] r1;
        int i0, i1, $i2, i3;
        android.view.SurfaceControl$Transaction r2;
        com.android.server.wm.InsetsPolicy $r3, $r5, $r7, $r9;
        com.android.server.wm.InsetsStateController $r4;
        com.android.server.wm.DisplayContent $r6, $r10;
        android.util.IntArray $r8;
        boolean $z0, z1;
        android.view.InsetsSourceControl r12;
        android.view.SurfaceControl r13;
        float f0;

        r0 := @this: com.android.server.wm.InsetsPolicy$1;

        z1 = 0;

        $r3 = r0.<com.android.server.wm.InsetsPolicy$1: com.android.server.wm.InsetsPolicy this$0>;

        $r4 = staticinvoke <com.android.server.wm.InsetsPolicy: com.android.server.wm.InsetsStateController access$000(com.android.server.wm.InsetsPolicy)>($r3);

        r1 = virtualinvoke $r4.<com.android.server.wm.InsetsStateController: android.view.InsetsSourceControl[] getControlsForDispatch(com.android.server.wm.InsetsControlTarget)>(r0);

        if r1 != null goto label1;

        return;

     label1:
        i0 = lengthof r1;

        i3 = 0;

     label2:
        if i3 >= i0 goto label7;

        r12 = r1[i3];

        i1 = virtualinvoke r12.<android.view.InsetsSourceControl: int getType()>();

        $r7 = r0.<com.android.server.wm.InsetsPolicy$1: com.android.server.wm.InsetsPolicy this$0>;

        $r8 = staticinvoke <com.android.server.wm.InsetsPolicy: android.util.IntArray access$100(com.android.server.wm.InsetsPolicy)>($r7);

        $i2 = virtualinvoke $r8.<android.util.IntArray: int indexOf(int)>(i1);

        if $i2 == -1 goto label3;

        goto label6;

     label3:
        r13 = virtualinvoke r12.<android.view.InsetsSourceControl: android.view.SurfaceControl getLeash()>();

        if r13 == null goto label6;

        z1 = 1;

        $r9 = r0.<com.android.server.wm.InsetsPolicy$1: com.android.server.wm.InsetsPolicy this$0>;

        $r10 = staticinvoke <com.android.server.wm.InsetsPolicy: com.android.server.wm.DisplayContent access$200(com.android.server.wm.InsetsPolicy)>($r9);

        r2 = virtualinvoke $r10.<com.android.server.wm.DisplayContent: android.view.SurfaceControl$Transaction getPendingTransaction()>();

        $z0 = staticinvoke <android.view.InsetsState: boolean getDefaultVisibility(int)>(i1);

        if $z0 == 0 goto label4;

        f0 = 1.0F;

        goto label5;

     label4:
        f0 = 0.0F;

     label5:
        virtualinvoke r2.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setAlpha(android.view.SurfaceControl,float)>(r13, f0);

     label6:
        i3 = i3 + 1;

        goto label2;

     label7:
        if z1 == 0 goto label8;

        $r5 = r0.<com.android.server.wm.InsetsPolicy$1: com.android.server.wm.InsetsPolicy this$0>;

        $r6 = staticinvoke <com.android.server.wm.InsetsPolicy: com.android.server.wm.DisplayContent access$200(com.android.server.wm.InsetsPolicy)>($r5);

        virtualinvoke $r6.<com.android.server.wm.DisplayContent: void scheduleAnimation()>();

     label8:
        return;
    }
}
