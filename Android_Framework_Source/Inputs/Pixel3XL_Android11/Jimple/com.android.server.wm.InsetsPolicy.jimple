class com.android.server.wm.InsetsPolicy extends java.lang.Object
{
    private boolean mAnimatingShown;
    private final com.android.server.wm.DisplayContent mDisplayContent;
    private final com.android.server.wm.InsetsControlTarget mDummyControlTarget;
    private com.android.server.wm.WindowState mFocusedWin;
    private com.android.server.wm.InsetsPolicy$BarWindow mNavBar;
    private final com.android.server.wm.DisplayPolicy mPolicy;
    private final android.util.IntArray mShowingTransientTypes;
    private final com.android.server.wm.InsetsStateController mStateController;
    private com.android.server.wm.InsetsPolicy$BarWindow mStatusBar;
    private final float[] mTmpFloat9;

    void <init>(com.android.server.wm.InsetsStateController, com.android.server.wm.DisplayContent)
    {
        com.android.server.wm.InsetsPolicy r0;
        com.android.server.wm.InsetsStateController r1;
        com.android.server.wm.DisplayContent r2;
        android.util.IntArray $r3;
        com.android.server.wm.InsetsPolicy$1 $r4;
        com.android.server.wm.InsetsPolicy$BarWindow $r5, $r6;
        float[] $r7;
        com.android.server.wm.DisplayPolicy $r8;

        r0 := @this: com.android.server.wm.InsetsPolicy;

        r1 := @parameter0: com.android.server.wm.InsetsStateController;

        r2 := @parameter1: com.android.server.wm.DisplayContent;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.util.IntArray;

        specialinvoke $r3.<android.util.IntArray: void <init>()>();

        r0.<com.android.server.wm.InsetsPolicy: android.util.IntArray mShowingTransientTypes> = $r3;

        $r4 = new com.android.server.wm.InsetsPolicy$1;

        specialinvoke $r4.<com.android.server.wm.InsetsPolicy$1: void <init>(com.android.server.wm.InsetsPolicy)>(r0);

        r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.InsetsControlTarget mDummyControlTarget> = $r4;

        $r5 = new com.android.server.wm.InsetsPolicy$BarWindow;

        specialinvoke $r5.<com.android.server.wm.InsetsPolicy$BarWindow: void <init>(com.android.server.wm.InsetsPolicy,int)>(r0, 1);

        r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.InsetsPolicy$BarWindow mStatusBar> = $r5;

        $r6 = new com.android.server.wm.InsetsPolicy$BarWindow;

        specialinvoke $r6.<com.android.server.wm.InsetsPolicy$BarWindow: void <init>(com.android.server.wm.InsetsPolicy,int)>(r0, 2);

        r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.InsetsPolicy$BarWindow mNavBar> = $r6;

        $r7 = newarray (float)[9];

        r0.<com.android.server.wm.InsetsPolicy: float[] mTmpFloat9> = $r7;

        r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.InsetsStateController mStateController> = r1;

        r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.DisplayContent mDisplayContent> = r2;

        $r8 = virtualinvoke r2.<com.android.server.wm.DisplayContent: com.android.server.wm.DisplayPolicy getDisplayPolicy()>();

        r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.DisplayPolicy mPolicy> = $r8;

        return;
    }

    private void abortTransient()
    {
        com.android.server.wm.InsetsPolicy r0;
        com.android.server.wm.DisplayPolicy $r1;
        com.android.server.statusbar.StatusBarManagerInternal $r2;
        com.android.server.wm.DisplayContent $r3;
        int $i0;
        android.util.IntArray $r4, $r6;
        int[] $r5;
        com.android.server.wm.WindowState $r7;

        r0 := @this: com.android.server.wm.InsetsPolicy;

        $r1 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.DisplayPolicy mPolicy>;

        $r2 = virtualinvoke $r1.<com.android.server.wm.DisplayPolicy: com.android.server.statusbar.StatusBarManagerInternal getStatusBarManagerInternal()>();

        $r3 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $i0 = virtualinvoke $r3.<com.android.server.wm.DisplayContent: int getDisplayId()>();

        $r4 = r0.<com.android.server.wm.InsetsPolicy: android.util.IntArray mShowingTransientTypes>;

        $r5 = virtualinvoke $r4.<android.util.IntArray: int[] toArray()>();

        interfaceinvoke $r2.<com.android.server.statusbar.StatusBarManagerInternal: void abortTransient(int,int[])>($i0, $r5);

        $r6 = r0.<com.android.server.wm.InsetsPolicy: android.util.IntArray mShowingTransientTypes>;

        virtualinvoke $r6.<android.util.IntArray: void clear()>();

        $r7 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.WindowState mFocusedWin>;

        virtualinvoke r0.<com.android.server.wm.InsetsPolicy: void updateBarControlTarget(com.android.server.wm.WindowState)>($r7);

        return;
    }

    static com.android.server.wm.InsetsStateController access$000(com.android.server.wm.InsetsPolicy)
    {
        com.android.server.wm.InsetsPolicy r0;
        com.android.server.wm.InsetsStateController $r1;

        r0 := @parameter0: com.android.server.wm.InsetsPolicy;

        $r1 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.InsetsStateController mStateController>;

        return $r1;
    }

    static android.util.IntArray access$100(com.android.server.wm.InsetsPolicy)
    {
        com.android.server.wm.InsetsPolicy r0;
        android.util.IntArray $r1;

        r0 := @parameter0: com.android.server.wm.InsetsPolicy;

        $r1 = r0.<com.android.server.wm.InsetsPolicy: android.util.IntArray mShowingTransientTypes>;

        return $r1;
    }

    static com.android.server.wm.DisplayContent access$200(com.android.server.wm.InsetsPolicy)
    {
        com.android.server.wm.InsetsPolicy r0;
        com.android.server.wm.DisplayContent $r1;

        r0 := @parameter0: com.android.server.wm.InsetsPolicy;

        $r1 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        return $r1;
    }

    static com.android.server.wm.DisplayPolicy access$500(com.android.server.wm.InsetsPolicy)
    {
        com.android.server.wm.InsetsPolicy r0;
        com.android.server.wm.DisplayPolicy $r1;

        r0 := @parameter0: com.android.server.wm.InsetsPolicy;

        $r1 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.DisplayPolicy mPolicy>;

        return $r1;
    }

    static boolean access$600(com.android.server.wm.InsetsPolicy)
    {
        com.android.server.wm.InsetsPolicy r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.wm.InsetsPolicy;

        $z0 = r0.<com.android.server.wm.InsetsPolicy: boolean mAnimatingShown>;

        return $z0;
    }

    static boolean access$602(com.android.server.wm.InsetsPolicy, boolean)
    {
        com.android.server.wm.InsetsPolicy r0;
        boolean z0;

        r0 := @parameter0: com.android.server.wm.InsetsPolicy;

        z0 := @parameter1: boolean;

        r0.<com.android.server.wm.InsetsPolicy: boolean mAnimatingShown> = z0;

        return z0;
    }

    static com.android.server.wm.WindowState access$700(com.android.server.wm.InsetsPolicy)
    {
        com.android.server.wm.InsetsPolicy r0;
        com.android.server.wm.WindowState $r1;

        r0 := @parameter0: com.android.server.wm.InsetsPolicy;

        $r1 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.WindowState mFocusedWin>;

        return $r1;
    }

    static float[] access$800(com.android.server.wm.InsetsPolicy)
    {
        com.android.server.wm.InsetsPolicy r0;
        float[] $r1;

        r0 := @parameter0: com.android.server.wm.InsetsPolicy;

        $r1 = r0.<com.android.server.wm.InsetsPolicy: float[] mTmpFloat9>;

        return $r1;
    }

    private void checkAbortTransient(com.android.server.wm.WindowState, android.view.InsetsState)
    {
        com.android.server.wm.InsetsPolicy r0;
        com.android.server.wm.WindowState r1;
        android.view.InsetsState r2;
        int i0, $i1, $i2, $i3, $i4, i5;
        android.util.IntArray $r4, $r5, $r6, $r11, $r14;
        com.android.server.wm.DisplayPolicy $r7;
        com.android.server.statusbar.StatusBarManagerInternal $r8;
        com.android.server.wm.DisplayContent $r9;
        int[] $r10;
        com.android.server.wm.InsetsStateController $r12;
        boolean $z0, $z1;
        android.view.InsetsSource $r13;

        r0 := @this: com.android.server.wm.InsetsPolicy;

        r1 := @parameter0: com.android.server.wm.WindowState;

        r2 := @parameter1: android.view.InsetsState;

        $r4 = r0.<com.android.server.wm.InsetsPolicy: android.util.IntArray mShowingTransientTypes>;

        $i1 = virtualinvoke $r4.<android.util.IntArray: int size()>();

        if $i1 == 0 goto label4;

        $r5 = new android.util.IntArray;

        specialinvoke $r5.<android.util.IntArray: void <init>()>();

        $r6 = r0.<com.android.server.wm.InsetsPolicy: android.util.IntArray mShowingTransientTypes>;

        $i2 = virtualinvoke $r6.<android.util.IntArray: int size()>();

        i5 = $i2 - 1;

     label1:
        if i5 < 0 goto label3;

        $r11 = r0.<com.android.server.wm.InsetsPolicy: android.util.IntArray mShowingTransientTypes>;

        i0 = virtualinvoke $r11.<android.util.IntArray: int get(int)>(i5);

        $r12 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.InsetsStateController mStateController>;

        $z0 = virtualinvoke $r12.<com.android.server.wm.InsetsStateController: boolean isFakeTarget(int,com.android.server.wm.InsetsControlTarget)>(i0, r1);

        if $z0 == 0 goto label2;

        $r13 = virtualinvoke r2.<android.view.InsetsState: android.view.InsetsSource getSource(int)>(i0);

        $z1 = virtualinvoke $r13.<android.view.InsetsSource: boolean isVisible()>();

        if $z1 == 0 goto label2;

        $r14 = r0.<com.android.server.wm.InsetsPolicy: android.util.IntArray mShowingTransientTypes>;

        virtualinvoke $r14.<android.util.IntArray: void remove(int)>(i5);

        virtualinvoke $r5.<android.util.IntArray: void add(int)>(i0);

     label2:
        i5 = i5 + -1;

        goto label1;

     label3:
        $i3 = virtualinvoke $r5.<android.util.IntArray: int size()>();

        if $i3 <= 0 goto label4;

        $r7 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.DisplayPolicy mPolicy>;

        $r8 = virtualinvoke $r7.<com.android.server.wm.DisplayPolicy: com.android.server.statusbar.StatusBarManagerInternal getStatusBarManagerInternal()>();

        $r9 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $i4 = virtualinvoke $r9.<com.android.server.wm.DisplayContent: int getDisplayId()>();

        $r10 = virtualinvoke $r5.<android.util.IntArray: int[] toArray()>();

        interfaceinvoke $r8.<com.android.server.statusbar.StatusBarManagerInternal: void abortTransient(int,int[])>($i4, $r10);

     label4:
        return;
    }

    private void controlAnimationUnchecked(int, android.util.SparseArray, boolean, java.lang.Runnable)
    {
        com.android.server.wm.InsetsPolicy r0;
        int i0;
        android.util.SparseArray r1;
        boolean z0;
        java.lang.Runnable r2;
        com.android.server.wm.InsetsPolicy$InsetsPolicyAnimationControlListener $r3;
        com.android.server.wm.InsetsPolicy$InsetsPolicyAnimationControlListener$InsetsPolicyAnimationControlCallbacks $r4;

        r0 := @this: com.android.server.wm.InsetsPolicy;

        i0 := @parameter0: int;

        r1 := @parameter1: android.util.SparseArray;

        z0 := @parameter2: boolean;

        r2 := @parameter3: java.lang.Runnable;

        $r3 = new com.android.server.wm.InsetsPolicy$InsetsPolicyAnimationControlListener;

        specialinvoke $r3.<com.android.server.wm.InsetsPolicy$InsetsPolicyAnimationControlListener: void <init>(com.android.server.wm.InsetsPolicy,boolean,java.lang.Runnable,int)>(r0, z0, r2, i0);

        $r4 = $r3.<com.android.server.wm.InsetsPolicy$InsetsPolicyAnimationControlListener: com.android.server.wm.InsetsPolicy$InsetsPolicyAnimationControlListener$InsetsPolicyAnimationControlCallbacks mControlCallbacks>;

        staticinvoke <com.android.server.wm.InsetsPolicy$InsetsPolicyAnimationControlListener$InsetsPolicyAnimationControlCallbacks: void access$400(com.android.server.wm.InsetsPolicy$InsetsPolicyAnimationControlListener$InsetsPolicyAnimationControlCallbacks,int,android.util.SparseArray,boolean)>($r4, i0, r1, z0);

        return;
    }

    private boolean forceShowsNavigationBarTransiently()
    {
        com.android.server.wm.InsetsPolicy r0;
        com.android.server.wm.WindowState r1;
        com.android.server.wm.DisplayPolicy $r2;
        android.view.WindowManager$LayoutParams $r3;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.wm.InsetsPolicy;

        $r2 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.DisplayPolicy mPolicy>;

        r1 = virtualinvoke $r2.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState getNotificationShade()>();

        if r1 == null goto label1;

        $r3 = r1.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i0 = $r3.<android.view.WindowManager$LayoutParams: int privateFlags>;

        $i1 = $i0 & 8388608;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean forceShowsStatusBarTransiently()
    {
        com.android.server.wm.InsetsPolicy r0;
        com.android.server.wm.WindowState r1;
        com.android.server.wm.DisplayPolicy $r2;
        android.view.WindowManager$LayoutParams $r3;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.wm.InsetsPolicy;

        $r2 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.DisplayPolicy mPolicy>;

        r1 = virtualinvoke $r2.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState getStatusBar()>();

        if r1 == null goto label1;

        $r3 = r1.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i0 = $r3.<android.view.WindowManager$LayoutParams: int privateFlags>;

        $i1 = $i0 & 4096;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean forceShowsSystemBarsForWindowingMode()
    {
        com.android.server.wm.InsetsPolicy r0;
        boolean z0, z1, $z2, z3, z4;
        com.android.server.wm.DisplayContent $r1, $r3, $r5;
        com.android.server.wm.TaskDisplayArea $r2, $r4;
        com.android.server.wm.DockedStackDividerController $r6;
        com.android.server.wm.DisplayPolicy $r7;

        r0 := @this: com.android.server.wm.InsetsPolicy;

        $r1 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $r2 = virtualinvoke $r1.<com.android.server.wm.DisplayContent: com.android.server.wm.TaskDisplayArea getDefaultTaskDisplayArea()>();

        z0 = virtualinvoke $r2.<com.android.server.wm.TaskDisplayArea: boolean isStackVisible(int)>(3);

        $r3 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $r4 = virtualinvoke $r3.<com.android.server.wm.DisplayContent: com.android.server.wm.TaskDisplayArea getDefaultTaskDisplayArea()>();

        z1 = virtualinvoke $r4.<com.android.server.wm.TaskDisplayArea: boolean isStackVisible(int)>(5);

        $r5 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $r6 = virtualinvoke $r5.<com.android.server.wm.DisplayContent: com.android.server.wm.DockedStackDividerController getDockedDividerController()>();

        z3 = virtualinvoke $r6.<com.android.server.wm.DockedStackDividerController: boolean isResizing()>();

        if z0 != 0 goto label2;

        if z1 != 0 goto label2;

        if z3 != 0 goto label2;

        $r7 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.DisplayPolicy mPolicy>;

        $z2 = virtualinvoke $r7.<com.android.server.wm.DisplayPolicy: boolean getForceShowSystemBars()>();

        if $z2 == 0 goto label1;

        goto label2;

     label1:
        z4 = 0;

        goto label3;

     label2:
        z4 = 1;

     label3:
        return z4;
    }

    private com.android.server.wm.InsetsControlTarget getFakeControlTarget(com.android.server.wm.WindowState, com.android.server.wm.InsetsControlTarget)
    {
        com.android.server.wm.InsetsPolicy r0;
        com.android.server.wm.InsetsControlTarget r1, $r2;
        com.android.server.wm.WindowState r3;

        r0 := @this: com.android.server.wm.InsetsPolicy;

        r3 := @parameter0: com.android.server.wm.WindowState;

        r1 := @parameter1: com.android.server.wm.InsetsControlTarget;

        $r2 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.InsetsControlTarget mDummyControlTarget>;

        if r1 != $r2 goto label1;

        goto label2;

     label1:
        r3 = null;

     label2:
        return r3;
    }

    private com.android.server.wm.InsetsControlTarget getNavControlTarget(com.android.server.wm.WindowState, boolean)
    {
        com.android.server.wm.InsetsPolicy r0;
        com.android.server.wm.WindowState r1, $r4;
        boolean z0, $z1;
        android.util.IntArray $r2;
        int $i0;
        com.android.server.wm.DisplayPolicy $r3;
        com.android.server.wm.InsetsControlTarget $r5, $r6;

        r0 := @this: com.android.server.wm.InsetsPolicy;

        r1 := @parameter0: com.android.server.wm.WindowState;

        z0 := @parameter1: boolean;

        $r2 = r0.<com.android.server.wm.InsetsPolicy: android.util.IntArray mShowingTransientTypes>;

        $i0 = virtualinvoke $r2.<android.util.IntArray: int indexOf(int)>(1);

        if $i0 == -1 goto label1;

        $r6 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.InsetsControlTarget mDummyControlTarget>;

        return $r6;

     label1:
        $r3 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.DisplayPolicy mPolicy>;

        $r4 = virtualinvoke $r3.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState getNotificationShade()>();

        if r1 != $r4 goto label2;

        return r1;

     label2:
        if z0 == 0 goto label3;

        return null;

     label3:
        $z1 = specialinvoke r0.<com.android.server.wm.InsetsPolicy: boolean forceShowsNavigationBarTransiently()>();

        if $z1 == 0 goto label4;

        $r5 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.InsetsControlTarget mDummyControlTarget>;

        return $r5;

     label4:
        return r1;
    }

    private com.android.server.wm.InsetsControlTarget getStatusControlTarget(com.android.server.wm.WindowState, boolean)
    {
        com.android.server.wm.InsetsPolicy r0;
        com.android.server.wm.WindowState r1, $r4, $r7;
        boolean z0, $z1, $z2;
        android.util.IntArray $r2;
        int $i0;
        com.android.server.wm.DisplayPolicy $r3, $r5, $r6;
        com.android.server.wm.InsetsControlTarget $r8, $r9;

        r0 := @this: com.android.server.wm.InsetsPolicy;

        r1 := @parameter0: com.android.server.wm.WindowState;

        z0 := @parameter1: boolean;

        $r2 = r0.<com.android.server.wm.InsetsPolicy: android.util.IntArray mShowingTransientTypes>;

        $i0 = virtualinvoke $r2.<android.util.IntArray: int indexOf(int)>(0);

        if $i0 == -1 goto label1;

        $r9 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.InsetsControlTarget mDummyControlTarget>;

        return $r9;

     label1:
        $r3 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.DisplayPolicy mPolicy>;

        $r4 = virtualinvoke $r3.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState getNotificationShade()>();

        if r1 != $r4 goto label2;

        return r1;

     label2:
        if z0 == 0 goto label3;

        return null;

     label3:
        $z1 = specialinvoke r0.<com.android.server.wm.InsetsPolicy: boolean forceShowsStatusBarTransiently()>();

        if $z1 == 0 goto label4;

        $r8 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.InsetsControlTarget mDummyControlTarget>;

        return $r8;

     label4:
        $r5 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.DisplayPolicy mPolicy>;

        $z2 = virtualinvoke $r5.<com.android.server.wm.DisplayPolicy: boolean topAppHidesStatusBar()>();

        if $z2 == 0 goto label5;

        $r6 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.DisplayPolicy mPolicy>;

        $r7 = virtualinvoke $r6.<com.android.server.wm.DisplayPolicy: com.android.server.wm.WindowState getTopFullscreenOpaqueWindow()>();

        return $r7;

     label5:
        return r1;
    }

    android.view.InsetsState getInsetsForDispatch(com.android.server.wm.WindowState)
    {
        com.android.server.wm.InsetsPolicy r0;
        com.android.server.wm.InsetsStateController $r1;
        android.util.IntArray $r2, $r4;
        int $i0, $i1, i2;
        android.view.InsetsState $r3, r6;
        com.android.server.wm.WindowState r5;

        r0 := @this: com.android.server.wm.InsetsPolicy;

        r5 := @parameter0: com.android.server.wm.WindowState;

        $r1 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.InsetsStateController mStateController>;

        r6 = virtualinvoke $r1.<com.android.server.wm.InsetsStateController: android.view.InsetsState getInsetsForDispatch(com.android.server.wm.WindowState)>(r5);

        $r2 = r0.<com.android.server.wm.InsetsPolicy: android.util.IntArray mShowingTransientTypes>;

        $i0 = virtualinvoke $r2.<android.util.IntArray: int size()>();

        i2 = $i0 - 1;

     label1:
        if i2 < 0 goto label2;

        $r3 = new android.view.InsetsState;

        specialinvoke $r3.<android.view.InsetsState: void <init>(android.view.InsetsState)>(r6);

        r6 = $r3;

        $r4 = r0.<com.android.server.wm.InsetsPolicy: android.util.IntArray mShowingTransientTypes>;

        $i1 = virtualinvoke $r4.<android.util.IntArray: int get(int)>(i2);

        virtualinvoke $r3.<android.view.InsetsState: void setSourceVisible(int,boolean)>($i1, 0);

        i2 = i2 + -1;

        goto label1;

     label2:
        return r6;
    }

    void hideTransient()
    {
        com.android.server.wm.InsetsPolicy r0;
        android.util.IntArray $r2;
        int $i0;
        android.view.InsetsState $r3, $r5;
        com.android.server.wm.InsetsStateController $r4, $r8;
        com.android.server.wm._$$Lambda$InsetsPolicy$cTZ13xcy5owJXLQN7XmgEsABsgE $r6;
        com.android.server.wm.InsetsControlTarget $r7;

        r0 := @this: com.android.server.wm.InsetsPolicy;

        $r2 = r0.<com.android.server.wm.InsetsPolicy: android.util.IntArray mShowingTransientTypes>;

        $i0 = virtualinvoke $r2.<android.util.IntArray: int size()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $r3 = new android.view.InsetsState;

        $r4 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.InsetsStateController mStateController>;

        $r5 = virtualinvoke $r4.<com.android.server.wm.InsetsStateController: android.view.InsetsState getRawInsetsState()>();

        specialinvoke $r3.<android.view.InsetsState: void <init>(android.view.InsetsState)>($r5);

        $r6 = new com.android.server.wm._$$Lambda$InsetsPolicy$cTZ13xcy5owJXLQN7XmgEsABsgE;

        specialinvoke $r6.<com.android.server.wm._$$Lambda$InsetsPolicy$cTZ13xcy5owJXLQN7XmgEsABsgE: void <init>(com.android.server.wm.InsetsPolicy)>(r0);

        virtualinvoke r0.<com.android.server.wm.InsetsPolicy: void startAnimation(boolean,java.lang.Runnable,android.view.InsetsState)>(0, $r6, $r3);

        $r8 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.InsetsStateController mStateController>;

        $r7 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.InsetsControlTarget mDummyControlTarget>;

        virtualinvoke $r8.<com.android.server.wm.InsetsStateController: void onInsetsModified(com.android.server.wm.InsetsControlTarget,android.view.InsetsState)>($r7, $r3);

        return;
    }

    boolean isHidden(int)
    {
        com.android.server.wm.InsetsPolicy r0;
        int i0;
        com.android.server.wm.InsetsSourceProvider r1;
        com.android.server.wm.InsetsStateController $r2;
        boolean $z0, $z1, z2;
        android.view.InsetsSource $r3;

        r0 := @this: com.android.server.wm.InsetsPolicy;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.InsetsStateController mStateController>;

        r1 = virtualinvoke $r2.<com.android.server.wm.InsetsStateController: com.android.server.wm.InsetsSourceProvider peekSourceProvider(int)>(i0);

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<com.android.server.wm.InsetsSourceProvider: boolean hasWindow()>();

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r1.<com.android.server.wm.InsetsSourceProvider: android.view.InsetsSource getSource()>();

        $z1 = virtualinvoke $r3.<android.view.InsetsSource: boolean isVisible()>();

        if $z1 != 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    boolean isTransient(int)
    {
        com.android.server.wm.InsetsPolicy r0;
        int i0, $i1;
        android.util.IntArray $r1;
        boolean z0;

        r0 := @this: com.android.server.wm.InsetsPolicy;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.wm.InsetsPolicy: android.util.IntArray mShowingTransientTypes>;

        $i1 = virtualinvoke $r1.<android.util.IntArray: int indexOf(int)>(i0);

        if $i1 == -1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void lambda$hideTransient$2$InsetsPolicy()
    {
        com.android.server.wm.InsetsPolicy r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.DisplayContent $r3;
        com.android.server.wm.WindowManagerService $r4;
        android.util.IntArray $r5;
        com.android.server.wm.InsetsStateController $r6;
        com.android.server.wm.WindowState $r7;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.wm.InsetsPolicy;

        $r3 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $r4 = $r3.<com.android.server.wm.DisplayContent: com.android.server.wm.WindowManagerService mWmService>;

        r1 = $r4.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r5 = r0.<com.android.server.wm.InsetsPolicy: android.util.IntArray mShowingTransientTypes>;

        virtualinvoke $r5.<android.util.IntArray: void clear()>();

        $r6 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.InsetsStateController mStateController>;

        virtualinvoke $r6.<com.android.server.wm.InsetsStateController: void notifyInsetsChanged()>();

        $r7 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.WindowState mFocusedWin>;

        virtualinvoke r0.<com.android.server.wm.InsetsPolicy: void updateBarControlTarget(com.android.server.wm.WindowState)>($r7);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r8 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void lambda$showTransient$0$InsetsPolicy()
    {
        com.android.server.wm.InsetsPolicy r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.DisplayContent $r3;
        com.android.server.wm.WindowManagerService $r4;
        com.android.server.wm.InsetsStateController $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.wm.InsetsPolicy;

        $r3 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $r4 = $r3.<com.android.server.wm.DisplayContent: com.android.server.wm.WindowManagerService mWmService>;

        r1 = $r4.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r5 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.InsetsStateController mStateController>;

        virtualinvoke $r5.<com.android.server.wm.InsetsStateController: void notifyInsetsChanged()>();

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void lambda$showTransient$1$InsetsPolicy(long)
    {
        com.android.server.wm.InsetsPolicy r0;
        long l0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm._$$Lambda$InsetsPolicy$LCR2QgJZxbNat6Qb0Be_JDpy3i0 r2;
        com.android.server.wm.DisplayContent $r3;
        com.android.server.wm.WindowManagerService $r4;
        com.android.server.wm.InsetsStateController $r5, $r8;
        android.view.InsetsState $r6, r10;
        com.android.server.wm.InsetsControlTarget $r7;
        java.lang.Throwable $r9;

        r0 := @this: com.android.server.wm.InsetsPolicy;

        l0 := @parameter0: long;

        $r3 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $r4 = $r3.<com.android.server.wm.DisplayContent: com.android.server.wm.WindowManagerService mWmService>;

        r1 = $r4.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        r10 = new android.view.InsetsState;

        $r5 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.InsetsStateController mStateController>;

        $r6 = virtualinvoke $r5.<com.android.server.wm.InsetsStateController: android.view.InsetsState getRawInsetsState()>();

        specialinvoke r10.<android.view.InsetsState: void <init>(android.view.InsetsState)>($r6);

        r2 = new com.android.server.wm._$$Lambda$InsetsPolicy$LCR2QgJZxbNat6Qb0Be_JDpy3i0;

        specialinvoke r2.<com.android.server.wm._$$Lambda$InsetsPolicy$LCR2QgJZxbNat6Qb0Be_JDpy3i0: void <init>(com.android.server.wm.InsetsPolicy)>(r0);

        virtualinvoke r0.<com.android.server.wm.InsetsPolicy: void startAnimation(boolean,java.lang.Runnable,android.view.InsetsState)>(1, r2, r10);

        $r8 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.InsetsStateController mStateController>;

        $r7 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.InsetsControlTarget mDummyControlTarget>;

        virtualinvoke $r8.<com.android.server.wm.InsetsStateController: void onInsetsModified(com.android.server.wm.InsetsControlTarget,android.view.InsetsState)>($r7, r10);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r9 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void onInsetsModified(com.android.server.wm.WindowState, android.view.InsetsState)
    {
        com.android.server.wm.InsetsPolicy r0;
        com.android.server.wm.WindowState r1, $r4;
        android.view.InsetsState r2;
        com.android.server.wm.InsetsStateController $r3;

        r0 := @this: com.android.server.wm.InsetsPolicy;

        r1 := @parameter0: com.android.server.wm.WindowState;

        r2 := @parameter1: android.view.InsetsState;

        $r3 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.InsetsStateController mStateController>;

        virtualinvoke $r3.<com.android.server.wm.InsetsStateController: void onInsetsModified(com.android.server.wm.InsetsControlTarget,android.view.InsetsState)>(r1, r2);

        specialinvoke r0.<com.android.server.wm.InsetsPolicy: void checkAbortTransient(com.android.server.wm.WindowState,android.view.InsetsState)>(r1, r2);

        $r4 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.WindowState mFocusedWin>;

        virtualinvoke r0.<com.android.server.wm.InsetsPolicy: void updateBarControlTarget(com.android.server.wm.WindowState)>($r4);

        return;
    }

    int showTransient(android.util.IntArray)
    {
        com.android.server.wm.InsetsPolicy r0;
        android.util.IntArray r1, $r5, $r13, $r14;
        int i0, $i1, $i2, $i3, $i4, i5, i6;
        com.android.server.wm.DisplayPolicy $r2;
        com.android.server.statusbar.StatusBarManagerInternal $r3;
        com.android.server.wm.DisplayContent $r4, $r8;
        int[] $r6;
        com.android.server.wm.WindowState $r7;
        com.android.server.wm.WindowManagerService $r9;
        com.android.server.wm.WindowAnimator $r10;
        android.view.Choreographer $r11;
        com.android.server.wm._$$Lambda$InsetsPolicy$dhcN9TMy4RQEuHtaieXL5PHADOI $r12;
        boolean $z0, z1;

        r0 := @this: com.android.server.wm.InsetsPolicy;

        r1 := @parameter0: android.util.IntArray;

        i5 = 0;

        z1 = 0;

        $i1 = virtualinvoke r1.<android.util.IntArray: int size()>();

        i6 = $i1 - 1;

     label1:
        if i6 < 0 goto label5;

        i0 = virtualinvoke r1.<android.util.IntArray: int get(int)>(i6);

        $z0 = virtualinvoke r0.<com.android.server.wm.InsetsPolicy: boolean isHidden(int)>(i0);

        if $z0 != 0 goto label2;

        goto label4;

     label2:
        $i3 = staticinvoke <android.view.InsetsState: int toPublicType(int)>(i0);

        i5 = i5 | $i3;

        $r13 = r0.<com.android.server.wm.InsetsPolicy: android.util.IntArray mShowingTransientTypes>;

        $i4 = virtualinvoke $r13.<android.util.IntArray: int indexOf(int)>(i0);

        if $i4 == -1 goto label3;

        goto label4;

     label3:
        $r14 = r0.<com.android.server.wm.InsetsPolicy: android.util.IntArray mShowingTransientTypes>;

        virtualinvoke $r14.<android.util.IntArray: void add(int)>(i0);

        z1 = 1;

     label4:
        i6 = i6 + -1;

        goto label1;

     label5:
        if z1 == 0 goto label6;

        $r2 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.DisplayPolicy mPolicy>;

        $r3 = virtualinvoke $r2.<com.android.server.wm.DisplayPolicy: com.android.server.statusbar.StatusBarManagerInternal getStatusBarManagerInternal()>();

        $r4 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $i2 = virtualinvoke $r4.<com.android.server.wm.DisplayContent: int getDisplayId()>();

        $r5 = r0.<com.android.server.wm.InsetsPolicy: android.util.IntArray mShowingTransientTypes>;

        $r6 = virtualinvoke $r5.<android.util.IntArray: int[] toArray()>();

        interfaceinvoke $r3.<com.android.server.statusbar.StatusBarManagerInternal: void showTransient(int,int[])>($i2, $r6);

        $r7 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.WindowState mFocusedWin>;

        virtualinvoke r0.<com.android.server.wm.InsetsPolicy: void updateBarControlTarget(com.android.server.wm.WindowState)>($r7);

        $r8 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.DisplayContent mDisplayContent>;

        $r9 = $r8.<com.android.server.wm.DisplayContent: com.android.server.wm.WindowManagerService mWmService>;

        $r10 = $r9.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowAnimator mAnimator>;

        $r11 = virtualinvoke $r10.<com.android.server.wm.WindowAnimator: android.view.Choreographer getChoreographer()>();

        $r12 = new com.android.server.wm._$$Lambda$InsetsPolicy$dhcN9TMy4RQEuHtaieXL5PHADOI;

        specialinvoke $r12.<com.android.server.wm._$$Lambda$InsetsPolicy$dhcN9TMy4RQEuHtaieXL5PHADOI: void <init>(com.android.server.wm.InsetsPolicy)>(r0);

        virtualinvoke $r11.<android.view.Choreographer: void postFrameCallback(android.view.Choreographer$FrameCallback)>($r12);

     label6:
        return i5;
    }

    void startAnimation(boolean, java.lang.Runnable, android.view.InsetsState)
    {
        com.android.server.wm.InsetsPolicy r0;
        boolean z0;
        java.lang.Runnable r1;
        android.view.InsetsState r2;
        android.util.IntArray r4;
        int i0, $i1, $i2, $i3, i4, i5, i6;
        android.view.InsetsSourceControl r5, $r11;
        android.util.SparseArray $r6;
        com.android.server.wm.InsetsStateController $r7;
        com.android.server.wm.InsetsSourceProvider $r8;
        com.android.server.wm.InsetsControlTarget $r9;
        android.view.SurfaceControl $r10;

        r0 := @this: com.android.server.wm.InsetsPolicy;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.Runnable;

        r2 := @parameter2: android.view.InsetsState;

        i4 = 0;

        $r6 = new android.util.SparseArray;

        specialinvoke $r6.<android.util.SparseArray: void <init>()>();

        r4 = r0.<com.android.server.wm.InsetsPolicy: android.util.IntArray mShowingTransientTypes>;

        $i1 = virtualinvoke r4.<android.util.IntArray: int size()>();

        i5 = $i1 - 1;

     label1:
        if i5 < 0 goto label4;

        i0 = virtualinvoke r4.<android.util.IntArray: int get(int)>(i5);

        $r7 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.InsetsStateController mStateController>;

        $r8 = virtualinvoke $r7.<com.android.server.wm.InsetsStateController: com.android.server.wm.InsetsSourceProvider getSourceProvider(int)>(i0);

        $r9 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.InsetsControlTarget mDummyControlTarget>;

        r5 = virtualinvoke $r8.<com.android.server.wm.InsetsSourceProvider: android.view.InsetsSourceControl getControl(com.android.server.wm.InsetsControlTarget)>($r9);

        i6 = i4;

        if r5 == null goto label3;

        $r10 = virtualinvoke r5.<android.view.InsetsSourceControl: android.view.SurfaceControl getLeash()>();

        if $r10 != null goto label2;

        i6 = i4;

        goto label3;

     label2:
        $i2 = staticinvoke <android.view.InsetsState: int toPublicType(int)>(i0);

        i6 = i4 | $i2;

        $i3 = virtualinvoke r5.<android.view.InsetsSourceControl: int getType()>();

        $r11 = new android.view.InsetsSourceControl;

        specialinvoke $r11.<android.view.InsetsSourceControl: void <init>(android.view.InsetsSourceControl)>(r5);

        virtualinvoke $r6.<android.util.SparseArray: void put(int,java.lang.Object)>($i3, $r11);

        virtualinvoke r2.<android.view.InsetsState: void setSourceVisible(int,boolean)>(i0, z0);

     label3:
        i5 = i5 + -1;

        i4 = i6;

        goto label1;

     label4:
        specialinvoke r0.<com.android.server.wm.InsetsPolicy: void controlAnimationUnchecked(int,android.util.SparseArray,boolean,java.lang.Runnable)>(i4, $r6, z0, r1);

        return;
    }

    void updateBarControlTarget(com.android.server.wm.WindowState)
    {
        com.android.server.wm.InsetsPolicy r0;
        com.android.server.wm.WindowState r1, $r4;
        boolean z0;
        com.android.server.wm.InsetsControlTarget r2, r3, $r6, $r7;
        com.android.server.wm.InsetsStateController $r5;
        int $i0;
        com.android.server.wm.InsetsPolicy$BarWindow $r8, $r9;
        com.android.server.wm.DisplayPolicy $r10;

        r0 := @this: com.android.server.wm.InsetsPolicy;

        r1 := @parameter0: com.android.server.wm.WindowState;

        $r4 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.WindowState mFocusedWin>;

        if $r4 == r1 goto label1;

        specialinvoke r0.<com.android.server.wm.InsetsPolicy: void abortTransient()>();

     label1:
        r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.WindowState mFocusedWin> = r1;

        z0 = specialinvoke r0.<com.android.server.wm.InsetsPolicy: boolean forceShowsSystemBarsForWindowingMode()>();

        r2 = specialinvoke r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.InsetsControlTarget getStatusControlTarget(com.android.server.wm.WindowState,boolean)>(r1, z0);

        r3 = specialinvoke r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.InsetsControlTarget getNavControlTarget(com.android.server.wm.WindowState,boolean)>(r1, z0);

        $r5 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.InsetsStateController mStateController>;

        $r6 = specialinvoke r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.InsetsControlTarget getFakeControlTarget(com.android.server.wm.WindowState,com.android.server.wm.InsetsControlTarget)>(r1, r2);

        $r7 = specialinvoke r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.InsetsControlTarget getFakeControlTarget(com.android.server.wm.WindowState,com.android.server.wm.InsetsControlTarget)>(r1, r3);

        virtualinvoke $r5.<com.android.server.wm.InsetsStateController: void onBarControlTargetChanged(com.android.server.wm.InsetsControlTarget,com.android.server.wm.InsetsControlTarget,com.android.server.wm.InsetsControlTarget,com.android.server.wm.InsetsControlTarget)>(r2, $r6, r3, $r7);

        $i0 = <android.view.ViewRootImpl: int sNewInsetsMode>;

        if $i0 == 2 goto label2;

        return;

     label2:
        $r8 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.InsetsPolicy$BarWindow mStatusBar>;

        staticinvoke <com.android.server.wm.InsetsPolicy$BarWindow: void access$300(com.android.server.wm.InsetsPolicy$BarWindow,com.android.server.wm.InsetsControlTarget,int)>($r8, r2, 0);

        $r9 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.InsetsPolicy$BarWindow mNavBar>;

        staticinvoke <com.android.server.wm.InsetsPolicy$BarWindow: void access$300(com.android.server.wm.InsetsPolicy$BarWindow,com.android.server.wm.InsetsControlTarget,int)>($r9, r3, 1);

        $r10 = r0.<com.android.server.wm.InsetsPolicy: com.android.server.wm.DisplayPolicy mPolicy>;

        virtualinvoke $r10.<com.android.server.wm.DisplayPolicy: void updateHideNavInputEventReceiver()>();

        return;
    }
}
