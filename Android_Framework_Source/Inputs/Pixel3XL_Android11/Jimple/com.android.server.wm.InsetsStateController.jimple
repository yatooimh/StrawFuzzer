class com.android.server.wm.InsetsStateController extends java.lang.Object
{
    private final android.util.ArrayMap mControlTargetTypeMap;
    private final java.util.function.Consumer mDispatchInsetsChanged;
    private final com.android.server.wm.DisplayContent mDisplayContent;
    private final com.android.server.wm.InsetsControlTarget mEmptyImeControlTarget;
    private final android.view.InsetsState mLastState;
    private final android.util.ArraySet mPendingControlChanged;
    private final android.util.ArrayMap mProviders;
    private final android.view.InsetsState mState;
    private final android.util.SparseArray mTypeControlTargetMap;
    private final android.util.SparseArray mTypeFakeControlTargetMap;

    void <init>(com.android.server.wm.DisplayContent)
    {
        com.android.server.wm.InsetsStateController r0;
        com.android.server.wm.DisplayContent r1;
        com.android.server.wm.'-$$Lambda$InsetsStateController$sIYEJIR4ztgffCLMi5Z1RvdxyYs' $r9;
        android.view.InsetsState r11, r12;
        android.util.ArrayMap r13, r14;
        android.util.SparseArray r15, r16;
        android.util.ArraySet r17;
        com.android.server.wm.InsetsStateController$1 r18;
        java.util.function.Consumer r19;

        r0 := @this: com.android.server.wm.InsetsStateController;

        r1 := @parameter0: com.android.server.wm.DisplayContent;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r11 = new android.view.InsetsState;

        specialinvoke r11.<android.view.InsetsState: void <init>()>();

        r0.<com.android.server.wm.InsetsStateController: android.view.InsetsState mLastState> = r11;

        r12 = new android.view.InsetsState;

        specialinvoke r12.<android.view.InsetsState: void <init>()>();

        r0.<com.android.server.wm.InsetsStateController: android.view.InsetsState mState> = r12;

        r13 = new android.util.ArrayMap;

        specialinvoke r13.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.wm.InsetsStateController: android.util.ArrayMap mProviders> = r13;

        r14 = new android.util.ArrayMap;

        specialinvoke r14.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.wm.InsetsStateController: android.util.ArrayMap mControlTargetTypeMap> = r14;

        r15 = new android.util.SparseArray;

        specialinvoke r15.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.wm.InsetsStateController: android.util.SparseArray mTypeControlTargetMap> = r15;

        r16 = new android.util.SparseArray;

        specialinvoke r16.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.wm.InsetsStateController: android.util.SparseArray mTypeFakeControlTargetMap> = r16;

        r17 = new android.util.ArraySet;

        specialinvoke r17.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.wm.InsetsStateController: android.util.ArraySet mPendingControlChanged> = r17;

        $r9 = <com.android.server.wm._$$Lambda$InsetsStateController$sIYEJIR4ztgffCLMi5Z1RvdxyYs: com.android.server.wm.'-$$Lambda$InsetsStateController$sIYEJIR4ztgffCLMi5Z1RvdxyYs' INSTANCE>;

        r19 = (java.util.function.Consumer) $r9;

        r0.<com.android.server.wm.InsetsStateController: java.util.function.Consumer mDispatchInsetsChanged> = r19;

        r18 = new com.android.server.wm.InsetsStateController$1;

        specialinvoke r18.<com.android.server.wm.InsetsStateController$1: void <init>(com.android.server.wm.InsetsStateController)>(r0);

        r0.<com.android.server.wm.InsetsStateController: com.android.server.wm.InsetsControlTarget mEmptyImeControlTarget> = r18;

        r0.<com.android.server.wm.InsetsStateController: com.android.server.wm.DisplayContent mDisplayContent> = r1;

        return;
    }

    static com.android.server.wm.DisplayContent access$000(com.android.server.wm.InsetsStateController)
    {
        com.android.server.wm.InsetsStateController r0;
        com.android.server.wm.DisplayContent $r1;

        r0 := @parameter0: com.android.server.wm.InsetsStateController;

        $r1 = r0.<com.android.server.wm.InsetsStateController: com.android.server.wm.DisplayContent mDisplayContent>;

        return $r1;
    }

    private void addToControlMaps(com.android.server.wm.InsetsControlTarget, int, boolean)
    {
        com.android.server.wm.InsetsStateController r0;
        com.android.server.wm.InsetsControlTarget r1;
        int i0;
        boolean z0;
        com.android.server.wm.'-$$Lambda$InsetsStateController$0D_z1-eyl79cSyxMEkWr97-EhW0' $r2;
        android.util.ArrayMap $r3;
        java.lang.Object $r4;
        java.util.ArrayList $r5;
        java.lang.Integer $r6;
        android.util.SparseArray $r7, $r8;
        java.util.function.Function r9;

        r0 := @this: com.android.server.wm.InsetsStateController;

        r1 := @parameter0: com.android.server.wm.InsetsControlTarget;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r3 = r0.<com.android.server.wm.InsetsStateController: android.util.ArrayMap mControlTargetTypeMap>;

        $r2 = <com.android.server.wm._$$Lambda$InsetsStateController$0D_z1_eyl79cSyxMEkWr97_EhW0: com.android.server.wm.'-$$Lambda$InsetsStateController$0D_z1-eyl79cSyxMEkWr97-EhW0' INSTANCE>;

        r9 = (java.util.function.Function) $r2;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>(r1, r9);

        $r5 = (java.util.ArrayList) $r4;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        if z0 == 0 goto label1;

        $r8 = r0.<com.android.server.wm.InsetsStateController: android.util.SparseArray mTypeFakeControlTargetMap>;

        virtualinvoke $r8.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r1);

        goto label2;

     label1:
        $r7 = r0.<com.android.server.wm.InsetsStateController: android.util.SparseArray mTypeControlTargetMap>;

        virtualinvoke $r7.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r1);

     label2:
        return;
    }

    private android.view.InsetsState getInsetsForDispatchInner(int, int, boolean, boolean)
    {
        com.android.server.wm.InsetsStateController r0;
        int i0, $i1, $i2, i3, i4;
        boolean z0, z1, $z2, $z3, $z4;
        android.view.InsetsState $r1, $r3, $r4, r12, r13, r17, r18;
        android.view.InsetsSource $r2, $r8, $r9, $r10, r19;
        android.util.ArrayMap $r5, $r6;
        java.lang.Object $r7;
        android.graphics.Rect $r11;
        com.android.server.wm.InsetsSourceProvider r15;

        r0 := @this: com.android.server.wm.InsetsStateController;

        i3 := @parameter0: int;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r12 = r0.<com.android.server.wm.InsetsStateController: android.view.InsetsState mState>;

        r13 = r12;

        if i3 == -1 goto label5;

        $r4 = new android.view.InsetsState;

        specialinvoke $r4.<android.view.InsetsState: void <init>(android.view.InsetsState)>(r12);

        virtualinvoke $r4.<android.view.InsetsState: void removeSource(int)>(i3);

        if i3 != 1 goto label1;

        virtualinvoke $r4.<android.view.InsetsState: void removeSource(int)>(13);

        virtualinvoke $r4.<android.view.InsetsState: void removeSource(int)>(0);

        virtualinvoke $r4.<android.view.InsetsState: void removeSource(int)>(2);

     label1:
        if i3 != 0 goto label2;

        virtualinvoke $r4.<android.view.InsetsState: void removeSource(int)>(2);

     label2:
        r13 = $r4;

        if i3 != 13 goto label5;

        $r5 = r0.<com.android.server.wm.InsetsStateController: android.util.ArrayMap mProviders>;

        $i1 = virtualinvoke $r5.<android.util.ArrayMap: int size()>();

        i4 = $i1 - 1;

     label3:
        r13 = $r4;

        if i4 < 0 goto label5;

        $r6 = r0.<com.android.server.wm.InsetsStateController: android.util.ArrayMap mProviders>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i4);

        r15 = (com.android.server.wm.InsetsSourceProvider) $r7;

        $z3 = virtualinvoke r15.<com.android.server.wm.InsetsSourceProvider: boolean overridesImeFrame()>();

        if $z3 == 0 goto label4;

        $r8 = new android.view.InsetsSource;

        $r9 = virtualinvoke r15.<com.android.server.wm.InsetsSourceProvider: android.view.InsetsSource getSource()>();

        $i2 = virtualinvoke $r9.<android.view.InsetsSource: int getType()>();

        $r10 = virtualinvoke $r4.<android.view.InsetsState: android.view.InsetsSource getSource(int)>($i2);

        specialinvoke $r8.<android.view.InsetsSource: void <init>(android.view.InsetsSource)>($r10);

        $r11 = virtualinvoke r15.<com.android.server.wm.InsetsSourceProvider: android.graphics.Rect getImeOverrideFrame()>();

        virtualinvoke $r8.<android.view.InsetsSource: void setFrame(android.graphics.Rect)>($r11);

        virtualinvoke $r4.<android.view.InsetsState: void addSource(android.view.InsetsSource)>($r8);

     label4:
        i4 = i4 + -1;

        goto label3;

     label5:
        $z4 = staticinvoke <android.app.WindowConfiguration: boolean isFloating(int)>(i0);

        if $z4 != 0 goto label6;

        r17 = r13;

        if i0 != 6 goto label7;

        r17 = r13;

        if z0 == 0 goto label7;

     label6:
        $r1 = new android.view.InsetsState;

        specialinvoke $r1.<android.view.InsetsState: void <init>(android.view.InsetsState)>(r13);

        r17 = $r1;

        virtualinvoke $r1.<android.view.InsetsState: void removeSource(int)>(0);

        virtualinvoke $r1.<android.view.InsetsState: void removeSource(int)>(1);

     label7:
        r18 = r17;

        if z1 == 0 goto label8;

        r19 = virtualinvoke r17.<android.view.InsetsState: android.view.InsetsSource peekSource(int)>(13);

        r18 = r17;

        if r19 == null goto label8;

        r18 = r17;

        $z2 = virtualinvoke r19.<android.view.InsetsSource: boolean isVisible()>();

        if $z2 == 0 goto label8;

        $r2 = new android.view.InsetsSource;

        specialinvoke $r2.<android.view.InsetsSource: void <init>(android.view.InsetsSource)>(r19);

        virtualinvoke $r2.<android.view.InsetsSource: void setVisible(boolean)>(0);

        virtualinvoke $r2.<android.view.InsetsSource: void setFrame(int,int,int,int)>(0, 0, 0, 0);

        $r3 = new android.view.InsetsState;

        specialinvoke $r3.<android.view.InsetsState: void <init>(android.view.InsetsState)>(r17);

        r18 = $r3;

        virtualinvoke $r3.<android.view.InsetsState: void addSource(android.view.InsetsSource)>($r2);

     label8:
        return r18;
    }

    private static int getInsetsTypeForWindowType(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 2000 goto label3;

        if i0 == 2011 goto label2;

        if i0 == 2019 goto label1;

        return -1;

     label1:
        return 1;

     label2:
        return 13;

     label3:
        return 0;
    }

    private boolean isAboveIme(com.android.server.wm.WindowContainer)
    {
        com.android.server.wm.InsetsStateController r0;
        com.android.server.wm.WindowState r1, r4;
        com.android.server.wm.DisplayContent $r2;
        boolean $z0, $z1, $z2, z3;
        com.android.server.wm.WindowContainer r3;

        r0 := @this: com.android.server.wm.InsetsStateController;

        r3 := @parameter0: com.android.server.wm.WindowContainer;

        $r2 = r0.<com.android.server.wm.InsetsStateController: com.android.server.wm.DisplayContent mDisplayContent>;

        r1 = $r2.<com.android.server.wm.DisplayContent: com.android.server.wm.WindowState mInputMethodWindow>;

        z3 = 0;

        if r3 == null goto label5;

        if r1 != null goto label1;

        goto label5;

     label1:
        $z0 = r3 instanceof com.android.server.wm.WindowState;

        if $z0 == 0 goto label4;

        r4 = (com.android.server.wm.WindowState) r3;

        $z1 = virtualinvoke r4.<com.android.server.wm.WindowState: boolean needsRelativeLayeringToIme()>();

        if $z1 != 0 goto label2;

        $z2 = r4.<com.android.server.wm.WindowState: boolean mBehindIme>;

        if $z2 != 0 goto label3;

     label2:
        z3 = 1;

     label3:
        return z3;

     label4:
        return 0;

     label5:
        return 0;
    }

    static java.util.ArrayList lambda$addToControlMaps$3(com.android.server.wm.InsetsControlTarget)
    {
        com.android.server.wm.InsetsControlTarget r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: com.android.server.wm.InsetsControlTarget;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        return $r1;
    }

    static void lambda$new$0(com.android.server.wm.WindowState)
    {
        com.android.server.wm.WindowState r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.wm.WindowState;

        $z0 = virtualinvoke r0.<com.android.server.wm.WindowState: boolean isVisible()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.server.wm.WindowState: void notifyInsetsChanged()>();

     label1:
        return;
    }

    private void notifyPendingInsetsControlChanged()
    {
        com.android.server.wm.InsetsStateController r0;
        android.util.ArraySet $r1;
        boolean $z0;
        com.android.server.wm.DisplayContent $r2;
        com.android.server.wm.WindowManagerService $r3;
        com.android.server.wm._$$Lambda$InsetsStateController$_1iOXDf_1s3wDHcMIHBKNk6MS3I $r4;
        com.android.server.wm.WindowAnimator $r5;

        r0 := @this: com.android.server.wm.InsetsStateController;

        $r1 = r0.<com.android.server.wm.InsetsStateController: android.util.ArraySet mPendingControlChanged>;

        $z0 = virtualinvoke $r1.<android.util.ArraySet: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.server.wm.InsetsStateController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r3 = $r2.<com.android.server.wm.DisplayContent: com.android.server.wm.WindowManagerService mWmService>;

        $r5 = $r3.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowAnimator mAnimator>;

        $r4 = new com.android.server.wm._$$Lambda$InsetsStateController$_1iOXDf_1s3wDHcMIHBKNk6MS3I;

        specialinvoke $r4.<com.android.server.wm._$$Lambda$InsetsStateController$_1iOXDf_1s3wDHcMIHBKNk6MS3I: void <init>(com.android.server.wm.InsetsStateController)>(r0);

        virtualinvoke $r5.<com.android.server.wm.WindowAnimator: void addAfterPrepareSurfacesRunnable(java.lang.Runnable)>($r4);

        return;
    }

    private void onControlChanged(int, com.android.server.wm.InsetsControlTarget)
    {
        com.android.server.wm.InsetsStateController r0;
        int i0;
        com.android.server.wm.InsetsControlTarget r1, r10, r11;
        com.android.server.wm.InsetsSourceProvider r2;
        android.util.SparseArray $r3;
        java.lang.Object $r4, $r7;
        android.util.ArrayMap $r5;
        java.lang.Integer $r6;
        boolean $z0;
        android.util.ArraySet $r8, $r9;

        r0 := @this: com.android.server.wm.InsetsStateController;

        i0 := @parameter0: int;

        r10 := @parameter1: com.android.server.wm.InsetsControlTarget;

        $r3 = r0.<com.android.server.wm.InsetsStateController: android.util.SparseArray mTypeControlTargetMap>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.wm.InsetsControlTarget) $r4;

        if r10 != r1 goto label1;

        return;

     label1:
        $r5 = r0.<com.android.server.wm.InsetsStateController: android.util.ArrayMap mProviders>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r6);

        r2 = (com.android.server.wm.InsetsSourceProvider) $r7;

        if r2 != null goto label2;

        return;

     label2:
        $z0 = virtualinvoke r2.<com.android.server.wm.InsetsSourceProvider: boolean isControllable()>();

        if $z0 != 0 goto label3;

        return;

     label3:
        virtualinvoke r2.<com.android.server.wm.InsetsSourceProvider: void updateControlForTarget(com.android.server.wm.InsetsControlTarget,boolean)>(r10, 0);

        r11 = virtualinvoke r2.<com.android.server.wm.InsetsSourceProvider: com.android.server.wm.InsetsControlTarget getControlTarget()>();

        if r1 == null goto label4;

        specialinvoke r0.<com.android.server.wm.InsetsStateController: void removeFromControlMaps(com.android.server.wm.InsetsControlTarget,int,boolean)>(r1, i0, 0);

        $r9 = r0.<com.android.server.wm.InsetsStateController: android.util.ArraySet mPendingControlChanged>;

        virtualinvoke $r9.<android.util.ArraySet: boolean add(java.lang.Object)>(r1);

     label4:
        if r11 == null goto label5;

        specialinvoke r0.<com.android.server.wm.InsetsStateController: void addToControlMaps(com.android.server.wm.InsetsControlTarget,int,boolean)>(r11, i0, 0);

        $r8 = r0.<com.android.server.wm.InsetsStateController: android.util.ArraySet mPendingControlChanged>;

        virtualinvoke $r8.<android.util.ArraySet: boolean add(java.lang.Object)>(r11);

     label5:
        return;
    }

    private void removeFromControlMaps(com.android.server.wm.InsetsControlTarget, int, boolean)
    {
        com.android.server.wm.InsetsStateController r0;
        com.android.server.wm.InsetsControlTarget r1;
        int i0;
        boolean z0, $z2;
        java.util.ArrayList r2;
        android.util.ArrayMap $r3, $r8;
        java.lang.Object $r4;
        java.lang.Integer $r5;
        android.util.SparseArray $r6, $r7;

        r0 := @this: com.android.server.wm.InsetsStateController;

        r1 := @parameter0: com.android.server.wm.InsetsControlTarget;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r3 = r0.<com.android.server.wm.InsetsStateController: android.util.ArrayMap mControlTargetTypeMap>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.util.ArrayList) $r4;

        if r2 != null goto label1;

        return;

     label1:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke r2.<java.util.ArrayList: boolean remove(java.lang.Object)>($r5);

        $z2 = virtualinvoke r2.<java.util.ArrayList: boolean isEmpty()>();

        if $z2 == 0 goto label2;

        $r8 = r0.<com.android.server.wm.InsetsStateController: android.util.ArrayMap mControlTargetTypeMap>;

        virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

     label2:
        if z0 == 0 goto label3;

        $r7 = r0.<com.android.server.wm.InsetsStateController: android.util.SparseArray mTypeFakeControlTargetMap>;

        virtualinvoke $r7.<android.util.SparseArray: void remove(int)>(i0);

        goto label4;

     label3:
        $r6 = r0.<com.android.server.wm.InsetsStateController: android.util.SparseArray mTypeControlTargetMap>;

        virtualinvoke $r6.<android.util.SparseArray: void remove(int)>(i0);

     label4:
        return;
    }

    void computeSimulatedState(android.view.InsetsState, com.android.server.wm.WindowState, com.android.server.wm.DisplayFrames, com.android.server.wm.WindowFrames)
    {
        com.android.server.wm.InsetsStateController r0;
        android.view.InsetsState r1;
        com.android.server.wm.WindowState r2, $r9;
        com.android.server.wm.DisplayFrames r3;
        com.android.server.wm.WindowFrames r4;
        com.android.server.wm.InsetsSourceProvider r5;
        android.util.ArrayMap $r6, $r7;
        int $i0, i1;
        java.lang.Object $r8;
        android.view.InsetsSource $r10;

        r0 := @this: com.android.server.wm.InsetsStateController;

        r1 := @parameter0: android.view.InsetsState;

        r2 := @parameter1: com.android.server.wm.WindowState;

        r3 := @parameter2: com.android.server.wm.DisplayFrames;

        r4 := @parameter3: com.android.server.wm.WindowFrames;

        $r6 = r0.<com.android.server.wm.InsetsStateController: android.util.ArrayMap mProviders>;

        $i0 = virtualinvoke $r6.<android.util.ArrayMap: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r7 = r0.<com.android.server.wm.InsetsStateController: android.util.ArrayMap mProviders>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        r5 = (com.android.server.wm.InsetsSourceProvider) $r8;

        $r9 = r5.<com.android.server.wm.InsetsSourceProvider: com.android.server.wm.WindowState mWin>;

        if $r9 != r2 goto label2;

        $r10 = virtualinvoke r5.<com.android.server.wm.InsetsSourceProvider: android.view.InsetsSource createSimulatedSource(com.android.server.wm.DisplayFrames,com.android.server.wm.WindowFrames)>(r3, r4);

        virtualinvoke r1.<android.view.InsetsState: void addSource(android.view.InsetsSource)>($r10);

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return;
    }

    void dump(java.lang.String, java.io.PrintWriter)
    {
        com.android.server.wm.InsetsStateController r0;
        java.lang.String r1, $r7, $r11, $r15, $r20, $r25, $r30, $r33, $r40, $r43, $r49;
        java.io.PrintWriter r2;
        android.view.InsetsState r3;
        java.lang.StringBuilder $r4, $r8, $r12, $r17, $r22, $r26, $r37, $r41;
        android.util.SparseArray $r16, $r42, $r46;
        int $i0, $i1, $i2, $i3, i4, i5;
        android.util.ArrayMap $r21, $r27, $r34;
        java.lang.Object $r28, $r35, $r47;
        java.lang.Integer $r29;
        com.android.server.wm.InsetsSourceProvider $r36;

        r0 := @this: com.android.server.wm.InsetsStateController;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.PrintWriter;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WindowInsetsStateController");

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        r3 = r0.<com.android.server.wm.InsetsStateController: android.view.InsetsState mState>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<android.view.InsetsState: void dump(java.lang.String,java.io.PrintWriter)>($r11, r2);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Control map:");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r15);

        $r16 = r0.<com.android.server.wm.InsetsStateController: android.util.SparseArray mTypeControlTargetMap>;

        $i0 = virtualinvoke $r16.<android.util.SparseArray: int size()>();

        i4 = $i0 - 1;

     label1:
        if i4 < 0 goto label2;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r40 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r40);

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = r0.<com.android.server.wm.InsetsStateController: android.util.SparseArray mTypeControlTargetMap>;

        $i3 = virtualinvoke $r42.<android.util.SparseArray: int keyAt(int)>(i4);

        $r43 = staticinvoke <android.view.InsetsState: java.lang.String typeToString(int)>($i3);

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r46 = r0.<com.android.server.wm.InsetsStateController: android.util.SparseArray mTypeControlTargetMap>;

        $r47 = virtualinvoke $r46.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r47);

        $r49 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r49);

        i4 = i4 + -1;

        goto label1;

     label2:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  InsetsSourceProviders map:");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r20);

        $r21 = r0.<com.android.server.wm.InsetsStateController: android.util.ArrayMap mProviders>;

        $i1 = virtualinvoke $r21.<android.util.ArrayMap: int size()>();

        i5 = $i1 - 1;

     label3:
        if i5 < 0 goto label4;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r25);

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = r0.<com.android.server.wm.InsetsStateController: android.util.ArrayMap mProviders>;

        $r28 = virtualinvoke $r27.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i5);

        $r29 = (java.lang.Integer) $r28;

        $i2 = virtualinvoke $r29.<java.lang.Integer: int intValue()>();

        $r30 = staticinvoke <android.view.InsetsState: java.lang.String typeToString(int)>($i2);

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r33 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r33);

        $r34 = r0.<com.android.server.wm.InsetsStateController: android.util.ArrayMap mProviders>;

        $r35 = virtualinvoke $r34.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i5);

        $r36 = (com.android.server.wm.InsetsSourceProvider) $r35;

        virtualinvoke $r36.<com.android.server.wm.InsetsSourceProvider: void dump(java.io.PrintWriter,java.lang.String)>(r2, r1);

        i5 = i5 + -1;

        goto label3;

     label4:
        return;
    }

    android.view.InsetsSourceControl[] getControlsForDispatch(com.android.server.wm.InsetsControlTarget)
    {
        com.android.server.wm.InsetsStateController r0;
        com.android.server.wm.InsetsControlTarget r1;
        java.util.ArrayList r2;
        int i0, i1;
        android.view.InsetsSourceControl[] r3;
        android.util.ArrayMap $r4, $r6;
        java.lang.Object $r5, $r7, $r8;
        com.android.server.wm.InsetsSourceProvider $r9;
        android.view.InsetsSourceControl $r10;

        r0 := @this: com.android.server.wm.InsetsStateController;

        r1 := @parameter0: com.android.server.wm.InsetsControlTarget;

        $r4 = r0.<com.android.server.wm.InsetsStateController: android.util.ArrayMap mControlTargetTypeMap>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.util.ArrayList) $r5;

        if r2 != null goto label1;

        return null;

     label1:
        i0 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        r3 = newarray (android.view.InsetsSourceControl)[i0];

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r6 = r0.<com.android.server.wm.InsetsStateController: android.util.ArrayMap mProviders>;

        $r7 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r8 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r7);

        $r9 = (com.android.server.wm.InsetsSourceProvider) $r8;

        $r10 = virtualinvoke $r9.<com.android.server.wm.InsetsSourceProvider: android.view.InsetsSourceControl getControl(com.android.server.wm.InsetsControlTarget)>(r1);

        r3[i1] = $r10;

        i1 = i1 + 1;

        goto label2;

     label3:
        return r3;
    }

    com.android.server.wm.ImeInsetsSourceProvider getImeSourceProvider()
    {
        com.android.server.wm.InsetsStateController r0;
        com.android.server.wm.InsetsSourceProvider $r1;
        com.android.server.wm.ImeInsetsSourceProvider $r2;

        r0 := @this: com.android.server.wm.InsetsStateController;

        $r1 = virtualinvoke r0.<com.android.server.wm.InsetsStateController: com.android.server.wm.InsetsSourceProvider getSourceProvider(int)>(13);

        $r2 = (com.android.server.wm.ImeInsetsSourceProvider) $r1;

        return $r2;
    }

    android.view.InsetsState getInsetsForDispatch(com.android.server.wm.WindowState)
    {
        com.android.server.wm.InsetsStateController r0;
        com.android.server.wm.WindowState r1;
        com.android.server.wm.InsetsSourceProvider r2;
        int $i0, i1;
        boolean $z0, $z1;
        android.view.InsetsState $r3;
        android.view.InsetsSource $r4;

        r0 := @this: com.android.server.wm.InsetsStateController;

        r1 := @parameter0: com.android.server.wm.WindowState;

        r2 = virtualinvoke r1.<com.android.server.wm.WindowState: com.android.server.wm.InsetsSourceProvider getControllableInsetProvider()>();

        if r2 == null goto label1;

        $r4 = virtualinvoke r2.<com.android.server.wm.InsetsSourceProvider: android.view.InsetsSource getSource()>();

        i1 = virtualinvoke $r4.<android.view.InsetsSource: int getType()>();

        goto label2;

     label1:
        i1 = -1;

     label2:
        $i0 = virtualinvoke r1.<com.android.server.wm.WindowState: int getWindowingMode()>();

        $z0 = virtualinvoke r1.<com.android.server.wm.WindowState: boolean isAlwaysOnTop()>();

        $z1 = specialinvoke r0.<com.android.server.wm.InsetsStateController: boolean isAboveIme(com.android.server.wm.WindowContainer)>(r1);

        $r3 = specialinvoke r0.<com.android.server.wm.InsetsStateController: android.view.InsetsState getInsetsForDispatchInner(int,int,boolean,boolean)>(i1, $i0, $z0, $z1);

        return $r3;
    }

    android.view.InsetsState getInsetsForWindowMetrics(android.view.WindowManager$LayoutParams)
    {
        com.android.server.wm.InsetsStateController r0;
        int i0, $i1, i2;
        android.os.IBinder $r1;
        com.android.server.wm.DisplayContent $r2;
        boolean $z1, z2, $z3;
        android.view.WindowManager$LayoutParams r3;
        com.android.server.wm.WindowToken r4;
        android.view.InsetsState $r5;

        r0 := @this: com.android.server.wm.InsetsStateController;

        r3 := @parameter0: android.view.WindowManager$LayoutParams;

        $i1 = r3.<android.view.WindowManager$LayoutParams: int type>;

        i0 = staticinvoke <com.android.server.wm.InsetsStateController: int getInsetsTypeForWindowType(int)>($i1);

        $r2 = r0.<com.android.server.wm.InsetsStateController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r1 = r3.<android.view.WindowManager$LayoutParams: android.os.IBinder token>;

        r4 = virtualinvoke $r2.<com.android.server.wm.DisplayContent: com.android.server.wm.WindowToken getWindowToken(android.os.IBinder)>($r1);

        if r4 == null goto label1;

        i2 = virtualinvoke r4.<com.android.server.wm.WindowToken: int getWindowingMode()>();

        goto label2;

     label1:
        i2 = 0;

     label2:
        z2 = 0;

        if r4 == null goto label3;

        z2 = 0;

        $z1 = virtualinvoke r4.<com.android.server.wm.WindowToken: boolean isAlwaysOnTop()>();

        if $z1 == 0 goto label3;

        z2 = 1;

     label3:
        $z3 = specialinvoke r0.<com.android.server.wm.InsetsStateController: boolean isAboveIme(com.android.server.wm.WindowContainer)>(r4);

        $r5 = specialinvoke r0.<com.android.server.wm.InsetsStateController: android.view.InsetsState getInsetsForDispatchInner(int,int,boolean,boolean)>(i0, i2, z2, $z3);

        return $r5;
    }

    android.view.InsetsState getRawInsetsState()
    {
        com.android.server.wm.InsetsStateController r0;
        android.view.InsetsState $r1;

        r0 := @this: com.android.server.wm.InsetsStateController;

        $r1 = r0.<com.android.server.wm.InsetsStateController: android.view.InsetsState mState>;

        return $r1;
    }

    com.android.server.wm.InsetsSourceProvider getSourceProvider(int)
    {
        com.android.server.wm.InsetsStateController r0;
        int i0;
        android.util.ArrayMap $r1, $r6;
        java.lang.Integer $r2, $r7;
        com.android.server.wm._$$Lambda$InsetsStateController$c8m0K1Ykk6OHrDEJKWFPmp5WxKU $r3;
        java.lang.Object $r4, $r9;
        com.android.server.wm.InsetsSourceProvider $r5, $r10;
        com.android.server.wm._$$Lambda$InsetsStateController$pXoYGy4X5aPw1QFi0iIWKiTMlDg $r8;

        r0 := @this: com.android.server.wm.InsetsStateController;

        i0 := @parameter0: int;

        if i0 != 13 goto label1;

        $r6 = r0.<com.android.server.wm.InsetsStateController: android.util.ArrayMap mProviders>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r8 = new com.android.server.wm._$$Lambda$InsetsStateController$pXoYGy4X5aPw1QFi0iIWKiTMlDg;

        specialinvoke $r8.<com.android.server.wm._$$Lambda$InsetsStateController$pXoYGy4X5aPw1QFi0iIWKiTMlDg: void <init>(com.android.server.wm.InsetsStateController)>(r0);

        $r9 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>($r7, $r8);

        $r10 = (com.android.server.wm.InsetsSourceProvider) $r9;

        return $r10;

     label1:
        $r1 = r0.<com.android.server.wm.InsetsStateController: android.util.ArrayMap mProviders>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = new com.android.server.wm._$$Lambda$InsetsStateController$c8m0K1Ykk6OHrDEJKWFPmp5WxKU;

        specialinvoke $r3.<com.android.server.wm._$$Lambda$InsetsStateController$c8m0K1Ykk6OHrDEJKWFPmp5WxKU: void <init>(com.android.server.wm.InsetsStateController)>(r0);

        $r4 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>($r2, $r3);

        $r5 = (com.android.server.wm.InsetsSourceProvider) $r4;

        return $r5;
    }

    boolean isFakeTarget(int, com.android.server.wm.InsetsControlTarget)
    {
        com.android.server.wm.InsetsStateController r0;
        int i0;
        com.android.server.wm.InsetsControlTarget r1;
        android.util.SparseArray $r2;
        java.lang.Object $r3;
        boolean z0;

        r0 := @this: com.android.server.wm.InsetsStateController;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.wm.InsetsControlTarget;

        $r2 = r0.<com.android.server.wm.InsetsStateController: android.util.SparseArray mTypeFakeControlTargetMap>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        if $r3 != r1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public com.android.server.wm.InsetsSourceProvider lambda$getSourceProvider$1$InsetsStateController(java.lang.Integer)
    {
        com.android.server.wm.InsetsStateController r0;
        java.lang.Integer r1;
        com.android.server.wm.ImeInsetsSourceProvider $r2;
        android.view.InsetsState $r3;
        int $i0;
        android.view.InsetsSource $r4;
        com.android.server.wm.DisplayContent $r5;

        r0 := @this: com.android.server.wm.InsetsStateController;

        r1 := @parameter0: java.lang.Integer;

        $r2 = new com.android.server.wm.ImeInsetsSourceProvider;

        $r3 = r0.<com.android.server.wm.InsetsStateController: android.view.InsetsState mState>;

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $r4 = virtualinvoke $r3.<android.view.InsetsState: android.view.InsetsSource getSource(int)>($i0);

        $r5 = r0.<com.android.server.wm.InsetsStateController: com.android.server.wm.DisplayContent mDisplayContent>;

        specialinvoke $r2.<com.android.server.wm.ImeInsetsSourceProvider: void <init>(android.view.InsetsSource,com.android.server.wm.InsetsStateController,com.android.server.wm.DisplayContent)>($r4, r0, $r5);

        return $r2;
    }

    public com.android.server.wm.InsetsSourceProvider lambda$getSourceProvider$2$InsetsStateController(java.lang.Integer)
    {
        com.android.server.wm.InsetsStateController r0;
        java.lang.Integer r1;
        com.android.server.wm.InsetsSourceProvider $r2;
        android.view.InsetsState $r3;
        int $i0;
        android.view.InsetsSource $r4;
        com.android.server.wm.DisplayContent $r5;

        r0 := @this: com.android.server.wm.InsetsStateController;

        r1 := @parameter0: java.lang.Integer;

        $r2 = new com.android.server.wm.InsetsSourceProvider;

        $r3 = r0.<com.android.server.wm.InsetsStateController: android.view.InsetsState mState>;

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $r4 = virtualinvoke $r3.<android.view.InsetsState: android.view.InsetsSource getSource(int)>($i0);

        $r5 = r0.<com.android.server.wm.InsetsStateController: com.android.server.wm.DisplayContent mDisplayContent>;

        specialinvoke $r2.<com.android.server.wm.InsetsSourceProvider: void <init>(android.view.InsetsSource,com.android.server.wm.InsetsStateController,com.android.server.wm.DisplayContent)>($r4, r0, $r5);

        return $r2;
    }

    public void lambda$notifyPendingInsetsControlChanged$4$InsetsStateController()
    {
        com.android.server.wm.InsetsStateController r0;
        android.util.ArrayMap $r1, $r7;
        int $i0, $i1, i2, i3;
        android.util.ArraySet $r2, $r3, $r4;
        java.lang.Object $r5, $r8;
        com.android.server.wm.InsetsControlTarget $r6;
        com.android.server.wm.InsetsSourceProvider $r9;

        r0 := @this: com.android.server.wm.InsetsStateController;

        $r1 = r0.<com.android.server.wm.InsetsStateController: android.util.ArrayMap mProviders>;

        $i0 = virtualinvoke $r1.<android.util.ArrayMap: int size()>();

        i2 = $i0 - 1;

     label1:
        if i2 < 0 goto label2;

        $r7 = r0.<com.android.server.wm.InsetsStateController: android.util.ArrayMap mProviders>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i2);

        $r9 = (com.android.server.wm.InsetsSourceProvider) $r8;

        virtualinvoke $r9.<com.android.server.wm.InsetsSourceProvider: void onSurfaceTransactionApplied()>();

        i2 = i2 + -1;

        goto label1;

     label2:
        $r2 = r0.<com.android.server.wm.InsetsStateController: android.util.ArraySet mPendingControlChanged>;

        $i1 = virtualinvoke $r2.<android.util.ArraySet: int size()>();

        i3 = $i1 - 1;

     label3:
        if i3 < 0 goto label4;

        $r4 = r0.<com.android.server.wm.InsetsStateController: android.util.ArraySet mPendingControlChanged>;

        $r5 = virtualinvoke $r4.<android.util.ArraySet: java.lang.Object valueAt(int)>(i3);

        $r6 = (com.android.server.wm.InsetsControlTarget) $r5;

        interfaceinvoke $r6.<com.android.server.wm.InsetsControlTarget: void notifyInsetsControlChanged()>();

        i3 = i3 + -1;

        goto label3;

     label4:
        $r3 = r0.<com.android.server.wm.InsetsStateController: android.util.ArraySet mPendingControlChanged>;

        virtualinvoke $r3.<android.util.ArraySet: void clear()>();

        return;
    }

    void notifyControlChanged(com.android.server.wm.InsetsControlTarget)
    {
        com.android.server.wm.InsetsStateController r0;
        com.android.server.wm.InsetsControlTarget r1;
        android.util.ArraySet $r2;

        r0 := @this: com.android.server.wm.InsetsStateController;

        r1 := @parameter0: com.android.server.wm.InsetsControlTarget;

        $r2 = r0.<com.android.server.wm.InsetsStateController: android.util.ArraySet mPendingControlChanged>;

        virtualinvoke $r2.<android.util.ArraySet: boolean add(java.lang.Object)>(r1);

        specialinvoke r0.<com.android.server.wm.InsetsStateController: void notifyPendingInsetsControlChanged()>();

        return;
    }

    void notifyControlRevoked(com.android.server.wm.InsetsControlTarget, com.android.server.wm.InsetsSourceProvider)
    {
        com.android.server.wm.InsetsStateController r0;
        com.android.server.wm.InsetsControlTarget r1;
        com.android.server.wm.InsetsSourceProvider r2;
        android.view.InsetsSource $r3;
        int $i0;

        r0 := @this: com.android.server.wm.InsetsStateController;

        r1 := @parameter0: com.android.server.wm.InsetsControlTarget;

        r2 := @parameter1: com.android.server.wm.InsetsSourceProvider;

        $r3 = virtualinvoke r2.<com.android.server.wm.InsetsSourceProvider: android.view.InsetsSource getSource()>();

        $i0 = virtualinvoke $r3.<android.view.InsetsSource: int getType()>();

        specialinvoke r0.<com.android.server.wm.InsetsStateController: void removeFromControlMaps(com.android.server.wm.InsetsControlTarget,int,boolean)>(r1, $i0, 0);

        return;
    }

    void notifyInsetsChanged()
    {
        com.android.server.wm.InsetsStateController r0;
        java.util.function.Consumer $r1;
        com.android.server.wm.DisplayContent $r2, $r3, $r5;
        com.android.server.wm.DisplayContent$RemoteInsetsControlTarget $r4, $r6;

        r0 := @this: com.android.server.wm.InsetsStateController;

        $r2 = r0.<com.android.server.wm.InsetsStateController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r1 = r0.<com.android.server.wm.InsetsStateController: java.util.function.Consumer mDispatchInsetsChanged>;

        virtualinvoke $r2.<com.android.server.wm.DisplayContent: void forAllWindows(java.util.function.Consumer,boolean)>($r1, 1);

        $r3 = r0.<com.android.server.wm.InsetsStateController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r4 = $r3.<com.android.server.wm.DisplayContent: com.android.server.wm.DisplayContent$RemoteInsetsControlTarget mRemoteInsetsControlTarget>;

        if $r4 == null goto label1;

        $r5 = r0.<com.android.server.wm.InsetsStateController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r6 = $r5.<com.android.server.wm.DisplayContent: com.android.server.wm.DisplayContent$RemoteInsetsControlTarget mRemoteInsetsControlTarget>;

        virtualinvoke $r6.<com.android.server.wm.DisplayContent$RemoteInsetsControlTarget: void notifyInsetsChanged()>();

     label1:
        return;
    }

    void onBarControlTargetChanged(com.android.server.wm.InsetsControlTarget, com.android.server.wm.InsetsControlTarget, com.android.server.wm.InsetsControlTarget, com.android.server.wm.InsetsControlTarget)
    {
        com.android.server.wm.InsetsStateController r0;
        com.android.server.wm.InsetsControlTarget r1, r2, r3, r4;

        r0 := @this: com.android.server.wm.InsetsStateController;

        r1 := @parameter0: com.android.server.wm.InsetsControlTarget;

        r2 := @parameter1: com.android.server.wm.InsetsControlTarget;

        r3 := @parameter2: com.android.server.wm.InsetsControlTarget;

        r4 := @parameter3: com.android.server.wm.InsetsControlTarget;

        specialinvoke r0.<com.android.server.wm.InsetsStateController: void onControlChanged(int,com.android.server.wm.InsetsControlTarget)>(0, r1);

        specialinvoke r0.<com.android.server.wm.InsetsStateController: void onControlChanged(int,com.android.server.wm.InsetsControlTarget)>(1, r3);

        virtualinvoke r0.<com.android.server.wm.InsetsStateController: void onControlFakeTargetChanged(int,com.android.server.wm.InsetsControlTarget)>(0, r2);

        virtualinvoke r0.<com.android.server.wm.InsetsStateController: void onControlFakeTargetChanged(int,com.android.server.wm.InsetsControlTarget)>(1, r4);

        specialinvoke r0.<com.android.server.wm.InsetsStateController: void notifyPendingInsetsControlChanged()>();

        return;
    }

    void onControlFakeTargetChanged(int, com.android.server.wm.InsetsControlTarget)
    {
        com.android.server.wm.InsetsStateController r0;
        int i0, $i1;
        com.android.server.wm.InsetsControlTarget r1, r2;
        com.android.server.wm.InsetsSourceProvider r3;
        android.util.SparseArray $r4;
        java.lang.Object $r5, $r8;
        android.util.ArrayMap $r6;
        java.lang.Integer $r7;
        android.util.ArraySet $r9, $r10;

        r0 := @this: com.android.server.wm.InsetsStateController;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.wm.InsetsControlTarget;

        $i1 = <android.view.ViewRootImpl: int sNewInsetsMode>;

        if $i1 == 2 goto label1;

        return;

     label1:
        $r4 = r0.<com.android.server.wm.InsetsStateController: android.util.SparseArray mTypeFakeControlTargetMap>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.wm.InsetsControlTarget) $r5;

        if r1 != r2 goto label2;

        return;

     label2:
        $r6 = r0.<com.android.server.wm.InsetsStateController: android.util.ArrayMap mProviders>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r8 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r7);

        r3 = (com.android.server.wm.InsetsSourceProvider) $r8;

        if r3 != null goto label3;

        return;

     label3:
        virtualinvoke r3.<com.android.server.wm.InsetsSourceProvider: void updateControlForFakeTarget(com.android.server.wm.InsetsControlTarget)>(r1);

        if r2 == null goto label4;

        specialinvoke r0.<com.android.server.wm.InsetsStateController: void removeFromControlMaps(com.android.server.wm.InsetsControlTarget,int,boolean)>(r2, i0, 1);

        $r10 = r0.<com.android.server.wm.InsetsStateController: android.util.ArraySet mPendingControlChanged>;

        virtualinvoke $r10.<android.util.ArraySet: boolean add(java.lang.Object)>(r2);

     label4:
        if r1 == null goto label5;

        specialinvoke r0.<com.android.server.wm.InsetsStateController: void addToControlMaps(com.android.server.wm.InsetsControlTarget,int,boolean)>(r1, i0, 1);

        $r9 = r0.<com.android.server.wm.InsetsStateController: android.util.ArraySet mPendingControlChanged>;

        virtualinvoke $r9.<android.util.ArraySet: boolean add(java.lang.Object)>(r1);

     label5:
        return;
    }

    void onImeControlTargetChanged(com.android.server.wm.InsetsControlTarget)
    {
        com.android.server.wm.InsetsStateController r0;
        boolean $z0;
        java.lang.Object[] $r1;
        com.android.server.wm.ProtoLogGroup $r2;
        com.android.server.wm.InsetsControlTarget r3;
        java.lang.Object r4;
        java.lang.String r5;

        r0 := @this: com.android.server.wm.InsetsStateController;

        r3 := @parameter0: com.android.server.wm.InsetsControlTarget;

        if r3 == null goto label1;

        goto label2;

     label1:
        r3 = r0.<com.android.server.wm.InsetsStateController: com.android.server.wm.InsetsControlTarget mEmptyImeControlTarget>;

     label2:
        specialinvoke r0.<com.android.server.wm.InsetsStateController: void onControlChanged(int,com.android.server.wm.InsetsControlTarget)>(13, r3);

        $z0 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_IME_enabled>;

        if $z0 == 0 goto label5;

        if r3 == null goto label3;

        r4 = interfaceinvoke r3.<com.android.server.wm.InsetsControlTarget: com.android.server.wm.WindowState getWindow()>();

        goto label4;

     label3:
        r4 = "null";

     label4:
        r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r4);

        $r2 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_IME>;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = r5;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void d(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r2, 1658605381, 0, null, $r1);

     label5:
        specialinvoke r0.<com.android.server.wm.InsetsStateController: void notifyPendingInsetsControlChanged()>();

        return;
    }

    void onInsetsModified(com.android.server.wm.InsetsControlTarget, android.view.InsetsState)
    {
        com.android.server.wm.InsetsStateController r0;
        com.android.server.wm.InsetsControlTarget r1;
        android.view.InsetsState r2;
        android.view.InsetsSource r3;
        com.android.server.wm.InsetsSourceProvider r4;
        com.android.server.wm.DisplayContent $r5;
        com.android.server.wm.DisplayPolicy $r6;
        android.util.ArrayMap $r7;
        int $i1, i2;
        java.lang.Integer $r8;
        java.lang.Object $r9;
        boolean $z0, z1;

        r0 := @this: com.android.server.wm.InsetsStateController;

        r1 := @parameter0: com.android.server.wm.InsetsControlTarget;

        r2 := @parameter1: android.view.InsetsState;

        z1 = 0;

        i2 = 0;

     label1:
        if i2 >= 16 goto label5;

        r3 = virtualinvoke r2.<android.view.InsetsState: android.view.InsetsSource peekSource(int)>(i2);

        if r3 != null goto label2;

        goto label4;

     label2:
        $r7 = r0.<com.android.server.wm.InsetsStateController: android.util.ArrayMap mProviders>;

        $i1 = virtualinvoke r3.<android.view.InsetsSource: int getType()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r9 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r8);

        r4 = (com.android.server.wm.InsetsSourceProvider) $r9;

        if r4 != null goto label3;

        goto label4;

     label3:
        $z0 = virtualinvoke r4.<com.android.server.wm.InsetsSourceProvider: boolean onInsetsModified(com.android.server.wm.InsetsControlTarget,android.view.InsetsSource)>(r1, r3);

        z1 = z1 | $z0;

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        if z1 == 0 goto label6;

        virtualinvoke r0.<com.android.server.wm.InsetsStateController: void notifyInsetsChanged()>();

        $r5 = r0.<com.android.server.wm.InsetsStateController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r6 = virtualinvoke $r5.<com.android.server.wm.DisplayContent: com.android.server.wm.DisplayPolicy getDisplayPolicy()>();

        virtualinvoke $r6.<com.android.server.wm.DisplayPolicy: int updateSystemUiVisibilityLw()>();

     label6:
        return;
    }

    void onPostLayout()
    {
        com.android.server.wm.InsetsStateController r0;
        java.util.ArrayList r1;
        com.android.server.wm.DisplayContent $r2, $r6;
        android.view.InsetsState $r3, $r7, $r8, $r12, $r13;
        android.graphics.Rect $r4;
        android.util.ArrayMap $r5, $r14;
        int $i0, $i1, i2, i3;
        boolean $z0;
        java.util.function.Consumer $r9;
        java.lang.Object $r10, $r15;
        com.android.server.wm.WindowState $r11;
        com.android.server.wm.InsetsSourceProvider $r16;

        r0 := @this: com.android.server.wm.InsetsStateController;

        $r3 = r0.<com.android.server.wm.InsetsStateController: android.view.InsetsState mState>;

        $r2 = r0.<com.android.server.wm.InsetsStateController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r4 = virtualinvoke $r2.<com.android.server.wm.DisplayContent: android.graphics.Rect getBounds()>();

        virtualinvoke $r3.<android.view.InsetsState: void setDisplayFrame(android.graphics.Rect)>($r4);

        $r5 = r0.<com.android.server.wm.InsetsStateController: android.util.ArrayMap mProviders>;

        $i0 = virtualinvoke $r5.<android.util.ArrayMap: int size()>();

        i2 = $i0 - 1;

     label1:
        if i2 < 0 goto label2;

        $r14 = r0.<com.android.server.wm.InsetsStateController: android.util.ArrayMap mProviders>;

        $r15 = virtualinvoke $r14.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i2);

        $r16 = (com.android.server.wm.InsetsSourceProvider) $r15;

        virtualinvoke $r16.<com.android.server.wm.InsetsSourceProvider: void onPostLayout()>();

        i2 = i2 + -1;

        goto label1;

     label2:
        $r6 = r0.<com.android.server.wm.InsetsStateController: com.android.server.wm.DisplayContent mDisplayContent>;

        r1 = $r6.<com.android.server.wm.DisplayContent: java.util.ArrayList mWinInsetsChanged>;

        $r8 = r0.<com.android.server.wm.InsetsStateController: android.view.InsetsState mLastState>;

        $r7 = r0.<com.android.server.wm.InsetsStateController: android.view.InsetsState mState>;

        $z0 = virtualinvoke $r8.<android.view.InsetsState: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label3;

        $r13 = r0.<com.android.server.wm.InsetsStateController: android.view.InsetsState mLastState>;

        $r12 = r0.<com.android.server.wm.InsetsStateController: android.view.InsetsState mState>;

        virtualinvoke $r13.<android.view.InsetsState: void set(android.view.InsetsState,boolean)>($r12, 1);

        virtualinvoke r0.<com.android.server.wm.InsetsStateController: void notifyInsetsChanged()>();

        goto label5;

     label3:
        $i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i3 = $i1 - 1;

     label4:
        if i3 < 0 goto label5;

        $r9 = r0.<com.android.server.wm.InsetsStateController: java.util.function.Consumer mDispatchInsetsChanged>;

        $r10 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r11 = (com.android.server.wm.WindowState) $r10;

        interfaceinvoke $r9.<java.util.function.Consumer: void accept(java.lang.Object)>($r11);

        i3 = i3 + -1;

        goto label4;

     label5:
        virtualinvoke r1.<java.util.ArrayList: void clear()>();

        return;
    }

    com.android.server.wm.InsetsSourceProvider peekSourceProvider(int)
    {
        com.android.server.wm.InsetsStateController r0;
        int i0;
        android.util.ArrayMap $r1;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        com.android.server.wm.InsetsSourceProvider $r4;

        r0 := @this: com.android.server.wm.InsetsStateController;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.wm.InsetsStateController: android.util.ArrayMap mProviders>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (com.android.server.wm.InsetsSourceProvider) $r3;

        return $r4;
    }
}
