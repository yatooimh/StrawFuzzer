class com.android.server.wm.KeyguardController extends java.lang.Object
{
    private static final java.lang.String TAG;
    private boolean mAodShowing;
    private int mBeforeUnoccludeTransit;
    private boolean mDismissalRequested;
    private final android.util.SparseArray mDisplayStates;
    private boolean mKeyguardGoingAway;
    private boolean mKeyguardShowing;
    private com.android.server.wm.RootWindowContainer mRootWindowContainer;
    private final com.android.server.wm.ActivityTaskManagerService mService;
    private final com.android.server.wm.ActivityStackSupervisor mStackSupervisor;
    private com.android.server.wm.WindowManagerService mWindowManager;

    void <init>(com.android.server.wm.ActivityTaskManagerService, com.android.server.wm.ActivityStackSupervisor)
    {
        com.android.server.wm.KeyguardController r0;
        com.android.server.wm.ActivityTaskManagerService r1;
        com.android.server.wm.ActivityStackSupervisor r2;
        android.util.SparseArray $r3;

        r0 := @this: com.android.server.wm.KeyguardController;

        r1 := @parameter0: com.android.server.wm.ActivityTaskManagerService;

        r2 := @parameter1: com.android.server.wm.ActivityStackSupervisor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.wm.KeyguardController: android.util.SparseArray mDisplayStates> = $r3;

        r0.<com.android.server.wm.KeyguardController: com.android.server.wm.ActivityTaskManagerService mService> = r1;

        r0.<com.android.server.wm.KeyguardController: com.android.server.wm.ActivityStackSupervisor mStackSupervisor> = r2;

        return;
    }

    static void access$400(com.android.server.wm.KeyguardController, int)
    {
        com.android.server.wm.KeyguardController r0;
        int i0;

        r0 := @parameter0: com.android.server.wm.KeyguardController;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.wm.KeyguardController: void handleOccludedChanged(int)>(i0);

        return;
    }

    static com.android.server.wm.ActivityTaskManagerService access$500(com.android.server.wm.KeyguardController)
    {
        com.android.server.wm.KeyguardController r0;
        com.android.server.wm.ActivityTaskManagerService $r1;

        r0 := @parameter0: com.android.server.wm.KeyguardController;

        $r1 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.ActivityTaskManagerService mService>;

        return $r1;
    }

    static com.android.server.wm.WindowManagerService access$600(com.android.server.wm.KeyguardController)
    {
        com.android.server.wm.KeyguardController r0;
        com.android.server.wm.WindowManagerService $r1;

        r0 := @parameter0: com.android.server.wm.KeyguardController;

        $r1 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.WindowManagerService mWindowManager>;

        return $r1;
    }

    private int convertTransitFlags(int)
    {
        com.android.server.wm.KeyguardController r0;
        int i0, $i1, $i2, $i3, $i4;
        byte b5, b6, b7, b8;

        r0 := @this: com.android.server.wm.KeyguardController;

        i0 := @parameter0: int;

        b5 = 0;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        b5 = 0 | 1;

     label1:
        b6 = b5;

        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        b6 = b5 | 2;

     label2:
        b7 = b6;

        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        b7 = b6 | 4;

     label3:
        b8 = b7;

        $i4 = i0 & 8;

        if $i4 == 0 goto label4;

        b8 = b7 | 8;

     label4:
        return b8;
    }

    private void dismissDockedStackIfNeeded()
    {
        com.android.server.wm.KeyguardController r0;
        com.android.server.wm.TaskDisplayArea r1;
        boolean $z0, $z1, $z2;
        com.android.server.wm.RootWindowContainer $r2;

        r0 := @this: com.android.server.wm.KeyguardController;

        $z0 = r0.<com.android.server.wm.KeyguardController: boolean mKeyguardShowing>;

        if $z0 == 0 goto label2;

        $z1 = specialinvoke r0.<com.android.server.wm.KeyguardController: boolean isDisplayOccluded(int)>(0);

        if $z1 == 0 goto label2;

        $r2 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        r1 = virtualinvoke $r2.<com.android.server.wm.RootWindowContainer: com.android.server.wm.TaskDisplayArea getDefaultTaskDisplayArea()>();

        $z2 = virtualinvoke r1.<com.android.server.wm.TaskDisplayArea: boolean isSplitScreenModeActivated()>();

        if $z2 != 0 goto label1;

        return;

     label1:
        virtualinvoke r1.<com.android.server.wm.TaskDisplayArea: void onSplitScreenModeDismissed()>();

     label2:
        return;
    }

    private void dumpDisplayStates(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.wm.KeyguardController r0;
        java.io.PrintWriter r1;
        java.lang.String r2;
        android.util.SparseArray $r3, $r4;
        int $i0, i1;
        java.lang.Object $r5;
        com.android.server.wm.KeyguardController$KeyguardDisplayState $r6;

        r0 := @this: com.android.server.wm.KeyguardController;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        i1 = 0;

     label1:
        $r3 = r0.<com.android.server.wm.KeyguardController: android.util.SparseArray mDisplayStates>;

        $i0 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        if i1 >= $i0 goto label2;

        $r4 = r0.<com.android.server.wm.KeyguardController: android.util.SparseArray mDisplayStates>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r6 = (com.android.server.wm.KeyguardController$KeyguardDisplayState) $r5;

        virtualinvoke $r6.<com.android.server.wm.KeyguardController$KeyguardDisplayState: void dumpStatus(java.io.PrintWriter,java.lang.String)>(r1, r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void failCallback(com.android.internal.policy.IKeyguardDismissCallback)
    {
        com.android.server.wm.KeyguardController r0;
        android.os.RemoteException $r1;
        com.android.internal.policy.IKeyguardDismissCallback r2;

        r0 := @this: com.android.server.wm.KeyguardController;

        r2 := @parameter0: com.android.internal.policy.IKeyguardDismissCallback;

     label1:
        interfaceinvoke r2.<com.android.internal.policy.IKeyguardDismissCallback: void onDismissError()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityTaskManager", "Failed to call callback", $r1);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private com.android.server.wm.KeyguardController$KeyguardDisplayState getDisplay(int)
    {
        com.android.server.wm.KeyguardController r0;
        int i0;
        com.android.server.wm.KeyguardController$KeyguardDisplayState r1, $r4, r7;
        android.util.SparseArray $r2, $r6;
        java.lang.Object $r3;
        com.android.server.wm.ActivityTaskManagerService $r5;

        r0 := @this: com.android.server.wm.KeyguardController;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.wm.KeyguardController: android.util.SparseArray mDisplayStates>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.wm.KeyguardController$KeyguardDisplayState) $r3;

        r7 = r1;

        if r1 != null goto label1;

        $r4 = new com.android.server.wm.KeyguardController$KeyguardDisplayState;

        $r5 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.ActivityTaskManagerService mService>;

        specialinvoke $r4.<com.android.server.wm.KeyguardController$KeyguardDisplayState: void <init>(com.android.server.wm.ActivityTaskManagerService,int)>($r5, i0);

        r7 = $r4;

        $r6 = r0.<com.android.server.wm.KeyguardController: android.util.SparseArray mDisplayStates>;

        virtualinvoke $r6.<android.util.SparseArray: void append(int,java.lang.Object)>(i0, $r4);

     label1:
        return r7;
    }

    private void handleDismissKeyguard()
    {
        com.android.server.wm.KeyguardController r0;
        com.android.server.wm.DisplayContent r1, $r6;
        com.android.server.wm.ActivityTaskManagerService $r2;
        com.android.server.wm.WindowManagerService $r3, $r4, $r9;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z2;
        com.android.server.wm.RootWindowContainer $r5, $r8;
        com.android.server.wm.AppTransition $r7;

        r0 := @this: com.android.server.wm.KeyguardController;

        $r3 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.WindowManagerService mWindowManager>;

        $r2 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.ActivityTaskManagerService mService>;

        $i0 = virtualinvoke $r2.<com.android.server.wm.ActivityTaskManagerService: int getCurrentUserId()>();

        $z0 = virtualinvoke $r3.<com.android.server.wm.WindowManagerService: boolean isKeyguardSecure(int)>($i0);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r4 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r4.<com.android.server.wm.WindowManagerService: void dismissKeyguard(com.android.internal.policy.IKeyguardDismissCallback,java.lang.CharSequence)>(null, null);

        r0.<com.android.server.wm.KeyguardController: boolean mDismissalRequested> = 1;

        $r5 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        $r6 = virtualinvoke $r5.<com.android.server.wm.RootWindowContainer: com.android.server.wm.DisplayContent getDefaultDisplay()>();

        r1 = $r6.<com.android.server.wm.DisplayContent: com.android.server.wm.DisplayContent mDisplayContent>;

        $z1 = r0.<com.android.server.wm.KeyguardController: boolean mKeyguardShowing>;

        if $z1 == 0 goto label2;

        $z2 = virtualinvoke r0.<com.android.server.wm.KeyguardController: boolean canDismissKeyguard()>();

        if $z2 == 0 goto label2;

        $r7 = r1.<com.android.server.wm.DisplayContent: com.android.server.wm.AppTransition mAppTransition>;

        $i1 = virtualinvoke $r7.<com.android.server.wm.AppTransition: int getAppTransition()>();

        if $i1 != 23 goto label2;

        $i2 = r0.<com.android.server.wm.KeyguardController: int mBeforeUnoccludeTransit>;

        virtualinvoke r1.<com.android.server.wm.DisplayContent: void prepareAppTransition(int,boolean,int,boolean)>($i2, 0, 0, 1);

        $r8 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        virtualinvoke $r8.<com.android.server.wm.RootWindowContainer: void ensureActivitiesVisible(com.android.server.wm.ActivityRecord,int,boolean)>(null, 0, 0);

        $r9 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r9.<com.android.server.wm.WindowManagerService: void executeAppTransition()>();

     label2:
        return;
    }

    private void handleOccludedChanged(int)
    {
        com.android.server.wm.KeyguardController r0;
        int i0, $i1;
        com.android.server.wm.WindowManagerService $r2, $r9;
        com.android.server.policy.WindowManagerPolicy $r3;
        boolean $z0, $z1;
        com.android.server.wm.ActivityTaskManagerService $r4, $r10, $r12;
        com.android.server.wm.RootWindowContainer $r5, $r8;
        com.android.server.wm.DisplayContent $r6, $r7;
        java.lang.Throwable $r11;

        r0 := @this: com.android.server.wm.KeyguardController;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        specialinvoke r0.<com.android.server.wm.KeyguardController: void updateKeyguardSleepToken(int)>(i0);

        return;

     label1:
        $r2 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.WindowManagerService mWindowManager>;

        $r3 = $r2.<com.android.server.wm.WindowManagerService: com.android.server.policy.WindowManagerPolicy mPolicy>;

        $z0 = specialinvoke r0.<com.android.server.wm.KeyguardController: boolean isDisplayOccluded(int)>(0);

        interfaceinvoke $r3.<com.android.server.policy.WindowManagerPolicy: void onKeyguardOccludedChangedLw(boolean)>($z0);

        $z1 = virtualinvoke r0.<com.android.server.wm.KeyguardController: boolean isKeyguardLocked()>();

        if $z1 == 0 goto label5;

        $r4 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.ActivityTaskManagerService mService>;

        virtualinvoke $r4.<com.android.server.wm.ActivityTaskManagerService: void deferWindowLayout()>();

     label2:
        $r5 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        $r6 = virtualinvoke $r5.<com.android.server.wm.RootWindowContainer: com.android.server.wm.DisplayContent getDefaultDisplay()>();

        $r7 = $r6.<com.android.server.wm.DisplayContent: com.android.server.wm.DisplayContent mDisplayContent>;

        $i1 = specialinvoke r0.<com.android.server.wm.KeyguardController: int resolveOccludeTransit()>();

        virtualinvoke $r7.<com.android.server.wm.DisplayContent: void prepareAppTransition(int,boolean,int,boolean)>($i1, 0, 0, 1);

        specialinvoke r0.<com.android.server.wm.KeyguardController: void updateKeyguardSleepToken(int)>(0);

        $r8 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        virtualinvoke $r8.<com.android.server.wm.RootWindowContainer: void ensureActivitiesVisible(com.android.server.wm.ActivityRecord,int,boolean)>(null, 0, 0);

        $r9 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r9.<com.android.server.wm.WindowManagerService: void executeAppTransition()>();

     label3:
        $r10 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.ActivityTaskManagerService mService>;

        virtualinvoke $r10.<com.android.server.wm.ActivityTaskManagerService: void continueWindowLayout()>();

        goto label5;

     label4:
        $r11 := @caughtexception;

        $r12 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.ActivityTaskManagerService mService>;

        virtualinvoke $r12.<com.android.server.wm.ActivityTaskManagerService: void continueWindowLayout()>();

        throw $r11;

     label5:
        specialinvoke r0.<com.android.server.wm.KeyguardController: void dismissDockedStackIfNeeded()>();

        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private boolean isDisplayOccluded(int)
    {
        com.android.server.wm.KeyguardController r0;
        int i0;
        com.android.server.wm.KeyguardController$KeyguardDisplayState $r1;
        boolean $z0;

        r0 := @this: com.android.server.wm.KeyguardController;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<com.android.server.wm.KeyguardController: com.android.server.wm.KeyguardController$KeyguardDisplayState getDisplay(int)>(i0);

        $z0 = staticinvoke <com.android.server.wm.KeyguardController$KeyguardDisplayState: boolean access$200(com.android.server.wm.KeyguardController$KeyguardDisplayState)>($r1);

        return $z0;
    }

    private int resolveOccludeTransit()
    {
        com.android.server.wm.KeyguardController r0;
        com.android.server.wm.DisplayContent r1, $r3;
        com.android.server.wm.RootWindowContainer $r2;
        int $i0, $i1, $i2, $i3;
        com.android.server.wm.AppTransition $r4, $r5;
        boolean $z0, $z1;

        r0 := @this: com.android.server.wm.KeyguardController;

        $r2 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        $r3 = virtualinvoke $r2.<com.android.server.wm.RootWindowContainer: com.android.server.wm.DisplayContent getDefaultDisplay()>();

        r1 = $r3.<com.android.server.wm.DisplayContent: com.android.server.wm.DisplayContent mDisplayContent>;

        $i0 = r0.<com.android.server.wm.KeyguardController: int mBeforeUnoccludeTransit>;

        if $i0 == -1 goto label1;

        $r5 = r1.<com.android.server.wm.DisplayContent: com.android.server.wm.AppTransition mAppTransition>;

        $i2 = virtualinvoke $r5.<com.android.server.wm.AppTransition: int getAppTransition()>();

        if $i2 != 23 goto label1;

        $z0 = specialinvoke r0.<com.android.server.wm.KeyguardController: boolean isDisplayOccluded(int)>(0);

        if $z0 == 0 goto label1;

        $i3 = r0.<com.android.server.wm.KeyguardController: int mBeforeUnoccludeTransit>;

        return $i3;

     label1:
        $z1 = specialinvoke r0.<com.android.server.wm.KeyguardController: boolean isDisplayOccluded(int)>(0);

        if $z1 != 0 goto label2;

        $r4 = r1.<com.android.server.wm.DisplayContent: com.android.server.wm.AppTransition mAppTransition>;

        $i1 = virtualinvoke $r4.<com.android.server.wm.AppTransition: int getAppTransition()>();

        r0.<com.android.server.wm.KeyguardController: int mBeforeUnoccludeTransit> = $i1;

        return 23;

     label2:
        return 22;
    }

    private void setKeyguardGoingAway(boolean)
    {
        com.android.server.wm.KeyguardController r0;
        boolean z0;
        com.android.server.wm.WindowManagerService $r1;

        r0 := @this: com.android.server.wm.KeyguardController;

        z0 := @parameter0: boolean;

        r0.<com.android.server.wm.KeyguardController: boolean mKeyguardGoingAway> = z0;

        $r1 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r1.<com.android.server.wm.WindowManagerService: void setKeyguardGoingAway(boolean)>(z0);

        return;
    }

    private void updateKeyguardSleepToken()
    {
        com.android.server.wm.KeyguardController r0;
        com.android.server.wm.RootWindowContainer $r1, $r2;
        int $i0, $i1, i2;
        com.android.server.wm.WindowContainer $r3;
        com.android.server.wm.DisplayContent $r4;

        r0 := @this: com.android.server.wm.KeyguardController;

        $r1 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        $i0 = virtualinvoke $r1.<com.android.server.wm.RootWindowContainer: int getChildCount()>();

        i2 = $i0 - 1;

     label1:
        if i2 < 0 goto label2;

        $r2 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        $r3 = virtualinvoke $r2.<com.android.server.wm.RootWindowContainer: com.android.server.wm.WindowContainer getChildAt(int)>(i2);

        $r4 = (com.android.server.wm.DisplayContent) $r3;

        $i1 = $r4.<com.android.server.wm.DisplayContent: int mDisplayId>;

        specialinvoke r0.<com.android.server.wm.KeyguardController: void updateKeyguardSleepToken(int)>($i1);

        i2 = i2 + -1;

        goto label1;

     label2:
        return;
    }

    private void updateKeyguardSleepToken(int)
    {
        com.android.server.wm.KeyguardController r0;
        int i0;
        com.android.server.wm.KeyguardController$KeyguardDisplayState r1;
        boolean $z0, $z1;
        com.android.server.wm.ActivityTaskManagerInternal$SleepToken $r2, $r3;

        r0 := @this: com.android.server.wm.KeyguardController;

        i0 := @parameter0: int;

        r1 = specialinvoke r0.<com.android.server.wm.KeyguardController: com.android.server.wm.KeyguardController$KeyguardDisplayState getDisplay(int)>(i0);

        $z0 = virtualinvoke r0.<com.android.server.wm.KeyguardController: boolean isKeyguardUnoccludedOrAodShowing(int)>(i0);

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <com.android.server.wm.KeyguardController$KeyguardDisplayState: com.android.server.wm.ActivityTaskManagerInternal$SleepToken access$300(com.android.server.wm.KeyguardController$KeyguardDisplayState)>(r1);

        if $r3 != null goto label1;

        virtualinvoke r1.<com.android.server.wm.KeyguardController$KeyguardDisplayState: void acquiredSleepToken()>();

        goto label2;

     label1:
        $z1 = virtualinvoke r0.<com.android.server.wm.KeyguardController: boolean isKeyguardUnoccludedOrAodShowing(int)>(i0);

        if $z1 != 0 goto label2;

        $r2 = staticinvoke <com.android.server.wm.KeyguardController$KeyguardDisplayState: com.android.server.wm.ActivityTaskManagerInternal$SleepToken access$300(com.android.server.wm.KeyguardController$KeyguardDisplayState)>(r1);

        if $r2 == null goto label2;

        virtualinvoke r1.<com.android.server.wm.KeyguardController$KeyguardDisplayState: void releaseSleepToken()>();

     label2:
        return;
    }

    private void writeDisplayStatesToProto(android.util.proto.ProtoOutputStream, long)
    {
        com.android.server.wm.KeyguardController r0;
        android.util.proto.ProtoOutputStream r1;
        long l0;
        android.util.SparseArray $r2, $r3;
        int $i1, i2;
        java.lang.Object $r4;
        com.android.server.wm.KeyguardController$KeyguardDisplayState $r5;

        r0 := @this: com.android.server.wm.KeyguardController;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        l0 := @parameter1: long;

        i2 = 0;

     label1:
        $r2 = r0.<com.android.server.wm.KeyguardController: android.util.SparseArray mDisplayStates>;

        $i1 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        if i2 >= $i1 goto label2;

        $r3 = r0.<com.android.server.wm.KeyguardController: android.util.SparseArray mDisplayStates>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        $r5 = (com.android.server.wm.KeyguardController$KeyguardDisplayState) $r4;

        virtualinvoke $r5.<com.android.server.wm.KeyguardController$KeyguardDisplayState: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r1, l0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    boolean canDismissKeyguard()
    {
        com.android.server.wm.KeyguardController r0;
        com.android.server.wm.WindowManagerService $r1, $r4;
        com.android.server.policy.WindowManagerPolicy $r2;
        boolean $z0, $z1, z2;
        com.android.server.wm.ActivityTaskManagerService $r3;
        int $i0;

        r0 := @this: com.android.server.wm.KeyguardController;

        $r1 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.WindowManagerService mWindowManager>;

        $r2 = $r1.<com.android.server.wm.WindowManagerService: com.android.server.policy.WindowManagerPolicy mPolicy>;

        $z0 = interfaceinvoke $r2.<com.android.server.policy.WindowManagerPolicy: boolean isKeyguardTrustedLw()>();

        if $z0 != 0 goto label2;

        $r4 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.WindowManagerService mWindowManager>;

        $r3 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.ActivityTaskManagerService mService>;

        $i0 = virtualinvoke $r3.<com.android.server.wm.ActivityTaskManagerService: int getCurrentUserId()>();

        $z1 = virtualinvoke $r4.<com.android.server.wm.WindowManagerService: boolean isKeyguardSecure(int)>($i0);

        if $z1 != 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    boolean canShowActivityWhileKeyguardShowing(com.android.server.wm.ActivityRecord, boolean)
    {
        com.android.server.wm.KeyguardController r0;
        com.android.server.wm.ActivityRecord r1, $r3;
        boolean $z0, $z1, $z2, $z3, z4, z5;
        int $i0;
        com.android.server.wm.KeyguardController$KeyguardDisplayState $r2;

        r0 := @this: com.android.server.wm.KeyguardController;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        z4 := @parameter1: boolean;

        if z4 == 0 goto label2;

        $z0 = virtualinvoke r0.<com.android.server.wm.KeyguardController: boolean canDismissKeyguard()>();

        if $z0 == 0 goto label2;

        $z1 = r0.<com.android.server.wm.KeyguardController: boolean mAodShowing>;

        if $z1 != 0 goto label2;

        $z2 = r0.<com.android.server.wm.KeyguardController: boolean mDismissalRequested>;

        if $z2 != 0 goto label1;

        $z3 = virtualinvoke r1.<com.android.server.wm.ActivityRecord: boolean canShowWhenLocked()>();

        if $z3 == 0 goto label2;

        $i0 = virtualinvoke r1.<com.android.server.wm.ActivityRecord: int getDisplayId()>();

        $r2 = specialinvoke r0.<com.android.server.wm.KeyguardController: com.android.server.wm.KeyguardController$KeyguardDisplayState getDisplay(int)>($i0);

        $r3 = staticinvoke <com.android.server.wm.KeyguardController$KeyguardDisplayState: com.android.server.wm.ActivityRecord access$000(com.android.server.wm.KeyguardController$KeyguardDisplayState)>($r2);

        if $r3 == r1 goto label2;

     label1:
        z5 = 1;

        goto label3;

     label2:
        z5 = 0;

     label3:
        return z5;
    }

    boolean canShowWhileOccluded(boolean, boolean)
    {
        com.android.server.wm.KeyguardController r0;
        boolean z0, $z1, z2, z3;
        com.android.server.wm.ActivityTaskManagerService $r1;
        com.android.server.wm.WindowManagerService $r2;
        int $i0;

        r0 := @this: com.android.server.wm.KeyguardController;

        z2 := @parameter0: boolean;

        z0 := @parameter1: boolean;

        if z0 != 0 goto label2;

        if z2 == 0 goto label1;

        $r2 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.WindowManagerService mWindowManager>;

        $r1 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.ActivityTaskManagerService mService>;

        $i0 = virtualinvoke $r1.<com.android.server.wm.ActivityTaskManagerService: int getCurrentUserId()>();

        $z1 = virtualinvoke $r2.<com.android.server.wm.WindowManagerService: boolean isKeyguardSecure(int)>($i0);

        if $z1 != 0 goto label1;

        goto label2;

     label1:
        z3 = 0;

        goto label3;

     label2:
        z3 = 1;

     label3:
        return z3;
    }

    void dismissKeyguard(android.os.IBinder, com.android.internal.policy.IKeyguardDismissCallback, java.lang.CharSequence)
    {
        com.android.server.wm.KeyguardController r0;
        com.android.internal.policy.IKeyguardDismissCallback r1;
        java.lang.CharSequence r2;
        com.android.server.wm.ActivityRecord r3;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r4;
        java.lang.String $r7;
        com.android.server.wm.ActivityStackSupervisor $r8;
        android.os.IBinder r9;
        com.android.server.wm.WindowManagerService $r11;

        r0 := @this: com.android.server.wm.KeyguardController;

        r9 := @parameter0: android.os.IBinder;

        r1 := @parameter1: com.android.internal.policy.IKeyguardDismissCallback;

        r2 := @parameter2: java.lang.CharSequence;

        r3 = staticinvoke <com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityRecord forTokenLocked(android.os.IBinder)>(r9);

        if r3 == null goto label3;

        $z0 = r3.<com.android.server.wm.ActivityRecord: boolean visibleIgnoringKeyguard>;

        if $z0 != 0 goto label1;

        goto label3;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity requesting to dismiss Keyguard: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityTaskManager", $r7);

        $z1 = virtualinvoke r3.<com.android.server.wm.ActivityRecord: boolean getTurnScreenOnFlag()>();

        if $z1 == 0 goto label2;

        $z2 = virtualinvoke r3.<com.android.server.wm.ActivityRecord: boolean isTopRunningActivity()>();

        if $z2 == 0 goto label2;

        $r8 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r8.<com.android.server.wm.ActivityStackSupervisor: void wakeUp(java.lang.String)>("dismissKeyguard");

     label2:
        $r11 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r11.<com.android.server.wm.WindowManagerService: void dismissKeyguard(com.android.internal.policy.IKeyguardDismissCallback,java.lang.CharSequence)>(r1, r2);

        return;

     label3:
        specialinvoke r0.<com.android.server.wm.KeyguardController: void failCallback(com.android.internal.policy.IKeyguardDismissCallback)>(r1);

        return;
    }

    void dump(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.wm.KeyguardController r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r6, $r11, $r16, $r21, $r26;
        java.lang.StringBuilder $r3, $r7, $r12, $r17, $r22;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.android.server.wm.KeyguardController;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("KeyguardController:");

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r6);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mKeyguardShowing=");

        $z0 = r0.<com.android.server.wm.KeyguardController: boolean mKeyguardShowing>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r11);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mAodShowing=");

        $z1 = r0.<com.android.server.wm.KeyguardController: boolean mAodShowing>;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r16);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mKeyguardGoingAway=");

        $z2 = r0.<com.android.server.wm.KeyguardController: boolean mKeyguardGoingAway>;

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r21);

        specialinvoke r0.<com.android.server.wm.KeyguardController: void dumpDisplayStates(java.io.PrintWriter,java.lang.String)>(r1, r2);

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mDismissalRequested=");

        $z3 = r0.<com.android.server.wm.KeyguardController: boolean mDismissalRequested>;

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r26);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        return;
    }

    void dumpDebug(android.util.proto.ProtoOutputStream, long)
    {
        com.android.server.wm.KeyguardController r0;
        android.util.proto.ProtoOutputStream r1;
        boolean $z0, $z1;
        long l0, l1;

        r0 := @this: com.android.server.wm.KeyguardController;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        l0 := @parameter1: long;

        l1 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(l0);

        $z0 = r0.<com.android.server.wm.KeyguardController: boolean mAodShowing>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366147L, $z0);

        $z1 = r0.<com.android.server.wm.KeyguardController: boolean mKeyguardShowing>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366145L, $z1);

        specialinvoke r0.<com.android.server.wm.KeyguardController: void writeDisplayStatesToProto(android.util.proto.ProtoOutputStream,long)>(r1, 2246267895810L);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l1);

        return;
    }

    boolean isKeyguardGoingAway()
    {
        com.android.server.wm.KeyguardController r0;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.server.wm.KeyguardController;

        $z0 = r0.<com.android.server.wm.KeyguardController: boolean mKeyguardGoingAway>;

        if $z0 == 0 goto label1;

        $z1 = r0.<com.android.server.wm.KeyguardController: boolean mKeyguardShowing>;

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    boolean isKeyguardLocked()
    {
        com.android.server.wm.KeyguardController r0;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.server.wm.KeyguardController;

        $z0 = r0.<com.android.server.wm.KeyguardController: boolean mKeyguardShowing>;

        if $z0 == 0 goto label1;

        $z1 = r0.<com.android.server.wm.KeyguardController: boolean mKeyguardGoingAway>;

        if $z1 != 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    boolean isKeyguardOrAodShowing(int)
    {
        com.android.server.wm.KeyguardController r0;
        int i0;
        boolean $z0, $z1, $z2, $z3, z4;

        r0 := @this: com.android.server.wm.KeyguardController;

        i0 := @parameter0: int;

        $z0 = r0.<com.android.server.wm.KeyguardController: boolean mKeyguardShowing>;

        if $z0 != 0 goto label1;

        $z3 = r0.<com.android.server.wm.KeyguardController: boolean mAodShowing>;

        if $z3 == 0 goto label2;

     label1:
        $z1 = r0.<com.android.server.wm.KeyguardController: boolean mKeyguardGoingAway>;

        if $z1 != 0 goto label2;

        $z2 = specialinvoke r0.<com.android.server.wm.KeyguardController: boolean isDisplayOccluded(int)>(i0);

        if $z2 != 0 goto label2;

        z4 = 1;

        goto label3;

     label2:
        z4 = 0;

     label3:
        return z4;
    }

    boolean isKeyguardShowing(int)
    {
        com.android.server.wm.KeyguardController r0;
        int i0;
        boolean $z0, $z1, $z2, z3;

        r0 := @this: com.android.server.wm.KeyguardController;

        i0 := @parameter0: int;

        $z0 = r0.<com.android.server.wm.KeyguardController: boolean mKeyguardShowing>;

        if $z0 == 0 goto label1;

        $z1 = r0.<com.android.server.wm.KeyguardController: boolean mKeyguardGoingAway>;

        if $z1 != 0 goto label1;

        $z2 = specialinvoke r0.<com.android.server.wm.KeyguardController: boolean isDisplayOccluded(int)>(i0);

        if $z2 != 0 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        return z3;
    }

    boolean isKeyguardUnoccludedOrAodShowing(int)
    {
        com.android.server.wm.KeyguardController r0;
        int i0;
        boolean $z0, $z1;

        r0 := @this: com.android.server.wm.KeyguardController;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        $z1 = r0.<com.android.server.wm.KeyguardController: boolean mAodShowing>;

        if $z1 == 0 goto label1;

        return 1;

     label1:
        $z0 = virtualinvoke r0.<com.android.server.wm.KeyguardController: boolean isKeyguardOrAodShowing(int)>(i0);

        return $z0;
    }

    void keyguardGoingAway(int)
    {
        com.android.server.wm.KeyguardController r0;
        int i0, $i1;
        boolean $z0, $z1;
        com.android.server.wm.ActivityTaskManagerService $r2, $r10, $r12;
        com.android.server.wm.RootWindowContainer $r3, $r6, $r7, $r8;
        com.android.server.wm.DisplayContent $r4, $r5;
        com.android.server.wm.WindowManagerService $r9;
        java.lang.Throwable $r11;
        byte b2;

        r0 := @this: com.android.server.wm.KeyguardController;

        i0 := @parameter0: int;

        $z0 = r0.<com.android.server.wm.KeyguardController: boolean mKeyguardShowing>;

        if $z0 != 0 goto label1;

        return;

     label1:
        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(32L, "keyguardGoingAway");

        $r2 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.ActivityTaskManagerService mService>;

        virtualinvoke $r2.<com.android.server.wm.ActivityTaskManagerService: void deferWindowLayout()>();

     label2:
        specialinvoke r0.<com.android.server.wm.KeyguardController: void setKeyguardGoingAway(boolean)>(1);

     label3:
        $z1 = r0.<com.android.server.wm.KeyguardController: boolean mAodShowing>;

        if $z1 == 0 goto label5;

     label4:
        b2 = 1;

        goto label6;

     label5:
        b2 = 0;

     label6:
        staticinvoke <com.android.server.wm.EventLogTags: void writeWmSetKeyguardShown(int,int,int,java.lang.String)>(1, b2, 1, "keyguardGoingAway");

        $r3 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        $r4 = virtualinvoke $r3.<com.android.server.wm.RootWindowContainer: com.android.server.wm.DisplayContent getDefaultDisplay()>();

        $r5 = $r4.<com.android.server.wm.DisplayContent: com.android.server.wm.DisplayContent mDisplayContent>;

        $i1 = specialinvoke r0.<com.android.server.wm.KeyguardController: int convertTransitFlags(int)>(i0);

        virtualinvoke $r5.<com.android.server.wm.DisplayContent: void prepareAppTransition(int,boolean,int,boolean)>(20, 0, $i1, 0);

        specialinvoke r0.<com.android.server.wm.KeyguardController: void updateKeyguardSleepToken()>();

        $r6 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        virtualinvoke $r6.<com.android.server.wm.RootWindowContainer: boolean resumeFocusedStacksTopActivities()>();

        $r7 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        virtualinvoke $r7.<com.android.server.wm.RootWindowContainer: void ensureActivitiesVisible(com.android.server.wm.ActivityRecord,int,boolean)>(null, 0, 0);

        $r8 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        virtualinvoke $r8.<com.android.server.wm.RootWindowContainer: void addStartingWindowsForVisibleActivities()>();

        $r9 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r9.<com.android.server.wm.WindowManagerService: void executeAppTransition()>();

     label7:
        $r10 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.ActivityTaskManagerService mService>;

        virtualinvoke $r10.<com.android.server.wm.ActivityTaskManagerService: void continueWindowLayout()>();

        staticinvoke <android.os.Trace: void traceEnd(long)>(32L);

        return;

     label8:
        $r11 := @caughtexception;

        $r12 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.ActivityTaskManagerService mService>;

        virtualinvoke $r12.<com.android.server.wm.ActivityTaskManagerService: void continueWindowLayout()>();

        staticinvoke <android.os.Trace: void traceEnd(long)>(32L);

        throw $r11;

        catch java.lang.Throwable from label2 to label3 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    void onDisplayRemoved(int)
    {
        com.android.server.wm.KeyguardController r0;
        int i0;
        com.android.server.wm.KeyguardController$KeyguardDisplayState r1;
        android.util.SparseArray $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: com.android.server.wm.KeyguardController;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.wm.KeyguardController: android.util.SparseArray mDisplayStates>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.wm.KeyguardController$KeyguardDisplayState) $r3;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.server.wm.KeyguardController$KeyguardDisplayState: void onRemoved()>();

        $r4 = r0.<com.android.server.wm.KeyguardController: android.util.SparseArray mDisplayStates>;

        virtualinvoke $r4.<android.util.SparseArray: void remove(int)>(i0);

     label1:
        return;
    }

    void setKeyguardShown(boolean, boolean)
    {
        com.android.server.wm.KeyguardController r0;
        boolean z0, z1, $z3, $z4, $z5, z6, z7, z8, $z9;
        com.android.server.wm.WindowManagerService $r1, $r2;
        com.android.server.wm.RootWindowContainer $r3;
        int i0, i1, i2;

        r0 := @this: com.android.server.wm.KeyguardController;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z6 = r0.<com.android.server.wm.KeyguardController: boolean mAodShowing>;

        if z1 == z6 goto label1;

        z7 = 1;

        goto label2;

     label1:
        z7 = 0;

     label2:
        z8 = 1;

        $z3 = r0.<com.android.server.wm.KeyguardController: boolean mKeyguardShowing>;

        if z0 != $z3 goto label4;

        $z5 = r0.<com.android.server.wm.KeyguardController: boolean mKeyguardGoingAway>;

        if $z5 == 0 goto label3;

        if z0 == 0 goto label3;

        if z7 != 0 goto label3;

        z8 = 1;

        goto label4;

     label3:
        z8 = 0;

     label4:
        if z8 != 0 goto label5;

        if z7 != 0 goto label5;

        return;

     label5:
        $z4 = r0.<com.android.server.wm.KeyguardController: boolean mKeyguardGoingAway>;

        i0 = (int) z0;

        i1 = (int) z1;

        i2 = (int) $z4;

        staticinvoke <com.android.server.wm.EventLogTags: void writeWmSetKeyguardShown(int,int,int,java.lang.String)>(i0, i1, i2, "setKeyguardShown");

        r0.<com.android.server.wm.KeyguardController: boolean mKeyguardShowing> = z0;

        r0.<com.android.server.wm.KeyguardController: boolean mAodShowing> = z1;

        $r1 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r1.<com.android.server.wm.WindowManagerService: void setAodShowing(boolean)>(z1);

        if z8 == 0 goto label6;

        specialinvoke r0.<com.android.server.wm.KeyguardController: void dismissDockedStackIfNeeded()>();

        specialinvoke r0.<com.android.server.wm.KeyguardController: void setKeyguardGoingAway(boolean)>(0);

        if z0 == 0 goto label6;

        r0.<com.android.server.wm.KeyguardController: boolean mDismissalRequested> = 0;

     label6:
        $r2 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.WindowManagerService mWindowManager>;

        $z9 = virtualinvoke r0.<com.android.server.wm.KeyguardController: boolean isKeyguardOrAodShowing(int)>(0);

        virtualinvoke $r2.<com.android.server.wm.WindowManagerService: void setKeyguardOrAodShowingOnDefaultDisplay(boolean)>($z9);

        specialinvoke r0.<com.android.server.wm.KeyguardController: void updateKeyguardSleepToken()>();

        $r3 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        virtualinvoke $r3.<com.android.server.wm.RootWindowContainer: void ensureActivitiesVisible(com.android.server.wm.ActivityRecord,int,boolean)>(null, 0, 0);

        return;
    }

    void setWindowManager(com.android.server.wm.WindowManagerService)
    {
        com.android.server.wm.KeyguardController r0;
        com.android.server.wm.WindowManagerService r1;
        com.android.server.wm.ActivityTaskManagerService $r2;
        com.android.server.wm.RootWindowContainer $r3;

        r0 := @this: com.android.server.wm.KeyguardController;

        r1 := @parameter0: com.android.server.wm.WindowManagerService;

        r0.<com.android.server.wm.KeyguardController: com.android.server.wm.WindowManagerService mWindowManager> = r1;

        $r2 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.ActivityTaskManagerService mService>;

        $r3 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        r0.<com.android.server.wm.KeyguardController: com.android.server.wm.RootWindowContainer mRootWindowContainer> = $r3;

        return;
    }

    void visibilitiesUpdated()
    {
        com.android.server.wm.KeyguardController r0;
        com.android.server.wm.DisplayContent r1;
        com.android.server.wm.KeyguardController$KeyguardDisplayState r2;
        com.android.server.wm.RootWindowContainer $r3, $r4;
        int $i0, $i1, i2;
        com.android.server.wm.WindowContainer $r5;
        boolean $z0, z1;

        r0 := @this: com.android.server.wm.KeyguardController;

        z1 = 0;

        $r3 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        $i0 = virtualinvoke $r3.<com.android.server.wm.RootWindowContainer: int getChildCount()>();

        i2 = $i0 - 1;

     label1:
        if i2 < 0 goto label2;

        $r4 = r0.<com.android.server.wm.KeyguardController: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        $r5 = virtualinvoke $r4.<com.android.server.wm.RootWindowContainer: com.android.server.wm.WindowContainer getChildAt(int)>(i2);

        r1 = (com.android.server.wm.DisplayContent) $r5;

        $i1 = r1.<com.android.server.wm.DisplayContent: int mDisplayId>;

        r2 = specialinvoke r0.<com.android.server.wm.KeyguardController: com.android.server.wm.KeyguardController$KeyguardDisplayState getDisplay(int)>($i1);

        virtualinvoke r2.<com.android.server.wm.KeyguardController$KeyguardDisplayState: void visibilitiesUpdated(com.android.server.wm.KeyguardController,com.android.server.wm.DisplayContent)>(r0, r1);

        $z0 = staticinvoke <com.android.server.wm.KeyguardController$KeyguardDisplayState: boolean access$100(com.android.server.wm.KeyguardController$KeyguardDisplayState)>(r2);

        z1 = z1 | $z0;

        i2 = i2 + -1;

        goto label1;

     label2:
        if z1 == 0 goto label3;

        specialinvoke r0.<com.android.server.wm.KeyguardController: void handleDismissKeyguard()>();

     label3:
        return;
    }

    public static void <clinit>()
    {
        <com.android.server.wm.KeyguardController: java.lang.String TAG> = "ActivityTaskManager";

        return;
    }
}
