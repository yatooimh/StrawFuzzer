class com.android.server.wm.KeyguardDisableHandler extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final com.android.server.utils.UserTokenWatcher mAppTokenWatcher;
    private final com.android.server.utils.UserTokenWatcher$Callback mCallback;
    private int mCurrentUser;
    private com.android.server.wm.KeyguardDisableHandler$Injector mInjector;
    private final com.android.server.utils.UserTokenWatcher mSystemTokenWatcher;

    void <init>(com.android.server.wm.KeyguardDisableHandler$Injector, android.os.Handler)
    {
        com.android.server.wm.KeyguardDisableHandler r0;
        com.android.server.wm.KeyguardDisableHandler$Injector r1;
        android.os.Handler r2;
        com.android.server.wm.KeyguardDisableHandler$1 $r4;
        com.android.server.utils.UserTokenWatcher $r5, $r6;
        com.android.server.utils.UserTokenWatcher$Callback $r7;

        r0 := @this: com.android.server.wm.KeyguardDisableHandler;

        r1 := @parameter0: com.android.server.wm.KeyguardDisableHandler$Injector;

        r2 := @parameter1: android.os.Handler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.wm.KeyguardDisableHandler: int mCurrentUser> = 0;

        $r4 = new com.android.server.wm.KeyguardDisableHandler$1;

        specialinvoke $r4.<com.android.server.wm.KeyguardDisableHandler$1: void <init>(com.android.server.wm.KeyguardDisableHandler)>(r0);

        r0.<com.android.server.wm.KeyguardDisableHandler: com.android.server.utils.UserTokenWatcher$Callback mCallback> = $r4;

        r0.<com.android.server.wm.KeyguardDisableHandler: com.android.server.wm.KeyguardDisableHandler$Injector mInjector> = r1;

        $r5 = new com.android.server.utils.UserTokenWatcher;

        specialinvoke $r5.<com.android.server.utils.UserTokenWatcher: void <init>(com.android.server.utils.UserTokenWatcher$Callback,android.os.Handler,java.lang.String)>($r4, r2, "WindowManager");

        r0.<com.android.server.wm.KeyguardDisableHandler: com.android.server.utils.UserTokenWatcher mAppTokenWatcher> = $r5;

        $r6 = new com.android.server.utils.UserTokenWatcher;

        $r7 = r0.<com.android.server.wm.KeyguardDisableHandler: com.android.server.utils.UserTokenWatcher$Callback mCallback>;

        specialinvoke $r6.<com.android.server.utils.UserTokenWatcher: void <init>(com.android.server.utils.UserTokenWatcher$Callback,android.os.Handler,java.lang.String)>($r7, r2, "WindowManager");

        r0.<com.android.server.wm.KeyguardDisableHandler: com.android.server.utils.UserTokenWatcher mSystemTokenWatcher> = $r6;

        return;
    }

    static com.android.server.wm.KeyguardDisableHandler create(android.content.Context, com.android.server.policy.WindowManagerPolicy, android.os.Handler)
    {
        android.content.Context r0;
        com.android.server.policy.WindowManagerPolicy r1;
        android.os.Handler r2;
        com.android.server.wm.KeyguardDisableHandler $r3;
        com.android.server.wm.KeyguardDisableHandler$2 $r4;
        java.lang.Object $r5;
        android.os.UserManagerInternal $r6;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.server.policy.WindowManagerPolicy;

        r2 := @parameter2: android.os.Handler;

        $r3 = new com.android.server.wm.KeyguardDisableHandler;

        $r4 = new com.android.server.wm.KeyguardDisableHandler$2;

        $r5 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/os/UserManagerInternal;");

        $r6 = (android.os.UserManagerInternal) $r5;

        specialinvoke $r4.<com.android.server.wm.KeyguardDisableHandler$2: void <init>(com.android.server.policy.WindowManagerPolicy,android.os.UserManagerInternal)>(r1, $r6);

        specialinvoke $r3.<com.android.server.wm.KeyguardDisableHandler: void <init>(com.android.server.wm.KeyguardDisableHandler$Injector,android.os.Handler)>($r4, r2);

        return $r3;
    }

    private boolean shouldKeyguardBeEnabled(int)
    {
        com.android.server.wm.KeyguardDisableHandler r0;
        boolean z0, z1, $z2, $z3, $z4, z5, z6, z7;
        int $i0, $i1, i2;
        com.android.server.wm.KeyguardDisableHandler$Injector $r1, $r2;
        com.android.server.utils.UserTokenWatcher $r3, $r4;

        r0 := @this: com.android.server.wm.KeyguardDisableHandler;

        i2 := @parameter0: int;

        $r1 = r0.<com.android.server.wm.KeyguardDisableHandler: com.android.server.wm.KeyguardDisableHandler$Injector mInjector>;

        $i0 = r0.<com.android.server.wm.KeyguardDisableHandler: int mCurrentUser>;

        z0 = interfaceinvoke $r1.<com.android.server.wm.KeyguardDisableHandler$Injector: boolean dpmRequiresPassword(int)>($i0);

        $r2 = r0.<com.android.server.wm.KeyguardDisableHandler: com.android.server.wm.KeyguardDisableHandler$Injector mInjector>;

        $i1 = r0.<com.android.server.wm.KeyguardDisableHandler: int mCurrentUser>;

        z1 = interfaceinvoke $r2.<com.android.server.wm.KeyguardDisableHandler$Injector: boolean isKeyguardSecure(int)>($i1);

        z5 = 0;

        if z0 != 0 goto label1;

        if z1 != 0 goto label1;

        z6 = 1;

        goto label2;

     label1:
        z6 = 0;

     label2:
        if z6 == 0 goto label3;

        $r4 = r0.<com.android.server.wm.KeyguardDisableHandler: com.android.server.utils.UserTokenWatcher mAppTokenWatcher>;

        $z4 = virtualinvoke $r4.<com.android.server.utils.UserTokenWatcher: boolean isAcquired(int)>(i2);

        if $z4 != 0 goto label4;

     label3:
        $z2 = z0 ^ 1;

        if $z2 == 0 goto label5;

        $r3 = r0.<com.android.server.wm.KeyguardDisableHandler: com.android.server.utils.UserTokenWatcher mSystemTokenWatcher>;

        $z3 = virtualinvoke $r3.<com.android.server.utils.UserTokenWatcher: boolean isAcquired(int)>(i2);

        if $z3 == 0 goto label5;

     label4:
        z7 = 1;

        goto label6;

     label5:
        z7 = 0;

     label6:
        if z7 != 0 goto label7;

        z5 = 1;

     label7:
        return z5;
    }

    private void updateKeyguardEnabledLocked(int)
    {
        com.android.server.wm.KeyguardDisableHandler r0;
        int i0, $i1, $i2;
        com.android.server.wm.KeyguardDisableHandler$Injector $r1;
        boolean $z0;

        r0 := @this: com.android.server.wm.KeyguardDisableHandler;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.server.wm.KeyguardDisableHandler: int mCurrentUser>;

        if $i1 == i0 goto label1;

        if i0 != -1 goto label2;

     label1:
        $r1 = r0.<com.android.server.wm.KeyguardDisableHandler: com.android.server.wm.KeyguardDisableHandler$Injector mInjector>;

        $i2 = r0.<com.android.server.wm.KeyguardDisableHandler: int mCurrentUser>;

        $z0 = specialinvoke r0.<com.android.server.wm.KeyguardDisableHandler: boolean shouldKeyguardBeEnabled(int)>($i2);

        interfaceinvoke $r1.<com.android.server.wm.KeyguardDisableHandler$Injector: void enableKeyguard(boolean)>($z0);

     label2:
        return;
    }

    private com.android.server.utils.UserTokenWatcher watcherForCallingUid(android.os.IBinder, int)
    {
        com.android.server.wm.KeyguardDisableHandler r0;
        android.os.IBinder r1;
        int i0;
        boolean $z0, $z1;
        java.lang.UnsupportedOperationException $r2;
        com.android.server.utils.UserTokenWatcher $r3, $r4;

        r0 := @this: com.android.server.wm.KeyguardDisableHandler;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        $z0 = staticinvoke <android.os.Process: boolean isApplicationUid(int)>(i0);

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.server.wm.KeyguardDisableHandler: com.android.server.utils.UserTokenWatcher mAppTokenWatcher>;

        return $r4;

     label1:
        if i0 != 1000 goto label2;

        $z1 = r1 instanceof com.android.server.wm.LockTaskController$LockTaskToken;

        if $z1 == 0 goto label2;

        $r3 = r0.<com.android.server.wm.KeyguardDisableHandler: com.android.server.utils.UserTokenWatcher mSystemTokenWatcher>;

        return $r3;

     label2:
        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Only apps can use the KeyguardLock API");

        throw $r2;
    }

    void disableKeyguard(android.os.IBinder, java.lang.String, int, int)
    {
        com.android.server.wm.KeyguardDisableHandler r0;
        android.os.IBinder r1;
        java.lang.String r2;
        int i0, i1, $i2;
        com.android.server.utils.UserTokenWatcher $r3;
        com.android.server.wm.KeyguardDisableHandler$Injector $r4;

        r0 := @this: com.android.server.wm.KeyguardDisableHandler;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r3 = specialinvoke r0.<com.android.server.wm.KeyguardDisableHandler: com.android.server.utils.UserTokenWatcher watcherForCallingUid(android.os.IBinder,int)>(r1, i0);

        $r4 = r0.<com.android.server.wm.KeyguardDisableHandler: com.android.server.wm.KeyguardDisableHandler$Injector mInjector>;

        $i2 = interfaceinvoke $r4.<com.android.server.wm.KeyguardDisableHandler$Injector: int getProfileParentId(int)>(i1);

        virtualinvoke $r3.<com.android.server.utils.UserTokenWatcher: void acquire(android.os.IBinder,java.lang.String,int)>(r1, r2, $i2);

        return;
    }

    void reenableKeyguard(android.os.IBinder, int, int)
    {
        com.android.server.wm.KeyguardDisableHandler r0;
        android.os.IBinder r1;
        int i0, i1, $i2;
        com.android.server.utils.UserTokenWatcher $r2;
        com.android.server.wm.KeyguardDisableHandler$Injector $r3;

        r0 := @this: com.android.server.wm.KeyguardDisableHandler;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = specialinvoke r0.<com.android.server.wm.KeyguardDisableHandler: com.android.server.utils.UserTokenWatcher watcherForCallingUid(android.os.IBinder,int)>(r1, i0);

        $r3 = r0.<com.android.server.wm.KeyguardDisableHandler: com.android.server.wm.KeyguardDisableHandler$Injector mInjector>;

        $i2 = interfaceinvoke $r3.<com.android.server.wm.KeyguardDisableHandler$Injector: int getProfileParentId(int)>(i1);

        virtualinvoke $r2.<com.android.server.utils.UserTokenWatcher: void release(android.os.IBinder,int)>(r1, $i2);

        return;
    }

    public void setCurrentUser(int)
    {
        com.android.server.wm.KeyguardDisableHandler r0;
        int i0;
        java.lang.Throwable $r2;

        r0 := @this: com.android.server.wm.KeyguardDisableHandler;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        r0.<com.android.server.wm.KeyguardDisableHandler: int mCurrentUser> = i0;

        specialinvoke r0.<com.android.server.wm.KeyguardDisableHandler: void updateKeyguardEnabledLocked(int)>(-1);

        exitmonitor r0;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void updateKeyguardEnabled(int)
    {
        com.android.server.wm.KeyguardDisableHandler r0;
        int i0;
        java.lang.Throwable $r2;

        r0 := @this: com.android.server.wm.KeyguardDisableHandler;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        specialinvoke r0.<com.android.server.wm.KeyguardDisableHandler: void updateKeyguardEnabledLocked(int)>(i0);

        exitmonitor r0;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static void <clinit>()
    {
        <com.android.server.wm.KeyguardDisableHandler: java.lang.String TAG> = "WindowManager";

        return;
    }
}
