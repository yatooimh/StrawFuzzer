public class com.android.server.wm.Letterbox extends java.lang.Object
{
    private static final android.graphics.Rect EMPTY_RECT;
    private static final android.graphics.Point ZERO_POINT;
    private final com.android.server.wm.Letterbox$LetterboxSurface mBottom;
    private final android.graphics.Rect mInner;
    private final com.android.server.wm.Letterbox$LetterboxSurface mLeft;
    private final android.graphics.Rect mOuter;
    private final com.android.server.wm.Letterbox$LetterboxSurface mRight;
    private final java.util.function.Supplier mSurfaceControlFactory;
    private final com.android.server.wm.Letterbox$LetterboxSurface[] mSurfaces;
    private final com.android.server.wm.Letterbox$LetterboxSurface mTop;
    private final java.util.function.Supplier mTransactionFactory;

    static void <clinit>()
    {
        android.graphics.Rect $r0;
        android.graphics.Point $r1;

        $r0 = new android.graphics.Rect;

        specialinvoke $r0.<android.graphics.Rect: void <init>()>();

        <com.android.server.wm.Letterbox: android.graphics.Rect EMPTY_RECT> = $r0;

        $r1 = new android.graphics.Point;

        specialinvoke $r1.<android.graphics.Point: void <init>(int,int)>(0, 0);

        <com.android.server.wm.Letterbox: android.graphics.Point ZERO_POINT> = $r1;

        return;
    }

    public void <init>(java.util.function.Supplier, java.util.function.Supplier)
    {
        com.android.server.wm.Letterbox r0;
        java.util.function.Supplier r1, r2;
        android.graphics.Rect $r4, $r5;
        com.android.server.wm.Letterbox$LetterboxSurface $r6, $r7, $r8, $r9, $r11, $r12, $r13;
        com.android.server.wm.Letterbox$LetterboxSurface[] $r10;

        r0 := @this: com.android.server.wm.Letterbox;

        r1 := @parameter0: java.util.function.Supplier;

        r2 := @parameter1: java.util.function.Supplier;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.Letterbox: android.graphics.Rect mOuter> = $r4;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.Letterbox: android.graphics.Rect mInner> = $r5;

        $r6 = new com.android.server.wm.Letterbox$LetterboxSurface;

        specialinvoke $r6.<com.android.server.wm.Letterbox$LetterboxSurface: void <init>(com.android.server.wm.Letterbox,java.lang.String)>(r0, "top");

        r0.<com.android.server.wm.Letterbox: com.android.server.wm.Letterbox$LetterboxSurface mTop> = $r6;

        $r7 = new com.android.server.wm.Letterbox$LetterboxSurface;

        specialinvoke $r7.<com.android.server.wm.Letterbox$LetterboxSurface: void <init>(com.android.server.wm.Letterbox,java.lang.String)>(r0, "left");

        r0.<com.android.server.wm.Letterbox: com.android.server.wm.Letterbox$LetterboxSurface mLeft> = $r7;

        $r8 = new com.android.server.wm.Letterbox$LetterboxSurface;

        specialinvoke $r8.<com.android.server.wm.Letterbox$LetterboxSurface: void <init>(com.android.server.wm.Letterbox,java.lang.String)>(r0, "bottom");

        r0.<com.android.server.wm.Letterbox: com.android.server.wm.Letterbox$LetterboxSurface mBottom> = $r8;

        $r9 = new com.android.server.wm.Letterbox$LetterboxSurface;

        specialinvoke $r9.<com.android.server.wm.Letterbox$LetterboxSurface: void <init>(com.android.server.wm.Letterbox,java.lang.String)>(r0, "right");

        r0.<com.android.server.wm.Letterbox: com.android.server.wm.Letterbox$LetterboxSurface mRight> = $r9;

        $r10 = newarray (com.android.server.wm.Letterbox$LetterboxSurface)[4];

        $r11 = r0.<com.android.server.wm.Letterbox: com.android.server.wm.Letterbox$LetterboxSurface mLeft>;

        $r10[0] = $r11;

        $r12 = r0.<com.android.server.wm.Letterbox: com.android.server.wm.Letterbox$LetterboxSurface mTop>;

        $r10[1] = $r12;

        $r10[2] = $r9;

        $r13 = r0.<com.android.server.wm.Letterbox: com.android.server.wm.Letterbox$LetterboxSurface mBottom>;

        $r10[3] = $r13;

        r0.<com.android.server.wm.Letterbox: com.android.server.wm.Letterbox$LetterboxSurface[] mSurfaces> = $r10;

        r0.<com.android.server.wm.Letterbox: java.util.function.Supplier mSurfaceControlFactory> = r1;

        r0.<com.android.server.wm.Letterbox: java.util.function.Supplier mTransactionFactory> = r2;

        return;
    }

    static java.util.function.Supplier access$200(com.android.server.wm.Letterbox)
    {
        com.android.server.wm.Letterbox r0;
        java.util.function.Supplier $r1;

        r0 := @parameter0: com.android.server.wm.Letterbox;

        $r1 = r0.<com.android.server.wm.Letterbox: java.util.function.Supplier mSurfaceControlFactory>;

        return $r1;
    }

    static java.util.function.Supplier access$300(com.android.server.wm.Letterbox)
    {
        com.android.server.wm.Letterbox r0;
        java.util.function.Supplier $r1;

        r0 := @parameter0: com.android.server.wm.Letterbox;

        $r1 = r0.<com.android.server.wm.Letterbox: java.util.function.Supplier mTransactionFactory>;

        return $r1;
    }

    public void applySurfaceChanges(android.view.SurfaceControl$Transaction)
    {
        com.android.server.wm.Letterbox r0;
        android.view.SurfaceControl$Transaction r1;
        com.android.server.wm.Letterbox$LetterboxSurface[] r2;
        int i0, i1;
        com.android.server.wm.Letterbox$LetterboxSurface $r3;

        r0 := @this: com.android.server.wm.Letterbox;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        r2 = r0.<com.android.server.wm.Letterbox: com.android.server.wm.Letterbox$LetterboxSurface[] mSurfaces>;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = r2[i1];

        virtualinvoke $r3.<com.android.server.wm.Letterbox$LetterboxSurface: void applySurfaceChanges(android.view.SurfaceControl$Transaction)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void attachInput(com.android.server.wm.WindowState)
    {
        com.android.server.wm.Letterbox r0;
        com.android.server.wm.WindowState r1;
        com.android.server.wm.Letterbox$LetterboxSurface[] r2;
        int i0, i1;
        com.android.server.wm.Letterbox$LetterboxSurface $r3;

        r0 := @this: com.android.server.wm.Letterbox;

        r1 := @parameter0: com.android.server.wm.WindowState;

        r2 = r0.<com.android.server.wm.Letterbox: com.android.server.wm.Letterbox$LetterboxSurface[] mSurfaces>;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = r2[i1];

        virtualinvoke $r3.<com.android.server.wm.Letterbox$LetterboxSurface: void attachInput(com.android.server.wm.WindowState)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void destroy()
    {
        com.android.server.wm.Letterbox r0;
        com.android.server.wm.Letterbox$LetterboxSurface[] r1;
        int i0, i1;
        android.graphics.Rect $r2, $r3;
        com.android.server.wm.Letterbox$LetterboxSurface $r4;

        r0 := @this: com.android.server.wm.Letterbox;

        $r2 = r0.<com.android.server.wm.Letterbox: android.graphics.Rect mOuter>;

        virtualinvoke $r2.<android.graphics.Rect: void setEmpty()>();

        $r3 = r0.<com.android.server.wm.Letterbox: android.graphics.Rect mInner>;

        virtualinvoke $r3.<android.graphics.Rect: void setEmpty()>();

        r1 = r0.<com.android.server.wm.Letterbox: com.android.server.wm.Letterbox$LetterboxSurface[] mSurfaces>;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r4 = r1[i1];

        virtualinvoke $r4.<com.android.server.wm.Letterbox$LetterboxSurface: void remove()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    android.graphics.Rect getInnerFrame()
    {
        com.android.server.wm.Letterbox r0;
        android.graphics.Rect $r1;

        r0 := @this: com.android.server.wm.Letterbox;

        $r1 = r0.<com.android.server.wm.Letterbox: android.graphics.Rect mInner>;

        return $r1;
    }

    public android.graphics.Rect getInsets()
    {
        com.android.server.wm.Letterbox r0;
        android.graphics.Rect $r1;
        com.android.server.wm.Letterbox$LetterboxSurface $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.android.server.wm.Letterbox;

        $r1 = new android.graphics.Rect;

        $r2 = r0.<com.android.server.wm.Letterbox: com.android.server.wm.Letterbox$LetterboxSurface mLeft>;

        $i0 = virtualinvoke $r2.<com.android.server.wm.Letterbox$LetterboxSurface: int getWidth()>();

        $r3 = r0.<com.android.server.wm.Letterbox: com.android.server.wm.Letterbox$LetterboxSurface mTop>;

        $i1 = virtualinvoke $r3.<com.android.server.wm.Letterbox$LetterboxSurface: int getHeight()>();

        $r4 = r0.<com.android.server.wm.Letterbox: com.android.server.wm.Letterbox$LetterboxSurface mRight>;

        $i2 = virtualinvoke $r4.<com.android.server.wm.Letterbox$LetterboxSurface: int getWidth()>();

        $r5 = r0.<com.android.server.wm.Letterbox: com.android.server.wm.Letterbox$LetterboxSurface mBottom>;

        $i3 = virtualinvoke $r5.<com.android.server.wm.Letterbox$LetterboxSurface: int getHeight()>();

        specialinvoke $r1.<android.graphics.Rect: void <init>(int,int,int,int)>($i0, $i1, $i2, $i3);

        return $r1;
    }

    public void hide()
    {
        com.android.server.wm.Letterbox r0;
        android.graphics.Rect r1;
        android.graphics.Point $r2;

        r0 := @this: com.android.server.wm.Letterbox;

        r1 = <com.android.server.wm.Letterbox: android.graphics.Rect EMPTY_RECT>;

        $r2 = <com.android.server.wm.Letterbox: android.graphics.Point ZERO_POINT>;

        virtualinvoke r0.<com.android.server.wm.Letterbox: void layout(android.graphics.Rect,android.graphics.Rect,android.graphics.Point)>(r1, r1, $r2);

        return;
    }

    public boolean isOverlappingWith(android.graphics.Rect)
    {
        com.android.server.wm.Letterbox r0;
        android.graphics.Rect r1;
        com.android.server.wm.Letterbox$LetterboxSurface[] r2;
        int i0, i1;
        com.android.server.wm.Letterbox$LetterboxSurface $r3;
        boolean $z0;

        r0 := @this: com.android.server.wm.Letterbox;

        r1 := @parameter0: android.graphics.Rect;

        r2 = r0.<com.android.server.wm.Letterbox: com.android.server.wm.Letterbox$LetterboxSurface[] mSurfaces>;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r3 = r2[i1];

        $z0 = virtualinvoke $r3.<com.android.server.wm.Letterbox$LetterboxSurface: boolean isOverlappingWith(android.graphics.Rect)>(r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public void layout(android.graphics.Rect, android.graphics.Rect, android.graphics.Point)
    {
        com.android.server.wm.Letterbox r0;
        android.graphics.Rect r1, r2, $r4, $r5;
        android.graphics.Point r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        com.android.server.wm.Letterbox$LetterboxSurface $r6, $r7, $r8, $r9;

        r0 := @this: com.android.server.wm.Letterbox;

        r1 := @parameter0: android.graphics.Rect;

        r2 := @parameter1: android.graphics.Rect;

        r3 := @parameter2: android.graphics.Point;

        $r4 = r0.<com.android.server.wm.Letterbox: android.graphics.Rect mOuter>;

        virtualinvoke $r4.<android.graphics.Rect: void set(android.graphics.Rect)>(r1);

        $r5 = r0.<com.android.server.wm.Letterbox: android.graphics.Rect mInner>;

        virtualinvoke $r5.<android.graphics.Rect: void set(android.graphics.Rect)>(r2);

        $r6 = r0.<com.android.server.wm.Letterbox: com.android.server.wm.Letterbox$LetterboxSurface mTop>;

        $i3 = r1.<android.graphics.Rect: int left>;

        $i2 = r1.<android.graphics.Rect: int top>;

        $i1 = r1.<android.graphics.Rect: int right>;

        $i0 = r2.<android.graphics.Rect: int top>;

        virtualinvoke $r6.<com.android.server.wm.Letterbox$LetterboxSurface: void layout(int,int,int,int,android.graphics.Point)>($i3, $i2, $i1, $i0, r3);

        $r7 = r0.<com.android.server.wm.Letterbox: com.android.server.wm.Letterbox$LetterboxSurface mLeft>;

        $i7 = r1.<android.graphics.Rect: int left>;

        $i6 = r1.<android.graphics.Rect: int top>;

        $i5 = r2.<android.graphics.Rect: int left>;

        $i4 = r1.<android.graphics.Rect: int bottom>;

        virtualinvoke $r7.<com.android.server.wm.Letterbox$LetterboxSurface: void layout(int,int,int,int,android.graphics.Point)>($i7, $i6, $i5, $i4, r3);

        $r8 = r0.<com.android.server.wm.Letterbox: com.android.server.wm.Letterbox$LetterboxSurface mBottom>;

        $i11 = r1.<android.graphics.Rect: int left>;

        $i10 = r2.<android.graphics.Rect: int bottom>;

        $i9 = r1.<android.graphics.Rect: int right>;

        $i8 = r1.<android.graphics.Rect: int bottom>;

        virtualinvoke $r8.<com.android.server.wm.Letterbox$LetterboxSurface: void layout(int,int,int,int,android.graphics.Point)>($i11, $i10, $i9, $i8, r3);

        $r9 = r0.<com.android.server.wm.Letterbox: com.android.server.wm.Letterbox$LetterboxSurface mRight>;

        $i15 = r2.<android.graphics.Rect: int right>;

        $i14 = r1.<android.graphics.Rect: int top>;

        $i13 = r1.<android.graphics.Rect: int right>;

        $i12 = r1.<android.graphics.Rect: int bottom>;

        virtualinvoke $r9.<com.android.server.wm.Letterbox$LetterboxSurface: void layout(int,int,int,int,android.graphics.Point)>($i15, $i14, $i13, $i12, r3);

        return;
    }

    public boolean needsApplySurfaceChanges()
    {
        com.android.server.wm.Letterbox r0;
        com.android.server.wm.Letterbox$LetterboxSurface[] r1;
        int i0, i1;
        com.android.server.wm.Letterbox$LetterboxSurface $r2;
        boolean $z0;

        r0 := @this: com.android.server.wm.Letterbox;

        r1 = r0.<com.android.server.wm.Letterbox: com.android.server.wm.Letterbox$LetterboxSurface[] mSurfaces>;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r2 = r1[i1];

        $z0 = virtualinvoke $r2.<com.android.server.wm.Letterbox$LetterboxSurface: boolean needsApplySurfaceChanges()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    boolean notIntersectsOrFullyContains(android.graphics.Rect)
    {
        com.android.server.wm.Letterbox r0;
        android.graphics.Rect r1, r3;
        com.android.server.wm.Letterbox$LetterboxSurface[] r2, $r4;
        int i0, $i1, $i2, i3, i4, i5;
        com.android.server.wm.Letterbox$LetterboxSurface $r5;
        boolean $z0, $z1, $z2, z3;

        r0 := @this: com.android.server.wm.Letterbox;

        r1 := @parameter0: android.graphics.Rect;

        i3 = 0;

        i4 = 0;

        r2 = r0.<com.android.server.wm.Letterbox: com.android.server.wm.Letterbox$LetterboxSurface[] mSurfaces>;

        i0 = lengthof r2;

        z3 = 0;

        i5 = 0;

     label1:
        if i5 >= i0 goto label5;

        $r5 = r2[i5];

        r3 = staticinvoke <com.android.server.wm.Letterbox$LetterboxSurface: android.graphics.Rect access$000(com.android.server.wm.Letterbox$LetterboxSurface)>($r5);

        $z0 = virtualinvoke r3.<android.graphics.Rect: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        i3 = i3 + 1;

        goto label4;

     label2:
        $z1 = staticinvoke <android.graphics.Rect: boolean intersects(android.graphics.Rect,android.graphics.Rect)>(r3, r1);

        if $z1 != 0 goto label3;

        i4 = i4 + 1;

        goto label4;

     label3:
        $z2 = virtualinvoke r3.<android.graphics.Rect: boolean contains(android.graphics.Rect)>(r1);

        if $z2 == 0 goto label4;

        return 1;

     label4:
        i5 = i5 + 1;

        goto label1;

     label5:
        $i2 = i3 + i4;

        $r4 = r0.<com.android.server.wm.Letterbox: com.android.server.wm.Letterbox$LetterboxSurface[] mSurfaces>;

        $i1 = lengthof $r4;

        if $i2 != $i1 goto label6;

        z3 = 1;

     label6:
        return z3;
    }

    void onMovedToDisplay(int)
    {
        com.android.server.wm.Letterbox r0;
        int i0, i1, i2;
        com.android.server.wm.Letterbox$LetterboxSurface[] r1;
        com.android.server.wm.Letterbox$LetterboxSurface r2;
        com.android.server.wm.Letterbox$InputInterceptor $r3, $r4;
        android.view.InputWindowHandle $r5;

        r0 := @this: com.android.server.wm.Letterbox;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.wm.Letterbox: com.android.server.wm.Letterbox$LetterboxSurface[] mSurfaces>;

        i1 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        r2 = r1[i2];

        $r3 = staticinvoke <com.android.server.wm.Letterbox$LetterboxSurface: com.android.server.wm.Letterbox$InputInterceptor access$100(com.android.server.wm.Letterbox$LetterboxSurface)>(r2);

        if $r3 == null goto label2;

        $r4 = staticinvoke <com.android.server.wm.Letterbox$LetterboxSurface: com.android.server.wm.Letterbox$InputInterceptor access$100(com.android.server.wm.Letterbox$LetterboxSurface)>(r2);

        $r5 = $r4.<com.android.server.wm.Letterbox$InputInterceptor: android.view.InputWindowHandle mWindowHandle>;

        $r5.<android.view.InputWindowHandle: int displayId> = i0;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }
}
