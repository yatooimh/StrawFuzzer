interface  com.android.server.wm.LocalAnimationAdapter$AnimationSpec extends java.lang.Object
{

    public abstract void apply(android.view.SurfaceControl$Transaction, android.view.SurfaceControl, long);

    public long calculateStatusBarTransitionStartTime()
    {
        com.android.server.wm.LocalAnimationAdapter$AnimationSpec r0;
        long $l0;

        r0 := @this: com.android.server.wm.LocalAnimationAdapter$AnimationSpec;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        return $l0;
    }

    public boolean canSkipFirstFrame()
    {
        com.android.server.wm.LocalAnimationAdapter$AnimationSpec r0;

        r0 := @this: com.android.server.wm.LocalAnimationAdapter$AnimationSpec;

        return 0;
    }

    public abstract void dump(java.io.PrintWriter, java.lang.String);

    public void dumpDebug(android.util.proto.ProtoOutputStream, long)
    {
        com.android.server.wm.LocalAnimationAdapter$AnimationSpec r0;
        android.util.proto.ProtoOutputStream r1;
        long l0, l1;

        r0 := @this: com.android.server.wm.LocalAnimationAdapter$AnimationSpec;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        l0 := @parameter1: long;

        l1 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(l0);

        interfaceinvoke r0.<com.android.server.wm.LocalAnimationAdapter$AnimationSpec: void dumpDebugInner(android.util.proto.ProtoOutputStream)>(r1);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l1);

        return;
    }

    public abstract void dumpDebugInner(android.util.proto.ProtoOutputStream);

    public abstract long getDuration();

    public float getFraction(float)
    {
        com.android.server.wm.LocalAnimationAdapter$AnimationSpec r0;
        float f0, f1, f2;
        long $l0;
        byte $b1;

        r0 := @this: com.android.server.wm.LocalAnimationAdapter$AnimationSpec;

        f1 := @parameter0: float;

        $l0 = interfaceinvoke r0.<com.android.server.wm.LocalAnimationAdapter$AnimationSpec: long getDuration()>();

        f0 = (float) $l0;

        $b1 = f0 cmpl 0.0F;

        if $b1 <= 0 goto label1;

        f2 = f1 / f0;

        goto label2;

     label1:
        f2 = 1.0F;

     label2:
        return f2;
    }

    public boolean getShowWallpaper()
    {
        com.android.server.wm.LocalAnimationAdapter$AnimationSpec r0;

        r0 := @this: com.android.server.wm.LocalAnimationAdapter$AnimationSpec;

        return 0;
    }

    public boolean needsEarlyWakeup()
    {
        com.android.server.wm.LocalAnimationAdapter$AnimationSpec r0;

        r0 := @this: com.android.server.wm.LocalAnimationAdapter$AnimationSpec;

        return 0;
    }
}
