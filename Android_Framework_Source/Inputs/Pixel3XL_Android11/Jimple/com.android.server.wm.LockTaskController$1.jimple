class com.android.server.wm.LockTaskController$1 extends com.android.internal.policy.IKeyguardDismissCallback$Stub
{
    final com.android.server.wm.LockTaskController this$0;
    final int val$userId;

    void <init>(com.android.server.wm.LockTaskController, int)
    {
        com.android.server.wm.LockTaskController$1 r0;
        com.android.server.wm.LockTaskController r1;
        int i0;

        r0 := @this: com.android.server.wm.LockTaskController$1;

        r1 := @parameter0: com.android.server.wm.LockTaskController;

        i0 := @parameter1: int;

        r0.<com.android.server.wm.LockTaskController$1: com.android.server.wm.LockTaskController this$0> = r1;

        r0.<com.android.server.wm.LockTaskController$1: int val$userId> = i0;

        specialinvoke r0.<com.android.internal.policy.IKeyguardDismissCallback$Stub: void <init>()>();

        return;
    }

    public void lambda$onDismissSucceeded$0$LockTaskController$1(int)
    {
        com.android.server.wm.LockTaskController$1 r0;
        int i0, $i1;
        com.android.server.wm.LockTaskController $r1, $r2, $r3, $r6;
        com.android.server.wm.WindowManagerService $r4;
        android.os.IBinder $r5;

        r0 := @this: com.android.server.wm.LockTaskController$1;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.wm.LockTaskController$1: com.android.server.wm.LockTaskController this$0>;

        $i1 = staticinvoke <com.android.server.wm.LockTaskController: int access$200(com.android.server.wm.LockTaskController)>($r1);

        if $i1 != i0 goto label1;

        $r2 = r0.<com.android.server.wm.LockTaskController$1: com.android.server.wm.LockTaskController this$0>;

        $r4 = $r2.<com.android.server.wm.LockTaskController: com.android.server.wm.WindowManagerService mWindowManager>;

        $r3 = r0.<com.android.server.wm.LockTaskController$1: com.android.server.wm.LockTaskController this$0>;

        $r5 = staticinvoke <com.android.server.wm.LockTaskController: android.os.IBinder access$300(com.android.server.wm.LockTaskController)>($r3);

        virtualinvoke $r4.<com.android.server.wm.WindowManagerService: void disableKeyguard(android.os.IBinder,java.lang.String,int)>($r5, "Lock-to-App", i0);

        $r6 = r0.<com.android.server.wm.LockTaskController$1: com.android.server.wm.LockTaskController this$0>;

        staticinvoke <com.android.server.wm.LockTaskController: int access$202(com.android.server.wm.LockTaskController,int)>($r6, -10000);

     label1:
        return;
    }

    public void onDismissCancelled() throws android.os.RemoteException
    {
        com.android.server.wm.LockTaskController$1 r0;

        r0 := @this: com.android.server.wm.LockTaskController$1;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityTaskManager", "setKeyguardState: dismiss cancelled");

        return;
    }

    public void onDismissError() throws android.os.RemoteException
    {
        com.android.server.wm.LockTaskController$1 r0;

        r0 := @this: com.android.server.wm.LockTaskController$1;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityTaskManager", "setKeyguardState: failed to dismiss keyguard");

        return;
    }

    public void onDismissSucceeded() throws android.os.RemoteException
    {
        com.android.server.wm.LockTaskController$1 r0;
        com.android.server.wm.LockTaskController $r1;
        android.os.Handler $r2;
        com.android.server.wm._$$Lambda$LockTaskController$1$WwLdnVMTh3BcztLd26dCnk4GjpA $r3;
        int $i0;

        r0 := @this: com.android.server.wm.LockTaskController$1;

        $r1 = r0.<com.android.server.wm.LockTaskController$1: com.android.server.wm.LockTaskController this$0>;

        $r2 = staticinvoke <com.android.server.wm.LockTaskController: android.os.Handler access$100(com.android.server.wm.LockTaskController)>($r1);

        $r3 = new com.android.server.wm._$$Lambda$LockTaskController$1$WwLdnVMTh3BcztLd26dCnk4GjpA;

        $i0 = r0.<com.android.server.wm.LockTaskController$1: int val$userId>;

        specialinvoke $r3.<com.android.server.wm._$$Lambda$LockTaskController$1$WwLdnVMTh3BcztLd26dCnk4GjpA: void <init>(com.android.server.wm.LockTaskController$1,int)>(r0, $i0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }
}
