class com.android.server.wm.PendingRemoteAnimationRegistry$Entry extends java.lang.Object
{
    final android.view.RemoteAnimationAdapter adapter;
    final java.lang.String packageName;
    final com.android.server.wm.PendingRemoteAnimationRegistry this$0;

    void <init>(com.android.server.wm.PendingRemoteAnimationRegistry, java.lang.String, android.view.RemoteAnimationAdapter)
    {
        com.android.server.wm.PendingRemoteAnimationRegistry$Entry r0;
        com.android.server.wm.PendingRemoteAnimationRegistry r1;
        java.lang.String r2;
        android.view.RemoteAnimationAdapter r3;
        android.os.Handler $r4;
        com.android.server.wm._$$Lambda$PendingRemoteAnimationRegistry$Entry$giivzkMgzIxukCXvO2EVzLb0oxo $r5;

        r0 := @this: com.android.server.wm.PendingRemoteAnimationRegistry$Entry;

        r1 := @parameter0: com.android.server.wm.PendingRemoteAnimationRegistry;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.view.RemoteAnimationAdapter;

        r0.<com.android.server.wm.PendingRemoteAnimationRegistry$Entry: com.android.server.wm.PendingRemoteAnimationRegistry this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.wm.PendingRemoteAnimationRegistry$Entry: java.lang.String packageName> = r2;

        r0.<com.android.server.wm.PendingRemoteAnimationRegistry$Entry: android.view.RemoteAnimationAdapter adapter> = r3;

        $r4 = staticinvoke <com.android.server.wm.PendingRemoteAnimationRegistry: android.os.Handler access$000(com.android.server.wm.PendingRemoteAnimationRegistry)>(r1);

        $r5 = new com.android.server.wm._$$Lambda$PendingRemoteAnimationRegistry$Entry$giivzkMgzIxukCXvO2EVzLb0oxo;

        specialinvoke $r5.<com.android.server.wm._$$Lambda$PendingRemoteAnimationRegistry$Entry$giivzkMgzIxukCXvO2EVzLb0oxo: void <init>(com.android.server.wm.PendingRemoteAnimationRegistry$Entry,java.lang.String)>(r0, r2);

        virtualinvoke $r4.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r5, 3000L);

        return;
    }

    public void lambda$new$0$PendingRemoteAnimationRegistry$Entry(java.lang.String)
    {
        com.android.server.wm.PendingRemoteAnimationRegistry$Entry r0, $r6;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.PendingRemoteAnimationRegistry $r2, $r3, $r7;
        android.util.ArrayMap $r4, $r8;
        java.lang.Object $r5;
        java.lang.Throwable $r10;
        java.lang.String r11;

        r0 := @this: com.android.server.wm.PendingRemoteAnimationRegistry$Entry;

        r11 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.wm.PendingRemoteAnimationRegistry$Entry: com.android.server.wm.PendingRemoteAnimationRegistry this$0>;

        r1 = staticinvoke <com.android.server.wm.PendingRemoteAnimationRegistry: com.android.server.wm.WindowManagerGlobalLock access$100(com.android.server.wm.PendingRemoteAnimationRegistry)>($r2);

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.PendingRemoteAnimationRegistry$Entry: com.android.server.wm.PendingRemoteAnimationRegistry this$0>;

        $r4 = staticinvoke <com.android.server.wm.PendingRemoteAnimationRegistry: android.util.ArrayMap access$200(com.android.server.wm.PendingRemoteAnimationRegistry)>($r3);

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r11);

        $r6 = (com.android.server.wm.PendingRemoteAnimationRegistry$Entry) $r5;

        if $r6 != r0 goto label2;

        $r7 = r0.<com.android.server.wm.PendingRemoteAnimationRegistry$Entry: com.android.server.wm.PendingRemoteAnimationRegistry this$0>;

        $r8 = staticinvoke <com.android.server.wm.PendingRemoteAnimationRegistry: android.util.ArrayMap access$200(com.android.server.wm.PendingRemoteAnimationRegistry)>($r7);

        virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r11);

     label2:
        exitmonitor r1;

     label3:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label4:
        $r10 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
}
