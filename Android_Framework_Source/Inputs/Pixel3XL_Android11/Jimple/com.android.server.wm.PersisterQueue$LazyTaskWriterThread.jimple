class com.android.server.wm.PersisterQueue$LazyTaskWriterThread extends java.lang.Thread
{
    final com.android.server.wm.PersisterQueue this$0;

    private void <init>(com.android.server.wm.PersisterQueue, java.lang.String)
    {
        com.android.server.wm.PersisterQueue$LazyTaskWriterThread r0;
        com.android.server.wm.PersisterQueue r1;
        java.lang.String r2;

        r0 := @this: com.android.server.wm.PersisterQueue$LazyTaskWriterThread;

        r1 := @parameter0: com.android.server.wm.PersisterQueue;

        r2 := @parameter1: java.lang.String;

        r0.<com.android.server.wm.PersisterQueue$LazyTaskWriterThread: com.android.server.wm.PersisterQueue this$0> = r1;

        specialinvoke r0.<java.lang.Thread: void <init>(java.lang.String)>(r2);

        return;
    }

    void <init>(com.android.server.wm.PersisterQueue, java.lang.String, com.android.server.wm.PersisterQueue$1)
    {
        com.android.server.wm.PersisterQueue$LazyTaskWriterThread r0;
        com.android.server.wm.PersisterQueue r1;
        java.lang.String r2;
        com.android.server.wm.PersisterQueue$1 r3;

        r0 := @this: com.android.server.wm.PersisterQueue$LazyTaskWriterThread;

        r1 := @parameter0: com.android.server.wm.PersisterQueue;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.android.server.wm.PersisterQueue$1;

        specialinvoke r0.<com.android.server.wm.PersisterQueue$LazyTaskWriterThread: void <init>(com.android.server.wm.PersisterQueue,java.lang.String)>(r1, r2);

        return;
    }

    public void run()
    {
        com.android.server.wm.PersisterQueue$LazyTaskWriterThread r0;
        com.android.server.wm.PersisterQueue r1, $r2, $r4, $r6, $r7;
        boolean z0;
        java.util.ArrayList $r3, $r5, $r8;
        int $i0, i2;
        java.lang.Object $r9;
        com.android.server.wm.PersisterQueue$Listener $r10;
        java.lang.Throwable $r11, $r12;

        r0 := @this: com.android.server.wm.PersisterQueue$LazyTaskWriterThread;

        staticinvoke <android.os.Process: void setThreadPriority(int)>(10);

     label01:
        r1 = r0.<com.android.server.wm.PersisterQueue$LazyTaskWriterThread: com.android.server.wm.PersisterQueue this$0>;

        entermonitor r1;

     label02:
        $r2 = r0.<com.android.server.wm.PersisterQueue$LazyTaskWriterThread: com.android.server.wm.PersisterQueue this$0>;

        $r3 = staticinvoke <com.android.server.wm.PersisterQueue: java.util.ArrayList access$100(com.android.server.wm.PersisterQueue)>($r2);

        z0 = virtualinvoke $r3.<java.util.ArrayList: boolean isEmpty()>();

        exitmonitor r1;

     label03:
        $r4 = r0.<com.android.server.wm.PersisterQueue$LazyTaskWriterThread: com.android.server.wm.PersisterQueue this$0>;

        $r5 = staticinvoke <com.android.server.wm.PersisterQueue: java.util.ArrayList access$200(com.android.server.wm.PersisterQueue)>($r4);

        $i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i2 = $i0 - 1;

     label04:
        if i2 < 0 goto label07;

     label05:
        $r7 = r0.<com.android.server.wm.PersisterQueue$LazyTaskWriterThread: com.android.server.wm.PersisterQueue this$0>;

        $r8 = staticinvoke <com.android.server.wm.PersisterQueue: java.util.ArrayList access$200(com.android.server.wm.PersisterQueue)>($r7);

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r10 = (com.android.server.wm.PersisterQueue$Listener) $r9;

        interfaceinvoke $r10.<com.android.server.wm.PersisterQueue$Listener: void onPreProcessItem(boolean)>(z0);

     label06:
        i2 = i2 + -1;

        goto label04;

     label07:
        $r6 = r0.<com.android.server.wm.PersisterQueue$LazyTaskWriterThread: com.android.server.wm.PersisterQueue this$0>;

        staticinvoke <com.android.server.wm.PersisterQueue: void access$300(com.android.server.wm.PersisterQueue)>($r6);

     label08:
        goto label01;

     label09:
        $r11 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r11;

     label12:
        $r12 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PersisterQueue", "Persister thread is exiting. Should never happen in prod, butit\'s OK in tests.");

        return;

        catch java.lang.InterruptedException from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.InterruptedException from label03 to label04 with label12;
        catch java.lang.InterruptedException from label05 to label06 with label12;
        catch java.lang.InterruptedException from label07 to label08 with label12;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.InterruptedException from label11 to label12 with label12;
    }
}
