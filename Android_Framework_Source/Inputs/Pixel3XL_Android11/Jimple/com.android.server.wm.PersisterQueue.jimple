class com.android.server.wm.PersisterQueue extends java.lang.Object
{
    private static final boolean DEBUG;
    static final com.android.server.wm.PersisterQueue$WriteQueueItem EMPTY_ITEM;
    private static final long FLUSH_QUEUE;
    private static final long INTER_WRITE_DELAY_MS;
    private static final int MAX_WRITE_QUEUE_LENGTH;
    private static final long PRE_TASK_DELAY_MS;
    private static final java.lang.String TAG;
    private final long mInterWriteDelayMs;
    private final com.android.server.wm.PersisterQueue$LazyTaskWriterThread mLazyTaskWriterThread;
    private final java.util.ArrayList mListeners;
    private long mNextWriteTime;
    private final long mPreTaskDelayMs;
    private final java.util.ArrayList mWriteQueue;

    static void <clinit>()
    {
        com.android.server.wm.'-$$Lambda$PersisterQueue$HOTPBvinkMOqT3zxV3gRm6Y9Wi4' $r0;
        com.android.server.wm.PersisterQueue$WriteQueueItem r1;

        <com.android.server.wm.PersisterQueue: java.lang.String TAG> = "PersisterQueue";

        <com.android.server.wm.PersisterQueue: long PRE_TASK_DELAY_MS> = 3000L;

        <com.android.server.wm.PersisterQueue: int MAX_WRITE_QUEUE_LENGTH> = 6;

        <com.android.server.wm.PersisterQueue: long INTER_WRITE_DELAY_MS> = 500L;

        <com.android.server.wm.PersisterQueue: long FLUSH_QUEUE> = -1L;

        <com.android.server.wm.PersisterQueue: boolean DEBUG> = 0;

        $r0 = <com.android.server.wm._$$Lambda$PersisterQueue$HOTPBvinkMOqT3zxV3gRm6Y9Wi4: com.android.server.wm.'-$$Lambda$PersisterQueue$HOTPBvinkMOqT3zxV3gRm6Y9Wi4' INSTANCE>;

        r1 = (com.android.server.wm.PersisterQueue$WriteQueueItem) $r0;

        <com.android.server.wm.PersisterQueue: com.android.server.wm.PersisterQueue$WriteQueueItem EMPTY_ITEM> = r1;

        return;
    }

    void <init>()
    {
        com.android.server.wm.PersisterQueue r0;

        r0 := @this: com.android.server.wm.PersisterQueue;

        specialinvoke r0.<com.android.server.wm.PersisterQueue: void <init>(long,long)>(500L, 3000L);

        return;
    }

    void <init>(long, long)
    {
        com.android.server.wm.PersisterQueue r0;
        long l0, l1;
        java.util.ArrayList $r2, $r3;
        byte $b2, $b3;
        java.lang.StringBuilder $r4;
        java.lang.IllegalArgumentException $r9;
        java.lang.String $r10;
        com.android.server.wm.PersisterQueue$LazyTaskWriterThread $r11;

        r0 := @this: com.android.server.wm.PersisterQueue;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.wm.PersisterQueue: java.util.ArrayList mWriteQueue> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.wm.PersisterQueue: java.util.ArrayList mListeners> = $r3;

        r0.<com.android.server.wm.PersisterQueue: long mNextWriteTime> = 0L;

        $b2 = l0 cmp 0L;

        if $b2 < 0 goto label1;

        $b3 = l1 cmp 0L;

        if $b3 < 0 goto label1;

        r0.<com.android.server.wm.PersisterQueue: long mInterWriteDelayMs> = l0;

        r0.<com.android.server.wm.PersisterQueue: long mPreTaskDelayMs> = l1;

        $r11 = new com.android.server.wm.PersisterQueue$LazyTaskWriterThread;

        specialinvoke $r11.<com.android.server.wm.PersisterQueue$LazyTaskWriterThread: void <init>(com.android.server.wm.PersisterQueue,java.lang.String,com.android.server.wm.PersisterQueue$1)>(r0, "LazyTaskWriterThread", null);

        r0.<com.android.server.wm.PersisterQueue: com.android.server.wm.PersisterQueue$LazyTaskWriterThread mLazyTaskWriterThread> = $r11;

        return;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Both inter-write delay and pre-task delay need tobe non-negative. inter-write delay: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms pre-task delay: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r9;
    }

    static java.util.ArrayList access$100(com.android.server.wm.PersisterQueue)
    {
        com.android.server.wm.PersisterQueue r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: com.android.server.wm.PersisterQueue;

        $r1 = r0.<com.android.server.wm.PersisterQueue: java.util.ArrayList mWriteQueue>;

        return $r1;
    }

    static java.util.ArrayList access$200(com.android.server.wm.PersisterQueue)
    {
        com.android.server.wm.PersisterQueue r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: com.android.server.wm.PersisterQueue;

        $r1 = r0.<com.android.server.wm.PersisterQueue: java.util.ArrayList mListeners>;

        return $r1;
    }

    static void access$300(com.android.server.wm.PersisterQueue) throws java.lang.InterruptedException
    {
        com.android.server.wm.PersisterQueue r0;

        r0 := @parameter0: com.android.server.wm.PersisterQueue;

        specialinvoke r0.<com.android.server.wm.PersisterQueue: void processNextItem()>();

        return;
    }

    static void lambda$static$0()
    {
        return;
    }

    private void processNextItem() throws java.lang.InterruptedException
    {
        com.android.server.wm.PersisterQueue r0;
        long $l0, $l2, $l4, $l5, $l6, $l8, $l9, $l10, l11;
        byte $b1, $b3, $b7;
        java.util.ArrayList $r1, $r5;
        java.lang.Object $r2;
        java.lang.Thread $r3;
        boolean $z0, $z1;
        java.lang.Throwable $r4;
        java.lang.InterruptedException r6;
        com.android.server.wm.PersisterQueue$WriteQueueItem r7;

        r0 := @this: com.android.server.wm.PersisterQueue;

        entermonitor r0;

     label01:
        $l0 = r0.<com.android.server.wm.PersisterQueue: long mNextWriteTime>;

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label02;

        $l8 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l9 = r0.<com.android.server.wm.PersisterQueue: long mInterWriteDelayMs>;

        $l10 = $l8 + $l9;

        r0.<com.android.server.wm.PersisterQueue: long mNextWriteTime> = $l10;

     label02:
        $r5 = r0.<com.android.server.wm.PersisterQueue: java.util.ArrayList mWriteQueue>;

        $z1 = virtualinvoke $r5.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 == 0 goto label06;

        $l6 = r0.<com.android.server.wm.PersisterQueue: long mNextWriteTime>;

        $b7 = $l6 cmp 0L;

        if $b7 == 0 goto label03;

        r0.<com.android.server.wm.PersisterQueue: long mNextWriteTime> = 0L;

        virtualinvoke r0.<java.lang.Object: void notify()>();

     label03:
        $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $z0 = virtualinvoke $r3.<java.lang.Thread: boolean isInterrupted()>();

        if $z0 != 0 goto label05;

        virtualinvoke r0.<java.lang.Object: void wait()>();

     label04:
        goto label02;

     label05:
        r6 = new java.lang.InterruptedException;

        specialinvoke r6.<java.lang.InterruptedException: void <init>()>();

        throw r6;

     label06:
        $r1 = r0.<com.android.server.wm.PersisterQueue: java.util.ArrayList mWriteQueue>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        r7 = (com.android.server.wm.PersisterQueue$WriteQueueItem) $r2;

        l11 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label07:
        $l2 = r0.<com.android.server.wm.PersisterQueue: long mNextWriteTime>;

        $b3 = l11 cmp $l2;

        if $b3 >= 0 goto label09;

        $l4 = r0.<com.android.server.wm.PersisterQueue: long mNextWriteTime>;

        $l5 = $l4 - l11;

        virtualinvoke r0.<java.lang.Object: void wait(long)>($l5);

        l11 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label08:
        goto label07;

     label09:
        exitmonitor r0;

     label10:
        interfaceinvoke r7.<com.android.server.wm.PersisterQueue$WriteQueueItem: void process()>();

        return;

     label11:
        $r4 := @caughtexception;

     label12:
        exitmonitor r0;

     label13:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    void addItem(com.android.server.wm.PersisterQueue$WriteQueueItem, boolean)
    {
        com.android.server.wm.PersisterQueue r0;
        boolean z0;
        java.util.ArrayList $r1, $r2;
        int $i0;
        long $l1, $l3, $l4, $l5;
        byte $b2;
        java.lang.Throwable $r3;
        com.android.server.wm.PersisterQueue$WriteQueueItem r4;

        r0 := @this: com.android.server.wm.PersisterQueue;

        r4 := @parameter0: com.android.server.wm.PersisterQueue$WriteQueueItem;

        z0 := @parameter1: boolean;

        entermonitor r0;

     label01:
        $r1 = r0.<com.android.server.wm.PersisterQueue: java.util.ArrayList mWriteQueue>;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

     label02:
        if z0 != 0 goto label07;

     label03:
        $r2 = r0.<com.android.server.wm.PersisterQueue: java.util.ArrayList mWriteQueue>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 <= 6 goto label05;

     label04:
        goto label07;

     label05:
        $l1 = r0.<com.android.server.wm.PersisterQueue: long mNextWriteTime>;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label08;

        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l4 = r0.<com.android.server.wm.PersisterQueue: long mPreTaskDelayMs>;

        $l5 = $l3 + $l4;

        r0.<com.android.server.wm.PersisterQueue: long mNextWriteTime> = $l5;

     label06:
        goto label08;

     label07:
        r0.<com.android.server.wm.PersisterQueue: long mNextWriteTime> = -1L;

     label08:
        virtualinvoke r0.<java.lang.Object: void notify()>();

     label09:
        exitmonitor r0;

        return;

     label10:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    void addListener(com.android.server.wm.PersisterQueue$Listener)
    {
        com.android.server.wm.PersisterQueue r0;
        com.android.server.wm.PersisterQueue$Listener r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.server.wm.PersisterQueue;

        r1 := @parameter0: com.android.server.wm.PersisterQueue$Listener;

        $r2 = r0.<com.android.server.wm.PersisterQueue: java.util.ArrayList mListeners>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    com.android.server.wm.PersisterQueue$WriteQueueItem findLastItem(java.util.function.Predicate, java.lang.Class)
    {
        com.android.server.wm.PersisterQueue r0;
        java.lang.Class r1;
        boolean z0, $z1;
        java.util.ArrayList $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4, $r5;
        java.lang.Throwable $r6;
        java.util.function.Predicate r7;
        com.android.server.wm.PersisterQueue$WriteQueueItem r8, r9;

        r0 := @this: com.android.server.wm.PersisterQueue;

        r7 := @parameter0: java.util.function.Predicate;

        r1 := @parameter1: java.lang.Class;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.wm.PersisterQueue: java.util.ArrayList mWriteQueue>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label2:
        if i1 < 0 goto label6;

     label3:
        $r3 = r0.<com.android.server.wm.PersisterQueue: java.util.ArrayList mWriteQueue>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r8 = (com.android.server.wm.PersisterQueue$WriteQueueItem) $r4;

        $z1 = virtualinvoke r1.<java.lang.Class: boolean isInstance(java.lang.Object)>(r8);

        if $z1 == 0 goto label5;

        $r5 = virtualinvoke r1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(r8);

        r9 = (com.android.server.wm.PersisterQueue$WriteQueueItem) $r5;

        z0 = interfaceinvoke r7.<java.util.function.Predicate: boolean test(java.lang.Object)>(r9);

     label4:
        if z0 == 0 goto label5;

        exitmonitor r0;

        return r9;

     label5:
        i1 = i1 + -1;

        goto label2;

     label6:
        exitmonitor r0;

        return null;

     label7:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    void flush()
    {
        com.android.server.wm.PersisterQueue r0;
        long l0;
        byte $b1;
        java.lang.Throwable $r1, $r2;

        r0 := @this: com.android.server.wm.PersisterQueue;

        entermonitor r0;

     label1:
        r0.<com.android.server.wm.PersisterQueue: long mNextWriteTime> = -1L;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

     label2:
        virtualinvoke r0.<java.lang.Object: void wait()>();

     label3:
        goto label5;

     label4:
        $r2 := @caughtexception;

     label5:
        l0 = r0.<com.android.server.wm.PersisterQueue: long mNextWriteTime>;

     label6:
        $b1 = l0 cmp -1L;

        if $b1 == 0 goto label2;

        exitmonitor r0;

        return;

     label7:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.InterruptedException from label2 to label3 with label4;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    void removeItems(java.util.function.Predicate, java.lang.Class)
    {
        com.android.server.wm.PersisterQueue r0;
        java.lang.Class r1;
        com.android.server.wm.PersisterQueue$WriteQueueItem r2, $r7;
        java.util.ArrayList $r3, $r4, $r8;
        int $i0, i1;
        java.lang.Object $r5, $r6;
        boolean $z0, $z1;
        java.lang.Throwable $r10;
        java.util.function.Predicate r11;

        r0 := @this: com.android.server.wm.PersisterQueue;

        r11 := @parameter0: java.util.function.Predicate;

        r1 := @parameter1: java.lang.Class;

        entermonitor r0;

     label1:
        $r3 = r0.<com.android.server.wm.PersisterQueue: java.util.ArrayList mWriteQueue>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label2:
        if i1 < 0 goto label5;

     label3:
        $r4 = r0.<com.android.server.wm.PersisterQueue: java.util.ArrayList mWriteQueue>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.server.wm.PersisterQueue$WriteQueueItem) $r5;

        $z0 = virtualinvoke r1.<java.lang.Class: boolean isInstance(java.lang.Object)>(r2);

        if $z0 == 0 goto label4;

        $r6 = virtualinvoke r1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(r2);

        $r7 = (com.android.server.wm.PersisterQueue$WriteQueueItem) $r6;

        $z1 = interfaceinvoke r11.<java.util.function.Predicate: boolean test(java.lang.Object)>($r7);

        if $z1 == 0 goto label4;

        $r8 = r0.<com.android.server.wm.PersisterQueue: java.util.ArrayList mWriteQueue>;

        virtualinvoke $r8.<java.util.ArrayList: java.lang.Object remove(int)>(i1);

     label4:
        i1 = i1 + -1;

        goto label2;

     label5:
        exitmonitor r0;

        return;

     label6:
        $r10 := @caughtexception;

        exitmonitor r0;

        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
    }

    boolean removeListener(com.android.server.wm.PersisterQueue$Listener)
    {
        com.android.server.wm.PersisterQueue r0;
        com.android.server.wm.PersisterQueue$Listener r1;
        java.util.ArrayList $r2;
        boolean $z0;

        r0 := @this: com.android.server.wm.PersisterQueue;

        r1 := @parameter0: com.android.server.wm.PersisterQueue$Listener;

        $r2 = r0.<com.android.server.wm.PersisterQueue: java.util.ArrayList mListeners>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        return $z0;
    }

    void startPersisting()
    {
        com.android.server.wm.PersisterQueue r0;
        com.android.server.wm.PersisterQueue$LazyTaskWriterThread $r2, $r3;
        boolean $z0;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.wm.PersisterQueue;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.wm.PersisterQueue: com.android.server.wm.PersisterQueue$LazyTaskWriterThread mLazyTaskWriterThread>;

        $z0 = virtualinvoke $r2.<com.android.server.wm.PersisterQueue$LazyTaskWriterThread: boolean isAlive()>();

        if $z0 != 0 goto label2;

        $r3 = r0.<com.android.server.wm.PersisterQueue: com.android.server.wm.PersisterQueue$LazyTaskWriterThread mLazyTaskWriterThread>;

        virtualinvoke $r3.<com.android.server.wm.PersisterQueue$LazyTaskWriterThread: void start()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void stopPersisting() throws java.lang.InterruptedException
    {
        com.android.server.wm.PersisterQueue r0;
        com.android.server.wm.PersisterQueue$LazyTaskWriterThread $r2, $r3, $r4;
        boolean $z0;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.wm.PersisterQueue;

        $r2 = r0.<com.android.server.wm.PersisterQueue: com.android.server.wm.PersisterQueue$LazyTaskWriterThread mLazyTaskWriterThread>;

        $z0 = virtualinvoke $r2.<com.android.server.wm.PersisterQueue$LazyTaskWriterThread: boolean isAlive()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        entermonitor r0;

     label2:
        $r3 = r0.<com.android.server.wm.PersisterQueue: com.android.server.wm.PersisterQueue$LazyTaskWriterThread mLazyTaskWriterThread>;

        virtualinvoke $r3.<com.android.server.wm.PersisterQueue$LazyTaskWriterThread: void interrupt()>();

        exitmonitor r0;

     label3:
        $r4 = r0.<com.android.server.wm.PersisterQueue: com.android.server.wm.PersisterQueue$LazyTaskWriterThread mLazyTaskWriterThread>;

        virtualinvoke $r4.<com.android.server.wm.PersisterQueue$LazyTaskWriterThread: void join()>();

        return;

     label4:
        $r5 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r5;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    void updateLastOrAddItem(com.android.server.wm.PersisterQueue$WriteQueueItem, boolean)
    {
        com.android.server.wm.PersisterQueue r0;
        boolean z0;
        java.lang.Class $r2;
        java.lang.Throwable $r3;
        com.android.server.wm.PersisterQueue$WriteQueueItem r4, r6;
        com.android.server.wm._$$Lambda$pAuPvwUqsKCejIrAPrx0ARZSqeY r5;

        r0 := @this: com.android.server.wm.PersisterQueue;

        r4 := @parameter0: com.android.server.wm.PersisterQueue$WriteQueueItem;

        z0 := @parameter1: boolean;

        entermonitor r0;

     label1:
        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r4);

        r5 = new com.android.server.wm._$$Lambda$pAuPvwUqsKCejIrAPrx0ARZSqeY;

        specialinvoke r5.<com.android.server.wm._$$Lambda$pAuPvwUqsKCejIrAPrx0ARZSqeY: void <init>(com.android.server.wm.PersisterQueue$WriteQueueItem)>(r4);

        $r2 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();

        r6 = virtualinvoke r0.<com.android.server.wm.PersisterQueue: com.android.server.wm.PersisterQueue$WriteQueueItem findLastItem(java.util.function.Predicate,java.lang.Class)>(r5, $r2);

     label2:
        if r6 != null goto label5;

     label3:
        virtualinvoke r0.<com.android.server.wm.PersisterQueue: void addItem(com.android.server.wm.PersisterQueue$WriteQueueItem,boolean)>(r4, z0);

     label4:
        goto label6;

     label5:
        interfaceinvoke r6.<com.android.server.wm.PersisterQueue$WriteQueueItem: void updateFrom(com.android.server.wm.PersisterQueue$WriteQueueItem)>(r4);

     label6:
        virtualinvoke r0.<com.android.server.wm.PersisterQueue: void yieldIfQueueTooDeep()>();

     label7:
        exitmonitor r0;

        return;

     label8:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    void yieldIfQueueTooDeep()
    {
        com.android.server.wm.PersisterQueue r0;
        long $l0;
        byte $b1;
        java.lang.Throwable $r2;
        boolean z0;

        r0 := @this: com.android.server.wm.PersisterQueue;

        z0 = 0;

        entermonitor r0;

     label1:
        $l0 = r0.<com.android.server.wm.PersisterQueue: long mNextWriteTime>;

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label3;

     label2:
        z0 = 1;

     label3:
        exitmonitor r0;

     label4:
        if z0 == 0 goto label5;

        staticinvoke <java.lang.Thread: void yield()>();

     label5:
        return;

     label6:
        $r2 := @caughtexception;

     label7:
        exitmonitor r0;

     label8:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }
}
