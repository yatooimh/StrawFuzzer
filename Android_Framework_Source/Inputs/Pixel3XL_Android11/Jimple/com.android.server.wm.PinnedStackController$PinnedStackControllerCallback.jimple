class com.android.server.wm.PinnedStackController$PinnedStackControllerCallback extends android.view.IPinnedStackController$Stub
{
    final com.android.server.wm.PinnedStackController this$0;

    private void <init>(com.android.server.wm.PinnedStackController)
    {
        com.android.server.wm.PinnedStackController$PinnedStackControllerCallback r0;
        com.android.server.wm.PinnedStackController r1;

        r0 := @this: com.android.server.wm.PinnedStackController$PinnedStackControllerCallback;

        r1 := @parameter0: com.android.server.wm.PinnedStackController;

        r0.<com.android.server.wm.PinnedStackController$PinnedStackControllerCallback: com.android.server.wm.PinnedStackController this$0> = r1;

        specialinvoke r0.<android.view.IPinnedStackController$Stub: void <init>()>();

        return;
    }

    void <init>(com.android.server.wm.PinnedStackController, com.android.server.wm.PinnedStackController$1)
    {
        com.android.server.wm.PinnedStackController$PinnedStackControllerCallback r0;
        com.android.server.wm.PinnedStackController r1;
        com.android.server.wm.PinnedStackController$1 r2;

        r0 := @this: com.android.server.wm.PinnedStackController$PinnedStackControllerCallback;

        r1 := @parameter0: com.android.server.wm.PinnedStackController;

        r2 := @parameter1: com.android.server.wm.PinnedStackController$1;

        specialinvoke r0.<com.android.server.wm.PinnedStackController$PinnedStackControllerCallback: void <init>(com.android.server.wm.PinnedStackController)>(r1);

        return;
    }

    public int getDisplayRotation()
    {
        com.android.server.wm.PinnedStackController$PinnedStackControllerCallback r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        int i0;
        com.android.server.wm.PinnedStackController $r3, $r5;
        com.android.server.wm.WindowManagerService $r4;
        android.view.DisplayInfo $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.server.wm.PinnedStackController$PinnedStackControllerCallback;

        $r3 = r0.<com.android.server.wm.PinnedStackController$PinnedStackControllerCallback: com.android.server.wm.PinnedStackController this$0>;

        $r4 = staticinvoke <com.android.server.wm.PinnedStackController: com.android.server.wm.WindowManagerService access$200(com.android.server.wm.PinnedStackController)>($r3);

        r1 = $r4.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r5 = r0.<com.android.server.wm.PinnedStackController$PinnedStackControllerCallback: com.android.server.wm.PinnedStackController this$0>;

        $r6 = staticinvoke <com.android.server.wm.PinnedStackController: android.view.DisplayInfo access$300(com.android.server.wm.PinnedStackController)>($r5);

        i0 = $r6.<android.view.DisplayInfo: int rotation>;

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return i0;

     label3:
        $r7 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
