class com.android.server.wm.PinnedStackController extends java.lang.Object
{
    private static final java.lang.String TAG;
    private java.util.ArrayList mActions;
    private float mAspectRatio;
    private final com.android.server.wm.PinnedStackController$PinnedStackControllerCallback mCallbacks;
    private final com.android.server.wm.DisplayContent mDisplayContent;
    private final android.view.DisplayInfo mDisplayInfo;
    private int mImeHeight;
    private boolean mIsImeShowing;
    private boolean mIsPipWindowingModeChanging;
    private float mMaxAspectRatio;
    private float mMinAspectRatio;
    private android.view.IPinnedStackListener mPinnedStackListener;
    private final com.android.server.wm.PinnedStackController$PinnedStackListenerDeathHandler mPinnedStackListenerDeathHandler;
    private final com.android.server.wm.WindowManagerService mService;
    private final android.util.DisplayMetrics mTmpMetrics;

    void <init>(com.android.server.wm.WindowManagerService, com.android.server.wm.DisplayContent)
    {
        com.android.server.wm.PinnedStackController r0;
        com.android.server.wm.WindowManagerService r1;
        com.android.server.wm.DisplayContent r2;
        com.android.server.wm.PinnedStackController$PinnedStackListenerDeathHandler $r3;
        com.android.server.wm.PinnedStackController$PinnedStackControllerCallback $r4;
        java.util.ArrayList $r5;
        android.view.DisplayInfo $r6, $r8, $r9;
        android.util.DisplayMetrics $r7;

        r0 := @this: com.android.server.wm.PinnedStackController;

        r1 := @parameter0: com.android.server.wm.WindowManagerService;

        r2 := @parameter1: com.android.server.wm.DisplayContent;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new com.android.server.wm.PinnedStackController$PinnedStackListenerDeathHandler;

        specialinvoke $r3.<com.android.server.wm.PinnedStackController$PinnedStackListenerDeathHandler: void <init>(com.android.server.wm.PinnedStackController,com.android.server.wm.PinnedStackController$1)>(r0, null);

        r0.<com.android.server.wm.PinnedStackController: com.android.server.wm.PinnedStackController$PinnedStackListenerDeathHandler mPinnedStackListenerDeathHandler> = $r3;

        $r4 = new com.android.server.wm.PinnedStackController$PinnedStackControllerCallback;

        specialinvoke $r4.<com.android.server.wm.PinnedStackController$PinnedStackControllerCallback: void <init>(com.android.server.wm.PinnedStackController,com.android.server.wm.PinnedStackController$1)>(r0, null);

        r0.<com.android.server.wm.PinnedStackController: com.android.server.wm.PinnedStackController$PinnedStackControllerCallback mCallbacks> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.wm.PinnedStackController: java.util.ArrayList mActions> = $r5;

        r0.<com.android.server.wm.PinnedStackController: float mAspectRatio> = -1.0F;

        $r6 = new android.view.DisplayInfo;

        specialinvoke $r6.<android.view.DisplayInfo: void <init>()>();

        r0.<com.android.server.wm.PinnedStackController: android.view.DisplayInfo mDisplayInfo> = $r6;

        $r7 = new android.util.DisplayMetrics;

        specialinvoke $r7.<android.util.DisplayMetrics: void <init>()>();

        r0.<com.android.server.wm.PinnedStackController: android.util.DisplayMetrics mTmpMetrics> = $r7;

        r0.<com.android.server.wm.PinnedStackController: com.android.server.wm.WindowManagerService mService> = r1;

        r0.<com.android.server.wm.PinnedStackController: com.android.server.wm.DisplayContent mDisplayContent> = r2;

        $r8 = r0.<com.android.server.wm.PinnedStackController: android.view.DisplayInfo mDisplayInfo>;

        $r9 = virtualinvoke r2.<com.android.server.wm.DisplayContent: android.view.DisplayInfo getDisplayInfo()>();

        virtualinvoke $r8.<android.view.DisplayInfo: void copyFrom(android.view.DisplayInfo)>($r9);

        specialinvoke r0.<com.android.server.wm.PinnedStackController: void reloadResources()>();

        return;
    }

    static com.android.server.wm.WindowManagerService access$200(com.android.server.wm.PinnedStackController)
    {
        com.android.server.wm.PinnedStackController r0;
        com.android.server.wm.WindowManagerService $r1;

        r0 := @parameter0: com.android.server.wm.PinnedStackController;

        $r1 = r0.<com.android.server.wm.PinnedStackController: com.android.server.wm.WindowManagerService mService>;

        return $r1;
    }

    static android.view.DisplayInfo access$300(com.android.server.wm.PinnedStackController)
    {
        com.android.server.wm.PinnedStackController r0;
        android.view.DisplayInfo $r1;

        r0 := @parameter0: com.android.server.wm.PinnedStackController;

        $r1 = r0.<com.android.server.wm.PinnedStackController: android.view.DisplayInfo mDisplayInfo>;

        return $r1;
    }

    static android.view.IPinnedStackListener access$400(com.android.server.wm.PinnedStackController)
    {
        com.android.server.wm.PinnedStackController r0;
        android.view.IPinnedStackListener $r1;

        r0 := @parameter0: com.android.server.wm.PinnedStackController;

        $r1 = r0.<com.android.server.wm.PinnedStackController: android.view.IPinnedStackListener mPinnedStackListener>;

        return $r1;
    }

    static android.view.IPinnedStackListener access$402(com.android.server.wm.PinnedStackController, android.view.IPinnedStackListener)
    {
        com.android.server.wm.PinnedStackController r0;
        android.view.IPinnedStackListener r1;

        r0 := @parameter0: com.android.server.wm.PinnedStackController;

        r1 := @parameter1: android.view.IPinnedStackListener;

        r0.<com.android.server.wm.PinnedStackController: android.view.IPinnedStackListener mPinnedStackListener> = r1;

        return r1;
    }

    static com.android.server.wm.PinnedStackController$PinnedStackListenerDeathHandler access$500(com.android.server.wm.PinnedStackController)
    {
        com.android.server.wm.PinnedStackController r0;
        com.android.server.wm.PinnedStackController$PinnedStackListenerDeathHandler $r1;

        r0 := @parameter0: com.android.server.wm.PinnedStackController;

        $r1 = r0.<com.android.server.wm.PinnedStackController: com.android.server.wm.PinnedStackController$PinnedStackListenerDeathHandler mPinnedStackListenerDeathHandler>;

        return $r1;
    }

    private void notifyActionsChanged(java.util.List)
    {
        com.android.server.wm.PinnedStackController r0;
        android.view.IPinnedStackListener r1;
        android.content.pm.ParceledListSlice r2;
        android.os.RemoteException $r3;
        java.util.List r4;

        r0 := @this: com.android.server.wm.PinnedStackController;

        r4 := @parameter0: java.util.List;

        r1 = r0.<com.android.server.wm.PinnedStackController: android.view.IPinnedStackListener mPinnedStackListener>;

        if r1 == null goto label4;

     label1:
        r2 = new android.content.pm.ParceledListSlice;

        specialinvoke r2.<android.content.pm.ParceledListSlice: void <init>(java.util.List)>(r4);

        interfaceinvoke r1.<android.view.IPinnedStackListener: void onActionsChanged(android.content.pm.ParceledListSlice)>(r2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", "Error delivering actions changed event.", $r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void notifyAspectRatioChanged(float)
    {
        com.android.server.wm.PinnedStackController r0;
        float f0;
        android.os.RemoteException $r1;
        android.view.IPinnedStackListener r2;

        r0 := @this: com.android.server.wm.PinnedStackController;

        f0 := @parameter0: float;

        r2 = r0.<com.android.server.wm.PinnedStackController: android.view.IPinnedStackListener mPinnedStackListener>;

        if r2 != null goto label1;

        return;

     label1:
        interfaceinvoke r2.<android.view.IPinnedStackListener: void onAspectRatioChanged(float)>(f0);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", "Error delivering aspect ratio changed event.", $r1);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void notifyDisplayInfoChanged(android.view.DisplayInfo)
    {
        com.android.server.wm.PinnedStackController r0;
        android.view.IPinnedStackListener r1;
        android.os.RemoteException $r2;
        android.view.DisplayInfo r3;

        r0 := @this: com.android.server.wm.PinnedStackController;

        r3 := @parameter0: android.view.DisplayInfo;

        r1 = r0.<com.android.server.wm.PinnedStackController: android.view.IPinnedStackListener mPinnedStackListener>;

        if r1 != null goto label1;

        return;

     label1:
        interfaceinvoke r1.<android.view.IPinnedStackListener: void onDisplayInfoChanged(android.view.DisplayInfo)>(r3);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", "Error delivering DisplayInfo changed event.", $r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void notifyImeVisibilityChanged(boolean, int)
    {
        com.android.server.wm.PinnedStackController r0;
        boolean z0;
        int i0;
        android.os.RemoteException $r1;
        android.view.IPinnedStackListener r2;

        r0 := @this: com.android.server.wm.PinnedStackController;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r2 = r0.<com.android.server.wm.PinnedStackController: android.view.IPinnedStackListener mPinnedStackListener>;

        if r2 == null goto label4;

     label1:
        interfaceinvoke r2.<android.view.IPinnedStackListener: void onImeVisibilityChanged(boolean,int)>(z0, i0);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", "Error delivering bounds changed event.", $r1);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void notifyMovementBoundsChanged(boolean)
    {
        com.android.server.wm.PinnedStackController r0;
        boolean z0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.WindowManagerService $r2;
        android.view.IPinnedStackListener $r3, $r4;
        android.os.RemoteException $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.wm.PinnedStackController;

        z0 := @parameter0: boolean;

        $r2 = r0.<com.android.server.wm.PinnedStackController: com.android.server.wm.WindowManagerService mService>;

        r1 = $r2.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label01:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.PinnedStackController: android.view.IPinnedStackListener mPinnedStackListener>;

        if $r3 != null goto label03;

        exitmonitor r1;

     label02:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label03:
        $r4 = r0.<com.android.server.wm.PinnedStackController: android.view.IPinnedStackListener mPinnedStackListener>;

        interfaceinvoke $r4.<android.view.IPinnedStackListener: void onMovementBoundsChanged(boolean)>(z0);

     label04:
        goto label07;

     label05:
        $r5 := @caughtexception;

     label06:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", "Error delivering actions changed event.", $r5);

     label07:
        exitmonitor r1;

     label08:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label09:
        $r6 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    private void reloadResources()
    {
        com.android.server.wm.PinnedStackController r0;
        android.content.res.Resources r1;
        com.android.server.wm.WindowManagerService $r2;
        android.content.Context $r3;
        com.android.server.wm.DisplayContent $r4;
        android.view.Display $r5;
        android.util.DisplayMetrics $r6;
        float $f0, $f1;

        r0 := @this: com.android.server.wm.PinnedStackController;

        $r2 = r0.<com.android.server.wm.PinnedStackController: com.android.server.wm.WindowManagerService mService>;

        $r3 = $r2.<com.android.server.wm.WindowManagerService: android.content.Context mContext>;

        r1 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = r0.<com.android.server.wm.PinnedStackController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r5 = virtualinvoke $r4.<com.android.server.wm.DisplayContent: android.view.Display getDisplay()>();

        $r6 = r0.<com.android.server.wm.PinnedStackController: android.util.DisplayMetrics mTmpMetrics>;

        virtualinvoke $r5.<android.view.Display: void getRealMetrics(android.util.DisplayMetrics)>($r6);

        $f0 = virtualinvoke r1.<android.content.res.Resources: float getFloat(int)>(17105072);

        r0.<com.android.server.wm.PinnedStackController: float mMinAspectRatio> = $f0;

        $f1 = virtualinvoke r1.<android.content.res.Resources: float getFloat(int)>(17105071);

        r0.<com.android.server.wm.PinnedStackController: float mMaxAspectRatio> = $f1;

        return;
    }

    private void setDisplayInfo(android.view.DisplayInfo)
    {
        com.android.server.wm.PinnedStackController r0;
        android.view.DisplayInfo r1, $r2, $r3;

        r0 := @this: com.android.server.wm.PinnedStackController;

        r1 := @parameter0: android.view.DisplayInfo;

        $r2 = r0.<com.android.server.wm.PinnedStackController: android.view.DisplayInfo mDisplayInfo>;

        virtualinvoke $r2.<android.view.DisplayInfo: void copyFrom(android.view.DisplayInfo)>(r1);

        $r3 = r0.<com.android.server.wm.PinnedStackController: android.view.DisplayInfo mDisplayInfo>;

        specialinvoke r0.<com.android.server.wm.PinnedStackController: void notifyDisplayInfoChanged(android.view.DisplayInfo)>($r3);

        return;
    }

    void dump(java.lang.String, java.io.PrintWriter)
    {
        com.android.server.wm.PinnedStackController r0;
        java.lang.String r1, $r7, $r12, $r17, $r22, $r27, $r32, $r37, $r42, $r48, $r56, $r60;
        java.io.PrintWriter r2;
        java.lang.StringBuilder $r4, $r8, $r13, $r18, $r23, $r28, $r34, $r39, $r43, $r51, $r57;
        boolean $z0, $z1;
        int $i0, $i1, i2;
        float $f0, $f1, $f2;
        java.util.ArrayList $r33, $r38, $r49;
        android.view.DisplayInfo $r46;
        java.lang.Object $r50;
        android.app.RemoteAction r69;

        r0 := @this: com.android.server.wm.PinnedStackController;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.PrintWriter;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PinnedStackController");

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mIsImeShowing=");

        $z0 = r0.<com.android.server.wm.PinnedStackController: boolean mIsImeShowing>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mImeHeight=");

        $i0 = r0.<com.android.server.wm.PinnedStackController: int mImeHeight>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r17);

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mAspectRatio=");

        $f0 = r0.<com.android.server.wm.PinnedStackController: float mAspectRatio>;

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r22);

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mMinAspectRatio=");

        $f1 = r0.<com.android.server.wm.PinnedStackController: float mMinAspectRatio>;

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r27);

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mMaxAspectRatio=");

        $f2 = r0.<com.android.server.wm.PinnedStackController: float mMaxAspectRatio>;

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        $r32 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r32);

        $r33 = r0.<com.android.server.wm.PinnedStackController: java.util.ArrayList mActions>;

        $z1 = virtualinvoke $r33.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mActions=[]");

        $r60 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r60);

        goto label4;

     label1:
        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mActions=[");

        $r37 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r37);

        i2 = 0;

     label2:
        $r38 = r0.<com.android.server.wm.PinnedStackController: java.util.ArrayList mActions>;

        $i1 = virtualinvoke $r38.<java.util.ArrayList: int size()>();

        if i2 >= $i1 goto label3;

        $r49 = r0.<com.android.server.wm.PinnedStackController: java.util.ArrayList mActions>;

        $r50 = virtualinvoke $r49.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r69 = (android.app.RemoteAction) $r50;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    Action[");

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r56 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r56);

        virtualinvoke r69.<android.app.RemoteAction: void dump(java.lang.String,java.io.PrintWriter)>("", r2);

        i2 = i2 + 1;

        goto label2;

     label3:
        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ]");

        $r42 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r42);

     label4:
        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mDisplayInfo=");

        $r46 = r0.<com.android.server.wm.PinnedStackController: android.view.DisplayInfo mDisplayInfo>;

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r46);

        $r48 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r48);

        return;
    }

    float getAspectRatio()
    {
        com.android.server.wm.PinnedStackController r0;
        float $f0;

        r0 := @this: com.android.server.wm.PinnedStackController;

        $f0 = r0.<com.android.server.wm.PinnedStackController: float mAspectRatio>;

        return $f0;
    }

    boolean isPipActiveOrWindowingModeChanging()
    {
        com.android.server.wm.PinnedStackController r0;
        boolean z0, $z1, z2;
        com.android.server.wm.ActivityStack r1;
        com.android.server.wm.DisplayContent $r2;
        com.android.server.wm.TaskDisplayArea $r3;

        r0 := @this: com.android.server.wm.PinnedStackController;

        z0 = r0.<com.android.server.wm.PinnedStackController: boolean mIsPipWindowingModeChanging>;

        z2 = 1;

        if z0 == 0 goto label1;

        return 1;

     label1:
        $r2 = r0.<com.android.server.wm.PinnedStackController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r3 = virtualinvoke $r2.<com.android.server.wm.DisplayContent: com.android.server.wm.TaskDisplayArea getDefaultTaskDisplayArea()>();

        r1 = virtualinvoke $r3.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getRootPinnedTask()>();

        if r1 == null goto label2;

        $z1 = virtualinvoke r1.<com.android.server.wm.Task: boolean hasChild()>();

        if $z1 == 0 goto label2;

        goto label3;

     label2:
        z2 = 0;

     label3:
        return z2;
    }

    public boolean isValidPictureInPictureAspectRatio(float)
    {
        com.android.server.wm.PinnedStackController r0;
        float f0, $f1, $f2;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.wm.PinnedStackController;

        f0 := @parameter0: float;

        $f1 = r0.<com.android.server.wm.PinnedStackController: float mMinAspectRatio>;

        $i0 = staticinvoke <java.lang.Float: int compare(float,float)>($f1, f0);

        if $i0 > 0 goto label1;

        $f2 = r0.<com.android.server.wm.PinnedStackController: float mMaxAspectRatio>;

        $i1 = staticinvoke <java.lang.Float: int compare(float,float)>(f0, $f2);

        if $i1 > 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    void onActivityHidden(android.content.ComponentName)
    {
        com.android.server.wm.PinnedStackController r0;
        android.view.IPinnedStackListener r1;
        android.os.RemoteException $r2;
        android.content.ComponentName r3;

        r0 := @this: com.android.server.wm.PinnedStackController;

        r3 := @parameter0: android.content.ComponentName;

        r1 = r0.<com.android.server.wm.PinnedStackController: android.view.IPinnedStackListener mPinnedStackListener>;

        if r1 != null goto label1;

        return;

     label1:
        interfaceinvoke r1.<android.view.IPinnedStackListener: void onActivityHidden(android.content.ComponentName)>(r3);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", "Error delivering reset reentry fraction event.", $r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void onConfigurationChanged()
    {
        com.android.server.wm.PinnedStackController r0;

        r0 := @this: com.android.server.wm.PinnedStackController;

        specialinvoke r0.<com.android.server.wm.PinnedStackController: void reloadResources()>();

        return;
    }

    void onDisplayInfoChanged(android.view.DisplayInfo)
    {
        com.android.server.wm.PinnedStackController r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.WindowManagerService $r2;
        java.lang.Throwable $r3;
        android.view.DisplayInfo r4;

        r0 := @this: com.android.server.wm.PinnedStackController;

        r4 := @parameter0: android.view.DisplayInfo;

        $r2 = r0.<com.android.server.wm.PinnedStackController: com.android.server.wm.WindowManagerService mService>;

        r1 = $r2.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        specialinvoke r0.<com.android.server.wm.PinnedStackController: void setDisplayInfo(android.view.DisplayInfo)>(r4);

        specialinvoke r0.<com.android.server.wm.PinnedStackController: void notifyMovementBoundsChanged(boolean)>(0);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void registerPinnedStackListener(android.view.IPinnedStackListener)
    {
        com.android.server.wm.PinnedStackController r0;
        android.os.IBinder $r1;
        com.android.server.wm.PinnedStackController$PinnedStackListenerDeathHandler $r2;
        com.android.server.wm.PinnedStackController$PinnedStackControllerCallback $r3;
        android.view.DisplayInfo $r4;
        int $i0;
        boolean $z0;
        java.util.ArrayList $r5;
        android.os.RemoteException $r6;
        android.view.IPinnedStackListener r7;

        r0 := @this: com.android.server.wm.PinnedStackController;

        r7 := @parameter0: android.view.IPinnedStackListener;

     label1:
        $r1 = interfaceinvoke r7.<android.view.IPinnedStackListener: android.os.IBinder asBinder()>();

        $r2 = r0.<com.android.server.wm.PinnedStackController: com.android.server.wm.PinnedStackController$PinnedStackListenerDeathHandler mPinnedStackListenerDeathHandler>;

        interfaceinvoke $r1.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        $r3 = r0.<com.android.server.wm.PinnedStackController: com.android.server.wm.PinnedStackController$PinnedStackControllerCallback mCallbacks>;

        interfaceinvoke r7.<android.view.IPinnedStackListener: void onListenerRegistered(android.view.IPinnedStackController)>($r3);

        r0.<com.android.server.wm.PinnedStackController: android.view.IPinnedStackListener mPinnedStackListener> = r7;

        $r4 = r0.<com.android.server.wm.PinnedStackController: android.view.DisplayInfo mDisplayInfo>;

        specialinvoke r0.<com.android.server.wm.PinnedStackController: void notifyDisplayInfoChanged(android.view.DisplayInfo)>($r4);

        $z0 = r0.<com.android.server.wm.PinnedStackController: boolean mIsImeShowing>;

        $i0 = r0.<com.android.server.wm.PinnedStackController: int mImeHeight>;

        specialinvoke r0.<com.android.server.wm.PinnedStackController: void notifyImeVisibilityChanged(boolean,int)>($z0, $i0);

        specialinvoke r0.<com.android.server.wm.PinnedStackController: void notifyMovementBoundsChanged(boolean)>(0);

        $r5 = r0.<com.android.server.wm.PinnedStackController: java.util.ArrayList mActions>;

        specialinvoke r0.<com.android.server.wm.PinnedStackController: void notifyActionsChanged(java.util.List)>($r5);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", "Failed to register pinned stack listener", $r6);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void setActions(java.util.List)
    {
        com.android.server.wm.PinnedStackController r0;
        java.util.List r1;
        java.util.ArrayList $r2, $r3, $r4;

        r0 := @this: com.android.server.wm.PinnedStackController;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<com.android.server.wm.PinnedStackController: java.util.ArrayList mActions>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

        if r1 == null goto label1;

        $r4 = r0.<com.android.server.wm.PinnedStackController: java.util.ArrayList mActions>;

        virtualinvoke $r4.<java.util.ArrayList: boolean addAll(java.util.Collection)>(r1);

     label1:
        $r3 = r0.<com.android.server.wm.PinnedStackController: java.util.ArrayList mActions>;

        specialinvoke r0.<com.android.server.wm.PinnedStackController: void notifyActionsChanged(java.util.List)>($r3);

        return;
    }

    void setAdjustedForIme(boolean, int)
    {
        com.android.server.wm.PinnedStackController r0;
        int i0, $i1, i2;
        boolean $z0, z1, z2;

        r0 := @this: com.android.server.wm.PinnedStackController;

        z1 := @parameter0: boolean;

        i0 := @parameter1: int;

        i2 = 0;

        if z1 == 0 goto label1;

        if i0 <= 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        if z2 == 0 goto label3;

        i2 = i0;

     label3:
        $z0 = r0.<com.android.server.wm.PinnedStackController: boolean mIsImeShowing>;

        if z2 != $z0 goto label4;

        $i1 = r0.<com.android.server.wm.PinnedStackController: int mImeHeight>;

        if i2 != $i1 goto label4;

        return;

     label4:
        r0.<com.android.server.wm.PinnedStackController: boolean mIsImeShowing> = z2;

        r0.<com.android.server.wm.PinnedStackController: int mImeHeight> = i2;

        specialinvoke r0.<com.android.server.wm.PinnedStackController: void notifyImeVisibilityChanged(boolean,int)>(z2, i2);

        specialinvoke r0.<com.android.server.wm.PinnedStackController: void notifyMovementBoundsChanged(boolean)>(1);

        return;
    }

    void setAspectRatio(float)
    {
        com.android.server.wm.PinnedStackController r0;
        float f0, $f1;
        int $i0;

        r0 := @this: com.android.server.wm.PinnedStackController;

        f0 := @parameter0: float;

        $f1 = r0.<com.android.server.wm.PinnedStackController: float mAspectRatio>;

        $i0 = staticinvoke <java.lang.Float: int compare(float,float)>($f1, f0);

        if $i0 == 0 goto label1;

        r0.<com.android.server.wm.PinnedStackController: float mAspectRatio> = f0;

        specialinvoke r0.<com.android.server.wm.PinnedStackController: void notifyAspectRatioChanged(float)>(f0);

        specialinvoke r0.<com.android.server.wm.PinnedStackController: void notifyMovementBoundsChanged(boolean)>(0);

     label1:
        return;
    }

    void setPipWindowingModeChanging(boolean)
    {
        com.android.server.wm.PinnedStackController r0;
        boolean z0;

        r0 := @this: com.android.server.wm.PinnedStackController;

        z0 := @parameter0: boolean;

        r0.<com.android.server.wm.PinnedStackController: boolean mIsPipWindowingModeChanging> = z0;

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.wm.PinnedStackController: java.lang.String TAG> = "WindowManager";

        return;
    }
}
