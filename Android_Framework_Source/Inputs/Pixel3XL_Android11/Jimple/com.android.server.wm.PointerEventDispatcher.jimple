public class com.android.server.wm.PointerEventDispatcher extends android.view.InputEventReceiver
{
    private final java.util.ArrayList mListeners;
    private android.view.WindowManagerPolicyConstants$PointerEventListener[] mListenersArray;

    public void <init>(android.view.InputChannel)
    {
        com.android.server.wm.PointerEventDispatcher r0;
        android.view.InputChannel r1;
        android.os.Handler $r2;
        android.os.Looper $r3;
        java.util.ArrayList $r4;
        android.view.WindowManagerPolicyConstants$PointerEventListener[] $r5;

        r0 := @this: com.android.server.wm.PointerEventDispatcher;

        r1 := @parameter0: android.view.InputChannel;

        $r2 = staticinvoke <com.android.server.UiThread: android.os.Handler getHandler()>();

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke r0.<android.view.InputEventReceiver: void <init>(android.view.InputChannel,android.os.Looper)>(r1, $r3);

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.wm.PointerEventDispatcher: java.util.ArrayList mListeners> = $r4;

        $r5 = newarray (android.view.WindowManagerPolicyConstants$PointerEventListener)[0];

        r0.<com.android.server.wm.PointerEventDispatcher: android.view.WindowManagerPolicyConstants$PointerEventListener[] mListenersArray> = $r5;

        return;
    }

    public void dispose()
    {
        com.android.server.wm.PointerEventDispatcher r0;
        java.util.ArrayList r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.wm.PointerEventDispatcher;

        specialinvoke r0.<android.view.InputEventReceiver: void dispose()>();

        r1 = r0.<com.android.server.wm.PointerEventDispatcher: java.util.ArrayList mListeners>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.wm.PointerEventDispatcher: java.util.ArrayList mListeners>;

        virtualinvoke $r3.<java.util.ArrayList: void clear()>();

        r0.<com.android.server.wm.PointerEventDispatcher: android.view.WindowManagerPolicyConstants$PointerEventListener[] mListenersArray> = null;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onInputEvent(android.view.InputEvent)
    {
        com.android.server.wm.PointerEventDispatcher r0;
        android.view.InputEvent r1;
        boolean $z0;
        int $i0, $i1, $i2, i3, $i4;
        android.view.WindowManagerPolicyConstants$PointerEventListener[] $r2, r11, r12;
        android.view.WindowManagerPolicyConstants$PointerEventListener $r3;
        java.util.ArrayList $r4, $r5, r10;
        java.lang.Throwable $r7, $r8;
        android.view.MotionEvent r9;

        r0 := @this: com.android.server.wm.PointerEventDispatcher;

        r1 := @parameter0: android.view.InputEvent;

     label01:
        $z0 = r1 instanceof android.view.MotionEvent;

        if $z0 == 0 goto label10;

        $i0 = virtualinvoke r1.<android.view.InputEvent: int getSource()>();

        $i1 = $i0 & 2;

        if $i1 == 0 goto label10;

        r9 = (android.view.MotionEvent) r1;

        r10 = r0.<com.android.server.wm.PointerEventDispatcher: java.util.ArrayList mListeners>;

        entermonitor r10;

     label02:
        $r2 = r0.<com.android.server.wm.PointerEventDispatcher: android.view.WindowManagerPolicyConstants$PointerEventListener[] mListenersArray>;

        if $r2 != null goto label03;

        $r4 = r0.<com.android.server.wm.PointerEventDispatcher: java.util.ArrayList mListeners>;

        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        r11 = newarray (android.view.WindowManagerPolicyConstants$PointerEventListener)[$i2];

        r0.<com.android.server.wm.PointerEventDispatcher: android.view.WindowManagerPolicyConstants$PointerEventListener[] mListenersArray> = r11;

        $r5 = r0.<com.android.server.wm.PointerEventDispatcher: java.util.ArrayList mListeners>;

        virtualinvoke $r5.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r11);

     label03:
        r12 = r0.<com.android.server.wm.PointerEventDispatcher: android.view.WindowManagerPolicyConstants$PointerEventListener[] mListenersArray>;

        exitmonitor r10;

     label04:
        i3 = 0;

     label05:
        $i4 = lengthof r12;

        if i3 >= $i4 goto label10;

        $r3 = r12[i3];

        interfaceinvoke $r3.<android.view.WindowManagerPolicyConstants$PointerEventListener: void onPointerEvent(android.view.MotionEvent)>(r9);

     label06:
        i3 = i3 + 1;

        goto label05;

     label07:
        $r7 := @caughtexception;

     label08:
        exitmonitor r10;

     label09:
        throw $r7;

     label10:
        virtualinvoke r0.<com.android.server.wm.PointerEventDispatcher: void finishInputEvent(android.view.InputEvent,boolean)>(r1, 0);

        return;

     label11:
        $r8 := @caughtexception;

        virtualinvoke r0.<com.android.server.wm.PointerEventDispatcher: void finishInputEvent(android.view.InputEvent,boolean)>(r1, 0);

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public void registerInputEventListener(android.view.WindowManagerPolicyConstants$PointerEventListener)
    {
        com.android.server.wm.PointerEventDispatcher r0;
        java.util.ArrayList r1, $r4, $r9;
        java.lang.IllegalStateException r2;
        java.lang.StringBuilder r3;
        boolean $z0;
        java.lang.String $r8;
        java.lang.Throwable $r10;
        android.view.WindowManagerPolicyConstants$PointerEventListener r11;

        r0 := @this: com.android.server.wm.PointerEventDispatcher;

        r11 := @parameter0: android.view.WindowManagerPolicyConstants$PointerEventListener;

        r1 = r0.<com.android.server.wm.PointerEventDispatcher: java.util.ArrayList mListeners>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.wm.PointerEventDispatcher: java.util.ArrayList mListeners>;

        $z0 = virtualinvoke $r4.<java.util.ArrayList: boolean contains(java.lang.Object)>(r11);

        if $z0 != 0 goto label3;

        $r9 = r0.<com.android.server.wm.PointerEventDispatcher: java.util.ArrayList mListeners>;

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>(r11);

        r0.<com.android.server.wm.PointerEventDispatcher: android.view.WindowManagerPolicyConstants$PointerEventListener[] mListenersArray> = null;

        exitmonitor r1;

     label2:
        return;

     label3:
        r2 = new java.lang.IllegalStateException;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("registerInputEventListener: trying to register");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" twice.");

        $r8 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw r2;

     label4:
        $r10 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void unregisterInputEventListener(android.view.WindowManagerPolicyConstants$PointerEventListener)
    {
        com.android.server.wm.PointerEventDispatcher r0;
        java.util.ArrayList r1, $r4, $r9;
        java.lang.IllegalStateException r2;
        java.lang.StringBuilder r3;
        boolean $z0;
        java.lang.String $r8;
        java.lang.Throwable $r10;
        android.view.WindowManagerPolicyConstants$PointerEventListener r11;

        r0 := @this: com.android.server.wm.PointerEventDispatcher;

        r11 := @parameter0: android.view.WindowManagerPolicyConstants$PointerEventListener;

        r1 = r0.<com.android.server.wm.PointerEventDispatcher: java.util.ArrayList mListeners>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.wm.PointerEventDispatcher: java.util.ArrayList mListeners>;

        $z0 = virtualinvoke $r4.<java.util.ArrayList: boolean contains(java.lang.Object)>(r11);

        if $z0 == 0 goto label3;

        $r9 = r0.<com.android.server.wm.PointerEventDispatcher: java.util.ArrayList mListeners>;

        virtualinvoke $r9.<java.util.ArrayList: boolean remove(java.lang.Object)>(r11);

        r0.<com.android.server.wm.PointerEventDispatcher: android.view.WindowManagerPolicyConstants$PointerEventListener[] mListenersArray> = null;

        exitmonitor r1;

     label2:
        return;

     label3:
        r2 = new java.lang.IllegalStateException;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("registerInputEventListener: ");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not registered.");

        $r8 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw r2;

     label4:
        $r10 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
}
