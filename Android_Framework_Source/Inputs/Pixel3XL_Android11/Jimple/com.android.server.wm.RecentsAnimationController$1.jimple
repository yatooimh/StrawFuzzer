class com.android.server.wm.RecentsAnimationController$1 extends com.android.server.wm.WindowManagerInternal$AppTransitionListener
{
    final com.android.server.wm.RecentsAnimationController this$0;

    void <init>(com.android.server.wm.RecentsAnimationController)
    {
        com.android.server.wm.RecentsAnimationController$1 r0;
        com.android.server.wm.RecentsAnimationController r1;

        r0 := @this: com.android.server.wm.RecentsAnimationController$1;

        r1 := @parameter0: com.android.server.wm.RecentsAnimationController;

        r0.<com.android.server.wm.RecentsAnimationController$1: com.android.server.wm.RecentsAnimationController this$0> = r1;

        specialinvoke r0.<com.android.server.wm.WindowManagerInternal$AppTransitionListener: void <init>()>();

        return;
    }

    private void continueDeferredCancel()
    {
        com.android.server.wm.RecentsAnimationController$1 r0;
        com.android.server.wm.RecentsAnimationController r1, $r2, $r5, $r6, $r7;
        com.android.server.wm.DisplayContent $r3;
        com.android.server.wm.AppTransition $r4;
        boolean $z0, $z1, $z3;

        r0 := @this: com.android.server.wm.RecentsAnimationController$1;

        $r2 = r0.<com.android.server.wm.RecentsAnimationController$1: com.android.server.wm.RecentsAnimationController this$0>;

        $r3 = staticinvoke <com.android.server.wm.RecentsAnimationController: com.android.server.wm.DisplayContent access$000(com.android.server.wm.RecentsAnimationController)>($r2);

        $r4 = $r3.<com.android.server.wm.DisplayContent: com.android.server.wm.AppTransition mAppTransition>;

        virtualinvoke $r4.<com.android.server.wm.AppTransition: void unregisterListener(com.android.server.wm.WindowManagerInternal$AppTransitionListener)>(r0);

        $r5 = r0.<com.android.server.wm.RecentsAnimationController$1: com.android.server.wm.RecentsAnimationController this$0>;

        $z0 = staticinvoke <com.android.server.wm.RecentsAnimationController: boolean access$100(com.android.server.wm.RecentsAnimationController)>($r5);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r6 = r0.<com.android.server.wm.RecentsAnimationController$1: com.android.server.wm.RecentsAnimationController this$0>;

        $z1 = staticinvoke <com.android.server.wm.RecentsAnimationController: boolean access$200(com.android.server.wm.RecentsAnimationController)>($r6);

        if $z1 == 0 goto label2;

        $r7 = r0.<com.android.server.wm.RecentsAnimationController$1: com.android.server.wm.RecentsAnimationController this$0>;

        staticinvoke <com.android.server.wm.RecentsAnimationController: boolean access$202(com.android.server.wm.RecentsAnimationController,boolean)>($r7, 0);

        r1 = r0.<com.android.server.wm.RecentsAnimationController$1: com.android.server.wm.RecentsAnimationController this$0>;

        $z3 = staticinvoke <com.android.server.wm.RecentsAnimationController: boolean access$300(com.android.server.wm.RecentsAnimationController)>(r1);

        virtualinvoke r1.<com.android.server.wm.RecentsAnimationController: void cancelAnimationWithScreenshot(boolean)>($z3);

     label2:
        return;
    }

    public void onAppTransitionCancelledLocked(int)
    {
        com.android.server.wm.RecentsAnimationController$1 r0;
        int i0;

        r0 := @this: com.android.server.wm.RecentsAnimationController$1;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.wm.RecentsAnimationController$1: void continueDeferredCancel()>();

        return;
    }

    public int onAppTransitionStartingLocked(int, long, long, long)
    {
        com.android.server.wm.RecentsAnimationController$1 r0;
        int i0;
        long l1, l2, l3;

        r0 := @this: com.android.server.wm.RecentsAnimationController$1;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        l3 := @parameter3: long;

        specialinvoke r0.<com.android.server.wm.RecentsAnimationController$1: void continueDeferredCancel()>();

        return 0;
    }
}
