public class com.android.server.wm.RecentsAnimationController extends java.lang.Object implements android.os.IBinder$DeathRecipient
{
    private static final long FAILSAFE_DELAY;
    public static final int REORDER_KEEP_IN_PLACE;
    public static final int REORDER_MOVE_TO_ORIGINAL_POSITION;
    public static final int REORDER_MOVE_TO_TOP;
    private static final java.lang.String TAG;
    final com.android.server.wm.WindowManagerInternal$AppTransitionListener mAppTransitionListener;
    private final com.android.server.wm.RecentsAnimationController$RecentsAnimationCallbacks mCallbacks;
    private boolean mCancelDeferredWithScreenshot;
    private boolean mCancelOnNextTransitionStart;
    private boolean mCanceled;
    private final android.view.IRecentsAnimationController mController;
    private com.android.server.wm.DisplayContent mDisplayContent;
    private final int mDisplayId;
    private final java.lang.Runnable mFailsafeRunnable;
    private boolean mInputConsumerEnabled;
    private boolean mLinkedToDeathOfRunner;
    private android.graphics.Rect mMinimizedHomeBounds;
    private final java.util.ArrayList mPendingAnimations;
    private final android.util.IntArray mPendingNewTaskTargets;
    private boolean mPendingStart;
    private final java.util.ArrayList mPendingWallpaperAnimations;
    com.android.server.wm.SurfaceAnimator mRecentScreenshotAnimator;
    private boolean mRequestDeferCancelUntilNextTransition;
    private android.view.IRecentsAnimationRunner mRunner;
    private final com.android.server.wm.WindowManagerService mService;
    private final com.android.server.statusbar.StatusBarManagerInternal mStatusBar;
    private com.android.server.wm.ActivityRecord mTargetActivityRecord;
    private int mTargetActivityType;
    private final android.graphics.Rect mTmpRect;
    private boolean mWillFinishToHome;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <com.android.server.wm.RecentsAnimationController: int REORDER_MOVE_TO_TOP> = 1;

        <com.android.server.wm.RecentsAnimationController: int REORDER_MOVE_TO_ORIGINAL_POSITION> = 2;

        <com.android.server.wm.RecentsAnimationController: int REORDER_KEEP_IN_PLACE> = 0;

        <com.android.server.wm.RecentsAnimationController: long FAILSAFE_DELAY> = 1000L;

        $r0 = class "Lcom/android/server/wm/RecentsAnimationController;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.server.wm.RecentsAnimationController: java.lang.String TAG> = $r1;

        return;
    }

    void <init>(com.android.server.wm.WindowManagerService, android.view.IRecentsAnimationRunner, com.android.server.wm.RecentsAnimationController$RecentsAnimationCallbacks, int)
    {
        com.android.server.wm.RecentsAnimationController r0;
        com.android.server.wm.WindowManagerService r1;
        android.view.IRecentsAnimationRunner r2;
        com.android.server.wm.RecentsAnimationController$RecentsAnimationCallbacks r3;
        int i0;
        java.util.ArrayList $r4, $r6;
        android.util.IntArray $r5;
        com.android.server.wm._$$Lambda$RecentsAnimationController$4jQqaDgSmtGCjbUJiVoDh_jr9rY $r7;
        android.graphics.Rect $r8, $r9;
        com.android.server.wm.RecentsAnimationController$1 $r10;
        com.android.server.wm.RecentsAnimationController$2 $r11;
        java.lang.Object $r12;
        com.android.server.statusbar.StatusBarManagerInternal $r13;
        com.android.server.wm.RootWindowContainer $r14;
        com.android.server.wm.DisplayContent $r15;

        r0 := @this: com.android.server.wm.RecentsAnimationController;

        r1 := @parameter0: com.android.server.wm.WindowManagerService;

        r2 := @parameter1: android.view.IRecentsAnimationRunner;

        r3 := @parameter2: com.android.server.wm.RecentsAnimationController$RecentsAnimationCallbacks;

        i0 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.wm.RecentsAnimationController: java.util.ArrayList mPendingAnimations> = $r4;

        $r5 = new android.util.IntArray;

        specialinvoke $r5.<android.util.IntArray: void <init>(int)>(0);

        r0.<com.android.server.wm.RecentsAnimationController: android.util.IntArray mPendingNewTaskTargets> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.wm.RecentsAnimationController: java.util.ArrayList mPendingWallpaperAnimations> = $r6;

        r0.<com.android.server.wm.RecentsAnimationController: boolean mWillFinishToHome> = 0;

        $r7 = new com.android.server.wm._$$Lambda$RecentsAnimationController$4jQqaDgSmtGCjbUJiVoDh_jr9rY;

        specialinvoke $r7.<com.android.server.wm._$$Lambda$RecentsAnimationController$4jQqaDgSmtGCjbUJiVoDh_jr9rY: void <init>(com.android.server.wm.RecentsAnimationController)>(r0);

        r0.<com.android.server.wm.RecentsAnimationController: java.lang.Runnable mFailsafeRunnable> = $r7;

        $r8 = new android.graphics.Rect;

        specialinvoke $r8.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.RecentsAnimationController: android.graphics.Rect mMinimizedHomeBounds> = $r8;

        r0.<com.android.server.wm.RecentsAnimationController: boolean mPendingStart> = 1;

        $r9 = new android.graphics.Rect;

        specialinvoke $r9.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.RecentsAnimationController: android.graphics.Rect mTmpRect> = $r9;

        $r10 = new com.android.server.wm.RecentsAnimationController$1;

        specialinvoke $r10.<com.android.server.wm.RecentsAnimationController$1: void <init>(com.android.server.wm.RecentsAnimationController)>(r0);

        r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.WindowManagerInternal$AppTransitionListener mAppTransitionListener> = $r10;

        $r11 = new com.android.server.wm.RecentsAnimationController$2;

        specialinvoke $r11.<com.android.server.wm.RecentsAnimationController$2: void <init>(com.android.server.wm.RecentsAnimationController)>(r0);

        r0.<com.android.server.wm.RecentsAnimationController: android.view.IRecentsAnimationController mController> = $r11;

        r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.WindowManagerService mService> = r1;

        r0.<com.android.server.wm.RecentsAnimationController: android.view.IRecentsAnimationRunner mRunner> = r2;

        r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.RecentsAnimationController$RecentsAnimationCallbacks mCallbacks> = r3;

        r0.<com.android.server.wm.RecentsAnimationController: int mDisplayId> = i0;

        $r12 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/statusbar/StatusBarManagerInternal;");

        $r13 = (com.android.server.statusbar.StatusBarManagerInternal) $r12;

        r0.<com.android.server.wm.RecentsAnimationController: com.android.server.statusbar.StatusBarManagerInternal mStatusBar> = $r13;

        $r14 = r1.<com.android.server.wm.WindowManagerService: com.android.server.wm.RootWindowContainer mRoot>;

        $r15 = virtualinvoke $r14.<com.android.server.wm.RootWindowContainer: com.android.server.wm.DisplayContent getDisplayContent(int)>(i0);

        r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.DisplayContent mDisplayContent> = $r15;

        return;
    }

    static com.android.server.wm.DisplayContent access$000(com.android.server.wm.RecentsAnimationController)
    {
        com.android.server.wm.RecentsAnimationController r0;
        com.android.server.wm.DisplayContent $r1;

        r0 := @parameter0: com.android.server.wm.RecentsAnimationController;

        $r1 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.DisplayContent mDisplayContent>;

        return $r1;
    }

    static boolean access$100(com.android.server.wm.RecentsAnimationController)
    {
        com.android.server.wm.RecentsAnimationController r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.wm.RecentsAnimationController;

        $z0 = r0.<com.android.server.wm.RecentsAnimationController: boolean mCanceled>;

        return $z0;
    }

    static int access$1000(com.android.server.wm.RecentsAnimationController)
    {
        com.android.server.wm.RecentsAnimationController r0;
        int $i0;

        r0 := @parameter0: com.android.server.wm.RecentsAnimationController;

        $i0 = r0.<com.android.server.wm.RecentsAnimationController: int mTargetActivityType>;

        return $i0;
    }

    static boolean access$1102(com.android.server.wm.RecentsAnimationController, boolean)
    {
        com.android.server.wm.RecentsAnimationController r0;
        boolean z0;

        r0 := @parameter0: com.android.server.wm.RecentsAnimationController;

        z0 := @parameter1: boolean;

        r0.<com.android.server.wm.RecentsAnimationController: boolean mInputConsumerEnabled> = z0;

        return z0;
    }

    static boolean access$1202(com.android.server.wm.RecentsAnimationController, boolean)
    {
        com.android.server.wm.RecentsAnimationController r0;
        boolean z0;

        r0 := @parameter0: com.android.server.wm.RecentsAnimationController;

        z0 := @parameter1: boolean;

        r0.<com.android.server.wm.RecentsAnimationController: boolean mWillFinishToHome> = z0;

        return z0;
    }

    static android.graphics.Rect access$1500(com.android.server.wm.RecentsAnimationController)
    {
        com.android.server.wm.RecentsAnimationController r0;
        android.graphics.Rect $r1;

        r0 := @parameter0: com.android.server.wm.RecentsAnimationController;

        $r1 = r0.<com.android.server.wm.RecentsAnimationController: android.graphics.Rect mTmpRect>;

        return $r1;
    }

    static boolean access$200(com.android.server.wm.RecentsAnimationController)
    {
        com.android.server.wm.RecentsAnimationController r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.wm.RecentsAnimationController;

        $z0 = r0.<com.android.server.wm.RecentsAnimationController: boolean mCancelOnNextTransitionStart>;

        return $z0;
    }

    static boolean access$202(com.android.server.wm.RecentsAnimationController, boolean)
    {
        com.android.server.wm.RecentsAnimationController r0;
        boolean z0;

        r0 := @parameter0: com.android.server.wm.RecentsAnimationController;

        z0 := @parameter1: boolean;

        r0.<com.android.server.wm.RecentsAnimationController: boolean mCancelOnNextTransitionStart> = z0;

        return z0;
    }

    static boolean access$300(com.android.server.wm.RecentsAnimationController)
    {
        com.android.server.wm.RecentsAnimationController r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.wm.RecentsAnimationController;

        $z0 = r0.<com.android.server.wm.RecentsAnimationController: boolean mCancelDeferredWithScreenshot>;

        return $z0;
    }

    static com.android.server.wm.WindowManagerService access$400(com.android.server.wm.RecentsAnimationController)
    {
        com.android.server.wm.RecentsAnimationController r0;
        com.android.server.wm.WindowManagerService $r1;

        r0 := @parameter0: com.android.server.wm.RecentsAnimationController;

        $r1 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.WindowManagerService mService>;

        return $r1;
    }

    static java.util.ArrayList access$500(com.android.server.wm.RecentsAnimationController)
    {
        com.android.server.wm.RecentsAnimationController r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: com.android.server.wm.RecentsAnimationController;

        $r1 = r0.<com.android.server.wm.RecentsAnimationController: java.util.ArrayList mPendingAnimations>;

        return $r1;
    }

    static android.util.IntArray access$700(com.android.server.wm.RecentsAnimationController)
    {
        com.android.server.wm.RecentsAnimationController r0;
        android.util.IntArray $r1;

        r0 := @parameter0: com.android.server.wm.RecentsAnimationController;

        $r1 = r0.<com.android.server.wm.RecentsAnimationController: android.util.IntArray mPendingNewTaskTargets>;

        return $r1;
    }

    static boolean access$800(com.android.server.wm.RecentsAnimationController, int)
    {
        com.android.server.wm.RecentsAnimationController r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.server.wm.RecentsAnimationController;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.server.wm.RecentsAnimationController: boolean removeTaskInternal(int)>(i0);

        return $z0;
    }

    static com.android.server.wm.RecentsAnimationController$RecentsAnimationCallbacks access$900(com.android.server.wm.RecentsAnimationController)
    {
        com.android.server.wm.RecentsAnimationController r0;
        com.android.server.wm.RecentsAnimationController$RecentsAnimationCallbacks $r1;

        r0 := @parameter0: com.android.server.wm.RecentsAnimationController;

        $r1 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.RecentsAnimationController$RecentsAnimationCallbacks mCallbacks>;

        return $r1;
    }

    private void cancelAnimation(int, boolean, java.lang.String)
    {
        com.android.server.wm.RecentsAnimationController r0;
        int i0;
        boolean z0, $z1, $z2;
        com.android.server.wm.WindowManagerService $r2, $r3;
        java.lang.Runnable $r4;
        com.android.server.wm.WindowManagerService$H $r5;
        android.view.IRecentsAnimationRunner $r6, $r12;
        com.android.server.wm.RecentsAnimationController$RecentsAnimationCallbacks $r7, $r13;
        java.util.ArrayList $r8;
        java.lang.Object $r9, r23;
        com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter $r10;
        com.android.server.wm.Task $r11;
        java.lang.Object[] $r14;
        com.android.server.wm.ProtoLogGroup $r15;
        android.os.RemoteException $r16, $r18;
        java.lang.String $r17, $r19, r21, r22;
        java.lang.Throwable $r20;
        android.app.ActivityManager$TaskSnapshot r24;

        r0 := @this: com.android.server.wm.RecentsAnimationController;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r21 := @parameter2: java.lang.String;

        $z1 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_RECENTS_ANIMATIONS_enabled>;

        if $z1 == 0 goto label01;

        r22 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r21);

        $r15 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_RECENTS_ANIMATIONS>;

        $r14 = newarray (java.lang.Object)[1];

        $r14[0] = r22;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void d(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r15, 1525976603, 0, null, $r14);

     label01:
        $r2 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.WindowManagerService mService>;

        r23 = virtualinvoke $r2.<com.android.server.wm.WindowManagerService: java.lang.Object getWindowManagerLock()>();

        entermonitor r23;

     label02:
        $z2 = r0.<com.android.server.wm.RecentsAnimationController: boolean mCanceled>;

        if $z2 == 0 goto label04;

        exitmonitor r23;

     label03:
        return;

     label04:
        $r3 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.WindowManagerService mService>;

        $r5 = $r3.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerService$H mH>;

        $r4 = r0.<com.android.server.wm.RecentsAnimationController: java.lang.Runnable mFailsafeRunnable>;

        virtualinvoke $r5.<com.android.server.wm.WindowManagerService$H: void removeCallbacks(java.lang.Runnable)>($r4);

        r0.<com.android.server.wm.RecentsAnimationController: boolean mCanceled> = 1;

     label05:
        if z0 == 0 goto label14;

     label06:
        $r8 = r0.<com.android.server.wm.RecentsAnimationController: java.util.ArrayList mPendingAnimations>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r10 = (com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter) $r9;

        $r11 = staticinvoke <com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter: com.android.server.wm.Task access$600(com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter)>($r10);

        r24 = virtualinvoke r0.<com.android.server.wm.RecentsAnimationController: android.app.ActivityManager$TaskSnapshot screenshotRecentTask(com.android.server.wm.Task,int)>($r11, i0);

     label07:
        $r12 = r0.<com.android.server.wm.RecentsAnimationController: android.view.IRecentsAnimationRunner mRunner>;

        interfaceinvoke $r12.<android.view.IRecentsAnimationRunner: void onAnimationCanceled(android.app.ActivityManager$TaskSnapshot)>(r24);

     label08:
        goto label11;

     label09:
        $r18 := @caughtexception;

     label10:
        $r19 = <com.android.server.wm.RecentsAnimationController: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r19, "Failed to cancel recents animation", $r18);

     label11:
        if r24 != null goto label13;

     label12:
        $r13 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.RecentsAnimationController$RecentsAnimationCallbacks mCallbacks>;

        interfaceinvoke $r13.<com.android.server.wm.RecentsAnimationController$RecentsAnimationCallbacks: void onAnimationFinished(int,boolean)>(i0, 0);

     label13:
        goto label19;

     label14:
        $r6 = r0.<com.android.server.wm.RecentsAnimationController: android.view.IRecentsAnimationRunner mRunner>;

        interfaceinvoke $r6.<android.view.IRecentsAnimationRunner: void onAnimationCanceled(android.app.ActivityManager$TaskSnapshot)>(null);

     label15:
        goto label18;

     label16:
        $r16 := @caughtexception;

     label17:
        $r17 = <com.android.server.wm.RecentsAnimationController: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r17, "Failed to cancel recents animation", $r16);

     label18:
        $r7 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.RecentsAnimationController$RecentsAnimationCallbacks mCallbacks>;

        interfaceinvoke $r7.<com.android.server.wm.RecentsAnimationController$RecentsAnimationCallbacks: void onAnimationFinished(int,boolean)>(i0, 0);

     label19:
        exitmonitor r23;

     label20:
        return;

     label21:
        $r20 := @caughtexception;

     label22:
        exitmonitor r23;

     label23:
        throw $r20;

        catch java.lang.Throwable from label02 to label03 with label21;
        catch java.lang.Throwable from label04 to label05 with label21;
        catch java.lang.Throwable from label06 to label07 with label21;
        catch android.os.RemoteException from label07 to label08 with label09;
        catch java.lang.Throwable from label07 to label08 with label21;
        catch java.lang.Throwable from label10 to label11 with label21;
        catch java.lang.Throwable from label12 to label13 with label21;
        catch android.os.RemoteException from label14 to label15 with label16;
        catch java.lang.Throwable from label14 to label15 with label21;
        catch java.lang.Throwable from label17 to label18 with label21;
        catch java.lang.Throwable from label18 to label19 with label21;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label22 to label23 with label21;
    }

    private android.view.RemoteAnimationTarget[] createAppAnimations()
    {
        com.android.server.wm.RecentsAnimationController r0;
        com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter r2;
        android.view.RemoteAnimationTarget r3;
        java.util.ArrayList $r4, $r5, $r9;
        int $i0, $i1, i2;
        android.view.RemoteAnimationTarget[] $r6, $r8;
        java.lang.Object[] $r7;
        java.lang.Object $r10;

        r0 := @this: com.android.server.wm.RecentsAnimationController;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = r0.<com.android.server.wm.RecentsAnimationController: java.util.ArrayList mPendingAnimations>;

        $i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i2 = $i0 - 1;

     label1:
        if i2 < 0 goto label4;

        $r9 = r0.<com.android.server.wm.RecentsAnimationController: java.util.ArrayList mPendingAnimations>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r2 = (com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter) $r10;

        r3 = virtualinvoke r2.<com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter: android.view.RemoteAnimationTarget createRemoteAnimationTarget()>();

        if r3 == null goto label2;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        goto label3;

     label2:
        virtualinvoke r0.<com.android.server.wm.RecentsAnimationController: void removeAnimation(com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter)>(r2);

     label3:
        i2 = i2 + -1;

        goto label1;

     label4:
        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $r6 = newarray (android.view.RemoteAnimationTarget)[$i1];

        $r7 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        $r8 = (android.view.RemoteAnimationTarget[]) $r7;

        return $r8;
    }

    private android.view.RemoteAnimationTarget createTaskRemoteAnimation(com.android.server.wm.Task, com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback)
    {
        com.android.server.wm.RecentsAnimationController r0;
        com.android.server.wm.Task r1;
        com.android.server.wm.WindowManagerService $r2;
        com.android.server.wm.ActivityTaskManagerService $r3;
        com.android.server.wm.RecentTasks $r4;
        android.util.SparseBooleanArray $r5;
        int $i0, $i1;
        boolean $z0, $z1;
        com.android.server.wm.AnimationAdapter $r6;
        android.util.IntArray $r7;
        android.view.RemoteAnimationTarget $r8;
        com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback r9;
        com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter r10;

        r0 := @this: com.android.server.wm.RecentsAnimationController;

        r1 := @parameter0: com.android.server.wm.Task;

        r9 := @parameter1: com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback;

        $r2 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.WindowManagerService mService>;

        $r3 = $r2.<com.android.server.wm.WindowManagerService: com.android.server.wm.ActivityTaskManagerService mAtmService>;

        $r4 = virtualinvoke $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RecentTasks getRecentTasks()>();

        $r5 = virtualinvoke $r4.<com.android.server.wm.RecentTasks: android.util.SparseBooleanArray getRecentTaskIds()>();

        $i0 = r1.<com.android.server.wm.Task: int mTaskId>;

        $z0 = virtualinvoke $r5.<android.util.SparseBooleanArray: boolean get(int)>($i0);

        $z1 = $z0 ^ 1;

        $r6 = virtualinvoke r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.AnimationAdapter addAnimation(com.android.server.wm.Task,boolean,boolean,com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback)>(r1, $z1, 1, r9);

        r10 = (com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter) $r6;

        $r7 = r0.<com.android.server.wm.RecentsAnimationController: android.util.IntArray mPendingNewTaskTargets>;

        $i1 = r1.<com.android.server.wm.Task: int mTaskId>;

        virtualinvoke $r7.<android.util.IntArray: void add(int)>($i1);

        $r8 = virtualinvoke r10.<com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter: android.view.RemoteAnimationTarget createRemoteAnimationTarget()>();

        return $r8;
    }

    private android.view.RemoteAnimationTarget[] createWallpaperAnimations()
    {
        com.android.server.wm.RecentsAnimationController r0;
        boolean $z0;
        com.android.server.wm._$$Lambda$RecentsAnimationController$j5cfzBzoc_2KFpZ5MiHSgWihq_Y $r1;
        com.android.server.wm.WindowManagerService $r2;
        java.util.ArrayList $r3;
        android.view.RemoteAnimationTarget[] $r4;
        java.lang.Object[] $r5;
        com.android.server.wm.ProtoLogGroup $r6;

        r0 := @this: com.android.server.wm.RecentsAnimationController;

        $z0 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_RECENTS_ANIMATIONS_enabled>;

        if $z0 == 0 goto label1;

        $r6 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_RECENTS_ANIMATIONS>;

        $r5 = (java.lang.Object[]) null;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void d(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r6, 1495525537, 0, null, $r5);

     label1:
        $r2 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.WindowManagerService mService>;

        $r1 = new com.android.server.wm._$$Lambda$RecentsAnimationController$j5cfzBzoc_2KFpZ5MiHSgWihq_Y;

        specialinvoke $r1.<com.android.server.wm._$$Lambda$RecentsAnimationController$j5cfzBzoc_2KFpZ5MiHSgWihq_Y: void <init>(com.android.server.wm.RecentsAnimationController)>(r0);

        $r3 = r0.<com.android.server.wm.RecentsAnimationController: java.util.ArrayList mPendingWallpaperAnimations>;

        $r4 = staticinvoke <com.android.server.wm.WallpaperAnimationAdapter: android.view.RemoteAnimationTarget[] startWallpaperAnimations(com.android.server.wm.WindowManagerService,long,long,java.util.function.Consumer,java.util.ArrayList)>($r2, 0L, 0L, $r1, $r3);

        return $r4;
    }

    private boolean isAnimatingApp(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.RecentsAnimationController r0;
        com.android.server.wm.ActivityRecord r1;
        com.android.server.wm.Task r2;
        com.android.internal.util.function.pooled.PooledFunction r3;
        boolean z0;
        java.util.ArrayList $r4, $r5;
        int $i0, i1;
        java.lang.Object $r6;
        com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter $r7;
        com.android.server.wm.'-$$Lambda$RecentsAnimationController$jw5vdNcR7ME-ta1B7JaOAiF7wKw' $r8;
        com.android.internal.util.function.pooled.ArgumentPlaceholder $r9;
        java.util.function.BiFunction r10;

        r0 := @this: com.android.server.wm.RecentsAnimationController;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        $r4 = r0.<com.android.server.wm.RecentsAnimationController: java.util.ArrayList mPendingAnimations>;

        $i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r5 = r0.<com.android.server.wm.RecentsAnimationController: java.util.ArrayList mPendingAnimations>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r7 = (com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter) $r6;

        r2 = staticinvoke <com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter: com.android.server.wm.Task access$600(com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter)>($r7);

        $r8 = <com.android.server.wm._$$Lambda$RecentsAnimationController$jw5vdNcR7ME_ta1B7JaOAiF7wKw: com.android.server.wm.'-$$Lambda$RecentsAnimationController$jw5vdNcR7ME-ta1B7JaOAiF7wKw' INSTANCE>;

        $r9 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: com.android.internal.util.function.pooled.ArgumentPlaceholder __(java.lang.Class)>(class "Lcom/android/server/wm/ActivityRecord;");

        r10 = (java.util.function.BiFunction) $r8;

        r3 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: com.android.internal.util.function.pooled.PooledFunction obtainFunction(java.util.function.BiFunction,java.lang.Object,com.android.internal.util.function.pooled.ArgumentPlaceholder)>(r10, r1, $r9);

        z0 = virtualinvoke r2.<com.android.server.wm.Task: boolean forAllActivities(java.util.function.Function)>(r3);

        interfaceinvoke r3.<com.android.internal.util.function.pooled.PooledFunction: void recycle()>();

        if z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return 0;
    }

    private boolean isTargetOverWallpaper()
    {
        com.android.server.wm.RecentsAnimationController r0;
        com.android.server.wm.ActivityRecord r1;
        boolean $z0;

        r0 := @this: com.android.server.wm.RecentsAnimationController;

        r1 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.ActivityRecord mTargetActivityRecord>;

        if r1 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r1.<com.android.server.wm.ActivityRecord: boolean windowsCanBeWallpaperTarget()>();

        return $z0;
    }

    static void lambda$initialize$1(com.android.server.wm.Task, java.util.ArrayList)
    {
        com.android.server.wm.Task r0;
        java.util.ArrayList r1;
        boolean $z0;

        r0 := @parameter0: com.android.server.wm.Task;

        r1 := @parameter1: java.util.ArrayList;

        $z0 = virtualinvoke r1.<java.util.ArrayList: boolean contains(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

     label1:
        return;
    }

    static java.lang.Boolean lambda$isAnimatingApp$5(com.android.server.wm.ActivityRecord, com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.ActivityRecord r0, r1;
        java.lang.Boolean $r2;
        boolean z0;

        r0 := @parameter0: com.android.server.wm.ActivityRecord;

        r1 := @parameter1: com.android.server.wm.ActivityRecord;

        if r0 != r1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        return $r2;
    }

    static java.lang.Integer lambda$startAnimation$2(com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter)
    {
        com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter r0;
        com.android.server.wm.Task $r1;
        int $i0;
        java.lang.Integer $r2;

        r0 := @parameter0: com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter;

        $r1 = staticinvoke <com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter: com.android.server.wm.Task access$600(com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter)>(r0);

        $i0 = $r1.<com.android.server.wm.Task: int mTaskId>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r2;
    }

    private void linkToDeathOfRunner() throws android.os.RemoteException
    {
        com.android.server.wm.RecentsAnimationController r0;
        boolean $z0;
        android.view.IRecentsAnimationRunner $r1;
        android.os.IBinder $r2;

        r0 := @this: com.android.server.wm.RecentsAnimationController;

        $z0 = r0.<com.android.server.wm.RecentsAnimationController: boolean mLinkedToDeathOfRunner>;

        if $z0 != 0 goto label1;

        $r1 = r0.<com.android.server.wm.RecentsAnimationController: android.view.IRecentsAnimationRunner mRunner>;

        $r2 = interfaceinvoke $r1.<android.view.IRecentsAnimationRunner: android.os.IBinder asBinder()>();

        interfaceinvoke $r2.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

        r0.<com.android.server.wm.RecentsAnimationController: boolean mLinkedToDeathOfRunner> = 1;

     label1:
        return;
    }

    private boolean removeTaskInternal(int)
    {
        com.android.server.wm.RecentsAnimationController r0;
        com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter r1;
        java.util.ArrayList $r2, $r3;
        int $i0, $i1, i2, i3, i4;
        java.lang.Object $r4;
        com.android.server.wm.Task $r5, $r6;
        boolean $z1, z2;
        android.util.IntArray $r7, $r8;

        r0 := @this: com.android.server.wm.RecentsAnimationController;

        i2 := @parameter0: int;

        $r2 = r0.<com.android.server.wm.RecentsAnimationController: java.util.ArrayList mPendingAnimations>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i3 = $i0 - 1;

     label1:
        z2 = 0;

        if i3 < 0 goto label4;

        $r3 = r0.<com.android.server.wm.RecentsAnimationController: java.util.ArrayList mPendingAnimations>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r1 = (com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter) $r4;

        $r5 = staticinvoke <com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter: com.android.server.wm.Task access$600(com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter)>(r1);

        $i1 = $r5.<com.android.server.wm.Task: int mTaskId>;

        if $i1 != i2 goto label3;

        $r6 = staticinvoke <com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter: com.android.server.wm.Task access$600(com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter)>(r1);

        $z1 = virtualinvoke $r6.<com.android.server.wm.Task: boolean isOnTop()>();

        if $z1 == 0 goto label3;

        virtualinvoke r0.<com.android.server.wm.RecentsAnimationController: void removeAnimation(com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter)>(r1);

        $r7 = r0.<com.android.server.wm.RecentsAnimationController: android.util.IntArray mPendingNewTaskTargets>;

        i4 = virtualinvoke $r7.<android.util.IntArray: int indexOf(int)>(i2);

        if i4 == -1 goto label2;

        $r8 = r0.<com.android.server.wm.RecentsAnimationController: android.util.IntArray mPendingNewTaskTargets>;

        virtualinvoke $r8.<android.util.IntArray: void remove(int)>(i4);

     label2:
        z2 = 1;

        goto label4;

     label3:
        i3 = i3 + -1;

        goto label1;

     label4:
        return z2;
    }

    private void unlinkToDeathOfRunner()
    {
        com.android.server.wm.RecentsAnimationController r0;
        boolean $z0;
        android.view.IRecentsAnimationRunner $r1;
        android.os.IBinder $r2;

        r0 := @this: com.android.server.wm.RecentsAnimationController;

        $z0 = r0.<com.android.server.wm.RecentsAnimationController: boolean mLinkedToDeathOfRunner>;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.server.wm.RecentsAnimationController: android.view.IRecentsAnimationRunner mRunner>;

        $r2 = interfaceinvoke $r1.<android.view.IRecentsAnimationRunner: android.os.IBinder asBinder()>();

        interfaceinvoke $r2.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

        r0.<com.android.server.wm.RecentsAnimationController: boolean mLinkedToDeathOfRunner> = 0;

     label1:
        return;
    }

    com.android.server.wm.AnimationAdapter addAnimation(com.android.server.wm.Task, boolean)
    {
        com.android.server.wm.RecentsAnimationController r0;
        com.android.server.wm.Task r1;
        boolean z0;
        com.android.server.wm.AnimationAdapter $r2;

        r0 := @this: com.android.server.wm.RecentsAnimationController;

        r1 := @parameter0: com.android.server.wm.Task;

        z0 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.AnimationAdapter addAnimation(com.android.server.wm.Task,boolean,boolean,com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback)>(r1, z0, 0, null);

        return $r2;
    }

    com.android.server.wm.AnimationAdapter addAnimation(com.android.server.wm.Task, boolean, boolean, com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback)
    {
        com.android.server.wm.RecentsAnimationController r0;
        com.android.server.wm.Task r1;
        boolean z0, z1, $z2;
        com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback r2;
        com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter $r3;
        android.view.SurfaceControl$Transaction $r4;
        java.util.ArrayList $r5;
        java.lang.String $r6, r9;
        java.lang.Object[] $r7;
        com.android.server.wm.ProtoLogGroup $r8;

        r0 := @this: com.android.server.wm.RecentsAnimationController;

        r1 := @parameter0: com.android.server.wm.Task;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r2 := @parameter3: com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback;

        $z2 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_RECENTS_ANIMATIONS_enabled>;

        if $z2 == 0 goto label1;

        $r6 = virtualinvoke r1.<com.android.server.wm.Task: java.lang.String getName()>();

        r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        $r8 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_RECENTS_ANIMATIONS>;

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = r9;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void d(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r8, 302992539, 0, null, $r7);

     label1:
        $r3 = new com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter;

        specialinvoke $r3.<com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter: void <init>(com.android.server.wm.RecentsAnimationController,com.android.server.wm.Task,boolean)>(r0, r1, z0);

        $r4 = virtualinvoke r1.<com.android.server.wm.Task: android.view.SurfaceControl$Transaction getPendingTransaction()>();

        virtualinvoke r1.<com.android.server.wm.Task: void startAnimation(android.view.SurfaceControl$Transaction,com.android.server.wm.AnimationAdapter,boolean,int,com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback)>($r4, $r3, z1, 8, r2);

        virtualinvoke r1.<com.android.server.wm.Task: void commitPendingTransaction()>();

        $r5 = r0.<com.android.server.wm.RecentsAnimationController: java.util.ArrayList mPendingAnimations>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        return $r3;
    }

    void addTaskToTargets(com.android.server.wm.Task, com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback)
    {
        com.android.server.wm.RecentsAnimationController r0;
        android.view.IRecentsAnimationRunner $r1, $r2;
        boolean $z0, $z1;
        java.lang.Object[] $r3;
        com.android.server.wm.ProtoLogGroup $r4;
        android.os.RemoteException $r5;
        java.lang.String $r6, r10;
        com.android.server.wm.Task r7;
        com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback r8;
        android.view.RemoteAnimationTarget r9;

        r0 := @this: com.android.server.wm.RecentsAnimationController;

        r7 := @parameter0: com.android.server.wm.Task;

        r8 := @parameter1: com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback;

        $r1 = r0.<com.android.server.wm.RecentsAnimationController: android.view.IRecentsAnimationRunner mRunner>;

        if $r1 == null goto label6;

        $z0 = virtualinvoke r0.<com.android.server.wm.RecentsAnimationController: boolean isAnimatingTask(com.android.server.wm.Task)>(r7);

        if $z0 == 0 goto label1;

        return;

     label1:
        r9 = specialinvoke r0.<com.android.server.wm.RecentsAnimationController: android.view.RemoteAnimationTarget createTaskRemoteAnimation(com.android.server.wm.Task,com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback)>(r7, r8);

        if r9 != null goto label2;

        return;

     label2:
        $z1 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_RECENTS_ANIMATIONS_enabled>;

        if $z1 == 0 goto label3;

        r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r9);

        $r4 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_RECENTS_ANIMATIONS>;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r10;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void d(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r4, -172900257, 0, null, $r3);

     label3:
        $r2 = r0.<com.android.server.wm.RecentsAnimationController: android.view.IRecentsAnimationRunner mRunner>;

        interfaceinvoke $r2.<android.view.IRecentsAnimationRunner: void onTaskAppeared(android.view.RemoteAnimationTarget)>(r9);

     label4:
        goto label6;

     label5:
        $r5 := @caughtexception;

        $r6 = <com.android.server.wm.RecentsAnimationController: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r6, "Failed to report task appeared", $r5);

     label6:
        return;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public void binderDied()
    {
        com.android.server.wm.RecentsAnimationController r0;
        java.lang.Object r1;
        com.android.server.wm.WindowManagerService $r3;
        com.android.server.wm.DisplayContent $r4;
        com.android.server.wm.InputMonitor $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.wm.RecentsAnimationController;

        virtualinvoke r0.<com.android.server.wm.RecentsAnimationController: void cancelAnimation(int,java.lang.String)>(2, "binderDied");

        $r3 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.WindowManagerService mService>;

        r1 = virtualinvoke $r3.<com.android.server.wm.WindowManagerService: java.lang.Object getWindowManagerLock()>();

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r5 = virtualinvoke $r4.<com.android.server.wm.DisplayContent: com.android.server.wm.InputMonitor getInputMonitor()>();

        virtualinvoke $r5.<com.android.server.wm.InputMonitor: boolean destroyInputConsumer(java.lang.String)>("recents_animation_input_consumer");

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    void cancelAnimation(int, java.lang.String)
    {
        com.android.server.wm.RecentsAnimationController r0;
        int i0;
        java.lang.String r1;

        r0 := @this: com.android.server.wm.RecentsAnimationController;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.wm.RecentsAnimationController: void cancelAnimation(int,boolean,java.lang.String)>(i0, 0, r1);

        return;
    }

    void cancelAnimationWithScreenshot(boolean)
    {
        com.android.server.wm.RecentsAnimationController r0;
        boolean z0;

        r0 := @this: com.android.server.wm.RecentsAnimationController;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.android.server.wm.RecentsAnimationController: void cancelAnimation(int,boolean,java.lang.String)>(0, z0, "stackOrderChanged");

        return;
    }

    void checkAnimationReady(com.android.server.wm.WallpaperController)
    {
        com.android.server.wm.RecentsAnimationController r0, $r3;
        com.android.server.wm.WallpaperController r1;
        boolean $z0, $z1, $z2, z3;
        com.android.server.wm.WindowManagerService $r2;
        com.android.server.wm.WindowState $r4;

        r0 := @this: com.android.server.wm.RecentsAnimationController;

        r1 := @parameter0: com.android.server.wm.WallpaperController;

        $z0 = r0.<com.android.server.wm.RecentsAnimationController: boolean mPendingStart>;

        if $z0 == 0 goto label4;

        $z1 = specialinvoke r0.<com.android.server.wm.RecentsAnimationController: boolean isTargetOverWallpaper()>();

        if $z1 == 0 goto label2;

        $r4 = virtualinvoke r1.<com.android.server.wm.WallpaperController: com.android.server.wm.WindowState getWallpaperTarget()>();

        if $r4 == null goto label1;

        $z2 = virtualinvoke r1.<com.android.server.wm.WallpaperController: boolean wallpaperTransitionReady()>();

        if $z2 == 0 goto label1;

        goto label2;

     label1:
        z3 = 0;

        goto label3;

     label2:
        z3 = 1;

     label3:
        if z3 == 0 goto label4;

        $r2 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.WindowManagerService mService>;

        $r3 = virtualinvoke $r2.<com.android.server.wm.WindowManagerService: com.android.server.wm.RecentsAnimationController getRecentsAnimationController()>();

        virtualinvoke $r3.<com.android.server.wm.RecentsAnimationController: void startAnimation()>();

     label4:
        return;
    }

    void cleanupAnimation(int)
    {
        com.android.server.wm.RecentsAnimationController r0;
        int i0, $i3, $i4, $i5, i6, i7;
        boolean z0, z1;
        long l1, l2;
        java.util.ArrayList $r1, $r2, $r16, $r19, $r22;
        com.android.server.wm.WindowManagerService $r3;
        java.lang.Runnable $r4;
        com.android.server.wm.WindowManagerService$H $r5;
        com.android.server.wm.DisplayContent $r6, $r9, $r12, $r29;
        com.android.server.wm.WindowManagerInternal$AppTransitionListener $r7;
        com.android.server.wm.AppTransition $r8, $r15;
        com.android.server.wm.InputMonitor $r10;
        com.android.server.wm.ActivityRecord $r11, $r13;
        android.os.IBinder $r14;
        java.lang.Object $r17, $r20;
        com.android.server.wm.WallpaperAnimationAdapter $r18;
        com.android.server.wm.Task $r21;
        java.lang.Object[] $r23;
        com.android.server.wm.ProtoLogGroup $r24;
        java.lang.Long $r25, $r26;
        com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter r27;
        com.android.server.wm.SurfaceAnimator r28;
        com.android.server.wm.DisplayContent$FixedRotationTransitionListener r30;
        com.android.server.statusbar.StatusBarManagerInternal r31;

        r0 := @this: com.android.server.wm.RecentsAnimationController;

        i0 := @parameter0: int;

        z0 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_RECENTS_ANIMATIONS_enabled>;

        z1 = 1;

        if z0 == 0 goto label01;

        $r22 = r0.<com.android.server.wm.RecentsAnimationController: java.util.ArrayList mPendingAnimations>;

        $i5 = virtualinvoke $r22.<java.util.ArrayList: int size()>();

        l1 = (long) $i5;

        l2 = (long) i0;

        $r24 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_RECENTS_ANIMATIONS>;

        $r23 = newarray (java.lang.Object)[2];

        $r25 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r23[0] = $r25;

        $r26 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        $r23[1] = $r26;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void d(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r24, -1434147454, 5, null, $r23);

     label01:
        $r1 = r0.<com.android.server.wm.RecentsAnimationController: java.util.ArrayList mPendingAnimations>;

        $i3 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i6 = $i3 - 1;

     label02:
        if i6 < 0 goto label05;

        $r19 = r0.<com.android.server.wm.RecentsAnimationController: java.util.ArrayList mPendingAnimations>;

        $r20 = virtualinvoke $r19.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        r27 = (com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter) $r20;

        if i0 == 1 goto label03;

        if i0 != 0 goto label04;

     label03:
        $r21 = staticinvoke <com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter: com.android.server.wm.Task access$600(com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter)>(r27);

        virtualinvoke $r21.<com.android.server.wm.Task: void dontAnimateDimExit()>();

     label04:
        virtualinvoke r0.<com.android.server.wm.RecentsAnimationController: void removeAnimation(com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter)>(r27);

        i6 = i6 + -1;

        goto label02;

     label05:
        $r2 = r0.<com.android.server.wm.RecentsAnimationController: java.util.ArrayList mPendingWallpaperAnimations>;

        $i4 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i7 = $i4 - 1;

     label06:
        if i7 < 0 goto label07;

        $r16 = r0.<com.android.server.wm.RecentsAnimationController: java.util.ArrayList mPendingWallpaperAnimations>;

        $r17 = virtualinvoke $r16.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        $r18 = (com.android.server.wm.WallpaperAnimationAdapter) $r17;

        virtualinvoke r0.<com.android.server.wm.RecentsAnimationController: void removeWallpaperAnimation(com.android.server.wm.WallpaperAnimationAdapter)>($r18);

        i7 = i7 + -1;

        goto label06;

     label07:
        $r3 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.WindowManagerService mService>;

        $r5 = $r3.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerService$H mH>;

        $r4 = r0.<com.android.server.wm.RecentsAnimationController: java.lang.Runnable mFailsafeRunnable>;

        virtualinvoke $r5.<com.android.server.wm.WindowManagerService$H: void removeCallbacks(java.lang.Runnable)>($r4);

        $r6 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r8 = $r6.<com.android.server.wm.DisplayContent: com.android.server.wm.AppTransition mAppTransition>;

        $r7 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.WindowManagerInternal$AppTransitionListener mAppTransitionListener>;

        virtualinvoke $r8.<com.android.server.wm.AppTransition: void unregisterListener(com.android.server.wm.WindowManagerInternal$AppTransitionListener)>($r7);

        specialinvoke r0.<com.android.server.wm.RecentsAnimationController: void unlinkToDeathOfRunner()>();

        r0.<com.android.server.wm.RecentsAnimationController: android.view.IRecentsAnimationRunner mRunner> = null;

        r0.<com.android.server.wm.RecentsAnimationController: boolean mCanceled> = 1;

        r28 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.SurfaceAnimator mRecentScreenshotAnimator>;

        if r28 == null goto label08;

        virtualinvoke r28.<com.android.server.wm.SurfaceAnimator: void cancelAnimation()>();

        r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.SurfaceAnimator mRecentScreenshotAnimator> = null;

     label08:
        $r9 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r10 = virtualinvoke $r9.<com.android.server.wm.DisplayContent: com.android.server.wm.InputMonitor getInputMonitor()>();

        virtualinvoke $r10.<com.android.server.wm.InputMonitor: void updateInputWindowsLw(boolean)>(1);

        $r11 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.ActivityRecord mTargetActivityRecord>;

        if $r11 == null goto label10;

        if i0 == 1 goto label09;

        if i0 != 0 goto label10;

     label09:
        $r12 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r15 = $r12.<com.android.server.wm.DisplayContent: com.android.server.wm.AppTransition mAppTransition>;

        $r13 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.ActivityRecord mTargetActivityRecord>;

        $r14 = $r13.<com.android.server.wm.ActivityRecord: android.os.IBinder token>;

        virtualinvoke $r15.<com.android.server.wm.AppTransition: void notifyAppTransitionFinishedLocked(android.os.IBinder)>($r14);

     label10:
        $r29 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.DisplayContent mDisplayContent>;

        r30 = $r29.<com.android.server.wm.DisplayContent: com.android.server.wm.DisplayContent$FixedRotationTransitionListener mFixedRotationTransitionListener>;

        if i0 != 2 goto label11;

        goto label12;

     label11:
        z1 = 0;

     label12:
        virtualinvoke r30.<com.android.server.wm.DisplayContent$FixedRotationTransitionListener: void onFinishRecentsAnimation(boolean)>(z1);

        r31 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.statusbar.StatusBarManagerInternal mStatusBar>;

        if r31 == null goto label13;

        interfaceinvoke r31.<com.android.server.statusbar.StatusBarManagerInternal: void onRecentsAnimationStateChanged(boolean)>(0);

     label13:
        return;
    }

    public void dump(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.wm.RecentsAnimationController r0;
        java.io.PrintWriter r1;
        java.lang.StringBuilder $r2, $r5, $r11, $r15, $r20, $r24, $r28, $r33, $r37, $r41, $r45;
        java.lang.Class $r6;
        java.lang.String $r7, $r10, $r14, $r19, $r23, $r27, $r32, $r36, $r40, $r44, $r48, r49, r51;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.ArrayList $r17;
        int $i0;
        com.android.server.wm.ActivityRecord $r30;

        r0 := @this: com.android.server.wm.RecentsAnimationController;

        r1 := @parameter0: java.io.PrintWriter;

        r49 := @parameter1: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r49);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        r51 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r49);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = class "Lcom/android/server/wm/RecentsAnimationController;";

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r10);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r51);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mPendingStart=");

        $z0 = r0.<com.android.server.wm.RecentsAnimationController: boolean mPendingStart>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r14);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r51);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mPendingAnimations=");

        $r17 = r0.<com.android.server.wm.RecentsAnimationController: java.util.ArrayList mPendingAnimations>;

        $i0 = virtualinvoke $r17.<java.util.ArrayList: int size()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r19);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r51);

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mCanceled=");

        $z1 = r0.<com.android.server.wm.RecentsAnimationController: boolean mCanceled>;

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r23);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r51);

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mInputConsumerEnabled=");

        $z2 = r0.<com.android.server.wm.RecentsAnimationController: boolean mInputConsumerEnabled>;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r27);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r51);

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mTargetActivityRecord=");

        $r30 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.ActivityRecord mTargetActivityRecord>;

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30);

        $r32 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r32);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r51);

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isTargetOverWallpaper=");

        $z3 = specialinvoke r0.<com.android.server.wm.RecentsAnimationController: boolean isTargetOverWallpaper()>();

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r36 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r36);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r51);

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mRequestDeferCancelUntilNextTransition=");

        $z4 = r0.<com.android.server.wm.RecentsAnimationController: boolean mRequestDeferCancelUntilNextTransition>;

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r40 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r40);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r51);

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mCancelOnNextTransitionStart=");

        $z5 = r0.<com.android.server.wm.RecentsAnimationController: boolean mCancelOnNextTransitionStart>;

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        $r44 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r44);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r51);

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mCancelDeferredWithScreenshot=");

        $z6 = r0.<com.android.server.wm.RecentsAnimationController: boolean mCancelDeferredWithScreenshot>;

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        $r48 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r48);

        return;
    }

    public void initialize(int, android.util.SparseBooleanArray, com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.RecentsAnimationController r0;
        com.android.server.wm.ActivityRecord r1;
        int i0, $i1, $i2, $i3, $i4, i5, i6;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        com.android.server.wm.DisplayContent $r2, $r5, $r7, $r10, $r14, $r16, r33;
        com.android.server.wm.WindowManagerInternal$AppTransitionListener $r3;
        com.android.server.wm.AppTransition $r4;
        com.android.server.wm.TaskDisplayArea $r6, $r8, $r11;
        java.util.ArrayList $r9, r26;
        com.android.server.wm.WindowManagerService $r12;
        com.android.server.wm.WindowSurfacePlacer $r13;
        com.android.server.wm.DisplayContent$FixedRotationTransitionListener $r15;
        java.lang.String $r17, r32;
        java.lang.Object[] $r18;
        com.android.server.wm.ProtoLogGroup $r19;
        java.lang.Object $r20;
        com.android.server.wm.'-$$Lambda$RecentsAnimationController$EI4Oe4vlsDKieYi6iTTlm_g_DcI' $r22;
        com.android.internal.util.function.pooled.ArgumentPlaceholder $r23;
        android.os.RemoteException $r24;
        android.util.SparseBooleanArray r25;
        com.android.server.wm.ActivityStack r27, r34;
        com.android.internal.util.function.pooled.PooledConsumer r28;
        com.android.server.wm.Task r29;
        android.app.WindowConfiguration r30;
        android.graphics.Rect r31;
        com.android.server.statusbar.StatusBarManagerInternal r35;
        java.util.function.BiConsumer r37;

        r0 := @this: com.android.server.wm.RecentsAnimationController;

        i5 := @parameter0: int;

        r25 := @parameter1: android.util.SparseBooleanArray;

        r1 := @parameter2: com.android.server.wm.ActivityRecord;

        r0.<com.android.server.wm.RecentsAnimationController: int mTargetActivityType> = i5;

        $r2 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r4 = $r2.<com.android.server.wm.DisplayContent: com.android.server.wm.AppTransition mAppTransition>;

        $r3 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.WindowManagerInternal$AppTransitionListener mAppTransitionListener>;

        virtualinvoke $r4.<com.android.server.wm.AppTransition: void registerListenerLocked(com.android.server.wm.WindowManagerInternal$AppTransitionListener)>($r3);

        $r5 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r6 = virtualinvoke $r5.<com.android.server.wm.DisplayContent: com.android.server.wm.TaskDisplayArea getDefaultTaskDisplayArea()>();

        r26 = virtualinvoke $r6.<com.android.server.wm.TaskDisplayArea: java.util.ArrayList getVisibleTasks()>();

        $r7 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r8 = virtualinvoke $r7.<com.android.server.wm.DisplayContent: com.android.server.wm.TaskDisplayArea getDefaultTaskDisplayArea()>();

        r27 = virtualinvoke $r8.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getStack(int,int)>(0, i5);

        if r27 == null goto label01;

        $r22 = <com.android.server.wm._$$Lambda$RecentsAnimationController$EI4Oe4vlsDKieYi6iTTlm_g_DcI: com.android.server.wm.'-$$Lambda$RecentsAnimationController$EI4Oe4vlsDKieYi6iTTlm_g_DcI' INSTANCE>;

        $r23 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: com.android.internal.util.function.pooled.ArgumentPlaceholder __(java.lang.Class)>(class "Lcom/android/server/wm/Task;");

        r37 = (java.util.function.BiConsumer) $r22;

        r28 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: com.android.internal.util.function.pooled.PooledConsumer obtainConsumer(java.util.function.BiConsumer,com.android.internal.util.function.pooled.ArgumentPlaceholder,java.lang.Object)>(r37, $r23, r26);

        virtualinvoke r27.<com.android.server.wm.ActivityStack: void forAllLeafTasks(java.util.function.Consumer,boolean)>(r28, 1);

        interfaceinvoke r28.<com.android.internal.util.function.pooled.PooledConsumer: void recycle()>();

     label01:
        i0 = virtualinvoke r26.<java.util.ArrayList: int size()>();

        i6 = 0;

     label02:
        if i6 >= i0 goto label05;

        $r20 = virtualinvoke r26.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        r29 = (com.android.server.wm.Task) $r20;

        r30 = virtualinvoke r29.<com.android.server.wm.Task: android.app.WindowConfiguration getWindowConfiguration()>();

        $z3 = virtualinvoke r30.<android.app.WindowConfiguration: boolean tasksAreFloating()>();

        if $z3 != 0 goto label04;

        $i3 = virtualinvoke r30.<android.app.WindowConfiguration: int getWindowingMode()>();

        if $i3 != 3 goto label03;

        goto label04;

     label03:
        $i4 = r29.<com.android.server.wm.Task: int mTaskId>;

        $z4 = virtualinvoke r25.<android.util.SparseBooleanArray: boolean get(int)>($i4);

        $z5 = $z4 ^ 1;

        virtualinvoke r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.AnimationAdapter addAnimation(com.android.server.wm.Task,boolean)>(r29, $z5);

     label04:
        i6 = i6 + 1;

        goto label02;

     label05:
        $r9 = r0.<com.android.server.wm.RecentsAnimationController: java.util.ArrayList mPendingAnimations>;

        $z1 = virtualinvoke $r9.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 == 0 goto label06;

        virtualinvoke r0.<com.android.server.wm.RecentsAnimationController: void cancelAnimation(int,java.lang.String)>(2, "initialize-noVisibleTasks");

        return;

     label06:
        specialinvoke r0.<com.android.server.wm.RecentsAnimationController: void linkToDeathOfRunner()>();

     label07:
        z0 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_RECENTS_ANIMATIONS_enabled>;

        r31 = null;

        if z0 == 0 goto label08;

        $r17 = virtualinvoke r1.<com.android.server.wm.ActivityRecord: java.lang.String getName()>();

        r32 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r17);

        $r19 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_RECENTS_ANIMATIONS>;

        $r18 = newarray (java.lang.Object)[1];

        $r18[0] = r32;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void d(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r19, 1519757176, 0, null, $r18);

     label08:
        r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.ActivityRecord mTargetActivityRecord> = r1;

        $z2 = virtualinvoke r1.<com.android.server.wm.ActivityRecord: boolean windowsCanBeWallpaperTarget()>();

        if $z2 == 0 goto label09;

        r33 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.DisplayContent mDisplayContent>;

        $i1 = r33.<com.android.server.wm.DisplayContent: int pendingLayoutChanges>;

        $i2 = $i1 | 4;

        r33.<com.android.server.wm.DisplayContent: int pendingLayoutChanges> = $i2;

        $r16 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.DisplayContent mDisplayContent>;

        virtualinvoke $r16.<com.android.server.wm.DisplayContent: void setLayoutNeeded()>();

     label09:
        $r10 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r11 = virtualinvoke $r10.<com.android.server.wm.DisplayContent: com.android.server.wm.TaskDisplayArea getDefaultTaskDisplayArea()>();

        r34 = virtualinvoke $r11.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getRootHomeTask()>();

        if r34 == null goto label10;

        r31 = virtualinvoke r34.<com.android.server.wm.ActivityStack: android.graphics.Rect getBounds()>();

     label10:
        r0.<com.android.server.wm.RecentsAnimationController: android.graphics.Rect mMinimizedHomeBounds> = r31;

        $r12 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.WindowManagerService mService>;

        $r13 = $r12.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowSurfacePlacer mWindowPlacerLocked>;

        virtualinvoke $r13.<com.android.server.wm.WindowSurfacePlacer: void performSurfacePlacement()>();

        $r14 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.DisplayContent mDisplayContent>;

        $r15 = $r14.<com.android.server.wm.DisplayContent: com.android.server.wm.DisplayContent$FixedRotationTransitionListener mFixedRotationTransitionListener>;

        virtualinvoke $r15.<com.android.server.wm.DisplayContent$FixedRotationTransitionListener: void onStartRecentsAnimation(com.android.server.wm.ActivityRecord)>(r1);

        r35 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.statusbar.StatusBarManagerInternal mStatusBar>;

        if r35 == null goto label11;

        interfaceinvoke r35.<com.android.server.statusbar.StatusBarManagerInternal: void onRecentsAnimationStateChanged(boolean)>(1);

     label11:
        return;

     label12:
        $r24 := @caughtexception;

        virtualinvoke r0.<com.android.server.wm.RecentsAnimationController: void cancelAnimation(int,java.lang.String)>(2, "initialize-failedToLinkToDeath");

        return;

        catch android.os.RemoteException from label06 to label07 with label12;
    }

    boolean isAnimatingTask(com.android.server.wm.Task)
    {
        com.android.server.wm.RecentsAnimationController r0;
        com.android.server.wm.Task r1, $r6;
        java.util.ArrayList $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;
        com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter $r5;

        r0 := @this: com.android.server.wm.RecentsAnimationController;

        r1 := @parameter0: com.android.server.wm.Task;

        $r2 = r0.<com.android.server.wm.RecentsAnimationController: java.util.ArrayList mPendingAnimations>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r3 = r0.<com.android.server.wm.RecentsAnimationController: java.util.ArrayList mPendingAnimations>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter) $r4;

        $r6 = staticinvoke <com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter: com.android.server.wm.Task access$600(com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter)>($r5);

        if r1 != $r6 goto label2;

        return 1;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return 0;
    }

    boolean isAnimatingWallpaper(com.android.server.wm.WallpaperWindowToken)
    {
        com.android.server.wm.RecentsAnimationController r0;
        com.android.server.wm.WallpaperWindowToken r1, $r6;
        java.util.ArrayList $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;
        com.android.server.wm.WallpaperAnimationAdapter $r5;

        r0 := @this: com.android.server.wm.RecentsAnimationController;

        r1 := @parameter0: com.android.server.wm.WallpaperWindowToken;

        $r2 = r0.<com.android.server.wm.RecentsAnimationController: java.util.ArrayList mPendingWallpaperAnimations>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r3 = r0.<com.android.server.wm.RecentsAnimationController: java.util.ArrayList mPendingWallpaperAnimations>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (com.android.server.wm.WallpaperAnimationAdapter) $r4;

        $r6 = virtualinvoke $r5.<com.android.server.wm.WallpaperAnimationAdapter: com.android.server.wm.WallpaperWindowToken getToken()>();

        if r1 != $r6 goto label2;

        return 1;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return 0;
    }

    boolean isTargetApp(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.RecentsAnimationController r0;
        com.android.server.wm.ActivityRecord r1, r2;
        boolean z0;

        r0 := @this: com.android.server.wm.RecentsAnimationController;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        r2 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.ActivityRecord mTargetActivityRecord>;

        if r2 == null goto label1;

        if r1 != r2 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    boolean isWallpaperVisible(com.android.server.wm.WindowState)
    {
        com.android.server.wm.RecentsAnimationController r0;
        com.android.server.wm.WindowState r1;
        android.view.WindowManager$LayoutParams $r2;
        int $i0;
        com.android.server.wm.ActivityRecord $r3, $r5, $r6;
        com.android.server.wm.Task $r4;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.server.wm.RecentsAnimationController;

        r1 := @parameter0: com.android.server.wm.WindowState;

        z2 = 1;

        if r1 == null goto label3;

        $r2 = r1.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i0 = $r2.<android.view.WindowManager$LayoutParams: int type>;

        if $i0 != 1 goto label3;

        $r3 = r1.<com.android.server.wm.WindowState: com.android.server.wm.ActivityRecord mActivityRecord>;

        if $r3 == null goto label1;

        $r6 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.ActivityRecord mTargetActivityRecord>;

        $r5 = r1.<com.android.server.wm.WindowState: com.android.server.wm.ActivityRecord mActivityRecord>;

        if $r6 == $r5 goto label2;

     label1:
        $r4 = virtualinvoke r1.<com.android.server.wm.WindowState: com.android.server.wm.Task getTask()>();

        $z0 = virtualinvoke r0.<com.android.server.wm.RecentsAnimationController: boolean isAnimatingTask(com.android.server.wm.Task)>($r4);

        if $z0 == 0 goto label3;

     label2:
        $z1 = specialinvoke r0.<com.android.server.wm.RecentsAnimationController: boolean isTargetOverWallpaper()>();

        if $z1 == 0 goto label3;

        goto label4;

     label3:
        z2 = 0;

     label4:
        return z2;
    }

    public void lambda$createWallpaperAnimations$3$RecentsAnimationController(com.android.server.wm.WallpaperAnimationAdapter)
    {
        com.android.server.wm.RecentsAnimationController r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.WindowManagerService $r2;
        java.util.ArrayList $r3;
        java.lang.Throwable $r4;
        com.android.server.wm.WallpaperAnimationAdapter r5;

        r0 := @this: com.android.server.wm.RecentsAnimationController;

        r5 := @parameter0: com.android.server.wm.WallpaperAnimationAdapter;

        $r2 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.WindowManagerService mService>;

        r1 = $r2.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.RecentsAnimationController: java.util.ArrayList mPendingWallpaperAnimations>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r5);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void lambda$new$0$RecentsAnimationController()
    {
        com.android.server.wm.RecentsAnimationController r0;
        boolean $z0;
        byte b0;

        r0 := @this: com.android.server.wm.RecentsAnimationController;

        $z0 = r0.<com.android.server.wm.RecentsAnimationController: boolean mWillFinishToHome>;

        if $z0 == 0 goto label1;

        b0 = 1;

        goto label2;

     label1:
        b0 = 2;

     label2:
        virtualinvoke r0.<com.android.server.wm.RecentsAnimationController: void cancelAnimation(int,java.lang.String)>(b0, "failSafeRunnable");

        return;
    }

    public void lambda$screenshotRecentTask$4$RecentsAnimationController(int, int, com.android.server.wm.AnimationAdapter)
    {
        com.android.server.wm.RecentsAnimationController r0;
        int i0, i1;
        com.android.server.wm.AnimationAdapter r1;
        boolean $z0;
        com.android.server.wm.RecentsAnimationController$RecentsAnimationCallbacks $r2;
        java.lang.Object[] $r3;
        com.android.server.wm.ProtoLogGroup $r4;

        r0 := @this: com.android.server.wm.RecentsAnimationController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: com.android.server.wm.AnimationAdapter;

        $z0 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_RECENTS_ANIMATIONS_enabled>;

        if $z0 == 0 goto label1;

        $r4 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_RECENTS_ANIMATIONS>;

        $r3 = (java.lang.Object[]) null;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void d(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r4, -1939358269, 0, null, $r3);

     label1:
        $r2 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.RecentsAnimationController$RecentsAnimationCallbacks mCallbacks>;

        interfaceinvoke $r2.<com.android.server.wm.RecentsAnimationController$RecentsAnimationCallbacks: void onAnimationFinished(int,boolean)>(i0, 0);

        return;
    }

    void linkFixedRotationTransformIfNeeded(com.android.server.wm.WindowToken)
    {
        com.android.server.wm.RecentsAnimationController r0;
        com.android.server.wm.WindowToken r1;
        com.android.server.wm.ActivityRecord r2;

        r0 := @this: com.android.server.wm.RecentsAnimationController;

        r1 := @parameter0: com.android.server.wm.WindowToken;

        r2 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.ActivityRecord mTargetActivityRecord>;

        if r2 != null goto label1;

        return;

     label1:
        virtualinvoke r1.<com.android.server.wm.WindowToken: void linkFixedRotationTransform(com.android.server.wm.WindowToken)>(r2);

        return;
    }

    void removeAnimation(com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter)
    {
        com.android.server.wm.RecentsAnimationController r0;
        com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter r1;
        long l0;
        boolean $z0;
        com.android.server.wm.Task $r2, $r5;
        com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback $r3;
        int $i1, $i2;
        java.util.ArrayList $r4;
        java.lang.Object[] $r6;
        com.android.server.wm.ProtoLogGroup $r7;
        java.lang.Long $r8;

        r0 := @this: com.android.server.wm.RecentsAnimationController;

        r1 := @parameter0: com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter;

        $z0 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_RECENTS_ANIMATIONS_enabled>;

        if $z0 == 0 goto label1;

        $r5 = staticinvoke <com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter: com.android.server.wm.Task access$600(com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter)>(r1);

        $i2 = $r5.<com.android.server.wm.Task: int mTaskId>;

        l0 = (long) $i2;

        $r7 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_RECENTS_ANIMATIONS>;

        $r6 = newarray (java.lang.Object)[1];

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r6[0] = $r8;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void d(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r7, 83950285, 1, null, $r6);

     label1:
        $r2 = staticinvoke <com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter: com.android.server.wm.Task access$600(com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter)>(r1);

        virtualinvoke $r2.<com.android.server.wm.Task: void setCanAffectSystemUiFlags(boolean)>(1);

        $r3 = staticinvoke <com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter: com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback access$1400(com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter)>(r1);

        $i1 = staticinvoke <com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter: int access$1300(com.android.server.wm.RecentsAnimationController$TaskAnimationAdapter)>(r1);

        interfaceinvoke $r3.<com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback: void onAnimationFinished(int,com.android.server.wm.AnimationAdapter)>($i1, r1);

        $r4 = r0.<com.android.server.wm.RecentsAnimationController: java.util.ArrayList mPendingAnimations>;

        virtualinvoke $r4.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        return;
    }

    void removeWallpaperAnimation(com.android.server.wm.WallpaperAnimationAdapter)
    {
        com.android.server.wm.RecentsAnimationController r0;
        com.android.server.wm.WallpaperAnimationAdapter r1;
        boolean $z0;
        com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback $r2;
        int $i0;
        java.util.ArrayList $r3;
        java.lang.Object[] $r4;
        com.android.server.wm.ProtoLogGroup $r5;

        r0 := @this: com.android.server.wm.RecentsAnimationController;

        r1 := @parameter0: com.android.server.wm.WallpaperAnimationAdapter;

        $z0 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_RECENTS_ANIMATIONS_enabled>;

        if $z0 == 0 goto label1;

        $r5 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_RECENTS_ANIMATIONS>;

        $r4 = (java.lang.Object[]) null;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void d(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r5, -1768557332, 0, null, $r4);

     label1:
        $r2 = virtualinvoke r1.<com.android.server.wm.WallpaperAnimationAdapter: com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback getLeashFinishedCallback()>();

        $i0 = virtualinvoke r1.<com.android.server.wm.WallpaperAnimationAdapter: int getLastAnimationType()>();

        interfaceinvoke $r2.<com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback: void onAnimationFinished(int,com.android.server.wm.AnimationAdapter)>($i0, r1);

        $r3 = r0.<com.android.server.wm.RecentsAnimationController: java.util.ArrayList mPendingWallpaperAnimations>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        return;
    }

    void scheduleFailsafe()
    {
        com.android.server.wm.RecentsAnimationController r0;
        com.android.server.wm.WindowManagerService $r1;
        java.lang.Runnable $r2;
        com.android.server.wm.WindowManagerService$H $r3;

        r0 := @this: com.android.server.wm.RecentsAnimationController;

        $r1 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.WindowManagerService mService>;

        $r3 = $r1.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerService$H mH>;

        $r2 = r0.<com.android.server.wm.RecentsAnimationController: java.lang.Runnable mFailsafeRunnable>;

        virtualinvoke $r3.<com.android.server.wm.WindowManagerService$H: boolean postDelayed(java.lang.Runnable,long)>($r2, 1000L);

        return;
    }

    android.app.ActivityManager$TaskSnapshot screenshotRecentTask(com.android.server.wm.Task, int)
    {
        com.android.server.wm.RecentsAnimationController r0;
        com.android.server.wm.Task r1;
        int i0, $i1, $i2;
        com.android.server.wm.WindowManagerService $r2, $r6, $r12;
        com.android.server.wm.Task[] $r3;
        com.android.server.wm.SurfaceAnimator $r4, $r13;
        com.android.server.wm.TaskScreenshotAnimatable $r5;
        android.view.SurfaceControl$ScreenshotGraphicBuffer $r7;
        java.util.function.Function $r8;
        android.graphics.GraphicBuffer $r9;
        android.graphics.ColorSpace $r10;
        com.android.server.wm._$$Lambda$RecentsAnimationController$N3j3xQ1hfm1lj2ROiq1dyExvslk $r11;
        com.android.server.wm.TaskSnapshotController r14;
        android.util.ArraySet r15;
        android.app.ActivityManager$TaskSnapshot r16;

        r0 := @this: com.android.server.wm.RecentsAnimationController;

        r1 := @parameter0: com.android.server.wm.Task;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.WindowManagerService mService>;

        r14 = $r2.<com.android.server.wm.WindowManagerService: com.android.server.wm.TaskSnapshotController mTaskSnapshotController>;

        $r3 = newarray (com.android.server.wm.Task)[1];

        $r3[0] = r1;

        r15 = staticinvoke <com.google.android.collect.Sets: android.util.ArraySet newArraySet(java.lang.Object[])>($r3);

        virtualinvoke r14.<com.android.server.wm.TaskSnapshotController: void snapshotTasks(android.util.ArraySet)>(r15);

        virtualinvoke r14.<com.android.server.wm.TaskSnapshotController: void addSkipClosingAppSnapshotTasks(android.util.ArraySet)>(r15);

        $i2 = r1.<com.android.server.wm.Task: int mTaskId>;

        $i1 = r1.<com.android.server.wm.Task: int mUserId>;

        r16 = virtualinvoke r14.<com.android.server.wm.TaskSnapshotController: android.app.ActivityManager$TaskSnapshot getSnapshot(int,int,boolean,boolean)>($i2, $i1, 0, 0);

        if r16 != null goto label1;

        return null;

     label1:
        $r4 = new com.android.server.wm.SurfaceAnimator;

        $r5 = new com.android.server.wm.TaskScreenshotAnimatable;

        $r6 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.WindowManagerService mService>;

        $r8 = $r6.<com.android.server.wm.WindowManagerService: java.util.function.Function mSurfaceControlFactory>;

        $r7 = new android.view.SurfaceControl$ScreenshotGraphicBuffer;

        $r9 = virtualinvoke r16.<android.app.ActivityManager$TaskSnapshot: android.graphics.GraphicBuffer getSnapshot()>();

        $r10 = virtualinvoke r16.<android.app.ActivityManager$TaskSnapshot: android.graphics.ColorSpace getColorSpace()>();

        specialinvoke $r7.<android.view.SurfaceControl$ScreenshotGraphicBuffer: void <init>(android.graphics.GraphicBuffer,android.graphics.ColorSpace,boolean)>($r9, $r10, 0);

        specialinvoke $r5.<com.android.server.wm.TaskScreenshotAnimatable: void <init>(java.util.function.Function,com.android.server.wm.Task,android.view.SurfaceControl$ScreenshotGraphicBuffer)>($r8, r1, $r7);

        $r11 = new com.android.server.wm._$$Lambda$RecentsAnimationController$N3j3xQ1hfm1lj2ROiq1dyExvslk;

        specialinvoke $r11.<com.android.server.wm._$$Lambda$RecentsAnimationController$N3j3xQ1hfm1lj2ROiq1dyExvslk: void <init>(com.android.server.wm.RecentsAnimationController,int)>(r0, i0);

        $r12 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.WindowManagerService mService>;

        specialinvoke $r4.<com.android.server.wm.SurfaceAnimator: void <init>(com.android.server.wm.SurfaceAnimator$Animatable,com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback,com.android.server.wm.WindowManagerService)>($r5, $r11, $r12);

        r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.SurfaceAnimator mRecentScreenshotAnimator> = $r4;

        $r13 = r1.<com.android.server.wm.Task: com.android.server.wm.SurfaceAnimator mSurfaceAnimator>;

        virtualinvoke $r4.<com.android.server.wm.SurfaceAnimator: void transferAnimation(com.android.server.wm.SurfaceAnimator)>($r13);

        return r16;
    }

    void setCancelOnNextTransitionStart()
    {
        com.android.server.wm.RecentsAnimationController r0;

        r0 := @this: com.android.server.wm.RecentsAnimationController;

        r0.<com.android.server.wm.RecentsAnimationController: boolean mCancelOnNextTransitionStart> = 1;

        return;
    }

    void setDeferredCancel(boolean, boolean)
    {
        com.android.server.wm.RecentsAnimationController r0;
        boolean z0, z1;

        r0 := @this: com.android.server.wm.RecentsAnimationController;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r0.<com.android.server.wm.RecentsAnimationController: boolean mRequestDeferCancelUntilNextTransition> = z0;

        r0.<com.android.server.wm.RecentsAnimationController: boolean mCancelDeferredWithScreenshot> = z1;

        return;
    }

    boolean shouldApplyInputConsumer(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.RecentsAnimationController r0;
        com.android.server.wm.ActivityRecord r1;
        boolean $z0, $z1, $z2, z3;

        r0 := @this: com.android.server.wm.RecentsAnimationController;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        $z0 = r0.<com.android.server.wm.RecentsAnimationController: boolean mInputConsumerEnabled>;

        if $z0 == 0 goto label1;

        if r1 == null goto label1;

        $z1 = virtualinvoke r0.<com.android.server.wm.RecentsAnimationController: boolean isTargetApp(com.android.server.wm.ActivityRecord)>(r1);

        if $z1 != 0 goto label1;

        $z2 = specialinvoke r0.<com.android.server.wm.RecentsAnimationController: boolean isAnimatingApp(com.android.server.wm.ActivityRecord)>(r1);

        if $z2 == 0 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        return z3;
    }

    boolean shouldDeferCancelUntilNextTransition()
    {
        com.android.server.wm.RecentsAnimationController r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.RecentsAnimationController;

        $z0 = r0.<com.android.server.wm.RecentsAnimationController: boolean mRequestDeferCancelUntilNextTransition>;

        return $z0;
    }

    boolean shouldDeferCancelWithScreenshot()
    {
        com.android.server.wm.RecentsAnimationController r0;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.server.wm.RecentsAnimationController;

        $z0 = r0.<com.android.server.wm.RecentsAnimationController: boolean mRequestDeferCancelUntilNextTransition>;

        if $z0 == 0 goto label1;

        $z1 = r0.<com.android.server.wm.RecentsAnimationController: boolean mCancelDeferredWithScreenshot>;

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    boolean shouldIgnoreForAccessibility(com.android.server.wm.WindowState)
    {
        com.android.server.wm.RecentsAnimationController r0;
        com.android.server.wm.WindowState r1;
        com.android.server.wm.Task r2;
        boolean $z0, $z1, z2;
        com.android.server.wm.ActivityRecord $r3;

        r0 := @this: com.android.server.wm.RecentsAnimationController;

        r1 := @parameter0: com.android.server.wm.WindowState;

        r2 = virtualinvoke r1.<com.android.server.wm.WindowState: com.android.server.wm.Task getTask()>();

        if r2 == null goto label1;

        $z0 = virtualinvoke r0.<com.android.server.wm.RecentsAnimationController: boolean isAnimatingTask(com.android.server.wm.Task)>(r2);

        if $z0 == 0 goto label1;

        $r3 = r1.<com.android.server.wm.WindowState: com.android.server.wm.ActivityRecord mActivityRecord>;

        $z1 = virtualinvoke r0.<com.android.server.wm.RecentsAnimationController: boolean isTargetApp(com.android.server.wm.ActivityRecord)>($r3);

        if $z1 != 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    void startAnimation()
    {
        com.android.server.wm.RecentsAnimationController r0;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6;
        android.view.RemoteAnimationTarget[] r1, r2;
        int $i0, $i1;
        com.android.server.wm.DisplayContent $r3;
        com.android.server.wm.ActivityRecord $r4, $r7, $r9, $r24, $r26, $r28, $r36;
        android.graphics.Rect $r5, r35, r37;
        com.android.server.wm.WindowManagerService $r6, $r12;
        java.lang.Integer $r10;
        com.android.server.wm.ActivityTaskManagerService $r13;
        com.android.server.wm.ActivityStackSupervisor $r14;
        com.android.server.wm.ActivityMetricsLogger $r15;
        java.util.ArrayList $r16;
        java.util.stream.Stream $r17, $r19;
        com.android.server.wm.'-$$Lambda$RecentsAnimationController$Qf54zw-ZSotFC4zX6WOgsNr8yHw' $r18;
        java.util.stream.Collector $r20;
        java.lang.Object $r21;
        java.lang.Object[] $r22, $r29;
        com.android.server.wm.ProtoLogGroup $r23, $r30;
        com.android.server.wm.WindowState $r25, $r27;
        java.lang.Boolean $r31, $r32;
        android.os.RemoteException $r33;
        java.lang.String $r34, r40;
        android.view.IRecentsAnimationRunner $r38;
        android.view.IRecentsAnimationController $r39;
        android.util.ArrayMap r43;
        java.util.function.Function r44;

        r0 := @this: com.android.server.wm.RecentsAnimationController;

        $z2 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_RECENTS_ANIMATIONS_enabled>;

        if $z2 == 0 goto label01;

        z0 = r0.<com.android.server.wm.RecentsAnimationController: boolean mPendingStart>;

        z1 = r0.<com.android.server.wm.RecentsAnimationController: boolean mCanceled>;

        $r30 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_RECENTS_ANIMATIONS>;

        $r29 = newarray (java.lang.Object)[2];

        $r31 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r29[0] = $r31;

        $r32 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1);

        $r29[1] = $r32;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void d(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r30, 17696244, 15, null, $r29);

     label01:
        $z3 = r0.<com.android.server.wm.RecentsAnimationController: boolean mPendingStart>;

        if $z3 == 0 goto label15;

        $z4 = r0.<com.android.server.wm.RecentsAnimationController: boolean mCanceled>;

        if $z4 == 0 goto label02;

        goto label15;

     label02:
        r1 = specialinvoke r0.<com.android.server.wm.RecentsAnimationController: android.view.RemoteAnimationTarget[] createAppAnimations()>();

        $i0 = lengthof r1;

        if $i0 != 0 goto label04;

        virtualinvoke r0.<com.android.server.wm.RecentsAnimationController: void cancelAnimation(int,java.lang.String)>(2, "startAnimation-noAppWindows");

     label03:
        return;

     label04:
        r2 = specialinvoke r0.<com.android.server.wm.RecentsAnimationController: android.view.RemoteAnimationTarget[] createWallpaperAnimations()>();

        r0.<com.android.server.wm.RecentsAnimationController: boolean mPendingStart> = 0;

        $r3 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.DisplayContent mDisplayContent>;

        virtualinvoke $r3.<com.android.server.wm.DisplayContent: void performLayout(boolean,boolean)>(0, 0);

        $r4 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.ActivityRecord mTargetActivityRecord>;

        if $r4 == null goto label06;

        $r28 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.ActivityRecord mTargetActivityRecord>;

        $z5 = virtualinvoke $r28.<com.android.server.wm.ActivityRecord: boolean inSplitScreenSecondaryWindowingMode()>();

        if $z5 == 0 goto label06;

        r35 = r0.<com.android.server.wm.RecentsAnimationController: android.graphics.Rect mMinimizedHomeBounds>;

     label05:
        goto label07;

     label06:
        r35 = null;

     label07:
        $r36 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.ActivityRecord mTargetActivityRecord>;

        if $r36 == null goto label09;

        $r24 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.ActivityRecord mTargetActivityRecord>;

        $r25 = virtualinvoke $r24.<com.android.server.wm.ActivityRecord: com.android.server.wm.WindowState findMainWindow()>();

        if $r25 == null goto label09;

        $r26 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.ActivityRecord mTargetActivityRecord>;

        $r27 = virtualinvoke $r26.<com.android.server.wm.ActivityRecord: com.android.server.wm.WindowState findMainWindow()>();

        r37 = virtualinvoke $r27.<com.android.server.wm.WindowState: android.graphics.Rect getContentInsets()>();

     label08:
        goto label10;

     label09:
        $r6 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.WindowManagerService mService>;

        $i1 = r0.<com.android.server.wm.RecentsAnimationController: int mDisplayId>;

        $r5 = r0.<com.android.server.wm.RecentsAnimationController: android.graphics.Rect mTmpRect>;

        virtualinvoke $r6.<com.android.server.wm.WindowManagerService: void getStableInsets(int,android.graphics.Rect)>($i1, $r5);

        r37 = r0.<com.android.server.wm.RecentsAnimationController: android.graphics.Rect mTmpRect>;

     label10:
        $r38 = r0.<com.android.server.wm.RecentsAnimationController: android.view.IRecentsAnimationRunner mRunner>;

        $r39 = r0.<com.android.server.wm.RecentsAnimationController: android.view.IRecentsAnimationController mController>;

        interfaceinvoke $r38.<android.view.IRecentsAnimationRunner: void onAnimationStart(android.view.IRecentsAnimationController,android.view.RemoteAnimationTarget[],android.view.RemoteAnimationTarget[],android.graphics.Rect,android.graphics.Rect)>($r39, r1, r2, r37, r35);

        $z6 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_RECENTS_ANIMATIONS_enabled>;

        if $z6 == 0 goto label11;

        $r16 = r0.<com.android.server.wm.RecentsAnimationController: java.util.ArrayList mPendingAnimations>;

        $r17 = virtualinvoke $r16.<java.util.ArrayList: java.util.stream.Stream stream()>();

        $r18 = <com.android.server.wm._$$Lambda$RecentsAnimationController$Qf54zw_ZSotFC4zX6WOgsNr8yHw: com.android.server.wm.'-$$Lambda$RecentsAnimationController$Qf54zw-ZSotFC4zX6WOgsNr8yHw' INSTANCE>;

        r44 = (java.util.function.Function) $r18;

        $r19 = interfaceinvoke $r17.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(r44);

        $r20 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();

        $r21 = interfaceinvoke $r19.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r20);

        r40 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r21);

        $r23 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_RECENTS_ANIMATIONS>;

        $r22 = newarray (java.lang.Object)[1];

        $r22[0] = r40;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void d(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r23, -1207757583, 0, null, $r22);

     label11:
        goto label13;

     label12:
        $r33 := @caughtexception;

        $r34 = <com.android.server.wm.RecentsAnimationController: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r34, "Failed to start recents animation", $r33);

     label13:
        $r7 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.ActivityRecord mTargetActivityRecord>;

        if $r7 == null goto label14;

        r43 = new android.util.ArrayMap;

        specialinvoke r43.<android.util.ArrayMap: void <init>(int)>(1);

        $r9 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.ActivityRecord mTargetActivityRecord>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        virtualinvoke r43.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r10);

        $r12 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.WindowManagerService mService>;

        $r13 = $r12.<com.android.server.wm.WindowManagerService: com.android.server.wm.ActivityTaskManagerService mAtmService>;

        $r14 = $r13.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityStackSupervisor mStackSupervisor>;

        $r15 = virtualinvoke $r14.<com.android.server.wm.ActivityStackSupervisor: com.android.server.wm.ActivityMetricsLogger getActivityMetricsLogger()>();

        virtualinvoke $r15.<com.android.server.wm.ActivityMetricsLogger: void notifyTransitionStarting(android.util.ArrayMap)>(r43);

     label14:
        return;

     label15:
        return;

        catch android.os.RemoteException from label02 to label03 with label12;
        catch android.os.RemoteException from label04 to label05 with label12;
        catch android.os.RemoteException from label07 to label08 with label12;
        catch android.os.RemoteException from label09 to label10 with label12;
        catch android.os.RemoteException from label10 to label11 with label12;
    }

    boolean updateInputConsumerForApp(android.view.InputWindowHandle, boolean)
    {
        com.android.server.wm.RecentsAnimationController r0;
        android.view.InputWindowHandle r1;
        boolean z0;
        android.graphics.Rect $r2, $r3;
        android.graphics.Region $r4;
        com.android.server.wm.ActivityRecord r5;
        com.android.server.wm.WindowState r6;

        r0 := @this: com.android.server.wm.RecentsAnimationController;

        r1 := @parameter0: android.view.InputWindowHandle;

        z0 := @parameter1: boolean;

        r5 = r0.<com.android.server.wm.RecentsAnimationController: com.android.server.wm.ActivityRecord mTargetActivityRecord>;

        if r5 == null goto label1;

        r6 = virtualinvoke r5.<com.android.server.wm.ActivityRecord: com.android.server.wm.WindowState findMainWindow()>();

        goto label2;

     label1:
        r6 = null;

     label2:
        if r6 == null goto label3;

        $r2 = r0.<com.android.server.wm.RecentsAnimationController: android.graphics.Rect mTmpRect>;

        virtualinvoke r6.<com.android.server.wm.WindowState: void getBounds(android.graphics.Rect)>($r2);

        r1.<android.view.InputWindowHandle: boolean hasFocus> = z0;

        $r4 = r1.<android.view.InputWindowHandle: android.graphics.Region touchableRegion>;

        $r3 = r0.<com.android.server.wm.RecentsAnimationController: android.graphics.Rect mTmpRect>;

        virtualinvoke $r4.<android.graphics.Region: boolean set(android.graphics.Rect)>($r3);

        return 1;

     label3:
        return 0;
    }
}
