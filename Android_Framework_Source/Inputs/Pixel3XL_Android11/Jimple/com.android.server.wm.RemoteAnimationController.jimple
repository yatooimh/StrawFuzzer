class com.android.server.wm.RemoteAnimationController extends java.lang.Object implements android.os.IBinder$DeathRecipient
{
    private static final java.lang.String TAG;
    private static final long TIMEOUT_MS;
    private boolean mCanceled;
    private com.android.server.wm.RemoteAnimationController$FinishedCallback mFinishedCallback;
    private final android.os.Handler mHandler;
    private boolean mLinkedToDeathOfRunner;
    private final java.util.ArrayList mPendingAnimations;
    private final java.util.ArrayList mPendingWallpaperAnimations;
    private final android.view.RemoteAnimationAdapter mRemoteAnimationAdapter;
    private final com.android.server.wm.WindowManagerService mService;
    private final java.lang.Runnable mTimeoutRunnable;
    private final android.graphics.Rect mTmpRect;

    void <init>(com.android.server.wm.WindowManagerService, android.view.RemoteAnimationAdapter, android.os.Handler)
    {
        com.android.server.wm.RemoteAnimationController r0;
        com.android.server.wm.WindowManagerService r1;
        android.view.RemoteAnimationAdapter r2;
        android.os.Handler r3;
        java.util.ArrayList $r4, $r5;
        android.graphics.Rect $r6;
        com.android.server.wm._$$Lambda$RemoteAnimationController$uQS8vaPKQ_E3x_9G8NCxPQmw1fw $r7;

        r0 := @this: com.android.server.wm.RemoteAnimationController;

        r1 := @parameter0: com.android.server.wm.WindowManagerService;

        r2 := @parameter1: android.view.RemoteAnimationAdapter;

        r3 := @parameter2: android.os.Handler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.wm.RemoteAnimationController: java.util.ArrayList mPendingAnimations> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.wm.RemoteAnimationController: java.util.ArrayList mPendingWallpaperAnimations> = $r5;

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.RemoteAnimationController: android.graphics.Rect mTmpRect> = $r6;

        $r7 = new com.android.server.wm._$$Lambda$RemoteAnimationController$uQS8vaPKQ_E3x_9G8NCxPQmw1fw;

        specialinvoke $r7.<com.android.server.wm._$$Lambda$RemoteAnimationController$uQS8vaPKQ_E3x_9G8NCxPQmw1fw: void <init>(com.android.server.wm.RemoteAnimationController)>(r0);

        r0.<com.android.server.wm.RemoteAnimationController: java.lang.Runnable mTimeoutRunnable> = $r7;

        r0.<com.android.server.wm.RemoteAnimationController: com.android.server.wm.WindowManagerService mService> = r1;

        r0.<com.android.server.wm.RemoteAnimationController: android.view.RemoteAnimationAdapter mRemoteAnimationAdapter> = r2;

        r0.<com.android.server.wm.RemoteAnimationController: android.os.Handler mHandler> = r3;

        return;
    }

    static void access$200(com.android.server.wm.RemoteAnimationController)
    {
        com.android.server.wm.RemoteAnimationController r0;

        r0 := @parameter0: com.android.server.wm.RemoteAnimationController;

        specialinvoke r0.<com.android.server.wm.RemoteAnimationController: void onAnimationFinished()>();

        return;
    }

    static android.graphics.Rect access$300(com.android.server.wm.RemoteAnimationController)
    {
        com.android.server.wm.RemoteAnimationController r0;
        android.graphics.Rect $r1;

        r0 := @parameter0: com.android.server.wm.RemoteAnimationController;

        $r1 = r0.<com.android.server.wm.RemoteAnimationController: android.graphics.Rect mTmpRect>;

        return $r1;
    }

    static android.view.RemoteAnimationAdapter access$400(com.android.server.wm.RemoteAnimationController)
    {
        com.android.server.wm.RemoteAnimationController r0;
        android.view.RemoteAnimationAdapter $r1;

        r0 := @parameter0: com.android.server.wm.RemoteAnimationController;

        $r1 = r0.<com.android.server.wm.RemoteAnimationController: android.view.RemoteAnimationAdapter mRemoteAnimationAdapter>;

        return $r1;
    }

    static java.util.ArrayList access$500(com.android.server.wm.RemoteAnimationController)
    {
        com.android.server.wm.RemoteAnimationController r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: com.android.server.wm.RemoteAnimationController;

        $r1 = r0.<com.android.server.wm.RemoteAnimationController: java.util.ArrayList mPendingAnimations>;

        return $r1;
    }

    private android.view.RemoteAnimationTarget[] createAppAnimations()
    {
        com.android.server.wm.RemoteAnimationController r0;
        boolean $z0, $z1, $z2;
        java.util.ArrayList $r2, $r3, $r7, $r36;
        int $i0, $i1, $i2, $i3, i4;
        android.view.RemoteAnimationTarget[] $r4, $r6;
        java.lang.Object[] $r5, $r24, $r27, $r29;
        java.lang.Object $r8;
        com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper $r9, $r11, $r13, $r15, $r16, $r17, $r19, $r21, $r22, $r35;
        com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback $r12, $r14, $r18, $r20;
        com.android.server.wm.WindowContainer $r23, $r26;
        com.android.server.wm.ProtoLogGroup $r25, $r28, $r30;
        com.android.server.wm.RemoteAnimationController$RemoteAnimationRecord r31;
        android.view.RemoteAnimationTarget r32;
        java.lang.String r33, r34;

        r0 := @this: com.android.server.wm.RemoteAnimationController;

        $z0 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_REMOTE_ANIMATIONS_enabled>;

        if $z0 == 0 goto label1;

        $r30 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_REMOTE_ANIMATIONS>;

        $r29 = (java.lang.Object[]) null;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void d(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r30, -653156702, 0, null, $r29);

     label1:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = r0.<com.android.server.wm.RemoteAnimationController: java.util.ArrayList mPendingAnimations>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i4 = $i0 - 1;

     label2:
        if i4 < 0 goto label9;

        $r7 = r0.<com.android.server.wm.RemoteAnimationController: java.util.ArrayList mPendingAnimations>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r31 = (com.android.server.wm.RemoteAnimationController$RemoteAnimationRecord) $r8;

        r32 = virtualinvoke r31.<com.android.server.wm.RemoteAnimationController$RemoteAnimationRecord: android.view.RemoteAnimationTarget createRemoteAnimationTarget()>();

        if r32 == null goto label4;

        $z2 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_REMOTE_ANIMATIONS_enabled>;

        if $z2 == 0 goto label3;

        $r26 = r31.<com.android.server.wm.RemoteAnimationController$RemoteAnimationRecord: com.android.server.wm.WindowContainer mWindowContainer>;

        r33 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r26);

        $r28 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_REMOTE_ANIMATIONS>;

        $r27 = newarray (java.lang.Object)[1];

        $r27[0] = r33;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void d(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r28, -1248645819, 0, null, $r27);

     label3:
        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r32);

        goto label8;

     label4:
        $z1 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_REMOTE_ANIMATIONS_enabled>;

        if $z1 == 0 goto label5;

        $r23 = r31.<com.android.server.wm.RemoteAnimationController$RemoteAnimationRecord: com.android.server.wm.WindowContainer mWindowContainer>;

        r34 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r23);

        $r25 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_REMOTE_ANIMATIONS>;

        $r24 = newarray (java.lang.Object)[1];

        $r24[0] = r34;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void d(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r25, 638429464, 0, null, $r24);

     label5:
        $r9 = r31.<com.android.server.wm.RemoteAnimationController$RemoteAnimationRecord: com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper mAdapter>;

        if $r9 == null goto label6;

        $r17 = r31.<com.android.server.wm.RemoteAnimationController$RemoteAnimationRecord: com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper mAdapter>;

        $r18 = staticinvoke <com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper: com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback access$000(com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper)>($r17);

        if $r18 == null goto label6;

        $r19 = r31.<com.android.server.wm.RemoteAnimationController$RemoteAnimationRecord: com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper mAdapter>;

        $r20 = staticinvoke <com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper: com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback access$000(com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper)>($r19);

        $r21 = r31.<com.android.server.wm.RemoteAnimationController$RemoteAnimationRecord: com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper mAdapter>;

        $i3 = staticinvoke <com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper: int access$100(com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper)>($r21);

        $r22 = r31.<com.android.server.wm.RemoteAnimationController$RemoteAnimationRecord: com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper mAdapter>;

        interfaceinvoke $r20.<com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback: void onAnimationFinished(int,com.android.server.wm.AnimationAdapter)>($i3, $r22);

     label6:
        $r35 = r31.<com.android.server.wm.RemoteAnimationController$RemoteAnimationRecord: com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper mThumbnailAdapter>;

        if $r35 == null goto label7;

        $r11 = r31.<com.android.server.wm.RemoteAnimationController$RemoteAnimationRecord: com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper mThumbnailAdapter>;

        $r12 = staticinvoke <com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper: com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback access$000(com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper)>($r11);

        if $r12 == null goto label7;

        $r13 = r31.<com.android.server.wm.RemoteAnimationController$RemoteAnimationRecord: com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper mThumbnailAdapter>;

        $r14 = staticinvoke <com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper: com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback access$000(com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper)>($r13);

        $r15 = r31.<com.android.server.wm.RemoteAnimationController$RemoteAnimationRecord: com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper mAdapter>;

        $i2 = staticinvoke <com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper: int access$100(com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper)>($r15);

        $r16 = r31.<com.android.server.wm.RemoteAnimationController$RemoteAnimationRecord: com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper mThumbnailAdapter>;

        interfaceinvoke $r14.<com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback: void onAnimationFinished(int,com.android.server.wm.AnimationAdapter)>($i2, $r16);

     label7:
        $r36 = r0.<com.android.server.wm.RemoteAnimationController: java.util.ArrayList mPendingAnimations>;

        virtualinvoke $r36.<java.util.ArrayList: java.lang.Object remove(int)>(i4);

     label8:
        i4 = i4 + -1;

        goto label2;

     label9:
        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $r4 = newarray (android.view.RemoteAnimationTarget)[$i1];

        $r5 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (android.view.RemoteAnimationTarget[]) $r5;

        return $r6;
    }

    private android.view.RemoteAnimationTarget[] createWallpaperAnimations()
    {
        com.android.server.wm.RemoteAnimationController r0;
        boolean $z0;
        android.view.RemoteAnimationAdapter $r1, $r3;
        com.android.server.wm.WindowManagerService $r2;
        long $l0, $l1;
        com.android.server.wm._$$Lambda$RemoteAnimationController$dP8qDptNigoqhzVtIudsX5naGu4 $r4;
        java.util.ArrayList $r5;
        android.view.RemoteAnimationTarget[] $r6;
        java.lang.Object[] $r7;
        com.android.server.wm.ProtoLogGroup $r8;

        r0 := @this: com.android.server.wm.RemoteAnimationController;

        $z0 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_REMOTE_ANIMATIONS_enabled>;

        if $z0 == 0 goto label1;

        $r8 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_REMOTE_ANIMATIONS>;

        $r7 = (java.lang.Object[]) null;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void d(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r8, 594260577, 0, null, $r7);

     label1:
        $r2 = r0.<com.android.server.wm.RemoteAnimationController: com.android.server.wm.WindowManagerService mService>;

        $r1 = r0.<com.android.server.wm.RemoteAnimationController: android.view.RemoteAnimationAdapter mRemoteAnimationAdapter>;

        $l0 = virtualinvoke $r1.<android.view.RemoteAnimationAdapter: long getDuration()>();

        $r3 = r0.<com.android.server.wm.RemoteAnimationController: android.view.RemoteAnimationAdapter mRemoteAnimationAdapter>;

        $l1 = virtualinvoke $r3.<android.view.RemoteAnimationAdapter: long getStatusBarTransitionDelay()>();

        $r4 = new com.android.server.wm._$$Lambda$RemoteAnimationController$dP8qDptNigoqhzVtIudsX5naGu4;

        specialinvoke $r4.<com.android.server.wm._$$Lambda$RemoteAnimationController$dP8qDptNigoqhzVtIudsX5naGu4: void <init>(com.android.server.wm.RemoteAnimationController)>(r0);

        $r5 = r0.<com.android.server.wm.RemoteAnimationController: java.util.ArrayList mPendingWallpaperAnimations>;

        $r6 = staticinvoke <com.android.server.wm.WallpaperAnimationAdapter: android.view.RemoteAnimationTarget[] startWallpaperAnimations(com.android.server.wm.WindowManagerService,long,long,java.util.function.Consumer,java.util.ArrayList)>($r2, $l0, $l1, $r4, $r5);

        return $r6;
    }

    private void invokeAnimationCancelled()
    {
        com.android.server.wm.RemoteAnimationController r0;
        android.view.RemoteAnimationAdapter $r2;
        android.view.IRemoteAnimationRunner $r3;
        android.os.RemoteException $r4;

        r0 := @this: com.android.server.wm.RemoteAnimationController;

     label1:
        $r2 = r0.<com.android.server.wm.RemoteAnimationController: android.view.RemoteAnimationAdapter mRemoteAnimationAdapter>;

        $r3 = virtualinvoke $r2.<android.view.RemoteAnimationAdapter: android.view.IRemoteAnimationRunner getRunner()>();

        interfaceinvoke $r3.<android.view.IRemoteAnimationRunner: void onAnimationCancelled()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", "Failed to notify cancel", $r4);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void linkToDeathOfRunner() throws android.os.RemoteException
    {
        com.android.server.wm.RemoteAnimationController r0;
        boolean $z0;
        android.view.RemoteAnimationAdapter $r1;
        android.view.IRemoteAnimationRunner $r2;
        android.os.IBinder $r3;

        r0 := @this: com.android.server.wm.RemoteAnimationController;

        $z0 = r0.<com.android.server.wm.RemoteAnimationController: boolean mLinkedToDeathOfRunner>;

        if $z0 != 0 goto label1;

        $r1 = r0.<com.android.server.wm.RemoteAnimationController: android.view.RemoteAnimationAdapter mRemoteAnimationAdapter>;

        $r2 = virtualinvoke $r1.<android.view.RemoteAnimationAdapter: android.view.IRemoteAnimationRunner getRunner()>();

        $r3 = interfaceinvoke $r2.<android.view.IRemoteAnimationRunner: android.os.IBinder asBinder()>();

        interfaceinvoke $r3.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

        r0.<com.android.server.wm.RemoteAnimationController: boolean mLinkedToDeathOfRunner> = 1;

     label1:
        return;
    }

    private void onAnimationFinished()
    {
        com.android.server.wm.RemoteAnimationController r0;
        long l0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Runnable $r2;
        android.os.Handler $r3;
        com.android.server.wm.WindowManagerService $r4, $r5, $r8, $r45;
        java.util.ArrayList $r6, $r7, $r11, $r14, $r19, $r23, $r38;
        int $i1, $i2, $i3, $i4, $i5, $i6, i8, i9;
        java.lang.Object[] $r9, $r17, $r26, $r36, $r39;
        com.android.server.wm.ProtoLogGroup $r10, $r18, $r27, $r37, $r40;
        java.lang.Object $r12, $r20;
        com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback $r13, $r29, $r33;
        com.android.server.wm.WallpaperWindowToken $r16;
        com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper $r21, $r22, $r28, $r30, $r31, $r32, $r34, $r35;
        com.android.server.wm.WindowContainer $r25;
        java.lang.Long $r41;
        java.lang.Exception $r42;
        java.lang.Throwable $r43, $r44;
        com.android.server.wm.RemoteAnimationController$RemoteAnimationRecord r46;
        java.lang.String r47, r49;
        com.android.server.wm.WallpaperAnimationAdapter r48;

        r0 := @this: com.android.server.wm.RemoteAnimationController;

        $z0 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_REMOTE_ANIMATIONS_enabled>;

        if $z0 == 0 goto label01;

        $r38 = r0.<com.android.server.wm.RemoteAnimationController: java.util.ArrayList mPendingAnimations>;

        $i6 = virtualinvoke $r38.<java.util.ArrayList: int size()>();

        l0 = (long) $i6;

        $r40 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_REMOTE_ANIMATIONS>;

        $r39 = newarray (java.lang.Object)[1];

        $r41 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r39[0] = $r41;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void d(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r40, -1497837552, 1, null, $r39);

     label01:
        $r3 = r0.<com.android.server.wm.RemoteAnimationController: android.os.Handler mHandler>;

        $r2 = r0.<com.android.server.wm.RemoteAnimationController: java.lang.Runnable mTimeoutRunnable>;

        virtualinvoke $r3.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r2);

        $r4 = r0.<com.android.server.wm.RemoteAnimationController: com.android.server.wm.WindowManagerService mService>;

        r1 = $r4.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label02:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        specialinvoke r0.<com.android.server.wm.RemoteAnimationController: void unlinkToDeathOfRunner()>();

        specialinvoke r0.<com.android.server.wm.RemoteAnimationController: void releaseFinishedCallback()>();

        $r5 = r0.<com.android.server.wm.RemoteAnimationController: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r5.<com.android.server.wm.WindowManagerService: void openSurfaceTransaction()>();

     label03:
        $z1 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_REMOTE_ANIMATIONS_enabled>;

        if $z1 == 0 goto label04;

        $r37 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_REMOTE_ANIMATIONS>;

        $r36 = (java.lang.Object[]) null;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void d(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r37, 557227556, 0, null, $r36);

     label04:
        $r6 = r0.<com.android.server.wm.RemoteAnimationController: java.util.ArrayList mPendingAnimations>;

        $i1 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i8 = $i1 - 1;

     label05:
        if i8 < 0 goto label10;

     label06:
        $r19 = r0.<com.android.server.wm.RemoteAnimationController: java.util.ArrayList mPendingAnimations>;

        $r20 = virtualinvoke $r19.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        r46 = (com.android.server.wm.RemoteAnimationController$RemoteAnimationRecord) $r20;

        $r21 = r46.<com.android.server.wm.RemoteAnimationController$RemoteAnimationRecord: com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper mAdapter>;

        if $r21 == null goto label07;

        $r32 = r46.<com.android.server.wm.RemoteAnimationController$RemoteAnimationRecord: com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper mAdapter>;

        $r33 = staticinvoke <com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper: com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback access$000(com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper)>($r32);

        $r34 = r46.<com.android.server.wm.RemoteAnimationController$RemoteAnimationRecord: com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper mAdapter>;

        $i5 = staticinvoke <com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper: int access$100(com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper)>($r34);

        $r35 = r46.<com.android.server.wm.RemoteAnimationController$RemoteAnimationRecord: com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper mAdapter>;

        interfaceinvoke $r33.<com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback: void onAnimationFinished(int,com.android.server.wm.AnimationAdapter)>($i5, $r35);

     label07:
        $r22 = r46.<com.android.server.wm.RemoteAnimationController$RemoteAnimationRecord: com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper mThumbnailAdapter>;

        if $r22 == null goto label08;

        $r28 = r46.<com.android.server.wm.RemoteAnimationController$RemoteAnimationRecord: com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper mThumbnailAdapter>;

        $r29 = staticinvoke <com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper: com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback access$000(com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper)>($r28);

        $r30 = r46.<com.android.server.wm.RemoteAnimationController$RemoteAnimationRecord: com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper mAdapter>;

        $i4 = staticinvoke <com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper: int access$100(com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper)>($r30);

        $r31 = r46.<com.android.server.wm.RemoteAnimationController$RemoteAnimationRecord: com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper mThumbnailAdapter>;

        interfaceinvoke $r29.<com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback: void onAnimationFinished(int,com.android.server.wm.AnimationAdapter)>($i4, $r31);

     label08:
        $r23 = r0.<com.android.server.wm.RemoteAnimationController: java.util.ArrayList mPendingAnimations>;

        virtualinvoke $r23.<java.util.ArrayList: java.lang.Object remove(int)>(i8);

        $z4 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_REMOTE_ANIMATIONS_enabled>;

        if $z4 == 0 goto label09;

        $r25 = r46.<com.android.server.wm.RemoteAnimationController$RemoteAnimationRecord: com.android.server.wm.WindowContainer mWindowContainer>;

        r47 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r25);

        $r27 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_REMOTE_ANIMATIONS>;

        $r26 = newarray (java.lang.Object)[1];

        $r26[0] = r47;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void d(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r27, 972354148, 0, null, $r26);

     label09:
        i8 = i8 + -1;

        goto label05;

     label10:
        $r7 = r0.<com.android.server.wm.RemoteAnimationController: java.util.ArrayList mPendingWallpaperAnimations>;

        $i2 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        i9 = $i2 - 1;

     label11:
        if i9 < 0 goto label14;

     label12:
        $r11 = r0.<com.android.server.wm.RemoteAnimationController: java.util.ArrayList mPendingWallpaperAnimations>;

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        r48 = (com.android.server.wm.WallpaperAnimationAdapter) $r12;

        $r13 = virtualinvoke r48.<com.android.server.wm.WallpaperAnimationAdapter: com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback getLeashFinishedCallback()>();

        $i3 = virtualinvoke r48.<com.android.server.wm.WallpaperAnimationAdapter: int getLastAnimationType()>();

        interfaceinvoke $r13.<com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback: void onAnimationFinished(int,com.android.server.wm.AnimationAdapter)>($i3, r48);

        $r14 = r0.<com.android.server.wm.RemoteAnimationController: java.util.ArrayList mPendingWallpaperAnimations>;

        virtualinvoke $r14.<java.util.ArrayList: java.lang.Object remove(int)>(i9);

        $z3 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_REMOTE_ANIMATIONS_enabled>;

        if $z3 == 0 goto label13;

        $r16 = virtualinvoke r48.<com.android.server.wm.WallpaperAnimationAdapter: com.android.server.wm.WallpaperWindowToken getToken()>();

        r49 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r16);

        $r18 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_REMOTE_ANIMATIONS>;

        $r17 = newarray (java.lang.Object)[1];

        $r17[0] = r49;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void d(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r18, -853404763, 0, null, $r17);

     label13:
        i9 = i9 + -1;

        goto label11;

     label14:
        $r8 = r0.<com.android.server.wm.RemoteAnimationController: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r8.<com.android.server.wm.WindowManagerService: void closeSurfaceTransaction(java.lang.String)>("RemoteAnimationController#finished");

     label15:
        exitmonitor r1;

     label16:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        specialinvoke r0.<com.android.server.wm.RemoteAnimationController: void setRunningRemoteAnimation(boolean)>(0);

        $z2 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_REMOTE_ANIMATIONS_enabled>;

        if $z2 == 0 goto label17;

        $r10 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_REMOTE_ANIMATIONS>;

        $r9 = (java.lang.Object[]) null;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void i(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r10, 248210157, 0, null, $r9);

     label17:
        return;

     label18:
        $r44 := @caughtexception;

        goto label22;

     label19:
        $r42 := @caughtexception;

     label20:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", "Failed to finish remote animation", $r42);

     label21:
        throw $r42;

     label22:
        $r45 = r0.<com.android.server.wm.RemoteAnimationController: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r45.<com.android.server.wm.WindowManagerService: void closeSurfaceTransaction(java.lang.String)>("RemoteAnimationController#finished");

     label23:
        throw $r44;

     label24:
        $r43 := @caughtexception;

     label25:
        exitmonitor r1;

     label26:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r43;

        catch java.lang.Throwable from label02 to label03 with label24;
        catch java.lang.Exception from label03 to label04 with label19;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Exception from label04 to label05 with label19;
        catch java.lang.Throwable from label04 to label05 with label18;
        catch java.lang.Exception from label06 to label07 with label19;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch java.lang.Exception from label07 to label08 with label19;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.lang.Exception from label08 to label09 with label19;
        catch java.lang.Throwable from label08 to label09 with label18;
        catch java.lang.Exception from label10 to label11 with label19;
        catch java.lang.Throwable from label10 to label11 with label18;
        catch java.lang.Exception from label12 to label13 with label19;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.lang.Throwable from label14 to label15 with label24;
        catch java.lang.Throwable from label15 to label16 with label24;
        catch java.lang.Throwable from label20 to label21 with label18;
        catch java.lang.Throwable from label21 to label22 with label18;
        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.Throwable from label23 to label24 with label24;
        catch java.lang.Throwable from label25 to label26 with label24;
    }

    private void releaseFinishedCallback()
    {
        com.android.server.wm.RemoteAnimationController r0;
        com.android.server.wm.RemoteAnimationController$FinishedCallback r1;

        r0 := @this: com.android.server.wm.RemoteAnimationController;

        r1 = r0.<com.android.server.wm.RemoteAnimationController: com.android.server.wm.RemoteAnimationController$FinishedCallback mFinishedCallback>;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.server.wm.RemoteAnimationController$FinishedCallback: void release()>();

        r0.<com.android.server.wm.RemoteAnimationController: com.android.server.wm.RemoteAnimationController$FinishedCallback mFinishedCallback> = null;

     label1:
        return;
    }

    private void setRunningRemoteAnimation(boolean)
    {
        com.android.server.wm.RemoteAnimationController r0;
        boolean z0;
        int i0, i1;
        android.view.RemoteAnimationAdapter $r1, $r2;
        java.lang.RuntimeException $r3;
        com.android.server.wm.WindowManagerService $r4;
        com.android.server.wm.ActivityTaskManagerService $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r11;
        com.android.server.wm.WindowProcessController r12;

        r0 := @this: com.android.server.wm.RemoteAnimationController;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.server.wm.RemoteAnimationController: android.view.RemoteAnimationAdapter mRemoteAnimationAdapter>;

        i0 = virtualinvoke $r1.<android.view.RemoteAnimationAdapter: int getCallingPid()>();

        $r2 = r0.<com.android.server.wm.RemoteAnimationController: android.view.RemoteAnimationAdapter mRemoteAnimationAdapter>;

        i1 = virtualinvoke $r2.<android.view.RemoteAnimationAdapter: int getCallingUid()>();

        if i0 == 0 goto label2;

        $r4 = r0.<com.android.server.wm.RemoteAnimationController: com.android.server.wm.WindowManagerService mService>;

        $r5 = $r4.<com.android.server.wm.WindowManagerService: com.android.server.wm.ActivityTaskManagerService mAtmService>;

        r12 = virtualinvoke $r5.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController getProcessController(int,int)>(i0, i1);

        if r12 != null goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find process with pid=");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uid=");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", $r11);

        return;

     label1:
        virtualinvoke r12.<com.android.server.wm.WindowProcessController: void setRunningRemoteAnimation(boolean)>(z0);

        return;

     label2:
        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Calling pid of remote animation was null");

        throw $r3;
    }

    private void unlinkToDeathOfRunner()
    {
        com.android.server.wm.RemoteAnimationController r0;
        boolean $z0;
        android.view.RemoteAnimationAdapter $r1;
        android.view.IRemoteAnimationRunner $r2;
        android.os.IBinder $r3;

        r0 := @this: com.android.server.wm.RemoteAnimationController;

        $z0 = r0.<com.android.server.wm.RemoteAnimationController: boolean mLinkedToDeathOfRunner>;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.server.wm.RemoteAnimationController: android.view.RemoteAnimationAdapter mRemoteAnimationAdapter>;

        $r2 = virtualinvoke $r1.<android.view.RemoteAnimationAdapter: android.view.IRemoteAnimationRunner getRunner()>();

        $r3 = interfaceinvoke $r2.<android.view.IRemoteAnimationRunner: android.os.IBinder asBinder()>();

        interfaceinvoke $r3.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

        r0.<com.android.server.wm.RemoteAnimationController: boolean mLinkedToDeathOfRunner> = 0;

     label1:
        return;
    }

    private void writeStartDebugStatement()
    {
        com.android.server.wm.RemoteAnimationController r0;
        boolean $z0, $z1;
        java.io.StringWriter $r2;
        com.android.internal.util.FastPrintWriter $r3;
        java.util.ArrayList $r4, $r8;
        int $i0, i1;
        java.lang.String $r5, r15;
        java.lang.Object[] $r6, $r12;
        com.android.server.wm.ProtoLogGroup $r7, $r13;
        java.lang.Object $r9;
        com.android.server.wm.RemoteAnimationController$RemoteAnimationRecord $r10;
        com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper $r11;

        r0 := @this: com.android.server.wm.RemoteAnimationController;

        $z0 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_REMOTE_ANIMATIONS_enabled>;

        if $z0 == 0 goto label1;

        $r13 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_REMOTE_ANIMATIONS>;

        $r12 = (java.lang.Object[]) null;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void i(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r13, 1964565370, 0, null, $r12);

     label1:
        $r2 = new java.io.StringWriter;

        specialinvoke $r2.<java.io.StringWriter: void <init>()>();

        $r3 = new com.android.internal.util.FastPrintWriter;

        specialinvoke $r3.<com.android.internal.util.FastPrintWriter: void <init>(java.io.Writer)>($r2);

        $r4 = r0.<com.android.server.wm.RemoteAnimationController: java.util.ArrayList mPendingAnimations>;

        $i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label2:
        if i1 < 0 goto label3;

        $r8 = r0.<com.android.server.wm.RemoteAnimationController: java.util.ArrayList mPendingAnimations>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r10 = (com.android.server.wm.RemoteAnimationController$RemoteAnimationRecord) $r9;

        $r11 = $r10.<com.android.server.wm.RemoteAnimationController$RemoteAnimationRecord: com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper mAdapter>;

        virtualinvoke $r11.<com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper: void dump(java.io.PrintWriter,java.lang.String)>($r3, "");

        i1 = i1 + -1;

        goto label2;

     label3:
        virtualinvoke $r3.<com.android.internal.util.FastPrintWriter: void close()>();

        $z1 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_REMOTE_ANIMATIONS_enabled>;

        if $z1 == 0 goto label4;

        $r5 = virtualinvoke $r2.<java.io.StringWriter: java.lang.String toString()>();

        r15 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        $r7 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_REMOTE_ANIMATIONS>;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r15;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void i(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r7, 835814848, 0, null, $r6);

     label4:
        return;
    }

    public void binderDied()
    {
        com.android.server.wm.RemoteAnimationController r0;

        r0 := @this: com.android.server.wm.RemoteAnimationController;

        virtualinvoke r0.<com.android.server.wm.RemoteAnimationController: void cancelAnimation(java.lang.String)>("binderDied");

        return;
    }

    void cancelAnimation(java.lang.String)
    {
        com.android.server.wm.RemoteAnimationController r0;
        boolean $z0, $z1;
        com.android.server.wm.WindowManagerService $r2;
        java.lang.Object[] $r3;
        com.android.server.wm.ProtoLogGroup $r4;
        java.lang.Throwable $r5;
        java.lang.String r6, r7;
        java.lang.Object r8;

        r0 := @this: com.android.server.wm.RemoteAnimationController;

        r6 := @parameter0: java.lang.String;

        $z0 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_REMOTE_ANIMATIONS_enabled>;

        if $z0 == 0 goto label1;

        r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r6);

        $r4 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_REMOTE_ANIMATIONS>;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r7;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void d(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r4, 1891501279, 0, null, $r3);

     label1:
        $r2 = r0.<com.android.server.wm.RemoteAnimationController: com.android.server.wm.WindowManagerService mService>;

        r8 = virtualinvoke $r2.<com.android.server.wm.WindowManagerService: java.lang.Object getWindowManagerLock()>();

        entermonitor r8;

     label2:
        $z1 = r0.<com.android.server.wm.RemoteAnimationController: boolean mCanceled>;

        if $z1 == 0 goto label4;

        exitmonitor r8;

     label3:
        return;

     label4:
        r0.<com.android.server.wm.RemoteAnimationController: boolean mCanceled> = 1;

        exitmonitor r8;

     label5:
        specialinvoke r0.<com.android.server.wm.RemoteAnimationController: void onAnimationFinished()>();

        specialinvoke r0.<com.android.server.wm.RemoteAnimationController: void invokeAnimationCancelled()>();

        return;

     label6:
        $r5 := @caughtexception;

     label7:
        exitmonitor r8;

     label8:
        throw $r5;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    com.android.server.wm.RemoteAnimationController$RemoteAnimationRecord createRemoteAnimationRecord(com.android.server.wm.WindowContainer, android.graphics.Point, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect)
    {
        com.android.server.wm.RemoteAnimationController r0;
        android.graphics.Point r1;
        android.graphics.Rect r2, r3, r4;
        java.lang.String r5;
        boolean $z0;
        com.android.server.wm.RemoteAnimationController$RemoteAnimationRecord $r6;
        java.util.ArrayList $r7;
        java.lang.Object[] $r8;
        com.android.server.wm.ProtoLogGroup $r9;
        com.android.server.wm.WindowContainer r10;

        r0 := @this: com.android.server.wm.RemoteAnimationController;

        r10 := @parameter0: com.android.server.wm.WindowContainer;

        r1 := @parameter1: android.graphics.Point;

        r2 := @parameter2: android.graphics.Rect;

        r3 := @parameter3: android.graphics.Rect;

        r4 := @parameter4: android.graphics.Rect;

        $z0 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_REMOTE_ANIMATIONS_enabled>;

        if $z0 == 0 goto label1;

        r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r10);

        $r9 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_REMOTE_ANIMATIONS>;

        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = r5;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void d(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r9, 2022422429, 0, null, $r8);

     label1:
        $r6 = new com.android.server.wm.RemoteAnimationController$RemoteAnimationRecord;

        specialinvoke $r6.<com.android.server.wm.RemoteAnimationController$RemoteAnimationRecord: void <init>(com.android.server.wm.RemoteAnimationController,com.android.server.wm.WindowContainer,android.graphics.Point,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>(r0, r10, r1, r2, r3, r4);

        $r7 = r0.<com.android.server.wm.RemoteAnimationController: java.util.ArrayList mPendingAnimations>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        return $r6;
    }

    void goodToGo()
    {
        com.android.server.wm.RemoteAnimationController r0;
        android.view.RemoteAnimationTarget[] r1, r2;
        boolean z0, $z1, $z2, $z3, $z4, $z6;
        long l0, $l2;
        java.util.ArrayList $r3, $r4;
        int $i1, $i3;
        java.lang.Object[] $r5, $r16, $r18;
        com.android.server.wm.ProtoLogGroup $r6, $r17, $r19;
        java.lang.String $r7;
        java.lang.Long $r8;
        com.android.server.wm.WindowManagerService $r9, $r13;
        android.os.Handler $r10;
        java.lang.Runnable $r11;
        float $f0, $f1;
        com.android.server.wm.RemoteAnimationController$FinishedCallback $r12;
        com.android.server.wm._$$Lambda$RemoteAnimationController$74uuXaM2TqjkzYi0b8LqJdbycxA $r14;
        com.android.server.wm.WindowAnimator $r15;

        r0 := @this: com.android.server.wm.RemoteAnimationController;

        $z1 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_REMOTE_ANIMATIONS_enabled>;

        if $z1 == 0 goto label1;

        $r19 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_REMOTE_ANIMATIONS>;

        $r18 = (java.lang.Object[]) null;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void d(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r19, 873914452, 0, null, $r18);

     label1:
        $r3 = r0.<com.android.server.wm.RemoteAnimationController: java.util.ArrayList mPendingAnimations>;

        $z2 = virtualinvoke $r3.<java.util.ArrayList: boolean isEmpty()>();

        if $z2 != 0 goto label5;

        $z4 = r0.<com.android.server.wm.RemoteAnimationController: boolean mCanceled>;

        if $z4 == 0 goto label2;

        goto label5;

     label2:
        $r10 = r0.<com.android.server.wm.RemoteAnimationController: android.os.Handler mHandler>;

        $r11 = r0.<com.android.server.wm.RemoteAnimationController: java.lang.Runnable mTimeoutRunnable>;

        $r9 = r0.<com.android.server.wm.RemoteAnimationController: com.android.server.wm.WindowManagerService mService>;

        $f0 = virtualinvoke $r9.<com.android.server.wm.WindowManagerService: float getCurrentAnimatorScale()>();

        $f1 = $f0 * 2000.0F;

        $l2 = (long) $f1;

        virtualinvoke $r10.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r11, $l2);

        $r12 = new com.android.server.wm.RemoteAnimationController$FinishedCallback;

        specialinvoke $r12.<com.android.server.wm.RemoteAnimationController$FinishedCallback: void <init>(com.android.server.wm.RemoteAnimationController)>(r0);

        r0.<com.android.server.wm.RemoteAnimationController: com.android.server.wm.RemoteAnimationController$FinishedCallback mFinishedCallback> = $r12;

        r1 = specialinvoke r0.<com.android.server.wm.RemoteAnimationController: android.view.RemoteAnimationTarget[] createAppAnimations()>();

        $i3 = lengthof r1;

        if $i3 != 0 goto label4;

        $z6 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_REMOTE_ANIMATIONS_enabled>;

        if $z6 == 0 goto label3;

        $r17 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_REMOTE_ANIMATIONS>;

        $r16 = (java.lang.Object[]) null;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void d(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r17, 690411811, 0, null, $r16);

     label3:
        specialinvoke r0.<com.android.server.wm.RemoteAnimationController: void onAnimationFinished()>();

        return;

     label4:
        r2 = specialinvoke r0.<com.android.server.wm.RemoteAnimationController: android.view.RemoteAnimationTarget[] createWallpaperAnimations()>();

        $r13 = r0.<com.android.server.wm.RemoteAnimationController: com.android.server.wm.WindowManagerService mService>;

        $r15 = $r13.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowAnimator mAnimator>;

        $r14 = new com.android.server.wm._$$Lambda$RemoteAnimationController$74uuXaM2TqjkzYi0b8LqJdbycxA;

        specialinvoke $r14.<com.android.server.wm._$$Lambda$RemoteAnimationController$74uuXaM2TqjkzYi0b8LqJdbycxA: void <init>(com.android.server.wm.RemoteAnimationController,android.view.RemoteAnimationTarget[],android.view.RemoteAnimationTarget[])>(r0, r1, r2);

        virtualinvoke $r15.<com.android.server.wm.WindowAnimator: void addAfterPrepareSurfacesRunnable(java.lang.Runnable)>($r14);

        specialinvoke r0.<com.android.server.wm.RemoteAnimationController: void setRunningRemoteAnimation(boolean)>(1);

        return;

     label5:
        $z3 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_REMOTE_ANIMATIONS_enabled>;

        if $z3 == 0 goto label6;

        z0 = r0.<com.android.server.wm.RemoteAnimationController: boolean mCanceled>;

        $r4 = r0.<com.android.server.wm.RemoteAnimationController: java.util.ArrayList mPendingAnimations>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        l0 = (long) $i1;

        $r6 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_REMOTE_ANIMATIONS>;

        $r5 = newarray (java.lang.Object)[2];

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>(z0);

        $r5[0] = $r7;

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r5[1] = $r8;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void d(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r6, 194124419, 4, null, $r5);

     label6:
        specialinvoke r0.<com.android.server.wm.RemoteAnimationController: void onAnimationFinished()>();

        return;
    }

    public void lambda$createWallpaperAnimations$2$RemoteAnimationController(com.android.server.wm.WallpaperAnimationAdapter)
    {
        com.android.server.wm.RemoteAnimationController r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.WindowManagerService $r2;
        java.util.ArrayList $r3;
        java.lang.Throwable $r4;
        com.android.server.wm.WallpaperAnimationAdapter r5;

        r0 := @this: com.android.server.wm.RemoteAnimationController;

        r5 := @parameter0: com.android.server.wm.WallpaperAnimationAdapter;

        $r2 = r0.<com.android.server.wm.RemoteAnimationController: com.android.server.wm.WindowManagerService mService>;

        r1 = $r2.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.RemoteAnimationController: java.util.ArrayList mPendingWallpaperAnimations>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r5);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void lambda$goodToGo$1$RemoteAnimationController(android.view.RemoteAnimationTarget[], android.view.RemoteAnimationTarget[])
    {
        com.android.server.wm.RemoteAnimationController r0;
        android.view.RemoteAnimationTarget[] r1, r9;
        android.view.RemoteAnimationAdapter $r2;
        android.view.IRemoteAnimationRunner $r3;
        com.android.server.wm.RemoteAnimationController$FinishedCallback $r4;
        com.android.server.wm.ProtoLogGroup $r5, $r7;
        boolean $z0, $z1;
        java.lang.Object[] $r6;
        android.os.RemoteException $r8;

        r0 := @this: com.android.server.wm.RemoteAnimationController;

        r9 := @parameter0: android.view.RemoteAnimationTarget[];

        r1 := @parameter1: android.view.RemoteAnimationTarget[];

     label1:
        specialinvoke r0.<com.android.server.wm.RemoteAnimationController: void linkToDeathOfRunner()>();

        $r2 = r0.<com.android.server.wm.RemoteAnimationController: android.view.RemoteAnimationAdapter mRemoteAnimationAdapter>;

        $r3 = virtualinvoke $r2.<android.view.RemoteAnimationAdapter: android.view.IRemoteAnimationRunner getRunner()>();

        $r4 = r0.<com.android.server.wm.RemoteAnimationController: com.android.server.wm.RemoteAnimationController$FinishedCallback mFinishedCallback>;

        interfaceinvoke $r3.<android.view.IRemoteAnimationRunner: void onAnimationStart(android.view.RemoteAnimationTarget[],android.view.RemoteAnimationTarget[],android.view.IRemoteAnimationFinishedCallback)>(r9, r1, $r4);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", "Failed to start remote animation", $r8);

        specialinvoke r0.<com.android.server.wm.RemoteAnimationController: void onAnimationFinished()>();

     label4:
        $r5 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_REMOTE_ANIMATIONS>;

        $z0 = staticinvoke <com.android.server.protolog.ProtoLogImpl: boolean isEnabled(com.android.server.protolog.common.IProtoLogGroup)>($r5);

        if $z0 == 0 goto label6;

        $z1 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_REMOTE_ANIMATIONS_enabled>;

        if $z1 == 0 goto label5;

        $r7 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_REMOTE_ANIMATIONS>;

        $r6 = (java.lang.Object[]) null;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void d(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r7, -2012562539, 0, null, $r6);

     label5:
        specialinvoke r0.<com.android.server.wm.RemoteAnimationController: void writeStartDebugStatement()>();

     label6:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void lambda$new$0$RemoteAnimationController()
    {
        com.android.server.wm.RemoteAnimationController r0;

        r0 := @this: com.android.server.wm.RemoteAnimationController;

        virtualinvoke r0.<com.android.server.wm.RemoteAnimationController: void cancelAnimation(java.lang.String)>("timeoutRunnable");

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.wm.RemoteAnimationController: long TIMEOUT_MS> = 2000L;

        <com.android.server.wm.RemoteAnimationController: java.lang.String TAG> = "WindowManager";

        return;
    }
}
