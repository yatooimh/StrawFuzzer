class com.android.server.wm.RootWindowContainer$1 extends java.lang.Object implements java.lang.Runnable
{
    final com.android.server.wm.RootWindowContainer this$0;

    void <init>(com.android.server.wm.RootWindowContainer)
    {
        com.android.server.wm.RootWindowContainer$1 r0;
        com.android.server.wm.RootWindowContainer r1;

        r0 := @this: com.android.server.wm.RootWindowContainer$1;

        r1 := @parameter0: com.android.server.wm.RootWindowContainer;

        r0.<com.android.server.wm.RootWindowContainer$1: com.android.server.wm.RootWindowContainer this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void lambda$run$0(java.lang.Object, com.android.server.wm.ActivityRecord)
    {
        java.lang.Object r0;
        com.android.server.wm.ActivityRecord r1;
        com.android.server.wm.RootWindowContainer $r2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: com.android.server.wm.ActivityRecord;

        $r2 = (com.android.server.wm.RootWindowContainer) r0;

        staticinvoke <com.android.server.wm.RootWindowContainer: void access$000(com.android.server.wm.RootWindowContainer,com.android.server.wm.ActivityRecord)>($r2, r1);

        return;
    }

    public void run()
    {
        com.android.server.wm.RootWindowContainer$1 r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.RootWindowContainer $r2, $r4, $r7, $r9, $r10, $r12, $r15, $r17;
        com.android.server.wm.ActivityTaskManagerService $r3;
        com.android.server.wm.ActivityStackSupervisor $r5, $r11, $r16;
        com.android.server.wm.'-$$Lambda$RootWindowContainer$1$HOnR_rhPvM6ZPX8yI-4GFhkGqUs' $r6;
        com.android.internal.util.function.pooled.ArgumentPlaceholder $r8;
        java.lang.Throwable $r13, $r14;
        com.android.internal.util.function.pooled.PooledConsumer r18;
        java.util.function.BiConsumer r21;

        r0 := @this: com.android.server.wm.RootWindowContainer$1;

        $r2 = r0.<com.android.server.wm.RootWindowContainer$1: com.android.server.wm.RootWindowContainer this$0>;

        $r3 = $r2.<com.android.server.wm.RootWindowContainer: com.android.server.wm.ActivityTaskManagerService mService>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label01:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r4 = r0.<com.android.server.wm.RootWindowContainer$1: com.android.server.wm.RootWindowContainer this$0>;

        $r5 = $r4.<com.android.server.wm.RootWindowContainer: com.android.server.wm.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r5.<com.android.server.wm.ActivityStackSupervisor: void beginDeferResume()>();

        $r6 = <com.android.server.wm._$$Lambda$RootWindowContainer$1$HOnR_rhPvM6ZPX8yI_4GFhkGqUs: com.android.server.wm.'-$$Lambda$RootWindowContainer$1$HOnR_rhPvM6ZPX8yI-4GFhkGqUs' INSTANCE>;

        $r7 = r0.<com.android.server.wm.RootWindowContainer$1: com.android.server.wm.RootWindowContainer this$0>;

        $r8 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: com.android.internal.util.function.pooled.ArgumentPlaceholder __(java.lang.Class)>(class "Lcom/android/server/wm/ActivityRecord;");

        r21 = (java.util.function.BiConsumer) $r6;

        r18 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: com.android.internal.util.function.pooled.PooledConsumer obtainConsumer(java.util.function.BiConsumer,java.lang.Object,com.android.internal.util.function.pooled.ArgumentPlaceholder)>(r21, $r7, $r8);

        $r9 = r0.<com.android.server.wm.RootWindowContainer$1: com.android.server.wm.RootWindowContainer this$0>;

        virtualinvoke $r9.<com.android.server.wm.RootWindowContainer: void forAllActivities(java.util.function.Consumer)>(r18);

        interfaceinvoke r18.<com.android.internal.util.function.pooled.PooledConsumer: void recycle()>();

     label02:
        $r10 = r0.<com.android.server.wm.RootWindowContainer$1: com.android.server.wm.RootWindowContainer this$0>;

        $r11 = $r10.<com.android.server.wm.RootWindowContainer: com.android.server.wm.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r11.<com.android.server.wm.ActivityStackSupervisor: void endDeferResume()>();

        $r12 = r0.<com.android.server.wm.RootWindowContainer$1: com.android.server.wm.RootWindowContainer this$0>;

        virtualinvoke $r12.<com.android.server.wm.RootWindowContainer: boolean resumeFocusedStacksTopActivities()>();

     label03:
        exitmonitor r1;

     label04:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label05:
        $r14 := @caughtexception;

     label06:
        $r15 = r0.<com.android.server.wm.RootWindowContainer$1: com.android.server.wm.RootWindowContainer this$0>;

        $r16 = $r15.<com.android.server.wm.RootWindowContainer: com.android.server.wm.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r16.<com.android.server.wm.ActivityStackSupervisor: void endDeferResume()>();

        $r17 = r0.<com.android.server.wm.RootWindowContainer$1: com.android.server.wm.RootWindowContainer this$0>;

        virtualinvoke $r17.<com.android.server.wm.RootWindowContainer: boolean resumeFocusedStacksTopActivities()>();

     label07:
        throw $r14;

     label08:
        $r13 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }
}
