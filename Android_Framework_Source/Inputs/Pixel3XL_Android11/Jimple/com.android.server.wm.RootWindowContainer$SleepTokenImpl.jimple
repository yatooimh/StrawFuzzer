final class com.android.server.wm.RootWindowContainer$SleepTokenImpl extends com.android.server.wm.ActivityTaskManagerInternal$SleepToken
{
    private final long mAcquireTime;
    private final int mDisplayId;
    private final java.lang.String mTag;
    final com.android.server.wm.RootWindowContainer this$0;

    public void <init>(com.android.server.wm.RootWindowContainer, java.lang.String, int)
    {
        com.android.server.wm.RootWindowContainer$SleepTokenImpl r0;
        com.android.server.wm.RootWindowContainer r1;
        java.lang.String r2;
        int i0;
        long $l1;

        r0 := @this: com.android.server.wm.RootWindowContainer$SleepTokenImpl;

        r1 := @parameter0: com.android.server.wm.RootWindowContainer;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r0.<com.android.server.wm.RootWindowContainer$SleepTokenImpl: com.android.server.wm.RootWindowContainer this$0> = r1;

        specialinvoke r0.<com.android.server.wm.ActivityTaskManagerInternal$SleepToken: void <init>()>();

        r0.<com.android.server.wm.RootWindowContainer$SleepTokenImpl: java.lang.String mTag> = r2;

        r0.<com.android.server.wm.RootWindowContainer$SleepTokenImpl: int mDisplayId> = i0;

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.server.wm.RootWindowContainer$SleepTokenImpl: long mAcquireTime> = $l1;

        return;
    }

    static int access$100(com.android.server.wm.RootWindowContainer$SleepTokenImpl)
    {
        com.android.server.wm.RootWindowContainer$SleepTokenImpl r0;
        int $i0;

        r0 := @parameter0: com.android.server.wm.RootWindowContainer$SleepTokenImpl;

        $i0 = r0.<com.android.server.wm.RootWindowContainer$SleepTokenImpl: int mDisplayId>;

        return $i0;
    }

    public void release()
    {
        com.android.server.wm.RootWindowContainer$SleepTokenImpl r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.RootWindowContainer $r3, $r5;
        com.android.server.wm.ActivityTaskManagerService $r4;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.wm.RootWindowContainer$SleepTokenImpl;

        $r3 = r0.<com.android.server.wm.RootWindowContainer$SleepTokenImpl: com.android.server.wm.RootWindowContainer this$0>;

        $r4 = $r3.<com.android.server.wm.RootWindowContainer: com.android.server.wm.ActivityTaskManagerService mService>;

        r1 = $r4.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r5 = r0.<com.android.server.wm.RootWindowContainer$SleepTokenImpl: com.android.server.wm.RootWindowContainer this$0>;

        staticinvoke <com.android.server.wm.RootWindowContainer: void access$200(com.android.server.wm.RootWindowContainer,com.android.server.wm.RootWindowContainer$SleepTokenImpl)>($r5, r0);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.lang.String toString()
    {
        com.android.server.wm.RootWindowContainer$SleepTokenImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r9, $r12;
        int $i0;
        long $l1;

        r0 := @this: com.android.server.wm.RootWindowContainer$SleepTokenImpl;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{\"");

        $r4 = r0.<com.android.server.wm.RootWindowContainer$SleepTokenImpl: java.lang.String mTag>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\", display ");

        $i0 = r0.<com.android.server.wm.RootWindowContainer$SleepTokenImpl: int mDisplayId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", acquire at ");

        $l1 = r0.<com.android.server.wm.RootWindowContainer$SleepTokenImpl: long mAcquireTime>;

        $r9 = staticinvoke <android.util.TimeUtils: java.lang.String formatUptime(long)>($l1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r12 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }
}
