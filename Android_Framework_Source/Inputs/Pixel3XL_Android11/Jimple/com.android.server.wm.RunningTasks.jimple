class com.android.server.wm.RunningTasks extends java.lang.Object
{
    private static final java.util.Comparator LAST_ACTIVE_TIME_COMPARATOR;
    private boolean mAllowed;
    private int mCallingUid;
    private boolean mCrossUser;
    private boolean mFilterOnlyVisibleRecents;
    private android.util.ArraySet mProfileIds;
    private com.android.server.wm.RecentTasks mRecentTasks;
    private final java.util.TreeSet mTmpSortedSet;
    private com.android.server.wm.ActivityStack mTopDisplayFocusStack;
    private int mUserId;

    static void <clinit>()
    {
        com.android.server.wm.'-$$Lambda$RunningTasks$MPCBAZpSXKx53M7vrqtvLfftJOc' $r0;
        java.util.Comparator r1;

        $r0 = <com.android.server.wm._$$Lambda$RunningTasks$MPCBAZpSXKx53M7vrqtvLfftJOc: com.android.server.wm.'-$$Lambda$RunningTasks$MPCBAZpSXKx53M7vrqtvLfftJOc' INSTANCE>;

        r1 = (java.util.Comparator) $r0;

        <com.android.server.wm.RunningTasks: java.util.Comparator LAST_ACTIVE_TIME_COMPARATOR> = r1;

        return;
    }

    void <init>()
    {
        com.android.server.wm.RunningTasks r0;
        java.util.TreeSet $r1;
        java.util.Comparator $r2;

        r0 := @this: com.android.server.wm.RunningTasks;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.TreeSet;

        $r2 = <com.android.server.wm.RunningTasks: java.util.Comparator LAST_ACTIVE_TIME_COMPARATOR>;

        specialinvoke $r1.<java.util.TreeSet: void <init>(java.util.Comparator)>($r2);

        r0.<com.android.server.wm.RunningTasks: java.util.TreeSet mTmpSortedSet> = $r1;

        return;
    }

    private android.app.ActivityManager$RunningTaskInfo createRunningTaskInfo(com.android.server.wm.Task)
    {
        com.android.server.wm.RunningTasks r0;
        int $i0;
        com.android.server.wm.Task r1;
        android.app.ActivityManager$RunningTaskInfo r2;

        r0 := @this: com.android.server.wm.RunningTasks;

        r1 := @parameter0: com.android.server.wm.Task;

        r2 = virtualinvoke r1.<com.android.server.wm.Task: android.app.ActivityManager$RunningTaskInfo getTaskInfo()>();

        $i0 = r2.<android.app.ActivityManager$RunningTaskInfo: int taskId>;

        r2.<android.app.ActivityManager$RunningTaskInfo: int id> = $i0;

        return r2;
    }

    public static void lambda$hR_Ryk91b0B2BdJN9eCfQfPwC3g(com.android.server.wm.RunningTasks, com.android.server.wm.Task)
    {
        com.android.server.wm.RunningTasks r0;
        com.android.server.wm.Task r1;

        r0 := @parameter0: com.android.server.wm.RunningTasks;

        r1 := @parameter1: com.android.server.wm.Task;

        specialinvoke r0.<com.android.server.wm.RunningTasks: void processTask(com.android.server.wm.Task)>(r1);

        return;
    }

    static int lambda$static$0(com.android.server.wm.Task, com.android.server.wm.Task)
    {
        com.android.server.wm.Task r0, r1;
        long $l0, $l1, $l2;
        int $i3;

        r0 := @parameter0: com.android.server.wm.Task;

        r1 := @parameter1: com.android.server.wm.Task;

        $l1 = r1.<com.android.server.wm.Task: long lastActiveTime>;

        $l0 = r0.<com.android.server.wm.Task: long lastActiveTime>;

        $l2 = $l1 - $l0;

        $i3 = staticinvoke <java.lang.Long: int signum(long)>($l2);

        return $i3;
    }

    private void processTask(com.android.server.wm.Task)
    {
        com.android.server.wm.RunningTasks r0;
        com.android.server.wm.Task r1, $r4;
        com.android.server.wm.ActivityStack r2, $r8;
        com.android.server.wm.ActivityRecord $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        com.android.server.wm.RecentTasks $r5;
        boolean $z1, $z2, $z3, $z4, $z5, $z6;
        android.util.ArraySet $r6;
        java.lang.Integer $r7;
        java.util.TreeSet $r9;

        r0 := @this: com.android.server.wm.RunningTasks;

        r1 := @parameter0: com.android.server.wm.Task;

        $r3 = virtualinvoke r1.<com.android.server.wm.Task: com.android.server.wm.ActivityRecord getTopNonFinishingActivity()>();

        if $r3 != null goto label1;

        return;

     label1:
        $i1 = r1.<com.android.server.wm.Task: int effectiveUid>;

        $i0 = r0.<com.android.server.wm.RunningTasks: int mCallingUid>;

        if $i1 == $i0 goto label3;

        $i5 = r1.<com.android.server.wm.Task: int mUserId>;

        $i4 = r0.<com.android.server.wm.RunningTasks: int mUserId>;

        if $i5 == $i4 goto label2;

        $z3 = r0.<com.android.server.wm.RunningTasks: boolean mCrossUser>;

        if $z3 != 0 goto label2;

        $r6 = r0.<com.android.server.wm.RunningTasks: android.util.ArraySet mProfileIds>;

        $i6 = r1.<com.android.server.wm.Task: int mUserId>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $z4 = virtualinvoke $r6.<android.util.ArraySet: boolean contains(java.lang.Object)>($r7);

        if $z4 != 0 goto label2;

        return;

     label2:
        $z5 = r0.<com.android.server.wm.RunningTasks: boolean mAllowed>;

        if $z5 != 0 goto label3;

        $z2 = virtualinvoke r1.<com.android.server.wm.Task: boolean isActivityTypeHome()>();

        if $z2 != 0 goto label3;

        return;

     label3:
        $z6 = r0.<com.android.server.wm.RunningTasks: boolean mFilterOnlyVisibleRecents>;

        if $z6 == 0 goto label4;

        $i2 = virtualinvoke r1.<com.android.server.wm.Task: int getActivityType()>();

        if $i2 == 2 goto label4;

        $i3 = virtualinvoke r1.<com.android.server.wm.Task: int getActivityType()>();

        if $i3 == 3 goto label4;

        $r5 = r0.<com.android.server.wm.RunningTasks: com.android.server.wm.RecentTasks mRecentTasks>;

        $z1 = virtualinvoke $r5.<com.android.server.wm.RecentTasks: boolean isVisibleRecentTask(com.android.server.wm.Task)>(r1);

        if $z1 != 0 goto label4;

        return;

     label4:
        r2 = virtualinvoke r1.<com.android.server.wm.Task: com.android.server.wm.ActivityStack getStack()>();

        $r8 = r0.<com.android.server.wm.RunningTasks: com.android.server.wm.ActivityStack mTopDisplayFocusStack>;

        if r2 != $r8 goto label5;

        $r4 = virtualinvoke r2.<com.android.server.wm.ActivityStack: com.android.server.wm.Task getTopMostTask()>();

        if $r4 != r1 goto label5;

        virtualinvoke r1.<com.android.server.wm.Task: void touchActiveTime()>();

     label5:
        $r9 = r0.<com.android.server.wm.RunningTasks: java.util.TreeSet mTmpSortedSet>;

        virtualinvoke $r9.<java.util.TreeSet: boolean add(java.lang.Object)>(r1);

        return;
    }

    void getTasks(int, java.util.List, boolean, com.android.server.wm.RootWindowContainer, int, boolean, boolean, android.util.ArraySet)
    {
        com.android.server.wm.RunningTasks r0;
        java.util.List r1;
        boolean z0, z1, z2, $z3;
        int i0, $i1, i2;
        java.util.TreeSet $r2, $r8;
        com.android.server.wm.ActivityStack $r3;
        com.android.server.wm.ActivityTaskManagerService $r4;
        com.android.server.wm.RecentTasks $r5;
        com.android.server.wm.'-$$Lambda$RunningTasks$hR_Ryk91b0B2BdJN9eCfQfPwC3g' $r6;
        com.android.internal.util.function.pooled.ArgumentPlaceholder $r7;
        java.lang.Object $r9;
        com.android.server.wm.Task $r10;
        android.app.ActivityManager$RunningTaskInfo $r11;
        com.android.server.wm.RootWindowContainer r12;
        android.util.ArraySet r13;
        com.android.internal.util.function.pooled.PooledConsumer r14;
        java.util.Iterator r15;
        java.util.function.BiConsumer r16;

        r0 := @this: com.android.server.wm.RunningTasks;

        i2 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        z0 := @parameter2: boolean;

        r12 := @parameter3: com.android.server.wm.RootWindowContainer;

        i0 := @parameter4: int;

        z1 := @parameter5: boolean;

        z2 := @parameter6: boolean;

        r13 := @parameter7: android.util.ArraySet;

        if i2 > 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.server.wm.RunningTasks: java.util.TreeSet mTmpSortedSet>;

        virtualinvoke $r2.<java.util.TreeSet: void clear()>();

        r0.<com.android.server.wm.RunningTasks: int mCallingUid> = i0;

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        r0.<com.android.server.wm.RunningTasks: int mUserId> = $i1;

        r0.<com.android.server.wm.RunningTasks: boolean mCrossUser> = z2;

        r0.<com.android.server.wm.RunningTasks: android.util.ArraySet mProfileIds> = r13;

        r0.<com.android.server.wm.RunningTasks: boolean mAllowed> = z1;

        r0.<com.android.server.wm.RunningTasks: boolean mFilterOnlyVisibleRecents> = z0;

        $r3 = virtualinvoke r12.<com.android.server.wm.RootWindowContainer: com.android.server.wm.ActivityStack getTopDisplayFocusedStack()>();

        r0.<com.android.server.wm.RunningTasks: com.android.server.wm.ActivityStack mTopDisplayFocusStack> = $r3;

        $r4 = r12.<com.android.server.wm.RootWindowContainer: com.android.server.wm.ActivityTaskManagerService mService>;

        $r5 = virtualinvoke $r4.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RecentTasks getRecentTasks()>();

        r0.<com.android.server.wm.RunningTasks: com.android.server.wm.RecentTasks mRecentTasks> = $r5;

        $r6 = <com.android.server.wm._$$Lambda$RunningTasks$hR_Ryk91b0B2BdJN9eCfQfPwC3g: com.android.server.wm.'-$$Lambda$RunningTasks$hR_Ryk91b0B2BdJN9eCfQfPwC3g' INSTANCE>;

        $r7 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: com.android.internal.util.function.pooled.ArgumentPlaceholder __(java.lang.Class)>(class "Lcom/android/server/wm/Task;");

        r16 = (java.util.function.BiConsumer) $r6;

        r14 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: com.android.internal.util.function.pooled.PooledConsumer obtainConsumer(java.util.function.BiConsumer,java.lang.Object,com.android.internal.util.function.pooled.ArgumentPlaceholder)>(r16, r0, $r7);

        virtualinvoke r12.<com.android.server.wm.RootWindowContainer: void forAllLeafTasks(java.util.function.Consumer,boolean)>(r14, 0);

        interfaceinvoke r14.<com.android.internal.util.function.pooled.PooledConsumer: void recycle()>();

        $r8 = r0.<com.android.server.wm.RunningTasks: java.util.TreeSet mTmpSortedSet>;

        r15 = virtualinvoke $r8.<java.util.TreeSet: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label4;

        if i2 != 0 goto label3;

        goto label4;

     label3:
        $r9 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (com.android.server.wm.Task) $r9;

        $r11 = specialinvoke r0.<com.android.server.wm.RunningTasks: android.app.ActivityManager$RunningTaskInfo createRunningTaskInfo(com.android.server.wm.Task)>($r10);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r11);

        i2 = i2 + -1;

        goto label2;

     label4:
        return;
    }
}
