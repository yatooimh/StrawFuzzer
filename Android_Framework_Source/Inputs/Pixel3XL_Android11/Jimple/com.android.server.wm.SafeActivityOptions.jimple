public class com.android.server.wm.SafeActivityOptions extends java.lang.Object
{
    private static final java.lang.String TAG;
    private android.app.ActivityOptions mCallerOptions;
    private final int mOriginalCallingPid;
    private final int mOriginalCallingUid;
    private final android.app.ActivityOptions mOriginalOptions;
    private int mRealCallingPid;
    private int mRealCallingUid;

    public void <init>(android.app.ActivityOptions)
    {
        com.android.server.wm.SafeActivityOptions r0;
        android.app.ActivityOptions r1;
        int $i0, $i1;

        r0 := @this: com.android.server.wm.SafeActivityOptions;

        r1 := @parameter0: android.app.ActivityOptions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        r0.<com.android.server.wm.SafeActivityOptions: int mOriginalCallingPid> = $i0;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r0.<com.android.server.wm.SafeActivityOptions: int mOriginalCallingUid> = $i1;

        r0.<com.android.server.wm.SafeActivityOptions: android.app.ActivityOptions mOriginalOptions> = r1;

        return;
    }

    private void abort()
    {
        com.android.server.wm.SafeActivityOptions r0;
        android.app.ActivityOptions r1, r2;

        r0 := @this: com.android.server.wm.SafeActivityOptions;

        r1 = r0.<com.android.server.wm.SafeActivityOptions: android.app.ActivityOptions mOriginalOptions>;

        if r1 == null goto label1;

        staticinvoke <android.app.ActivityOptions: void abort(android.app.ActivityOptions)>(r1);

     label1:
        r2 = r0.<com.android.server.wm.SafeActivityOptions: android.app.ActivityOptions mCallerOptions>;

        if r2 == null goto label2;

        staticinvoke <android.app.ActivityOptions: void abort(android.app.ActivityOptions)>(r2);

     label2:
        return;
    }

    static void abort(com.android.server.wm.SafeActivityOptions)
    {
        com.android.server.wm.SafeActivityOptions r0;

        r0 := @parameter0: com.android.server.wm.SafeActivityOptions;

        if r0 == null goto label1;

        specialinvoke r0.<com.android.server.wm.SafeActivityOptions: void abort()>();

     label1:
        return;
    }

    private void checkPermissions(android.content.Intent, android.content.pm.ActivityInfo, com.android.server.wm.WindowProcessController, com.android.server.wm.ActivityStackSupervisor, android.app.ActivityOptions, int, int)
    {
        com.android.server.wm.SafeActivityOptions r0;
        com.android.server.wm.WindowProcessController r1;
        com.android.server.wm.ActivityStackSupervisor r2;
        android.app.ActivityOptions r3;
        int i0, i1, i2, $i3, $i4, $i6, $i10, $i11;
        boolean z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r4, $r19, $r31, $r44, $r60;
        java.lang.String $r6, $r18, $r21, $r33, $r46, $r62, r76, r80, r82, r84, r88;
        java.lang.SecurityException $r15, $r30, $r43, $r56, $r72;
        com.android.server.wm.ActivityTaskManagerService $r16, r86;
        com.android.server.wm.LockTaskController $r17;
        android.os.IBinder $r57;
        com.android.server.wm.WindowContainer $r58;
        com.android.server.wm.RecentTasks $r59;
        android.content.Intent r73;
        android.content.pm.ActivityInfo r74;
        android.window.WindowContainerToken r77;
        com.android.server.wm.TaskDisplayArea r78;
        android.view.RemoteAnimationAdapter $r85;

        r0 := @this: com.android.server.wm.SafeActivityOptions;

        r73 := @parameter0: android.content.Intent;

        r74 := @parameter1: android.content.pm.ActivityInfo;

        r1 := @parameter2: com.android.server.wm.WindowProcessController;

        r2 := @parameter3: com.android.server.wm.ActivityStackSupervisor;

        r3 := @parameter4: android.app.ActivityOptions;

        i0 := @parameter5: int;

        i1 := @parameter6: int;

        $i3 = virtualinvoke r3.<android.app.ActivityOptions: int getLaunchTaskId()>();

        if $i3 == -1 goto label02;

        $r59 = r2.<com.android.server.wm.ActivityStackSupervisor: com.android.server.wm.RecentTasks mRecentTasks>;

        $z4 = virtualinvoke $r59.<com.android.server.wm.RecentTasks: boolean isCallerRecents(int)>(i1);

        if $z4 != 0 goto label02;

        $i10 = staticinvoke <com.android.server.wm.ActivityTaskManagerService: int checkPermission(java.lang.String,int,int)>("android.permission.START_TASKS_FROM_RECENTS", i0, i1);

        if $i10 == -1 goto label01;

        goto label02;

     label01:
        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: starting ");

        $r62 = specialinvoke r0.<com.android.server.wm.SafeActivityOptions: java.lang.String getIntentString(android.content.Intent)>(r73);

        virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") with launchTaskId=");

        $i11 = virtualinvoke r3.<android.app.ActivityOptions: int getLaunchTaskId()>();

        virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        r76 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityTaskManager", r76);

        $r72 = new java.lang.SecurityException;

        specialinvoke $r72.<java.lang.SecurityException: void <init>(java.lang.String)>(r76);

        throw $r72;

     label02:
        r77 = virtualinvoke r3.<android.app.ActivityOptions: android.window.WindowContainerToken getLaunchTaskDisplayArea()>();

        if r77 == null goto label03;

        $r57 = virtualinvoke r77.<android.window.WindowContainerToken: android.os.IBinder asBinder()>();

        $r58 = staticinvoke <com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer fromBinder(android.os.IBinder)>($r57);

        r78 = (com.android.server.wm.TaskDisplayArea) $r58;

        goto label04;

     label03:
        r78 = null;

     label04:
        if r74 == null goto label06;

        if r78 == null goto label06;

        $z3 = virtualinvoke r2.<com.android.server.wm.ActivityStackSupervisor: boolean isCallerAllowedToLaunchOnTaskDisplayArea(int,int,com.android.server.wm.TaskDisplayArea,android.content.pm.ActivityInfo)>(i0, i1, r78, r74);

        if $z3 == 0 goto label05;

        goto label06;

     label05:
        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: starting ");

        $r46 = specialinvoke r0.<com.android.server.wm.SafeActivityOptions: java.lang.String getIntentString(android.content.Intent)>(r73);

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") with launchTaskDisplayArea=");

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r78);

        r80 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityTaskManager", r80);

        $r56 = new java.lang.SecurityException;

        specialinvoke $r56.<java.lang.SecurityException: void <init>(java.lang.String)>(r80);

        throw $r56;

     label06:
        i2 = virtualinvoke r3.<android.app.ActivityOptions: int getLaunchDisplayId()>();

        if r74 == null goto label08;

        if i2 == -1 goto label08;

        $z2 = virtualinvoke r2.<com.android.server.wm.ActivityStackSupervisor: boolean isCallerAllowedToLaunchOnDisplay(int,int,int,android.content.pm.ActivityInfo)>(i0, i1, i2, r74);

        if $z2 == 0 goto label07;

        goto label08;

     label07:
        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: starting ");

        $r33 = specialinvoke r0.<com.android.server.wm.SafeActivityOptions: java.lang.String getIntentString(android.content.Intent)>(r73);

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") with launchDisplayId=");

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        r82 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityTaskManager", r82);

        $r43 = new java.lang.SecurityException;

        specialinvoke $r43.<java.lang.SecurityException: void <init>(java.lang.String)>(r82);

        throw $r43;

     label08:
        z0 = virtualinvoke r3.<android.app.ActivityOptions: boolean getLockTaskMode()>();

        if r74 == null goto label10;

        if z0 == 0 goto label10;

        $r16 = r2.<com.android.server.wm.ActivityStackSupervisor: com.android.server.wm.ActivityTaskManagerService mService>;

        $r17 = virtualinvoke $r16.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.LockTaskController getLockTaskController()>();

        $i6 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

        $r18 = r74.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $z1 = virtualinvoke $r17.<com.android.server.wm.LockTaskController: boolean isPackageWhitelisted(int,java.lang.String)>($i6, $r18);

        if $z1 == 0 goto label09;

        goto label10;

     label09:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: starting ");

        $r21 = specialinvoke r0.<com.android.server.wm.SafeActivityOptions: java.lang.String getIntentString(android.content.Intent)>(r73);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") with lockTaskMode=true");

        r84 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityTaskManager", r84);

        $r30 = new java.lang.SecurityException;

        specialinvoke $r30.<java.lang.SecurityException: void <init>(java.lang.String)>(r84);

        throw $r30;

     label10:
        $r85 = virtualinvoke r3.<android.app.ActivityOptions: android.view.RemoteAnimationAdapter getRemoteAnimationAdapter()>();

        if $r85 == null goto label12;

        r86 = r2.<com.android.server.wm.ActivityStackSupervisor: com.android.server.wm.ActivityTaskManagerService mService>;

        $i4 = staticinvoke <com.android.server.wm.ActivityTaskManagerService: int checkPermission(java.lang.String,int,int)>("android.permission.CONTROL_REMOTE_APP_TRANSITION_ANIMATIONS", i0, i1);

        if $i4 != 0 goto label11;

        goto label12;

     label11:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: starting ");

        $r6 = specialinvoke r0.<com.android.server.wm.SafeActivityOptions: java.lang.String getIntentString(android.content.Intent)>(r73);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") with remoteAnimationAdapter");

        r88 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityTaskManager", r88);

        $r15 = new java.lang.SecurityException;

        specialinvoke $r15.<java.lang.SecurityException: void <init>(java.lang.String)>(r88);

        throw $r15;

     label12:
        return;
    }

    public static com.android.server.wm.SafeActivityOptions fromBundle(android.os.Bundle)
    {
        com.android.server.wm.SafeActivityOptions $r0, r3;
        android.app.ActivityOptions $r1;
        android.os.Bundle r2;

        r2 := @parameter0: android.os.Bundle;

        if r2 == null goto label1;

        $r0 = new com.android.server.wm.SafeActivityOptions;

        $r1 = staticinvoke <android.app.ActivityOptions: android.app.ActivityOptions fromBundle(android.os.Bundle)>(r2);

        specialinvoke $r0.<com.android.server.wm.SafeActivityOptions: void <init>(android.app.ActivityOptions)>($r1);

        r3 = $r0;

        goto label2;

     label1:
        r3 = null;

     label2:
        return r3;
    }

    private java.lang.String getIntentString(android.content.Intent)
    {
        com.android.server.wm.SafeActivityOptions r0;
        android.content.Intent r1;
        java.lang.String r2;

        r0 := @this: com.android.server.wm.SafeActivityOptions;

        r1 := @parameter0: android.content.Intent;

        if r1 == null goto label1;

        r2 = virtualinvoke r1.<android.content.Intent: java.lang.String toString()>();

        goto label2;

     label1:
        r2 = "(no intent)";

     label2:
        return r2;
    }

    private void setCallingPidUidForRemoteAnimationAdapter(android.app.ActivityOptions, int, int)
    {
        com.android.server.wm.SafeActivityOptions r0;
        int i0, i1, $i2;
        android.app.ActivityOptions r1;
        android.view.RemoteAnimationAdapter r2;

        r0 := @this: com.android.server.wm.SafeActivityOptions;

        r1 := @parameter0: android.app.ActivityOptions;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = virtualinvoke r1.<android.app.ActivityOptions: android.view.RemoteAnimationAdapter getRemoteAnimationAdapter()>();

        if r2 != null goto label1;

        return;

     label1:
        $i2 = staticinvoke <android.os.Process: int myPid()>();

        if i0 != $i2 goto label2;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityTaskManager", "Safe activity options constructed after clearing calling id");

        return;

     label2:
        virtualinvoke r2.<android.view.RemoteAnimationAdapter: void setCallingPidUid(int,int)>(i0, i1);

        return;
    }

    android.app.ActivityOptions getOptions(android.content.Intent, android.content.pm.ActivityInfo, com.android.server.wm.WindowProcessController, com.android.server.wm.ActivityStackSupervisor) throws java.lang.SecurityException
    {
        com.android.server.wm.SafeActivityOptions r0;
        android.content.Intent r1;
        android.content.pm.ActivityInfo r2;
        com.android.server.wm.WindowProcessController r3;
        com.android.server.wm.ActivityStackSupervisor r4;
        android.app.ActivityOptions $r5, $r6, $r7, $r8, $r9, r10, r11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: com.android.server.wm.SafeActivityOptions;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: android.content.pm.ActivityInfo;

        r3 := @parameter2: com.android.server.wm.WindowProcessController;

        r4 := @parameter3: com.android.server.wm.ActivityStackSupervisor;

        r10 = r0.<com.android.server.wm.SafeActivityOptions: android.app.ActivityOptions mOriginalOptions>;

        if r10 == null goto label1;

        $i5 = r0.<com.android.server.wm.SafeActivityOptions: int mOriginalCallingPid>;

        $i4 = r0.<com.android.server.wm.SafeActivityOptions: int mOriginalCallingUid>;

        specialinvoke r0.<com.android.server.wm.SafeActivityOptions: void checkPermissions(android.content.Intent,android.content.pm.ActivityInfo,com.android.server.wm.WindowProcessController,com.android.server.wm.ActivityStackSupervisor,android.app.ActivityOptions,int,int)>(r1, r2, r3, r4, r10, $i5, $i4);

        $r9 = r0.<com.android.server.wm.SafeActivityOptions: android.app.ActivityOptions mOriginalOptions>;

        $i7 = r0.<com.android.server.wm.SafeActivityOptions: int mOriginalCallingPid>;

        $i6 = r0.<com.android.server.wm.SafeActivityOptions: int mOriginalCallingUid>;

        specialinvoke r0.<com.android.server.wm.SafeActivityOptions: void setCallingPidUidForRemoteAnimationAdapter(android.app.ActivityOptions,int,int)>($r9, $i7, $i6);

     label1:
        r11 = r0.<com.android.server.wm.SafeActivityOptions: android.app.ActivityOptions mCallerOptions>;

        if r11 == null goto label2;

        $i1 = r0.<com.android.server.wm.SafeActivityOptions: int mRealCallingPid>;

        $i0 = r0.<com.android.server.wm.SafeActivityOptions: int mRealCallingUid>;

        specialinvoke r0.<com.android.server.wm.SafeActivityOptions: void checkPermissions(android.content.Intent,android.content.pm.ActivityInfo,com.android.server.wm.WindowProcessController,com.android.server.wm.ActivityStackSupervisor,android.app.ActivityOptions,int,int)>(r1, r2, r3, r4, r11, $i1, $i0);

        $r8 = r0.<com.android.server.wm.SafeActivityOptions: android.app.ActivityOptions mCallerOptions>;

        $i3 = r0.<com.android.server.wm.SafeActivityOptions: int mRealCallingPid>;

        $i2 = r0.<com.android.server.wm.SafeActivityOptions: int mRealCallingUid>;

        specialinvoke r0.<com.android.server.wm.SafeActivityOptions: void setCallingPidUidForRemoteAnimationAdapter(android.app.ActivityOptions,int,int)>($r8, $i3, $i2);

     label2:
        $r6 = r0.<com.android.server.wm.SafeActivityOptions: android.app.ActivityOptions mOriginalOptions>;

        $r5 = r0.<com.android.server.wm.SafeActivityOptions: android.app.ActivityOptions mCallerOptions>;

        $r7 = virtualinvoke r0.<com.android.server.wm.SafeActivityOptions: android.app.ActivityOptions mergeActivityOptions(android.app.ActivityOptions,android.app.ActivityOptions)>($r6, $r5);

        return $r7;
    }

    android.app.ActivityOptions getOptions(com.android.server.wm.ActivityRecord) throws java.lang.SecurityException
    {
        com.android.server.wm.SafeActivityOptions r0;
        com.android.server.wm.ActivityRecord r1;
        com.android.server.wm.ActivityStackSupervisor $r2;
        com.android.server.wm.WindowProcessController $r3;
        android.content.pm.ActivityInfo $r4;
        android.content.Intent $r5;
        android.app.ActivityOptions $r6;

        r0 := @this: com.android.server.wm.SafeActivityOptions;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        $r5 = r1.<com.android.server.wm.ActivityRecord: android.content.Intent intent>;

        $r4 = r1.<com.android.server.wm.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r3 = r1.<com.android.server.wm.ActivityRecord: com.android.server.wm.WindowProcessController app>;

        $r2 = r1.<com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityStackSupervisor mStackSupervisor>;

        $r6 = virtualinvoke r0.<com.android.server.wm.SafeActivityOptions: android.app.ActivityOptions getOptions(android.content.Intent,android.content.pm.ActivityInfo,com.android.server.wm.WindowProcessController,com.android.server.wm.ActivityStackSupervisor)>($r5, $r4, $r3, $r2);

        return $r6;
    }

    android.app.ActivityOptions getOptions(com.android.server.wm.ActivityStackSupervisor) throws java.lang.SecurityException
    {
        com.android.server.wm.SafeActivityOptions r0;
        com.android.server.wm.ActivityStackSupervisor r1;
        android.app.ActivityOptions $r2;

        r0 := @this: com.android.server.wm.SafeActivityOptions;

        r1 := @parameter0: com.android.server.wm.ActivityStackSupervisor;

        $r2 = virtualinvoke r0.<com.android.server.wm.SafeActivityOptions: android.app.ActivityOptions getOptions(android.content.Intent,android.content.pm.ActivityInfo,com.android.server.wm.WindowProcessController,com.android.server.wm.ActivityStackSupervisor)>(null, null, null, r1);

        return $r2;
    }

    android.app.ActivityOptions mergeActivityOptions(android.app.ActivityOptions, android.app.ActivityOptions)
    {
        com.android.server.wm.SafeActivityOptions r0;
        android.app.ActivityOptions r1, $r3, r4;
        android.os.Bundle $r2, r5;

        r0 := @this: com.android.server.wm.SafeActivityOptions;

        r4 := @parameter0: android.app.ActivityOptions;

        r1 := @parameter1: android.app.ActivityOptions;

        if r4 != null goto label1;

        return r1;

     label1:
        if r1 != null goto label2;

        return r4;

     label2:
        r5 = virtualinvoke r4.<android.app.ActivityOptions: android.os.Bundle toBundle()>();

        $r2 = virtualinvoke r1.<android.app.ActivityOptions: android.os.Bundle toBundle()>();

        virtualinvoke r5.<android.os.Bundle: void putAll(android.os.Bundle)>($r2);

        $r3 = staticinvoke <android.app.ActivityOptions: android.app.ActivityOptions fromBundle(android.os.Bundle)>(r5);

        return $r3;
    }

    android.os.Bundle popAppVerificationBundle()
    {
        com.android.server.wm.SafeActivityOptions r0;
        android.app.ActivityOptions r1;
        android.os.Bundle r2;

        r0 := @this: com.android.server.wm.SafeActivityOptions;

        r1 = r0.<com.android.server.wm.SafeActivityOptions: android.app.ActivityOptions mOriginalOptions>;

        if r1 == null goto label1;

        r2 = virtualinvoke r1.<android.app.ActivityOptions: android.os.Bundle popAppVerificationBundle()>();

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public void setCallerOptions(android.app.ActivityOptions)
    {
        com.android.server.wm.SafeActivityOptions r0;
        android.app.ActivityOptions r1;
        int $i0, $i1;

        r0 := @this: com.android.server.wm.SafeActivityOptions;

        r1 := @parameter0: android.app.ActivityOptions;

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        r0.<com.android.server.wm.SafeActivityOptions: int mRealCallingPid> = $i0;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r0.<com.android.server.wm.SafeActivityOptions: int mRealCallingUid> = $i1;

        r0.<com.android.server.wm.SafeActivityOptions: android.app.ActivityOptions mCallerOptions> = r1;

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.wm.SafeActivityOptions: java.lang.String TAG> = "ActivityTaskManager";

        return;
    }
}
