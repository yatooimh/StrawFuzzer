public class com.android.server.wm.SeamlessRotator extends java.lang.Object
{
    private final boolean mApplyFixedTransformHint;
    private final int mFixedTransformHint;
    private final float[] mFloat9;
    private final int mNewRotation;
    private final int mOldRotation;
    private final android.graphics.Matrix mTransform;

    public void <init>(int, int, android.view.DisplayInfo, boolean)
    {
        com.android.server.wm.SeamlessRotator r0;
        int i0, i1, i2, $i3, i4, i5;
        boolean z0, z3;
        android.graphics.Matrix $r1, $r3, $r4, $r5;
        float[] $r2;
        android.view.DisplayInfo r6;

        r0 := @this: com.android.server.wm.SeamlessRotator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r6 := @parameter2: android.view.DisplayInfo;

        z0 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.graphics.Matrix;

        specialinvoke $r1.<android.graphics.Matrix: void <init>()>();

        r0.<com.android.server.wm.SeamlessRotator: android.graphics.Matrix mTransform> = $r1;

        $r2 = newarray (float)[9];

        r0.<com.android.server.wm.SeamlessRotator: float[] mFloat9> = $r2;

        r0.<com.android.server.wm.SeamlessRotator: int mOldRotation> = i0;

        r0.<com.android.server.wm.SeamlessRotator: int mNewRotation> = i1;

        r0.<com.android.server.wm.SeamlessRotator: boolean mApplyFixedTransformHint> = z0;

        r0.<com.android.server.wm.SeamlessRotator: int mFixedTransformHint> = i0;

        i2 = r6.<android.view.DisplayInfo: int rotation>;

        z3 = 1;

        if i2 == 1 goto label2;

        $i3 = r6.<android.view.DisplayInfo: int rotation>;

        if $i3 != 3 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        if z3 == 0 goto label3;

        i4 = r6.<android.view.DisplayInfo: int logicalWidth>;

        goto label4;

     label3:
        i4 = r6.<android.view.DisplayInfo: int logicalHeight>;

     label4:
        if z3 == 0 goto label5;

        i5 = r6.<android.view.DisplayInfo: int logicalHeight>;

        goto label6;

     label5:
        i5 = r6.<android.view.DisplayInfo: int logicalWidth>;

     label6:
        $r3 = new android.graphics.Matrix;

        specialinvoke $r3.<android.graphics.Matrix: void <init>()>();

        $r4 = r0.<com.android.server.wm.SeamlessRotator: android.graphics.Matrix mTransform>;

        staticinvoke <com.android.server.wm.utils.CoordinateTransforms: void transformLogicalToPhysicalCoordinates(int,int,int,android.graphics.Matrix)>(i0, i5, i4, $r4);

        staticinvoke <com.android.server.wm.utils.CoordinateTransforms: void transformPhysicalToLogicalCoordinates(int,int,int,android.graphics.Matrix)>(i1, i5, i4, $r3);

        $r5 = r0.<com.android.server.wm.SeamlessRotator: android.graphics.Matrix mTransform>;

        virtualinvoke $r5.<android.graphics.Matrix: boolean postConcat(android.graphics.Matrix)>($r3);

        return;
    }

    public void dump(java.io.PrintWriter)
    {
        com.android.server.wm.SeamlessRotator r0;
        java.io.PrintWriter r1;
        int $i0, $i1;

        r0 := @this: com.android.server.wm.SeamlessRotator;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("{old=");

        $i0 = r0.<com.android.server.wm.SeamlessRotator: int mOldRotation>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", new=");

        $i1 = r0.<com.android.server.wm.SeamlessRotator: int mNewRotation>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("}");

        return;
    }

    void finish(android.view.SurfaceControl$Transaction, com.android.server.wm.WindowContainer)
    {
        com.android.server.wm.SeamlessRotator r0;
        android.view.SurfaceControl$Transaction r1;
        com.android.server.wm.WindowContainer r2;
        android.graphics.Matrix $r3, $r5;
        float[] $r4;
        android.view.SurfaceControl $r6, $r10, $r12;
        android.graphics.Point $r8, $r9;
        int $i0, $i1;
        float $f0, $f1;
        boolean $z0;

        r0 := @this: com.android.server.wm.SeamlessRotator;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        r2 := @parameter1: com.android.server.wm.WindowContainer;

        $r3 = r0.<com.android.server.wm.SeamlessRotator: android.graphics.Matrix mTransform>;

        virtualinvoke $r3.<android.graphics.Matrix: void reset()>();

        $r6 = r2.<com.android.server.wm.WindowContainer: android.view.SurfaceControl mSurfaceControl>;

        $r5 = r0.<com.android.server.wm.SeamlessRotator: android.graphics.Matrix mTransform>;

        $r4 = r0.<com.android.server.wm.SeamlessRotator: float[] mFloat9>;

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setMatrix(android.view.SurfaceControl,android.graphics.Matrix,float[])>($r6, $r5, $r4);

        $r10 = r2.<com.android.server.wm.WindowContainer: android.view.SurfaceControl mSurfaceControl>;

        $r8 = r2.<com.android.server.wm.WindowContainer: android.graphics.Point mLastSurfacePosition>;

        $i0 = $r8.<android.graphics.Point: int x>;

        $f1 = (float) $i0;

        $r9 = r2.<com.android.server.wm.WindowContainer: android.graphics.Point mLastSurfacePosition>;

        $i1 = $r9.<android.graphics.Point: int y>;

        $f0 = (float) $i1;

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setPosition(android.view.SurfaceControl,float,float)>($r10, $f1, $f0);

        $z0 = r0.<com.android.server.wm.SeamlessRotator: boolean mApplyFixedTransformHint>;

        if $z0 == 0 goto label1;

        $r12 = r2.<com.android.server.wm.WindowContainer: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction unsetFixedTransformHint(android.view.SurfaceControl)>($r12);

     label1:
        return;
    }

    public void finish(com.android.server.wm.WindowState, boolean)
    {
        com.android.server.wm.SeamlessRotator r0;
        com.android.server.wm.WindowState r1;
        boolean z0;
        android.view.SurfaceControl$Transaction r2;
        com.android.server.wm.WindowStateAnimator $r3, $r8;
        com.android.server.wm.WindowSurfaceController $r4, $r9;
        android.view.SurfaceControl $r5, $r6, $r10, $r11;
        long $l0, $l1;

        r0 := @this: com.android.server.wm.SeamlessRotator;

        r1 := @parameter0: com.android.server.wm.WindowState;

        z0 := @parameter1: boolean;

        r2 = virtualinvoke r1.<com.android.server.wm.WindowState: android.view.SurfaceControl$Transaction getPendingTransaction()>();

        virtualinvoke r0.<com.android.server.wm.SeamlessRotator: void finish(android.view.SurfaceControl$Transaction,com.android.server.wm.WindowContainer)>(r2, r1);

        $r3 = r1.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator>;

        $r4 = $r3.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowSurfaceController mSurfaceController>;

        if $r4 == null goto label1;

        if z0 != 0 goto label1;

        $r5 = r1.<com.android.server.wm.WindowState: android.view.SurfaceControl mSurfaceControl>;

        $r6 = virtualinvoke r1.<com.android.server.wm.WindowState: android.view.SurfaceControl getClientViewRootSurface()>();

        $l0 = virtualinvoke r1.<com.android.server.wm.WindowState: long getFrameNumber()>();

        virtualinvoke r2.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction deferTransactionUntil(android.view.SurfaceControl,android.view.SurfaceControl,long)>($r5, $r6, $l0);

        $r8 = r1.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator>;

        $r9 = $r8.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowSurfaceController mSurfaceController>;

        $r10 = $r9.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl>;

        $r11 = virtualinvoke r1.<com.android.server.wm.WindowState: android.view.SurfaceControl getClientViewRootSurface()>();

        $l1 = virtualinvoke r1.<com.android.server.wm.WindowState: long getFrameNumber()>();

        virtualinvoke r2.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction deferTransactionUntil(android.view.SurfaceControl,android.view.SurfaceControl,long)>($r10, $r11, $l1);

     label1:
        return;
    }

    public int getOldRotation()
    {
        com.android.server.wm.SeamlessRotator r0;
        int $i0;

        r0 := @this: com.android.server.wm.SeamlessRotator;

        $i0 = r0.<com.android.server.wm.SeamlessRotator: int mOldRotation>;

        return $i0;
    }

    public java.lang.String toString()
    {
        com.android.server.wm.SeamlessRotator r0;
        java.io.StringWriter $r3;
        java.io.PrintWriter $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r7, $r9;

        r0 := @this: com.android.server.wm.SeamlessRotator;

        $r3 = new java.io.StringWriter;

        specialinvoke $r3.<java.io.StringWriter: void <init>()>();

        $r4 = new java.io.PrintWriter;

        specialinvoke $r4.<java.io.PrintWriter: void <init>(java.io.Writer)>($r3);

        virtualinvoke r0.<com.android.server.wm.SeamlessRotator: void dump(java.io.PrintWriter)>($r4);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ForcedSeamlessRotator");

        $r7 = virtualinvoke $r3.<java.io.StringWriter: java.lang.String toString()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public void unrotate(android.view.SurfaceControl$Transaction, com.android.server.wm.WindowContainer)
    {
        com.android.server.wm.SeamlessRotator r0;
        android.view.SurfaceControl$Transaction r1;
        com.android.server.wm.WindowContainer r2;
        float[] r3, $r5;
        android.view.SurfaceControl $r4, $r11, $r13;
        android.graphics.Matrix $r6, $r10;
        android.graphics.Point $r8, $r9;
        int $i0, $i1, $i2;
        float $f0, $f1, $f2, $f3;
        boolean $z0;

        r0 := @this: com.android.server.wm.SeamlessRotator;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        r2 := @parameter1: com.android.server.wm.WindowContainer;

        $r4 = virtualinvoke r2.<com.android.server.wm.WindowContainer: android.view.SurfaceControl getSurfaceControl()>();

        $r6 = r0.<com.android.server.wm.SeamlessRotator: android.graphics.Matrix mTransform>;

        $r5 = r0.<com.android.server.wm.SeamlessRotator: float[] mFloat9>;

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setMatrix(android.view.SurfaceControl,android.graphics.Matrix,float[])>($r4, $r6, $r5);

        r3 = newarray (float)[2];

        $r8 = r2.<com.android.server.wm.WindowContainer: android.graphics.Point mLastSurfacePosition>;

        $i0 = $r8.<android.graphics.Point: int x>;

        $f0 = (float) $i0;

        r3[0] = $f0;

        $r9 = r2.<com.android.server.wm.WindowContainer: android.graphics.Point mLastSurfacePosition>;

        $i1 = $r9.<android.graphics.Point: int y>;

        $f1 = (float) $i1;

        r3[1] = $f1;

        $r10 = r0.<com.android.server.wm.SeamlessRotator: android.graphics.Matrix mTransform>;

        virtualinvoke $r10.<android.graphics.Matrix: void mapPoints(float[])>(r3);

        $r11 = virtualinvoke r2.<com.android.server.wm.WindowContainer: android.view.SurfaceControl getSurfaceControl()>();

        $f3 = r3[0];

        $f2 = r3[1];

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setPosition(android.view.SurfaceControl,float,float)>($r11, $f3, $f2);

        $z0 = r0.<com.android.server.wm.SeamlessRotator: boolean mApplyFixedTransformHint>;

        if $z0 == 0 goto label1;

        $r13 = r2.<com.android.server.wm.WindowContainer: android.view.SurfaceControl mSurfaceControl>;

        $i2 = r0.<com.android.server.wm.SeamlessRotator: int mFixedTransformHint>;

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setFixedTransformHint(android.view.SurfaceControl,int)>($r13, $i2);

     label1:
        return;
    }
}
