public class com.android.server.wm.ShellRoot extends java.lang.Object
{
    private static final java.lang.String TAG;
    private android.view.IWindow mAccessibilityWindow;
    private android.os.IBinder$DeathRecipient mAccessibilityWindowDeath;
    private android.view.IWindow mClient;
    private final android.os.IBinder$DeathRecipient mDeathRecipient;
    private final com.android.server.wm.DisplayContent mDisplayContent;
    private android.view.SurfaceControl mSurfaceControl;
    private com.android.server.wm.WindowToken mToken;

    void <init>(android.view.IWindow, com.android.server.wm.DisplayContent, int)
    {
        com.android.server.wm.ShellRoot r0;
        com.android.server.wm.DisplayContent r1;
        int i0, $i1, $i2;
        com.android.server.wm._$$Lambda$ShellRoot$ZIRxB0zj35u_emFBSiaW8a8zUus $r2;
        android.os.IBinder $r3, $r7;
        android.os.IBinder$DeathRecipient $r4;
        com.android.server.wm.WindowToken $r5, $r16;
        com.android.server.wm.WindowManagerService $r6;
        android.view.SurfaceControl$Builder $r8, $r13, $r14, r29;
        java.lang.StringBuilder $r9, $r21;
        java.lang.String $r12, $r26;
        android.view.SurfaceControl $r15, $r18;
        android.view.SurfaceControl$Transaction $r17;
        android.os.RemoteException $r20;
        android.view.IWindow r27;

        r0 := @this: com.android.server.wm.ShellRoot;

        r27 := @parameter0: android.view.IWindow;

        r1 := @parameter1: com.android.server.wm.DisplayContent;

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.wm.ShellRoot: android.view.SurfaceControl mSurfaceControl> = null;

        r0.<com.android.server.wm.ShellRoot: com.android.server.wm.DisplayContent mDisplayContent> = r1;

        $r2 = new com.android.server.wm._$$Lambda$ShellRoot$ZIRxB0zj35u_emFBSiaW8a8zUus;

        specialinvoke $r2.<com.android.server.wm._$$Lambda$ShellRoot$ZIRxB0zj35u_emFBSiaW8a8zUus: void <init>(com.android.server.wm.ShellRoot,int)>(r0, i0);

        r0.<com.android.server.wm.ShellRoot: android.os.IBinder$DeathRecipient mDeathRecipient> = $r2;

     label1:
        $r3 = interfaceinvoke r27.<android.view.IWindow: android.os.IBinder asBinder()>();

        $r4 = r0.<com.android.server.wm.ShellRoot: android.os.IBinder$DeathRecipient mDeathRecipient>;

        interfaceinvoke $r3.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r4, 0);

     label2:
        r0.<com.android.server.wm.ShellRoot: android.view.IWindow mClient> = r27;

        $r5 = new com.android.server.wm.WindowToken;

        $r6 = r1.<com.android.server.wm.DisplayContent: com.android.server.wm.WindowManagerService mWmService>;

        $r7 = interfaceinvoke r27.<android.view.IWindow: android.os.IBinder asBinder()>();

        specialinvoke $r5.<com.android.server.wm.WindowToken: void <init>(com.android.server.wm.WindowManagerService,android.os.IBinder,int,boolean,com.android.server.wm.DisplayContent,boolean,boolean)>($r6, $r7, i0, 1, r1, 1, 0);

        r0.<com.android.server.wm.ShellRoot: com.android.server.wm.WindowToken mToken> = $r5;

        $r8 = virtualinvoke $r5.<com.android.server.wm.WindowToken: android.view.SurfaceControl$Builder makeChildSurface(com.android.server.wm.WindowContainer)>(null);

        r29 = virtualinvoke $r8.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setContainerLayer()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Shell Root Leash ");

        $i1 = virtualinvoke r1.<com.android.server.wm.DisplayContent: int getDisplayId()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = virtualinvoke r29.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setName(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setCallsite(java.lang.String)>("ShellRoot");

        $r15 = virtualinvoke $r14.<android.view.SurfaceControl$Builder: android.view.SurfaceControl build()>();

        r0.<com.android.server.wm.ShellRoot: android.view.SurfaceControl mSurfaceControl> = $r15;

        $r16 = r0.<com.android.server.wm.ShellRoot: com.android.server.wm.WindowToken mToken>;

        $r17 = virtualinvoke $r16.<com.android.server.wm.WindowToken: android.view.SurfaceControl$Transaction getPendingTransaction()>();

        $r18 = r0.<com.android.server.wm.ShellRoot: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r17.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction show(android.view.SurfaceControl)>($r18);

        return;

     label3:
        $r20 := @caughtexception;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to add shell root for layer ");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on display ");

        $i2 = virtualinvoke r1.<com.android.server.wm.DisplayContent: int getDisplayId()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r26 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ShellRoot", $r26, $r20);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void clear()
    {
        com.android.server.wm.ShellRoot r0;
        android.os.IBinder $r1;
        android.os.IBinder$DeathRecipient $r2;
        android.view.IWindow r3;
        com.android.server.wm.WindowToken r4;

        r0 := @this: com.android.server.wm.ShellRoot;

        r3 = r0.<com.android.server.wm.ShellRoot: android.view.IWindow mClient>;

        if r3 == null goto label1;

        $r1 = interfaceinvoke r3.<android.view.IWindow: android.os.IBinder asBinder()>();

        $r2 = r0.<com.android.server.wm.ShellRoot: android.os.IBinder$DeathRecipient mDeathRecipient>;

        interfaceinvoke $r1.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        r0.<com.android.server.wm.ShellRoot: android.view.IWindow mClient> = null;

     label1:
        r4 = r0.<com.android.server.wm.ShellRoot: com.android.server.wm.WindowToken mToken>;

        if r4 == null goto label2;

        virtualinvoke r4.<com.android.server.wm.WindowToken: void removeImmediately()>();

        r0.<com.android.server.wm.ShellRoot: com.android.server.wm.WindowToken mToken> = null;

     label2:
        return;
    }

    android.view.IWindow getClient()
    {
        com.android.server.wm.ShellRoot r0;
        android.view.IWindow $r1;

        r0 := @this: com.android.server.wm.ShellRoot;

        $r1 = r0.<com.android.server.wm.ShellRoot: android.view.IWindow mClient>;

        return $r1;
    }

    android.view.SurfaceControl getSurfaceControl()
    {
        com.android.server.wm.ShellRoot r0;
        android.view.SurfaceControl $r1;

        r0 := @this: com.android.server.wm.ShellRoot;

        $r1 = r0.<com.android.server.wm.ShellRoot: android.view.SurfaceControl mSurfaceControl>;

        return $r1;
    }

    android.view.WindowInfo getWindowInfo()
    {
        com.android.server.wm.ShellRoot r0;
        android.view.WindowInfo r1;
        com.android.server.wm.WindowToken $r3, $r7, $r10, $r11;
        int $i0, $i1, $i2, $i3;
        com.android.server.wm.DisplayContent $r4, $r9, $r15;
        com.android.server.wm.TaskDisplayArea $r5;
        boolean $z0;
        android.view.IWindow $r6, $r12;
        com.android.server.wm.DisplayArea $r8;
        android.os.IBinder $r13;
        android.graphics.Rect $r14;
        com.android.server.wm.DockedStackDividerController $r16;
        android.graphics.Region $r17;

        r0 := @this: com.android.server.wm.ShellRoot;

        $r3 = r0.<com.android.server.wm.ShellRoot: com.android.server.wm.WindowToken mToken>;

        $i0 = $r3.<com.android.server.wm.WindowToken: int windowType>;

        if $i0 == 2034 goto label1;

        return null;

     label1:
        $r4 = r0.<com.android.server.wm.ShellRoot: com.android.server.wm.DisplayContent mDisplayContent>;

        $r5 = virtualinvoke $r4.<com.android.server.wm.DisplayContent: com.android.server.wm.TaskDisplayArea getDefaultTaskDisplayArea()>();

        $z0 = virtualinvoke $r5.<com.android.server.wm.TaskDisplayArea: boolean isSplitScreenModeActivated()>();

        if $z0 != 0 goto label2;

        return null;

     label2:
        $r6 = r0.<com.android.server.wm.ShellRoot: android.view.IWindow mAccessibilityWindow>;

        if $r6 != null goto label3;

        return null;

     label3:
        r1 = staticinvoke <android.view.WindowInfo: android.view.WindowInfo obtain()>();

        $r7 = r0.<com.android.server.wm.ShellRoot: com.android.server.wm.WindowToken mToken>;

        $r8 = virtualinvoke $r7.<com.android.server.wm.WindowToken: com.android.server.wm.DisplayArea getDisplayArea()>();

        $r9 = virtualinvoke $r8.<com.android.server.wm.DisplayArea: com.android.server.wm.DisplayContent getDisplayContent()>();

        $i1 = $r9.<com.android.server.wm.DisplayContent: int mDisplayId>;

        r1.<android.view.WindowInfo: int displayId> = $i1;

        $r10 = r0.<com.android.server.wm.ShellRoot: com.android.server.wm.WindowToken mToken>;

        $i2 = $r10.<com.android.server.wm.WindowToken: int windowType>;

        r1.<android.view.WindowInfo: int type> = $i2;

        $r11 = r0.<com.android.server.wm.ShellRoot: com.android.server.wm.WindowToken mToken>;

        $i3 = virtualinvoke $r11.<com.android.server.wm.WindowToken: int getWindowLayerFromType()>();

        r1.<android.view.WindowInfo: int layer> = $i3;

        $r12 = r0.<com.android.server.wm.ShellRoot: android.view.IWindow mAccessibilityWindow>;

        $r13 = interfaceinvoke $r12.<android.view.IWindow: android.os.IBinder asBinder()>();

        r1.<android.view.WindowInfo: android.os.IBinder token> = $r13;

        r1.<android.view.WindowInfo: java.lang.CharSequence title> = "Splitscreen Divider";

        r1.<android.view.WindowInfo: boolean focused> = 0;

        r1.<android.view.WindowInfo: boolean inPictureInPicture> = 0;

        r1.<android.view.WindowInfo: boolean hasFlagWatchOutsideTouch> = 0;

        $r14 = new android.graphics.Rect;

        specialinvoke $r14.<android.graphics.Rect: void <init>()>();

        $r15 = r0.<com.android.server.wm.ShellRoot: com.android.server.wm.DisplayContent mDisplayContent>;

        $r16 = virtualinvoke $r15.<com.android.server.wm.DisplayContent: com.android.server.wm.DockedStackDividerController getDockedDividerController()>();

        virtualinvoke $r16.<com.android.server.wm.DockedStackDividerController: void getTouchRegion(android.graphics.Rect)>($r14);

        $r17 = r1.<android.view.WindowInfo: android.graphics.Region regionInScreen>;

        virtualinvoke $r17.<android.graphics.Region: boolean set(android.graphics.Rect)>($r14);

        return r1;
    }

    public void lambda$new$0$ShellRoot(int)
    {
        com.android.server.wm.ShellRoot r0;
        int i0;
        com.android.server.wm.DisplayContent $r1;

        r0 := @this: com.android.server.wm.ShellRoot;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.wm.ShellRoot: com.android.server.wm.DisplayContent mDisplayContent>;

        virtualinvoke $r1.<com.android.server.wm.DisplayContent: void removeShellRoot(int)>(i0);

        return;
    }

    public void lambda$setAccessibilityWindow$1$ShellRoot()
    {
        com.android.server.wm.ShellRoot r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.DisplayContent $r3;
        com.android.server.wm.WindowManagerService $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.wm.ShellRoot;

        $r3 = r0.<com.android.server.wm.ShellRoot: com.android.server.wm.DisplayContent mDisplayContent>;

        $r4 = $r3.<com.android.server.wm.DisplayContent: com.android.server.wm.WindowManagerService mWmService>;

        r1 = $r4.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        r0.<com.android.server.wm.ShellRoot: android.view.IWindow mAccessibilityWindow> = null;

        virtualinvoke r0.<com.android.server.wm.ShellRoot: void setAccessibilityWindow(android.view.IWindow)>(null);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void setAccessibilityWindow(android.view.IWindow)
    {
        com.android.server.wm.ShellRoot r0;
        android.view.IWindow r1, $r7, r13;
        com.android.server.wm.DisplayContent $r2, $r5, $r16;
        com.android.server.wm.WindowManagerService $r3, $r17;
        int[] $r4;
        com.android.server.wm.AccessibilityController $r6, $r18;
        int $i0;
        android.os.IBinder $r8, $r10;
        android.os.IBinder$DeathRecipient $r9, $r11;
        android.os.RemoteException $r12;
        com.android.server.wm._$$Lambda$ShellRoot$lmw8rpv8pDkMx1BUK9v0HtaPVZ8 r14;

        r0 := @this: com.android.server.wm.ShellRoot;

        r13 := @parameter0: android.view.IWindow;

        r1 = r0.<com.android.server.wm.ShellRoot: android.view.IWindow mAccessibilityWindow>;

        if r1 == null goto label1;

        $r10 = interfaceinvoke r1.<android.view.IWindow: android.os.IBinder asBinder()>();

        $r11 = r0.<com.android.server.wm.ShellRoot: android.os.IBinder$DeathRecipient mAccessibilityWindowDeath>;

        interfaceinvoke $r10.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r11, 0);

     label1:
        r0.<com.android.server.wm.ShellRoot: android.view.IWindow mAccessibilityWindow> = r13;

        if r13 == null goto label5;

     label2:
        r14 = new com.android.server.wm._$$Lambda$ShellRoot$lmw8rpv8pDkMx1BUK9v0HtaPVZ8;

        specialinvoke r14.<com.android.server.wm._$$Lambda$ShellRoot$lmw8rpv8pDkMx1BUK9v0HtaPVZ8: void <init>(com.android.server.wm.ShellRoot)>(r0);

        r0.<com.android.server.wm.ShellRoot: android.os.IBinder$DeathRecipient mAccessibilityWindowDeath> = r14;

        $r7 = r0.<com.android.server.wm.ShellRoot: android.view.IWindow mAccessibilityWindow>;

        $r8 = interfaceinvoke $r7.<android.view.IWindow: android.os.IBinder asBinder()>();

        $r9 = r0.<com.android.server.wm.ShellRoot: android.os.IBinder$DeathRecipient mAccessibilityWindowDeath>;

        interfaceinvoke $r8.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r9, 0);

     label3:
        goto label5;

     label4:
        $r12 := @caughtexception;

        r0.<com.android.server.wm.ShellRoot: android.view.IWindow mAccessibilityWindow> = null;

     label5:
        $r16 = r0.<com.android.server.wm.ShellRoot: com.android.server.wm.DisplayContent mDisplayContent>;

        $r17 = $r16.<com.android.server.wm.DisplayContent: com.android.server.wm.WindowManagerService mWmService>;

        $r18 = $r17.<com.android.server.wm.WindowManagerService: com.android.server.wm.AccessibilityController mAccessibilityController>;

        if $r18 == null goto label6;

        $r2 = r0.<com.android.server.wm.ShellRoot: com.android.server.wm.DisplayContent mDisplayContent>;

        $r3 = $r2.<com.android.server.wm.DisplayContent: com.android.server.wm.WindowManagerService mWmService>;

        $r6 = $r3.<com.android.server.wm.WindowManagerService: com.android.server.wm.AccessibilityController mAccessibilityController>;

        $r4 = newarray (int)[1];

        $r5 = r0.<com.android.server.wm.ShellRoot: com.android.server.wm.DisplayContent mDisplayContent>;

        $i0 = virtualinvoke $r5.<com.android.server.wm.DisplayContent: int getDisplayId()>();

        $r4[0] = $i0;

        virtualinvoke $r6.<com.android.server.wm.AccessibilityController: void onSomeWindowResizedOrMovedLocked(int[])>($r4);

     label6:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    void startAnimation(android.view.animation.Animation)
    {
        com.android.server.wm.ShellRoot r0;
        android.view.DisplayInfo r1, r15;
        com.android.server.wm.WindowToken $r2, $r3, r17;
        int $i0, $i1, $i2, $i3, $i4;
        com.android.server.wm.DisplayContent $r4, $r9, $r13;
        com.android.server.wm.WindowManagerService $r5, $r10;
        float $f0;
        com.android.server.wm.LocalAnimationAdapter $r6;
        com.android.server.wm.WindowAnimationSpec $r7;
        android.graphics.Point $r8;
        com.android.server.wm.SurfaceAnimationRunner $r11;
        android.view.SurfaceControl$Transaction $r12;
        android.view.animation.Animation r14;

        r0 := @this: com.android.server.wm.ShellRoot;

        r14 := @parameter0: android.view.animation.Animation;

        $r2 = r0.<com.android.server.wm.ShellRoot: com.android.server.wm.WindowToken mToken>;

        $i0 = $r2.<com.android.server.wm.WindowToken: int windowType>;

        if $i0 == 2034 goto label1;

        return;

     label1:
        $r3 = r0.<com.android.server.wm.ShellRoot: com.android.server.wm.WindowToken mToken>;

        r1 = virtualinvoke $r3.<com.android.server.wm.WindowToken: android.view.DisplayInfo getFixedRotationTransformDisplayInfo()>();

        r15 = r1;

        if r1 != null goto label2;

        $r13 = r0.<com.android.server.wm.ShellRoot: com.android.server.wm.DisplayContent mDisplayContent>;

        r15 = virtualinvoke $r13.<com.android.server.wm.DisplayContent: android.view.DisplayInfo getDisplayInfo()>();

     label2:
        $i4 = r15.<android.view.DisplayInfo: int logicalWidth>;

        $i3 = r15.<android.view.DisplayInfo: int logicalHeight>;

        $i2 = r15.<android.view.DisplayInfo: int appWidth>;

        $i1 = r15.<android.view.DisplayInfo: int appHeight>;

        virtualinvoke r14.<android.view.animation.Animation: void initialize(int,int,int,int)>($i4, $i3, $i2, $i1);

        virtualinvoke r14.<android.view.animation.Animation: void restrictDuration(long)>(10000L);

        $r4 = r0.<com.android.server.wm.ShellRoot: com.android.server.wm.DisplayContent mDisplayContent>;

        $r5 = $r4.<com.android.server.wm.DisplayContent: com.android.server.wm.WindowManagerService mWmService>;

        $f0 = virtualinvoke $r5.<com.android.server.wm.WindowManagerService: float getWindowAnimationScaleLocked()>();

        virtualinvoke r14.<android.view.animation.Animation: void scaleCurrentDuration(float)>($f0);

        $r6 = new com.android.server.wm.LocalAnimationAdapter;

        $r7 = new com.android.server.wm.WindowAnimationSpec;

        $r8 = new android.graphics.Point;

        specialinvoke $r8.<android.graphics.Point: void <init>(int,int)>(0, 0);

        specialinvoke $r7.<com.android.server.wm.WindowAnimationSpec: void <init>(android.view.animation.Animation,android.graphics.Point,boolean,float)>(r14, $r8, 0, 0.0F);

        $r9 = r0.<com.android.server.wm.ShellRoot: com.android.server.wm.DisplayContent mDisplayContent>;

        $r10 = $r9.<com.android.server.wm.DisplayContent: com.android.server.wm.WindowManagerService mWmService>;

        $r11 = $r10.<com.android.server.wm.WindowManagerService: com.android.server.wm.SurfaceAnimationRunner mSurfaceAnimationRunner>;

        specialinvoke $r6.<com.android.server.wm.LocalAnimationAdapter: void <init>(com.android.server.wm.LocalAnimationAdapter$AnimationSpec,com.android.server.wm.SurfaceAnimationRunner)>($r7, $r11);

        r17 = r0.<com.android.server.wm.ShellRoot: com.android.server.wm.WindowToken mToken>;

        $r12 = virtualinvoke r17.<com.android.server.wm.WindowToken: android.view.SurfaceControl$Transaction getPendingTransaction()>();

        virtualinvoke r17.<com.android.server.wm.WindowToken: void startAnimation(android.view.SurfaceControl$Transaction,com.android.server.wm.AnimationAdapter,boolean,int)>($r12, $r6, 0, 16);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.wm.ShellRoot: java.lang.String TAG> = "ShellRoot";

        return;
    }
}
