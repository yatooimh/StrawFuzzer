class com.android.server.wm.SurfaceAnimationRunner extends java.lang.Object
{
    private final android.animation.AnimationHandler mAnimationHandler;
    private boolean mAnimationStartDeferred;
    private final android.os.Handler mAnimationThreadHandler;
    private final com.android.server.wm.SurfaceAnimationRunner$AnimatorFactory mAnimatorFactory;
    private boolean mApplyScheduled;
    private final java.lang.Runnable mApplyTransactionRunnable;
    private final java.lang.Object mCancelLock;
    android.view.Choreographer mChoreographer;
    private final android.view.SurfaceControl$Transaction mFrameTransaction;
    private final java.lang.Object mLock;
    final android.util.ArrayMap mPendingAnimations;
    private final android.os.PowerManagerInternal mPowerManagerInternal;
    final android.util.ArrayMap mRunningAnimations;
    private final android.os.Handler mSurfaceAnimationHandler;

    void <init>(android.animation.AnimationHandler$AnimationFrameCallbackProvider, com.android.server.wm.SurfaceAnimationRunner$AnimatorFactory, android.view.SurfaceControl$Transaction, android.os.PowerManagerInternal)
    {
        com.android.server.wm.SurfaceAnimationRunner r0;
        com.android.server.wm.SurfaceAnimationRunner$AnimatorFactory r1, r19;
        android.os.PowerManagerInternal r2;
        java.lang.Object $r3, $r4;
        android.os.Handler $r5, $r6, $r11;
        com.android.server.wm._$$Lambda$SurfaceAnimationRunner$lSzwjoKEGADoEFOzdEnwriAk0T4 $r7;
        android.util.ArrayMap $r8, $r9;
        com.android.server.wm._$$Lambda$SurfaceAnimationRunner$xDyZdsMrcbp64p4BQmOGPvVnSWA $r10;
        android.animation.AnimationHandler $r12;
        com.android.internal.graphics.SfVsyncFrameCallbackProvider $r13;
        android.view.Choreographer $r14;
        com.android.server.wm._$$Lambda$SurfaceAnimationRunner$we7K92eAl3biB_bzyqbv5xCmasE $r15;
        android.animation.AnimationHandler$AnimationFrameCallbackProvider r16;
        android.view.SurfaceControl$Transaction r17;

        r0 := @this: com.android.server.wm.SurfaceAnimationRunner;

        r16 := @parameter0: android.animation.AnimationHandler$AnimationFrameCallbackProvider;

        r1 := @parameter1: com.android.server.wm.SurfaceAnimationRunner$AnimatorFactory;

        r17 := @parameter2: android.view.SurfaceControl$Transaction;

        r2 := @parameter3: android.os.PowerManagerInternal;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<com.android.server.wm.SurfaceAnimationRunner: java.lang.Object mLock> = $r3;

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        r0.<com.android.server.wm.SurfaceAnimationRunner: java.lang.Object mCancelLock> = $r4;

        $r5 = staticinvoke <com.android.server.AnimationThread: android.os.Handler getHandler()>();

        r0.<com.android.server.wm.SurfaceAnimationRunner: android.os.Handler mAnimationThreadHandler> = $r5;

        $r6 = staticinvoke <com.android.server.wm.SurfaceAnimationThread: android.os.Handler getHandler()>();

        r0.<com.android.server.wm.SurfaceAnimationRunner: android.os.Handler mSurfaceAnimationHandler> = $r6;

        $r7 = new com.android.server.wm._$$Lambda$SurfaceAnimationRunner$lSzwjoKEGADoEFOzdEnwriAk0T4;

        specialinvoke $r7.<com.android.server.wm._$$Lambda$SurfaceAnimationRunner$lSzwjoKEGADoEFOzdEnwriAk0T4: void <init>(com.android.server.wm.SurfaceAnimationRunner)>(r0);

        r0.<com.android.server.wm.SurfaceAnimationRunner: java.lang.Runnable mApplyTransactionRunnable> = $r7;

        $r8 = new android.util.ArrayMap;

        specialinvoke $r8.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.wm.SurfaceAnimationRunner: android.util.ArrayMap mPendingAnimations> = $r8;

        $r9 = new android.util.ArrayMap;

        specialinvoke $r9.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.wm.SurfaceAnimationRunner: android.util.ArrayMap mRunningAnimations> = $r9;

        $r11 = r0.<com.android.server.wm.SurfaceAnimationRunner: android.os.Handler mSurfaceAnimationHandler>;

        $r10 = new com.android.server.wm._$$Lambda$SurfaceAnimationRunner$xDyZdsMrcbp64p4BQmOGPvVnSWA;

        specialinvoke $r10.<com.android.server.wm._$$Lambda$SurfaceAnimationRunner$xDyZdsMrcbp64p4BQmOGPvVnSWA: void <init>(com.android.server.wm.SurfaceAnimationRunner)>(r0);

        virtualinvoke $r11.<android.os.Handler: boolean runWithScissors(java.lang.Runnable,long)>($r10, 0L);

        r0.<com.android.server.wm.SurfaceAnimationRunner: android.view.SurfaceControl$Transaction mFrameTransaction> = r17;

        $r12 = new android.animation.AnimationHandler;

        specialinvoke $r12.<android.animation.AnimationHandler: void <init>()>();

        r0.<com.android.server.wm.SurfaceAnimationRunner: android.animation.AnimationHandler mAnimationHandler> = $r12;

        if r16 == null goto label1;

        goto label2;

     label1:
        $r13 = new com.android.internal.graphics.SfVsyncFrameCallbackProvider;

        $r14 = r0.<com.android.server.wm.SurfaceAnimationRunner: android.view.Choreographer mChoreographer>;

        specialinvoke $r13.<com.android.internal.graphics.SfVsyncFrameCallbackProvider: void <init>(android.view.Choreographer)>($r14);

        r16 = $r13;

     label2:
        virtualinvoke $r12.<android.animation.AnimationHandler: void setProvider(android.animation.AnimationHandler$AnimationFrameCallbackProvider)>(r16);

        if r1 == null goto label3;

        r19 = r1;

        goto label4;

     label3:
        $r15 = new com.android.server.wm._$$Lambda$SurfaceAnimationRunner$we7K92eAl3biB_bzyqbv5xCmasE;

        specialinvoke $r15.<com.android.server.wm._$$Lambda$SurfaceAnimationRunner$we7K92eAl3biB_bzyqbv5xCmasE: void <init>(com.android.server.wm.SurfaceAnimationRunner)>(r0);

        r19 = $r15;

     label4:
        r0.<com.android.server.wm.SurfaceAnimationRunner: com.android.server.wm.SurfaceAnimationRunner$AnimatorFactory mAnimatorFactory> = r19;

        r0.<com.android.server.wm.SurfaceAnimationRunner: android.os.PowerManagerInternal mPowerManagerInternal> = r2;

        return;
    }

    void <init>(java.util.function.Supplier, android.os.PowerManagerInternal)
    {
        com.android.server.wm.SurfaceAnimationRunner r0;
        java.util.function.Supplier r1;
        android.os.PowerManagerInternal r2;
        java.lang.Object $r3;
        android.view.SurfaceControl$Transaction $r4;

        r0 := @this: com.android.server.wm.SurfaceAnimationRunner;

        r1 := @parameter0: java.util.function.Supplier;

        r2 := @parameter1: android.os.PowerManagerInternal;

        $r3 = interfaceinvoke r1.<java.util.function.Supplier: java.lang.Object get()>();

        $r4 = (android.view.SurfaceControl$Transaction) $r3;

        specialinvoke r0.<com.android.server.wm.SurfaceAnimationRunner: void <init>(android.animation.AnimationHandler$AnimationFrameCallbackProvider,com.android.server.wm.SurfaceAnimationRunner$AnimatorFactory,android.view.SurfaceControl$Transaction,android.os.PowerManagerInternal)>(null, null, $r4, r2);

        return;
    }

    static java.lang.Object access$100(com.android.server.wm.SurfaceAnimationRunner)
    {
        com.android.server.wm.SurfaceAnimationRunner r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.wm.SurfaceAnimationRunner;

        $r1 = r0.<com.android.server.wm.SurfaceAnimationRunner: java.lang.Object mCancelLock>;

        return $r1;
    }

    static android.view.SurfaceControl$Transaction access$200(com.android.server.wm.SurfaceAnimationRunner)
    {
        com.android.server.wm.SurfaceAnimationRunner r0;
        android.view.SurfaceControl$Transaction $r1;

        r0 := @parameter0: com.android.server.wm.SurfaceAnimationRunner;

        $r1 = r0.<com.android.server.wm.SurfaceAnimationRunner: android.view.SurfaceControl$Transaction mFrameTransaction>;

        return $r1;
    }

    static java.lang.Object access$300(com.android.server.wm.SurfaceAnimationRunner)
    {
        com.android.server.wm.SurfaceAnimationRunner r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.wm.SurfaceAnimationRunner;

        $r1 = r0.<com.android.server.wm.SurfaceAnimationRunner: java.lang.Object mLock>;

        return $r1;
    }

    static android.os.Handler access$400(com.android.server.wm.SurfaceAnimationRunner)
    {
        com.android.server.wm.SurfaceAnimationRunner r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.wm.SurfaceAnimationRunner;

        $r1 = r0.<com.android.server.wm.SurfaceAnimationRunner: android.os.Handler mAnimationThreadHandler>;

        return $r1;
    }

    static android.animation.AnimationHandler access$500(com.android.server.wm.SurfaceAnimationRunner)
    {
        com.android.server.wm.SurfaceAnimationRunner r0;
        android.animation.AnimationHandler $r1;

        r0 := @parameter0: com.android.server.wm.SurfaceAnimationRunner;

        $r1 = r0.<com.android.server.wm.SurfaceAnimationRunner: android.animation.AnimationHandler mAnimationHandler>;

        return $r1;
    }

    private void applyTransaction()
    {
        com.android.server.wm.SurfaceAnimationRunner r0;
        android.view.SurfaceControl$Transaction $r1, $r3;

        r0 := @this: com.android.server.wm.SurfaceAnimationRunner;

        $r1 = r0.<com.android.server.wm.SurfaceAnimationRunner: android.view.SurfaceControl$Transaction mFrameTransaction>;

        virtualinvoke $r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setAnimationTransaction()>();

        $r3 = r0.<com.android.server.wm.SurfaceAnimationRunner: android.view.SurfaceControl$Transaction mFrameTransaction>;

        virtualinvoke $r3.<android.view.SurfaceControl$Transaction: void apply()>();

        r0.<com.android.server.wm.SurfaceAnimationRunner: boolean mApplyScheduled> = 0;

        return;
    }

    private void applyTransformation(com.android.server.wm.SurfaceAnimationRunner$RunningAnimation, android.view.SurfaceControl$Transaction, long)
    {
        com.android.server.wm.SurfaceAnimationRunner r0;
        com.android.server.wm.SurfaceAnimationRunner$RunningAnimation r1;
        android.view.SurfaceControl$Transaction r2;
        long l0;
        android.view.SurfaceControl $r3;
        com.android.server.wm.LocalAnimationAdapter$AnimationSpec $r4;

        r0 := @this: com.android.server.wm.SurfaceAnimationRunner;

        r1 := @parameter0: com.android.server.wm.SurfaceAnimationRunner$RunningAnimation;

        r2 := @parameter1: android.view.SurfaceControl$Transaction;

        l0 := @parameter2: long;

        $r4 = r1.<com.android.server.wm.SurfaceAnimationRunner$RunningAnimation: com.android.server.wm.LocalAnimationAdapter$AnimationSpec mAnimSpec>;

        $r3 = r1.<com.android.server.wm.SurfaceAnimationRunner$RunningAnimation: android.view.SurfaceControl mLeash>;

        interfaceinvoke $r4.<com.android.server.wm.LocalAnimationAdapter$AnimationSpec: void apply(android.view.SurfaceControl$Transaction,android.view.SurfaceControl,long)>(r2, $r3, l0);

        return;
    }

    public static void lambda$9Wa9MhcrSX12liOouHtYXEkDU60(com.android.server.wm.SurfaceAnimationRunner, long)
    {
        com.android.server.wm.SurfaceAnimationRunner r0;
        long l0;

        r0 := @parameter0: com.android.server.wm.SurfaceAnimationRunner;

        l0 := @parameter1: long;

        specialinvoke r0.<com.android.server.wm.SurfaceAnimationRunner: void startAnimations(long)>(l0);

        return;
    }

    public static void lambda$lSzwjoKEGADoEFOzdEnwriAk0T4(com.android.server.wm.SurfaceAnimationRunner)
    {
        com.android.server.wm.SurfaceAnimationRunner r0;

        r0 := @parameter0: com.android.server.wm.SurfaceAnimationRunner;

        specialinvoke r0.<com.android.server.wm.SurfaceAnimationRunner: void applyTransaction()>();

        return;
    }

    private void scheduleApplyTransaction()
    {
        com.android.server.wm.SurfaceAnimationRunner r0;
        boolean $z0;
        java.lang.Runnable $r1;
        android.view.Choreographer $r2;

        r0 := @this: com.android.server.wm.SurfaceAnimationRunner;

        $z0 = r0.<com.android.server.wm.SurfaceAnimationRunner: boolean mApplyScheduled>;

        if $z0 != 0 goto label1;

        $r2 = r0.<com.android.server.wm.SurfaceAnimationRunner: android.view.Choreographer mChoreographer>;

        $r1 = r0.<com.android.server.wm.SurfaceAnimationRunner: java.lang.Runnable mApplyTransactionRunnable>;

        virtualinvoke $r2.<android.view.Choreographer: void postCallback(int,java.lang.Runnable,java.lang.Object)>(3, $r1, null);

        r0.<com.android.server.wm.SurfaceAnimationRunner: boolean mApplyScheduled> = 1;

     label1:
        return;
    }

    private void startAnimationLocked(com.android.server.wm.SurfaceAnimationRunner$RunningAnimation)
    {
        com.android.server.wm.SurfaceAnimationRunner r0;
        com.android.server.wm.SurfaceAnimationRunner$RunningAnimation r1;
        android.animation.ValueAnimator r2;
        com.android.server.wm.SurfaceAnimationRunner$AnimatorFactory $r3;
        com.android.server.wm.LocalAnimationAdapter$AnimationSpec $r4, $r11;
        long $l0, $l1, $l2, $l3;
        com.android.server.wm._$$Lambda$SurfaceAnimationRunner$puhYAP5tF0mSSJva_eUz59HnrkA $r6;
        com.android.server.wm.SurfaceAnimationRunner$1 $r7;
        android.view.SurfaceControl $r8;
        android.util.ArrayMap $r9;
        boolean $z0;
        android.view.Choreographer $r12, $r13;

        r0 := @this: com.android.server.wm.SurfaceAnimationRunner;

        r1 := @parameter0: com.android.server.wm.SurfaceAnimationRunner$RunningAnimation;

        $r3 = r0.<com.android.server.wm.SurfaceAnimationRunner: com.android.server.wm.SurfaceAnimationRunner$AnimatorFactory mAnimatorFactory>;

        r2 = interfaceinvoke $r3.<com.android.server.wm.SurfaceAnimationRunner$AnimatorFactory: android.animation.ValueAnimator makeAnimator()>();

        virtualinvoke r2.<android.animation.ValueAnimator: void overrideDurationScale(float)>(1.0F);

        $r4 = r1.<com.android.server.wm.SurfaceAnimationRunner$RunningAnimation: com.android.server.wm.LocalAnimationAdapter$AnimationSpec mAnimSpec>;

        $l0 = interfaceinvoke $r4.<com.android.server.wm.LocalAnimationAdapter$AnimationSpec: long getDuration()>();

        virtualinvoke r2.<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>($l0);

        $r6 = new com.android.server.wm._$$Lambda$SurfaceAnimationRunner$puhYAP5tF0mSSJva_eUz59HnrkA;

        specialinvoke $r6.<com.android.server.wm._$$Lambda$SurfaceAnimationRunner$puhYAP5tF0mSSJva_eUz59HnrkA: void <init>(com.android.server.wm.SurfaceAnimationRunner,com.android.server.wm.SurfaceAnimationRunner$RunningAnimation,android.animation.ValueAnimator)>(r0, r1, r2);

        virtualinvoke r2.<android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r6);

        $r7 = new com.android.server.wm.SurfaceAnimationRunner$1;

        specialinvoke $r7.<com.android.server.wm.SurfaceAnimationRunner$1: void <init>(com.android.server.wm.SurfaceAnimationRunner,com.android.server.wm.SurfaceAnimationRunner$RunningAnimation)>(r0, r1);

        virtualinvoke r2.<android.animation.ValueAnimator: void addListener(android.animation.Animator$AnimatorListener)>($r7);

        r1.<com.android.server.wm.SurfaceAnimationRunner$RunningAnimation: android.animation.ValueAnimator mAnim> = r2;

        $r9 = r0.<com.android.server.wm.SurfaceAnimationRunner: android.util.ArrayMap mRunningAnimations>;

        $r8 = r1.<com.android.server.wm.SurfaceAnimationRunner$RunningAnimation: android.view.SurfaceControl mLeash>;

        virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, r1);

        virtualinvoke r2.<android.animation.ValueAnimator: void start()>();

        $r11 = r1.<com.android.server.wm.SurfaceAnimationRunner$RunningAnimation: com.android.server.wm.LocalAnimationAdapter$AnimationSpec mAnimSpec>;

        $z0 = interfaceinvoke $r11.<com.android.server.wm.LocalAnimationAdapter$AnimationSpec: boolean canSkipFirstFrame()>();

        if $z0 == 0 goto label1;

        $r13 = r0.<com.android.server.wm.SurfaceAnimationRunner: android.view.Choreographer mChoreographer>;

        $l2 = virtualinvoke $r13.<android.view.Choreographer: long getFrameIntervalNanos()>();

        $l3 = $l2 / 1000000L;

        virtualinvoke r2.<android.animation.ValueAnimator: void setCurrentPlayTime(long)>($l3);

     label1:
        $r12 = r0.<com.android.server.wm.SurfaceAnimationRunner: android.view.Choreographer mChoreographer>;

        $l1 = virtualinvoke $r12.<android.view.Choreographer: long getFrameTime()>();

        virtualinvoke r2.<android.animation.ValueAnimator: boolean doAnimationFrame(long)>($l1);

        return;
    }

    private void startAnimations(long)
    {
        com.android.server.wm.SurfaceAnimationRunner r0;
        long l0;
        java.lang.Object r1;
        android.os.PowerManagerInternal $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.wm.SurfaceAnimationRunner;

        l0 := @parameter0: long;

        r1 = r0.<com.android.server.wm.SurfaceAnimationRunner: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.server.wm.SurfaceAnimationRunner: void startPendingAnimationsLocked()>();

        exitmonitor r1;

     label2:
        $r3 = r0.<com.android.server.wm.SurfaceAnimationRunner: android.os.PowerManagerInternal mPowerManagerInternal>;

        virtualinvoke $r3.<android.os.PowerManagerInternal: void powerHint(int,int)>(2, 0);

        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void startPendingAnimationsLocked()
    {
        com.android.server.wm.SurfaceAnimationRunner r0;
        android.util.ArrayMap $r1, $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;
        com.android.server.wm.SurfaceAnimationRunner$RunningAnimation $r5;

        r0 := @this: com.android.server.wm.SurfaceAnimationRunner;

        $r1 = r0.<com.android.server.wm.SurfaceAnimationRunner: android.util.ArrayMap mPendingAnimations>;

        $i0 = virtualinvoke $r1.<android.util.ArrayMap: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r3 = r0.<com.android.server.wm.SurfaceAnimationRunner: android.util.ArrayMap mPendingAnimations>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        $r5 = (com.android.server.wm.SurfaceAnimationRunner$RunningAnimation) $r4;

        specialinvoke r0.<com.android.server.wm.SurfaceAnimationRunner: void startAnimationLocked(com.android.server.wm.SurfaceAnimationRunner$RunningAnimation)>($r5);

        i1 = i1 + -1;

        goto label1;

     label2:
        $r2 = r0.<com.android.server.wm.SurfaceAnimationRunner: android.util.ArrayMap mPendingAnimations>;

        virtualinvoke $r2.<android.util.ArrayMap: void clear()>();

        return;
    }

    void continueStartingAnimations()
    {
        com.android.server.wm.SurfaceAnimationRunner r0;
        java.lang.Object r1;
        com.android.server.wm._$$Lambda$SurfaceAnimationRunner$9Wa9MhcrSX12liOouHtYXEkDU60 r2;
        android.util.ArrayMap $r3;
        boolean $z0;
        java.lang.Throwable $r4;
        android.view.Choreographer r5;

        r0 := @this: com.android.server.wm.SurfaceAnimationRunner;

        r1 = r0.<com.android.server.wm.SurfaceAnimationRunner: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<com.android.server.wm.SurfaceAnimationRunner: boolean mAnimationStartDeferred> = 0;

        $r3 = r0.<com.android.server.wm.SurfaceAnimationRunner: android.util.ArrayMap mPendingAnimations>;

        $z0 = virtualinvoke $r3.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        r5 = r0.<com.android.server.wm.SurfaceAnimationRunner: android.view.Choreographer mChoreographer>;

        r2 = new com.android.server.wm._$$Lambda$SurfaceAnimationRunner$9Wa9MhcrSX12liOouHtYXEkDU60;

        specialinvoke r2.<com.android.server.wm._$$Lambda$SurfaceAnimationRunner$9Wa9MhcrSX12liOouHtYXEkDU60: void <init>(com.android.server.wm.SurfaceAnimationRunner)>(r0);

        virtualinvoke r5.<android.view.Choreographer: void postFrameCallback(android.view.Choreographer$FrameCallback)>(r2);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    void deferStartingAnimations()
    {
        com.android.server.wm.SurfaceAnimationRunner r0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.wm.SurfaceAnimationRunner;

        r1 = r0.<com.android.server.wm.SurfaceAnimationRunner: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<com.android.server.wm.SurfaceAnimationRunner: boolean mAnimationStartDeferred> = 1;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void lambda$new$0$SurfaceAnimationRunner()
    {
        com.android.server.wm.SurfaceAnimationRunner r0;
        android.view.Choreographer $r1;

        r0 := @this: com.android.server.wm.SurfaceAnimationRunner;

        $r1 = staticinvoke <android.view.Choreographer: android.view.Choreographer getSfInstance()>();

        r0.<com.android.server.wm.SurfaceAnimationRunner: android.view.Choreographer mChoreographer> = $r1;

        return;
    }

    public android.animation.ValueAnimator lambda$new$1$SurfaceAnimationRunner()
    {
        com.android.server.wm.SurfaceAnimationRunner r0;
        com.android.server.wm.SurfaceAnimationRunner$SfValueAnimator $r1;

        r0 := @this: com.android.server.wm.SurfaceAnimationRunner;

        $r1 = new com.android.server.wm.SurfaceAnimationRunner$SfValueAnimator;

        specialinvoke $r1.<com.android.server.wm.SurfaceAnimationRunner$SfValueAnimator: void <init>(com.android.server.wm.SurfaceAnimationRunner)>(r0);

        return $r1;
    }

    public void lambda$onAnimationCancelled$2$SurfaceAnimationRunner(com.android.server.wm.SurfaceAnimationRunner$RunningAnimation)
    {
        com.android.server.wm.SurfaceAnimationRunner r0;
        com.android.server.wm.SurfaceAnimationRunner$RunningAnimation r1;
        android.animation.ValueAnimator $r2;

        r0 := @this: com.android.server.wm.SurfaceAnimationRunner;

        r1 := @parameter0: com.android.server.wm.SurfaceAnimationRunner$RunningAnimation;

        $r2 = r1.<com.android.server.wm.SurfaceAnimationRunner$RunningAnimation: android.animation.ValueAnimator mAnim>;

        virtualinvoke $r2.<android.animation.ValueAnimator: void cancel()>();

        specialinvoke r0.<com.android.server.wm.SurfaceAnimationRunner: void applyTransaction()>();

        return;
    }

    public void lambda$startAnimationLocked$3$SurfaceAnimationRunner(com.android.server.wm.SurfaceAnimationRunner$RunningAnimation, android.animation.ValueAnimator, android.animation.ValueAnimator)
    {
        com.android.server.wm.SurfaceAnimationRunner r0;
        android.animation.ValueAnimator r1, r5;
        long l0, l1, l3;
        boolean $z0;
        byte $b2;
        android.view.SurfaceControl$Transaction $r2;
        java.lang.Throwable $r3;
        com.android.server.wm.SurfaceAnimationRunner$RunningAnimation r4;
        java.lang.Object r6;

        r0 := @this: com.android.server.wm.SurfaceAnimationRunner;

        r4 := @parameter0: com.android.server.wm.SurfaceAnimationRunner$RunningAnimation;

        r1 := @parameter1: android.animation.ValueAnimator;

        r5 := @parameter2: android.animation.ValueAnimator;

        r6 = r0.<com.android.server.wm.SurfaceAnimationRunner: java.lang.Object mCancelLock>;

        entermonitor r6;

     label1:
        $z0 = staticinvoke <com.android.server.wm.SurfaceAnimationRunner$RunningAnimation: boolean access$000(com.android.server.wm.SurfaceAnimationRunner$RunningAnimation)>(r4);

        if $z0 != 0 goto label4;

        l0 = virtualinvoke r1.<android.animation.ValueAnimator: long getDuration()>();

        l1 = virtualinvoke r1.<android.animation.ValueAnimator: long getCurrentPlayTime()>();

     label2:
        l3 = l1;

        $b2 = l1 cmp l0;

        if $b2 <= 0 goto label3;

        l3 = l0;

     label3:
        $r2 = r0.<com.android.server.wm.SurfaceAnimationRunner: android.view.SurfaceControl$Transaction mFrameTransaction>;

        specialinvoke r0.<com.android.server.wm.SurfaceAnimationRunner: void applyTransformation(com.android.server.wm.SurfaceAnimationRunner$RunningAnimation,android.view.SurfaceControl$Transaction,long)>(r4, $r2, l3);

     label4:
        exitmonitor r6;

     label5:
        specialinvoke r0.<com.android.server.wm.SurfaceAnimationRunner: void scheduleApplyTransaction()>();

        return;

     label6:
        $r3 := @caughtexception;

     label7:
        exitmonitor r6;

     label8:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    void onAnimationCancelled(android.view.SurfaceControl)
    {
        com.android.server.wm.SurfaceAnimationRunner r0;
        java.lang.Object r1, $r5, r14;
        com.android.server.wm._$$Lambda$SurfaceAnimationRunner$SGOilG6qRe0XTsTJRQqQKhta0pA r2;
        android.util.ArrayMap $r3, $r4, $r6, $r8;
        boolean $z0;
        java.lang.Throwable $r10, $r11;
        android.view.SurfaceControl r12;
        com.android.server.wm.SurfaceAnimationRunner$RunningAnimation r13;
        android.os.Handler r15;

        r0 := @this: com.android.server.wm.SurfaceAnimationRunner;

        r12 := @parameter0: android.view.SurfaceControl;

        r1 = r0.<com.android.server.wm.SurfaceAnimationRunner: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.wm.SurfaceAnimationRunner: android.util.ArrayMap mPendingAnimations>;

        $z0 = virtualinvoke $r3.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r12);

        if $z0 == 0 goto label03;

        $r8 = r0.<com.android.server.wm.SurfaceAnimationRunner: android.util.ArrayMap mPendingAnimations>;

        virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r12);

        exitmonitor r1;

     label02:
        return;

     label03:
        $r4 = r0.<com.android.server.wm.SurfaceAnimationRunner: android.util.ArrayMap mRunningAnimations>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r12);

        r13 = (com.android.server.wm.SurfaceAnimationRunner$RunningAnimation) $r5;

     label04:
        if r13 == null goto label12;

     label05:
        $r6 = r0.<com.android.server.wm.SurfaceAnimationRunner: android.util.ArrayMap mRunningAnimations>;

        virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r12);

        r14 = r0.<com.android.server.wm.SurfaceAnimationRunner: java.lang.Object mCancelLock>;

        entermonitor r14;

     label06:
        staticinvoke <com.android.server.wm.SurfaceAnimationRunner$RunningAnimation: boolean access$002(com.android.server.wm.SurfaceAnimationRunner$RunningAnimation,boolean)>(r13, 1);

        exitmonitor r14;

     label07:
        r15 = r0.<com.android.server.wm.SurfaceAnimationRunner: android.os.Handler mSurfaceAnimationHandler>;

        r2 = new com.android.server.wm._$$Lambda$SurfaceAnimationRunner$SGOilG6qRe0XTsTJRQqQKhta0pA;

        specialinvoke r2.<com.android.server.wm._$$Lambda$SurfaceAnimationRunner$SGOilG6qRe0XTsTJRQqQKhta0pA: void <init>(com.android.server.wm.SurfaceAnimationRunner,com.android.server.wm.SurfaceAnimationRunner$RunningAnimation)>(r0, r13);

        virtualinvoke r15.<android.os.Handler: boolean post(java.lang.Runnable)>(r2);

     label08:
        goto label12;

     label09:
        $r10 := @caughtexception;

     label10:
        exitmonitor r14;

     label11:
        throw $r10;

     label12:
        exitmonitor r1;

     label13:
        return;

     label14:
        $r11 := @caughtexception;

     label15:
        exitmonitor r1;

     label16:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label11 to label12 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    void startAnimation(com.android.server.wm.LocalAnimationAdapter$AnimationSpec, android.view.SurfaceControl, android.view.SurfaceControl$Transaction, java.lang.Runnable)
    {
        com.android.server.wm.SurfaceAnimationRunner r0;
        android.view.SurfaceControl$Transaction r1;
        java.lang.Runnable r2;
        java.lang.Object r3;
        com.android.server.wm.SurfaceAnimationRunner$RunningAnimation r4;
        android.util.ArrayMap $r5;
        boolean $z0;
        java.lang.Throwable $r7;
        com.android.server.wm.LocalAnimationAdapter$AnimationSpec r8;
        android.view.SurfaceControl r9;
        android.view.Choreographer r10;
        com.android.server.wm._$$Lambda$SurfaceAnimationRunner$9Wa9MhcrSX12liOouHtYXEkDU60 r11;

        r0 := @this: com.android.server.wm.SurfaceAnimationRunner;

        r8 := @parameter0: com.android.server.wm.LocalAnimationAdapter$AnimationSpec;

        r9 := @parameter1: android.view.SurfaceControl;

        r1 := @parameter2: android.view.SurfaceControl$Transaction;

        r2 := @parameter3: java.lang.Runnable;

        r3 = r0.<com.android.server.wm.SurfaceAnimationRunner: java.lang.Object mLock>;

        entermonitor r3;

     label1:
        r4 = new com.android.server.wm.SurfaceAnimationRunner$RunningAnimation;

        specialinvoke r4.<com.android.server.wm.SurfaceAnimationRunner$RunningAnimation: void <init>(com.android.server.wm.LocalAnimationAdapter$AnimationSpec,android.view.SurfaceControl,java.lang.Runnable)>(r8, r9, r2);

        $r5 = r0.<com.android.server.wm.SurfaceAnimationRunner: android.util.ArrayMap mPendingAnimations>;

        virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, r4);

        $z0 = r0.<com.android.server.wm.SurfaceAnimationRunner: boolean mAnimationStartDeferred>;

        if $z0 != 0 goto label2;

        r10 = r0.<com.android.server.wm.SurfaceAnimationRunner: android.view.Choreographer mChoreographer>;

        r11 = new com.android.server.wm._$$Lambda$SurfaceAnimationRunner$9Wa9MhcrSX12liOouHtYXEkDU60;

        specialinvoke r11.<com.android.server.wm._$$Lambda$SurfaceAnimationRunner$9Wa9MhcrSX12liOouHtYXEkDU60: void <init>(com.android.server.wm.SurfaceAnimationRunner)>(r0);

        virtualinvoke r10.<android.view.Choreographer: void postFrameCallback(android.view.Choreographer$FrameCallback)>(r11);

     label2:
        specialinvoke r0.<com.android.server.wm.SurfaceAnimationRunner: void applyTransformation(com.android.server.wm.SurfaceAnimationRunner$RunningAnimation,android.view.SurfaceControl$Transaction,long)>(r4, r1, 0L);

        exitmonitor r3;

     label3:
        return;

     label4:
        $r7 := @caughtexception;

     label5:
        exitmonitor r3;

     label6:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
}
