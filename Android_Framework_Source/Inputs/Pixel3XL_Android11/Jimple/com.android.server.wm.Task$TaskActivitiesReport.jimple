class com.android.server.wm.Task$TaskActivitiesReport extends java.lang.Object implements java.util.function.Consumer
{
    com.android.server.wm.ActivityRecord base;
    int numActivities;
    int numRunning;
    com.android.server.wm.ActivityRecord top;

    void <init>()
    {
        com.android.server.wm.Task$TaskActivitiesReport r0;

        r0 := @this: com.android.server.wm.Task$TaskActivitiesReport;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void accept(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.Task$TaskActivitiesReport r0;
        com.android.server.wm.ActivityRecord r1, r2;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i3;
        com.android.server.wm.ActivityStack$ActivityState $r3;

        r0 := @this: com.android.server.wm.Task$TaskActivitiesReport;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        $z0 = r1.<com.android.server.wm.ActivityRecord: boolean finishing>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<com.android.server.wm.Task$TaskActivitiesReport: com.android.server.wm.ActivityRecord base> = r1;

        $i0 = r0.<com.android.server.wm.Task$TaskActivitiesReport: int numActivities>;

        $i1 = $i0 + 1;

        r0.<com.android.server.wm.Task$TaskActivitiesReport: int numActivities> = $i1;

        r2 = r0.<com.android.server.wm.Task$TaskActivitiesReport: com.android.server.wm.ActivityRecord top>;

        if r2 == null goto label2;

        $r3 = <com.android.server.wm.ActivityStack$ActivityState: com.android.server.wm.ActivityStack$ActivityState INITIALIZING>;

        $z1 = virtualinvoke r2.<com.android.server.wm.ActivityRecord: boolean isState(com.android.server.wm.ActivityStack$ActivityState)>($r3);

        if $z1 == 0 goto label3;

     label2:
        r0.<com.android.server.wm.Task$TaskActivitiesReport: com.android.server.wm.ActivityRecord top> = r1;

        r0.<com.android.server.wm.Task$TaskActivitiesReport: int numRunning> = 0;

     label3:
        $z2 = virtualinvoke r1.<com.android.server.wm.ActivityRecord: boolean attachedToProcess()>();

        if $z2 == 0 goto label4;

        $i2 = r0.<com.android.server.wm.Task$TaskActivitiesReport: int numRunning>;

        $i3 = $i2 + 1;

        r0.<com.android.server.wm.Task$TaskActivitiesReport: int numRunning> = $i3;

     label4:
        return;
    }

    public volatile void accept(java.lang.Object)
    {
        com.android.server.wm.Task$TaskActivitiesReport r0;
        java.lang.Object r1;
        com.android.server.wm.ActivityRecord $r2;

        r0 := @this: com.android.server.wm.Task$TaskActivitiesReport;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.android.server.wm.ActivityRecord) r1;

        virtualinvoke r0.<com.android.server.wm.Task$TaskActivitiesReport: void accept(com.android.server.wm.ActivityRecord)>($r2);

        return;
    }

    void reset()
    {
        com.android.server.wm.Task$TaskActivitiesReport r0;

        r0 := @this: com.android.server.wm.Task$TaskActivitiesReport;

        r0.<com.android.server.wm.Task$TaskActivitiesReport: int numActivities> = 0;

        r0.<com.android.server.wm.Task$TaskActivitiesReport: int numRunning> = 0;

        r0.<com.android.server.wm.Task$TaskActivitiesReport: com.android.server.wm.ActivityRecord base> = null;

        r0.<com.android.server.wm.Task$TaskActivitiesReport: com.android.server.wm.ActivityRecord top> = null;

        return;
    }
}
