class com.android.server.wm.TaskChangeNotificationController extends java.lang.Object
{
    private static final int LOG_STACK_STATE_MSG;
    private static final int NOTIFY_ACTIVITY_DISMISSING_DOCKED_STACK_MSG;
    private static final int NOTIFY_ACTIVITY_LAUNCH_ON_SECONDARY_DISPLAY_FAILED_MSG;
    private static final int NOTIFY_ACTIVITY_LAUNCH_ON_SECONDARY_DISPLAY_REROUTED_MSG;
    private static final int NOTIFY_ACTIVITY_PINNED_LISTENERS_MSG;
    private static final int NOTIFY_ACTIVITY_REQUESTED_ORIENTATION_CHANGED_LISTENERS;
    private static final int NOTIFY_ACTIVITY_RESTART_ATTEMPT_LISTENERS_MSG;
    private static final int NOTIFY_ACTIVITY_ROTATED_MSG;
    private static final int NOTIFY_ACTIVITY_UNPINNED_LISTENERS_MSG;
    private static final int NOTIFY_BACK_PRESSED_ON_TASK_ROOT;
    private static final int NOTIFY_FORCED_RESIZABLE_MSG;
    private static final int NOTIFY_SINGLE_TASK_DISPLAY_DRAWN;
    private static final int NOTIFY_SINGLE_TASK_DISPLAY_EMPTY;
    private static final int NOTIFY_SIZE_COMPAT_MODE_ACTIVITY_CHANGED_MSG;
    private static final int NOTIFY_TASK_ADDED_LISTENERS_MSG;
    private static final int NOTIFY_TASK_DESCRIPTION_CHANGED_LISTENERS_MSG;
    private static final int NOTIFY_TASK_DISPLAY_CHANGED_LISTENERS_MSG;
    private static final int NOTIFY_TASK_FOCUS_CHANGED_MSG;
    private static final int NOTIFY_TASK_LIST_FROZEN_UNFROZEN_MSG;
    private static final int NOTIFY_TASK_LIST_UPDATED_LISTENERS_MSG;
    private static final int NOTIFY_TASK_MOVED_TO_FRONT_LISTENERS_MSG;
    private static final int NOTIFY_TASK_PROFILE_LOCKED_LISTENERS_MSG;
    private static final int NOTIFY_TASK_REMOVAL_STARTED_LISTENERS;
    private static final int NOTIFY_TASK_REMOVED_LISTENERS_MSG;
    private static final int NOTIFY_TASK_REQUESTED_ORIENTATION_CHANGED_MSG;
    private static final int NOTIFY_TASK_SNAPSHOT_CHANGED_LISTENERS_MSG;
    private static final int NOTIFY_TASK_STACK_CHANGE_LISTENERS_DELAY;
    private static final int NOTIFY_TASK_STACK_CHANGE_LISTENERS_MSG;
    private final android.os.Handler mHandler;
    private final java.util.ArrayList mLocalTaskStackListeners;
    private final com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyActivityDismissingDockedStack;
    private final com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyActivityForcedResizable;
    private final com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyActivityLaunchOnSecondaryDisplayFailed;
    private final com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyActivityLaunchOnSecondaryDisplayRerouted;
    private final com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyActivityPinned;
    private final com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyActivityRequestedOrientationChanged;
    private final com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyActivityRestartAttempt;
    private final com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyActivityUnpinned;
    private final com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyBackPressedOnTaskRoot;
    private final com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyOnActivityRotation;
    private final com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifySingleTaskDisplayDrawn;
    private final com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifySingleTaskDisplayEmpty;
    private final com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskCreated;
    private final com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskDescriptionChanged;
    private final com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskDisplayChanged;
    private final com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskFocusChanged;
    private final com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskListFrozen;
    private final com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskListUpdated;
    private final com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskMovedToFront;
    private final com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskProfileLocked;
    private final com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskRemovalStarted;
    private final com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskRemoved;
    private final com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskRequestedOrientationChanged;
    private final com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskSnapshotChanged;
    private final com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskStackChanged;
    private final com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mOnSizeCompatModeActivityChanged;
    private final android.os.RemoteCallbackList mRemoteTaskStackListeners;
    private final java.lang.Object mServiceLock;
    private final com.android.server.wm.ActivityStackSupervisor mStackSupervisor;

    public void <init>(java.lang.Object, com.android.server.wm.ActivityStackSupervisor, android.os.Handler)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        java.lang.Object r1;
        com.android.server.wm.ActivityStackSupervisor r2;
        android.os.Handler r3;
        com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$SAbrujQOZNUflKs1FAg2mBnjx3A' $r6;
        com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$1ziXgnyLi0gQjqMGJAbSzs0-dmE' $r7;
        com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$kss8MGli3T9b_Y-QDzR2cB843y8' $r8;
        com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$ZLPZtiEvD_F4WUgH7BD4KPpdAWM' $r9;
        com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$Ge3jFevRwpndz6qRSLDXODq2VjE' $r10;
        com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$SByuGj5tpcCpjTH9lf5zHHv2gNM' $r11;
        com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$MS67FdGix7tWO0Od9imcaKVXL7I' $r12;
        com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$NLoKy9SbVr1EJpEjznsKi7yAlpg' $r13;
        com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$ncM_yje7-m7HuiJvorBIH_C8Ou4' $r14;
        com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$qONfw3ssOxjb_iMuO2oMzCbXfrg' $r15;
        com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$9ngbiJ2r3x2ASHwN59tUFO2-2BQ' $r16;
        com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$M2NSB3SSVJR2Tu4vihNfsIL31s4' $r17;
        com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$k0FXXC-HcWJhmtm6-Kruo6nGeXI' $r18;
        com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$byMDuIFUN4cQ1lT9jVjMwLhaLDw' $r19;
        com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$0m_-qN9QkcgkoWun2Biw8le4l1Y' $r20;
        com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$yaW9HlZsz3L55CTQ4b7y33IGo94' $r21;
        com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$wuBjs4dj7gB_MI4dIdt2gV2Osus' $r22;
        com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$Dvvt1gNNfFRVEKlSCdL_9VnilUE' $r23;
        com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$UexNbaqPy0mc3VxTw2coCctHho8' $r24;
        com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$sS6OHbZtuWHjzmkm8bleSWZWFqA' $r25;
        com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$cFUeUwnRjuOQKcg2c4PnDS0ImTw' $r26;
        com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$sdBP_U6BS8zRbtZp-gZ0BmFW8bs' $r27;
        com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$VuvWLQaLHifVGvurVv75MXCukH0' $r28;
        com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$Kz-Od_gLhLbMtGka4r78W0Gmzgo' $r29;
        com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$PSFFTNiSSqx5-emiM-hoY62N04M' $r30;
        com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$fHOaxOU9vkp_xgwOlM5lZFj3Fi0' $r31;
        android.os.Looper $r33;
        android.os.RemoteCallbackList r34;
        java.util.ArrayList r35;
        com.android.server.wm.TaskChangeNotificationController$MainHandler r36;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer r37, r38, r39, r40, r41, r42, r43, r44, r45, r46, r47, r48, r49, r50, r51, r52, r53, r54, r55, r56, r57, r58, r59, r60, r61, r62;

        r0 := @this: com.android.server.wm.TaskChangeNotificationController;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: com.android.server.wm.ActivityStackSupervisor;

        r3 := @parameter2: android.os.Handler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r34 = new android.os.RemoteCallbackList;

        specialinvoke r34.<android.os.RemoteCallbackList: void <init>()>();

        r0.<com.android.server.wm.TaskChangeNotificationController: android.os.RemoteCallbackList mRemoteTaskStackListeners> = r34;

        r35 = new java.util.ArrayList;

        specialinvoke r35.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.wm.TaskChangeNotificationController: java.util.ArrayList mLocalTaskStackListeners> = r35;

        $r6 = <com.android.server.wm._$$Lambda$TaskChangeNotificationController$SAbrujQOZNUflKs1FAg2mBnjx3A: com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$SAbrujQOZNUflKs1FAg2mBnjx3A' INSTANCE>;

        r37 = (com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer) $r6;

        r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskStackChanged> = r37;

        $r7 = <com.android.server.wm._$$Lambda$TaskChangeNotificationController$1ziXgnyLi0gQjqMGJAbSzs0_dmE: com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$1ziXgnyLi0gQjqMGJAbSzs0-dmE' INSTANCE>;

        r38 = (com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer) $r7;

        r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskCreated> = r38;

        $r8 = <com.android.server.wm._$$Lambda$TaskChangeNotificationController$kss8MGli3T9b_Y_QDzR2cB843y8: com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$kss8MGli3T9b_Y-QDzR2cB843y8' INSTANCE>;

        r39 = (com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer) $r8;

        r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskRemoved> = r39;

        $r9 = <com.android.server.wm._$$Lambda$TaskChangeNotificationController$ZLPZtiEvD_F4WUgH7BD4KPpdAWM: com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$ZLPZtiEvD_F4WUgH7BD4KPpdAWM' INSTANCE>;

        r40 = (com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer) $r9;

        r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskMovedToFront> = r40;

        $r10 = <com.android.server.wm._$$Lambda$TaskChangeNotificationController$Ge3jFevRwpndz6qRSLDXODq2VjE: com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$Ge3jFevRwpndz6qRSLDXODq2VjE' INSTANCE>;

        r41 = (com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer) $r10;

        r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskDescriptionChanged> = r41;

        $r11 = <com.android.server.wm._$$Lambda$TaskChangeNotificationController$SByuGj5tpcCpjTH9lf5zHHv2gNM: com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$SByuGj5tpcCpjTH9lf5zHHv2gNM' INSTANCE>;

        r42 = (com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer) $r11;

        r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyBackPressedOnTaskRoot> = r42;

        $r12 = <com.android.server.wm._$$Lambda$TaskChangeNotificationController$MS67FdGix7tWO0Od9imcaKVXL7I: com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$MS67FdGix7tWO0Od9imcaKVXL7I' INSTANCE>;

        r43 = (com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer) $r12;

        r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyActivityRequestedOrientationChanged> = r43;

        $r13 = <com.android.server.wm._$$Lambda$TaskChangeNotificationController$NLoKy9SbVr1EJpEjznsKi7yAlpg: com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$NLoKy9SbVr1EJpEjznsKi7yAlpg' INSTANCE>;

        r44 = (com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer) $r13;

        r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskRemovalStarted> = r44;

        $r14 = <com.android.server.wm._$$Lambda$TaskChangeNotificationController$ncM_yje7_m7HuiJvorBIH_C8Ou4: com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$ncM_yje7-m7HuiJvorBIH_C8Ou4' INSTANCE>;

        r45 = (com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer) $r14;

        r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyActivityPinned> = r45;

        $r15 = <com.android.server.wm._$$Lambda$TaskChangeNotificationController$qONfw3ssOxjb_iMuO2oMzCbXfrg: com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$qONfw3ssOxjb_iMuO2oMzCbXfrg' INSTANCE>;

        r46 = (com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer) $r15;

        r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyActivityUnpinned> = r46;

        $r16 = <com.android.server.wm._$$Lambda$TaskChangeNotificationController$9ngbiJ2r3x2ASHwN59tUFO2_2BQ: com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$9ngbiJ2r3x2ASHwN59tUFO2-2BQ' INSTANCE>;

        r47 = (com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer) $r16;

        r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyActivityRestartAttempt> = r47;

        $r17 = <com.android.server.wm._$$Lambda$TaskChangeNotificationController$M2NSB3SSVJR2Tu4vihNfsIL31s4: com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$M2NSB3SSVJR2Tu4vihNfsIL31s4' INSTANCE>;

        r48 = (com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer) $r17;

        r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyActivityForcedResizable> = r48;

        $r18 = <com.android.server.wm._$$Lambda$TaskChangeNotificationController$k0FXXC_HcWJhmtm6_Kruo6nGeXI: com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$k0FXXC-HcWJhmtm6-Kruo6nGeXI' INSTANCE>;

        r49 = (com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer) $r18;

        r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyActivityDismissingDockedStack> = r49;

        $r19 = <com.android.server.wm._$$Lambda$TaskChangeNotificationController$byMDuIFUN4cQ1lT9jVjMwLhaLDw: com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$byMDuIFUN4cQ1lT9jVjMwLhaLDw' INSTANCE>;

        r50 = (com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer) $r19;

        r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyActivityLaunchOnSecondaryDisplayFailed> = r50;

        $r20 = <com.android.server.wm._$$Lambda$TaskChangeNotificationController$0m__qN9QkcgkoWun2Biw8le4l1Y: com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$0m_-qN9QkcgkoWun2Biw8le4l1Y' INSTANCE>;

        r51 = (com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer) $r20;

        r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyActivityLaunchOnSecondaryDisplayRerouted> = r51;

        $r21 = <com.android.server.wm._$$Lambda$TaskChangeNotificationController$yaW9HlZsz3L55CTQ4b7y33IGo94: com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$yaW9HlZsz3L55CTQ4b7y33IGo94' INSTANCE>;

        r52 = (com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer) $r21;

        r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskProfileLocked> = r52;

        $r22 = <com.android.server.wm._$$Lambda$TaskChangeNotificationController$wuBjs4dj7gB_MI4dIdt2gV2Osus: com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$wuBjs4dj7gB_MI4dIdt2gV2Osus' INSTANCE>;

        r53 = (com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer) $r22;

        r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskSnapshotChanged> = r53;

        $r23 = <com.android.server.wm._$$Lambda$TaskChangeNotificationController$Dvvt1gNNfFRVEKlSCdL_9VnilUE: com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$Dvvt1gNNfFRVEKlSCdL_9VnilUE' INSTANCE>;

        r54 = (com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer) $r23;

        r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mOnSizeCompatModeActivityChanged> = r54;

        $r24 = <com.android.server.wm._$$Lambda$TaskChangeNotificationController$UexNbaqPy0mc3VxTw2coCctHho8: com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$UexNbaqPy0mc3VxTw2coCctHho8' INSTANCE>;

        r55 = (com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer) $r24;

        r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifySingleTaskDisplayDrawn> = r55;

        $r25 = <com.android.server.wm._$$Lambda$TaskChangeNotificationController$sS6OHbZtuWHjzmkm8bleSWZWFqA: com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$sS6OHbZtuWHjzmkm8bleSWZWFqA' INSTANCE>;

        r56 = (com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer) $r25;

        r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifySingleTaskDisplayEmpty> = r56;

        $r26 = <com.android.server.wm._$$Lambda$TaskChangeNotificationController$cFUeUwnRjuOQKcg2c4PnDS0ImTw: com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$cFUeUwnRjuOQKcg2c4PnDS0ImTw' INSTANCE>;

        r57 = (com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer) $r26;

        r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskDisplayChanged> = r57;

        $r27 = <com.android.server.wm._$$Lambda$TaskChangeNotificationController$sdBP_U6BS8zRbtZp_gZ0BmFW8bs: com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$sdBP_U6BS8zRbtZp-gZ0BmFW8bs' INSTANCE>;

        r58 = (com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer) $r27;

        r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskListUpdated> = r58;

        $r28 = <com.android.server.wm._$$Lambda$TaskChangeNotificationController$VuvWLQaLHifVGvurVv75MXCukH0: com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$VuvWLQaLHifVGvurVv75MXCukH0' INSTANCE>;

        r59 = (com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer) $r28;

        r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskListFrozen> = r59;

        $r29 = <com.android.server.wm._$$Lambda$TaskChangeNotificationController$Kz_Od_gLhLbMtGka4r78W0Gmzgo: com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$Kz-Od_gLhLbMtGka4r78W0Gmzgo' INSTANCE>;

        r60 = (com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer) $r29;

        r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskFocusChanged> = r60;

        $r30 = <com.android.server.wm._$$Lambda$TaskChangeNotificationController$PSFFTNiSSqx5_emiM_hoY62N04M: com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$PSFFTNiSSqx5-emiM-hoY62N04M' INSTANCE>;

        r61 = (com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer) $r30;

        r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskRequestedOrientationChanged> = r61;

        $r31 = <com.android.server.wm._$$Lambda$TaskChangeNotificationController$fHOaxOU9vkp_xgwOlM5lZFj3Fi0: com.android.server.wm.'-$$Lambda$TaskChangeNotificationController$fHOaxOU9vkp_xgwOlM5lZFj3Fi0' INSTANCE>;

        r62 = (com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer) $r31;

        r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyOnActivityRotation> = r62;

        r0.<com.android.server.wm.TaskChangeNotificationController: java.lang.Object mServiceLock> = r1;

        r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.ActivityStackSupervisor mStackSupervisor> = r2;

        r36 = new com.android.server.wm.TaskChangeNotificationController$MainHandler;

        $r33 = virtualinvoke r3.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke r36.<com.android.server.wm.TaskChangeNotificationController$MainHandler: void <init>(com.android.server.wm.TaskChangeNotificationController,android.os.Looper)>(r0, $r33);

        r0.<com.android.server.wm.TaskChangeNotificationController: android.os.Handler mHandler> = r36;

        return;
    }

    static java.lang.Object access$000(com.android.server.wm.TaskChangeNotificationController)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.wm.TaskChangeNotificationController;

        $r1 = r0.<com.android.server.wm.TaskChangeNotificationController: java.lang.Object mServiceLock>;

        return $r1;
    }

    static com.android.server.wm.ActivityStackSupervisor access$100(com.android.server.wm.TaskChangeNotificationController)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        com.android.server.wm.ActivityStackSupervisor $r1;

        r0 := @parameter0: com.android.server.wm.TaskChangeNotificationController;

        $r1 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.ActivityStackSupervisor mStackSupervisor>;

        return $r1;
    }

    static com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer access$1000(com.android.server.wm.TaskChangeNotificationController)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r1;

        r0 := @parameter0: com.android.server.wm.TaskChangeNotificationController;

        $r1 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyActivityPinned>;

        return $r1;
    }

    static com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer access$1100(com.android.server.wm.TaskChangeNotificationController)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r1;

        r0 := @parameter0: com.android.server.wm.TaskChangeNotificationController;

        $r1 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyActivityUnpinned>;

        return $r1;
    }

    static com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer access$1200(com.android.server.wm.TaskChangeNotificationController)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r1;

        r0 := @parameter0: com.android.server.wm.TaskChangeNotificationController;

        $r1 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyActivityRestartAttempt>;

        return $r1;
    }

    static com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer access$1300(com.android.server.wm.TaskChangeNotificationController)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r1;

        r0 := @parameter0: com.android.server.wm.TaskChangeNotificationController;

        $r1 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyActivityForcedResizable>;

        return $r1;
    }

    static com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer access$1400(com.android.server.wm.TaskChangeNotificationController)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r1;

        r0 := @parameter0: com.android.server.wm.TaskChangeNotificationController;

        $r1 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyActivityDismissingDockedStack>;

        return $r1;
    }

    static com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer access$1500(com.android.server.wm.TaskChangeNotificationController)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r1;

        r0 := @parameter0: com.android.server.wm.TaskChangeNotificationController;

        $r1 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyActivityLaunchOnSecondaryDisplayFailed>;

        return $r1;
    }

    static com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer access$1600(com.android.server.wm.TaskChangeNotificationController)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r1;

        r0 := @parameter0: com.android.server.wm.TaskChangeNotificationController;

        $r1 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyActivityLaunchOnSecondaryDisplayRerouted>;

        return $r1;
    }

    static com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer access$1700(com.android.server.wm.TaskChangeNotificationController)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r1;

        r0 := @parameter0: com.android.server.wm.TaskChangeNotificationController;

        $r1 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskProfileLocked>;

        return $r1;
    }

    static com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer access$1800(com.android.server.wm.TaskChangeNotificationController)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r1;

        r0 := @parameter0: com.android.server.wm.TaskChangeNotificationController;

        $r1 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskSnapshotChanged>;

        return $r1;
    }

    static com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer access$1900(com.android.server.wm.TaskChangeNotificationController)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r1;

        r0 := @parameter0: com.android.server.wm.TaskChangeNotificationController;

        $r1 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mOnSizeCompatModeActivityChanged>;

        return $r1;
    }

    static com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer access$200(com.android.server.wm.TaskChangeNotificationController)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r1;

        r0 := @parameter0: com.android.server.wm.TaskChangeNotificationController;

        $r1 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskStackChanged>;

        return $r1;
    }

    static com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer access$2000(com.android.server.wm.TaskChangeNotificationController)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r1;

        r0 := @parameter0: com.android.server.wm.TaskChangeNotificationController;

        $r1 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyBackPressedOnTaskRoot>;

        return $r1;
    }

    static com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer access$2100(com.android.server.wm.TaskChangeNotificationController)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r1;

        r0 := @parameter0: com.android.server.wm.TaskChangeNotificationController;

        $r1 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifySingleTaskDisplayDrawn>;

        return $r1;
    }

    static com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer access$2200(com.android.server.wm.TaskChangeNotificationController)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r1;

        r0 := @parameter0: com.android.server.wm.TaskChangeNotificationController;

        $r1 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifySingleTaskDisplayEmpty>;

        return $r1;
    }

    static com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer access$2300(com.android.server.wm.TaskChangeNotificationController)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r1;

        r0 := @parameter0: com.android.server.wm.TaskChangeNotificationController;

        $r1 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskDisplayChanged>;

        return $r1;
    }

    static com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer access$2400(com.android.server.wm.TaskChangeNotificationController)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r1;

        r0 := @parameter0: com.android.server.wm.TaskChangeNotificationController;

        $r1 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskListUpdated>;

        return $r1;
    }

    static com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer access$2500(com.android.server.wm.TaskChangeNotificationController)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r1;

        r0 := @parameter0: com.android.server.wm.TaskChangeNotificationController;

        $r1 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskListFrozen>;

        return $r1;
    }

    static com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer access$2600(com.android.server.wm.TaskChangeNotificationController)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r1;

        r0 := @parameter0: com.android.server.wm.TaskChangeNotificationController;

        $r1 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskFocusChanged>;

        return $r1;
    }

    static com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer access$2700(com.android.server.wm.TaskChangeNotificationController)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r1;

        r0 := @parameter0: com.android.server.wm.TaskChangeNotificationController;

        $r1 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskRequestedOrientationChanged>;

        return $r1;
    }

    static com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer access$2800(com.android.server.wm.TaskChangeNotificationController)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r1;

        r0 := @parameter0: com.android.server.wm.TaskChangeNotificationController;

        $r1 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyOnActivityRotation>;

        return $r1;
    }

    static void access$300(com.android.server.wm.TaskChangeNotificationController, com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer, android.os.Message)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer r1;
        android.os.Message r2;

        r0 := @parameter0: com.android.server.wm.TaskChangeNotificationController;

        r1 := @parameter1: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer;

        r2 := @parameter2: android.os.Message;

        specialinvoke r0.<com.android.server.wm.TaskChangeNotificationController: void forAllRemoteListeners(com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer,android.os.Message)>(r1, r2);

        return;
    }

    static com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer access$400(com.android.server.wm.TaskChangeNotificationController)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r1;

        r0 := @parameter0: com.android.server.wm.TaskChangeNotificationController;

        $r1 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskCreated>;

        return $r1;
    }

    static com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer access$500(com.android.server.wm.TaskChangeNotificationController)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r1;

        r0 := @parameter0: com.android.server.wm.TaskChangeNotificationController;

        $r1 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskRemoved>;

        return $r1;
    }

    static com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer access$600(com.android.server.wm.TaskChangeNotificationController)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r1;

        r0 := @parameter0: com.android.server.wm.TaskChangeNotificationController;

        $r1 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskMovedToFront>;

        return $r1;
    }

    static com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer access$700(com.android.server.wm.TaskChangeNotificationController)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r1;

        r0 := @parameter0: com.android.server.wm.TaskChangeNotificationController;

        $r1 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskDescriptionChanged>;

        return $r1;
    }

    static com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer access$800(com.android.server.wm.TaskChangeNotificationController)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r1;

        r0 := @parameter0: com.android.server.wm.TaskChangeNotificationController;

        $r1 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyActivityRequestedOrientationChanged>;

        return $r1;
    }

    static com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer access$900(com.android.server.wm.TaskChangeNotificationController)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r1;

        r0 := @parameter0: com.android.server.wm.TaskChangeNotificationController;

        $r1 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskRemovalStarted>;

        return $r1;
    }

    private void forAllLocalListeners(com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer, android.os.Message)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        android.os.Message r1;
        java.lang.Object r2, $r6;
        java.util.ArrayList $r4, $r5;
        android.app.ITaskStackListener $r7;
        android.os.RemoteException $r8;
        java.lang.Throwable $r9;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer r10;
        int i0, i1;

        r0 := @this: com.android.server.wm.TaskChangeNotificationController;

        r10 := @parameter0: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer;

        r1 := @parameter1: android.os.Message;

        r2 = r0.<com.android.server.wm.TaskChangeNotificationController: java.lang.Object mServiceLock>;

        entermonitor r2;

     label01:
        $r4 = r0.<com.android.server.wm.TaskChangeNotificationController: java.util.ArrayList mLocalTaskStackListeners>;

        i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

     label02:
        i1 = i0 + -1;

     label03:
        if i1 < 0 goto label08;

     label04:
        $r5 = r0.<com.android.server.wm.TaskChangeNotificationController: java.util.ArrayList mLocalTaskStackListeners>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r7 = (android.app.ITaskStackListener) $r6;

        interfaceinvoke r10.<com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer: void accept(android.app.ITaskStackListener,android.os.Message)>($r7, r1);

     label05:
        goto label07;

     label06:
        $r8 := @caughtexception;

     label07:
        i1 = i1 + -1;

        goto label03;

     label08:
        exitmonitor r2;

     label09:
        return;

     label10:
        $r9 := @caughtexception;

     label11:
        exitmonitor r2;

     label12:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    private void forAllRemoteListeners(com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer, android.os.Message)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        android.os.Message r1;
        java.lang.Object r2;
        android.os.RemoteCallbackList $r4, $r5, $r6;
        android.os.IInterface $r7;
        android.app.ITaskStackListener $r8;
        android.os.RemoteException $r9;
        java.lang.Throwable $r10;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer r11;
        int i0, i1;

        r0 := @this: com.android.server.wm.TaskChangeNotificationController;

        r11 := @parameter0: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer;

        r1 := @parameter1: android.os.Message;

        r2 = r0.<com.android.server.wm.TaskChangeNotificationController: java.lang.Object mServiceLock>;

        entermonitor r2;

     label01:
        $r4 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.RemoteCallbackList mRemoteTaskStackListeners>;

        i0 = virtualinvoke $r4.<android.os.RemoteCallbackList: int beginBroadcast()>();

     label02:
        i1 = i0 + -1;

     label03:
        if i1 < 0 goto label08;

     label04:
        $r6 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.RemoteCallbackList mRemoteTaskStackListeners>;

        $r7 = virtualinvoke $r6.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i1);

        $r8 = (android.app.ITaskStackListener) $r7;

        interfaceinvoke r11.<com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer: void accept(android.app.ITaskStackListener,android.os.Message)>($r8, r1);

     label05:
        goto label07;

     label06:
        $r9 := @caughtexception;

     label07:
        i1 = i1 + -1;

        goto label03;

     label08:
        $r5 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.RemoteCallbackList mRemoteTaskStackListeners>;

        virtualinvoke $r5.<android.os.RemoteCallbackList: void finishBroadcast()>();

        exitmonitor r2;

     label09:
        return;

     label10:
        $r10 := @caughtexception;

     label11:
        exitmonitor r2;

     label12:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    static void lambda$new$0(android.app.ITaskStackListener, android.os.Message) throws android.os.RemoteException
    {
        android.app.ITaskStackListener r0;
        android.os.Message r1;

        r0 := @parameter0: android.app.ITaskStackListener;

        r1 := @parameter1: android.os.Message;

        interfaceinvoke r0.<android.app.ITaskStackListener: void onTaskStackChanged()>();

        return;
    }

    static void lambda$new$1(android.app.ITaskStackListener, android.os.Message) throws android.os.RemoteException
    {
        android.app.ITaskStackListener r0;
        android.os.Message r1;
        java.lang.Object $r2;
        android.content.ComponentName $r3;
        int $i0;

        r0 := @parameter0: android.app.ITaskStackListener;

        r1 := @parameter1: android.os.Message;

        $i0 = r1.<android.os.Message: int arg1>;

        $r2 = r1.<android.os.Message: java.lang.Object obj>;

        $r3 = (android.content.ComponentName) $r2;

        interfaceinvoke r0.<android.app.ITaskStackListener: void onTaskCreated(int,android.content.ComponentName)>($i0, $r3);

        return;
    }

    static void lambda$new$10(android.app.ITaskStackListener, android.os.Message) throws android.os.RemoteException
    {
        android.app.ITaskStackListener r0;
        android.app.ActivityManager$RunningTaskInfo r1;
        int i0, $i1, $i2;
        java.lang.Object $r2, $r3;
        android.os.Message r4;
        com.android.internal.os.SomeArgs r5;
        boolean z0, z1, z2;

        r0 := @parameter0: android.app.ITaskStackListener;

        r4 := @parameter1: android.os.Message;

        $r2 = r4.<android.os.Message: java.lang.Object obj>;

        r5 = (com.android.internal.os.SomeArgs) $r2;

        $r3 = r5.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r1 = (android.app.ActivityManager$RunningTaskInfo) $r3;

        i0 = r5.<com.android.internal.os.SomeArgs: int argi1>;

        z0 = 1;

        if i0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        $i1 = r5.<com.android.internal.os.SomeArgs: int argi2>;

        if $i1 == 0 goto label3;

        z2 = 1;

        goto label4;

     label3:
        z2 = 0;

     label4:
        $i2 = r5.<com.android.internal.os.SomeArgs: int argi3>;

        if $i2 == 0 goto label5;

        goto label6;

     label5:
        z0 = 0;

     label6:
        interfaceinvoke r0.<android.app.ITaskStackListener: void onActivityRestartAttempt(android.app.ActivityManager$RunningTaskInfo,boolean,boolean,boolean)>(r1, z1, z2, z0);

        return;
    }

    static void lambda$new$11(android.app.ITaskStackListener, android.os.Message) throws android.os.RemoteException
    {
        android.app.ITaskStackListener r0;
        android.os.Message r1;
        java.lang.Object $r2;
        int $i0, $i1;
        java.lang.String $r3;

        r0 := @parameter0: android.app.ITaskStackListener;

        r1 := @parameter1: android.os.Message;

        $r2 = r1.<android.os.Message: java.lang.Object obj>;

        $r3 = (java.lang.String) $r2;

        $i1 = r1.<android.os.Message: int arg1>;

        $i0 = r1.<android.os.Message: int arg2>;

        interfaceinvoke r0.<android.app.ITaskStackListener: void onActivityForcedResizable(java.lang.String,int,int)>($r3, $i1, $i0);

        return;
    }

    static void lambda$new$12(android.app.ITaskStackListener, android.os.Message) throws android.os.RemoteException
    {
        android.app.ITaskStackListener r0;
        android.os.Message r1;

        r0 := @parameter0: android.app.ITaskStackListener;

        r1 := @parameter1: android.os.Message;

        interfaceinvoke r0.<android.app.ITaskStackListener: void onActivityDismissingDockedStack()>();

        return;
    }

    static void lambda$new$13(android.app.ITaskStackListener, android.os.Message) throws android.os.RemoteException
    {
        android.app.ITaskStackListener r0;
        android.os.Message r1;
        java.lang.Object $r2;
        int $i0;
        android.app.ActivityManager$RunningTaskInfo $r3;

        r0 := @parameter0: android.app.ITaskStackListener;

        r1 := @parameter1: android.os.Message;

        $r2 = r1.<android.os.Message: java.lang.Object obj>;

        $r3 = (android.app.ActivityManager$RunningTaskInfo) $r2;

        $i0 = r1.<android.os.Message: int arg1>;

        interfaceinvoke r0.<android.app.ITaskStackListener: void onActivityLaunchOnSecondaryDisplayFailed(android.app.ActivityManager$RunningTaskInfo,int)>($r3, $i0);

        return;
    }

    static void lambda$new$14(android.app.ITaskStackListener, android.os.Message) throws android.os.RemoteException
    {
        android.app.ITaskStackListener r0;
        android.os.Message r1;
        java.lang.Object $r2;
        int $i0;
        android.app.ActivityManager$RunningTaskInfo $r3;

        r0 := @parameter0: android.app.ITaskStackListener;

        r1 := @parameter1: android.os.Message;

        $r2 = r1.<android.os.Message: java.lang.Object obj>;

        $r3 = (android.app.ActivityManager$RunningTaskInfo) $r2;

        $i0 = r1.<android.os.Message: int arg1>;

        interfaceinvoke r0.<android.app.ITaskStackListener: void onActivityLaunchOnSecondaryDisplayRerouted(android.app.ActivityManager$RunningTaskInfo,int)>($r3, $i0);

        return;
    }

    static void lambda$new$15(android.app.ITaskStackListener, android.os.Message) throws android.os.RemoteException
    {
        android.app.ITaskStackListener r0;
        android.os.Message r1;
        int $i0, $i1;

        r0 := @parameter0: android.app.ITaskStackListener;

        r1 := @parameter1: android.os.Message;

        $i1 = r1.<android.os.Message: int arg1>;

        $i0 = r1.<android.os.Message: int arg2>;

        interfaceinvoke r0.<android.app.ITaskStackListener: void onTaskProfileLocked(int,int)>($i1, $i0);

        return;
    }

    static void lambda$new$16(android.app.ITaskStackListener, android.os.Message) throws android.os.RemoteException
    {
        android.app.ITaskStackListener r0;
        android.os.Message r1;
        java.lang.Object $r2;
        android.app.ActivityManager$TaskSnapshot $r3;
        int $i0;

        r0 := @parameter0: android.app.ITaskStackListener;

        r1 := @parameter1: android.os.Message;

        $i0 = r1.<android.os.Message: int arg1>;

        $r2 = r1.<android.os.Message: java.lang.Object obj>;

        $r3 = (android.app.ActivityManager$TaskSnapshot) $r2;

        interfaceinvoke r0.<android.app.ITaskStackListener: void onTaskSnapshotChanged(int,android.app.ActivityManager$TaskSnapshot)>($i0, $r3);

        return;
    }

    static void lambda$new$17(android.app.ITaskStackListener, android.os.Message) throws android.os.RemoteException
    {
        android.app.ITaskStackListener r0;
        android.os.Message r1;
        java.lang.Object $r2;
        android.os.IBinder $r3;
        int $i0;

        r0 := @parameter0: android.app.ITaskStackListener;

        r1 := @parameter1: android.os.Message;

        $i0 = r1.<android.os.Message: int arg1>;

        $r2 = r1.<android.os.Message: java.lang.Object obj>;

        $r3 = (android.os.IBinder) $r2;

        interfaceinvoke r0.<android.app.ITaskStackListener: void onSizeCompatModeActivityChanged(int,android.os.IBinder)>($i0, $r3);

        return;
    }

    static void lambda$new$18(android.app.ITaskStackListener, android.os.Message) throws android.os.RemoteException
    {
        android.app.ITaskStackListener r0;
        android.os.Message r1;
        int $i0;

        r0 := @parameter0: android.app.ITaskStackListener;

        r1 := @parameter1: android.os.Message;

        $i0 = r1.<android.os.Message: int arg1>;

        interfaceinvoke r0.<android.app.ITaskStackListener: void onSingleTaskDisplayDrawn(int)>($i0);

        return;
    }

    static void lambda$new$19(android.app.ITaskStackListener, android.os.Message) throws android.os.RemoteException
    {
        android.app.ITaskStackListener r0;
        android.os.Message r1;
        int $i0;

        r0 := @parameter0: android.app.ITaskStackListener;

        r1 := @parameter1: android.os.Message;

        $i0 = r1.<android.os.Message: int arg1>;

        interfaceinvoke r0.<android.app.ITaskStackListener: void onSingleTaskDisplayEmpty(int)>($i0);

        return;
    }

    static void lambda$new$2(android.app.ITaskStackListener, android.os.Message) throws android.os.RemoteException
    {
        android.app.ITaskStackListener r0;
        android.os.Message r1;
        int $i0;

        r0 := @parameter0: android.app.ITaskStackListener;

        r1 := @parameter1: android.os.Message;

        $i0 = r1.<android.os.Message: int arg1>;

        interfaceinvoke r0.<android.app.ITaskStackListener: void onTaskRemoved(int)>($i0);

        return;
    }

    static void lambda$new$20(android.app.ITaskStackListener, android.os.Message) throws android.os.RemoteException
    {
        android.app.ITaskStackListener r0;
        android.os.Message r1;
        int $i0, $i1;

        r0 := @parameter0: android.app.ITaskStackListener;

        r1 := @parameter1: android.os.Message;

        $i1 = r1.<android.os.Message: int arg1>;

        $i0 = r1.<android.os.Message: int arg2>;

        interfaceinvoke r0.<android.app.ITaskStackListener: void onTaskDisplayChanged(int,int)>($i1, $i0);

        return;
    }

    static void lambda$new$21(android.app.ITaskStackListener, android.os.Message) throws android.os.RemoteException
    {
        android.app.ITaskStackListener r0;
        android.os.Message r1;

        r0 := @parameter0: android.app.ITaskStackListener;

        r1 := @parameter1: android.os.Message;

        interfaceinvoke r0.<android.app.ITaskStackListener: void onRecentTaskListUpdated()>();

        return;
    }

    static void lambda$new$22(android.app.ITaskStackListener, android.os.Message) throws android.os.RemoteException
    {
        android.app.ITaskStackListener r0;
        android.os.Message r1;
        int $i0;
        boolean z0;

        r0 := @parameter0: android.app.ITaskStackListener;

        r1 := @parameter1: android.os.Message;

        $i0 = r1.<android.os.Message: int arg1>;

        if $i0 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        interfaceinvoke r0.<android.app.ITaskStackListener: void onRecentTaskListFrozenChanged(boolean)>(z0);

        return;
    }

    static void lambda$new$23(android.app.ITaskStackListener, android.os.Message) throws android.os.RemoteException
    {
        android.app.ITaskStackListener r0;
        android.os.Message r1;
        int i0, $i1;
        boolean z0;

        r0 := @parameter0: android.app.ITaskStackListener;

        r1 := @parameter1: android.os.Message;

        i0 = r1.<android.os.Message: int arg1>;

        $i1 = r1.<android.os.Message: int arg2>;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        interfaceinvoke r0.<android.app.ITaskStackListener: void onTaskFocusChanged(int,boolean)>(i0, z0);

        return;
    }

    static void lambda$new$24(android.app.ITaskStackListener, android.os.Message) throws android.os.RemoteException
    {
        android.app.ITaskStackListener r0;
        android.os.Message r1;
        int $i0, $i1;

        r0 := @parameter0: android.app.ITaskStackListener;

        r1 := @parameter1: android.os.Message;

        $i1 = r1.<android.os.Message: int arg1>;

        $i0 = r1.<android.os.Message: int arg2>;

        interfaceinvoke r0.<android.app.ITaskStackListener: void onTaskRequestedOrientationChanged(int,int)>($i1, $i0);

        return;
    }

    static void lambda$new$25(android.app.ITaskStackListener, android.os.Message) throws android.os.RemoteException
    {
        android.app.ITaskStackListener r0;
        android.os.Message r1;
        int $i0;

        r0 := @parameter0: android.app.ITaskStackListener;

        r1 := @parameter1: android.os.Message;

        $i0 = r1.<android.os.Message: int arg1>;

        interfaceinvoke r0.<android.app.ITaskStackListener: void onActivityRotation(int)>($i0);

        return;
    }

    static void lambda$new$3(android.app.ITaskStackListener, android.os.Message) throws android.os.RemoteException
    {
        android.app.ITaskStackListener r0;
        android.os.Message r1;
        java.lang.Object $r2;
        android.app.ActivityManager$RunningTaskInfo $r3;

        r0 := @parameter0: android.app.ITaskStackListener;

        r1 := @parameter1: android.os.Message;

        $r2 = r1.<android.os.Message: java.lang.Object obj>;

        $r3 = (android.app.ActivityManager$RunningTaskInfo) $r2;

        interfaceinvoke r0.<android.app.ITaskStackListener: void onTaskMovedToFront(android.app.ActivityManager$RunningTaskInfo)>($r3);

        return;
    }

    static void lambda$new$4(android.app.ITaskStackListener, android.os.Message) throws android.os.RemoteException
    {
        android.app.ITaskStackListener r0;
        android.os.Message r1;
        java.lang.Object $r2;
        android.app.ActivityManager$RunningTaskInfo $r3;

        r0 := @parameter0: android.app.ITaskStackListener;

        r1 := @parameter1: android.os.Message;

        $r2 = r1.<android.os.Message: java.lang.Object obj>;

        $r3 = (android.app.ActivityManager$RunningTaskInfo) $r2;

        interfaceinvoke r0.<android.app.ITaskStackListener: void onTaskDescriptionChanged(android.app.ActivityManager$RunningTaskInfo)>($r3);

        return;
    }

    static void lambda$new$5(android.app.ITaskStackListener, android.os.Message) throws android.os.RemoteException
    {
        android.app.ITaskStackListener r0;
        android.os.Message r1;
        java.lang.Object $r2;
        android.app.ActivityManager$RunningTaskInfo $r3;

        r0 := @parameter0: android.app.ITaskStackListener;

        r1 := @parameter1: android.os.Message;

        $r2 = r1.<android.os.Message: java.lang.Object obj>;

        $r3 = (android.app.ActivityManager$RunningTaskInfo) $r2;

        interfaceinvoke r0.<android.app.ITaskStackListener: void onBackPressedOnTaskRoot(android.app.ActivityManager$RunningTaskInfo)>($r3);

        return;
    }

    static void lambda$new$6(android.app.ITaskStackListener, android.os.Message) throws android.os.RemoteException
    {
        android.app.ITaskStackListener r0;
        android.os.Message r1;
        int $i0, $i1;

        r0 := @parameter0: android.app.ITaskStackListener;

        r1 := @parameter1: android.os.Message;

        $i1 = r1.<android.os.Message: int arg1>;

        $i0 = r1.<android.os.Message: int arg2>;

        interfaceinvoke r0.<android.app.ITaskStackListener: void onActivityRequestedOrientationChanged(int,int)>($i1, $i0);

        return;
    }

    static void lambda$new$7(android.app.ITaskStackListener, android.os.Message) throws android.os.RemoteException
    {
        android.app.ITaskStackListener r0;
        android.os.Message r1;
        java.lang.Object $r2;
        android.app.ActivityManager$RunningTaskInfo $r3;

        r0 := @parameter0: android.app.ITaskStackListener;

        r1 := @parameter1: android.os.Message;

        $r2 = r1.<android.os.Message: java.lang.Object obj>;

        $r3 = (android.app.ActivityManager$RunningTaskInfo) $r2;

        interfaceinvoke r0.<android.app.ITaskStackListener: void onTaskRemovalStarted(android.app.ActivityManager$RunningTaskInfo)>($r3);

        return;
    }

    static void lambda$new$8(android.app.ITaskStackListener, android.os.Message) throws android.os.RemoteException
    {
        android.app.ITaskStackListener r0;
        android.os.Message r1;
        java.lang.Object $r2;
        int $i0, $i1, $i2;
        java.lang.String $r3;

        r0 := @parameter0: android.app.ITaskStackListener;

        r1 := @parameter1: android.os.Message;

        $r2 = r1.<android.os.Message: java.lang.Object obj>;

        $r3 = (java.lang.String) $r2;

        $i2 = r1.<android.os.Message: int sendingUid>;

        $i1 = r1.<android.os.Message: int arg1>;

        $i0 = r1.<android.os.Message: int arg2>;

        interfaceinvoke r0.<android.app.ITaskStackListener: void onActivityPinned(java.lang.String,int,int,int)>($r3, $i2, $i1, $i0);

        return;
    }

    static void lambda$new$9(android.app.ITaskStackListener, android.os.Message) throws android.os.RemoteException
    {
        android.app.ITaskStackListener r0;
        android.os.Message r1;

        r0 := @parameter0: android.app.ITaskStackListener;

        r1 := @parameter1: android.os.Message;

        interfaceinvoke r0.<android.app.ITaskStackListener: void onActivityUnpinned()>();

        return;
    }

    void notifyActivityDismissingDockedStack()
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        android.os.Message r1;
        android.os.Handler $r2, $r3;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r4;

        r0 := @this: com.android.server.wm.TaskChangeNotificationController;

        $r2 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: void removeMessages(int)>(7);

        $r3 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.Handler mHandler>;

        r1 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int)>(7);

        $r4 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyActivityDismissingDockedStack>;

        specialinvoke r0.<com.android.server.wm.TaskChangeNotificationController: void forAllLocalListeners(com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer,android.os.Message)>($r4, r1);

        virtualinvoke r1.<android.os.Message: void sendToTarget()>();

        return;
    }

    void notifyActivityForcedResizable(int, int, java.lang.String)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        int i0, i1;
        android.os.Handler $r1, $r2;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r3;
        java.lang.String r4;
        android.os.Message r5;

        r0 := @this: com.android.server.wm.TaskChangeNotificationController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r4 := @parameter2: java.lang.String;

        $r1 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: void removeMessages(int)>(6);

        $r2 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.Handler mHandler>;

        r5 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(6, i0, i1, r4);

        $r3 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyActivityForcedResizable>;

        specialinvoke r0.<com.android.server.wm.TaskChangeNotificationController: void forAllLocalListeners(com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer,android.os.Message)>($r3, r5);

        virtualinvoke r5.<android.os.Message: void sendToTarget()>();

        return;
    }

    void notifyActivityLaunchOnSecondaryDisplayFailed(android.app.TaskInfo, int)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        int i0;
        android.os.Handler $r1, $r2;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r3;
        android.app.TaskInfo r4;
        android.os.Message r5;

        r0 := @this: com.android.server.wm.TaskChangeNotificationController;

        r4 := @parameter0: android.app.TaskInfo;

        i0 := @parameter1: int;

        $r1 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: void removeMessages(int)>(18);

        $r2 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.Handler mHandler>;

        r5 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(18, i0, 0, r4);

        $r3 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyActivityLaunchOnSecondaryDisplayFailed>;

        specialinvoke r0.<com.android.server.wm.TaskChangeNotificationController: void forAllLocalListeners(com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer,android.os.Message)>($r3, r5);

        virtualinvoke r5.<android.os.Message: void sendToTarget()>();

        return;
    }

    void notifyActivityLaunchOnSecondaryDisplayRerouted(android.app.TaskInfo, int)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        int i0;
        android.os.Handler $r1, $r2;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r3;
        android.app.TaskInfo r4;
        android.os.Message r5;

        r0 := @this: com.android.server.wm.TaskChangeNotificationController;

        r4 := @parameter0: android.app.TaskInfo;

        i0 := @parameter1: int;

        $r1 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: void removeMessages(int)>(19);

        $r2 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.Handler mHandler>;

        r5 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(19, i0, 0, r4);

        $r3 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyActivityLaunchOnSecondaryDisplayRerouted>;

        specialinvoke r0.<com.android.server.wm.TaskChangeNotificationController: void forAllLocalListeners(com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer,android.os.Message)>($r3, r5);

        virtualinvoke r5.<android.os.Message: void sendToTarget()>();

        return;
    }

    void notifyActivityPinned(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        com.android.server.wm.ActivityRecord r1;
        android.os.Message r2;
        android.os.Handler $r3, $r4;
        com.android.server.wm.Task $r5;
        int $i0, $i1, $i2;
        java.lang.String $r6;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r7;

        r0 := @this: com.android.server.wm.TaskChangeNotificationController;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        $r3 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: void removeMessages(int)>(3);

        $r4 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.Handler mHandler>;

        $r5 = virtualinvoke r1.<com.android.server.wm.ActivityRecord: com.android.server.wm.Task getTask()>();

        $i0 = $r5.<com.android.server.wm.Task: int mTaskId>;

        $i1 = virtualinvoke r1.<com.android.server.wm.ActivityRecord: int getRootTaskId()>();

        $r6 = r1.<com.android.server.wm.ActivityRecord: java.lang.String packageName>;

        r2 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(3, $i0, $i1, $r6);

        $i2 = r1.<com.android.server.wm.ActivityRecord: int mUserId>;

        r2.<android.os.Message: int sendingUid> = $i2;

        $r7 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyActivityPinned>;

        specialinvoke r0.<com.android.server.wm.TaskChangeNotificationController: void forAllLocalListeners(com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer,android.os.Message)>($r7, r2);

        virtualinvoke r2.<android.os.Message: void sendToTarget()>();

        return;
    }

    void notifyActivityRequestedOrientationChanged(int, int)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        int i0, i1;
        android.os.Message r1;
        android.os.Handler $r2;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r3;

        r0 := @this: com.android.server.wm.TaskChangeNotificationController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.Handler mHandler>;

        r1 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(12, i0, i1);

        $r3 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyActivityRequestedOrientationChanged>;

        specialinvoke r0.<com.android.server.wm.TaskChangeNotificationController: void forAllLocalListeners(com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer,android.os.Message)>($r3, r1);

        virtualinvoke r1.<android.os.Message: void sendToTarget()>();

        return;
    }

    void notifyActivityRestartAttempt(android.app.ActivityManager$RunningTaskInfo, boolean, boolean, boolean)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        boolean z0, z1, z2;
        com.android.internal.os.SomeArgs r1;
        android.os.Handler $r2, $r3;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r4;
        android.app.ActivityManager$RunningTaskInfo r5;
        android.os.Message r6;
        int i0, i1, i2;

        r0 := @this: com.android.server.wm.TaskChangeNotificationController;

        r5 := @parameter0: android.app.ActivityManager$RunningTaskInfo;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        $r2 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: void removeMessages(int)>(4);

        r1 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r1.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r5;

        i0 = (int) z0;

        r1.<com.android.internal.os.SomeArgs: int argi1> = i0;

        i1 = (int) z1;

        r1.<com.android.internal.os.SomeArgs: int argi2> = i1;

        i2 = (int) z2;

        r1.<com.android.internal.os.SomeArgs: int argi3> = i2;

        $r3 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.Handler mHandler>;

        r6 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(4, r1);

        $r4 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyActivityRestartAttempt>;

        specialinvoke r0.<com.android.server.wm.TaskChangeNotificationController: void forAllLocalListeners(com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer,android.os.Message)>($r4, r6);

        virtualinvoke r6.<android.os.Message: void sendToTarget()>();

        return;
    }

    void notifyActivityUnpinned()
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        android.os.Message r1;
        android.os.Handler $r2, $r3;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r4;

        r0 := @this: com.android.server.wm.TaskChangeNotificationController;

        $r2 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: void removeMessages(int)>(17);

        $r3 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.Handler mHandler>;

        r1 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int)>(17);

        $r4 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyActivityUnpinned>;

        specialinvoke r0.<com.android.server.wm.TaskChangeNotificationController: void forAllLocalListeners(com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer,android.os.Message)>($r4, r1);

        virtualinvoke r1.<android.os.Message: void sendToTarget()>();

        return;
    }

    void notifyBackPressedOnTaskRoot(android.app.TaskInfo)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        android.os.Handler $r1;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r2;
        android.app.TaskInfo r3;
        android.os.Message r4;

        r0 := @this: com.android.server.wm.TaskChangeNotificationController;

        r3 := @parameter0: android.app.TaskInfo;

        $r1 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.Handler mHandler>;

        r4 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(21, r3);

        $r2 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyBackPressedOnTaskRoot>;

        specialinvoke r0.<com.android.server.wm.TaskChangeNotificationController: void forAllLocalListeners(com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer,android.os.Message)>($r2, r4);

        virtualinvoke r4.<android.os.Message: void sendToTarget()>();

        return;
    }

    void notifyOnActivityRotation(int)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        int i0;
        android.os.Message r1;
        android.os.Handler $r2;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r3;

        r0 := @this: com.android.server.wm.TaskChangeNotificationController;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.Handler mHandler>;

        r1 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(29, i0, 0);

        $r3 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyOnActivityRotation>;

        specialinvoke r0.<com.android.server.wm.TaskChangeNotificationController: void forAllLocalListeners(com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer,android.os.Message)>($r3, r1);

        virtualinvoke r1.<android.os.Message: void sendToTarget()>();

        return;
    }

    void notifySingleTaskDisplayDrawn(int)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        int i0;
        android.os.Message r1;
        android.os.Handler $r2;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r3;

        r0 := @this: com.android.server.wm.TaskChangeNotificationController;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.Handler mHandler>;

        r1 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(22, i0, 0);

        $r3 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifySingleTaskDisplayDrawn>;

        specialinvoke r0.<com.android.server.wm.TaskChangeNotificationController: void forAllLocalListeners(com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer,android.os.Message)>($r3, r1);

        virtualinvoke r1.<android.os.Message: void sendToTarget()>();

        return;
    }

    void notifySingleTaskDisplayEmpty(int)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        int i0;
        android.os.Message r1;
        android.os.Handler $r2;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r3;

        r0 := @this: com.android.server.wm.TaskChangeNotificationController;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.Handler mHandler>;

        r1 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(25, i0, 0);

        $r3 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifySingleTaskDisplayEmpty>;

        specialinvoke r0.<com.android.server.wm.TaskChangeNotificationController: void forAllLocalListeners(com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer,android.os.Message)>($r3, r1);

        virtualinvoke r1.<android.os.Message: void sendToTarget()>();

        return;
    }

    void notifySizeCompatModeActivityChanged(int, android.os.IBinder)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        int i0;
        android.os.Handler $r1;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r2;
        android.os.IBinder r3;
        android.os.Message r4;

        r0 := @this: com.android.server.wm.TaskChangeNotificationController;

        i0 := @parameter0: int;

        r3 := @parameter1: android.os.IBinder;

        $r1 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.Handler mHandler>;

        r4 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(20, i0, 0, r3);

        $r2 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mOnSizeCompatModeActivityChanged>;

        specialinvoke r0.<com.android.server.wm.TaskChangeNotificationController: void forAllLocalListeners(com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer,android.os.Message)>($r2, r4);

        virtualinvoke r4.<android.os.Message: void sendToTarget()>();

        return;
    }

    void notifyTaskCreated(int, android.content.ComponentName)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        int i0;
        android.os.Handler $r1;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r2;
        android.content.ComponentName r3;
        android.os.Message r4;

        r0 := @this: com.android.server.wm.TaskChangeNotificationController;

        i0 := @parameter0: int;

        r3 := @parameter1: android.content.ComponentName;

        $r1 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.Handler mHandler>;

        r4 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(8, i0, 0, r3);

        $r2 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskCreated>;

        specialinvoke r0.<com.android.server.wm.TaskChangeNotificationController: void forAllLocalListeners(com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer,android.os.Message)>($r2, r4);

        virtualinvoke r4.<android.os.Message: void sendToTarget()>();

        return;
    }

    void notifyTaskDescriptionChanged(android.app.TaskInfo)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        android.os.Handler $r1;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r2;
        android.app.TaskInfo r3;
        android.os.Message r4;

        r0 := @this: com.android.server.wm.TaskChangeNotificationController;

        r3 := @parameter0: android.app.TaskInfo;

        $r1 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.Handler mHandler>;

        r4 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(11, r3);

        $r2 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskDescriptionChanged>;

        specialinvoke r0.<com.android.server.wm.TaskChangeNotificationController: void forAllLocalListeners(com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer,android.os.Message)>($r2, r4);

        virtualinvoke r4.<android.os.Message: void sendToTarget()>();

        return;
    }

    void notifyTaskDisplayChanged(int, int)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        int i0, i1;
        android.os.Message r1;
        android.os.Handler $r2;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r3;

        r0 := @this: com.android.server.wm.TaskChangeNotificationController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.Handler mHandler>;

        r1 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(23, i0, i1);

        $r3 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskStackChanged>;

        specialinvoke r0.<com.android.server.wm.TaskChangeNotificationController: void forAllLocalListeners(com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer,android.os.Message)>($r3, r1);

        virtualinvoke r1.<android.os.Message: void sendToTarget()>();

        return;
    }

    void notifyTaskFocusChanged(int, boolean)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        int i0, i1;
        boolean z0;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r1;
        android.os.Handler r2;
        android.os.Message r3;

        r0 := @this: com.android.server.wm.TaskChangeNotificationController;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r2 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.Handler mHandler>;

        i1 = (int) z0;

        r3 = virtualinvoke r2.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(27, i0, i1);

        $r1 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskFocusChanged>;

        specialinvoke r0.<com.android.server.wm.TaskChangeNotificationController: void forAllLocalListeners(com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer,android.os.Message)>($r1, r3);

        virtualinvoke r3.<android.os.Message: void sendToTarget()>();

        return;
    }

    void notifyTaskListFrozen(boolean)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        boolean z0;
        android.os.Message r1;
        android.os.Handler $r2;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r3;
        int i0;

        r0 := @this: com.android.server.wm.TaskChangeNotificationController;

        z0 := @parameter0: boolean;

        $r2 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.Handler mHandler>;

        i0 = (int) z0;

        r1 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(26, i0, 0);

        $r3 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskListFrozen>;

        specialinvoke r0.<com.android.server.wm.TaskChangeNotificationController: void forAllLocalListeners(com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer,android.os.Message)>($r3, r1);

        virtualinvoke r1.<android.os.Message: void sendToTarget()>();

        return;
    }

    void notifyTaskListUpdated()
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        android.os.Message r1;
        android.os.Handler $r2;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r3;

        r0 := @this: com.android.server.wm.TaskChangeNotificationController;

        $r2 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.Handler mHandler>;

        r1 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int)>(24);

        $r3 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskListUpdated>;

        specialinvoke r0.<com.android.server.wm.TaskChangeNotificationController: void forAllLocalListeners(com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer,android.os.Message)>($r3, r1);

        virtualinvoke r1.<android.os.Message: void sendToTarget()>();

        return;
    }

    void notifyTaskMovedToFront(android.app.TaskInfo)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        android.os.Handler $r1;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r2;
        android.app.TaskInfo r3;
        android.os.Message r4;

        r0 := @this: com.android.server.wm.TaskChangeNotificationController;

        r3 := @parameter0: android.app.TaskInfo;

        $r1 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.Handler mHandler>;

        r4 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(10, r3);

        $r2 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskMovedToFront>;

        specialinvoke r0.<com.android.server.wm.TaskChangeNotificationController: void forAllLocalListeners(com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer,android.os.Message)>($r2, r4);

        virtualinvoke r4.<android.os.Message: void sendToTarget()>();

        return;
    }

    void notifyTaskProfileLocked(int, int)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        int i0, i1;
        android.os.Message r1;
        android.os.Handler $r2;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r3;

        r0 := @this: com.android.server.wm.TaskChangeNotificationController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.Handler mHandler>;

        r1 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(14, i0, i1);

        $r3 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskProfileLocked>;

        specialinvoke r0.<com.android.server.wm.TaskChangeNotificationController: void forAllLocalListeners(com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer,android.os.Message)>($r3, r1);

        virtualinvoke r1.<android.os.Message: void sendToTarget()>();

        return;
    }

    void notifyTaskRemovalStarted(android.app.ActivityManager$RunningTaskInfo)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        android.os.Handler $r1;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r2;
        android.app.ActivityManager$RunningTaskInfo r3;
        android.os.Message r4;

        r0 := @this: com.android.server.wm.TaskChangeNotificationController;

        r3 := @parameter0: android.app.ActivityManager$RunningTaskInfo;

        $r1 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.Handler mHandler>;

        r4 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(13, r3);

        $r2 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskRemovalStarted>;

        specialinvoke r0.<com.android.server.wm.TaskChangeNotificationController: void forAllLocalListeners(com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer,android.os.Message)>($r2, r4);

        virtualinvoke r4.<android.os.Message: void sendToTarget()>();

        return;
    }

    void notifyTaskRemoved(int)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        int i0;
        android.os.Message r1;
        android.os.Handler $r2;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r3;

        r0 := @this: com.android.server.wm.TaskChangeNotificationController;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.Handler mHandler>;

        r1 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(9, i0, 0);

        $r3 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskRemoved>;

        specialinvoke r0.<com.android.server.wm.TaskChangeNotificationController: void forAllLocalListeners(com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer,android.os.Message)>($r3, r1);

        virtualinvoke r1.<android.os.Message: void sendToTarget()>();

        return;
    }

    void notifyTaskRequestedOrientationChanged(int, int)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        int i0, i1;
        android.os.Message r1;
        android.os.Handler $r2;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r3;

        r0 := @this: com.android.server.wm.TaskChangeNotificationController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.Handler mHandler>;

        r1 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(28, i0, i1);

        $r3 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskRequestedOrientationChanged>;

        specialinvoke r0.<com.android.server.wm.TaskChangeNotificationController: void forAllLocalListeners(com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer,android.os.Message)>($r3, r1);

        virtualinvoke r1.<android.os.Message: void sendToTarget()>();

        return;
    }

    void notifyTaskSnapshotChanged(int, android.app.ActivityManager$TaskSnapshot)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        int i0;
        android.os.Handler $r1;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r2;
        android.app.ActivityManager$TaskSnapshot r3;
        android.os.Message r4;

        r0 := @this: com.android.server.wm.TaskChangeNotificationController;

        i0 := @parameter0: int;

        r3 := @parameter1: android.app.ActivityManager$TaskSnapshot;

        $r1 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.Handler mHandler>;

        r4 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(15, i0, 0, r3);

        $r2 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskSnapshotChanged>;

        specialinvoke r0.<com.android.server.wm.TaskChangeNotificationController: void forAllLocalListeners(com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer,android.os.Message)>($r2, r4);

        virtualinvoke r4.<android.os.Message: void sendToTarget()>();

        return;
    }

    void notifyTaskStackChanged()
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        android.os.Message r1;
        android.os.Handler $r2, $r3, $r4, $r6;
        com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer $r5;

        r0 := @this: com.android.server.wm.TaskChangeNotificationController;

        $r2 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: boolean sendEmptyMessage(int)>(1);

        $r3 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: void removeMessages(int)>(2);

        $r4 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.Handler mHandler>;

        r1 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int)>(2);

        $r5 = r0.<com.android.server.wm.TaskChangeNotificationController: com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer mNotifyTaskStackChanged>;

        specialinvoke r0.<com.android.server.wm.TaskChangeNotificationController: void forAllLocalListeners(com.android.server.wm.TaskChangeNotificationController$TaskStackConsumer,android.os.Message)>($r5, r1);

        $r6 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.Handler mHandler>;

        virtualinvoke $r6.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r1, 100L);

        return;
    }

    public void registerTaskStackListener(android.app.ITaskStackListener)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        java.lang.Object r1;
        int $i0, $i1;
        android.os.RemoteCallbackList $r2;
        java.util.ArrayList $r3, $r4;
        boolean $z1;
        java.lang.Throwable $r5;
        android.app.ITaskStackListener r6;

        r0 := @this: com.android.server.wm.TaskChangeNotificationController;

        r6 := @parameter0: android.app.ITaskStackListener;

        r1 = r0.<com.android.server.wm.TaskChangeNotificationController: java.lang.Object mServiceLock>;

        entermonitor r1;

        if r6 == null goto label4;

     label1:
        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Process: int myPid()>();

        if $i0 != $i1 goto label3;

        $r3 = r0.<com.android.server.wm.TaskChangeNotificationController: java.util.ArrayList mLocalTaskStackListeners>;

        $z1 = virtualinvoke $r3.<java.util.ArrayList: boolean contains(java.lang.Object)>(r6);

        if $z1 != 0 goto label4;

        $r4 = r0.<com.android.server.wm.TaskChangeNotificationController: java.util.ArrayList mLocalTaskStackListeners>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

     label2:
        goto label4;

     label3:
        $r2 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.RemoteCallbackList mRemoteTaskStackListeners>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: boolean register(android.os.IInterface)>(r6);

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r5 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void unregisterTaskStackListener(android.app.ITaskStackListener)
    {
        com.android.server.wm.TaskChangeNotificationController r0;
        java.lang.Object r1;
        int $i0, $i1;
        android.os.RemoteCallbackList $r2;
        java.util.ArrayList $r3;
        java.lang.Throwable $r4;
        android.app.ITaskStackListener r5;

        r0 := @this: com.android.server.wm.TaskChangeNotificationController;

        r5 := @parameter0: android.app.ITaskStackListener;

        r1 = r0.<com.android.server.wm.TaskChangeNotificationController: java.lang.Object mServiceLock>;

        entermonitor r1;

        if r5 == null goto label4;

     label1:
        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Process: int myPid()>();

        if $i0 != $i1 goto label3;

        $r3 = r0.<com.android.server.wm.TaskChangeNotificationController: java.util.ArrayList mLocalTaskStackListeners>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r5);

     label2:
        goto label4;

     label3:
        $r2 = r0.<com.android.server.wm.TaskChangeNotificationController: android.os.RemoteCallbackList mRemoteTaskStackListeners>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: boolean unregister(android.os.IInterface)>(r5);

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r4 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public static void <clinit>()
    {
        <com.android.server.wm.TaskChangeNotificationController: int NOTIFY_TASK_STACK_CHANGE_LISTENERS_MSG> = 2;

        <com.android.server.wm.TaskChangeNotificationController: int NOTIFY_TASK_STACK_CHANGE_LISTENERS_DELAY> = 100;

        <com.android.server.wm.TaskChangeNotificationController: int NOTIFY_TASK_SNAPSHOT_CHANGED_LISTENERS_MSG> = 15;

        <com.android.server.wm.TaskChangeNotificationController: int NOTIFY_TASK_REQUESTED_ORIENTATION_CHANGED_MSG> = 28;

        <com.android.server.wm.TaskChangeNotificationController: int NOTIFY_TASK_REMOVED_LISTENERS_MSG> = 9;

        <com.android.server.wm.TaskChangeNotificationController: int NOTIFY_TASK_REMOVAL_STARTED_LISTENERS> = 13;

        <com.android.server.wm.TaskChangeNotificationController: int NOTIFY_TASK_PROFILE_LOCKED_LISTENERS_MSG> = 14;

        <com.android.server.wm.TaskChangeNotificationController: int NOTIFY_TASK_MOVED_TO_FRONT_LISTENERS_MSG> = 10;

        <com.android.server.wm.TaskChangeNotificationController: int NOTIFY_TASK_LIST_UPDATED_LISTENERS_MSG> = 24;

        <com.android.server.wm.TaskChangeNotificationController: int NOTIFY_TASK_LIST_FROZEN_UNFROZEN_MSG> = 26;

        <com.android.server.wm.TaskChangeNotificationController: int NOTIFY_TASK_FOCUS_CHANGED_MSG> = 27;

        <com.android.server.wm.TaskChangeNotificationController: int NOTIFY_TASK_DISPLAY_CHANGED_LISTENERS_MSG> = 23;

        <com.android.server.wm.TaskChangeNotificationController: int NOTIFY_TASK_DESCRIPTION_CHANGED_LISTENERS_MSG> = 11;

        <com.android.server.wm.TaskChangeNotificationController: int NOTIFY_TASK_ADDED_LISTENERS_MSG> = 8;

        <com.android.server.wm.TaskChangeNotificationController: int NOTIFY_SIZE_COMPAT_MODE_ACTIVITY_CHANGED_MSG> = 20;

        <com.android.server.wm.TaskChangeNotificationController: int NOTIFY_SINGLE_TASK_DISPLAY_EMPTY> = 25;

        <com.android.server.wm.TaskChangeNotificationController: int NOTIFY_SINGLE_TASK_DISPLAY_DRAWN> = 22;

        <com.android.server.wm.TaskChangeNotificationController: int NOTIFY_FORCED_RESIZABLE_MSG> = 6;

        <com.android.server.wm.TaskChangeNotificationController: int NOTIFY_BACK_PRESSED_ON_TASK_ROOT> = 21;

        <com.android.server.wm.TaskChangeNotificationController: int NOTIFY_ACTIVITY_UNPINNED_LISTENERS_MSG> = 17;

        <com.android.server.wm.TaskChangeNotificationController: int NOTIFY_ACTIVITY_ROTATED_MSG> = 29;

        <com.android.server.wm.TaskChangeNotificationController: int NOTIFY_ACTIVITY_RESTART_ATTEMPT_LISTENERS_MSG> = 4;

        <com.android.server.wm.TaskChangeNotificationController: int NOTIFY_ACTIVITY_REQUESTED_ORIENTATION_CHANGED_LISTENERS> = 12;

        <com.android.server.wm.TaskChangeNotificationController: int NOTIFY_ACTIVITY_PINNED_LISTENERS_MSG> = 3;

        <com.android.server.wm.TaskChangeNotificationController: int NOTIFY_ACTIVITY_LAUNCH_ON_SECONDARY_DISPLAY_REROUTED_MSG> = 19;

        <com.android.server.wm.TaskChangeNotificationController: int NOTIFY_ACTIVITY_LAUNCH_ON_SECONDARY_DISPLAY_FAILED_MSG> = 18;

        <com.android.server.wm.TaskChangeNotificationController: int NOTIFY_ACTIVITY_DISMISSING_DOCKED_STACK_MSG> = 7;

        <com.android.server.wm.TaskChangeNotificationController: int LOG_STACK_STATE_MSG> = 1;

        return;
    }
}
