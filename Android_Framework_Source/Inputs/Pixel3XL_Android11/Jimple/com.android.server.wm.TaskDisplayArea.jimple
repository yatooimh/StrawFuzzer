final class com.android.server.wm.TaskDisplayArea extends com.android.server.wm.DisplayArea
{
    private android.view.SurfaceControl mAppAnimationLayer;
    private com.android.server.wm.ActivityTaskManagerService mAtmService;
    private android.view.SurfaceControl mBoostedAppAnimationLayer;
    com.android.server.wm.DisplayContent mDisplayContent;
    private android.view.SurfaceControl mHomeAppAnimationLayer;
    com.android.server.wm.ActivityStack mLastFocusedStack;
    com.android.server.wm.Task mLaunchRootTask;
    com.android.server.wm.ActivityStack mPreferredTopFocusableStack;
    private boolean mRemoved;
    private com.android.server.wm.ActivityStack mRootHomeTask;
    private com.android.server.wm.ActivityStack mRootPinnedTask;
    private com.android.server.wm.ActivityStack mRootRecentsTask;
    private com.android.server.wm.ActivityStack mRootSplitScreenPrimaryTask;
    private com.android.server.wm.RootWindowContainer mRootWindowContainer;
    private android.view.SurfaceControl mSplitScreenDividerAnchor;
    private java.util.ArrayList mStackOrderChangedCallbacks;
    private final java.util.ArrayList mTmpAlwaysOnTopStacks;
    private final com.android.server.wm.RootWindowContainer$FindTaskResult mTmpFindTaskResult;
    private final java.util.ArrayList mTmpHomeStacks;
    private int mTmpLayerForAnimationLayer;
    private int mTmpLayerForSplitScreenDividerAnchor;
    private final android.util.IntArray mTmpNeedsZBoostIndexes;
    private final java.util.ArrayList mTmpNormalStacks;
    private java.util.ArrayList mTmpTasks;

    void <init>(com.android.server.wm.DisplayContent, com.android.server.wm.WindowManagerService, java.lang.String, int)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.DisplayContent r1;
        com.android.server.wm.WindowManagerService r2;
        java.lang.String r3;
        int i0;
        com.android.server.wm.DisplayArea$Type $r4;
        java.util.ArrayList $r5, $r6, $r7, $r9, $r11;
        android.util.IntArray $r8;
        com.android.server.wm.RootWindowContainer$FindTaskResult $r10;
        com.android.server.wm.RootWindowContainer $r12;
        com.android.server.wm.ActivityTaskManagerService $r13;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: com.android.server.wm.DisplayContent;

        r2 := @parameter1: com.android.server.wm.WindowManagerService;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        $r4 = <com.android.server.wm.DisplayArea$Type: com.android.server.wm.DisplayArea$Type ANY>;

        specialinvoke r0.<com.android.server.wm.DisplayArea: void <init>(com.android.server.wm.WindowManagerService,com.android.server.wm.DisplayArea$Type,java.lang.String,int)>(r2, $r4, r3, i0);

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.wm.TaskDisplayArea: java.util.ArrayList mTmpAlwaysOnTopStacks> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.wm.TaskDisplayArea: java.util.ArrayList mTmpNormalStacks> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.wm.TaskDisplayArea: java.util.ArrayList mTmpHomeStacks> = $r7;

        $r8 = new android.util.IntArray;

        specialinvoke $r8.<android.util.IntArray: void <init>()>();

        r0.<com.android.server.wm.TaskDisplayArea: android.util.IntArray mTmpNeedsZBoostIndexes> = $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.wm.TaskDisplayArea: java.util.ArrayList mTmpTasks> = $r9;

        r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.Task mLaunchRootTask> = null;

        $r10 = new com.android.server.wm.RootWindowContainer$FindTaskResult;

        specialinvoke $r10.<com.android.server.wm.RootWindowContainer$FindTaskResult: void <init>()>();

        r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.RootWindowContainer$FindTaskResult mTmpFindTaskResult> = $r10;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.wm.TaskDisplayArea: java.util.ArrayList mStackOrderChangedCallbacks> = $r11;

        r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.DisplayContent mDisplayContent> = r1;

        $r12 = r2.<com.android.server.wm.WindowManagerService: com.android.server.wm.RootWindowContainer mRoot>;

        r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.RootWindowContainer mRootWindowContainer> = $r12;

        $r13 = r2.<com.android.server.wm.WindowManagerService: com.android.server.wm.ActivityTaskManagerService mAtmService>;

        r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityTaskManagerService mAtmService> = $r13;

        return;
    }

    private int adjustNormalStackLayer(com.android.server.wm.ActivityStack, int)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityStack r1;
        boolean $z0, $z1, $z2;
        int i0, i1, i2;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: com.android.server.wm.ActivityStack;

        i0 := @parameter1: int;

        i1 = i0;

        $z0 = virtualinvoke r1.<com.android.server.wm.ActivityStack: boolean inSplitScreenWindowingMode()>();

        if $z0 == 0 goto label1;

        r0.<com.android.server.wm.TaskDisplayArea: int mTmpLayerForSplitScreenDividerAnchor> = i0;

        i1 = i0 + 1;

     label1:
        $z1 = virtualinvoke r1.<com.android.server.wm.ActivityStack: boolean isTaskAnimating()>();

        if $z1 != 0 goto label2;

        i2 = i1;

        $z2 = virtualinvoke r1.<com.android.server.wm.ActivityStack: boolean isAppTransitioning()>();

        if $z2 == 0 goto label3;

     label2:
        r0.<com.android.server.wm.TaskDisplayArea: int mTmpLayerForAnimationLayer> = i1;

        i2 = i1 + 1;

     label3:
        return i2;
    }

    private int adjustRootTaskLayer(android.view.SurfaceControl$Transaction, java.util.ArrayList, int, boolean)
    {
        com.android.server.wm.TaskDisplayArea r0;
        android.view.SurfaceControl$Transaction r1;
        java.util.ArrayList r2;
        boolean z0, $z1;
        android.util.IntArray $r3, $r4, $r5, $r8;
        int $i0, i1, i2, i3, i4, i5, i6, i7;
        java.lang.Object $r6, $r7;
        com.android.server.wm.ActivityStack r9, r10;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        r2 := @parameter1: java.util.ArrayList;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r3 = r0.<com.android.server.wm.TaskDisplayArea: android.util.IntArray mTmpNeedsZBoostIndexes>;

        virtualinvoke $r3.<android.util.IntArray: void clear()>();

        i2 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i3 = 0;

     label1:
        if i3 >= i2 goto label5;

        $r7 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r9 = (com.android.server.wm.ActivityStack) $r7;

        $z1 = virtualinvoke r9.<com.android.server.wm.ActivityStack: boolean needsZBoost()>();

        if $z1 != 0 goto label3;

        i4 = i1 + 1;

        virtualinvoke r9.<com.android.server.wm.ActivityStack: void assignLayer(android.view.SurfaceControl$Transaction,int)>(r1, i1);

        if z0 == 0 goto label2;

        i1 = specialinvoke r0.<com.android.server.wm.TaskDisplayArea: int adjustNormalStackLayer(com.android.server.wm.ActivityStack,int)>(r9, i4);

        goto label4;

     label2:
        i1 = i4;

        goto label4;

     label3:
        $r8 = r0.<com.android.server.wm.TaskDisplayArea: android.util.IntArray mTmpNeedsZBoostIndexes>;

        virtualinvoke $r8.<android.util.IntArray: void add(int)>(i3);

     label4:
        i3 = i3 + 1;

        goto label1;

     label5:
        $r4 = r0.<com.android.server.wm.TaskDisplayArea: android.util.IntArray mTmpNeedsZBoostIndexes>;

        i5 = virtualinvoke $r4.<android.util.IntArray: int size()>();

        i6 = 0;

     label6:
        if i6 >= i5 goto label9;

        $r5 = r0.<com.android.server.wm.TaskDisplayArea: android.util.IntArray mTmpNeedsZBoostIndexes>;

        $i0 = virtualinvoke $r5.<android.util.IntArray: int get(int)>(i6);

        $r6 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        r10 = (com.android.server.wm.ActivityStack) $r6;

        i7 = i1 + 1;

        virtualinvoke r10.<com.android.server.wm.ActivityStack: void assignLayer(android.view.SurfaceControl$Transaction,int)>(r1, i1);

        if z0 == 0 goto label7;

        i1 = specialinvoke r0.<com.android.server.wm.TaskDisplayArea: int adjustNormalStackLayer(com.android.server.wm.ActivityStack,int)>(r10, i7);

        goto label8;

     label7:
        i1 = i7;

     label8:
        i6 = i6 + 1;

        goto label6;

     label9:
        return i1;
    }

    private int findMaxPositionForStack(com.android.server.wm.ActivityStack)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityStack r1, r2;
        com.android.server.wm.WindowList $r3;
        int $i0, $i1, $i2, i3;
        boolean z0;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: com.android.server.wm.ActivityStack;

        $r3 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.WindowList mChildren>;

        $i0 = virtualinvoke $r3.<com.android.server.wm.WindowList: int size()>();

        i3 = $i0 - 1;

     label1:
        z0 = 0;

        if i3 < 0 goto label4;

        r2 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getStackAt(int)>(i3);

        if r2 != r1 goto label2;

        z0 = 1;

     label2:
        $i1 = specialinvoke r0.<com.android.server.wm.TaskDisplayArea: int getPriority(com.android.server.wm.ActivityStack)>(r2);

        $i2 = specialinvoke r0.<com.android.server.wm.TaskDisplayArea: int getPriority(com.android.server.wm.ActivityStack)>(r1);

        if $i1 > $i2 goto label3;

        if z0 != 0 goto label3;

        return i3;

     label3:
        i3 = i3 + -1;

        goto label1;

     label4:
        return 0;
    }

    private int findMinPositionForStack(com.android.server.wm.ActivityStack)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityStack r1, $r3;
        int i0, $i1, $i2, $i3, i4, i5, i6;
        com.android.server.wm.WindowList $r2;
        boolean $z0;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: com.android.server.wm.ActivityStack;

        i4 = -2147483648;

        i5 = 0;

     label1:
        $r2 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.WindowList mChildren>;

        $i1 = virtualinvoke $r2.<com.android.server.wm.WindowList: int size()>();

        if i5 >= $i1 goto label2;

        $r3 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getStackAt(int)>(i5);

        $i2 = specialinvoke r0.<com.android.server.wm.TaskDisplayArea: int getPriority(com.android.server.wm.ActivityStack)>($r3);

        $i3 = specialinvoke r0.<com.android.server.wm.TaskDisplayArea: int getPriority(com.android.server.wm.ActivityStack)>(r1);

        if $i2 >= $i3 goto label2;

        i4 = i5;

        i5 = i5 + 1;

        goto label1;

     label2:
        i6 = i4;

        $z0 = virtualinvoke r1.<com.android.server.wm.ActivityStack: boolean isAlwaysOnTop()>();

        if $z0 == 0 goto label3;

        i0 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: int getIndexOf(com.android.server.wm.ActivityStack)>(r1);

        i6 = i4;

        if i0 <= i4 goto label3;

        i6 = i0;

     label3:
        return i6;
    }

    private int findPositionForStack(int, com.android.server.wm.ActivityStack, boolean)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityStack r1;
        boolean z0;
        com.android.server.wm.WindowList $r2, $r3;
        int i0, i1, i2, i3, $i4, i5, i6, i7;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.wm.ActivityStack;

        z0 := @parameter2: boolean;

        i1 = specialinvoke r0.<com.android.server.wm.TaskDisplayArea: int findMaxPositionForStack(com.android.server.wm.ActivityStack)>(r1);

        i2 = specialinvoke r0.<com.android.server.wm.TaskDisplayArea: int findMinPositionForStack(com.android.server.wm.ActivityStack)>(r1);

        if i0 != 2147483647 goto label1;

        $r2 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.WindowList mChildren>;

        i3 = virtualinvoke $r2.<com.android.server.wm.WindowList: int size()>();

        goto label2;

     label1:
        i3 = i0;

        if i0 != -2147483648 goto label2;

        i3 = 0;

     label2:
        $i4 = staticinvoke <java.lang.Math: int min(int,int)>(i3, i1);

        i5 = staticinvoke <java.lang.Math: int max(int,int)>($i4, i2);

        $r3 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.WindowList mChildren>;

        i6 = virtualinvoke $r3.<com.android.server.wm.WindowList: int indexOf(java.lang.Object)>(r1);

        i7 = i5;

        if i5 == i3 goto label4;

        if z0 != 0 goto label3;

        i7 = i5;

        if i5 >= i6 goto label4;

     label3:
        i7 = i5 + 1;

     label4:
        return i7;
    }

    private boolean forAllExitingAppTokenWindows(com.android.internal.util.ToBooleanFunction, boolean)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.internal.util.ToBooleanFunction r1;
        boolean z0, $z1, $z2;
        int i0, i1, $i2, $i3, i4, i5, i6, i7;
        com.android.server.wm.WindowList $r2, $r3, $r8, $r9;
        java.lang.Object $r4, $r6, $r10, $r12;
        com.android.server.wm.ActivityStack $r5, $r11;
        com.android.server.wm.ActivityRecord $r7, $r13;
        java.util.ArrayList r14, r15;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: com.android.internal.util.ToBooleanFunction;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label06;

        $r8 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.WindowList mChildren>;

        $i2 = virtualinvoke $r8.<com.android.server.wm.WindowList: int size()>();

        i4 = $i2 - 1;

     label01:
        if i4 < 0 goto label05;

        $r9 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.WindowList mChildren>;

        $r10 = virtualinvoke $r9.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i4);

        $r11 = (com.android.server.wm.ActivityStack) $r10;

        r14 = $r11.<com.android.server.wm.ActivityStack: java.util.ArrayList mExitingActivities>;

        $i3 = interfaceinvoke r14.<java.util.List: int size()>();

        i5 = $i3 - 1;

     label02:
        if i5 < 0 goto label04;

        $r12 = interfaceinvoke r14.<java.util.List: java.lang.Object get(int)>(i5);

        $r13 = (com.android.server.wm.ActivityRecord) $r12;

        $z2 = virtualinvoke $r13.<com.android.server.wm.ActivityRecord: boolean forAllWindowsUnchecked(com.android.internal.util.ToBooleanFunction,boolean)>(r1, z0);

        if $z2 == 0 goto label03;

        return 1;

     label03:
        i5 = i5 + -1;

        goto label02;

     label04:
        i4 = i4 + -1;

        goto label01;

     label05:
        goto label11;

     label06:
        $r2 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.WindowList mChildren>;

        i0 = virtualinvoke $r2.<com.android.server.wm.WindowList: int size()>();

        i6 = 0;

     label07:
        if i6 >= i0 goto label11;

        $r3 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.WindowList mChildren>;

        $r4 = virtualinvoke $r3.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i6);

        $r5 = (com.android.server.wm.ActivityStack) $r4;

        r15 = $r5.<com.android.server.wm.ActivityStack: java.util.ArrayList mExitingActivities>;

        i1 = interfaceinvoke r15.<java.util.List: int size()>();

        i7 = 0;

     label08:
        if i7 >= i1 goto label10;

        $r6 = interfaceinvoke r15.<java.util.List: java.lang.Object get(int)>(i7);

        $r7 = (com.android.server.wm.ActivityRecord) $r6;

        $z1 = virtualinvoke $r7.<com.android.server.wm.ActivityRecord: boolean forAllWindowsUnchecked(com.android.internal.util.ToBooleanFunction,boolean)>(r1, z0);

        if $z1 == 0 goto label09;

        return 1;

     label09:
        i7 = i7 + 1;

        goto label08;

     label10:
        i6 = i6 + 1;

        goto label07;

     label11:
        return 0;
    }

    private int getPriority(com.android.server.wm.ActivityStack)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityStack r1;
        com.android.server.wm.WindowManagerService $r2;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: com.android.server.wm.ActivityStack;

        $r2 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.WindowManagerService mWmService>;

        $z0 = $r2.<com.android.server.wm.WindowManagerService: boolean mAssistantOnTopOfDream>;

        if $z0 == 0 goto label1;

        $z4 = virtualinvoke r1.<com.android.server.wm.ActivityStack: boolean isActivityTypeAssistant()>();

        if $z4 == 0 goto label1;

        return 4;

     label1:
        $z1 = virtualinvoke r1.<com.android.server.wm.ActivityStack: boolean isActivityTypeDream()>();

        if $z1 == 0 goto label2;

        return 3;

     label2:
        $z2 = virtualinvoke r1.<com.android.server.wm.ActivityStack: boolean inPinnedWindowingMode()>();

        if $z2 == 0 goto label3;

        return 2;

     label3:
        $z3 = virtualinvoke r1.<com.android.server.wm.ActivityStack: boolean isAlwaysOnTop()>();

        if $z3 == 0 goto label4;

        return 1;

     label4:
        return 0;
    }

    static com.android.server.wm.ActivityStack getStackAbove(com.android.server.wm.ActivityStack)
    {
        com.android.server.wm.WindowContainer r0;
        int i0, $i1, $i2;
        com.android.server.wm.WindowList $r1, $r2, $r3;
        java.lang.Object $r4;
        com.android.server.wm.ActivityStack r5, r6;

        r5 := @parameter0: com.android.server.wm.ActivityStack;

        r0 = virtualinvoke r5.<com.android.server.wm.ActivityStack: com.android.server.wm.WindowContainer getParent()>();

        $r1 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i1 = virtualinvoke $r1.<com.android.server.wm.WindowList: int indexOf(java.lang.Object)>(r5);

        i0 = $i1 + 1;

        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i2 = virtualinvoke $r2.<com.android.server.wm.WindowList: int size()>();

        if i0 >= $i2 goto label1;

        $r3 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r4 = virtualinvoke $r3.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i0);

        r6 = (com.android.server.wm.ActivityStack) $r4;

        goto label2;

     label1:
        r6 = null;

     label2:
        return r6;
    }

    private static boolean isHomeActivityForUser(com.android.server.wm.ActivityRecord, int)
    {
        com.android.server.wm.ActivityRecord r0;
        int i0, $i1;
        boolean $z0, z1;

        r0 := @parameter0: com.android.server.wm.ActivityRecord;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<com.android.server.wm.ActivityRecord: boolean isActivityTypeHome()>();

        if $z0 == 0 goto label2;

        if i0 == -1 goto label1;

        $i1 = r0.<com.android.server.wm.ActivityRecord: int mUserId>;

        if $i1 != i0 goto label2;

     label1:
        z1 = 1;

        goto label3;

     label2:
        z1 = 0;

     label3:
        return z1;
    }

    private boolean isWindowingModeSupported(int, boolean, boolean, boolean, boolean, int)
    {
        com.android.server.wm.TaskDisplayArea r0;
        int i0, i1;
        boolean z0, z1, z2, $z4, z5, z6;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        i0 := @parameter0: int;

        z5 := @parameter1: boolean;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        i1 := @parameter5: int;

        if i0 == 0 goto label10;

        if i0 != 1 goto label01;

        goto label10;

     label01:
        if z5 != 0 goto label02;

        return 0;

     label02:
        if i0 != 6 goto label03;

        return 1;

     label03:
        if i0 == 3 goto label07;

        if i0 != 4 goto label04;

        goto label07;

     label04:
        if z1 != 0 goto label05;

        if i0 != 5 goto label05;

        return 0;

     label05:
        if z2 != 0 goto label06;

        if i0 != 2 goto label06;

        return 0;

     label06:
        return 1;

     label07:
        if z0 == 0 goto label08;

        $z4 = staticinvoke <android.app.WindowConfiguration: boolean supportSplitScreenWindowingMode(int)>(i1);

        if $z4 == 0 goto label08;

        z6 = 1;

        goto label09;

     label08:
        z6 = 0;

     label09:
        return z6;

     label10:
        return 1;
    }

    public static boolean lambda$XcH01_sSElIBkfdzcfbGZuAMtmk(com.android.server.wm.ActivityRecord, int)
    {
        com.android.server.wm.ActivityRecord r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.server.wm.ActivityRecord;

        i0 := @parameter1: int;

        $z0 = staticinvoke <com.android.server.wm.TaskDisplayArea: boolean isHomeActivityForUser(com.android.server.wm.ActivityRecord,int)>(r0, i0);

        return $z0;
    }

    static void lambda$getVisibleTasks$0(java.util.ArrayList, com.android.server.wm.Task)
    {
        java.util.ArrayList r0;
        com.android.server.wm.Task r1;
        boolean $z0, $z1;

        r0 := @parameter0: java.util.ArrayList;

        r1 := @parameter1: com.android.server.wm.Task;

        $z0 = virtualinvoke r1.<com.android.server.wm.Task: boolean isLeafTask()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r1.<com.android.server.wm.Task: boolean isVisible()>();

        if $z1 == 0 goto label1;

        virtualinvoke r0.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label1:
        return;
    }

    private void moveSplitScreenTasksToFullScreen()
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.Task r2;
        android.window.WindowContainerTransaction $r3;
        java.util.ArrayList $r4, $r6, $r9;
        com.android.server.wm._$$Lambda$TaskDisplayArea$gHhbWLHW9TjU51jILamhhfgxluc $r5;
        int $i0, $i1, i2, i3;
        com.android.server.wm.ActivityTaskManagerService $r7;
        com.android.server.wm.WindowOrganizerController $r8;
        java.lang.Object $r10;
        com.android.server.wm.WindowContainer $r11;
        com.android.server.wm.WindowContainer$RemoteToken $r12;
        android.window.WindowContainerToken $r13;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        $r3 = new android.window.WindowContainerTransaction;

        specialinvoke $r3.<android.window.WindowContainerTransaction: void <init>()>();

        $r4 = r0.<com.android.server.wm.TaskDisplayArea: java.util.ArrayList mTmpTasks>;

        virtualinvoke $r4.<java.util.ArrayList: void clear()>();

        $r5 = new com.android.server.wm._$$Lambda$TaskDisplayArea$gHhbWLHW9TjU51jILamhhfgxluc;

        specialinvoke $r5.<com.android.server.wm._$$Lambda$TaskDisplayArea$gHhbWLHW9TjU51jILamhhfgxluc: void <init>(com.android.server.wm.TaskDisplayArea)>(r0);

        virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: void forAllTasks(java.util.function.Consumer)>($r5);

        $r6 = r0.<com.android.server.wm.TaskDisplayArea: java.util.ArrayList mTmpTasks>;

        $i0 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i2 = $i0 - 1;

     label1:
        if i2 < 0 goto label4;

        $r9 = r0.<com.android.server.wm.TaskDisplayArea: java.util.ArrayList mTmpTasks>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r2 = (com.android.server.wm.Task) $r10;

        i3 = 0;

     label2:
        $i1 = virtualinvoke r2.<com.android.server.wm.Task: int getChildCount()>();

        if i3 >= $i1 goto label3;

        $r11 = virtualinvoke r2.<com.android.server.wm.Task: com.android.server.wm.WindowContainer getChildAt(int)>(i3);

        $r12 = $r11.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer$RemoteToken mRemoteToken>;

        $r13 = virtualinvoke $r12.<com.android.server.wm.WindowContainer$RemoteToken: android.window.WindowContainerToken toWindowContainerToken()>();

        virtualinvoke $r3.<android.window.WindowContainerTransaction: android.window.WindowContainerTransaction reparent(android.window.WindowContainerToken,android.window.WindowContainerToken,boolean)>($r13, null, 1);

        i3 = i3 + 1;

        goto label2;

     label3:
        i2 = i2 + -1;

        goto label1;

     label4:
        $r7 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityTaskManagerService mAtmService>;

        $r8 = $r7.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowOrganizerController mWindowOrganizerController>;

        virtualinvoke $r8.<com.android.server.wm.WindowOrganizerController: void applyTransaction(android.window.WindowContainerTransaction)>($r3);

        return;
    }

    private com.android.server.wm.Task updateLaunchRootTask(int)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityStack r1, r2;
        boolean $z0, $z1, $z2;
        int $i0, $i1, i2, i3, i4, i5;
        com.android.server.wm.Task $r3, $r4;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        i2 := @parameter0: int;

        $z0 = staticinvoke <android.app.WindowConfiguration: boolean isSplitScreenWindowingMode(int)>(i2);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $i0 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: int getStackCount()>();

        i3 = $i0 - 1;

     label2:
        if i3 < 0 goto label8;

        r1 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getStackAt(int)>(i3);

        $z1 = r1.<com.android.server.wm.Task: boolean mCreatedByOrganizer>;

        if $z1 == 0 goto label7;

        $i1 = virtualinvoke r1.<com.android.server.wm.Task: int getRequestedOverrideWindowingMode()>();

        if $i1 == i2 goto label3;

        goto label7;

     label3:
        $r4 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.Task mLaunchRootTask>;

        if $r4 != null goto label6;

        i4 = 0;

        i5 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: int getStackCount()>();

     label4:
        if i4 >= i5 goto label6;

        r2 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getStackAt(int)>(i4);

        $z2 = r2.<com.android.server.wm.Task: boolean mCreatedByOrganizer>;

        if $z2 == 0 goto label5;

        if r2 == r1 goto label5;

        r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.Task mLaunchRootTask> = r2;

        goto label6;

     label5:
        i4 = i4 + 1;

        goto label4;

     label6:
        return r1;

     label7:
        i3 = i3 + -1;

        goto label2;

     label8:
        $r3 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.Task mLaunchRootTask>;

        return $r3;
    }

    void addChild(com.android.server.wm.ActivityStack, int)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityStack r1;
        com.android.server.wm.ActivityTaskManagerService $r2;
        int i0, i1;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: com.android.server.wm.ActivityStack;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: void addStackReferenceIfNeeded(com.android.server.wm.ActivityStack)>(r1);

        i1 = specialinvoke r0.<com.android.server.wm.TaskDisplayArea: int findPositionForStack(int,com.android.server.wm.ActivityStack,boolean)>(i0, r1, 1);

        specialinvoke r0.<com.android.server.wm.DisplayArea: void addChild(com.android.server.wm.WindowContainer,int)>(r1, i1);

        $r2 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityTaskManagerService mAtmService>;

        virtualinvoke $r2.<com.android.server.wm.ActivityTaskManagerService: void updateSleepIfNeededLocked()>();

        virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: void positionStackAt(com.android.server.wm.ActivityStack,int)>(r1, i1);

        return;
    }

    volatile void addChild(com.android.server.wm.WindowContainer, int)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.WindowContainer r1;
        int i0;
        com.android.server.wm.ActivityStack $r2;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: com.android.server.wm.WindowContainer;

        i0 := @parameter1: int;

        $r2 = (com.android.server.wm.ActivityStack) r1;

        virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: void addChild(com.android.server.wm.ActivityStack,int)>($r2, i0);

        return;
    }

    void addStackReferenceIfNeeded(com.android.server.wm.ActivityStack)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityStack r1, $r2, $r5, $r13, $r16, $r26, $r36, r44, r46;
        int i0;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r3, $r14, $r24, $r34;
        java.lang.IllegalArgumentException $r11, $r22, $r32, $r42;
        java.lang.String $r12, $r23, $r33, $r43;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: com.android.server.wm.ActivityStack;

        $z0 = virtualinvoke r1.<com.android.server.wm.ActivityStack: boolean isActivityTypeHome()>();

        if $z0 == 0 goto label03;

        r44 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mRootHomeTask>;

        if r44 == null goto label02;

        $z3 = virtualinvoke r1.<com.android.server.wm.ActivityStack: boolean isDescendantOf(com.android.server.wm.WindowContainer)>(r44);

        if $z3 == 0 goto label01;

        goto label06;

     label01:
        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addStackReferenceIfNeeded: home stack=");

        $r36 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mRootHomeTask>;

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r36);

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already exist on display=");

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" stack=");

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r42 = new java.lang.IllegalArgumentException;

        $r43 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r42.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r43);

        throw $r42;

     label02:
        r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mRootHomeTask> = r1;

        goto label06;

     label03:
        $z1 = virtualinvoke r1.<com.android.server.wm.ActivityStack: boolean isActivityTypeRecents()>();

        if $z1 == 0 goto label06;

        r46 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mRootRecentsTask>;

        if r46 == null goto label05;

        $z2 = virtualinvoke r1.<com.android.server.wm.ActivityStack: boolean isDescendantOf(com.android.server.wm.WindowContainer)>(r46);

        if $z2 == 0 goto label04;

        goto label06;

     label04:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addStackReferenceIfNeeded: recents stack=");

        $r26 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mRootRecentsTask>;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already exist on display=");

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" stack=");

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r32 = new java.lang.IllegalArgumentException;

        $r33 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r33);

        throw $r32;

     label05:
        r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mRootRecentsTask> = r1;

     label06:
        $z4 = virtualinvoke r1.<com.android.server.wm.ActivityStack: boolean isRootTask()>();

        if $z4 != 0 goto label07;

        return;

     label07:
        i0 = virtualinvoke r1.<com.android.server.wm.ActivityStack: int getWindowingMode()>();

        if i0 != 2 goto label09;

        $r13 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mRootPinnedTask>;

        if $r13 != null goto label08;

        r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mRootPinnedTask> = r1;

        goto label11;

     label08:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addStackReferenceIfNeeded: pinned stack=");

        $r16 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mRootPinnedTask>;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already exist on display=");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" stack=");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r22 = new java.lang.IllegalArgumentException;

        $r23 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r23);

        throw $r22;

     label09:
        if i0 != 3 goto label11;

        $r2 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mRootSplitScreenPrimaryTask>;

        if $r2 != null goto label10;

        r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mRootSplitScreenPrimaryTask> = r1;

        goto label11;

     label10:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addStackReferenceIfNeeded: split screen primary stack=");

        $r5 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mRootSplitScreenPrimaryTask>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already exist on display=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" stack=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r11;

     label11:
        return;
    }

    boolean allResumedActivitiesComplete()
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityRecord r1;
        int $i0, i1;
        com.android.server.wm.ActivityStack $r2, $r3;
        com.android.server.wm.ActivityStack$ActivityState $r4;
        boolean $z0;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        $i0 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: int getStackCount()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r3 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getStackAt(int)>(i1);

        r1 = virtualinvoke $r3.<com.android.server.wm.ActivityStack: com.android.server.wm.ActivityRecord getResumedActivity()>();

        if r1 == null goto label2;

        $r4 = <com.android.server.wm.ActivityStack$ActivityState: com.android.server.wm.ActivityStack$ActivityState RESUMED>;

        $z0 = virtualinvoke r1.<com.android.server.wm.ActivityRecord: boolean isState(com.android.server.wm.ActivityStack$ActivityState)>($r4);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        $r2 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getFocusedStack()>();

        r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mLastFocusedStack> = $r2;

        return 1;
    }

    void assignChildLayers(android.view.SurfaceControl$Transaction)
    {
        com.android.server.wm.TaskDisplayArea r0;
        android.view.SurfaceControl$Transaction r1;
        com.android.server.wm.WindowList $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;
        com.android.server.wm.ActivityStack $r5;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: void assignStackOrdering(android.view.SurfaceControl$Transaction)>(r1);

        i1 = 0;

     label1:
        $r2 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.WindowList mChildren>;

        $i0 = virtualinvoke $r2.<com.android.server.wm.WindowList: int size()>();

        if i1 >= $i0 goto label2;

        $r3 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.WindowList mChildren>;

        $r4 = virtualinvoke $r3.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i1);

        $r5 = (com.android.server.wm.ActivityStack) $r4;

        virtualinvoke $r5.<com.android.server.wm.ActivityStack: void assignChildLayers(android.view.SurfaceControl$Transaction)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void assignStackOrdering(android.view.SurfaceControl$Transaction)
    {
        com.android.server.wm.TaskDisplayArea r0;
        android.view.SurfaceControl$Transaction r1;
        com.android.server.wm.ActivityStack r2;
        int i0, $i1, $i2, $i3, $i5, $i6, i7, i8, i9, i10;
        com.android.server.wm.WindowContainer $r3;
        java.util.ArrayList $r4, $r5, $r6, $r8, $r9, $r10, $r21, $r22, $r23;
        com.android.server.wm.WindowList $r7, $r19;
        android.view.SurfaceControl $r11, $r13, $r15, $r17;
        java.lang.Object $r20;
        boolean $z0, $z1;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        $r3 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.WindowContainer getParent()>();

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = r0.<com.android.server.wm.TaskDisplayArea: java.util.ArrayList mTmpAlwaysOnTopStacks>;

        virtualinvoke $r4.<java.util.ArrayList: void clear()>();

        $r5 = r0.<com.android.server.wm.TaskDisplayArea: java.util.ArrayList mTmpHomeStacks>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        $r6 = r0.<com.android.server.wm.TaskDisplayArea: java.util.ArrayList mTmpNormalStacks>;

        virtualinvoke $r6.<java.util.ArrayList: void clear()>();

        i7 = 0;

     label2:
        $r7 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.WindowList mChildren>;

        $i1 = virtualinvoke $r7.<com.android.server.wm.WindowList: int size()>();

        if i7 >= $i1 goto label6;

        $r19 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.WindowList mChildren>;

        $r20 = virtualinvoke $r19.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i7);

        r2 = (com.android.server.wm.ActivityStack) $r20;

        $z0 = virtualinvoke r2.<com.android.server.wm.ActivityStack: boolean isAlwaysOnTop()>();

        if $z0 == 0 goto label3;

        $r23 = r0.<com.android.server.wm.TaskDisplayArea: java.util.ArrayList mTmpAlwaysOnTopStacks>;

        virtualinvoke $r23.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        goto label5;

     label3:
        $z1 = virtualinvoke r2.<com.android.server.wm.ActivityStack: boolean isActivityTypeHome()>();

        if $z1 == 0 goto label4;

        $r22 = r0.<com.android.server.wm.TaskDisplayArea: java.util.ArrayList mTmpHomeStacks>;

        virtualinvoke $r22.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        goto label5;

     label4:
        $r21 = r0.<com.android.server.wm.TaskDisplayArea: java.util.ArrayList mTmpNormalStacks>;

        virtualinvoke $r21.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

     label5:
        i7 = i7 + 1;

        goto label2;

     label6:
        $r8 = r0.<com.android.server.wm.TaskDisplayArea: java.util.ArrayList mTmpHomeStacks>;

        i8 = specialinvoke r0.<com.android.server.wm.TaskDisplayArea: int adjustRootTaskLayer(android.view.SurfaceControl$Transaction,java.util.ArrayList,int,boolean)>(r1, $r8, 0, 0);

        i9 = i8 + 1;

        i0 = i9 + 1;

        r0.<com.android.server.wm.TaskDisplayArea: int mTmpLayerForSplitScreenDividerAnchor> = i9;

        r0.<com.android.server.wm.TaskDisplayArea: int mTmpLayerForAnimationLayer> = i0;

        $r9 = r0.<com.android.server.wm.TaskDisplayArea: java.util.ArrayList mTmpNormalStacks>;

        $i2 = i0 + 1;

        i10 = specialinvoke r0.<com.android.server.wm.TaskDisplayArea: int adjustRootTaskLayer(android.view.SurfaceControl$Transaction,java.util.ArrayList,int,boolean)>(r1, $r9, $i2, 1);

        $r10 = r0.<com.android.server.wm.TaskDisplayArea: java.util.ArrayList mTmpAlwaysOnTopStacks>;

        $i3 = i10 + 1;

        specialinvoke r0.<com.android.server.wm.TaskDisplayArea: int adjustRootTaskLayer(android.view.SurfaceControl$Transaction,java.util.ArrayList,int,boolean)>(r1, $r10, $i3, 0);

        $r11 = r0.<com.android.server.wm.TaskDisplayArea: android.view.SurfaceControl mHomeAppAnimationLayer>;

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setLayer(android.view.SurfaceControl,int)>($r11, i8);

        $r13 = r0.<com.android.server.wm.TaskDisplayArea: android.view.SurfaceControl mAppAnimationLayer>;

        $i5 = r0.<com.android.server.wm.TaskDisplayArea: int mTmpLayerForAnimationLayer>;

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setLayer(android.view.SurfaceControl,int)>($r13, $i5);

        $r15 = r0.<com.android.server.wm.TaskDisplayArea: android.view.SurfaceControl mSplitScreenDividerAnchor>;

        $i6 = r0.<com.android.server.wm.TaskDisplayArea: int mTmpLayerForSplitScreenDividerAnchor>;

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setLayer(android.view.SurfaceControl,int)>($r15, $i6);

        $r17 = r0.<com.android.server.wm.TaskDisplayArea: android.view.SurfaceControl mBoostedAppAnimationLayer>;

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setLayer(android.view.SurfaceControl,int)>($r17, i10);

        return;
    }

    boolean canCreateRemoteAnimationTarget()
    {
        com.android.server.wm.TaskDisplayArea r0;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        return 1;
    }

    com.android.server.wm.ActivityStack createStack(int, int, boolean)
    {
        com.android.server.wm.TaskDisplayArea r0;
        int i0, i1;
        boolean z0;
        com.android.server.wm.ActivityStack $r1;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r1 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack createStack(int,int,boolean,android.content.pm.ActivityInfo,android.content.Intent,boolean)>(i0, i1, z0, null, null, 0);

        return $r1;
    }

    com.android.server.wm.ActivityStack createStack(int, int, boolean, android.content.pm.ActivityInfo, android.content.Intent, boolean)
    {
        com.android.server.wm.TaskDisplayArea r0, $r22;
        int i0, i1, $i2, i3, $i4;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7;
        android.content.Intent r1;
        com.android.server.wm.ActivityStack r2, $r9, $r10, $r23, $r30;
        com.android.server.wm.DisplayContent $r3;
        java.lang.StringBuilder $r4, $r11;
        java.lang.IllegalArgumentException $r7, $r19;
        java.lang.String $r8, $r20;
        com.android.server.wm.RootWindowContainer $r21;
        android.content.pm.ActivityInfo r24;
        com.android.server.wm.ActivityTaskManagerService $r26, $r27, $r28, $r29;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        r24 := @parameter3: android.content.pm.ActivityInfo;

        r1 := @parameter4: android.content.Intent;

        z1 := @parameter5: boolean;

        $r3 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.DisplayContent mDisplayContent>;

        $z2 = $r3.<com.android.server.wm.DisplayContent: boolean mSingleTaskInstance>;

        if $z2 == 0 goto label1;

        $i2 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: int getStackCount()>();

        if $i2 <= 0 goto label1;

        $r21 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        $r22 = virtualinvoke $r21.<com.android.server.wm.RootWindowContainer: com.android.server.wm.TaskDisplayArea getDefaultTaskDisplayArea()>();

        $r23 = virtualinvoke $r22.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack createStack(int,int,boolean,android.content.pm.ActivityInfo,android.content.Intent,boolean)>(i0, i1, z0, r24, r1, z1);

        return $r23;

     label1:
        i3 = i1;

        if i1 != 0 goto label2;

        i3 = i1;

        if z1 != 0 goto label2;

        i3 = 1;

     label2:
        if i3 == 1 goto label4;

        if i3 == 0 goto label4;

        r2 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getStack(int,int)>(0, i3);

        if r2 != null goto label3;

        goto label4;

     label3:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stack=");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of activityType=");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already on display=");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Can\'t have multiple.");

        $r19 = new java.lang.IllegalArgumentException;

        $r20 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20);

        throw $r19;

     label4:
        $r26 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityTaskManagerService mAtmService>;

        $z3 = $r26.<com.android.server.wm.ActivityTaskManagerService: boolean mSupportsMultiWindow>;

        $r27 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityTaskManagerService mAtmService>;

        $z4 = $r27.<com.android.server.wm.ActivityTaskManagerService: boolean mSupportsSplitScreenMultiWindow>;

        $r28 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityTaskManagerService mAtmService>;

        $z5 = $r28.<com.android.server.wm.ActivityTaskManagerService: boolean mSupportsFreeformWindowManagement>;

        $r29 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityTaskManagerService mAtmService>;

        $z6 = $r29.<com.android.server.wm.ActivityTaskManagerService: boolean mSupportsPictureInPicture>;

        $z7 = specialinvoke r0.<com.android.server.wm.TaskDisplayArea: boolean isWindowingModeSupported(int,boolean,boolean,boolean,boolean,int)>(i0, $z3, $z4, $z5, $z6, i3);

        if $z7 == 0 goto label6;

        if i0 != 2 goto label5;

        $r9 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getRootPinnedTask()>();

        if $r9 == null goto label5;

        $r10 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getRootPinnedTask()>();

        virtualinvoke $r10.<com.android.server.wm.ActivityStack: void dismissPip()>();

     label5:
        $i4 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: int getNextStackId()>();

        $r30 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack createStackUnchecked(int,int,int,boolean,android.content.pm.ActivityInfo,android.content.Intent,boolean)>(i0, i3, $i4, z0, r24, r1, z1);

        return $r30;

     label6:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t create stack for unsupported windowingMode=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }

    com.android.server.wm.ActivityStack createStackUnchecked(int, int, int, boolean, android.content.pm.ActivityInfo, android.content.Intent, boolean)
    {
        com.android.server.wm.TaskDisplayArea r0;
        int i0, i1, i2, i3;
        boolean z0, z1;
        android.content.Intent r1;
        com.android.server.wm.ActivityStack $r2, $r4;
        com.android.server.wm.ActivityTaskManagerService $r3;
        android.content.pm.ActivityInfo $r5, r8;
        android.content.pm.ApplicationInfo $r6;
        java.lang.IllegalArgumentException $r7;
        com.android.server.wm.Task r9;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        i1 := @parameter0: int;

        i2 := @parameter1: int;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        r8 := @parameter4: android.content.pm.ActivityInfo;

        r1 := @parameter5: android.content.Intent;

        z1 := @parameter6: boolean;

        if i1 != 2 goto label02;

        if i2 != 1 goto label01;

        goto label02;

     label01:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Stack with windowing mode cannot with non standard activity type.");

        throw $r7;

     label02:
        if r8 != null goto label03;

        $r5 = new android.content.pm.ActivityInfo;

        specialinvoke $r5.<android.content.pm.ActivityInfo: void <init>()>();

        r8 = $r5;

        $r6 = new android.content.pm.ApplicationInfo;

        specialinvoke $r6.<android.content.pm.ApplicationInfo: void <init>()>();

        $r5.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo> = $r6;

        goto label03;

     label03:
        if z1 == 0 goto label04;

        r9 = null;

        goto label05;

     label04:
        r9 = specialinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.Task updateLaunchRootTask(int)>(i1);

     label05:
        if r9 == null goto label06;

        i1 = 0;

        goto label06;

     label06:
        $r2 = new com.android.server.wm.ActivityStack;

        $r3 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityTaskManagerService mAtmService>;

        specialinvoke $r2.<com.android.server.wm.ActivityStack: void <init>(com.android.server.wm.ActivityTaskManagerService,int,int,android.content.pm.ActivityInfo,android.content.Intent,boolean)>($r3, i0, i2, r8, r1, z1);

        i3 = 2147483647;

        if r9 == null goto label09;

        if z0 == 0 goto label07;

        goto label08;

     label07:
        i3 = -2147483648;

     label08:
        virtualinvoke r9.<com.android.server.wm.Task: void addChild(com.android.server.wm.WindowContainer,int)>($r2, i3);

        if z0 == 0 goto label12;

        $r4 = (com.android.server.wm.ActivityStack) r9;

        virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: void positionStackAtTop(com.android.server.wm.ActivityStack,boolean)>($r4, 0);

        goto label12;

     label09:
        if z0 == 0 goto label10;

        goto label11;

     label10:
        i3 = -2147483648;

     label11:
        virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: void addChild(com.android.server.wm.ActivityStack,int)>($r2, i3);

        virtualinvoke $r2.<com.android.server.wm.ActivityStack: void setWindowingMode(int,boolean)>(i1, 1);

     label12:
        return $r2;
    }

    void dump(java.io.PrintWriter, java.lang.String, boolean)
    {
        com.android.server.wm.TaskDisplayArea r0;
        java.io.PrintWriter r1;
        boolean z0;
        com.android.server.wm.ActivityStack r2, $r12, $r13, $r30, $r36;
        java.lang.StringBuilder $r3, $r9, $r14, $r17, $r22, $r27, $r33;
        java.lang.String $r6, $r8, $r20, $r26, $r32, $r38, r39, r42, r46;
        int $i0, i1;
        com.android.server.wm.WindowContainer $r21;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: java.io.PrintWriter;

        r39 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r39);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TaskDisplayArea ");

        $r6 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: java.lang.String getName()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r39);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        r42 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.wm.DisplayArea: void dump(java.io.PrintWriter,java.lang.String,boolean)>(r1, r42, z0);

        $r12 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mPreferredTopFocusableStack>;

        if $r12 == null goto label1;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mPreferredTopFocusableStack=");

        $r36 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mPreferredTopFocusableStack>;

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r36);

        $r38 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r38);

     label1:
        $r13 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mLastFocusedStack>;

        if $r13 == null goto label2;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mLastFocusedStack=");

        $r30 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mLastFocusedStack>;

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30);

        $r32 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r32);

     label2:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        r46 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Application tokens in top down Z order:");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r20);

        $i0 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: int getChildCount()>();

        i1 = $i0 - 1;

     label3:
        if i1 < 0 goto label4;

        $r21 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.WindowContainer getChildAt(int)>(i1);

        r2 = (com.android.server.wm.ActivityStack) $r21;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("* ");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r26);

        virtualinvoke r2.<com.android.server.wm.ActivityStack: void dump(java.io.PrintWriter,java.lang.String,boolean)>(r1, r46, z0);

        i1 = i1 + -1;

        goto label3;

     label4:
        return;
    }

    void ensureActivitiesVisible(com.android.server.wm.ActivityRecord, int, boolean, boolean)
    {
        com.android.server.wm.TaskDisplayArea r0;
        int i0, $i1, i2;
        boolean z0, z1;
        com.android.server.wm.ActivityTaskManagerService $r1, $r3, $r7;
        com.android.server.wm.ActivityStackSupervisor $r2, $r4, $r8;
        com.android.server.wm.ActivityStack $r5;
        java.lang.Throwable $r6;
        com.android.server.wm.ActivityRecord r9;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r9 := @parameter0: com.android.server.wm.ActivityRecord;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r1 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityTaskManagerService mAtmService>;

        $r2 = $r1.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r2.<com.android.server.wm.ActivityStackSupervisor: void beginActivityVisibilityUpdate()>();

     label1:
        $i1 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: int getStackCount()>();

        i2 = $i1 - 1;

     label2:
        if i2 < 0 goto label5;

     label3:
        $r5 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getStackAt(int)>(i2);

        virtualinvoke $r5.<com.android.server.wm.ActivityStack: void ensureActivitiesVisible(com.android.server.wm.ActivityRecord,int,boolean,boolean)>(r9, i0, z0, z1);

     label4:
        i2 = i2 + -1;

        goto label2;

     label5:
        $r3 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityTaskManagerService mAtmService>;

        $r4 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r4.<com.android.server.wm.ActivityStackSupervisor: void endActivityVisibilityUpdate()>();

        return;

     label6:
        $r6 := @caughtexception;

        $r7 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityTaskManagerService mAtmService>;

        $r8 = $r7.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r8.<com.android.server.wm.ActivityStackSupervisor: void endActivityVisibilityUpdate()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
    }

    void findTaskLocked(com.android.server.wm.ActivityRecord, boolean, com.android.server.wm.RootWindowContainer$FindTaskResult)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityRecord r1, $r7;
        boolean z0, $z1, $z2, $z3;
        com.android.server.wm.RootWindowContainer$FindTaskResult r2, $r4, $r5, $r6, $r8, $r9, $r10;
        com.android.server.wm.ActivityStack r3;
        int $i0, i1;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        z0 := @parameter1: boolean;

        r2 := @parameter2: com.android.server.wm.RootWindowContainer$FindTaskResult;

        $r4 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.RootWindowContainer$FindTaskResult mTmpFindTaskResult>;

        virtualinvoke $r4.<com.android.server.wm.RootWindowContainer$FindTaskResult: void clear()>();

        $i0 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: int getStackCount()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label5;

        r3 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getStackAt(int)>(i1);

        $z1 = virtualinvoke r1.<com.android.server.wm.ActivityRecord: boolean hasCompatibleActivityType(com.android.server.wm.ConfigurationContainer)>(r3);

        if $z1 != 0 goto label2;

        $z3 = virtualinvoke r3.<com.android.server.wm.ActivityStack: boolean isLeafTask()>();

        if $z3 == 0 goto label2;

        goto label4;

     label2:
        $r5 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.RootWindowContainer$FindTaskResult mTmpFindTaskResult>;

        virtualinvoke $r5.<com.android.server.wm.RootWindowContainer$FindTaskResult: void process(com.android.server.wm.ActivityRecord,com.android.server.wm.ActivityStack)>(r1, r3);

        $r6 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.RootWindowContainer$FindTaskResult mTmpFindTaskResult>;

        $r7 = $r6.<com.android.server.wm.RootWindowContainer$FindTaskResult: com.android.server.wm.ActivityRecord mRecord>;

        if $r7 == null goto label4;

        $r8 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.RootWindowContainer$FindTaskResult mTmpFindTaskResult>;

        $z2 = $r8.<com.android.server.wm.RootWindowContainer$FindTaskResult: boolean mIdealMatch>;

        if $z2 == 0 goto label3;

        $r10 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.RootWindowContainer$FindTaskResult mTmpFindTaskResult>;

        virtualinvoke r2.<com.android.server.wm.RootWindowContainer$FindTaskResult: void setTo(com.android.server.wm.RootWindowContainer$FindTaskResult)>($r10);

        return;

     label3:
        if z0 == 0 goto label4;

        $r9 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.RootWindowContainer$FindTaskResult mTmpFindTaskResult>;

        virtualinvoke r2.<com.android.server.wm.RootWindowContainer$FindTaskResult: void setTo(com.android.server.wm.RootWindowContainer$FindTaskResult)>($r9);

     label4:
        i1 = i1 + -1;

        goto label1;

     label5:
        return;
    }

    boolean forAllWindows(com.android.internal.util.ToBooleanFunction, boolean)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.internal.util.ToBooleanFunction r1;
        boolean z0, $z1, $z2, $z3, $z4;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: com.android.internal.util.ToBooleanFunction;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label2;

        $z3 = specialinvoke r0.<com.android.server.wm.DisplayArea: boolean forAllWindows(com.android.internal.util.ToBooleanFunction,boolean)>(r1, z0);

        if $z3 == 0 goto label1;

        return 1;

     label1:
        $z4 = specialinvoke r0.<com.android.server.wm.TaskDisplayArea: boolean forAllExitingAppTokenWindows(com.android.internal.util.ToBooleanFunction,boolean)>(r1, z0);

        if $z4 == 0 goto label4;

        return 1;

     label2:
        $z1 = specialinvoke r0.<com.android.server.wm.TaskDisplayArea: boolean forAllExitingAppTokenWindows(com.android.internal.util.ToBooleanFunction,boolean)>(r1, z0);

        if $z1 == 0 goto label3;

        return 1;

     label3:
        $z2 = specialinvoke r0.<com.android.server.wm.DisplayArea: boolean forAllWindows(com.android.internal.util.ToBooleanFunction,boolean)>(r1, z0);

        if $z2 == 0 goto label4;

        return 1;

     label4:
        return 0;
    }

    android.view.SurfaceControl getAppAnimationLayer(int)
    {
        com.android.server.wm.TaskDisplayArea r0;
        int i0;
        android.view.SurfaceControl $r1, $r2, $r3;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        i0 := @parameter0: int;

        if i0 == 1 goto label2;

        if i0 == 2 goto label1;

        $r3 = r0.<com.android.server.wm.TaskDisplayArea: android.view.SurfaceControl mAppAnimationLayer>;

        return $r3;

     label1:
        $r2 = r0.<com.android.server.wm.TaskDisplayArea: android.view.SurfaceControl mHomeAppAnimationLayer>;

        return $r2;

     label2:
        $r1 = r0.<com.android.server.wm.TaskDisplayArea: android.view.SurfaceControl mBoostedAppAnimationLayer>;

        return $r1;
    }

    int getDisplayId()
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.DisplayContent $r1;
        int $i0;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        $r1 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.DisplayContent mDisplayContent>;

        $i0 = virtualinvoke $r1.<com.android.server.wm.DisplayContent: int getDisplayId()>();

        return $i0;
    }

    com.android.server.wm.ActivityRecord getFocusedActivity()
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityStack r1;
        com.android.server.wm.WindowProcessController $r2, $r3;
        com.android.server.wm.ActivityRecord r4, r5, r6;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getFocusedStack()>();

        if r1 != null goto label1;

        return null;

     label1:
        r4 = virtualinvoke r1.<com.android.server.wm.ActivityStack: com.android.server.wm.ActivityRecord getResumedActivity()>();

        if r4 == null goto label2;

        r5 = r4;

        $r3 = r4.<com.android.server.wm.ActivityRecord: com.android.server.wm.WindowProcessController app>;

        if $r3 != null goto label4;

     label2:
        r6 = r1.<com.android.server.wm.ActivityStack: com.android.server.wm.ActivityRecord mPausingActivity>;

        if r6 == null goto label3;

        r5 = r6;

        $r2 = r6.<com.android.server.wm.ActivityRecord: com.android.server.wm.WindowProcessController app>;

        if $r2 != null goto label4;

     label3:
        r5 = virtualinvoke r1.<com.android.server.wm.ActivityStack: com.android.server.wm.ActivityRecord topRunningActivity(boolean)>(1);

     label4:
        return r5;
    }

    com.android.server.wm.ActivityStack getFocusedStack()
    {
        com.android.server.wm.TaskDisplayArea r0;
        int $i0, i1;
        boolean $z0;
        com.android.server.wm.ActivityStack r1, r2;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mPreferredTopFocusableStack>;

        if r1 == null goto label1;

        return r1;

     label1:
        $i0 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: int getStackCount()>();

        i1 = $i0 - 1;

     label2:
        if i1 < 0 goto label4;

        r2 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getStackAt(int)>(i1);

        $z0 = virtualinvoke r2.<com.android.server.wm.ActivityStack: boolean isFocusableAndVisible()>();

        if $z0 == 0 goto label3;

        return r2;

     label3:
        i1 = i1 + -1;

        goto label2;

     label4:
        return null;
    }

    com.android.server.wm.ActivityRecord getHomeActivity()
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.RootWindowContainer $r1;
        int $i0;
        com.android.server.wm.ActivityRecord $r2;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        $r1 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        $i0 = $r1.<com.android.server.wm.RootWindowContainer: int mCurrentUser>;

        $r2 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityRecord getHomeActivityForUser(int)>($i0);

        return $r2;
    }

    com.android.server.wm.ActivityRecord getHomeActivityForUser(int)
    {
        com.android.server.wm.TaskDisplayArea r0;
        int i0;
        com.android.internal.util.function.pooled.PooledPredicate r1;
        com.android.server.wm.'-$$Lambda$TaskDisplayArea$XcH01_sSElIBkfdzcfbGZuAMtmk' $r2;
        com.android.internal.util.function.pooled.ArgumentPlaceholder $r3;
        java.lang.Integer $r4;
        com.android.server.wm.ActivityStack r5;
        com.android.server.wm.ActivityRecord r6;
        java.util.function.BiPredicate r7;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        i0 := @parameter0: int;

        r5 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getRootHomeTask()>();

        if r5 != null goto label1;

        return null;

     label1:
        $r2 = <com.android.server.wm._$$Lambda$TaskDisplayArea$XcH01_sSElIBkfdzcfbGZuAMtmk: com.android.server.wm.'-$$Lambda$TaskDisplayArea$XcH01_sSElIBkfdzcfbGZuAMtmk' INSTANCE>;

        $r3 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: com.android.internal.util.function.pooled.ArgumentPlaceholder __(java.lang.Class)>(class "Lcom/android/server/wm/ActivityRecord;");

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r7 = (java.util.function.BiPredicate) $r2;

        r1 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: com.android.internal.util.function.pooled.PooledPredicate obtainPredicate(java.util.function.BiPredicate,com.android.internal.util.function.pooled.ArgumentPlaceholder,java.lang.Object)>(r7, $r3, $r4);

        r6 = virtualinvoke r5.<com.android.server.wm.ActivityStack: com.android.server.wm.ActivityRecord getActivity(java.util.function.Predicate)>(r1);

        interfaceinvoke r1.<com.android.internal.util.function.pooled.PooledPredicate: void recycle()>();

        return r6;
    }

    int getIndexOf(com.android.server.wm.ActivityStack)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityStack r1;
        com.android.server.wm.WindowList $r2;
        int $i0;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: com.android.server.wm.ActivityStack;

        $r2 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.WindowList mChildren>;

        $i0 = virtualinvoke $r2.<com.android.server.wm.WindowList: int indexOf(java.lang.Object)>(r1);

        return $i0;
    }

    com.android.server.wm.ActivityStack getLastFocusedStack()
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityStack $r1;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        $r1 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mLastFocusedStack>;

        return $r1;
    }

    com.android.server.wm.ActivityStack getNextFocusableStack(com.android.server.wm.ActivityStack, boolean)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityStack r1, r2, r3;
        boolean z0, $z1, $z2, $z3;
        int $i0, i1, i2;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: com.android.server.wm.ActivityStack;

        z0 := @parameter1: boolean;

        if r1 == null goto label1;

        i1 = virtualinvoke r1.<com.android.server.wm.ActivityStack: int getWindowingMode()>();

        goto label2;

     label1:
        i1 = 0;

     label2:
        r3 = null;

        $i0 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: int getStackCount()>();

        i2 = $i0 - 1;

     label3:
        if i2 < 0 goto label9;

        r2 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getStackAt(int)>(i2);

        if z0 == 0 goto label4;

        if r2 != r1 goto label4;

        goto label6;

     label4:
        $z1 = virtualinvoke r2.<com.android.server.wm.ActivityStack: boolean isFocusableAndVisible()>();

        if $z1 != 0 goto label5;

        goto label6;

     label5:
        if i1 != 4 goto label7;

        if r3 != null goto label7;

        $z3 = virtualinvoke r2.<com.android.server.wm.ActivityStack: boolean inSplitScreenPrimaryWindowingMode()>();

        if $z3 == 0 goto label7;

        r3 = r2;

     label6:
        i2 = i2 + -1;

        goto label3;

     label7:
        if r3 == null goto label8;

        $z2 = virtualinvoke r2.<com.android.server.wm.ActivityStack: boolean inSplitScreenSecondaryWindowingMode()>();

        if $z2 == 0 goto label8;

        return r3;

     label8:
        return r2;

     label9:
        return r3;
    }

    int getNextStackId()
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityTaskManagerService $r1;
        com.android.server.wm.ActivityStackSupervisor $r2;
        int $i0;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        $r1 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityTaskManagerService mAtmService>;

        $r2 = $r1.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityStackSupervisor mStackSupervisor>;

        $i0 = virtualinvoke $r2.<com.android.server.wm.ActivityStackSupervisor: int getNextTaskIdForUser()>();

        return $i0;
    }

    com.android.server.wm.ActivityStack getOrCreateRootHomeTask()
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityStack $r1;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        $r1 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getOrCreateRootHomeTask(boolean)>(0);

        return $r1;
    }

    com.android.server.wm.ActivityStack getOrCreateRootHomeTask(boolean)
    {
        com.android.server.wm.TaskDisplayArea r0;
        boolean z0, $z1;
        com.android.server.wm.ActivityStack r1, r3;
        com.android.server.wm.DisplayContent $r2;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        z0 := @parameter0: boolean;

        r1 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getRootHomeTask()>();

        r3 = r1;

        if r1 != null goto label1;

        r3 = r1;

        $r2 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.DisplayContent mDisplayContent>;

        $z1 = virtualinvoke $r2.<com.android.server.wm.DisplayContent: boolean supportsSystemDecorations()>();

        if $z1 == 0 goto label1;

        r3 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack createStack(int,int,boolean)>(0, 2, z0);

     label1:
        return r3;
    }

    com.android.server.wm.ActivityStack getOrCreateStack(int, int, boolean)
    {
        com.android.server.wm.TaskDisplayArea r0;
        int i0, i1;
        boolean z0;
        com.android.server.wm.ActivityStack $r1;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r1 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getOrCreateStack(int,int,boolean,android.content.Intent,com.android.server.wm.Task)>(i0, i1, z0, null, null);

        return $r1;
    }

    com.android.server.wm.ActivityStack getOrCreateStack(int, int, boolean, android.content.Intent, com.android.server.wm.Task)
    {
        com.android.server.wm.TaskDisplayArea r0, $r3;
        int i0, i1, i2, i3, $i4;
        boolean z0, $z1, $z2;
        com.android.server.wm.Task r1, r8;
        com.android.server.wm.ActivityStack $r2, r9, r10;
        com.android.server.wm.WindowContainer $r4, $r5, $r6;
        android.content.Intent r7;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        r7 := @parameter3: android.content.Intent;

        r8 := @parameter4: com.android.server.wm.Task;

        if i0 == 0 goto label01;

        i2 = i0;

        goto label02;

     label01:
        i2 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: int getWindowingMode()>();

     label02:
        $z1 = staticinvoke <com.android.server.wm.DisplayContent: boolean alwaysCreateStack(int,int)>(i2, i1);

        if $z1 != 0 goto label04;

        r9 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getStack(int,int)>(i0, i1);

        if r9 == null goto label03;

        return r9;

     label03:
        goto label13;

     label04:
        if r8 == null goto label13;

        r10 = (com.android.server.wm.ActivityStack) r8;

        if z0 == 0 goto label05;

        i3 = 2147483647;

        goto label06;

     label05:
        i3 = -2147483648;

     label06:
        r1 = specialinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.Task updateLaunchRootTask(int)>(i0);

        if r1 == null goto label08;

        $r5 = virtualinvoke r10.<com.android.server.wm.ActivityStack: com.android.server.wm.WindowContainer getParent()>();

        if $r5 != null goto label07;

        virtualinvoke r1.<com.android.server.wm.Task: void addChild(com.android.server.wm.WindowContainer,int)>(r10, i3);

        goto label11;

     label07:
        $r6 = virtualinvoke r10.<com.android.server.wm.ActivityStack: com.android.server.wm.WindowContainer getParent()>();

        if $r6 == r1 goto label11;

        virtualinvoke r10.<com.android.server.wm.ActivityStack: void reparent(com.android.server.wm.WindowContainer,int)>(r1, i3);

        goto label11;

     label08:
        $r3 = virtualinvoke r10.<com.android.server.wm.ActivityStack: com.android.server.wm.TaskDisplayArea getDisplayArea()>();

        if $r3 != r0 goto label09;

        $z2 = virtualinvoke r10.<com.android.server.wm.ActivityStack: boolean isRootTask()>();

        if $z2 != 0 goto label11;

     label09:
        $r4 = virtualinvoke r10.<com.android.server.wm.ActivityStack: com.android.server.wm.WindowContainer getParent()>();

        if $r4 != null goto label10;

        virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: void addChild(com.android.server.wm.ActivityStack,int)>(r10, i3);

        goto label11;

     label10:
        virtualinvoke r10.<com.android.server.wm.ActivityStack: void reparent(com.android.server.wm.TaskDisplayArea,boolean)>(r0, z0);

     label11:
        $i4 = virtualinvoke r8.<com.android.server.wm.Task: int getWindowingMode()>();

        if $i4 == i0 goto label12;

        virtualinvoke r8.<com.android.server.wm.Task: void setWindowingMode(int)>(i0);

     label12:
        return r10;

     label13:
        $r2 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack createStack(int,int,boolean,android.content.pm.ActivityInfo,android.content.Intent,boolean)>(i0, i1, z0, null, r7, 0);

        return $r2;
    }

    com.android.server.wm.ActivityStack getOrCreateStack(com.android.server.wm.ActivityRecord, android.app.ActivityOptions, com.android.server.wm.Task, int, boolean)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityRecord r1;
        android.app.ActivityOptions r2;
        com.android.server.wm.Task r3;
        int i0, $i1, i2;
        boolean z0;
        com.android.server.wm.ActivityStack $r4;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        r2 := @parameter1: android.app.ActivityOptions;

        r3 := @parameter2: com.android.server.wm.Task;

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        if r2 == null goto label1;

        i2 = virtualinvoke r2.<android.app.ActivityOptions: int getLaunchWindowingMode()>();

        goto label2;

     label1:
        i2 = 0;

     label2:
        $i1 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: int validateWindowingMode(int,com.android.server.wm.ActivityRecord,com.android.server.wm.Task,int)>(i2, r1, r3, i0);

        $r4 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getOrCreateStack(int,int,boolean,android.content.Intent,com.android.server.wm.Task)>($i1, i0, z0, null, r3);

        return $r4;
    }

    int getOrientation(int)
    {
        com.android.server.wm.TaskDisplayArea r0;
        boolean z0, $z2, $z3, $z4, $z5, z6, $z7;
        com.android.server.wm.Task r1;
        com.android.server.wm.DisplayContent $r2, $r3, $r4, $r9;
        int $i0, $i1, $i2, $i3, i4, i5, i6;
        java.lang.Object[] $r5, $r10;
        com.android.server.wm.ProtoLogGroup $r6, $r11;
        java.lang.Long $r7, $r8, $r12, $r13;
        com.android.server.wm.ActivityStack $r14, r15;
        com.android.server.wm.ActivityRecord r16;
        long l7, l8, l9, l10;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        i4 := @parameter0: int;

        z0 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: boolean isStackVisible(int)>(3);

        if z0 == 0 goto label5;

        r15 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mRootHomeTask>;

        if r15 == null goto label4;

        $z4 = virtualinvoke r15.<com.android.server.wm.ActivityStack: boolean isResizeable()>();

        if $z4 != 0 goto label4;

        $r14 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mRootHomeTask>;

        r1 = virtualinvoke $r14.<com.android.server.wm.ActivityStack: com.android.server.wm.Task getTopMostTask()>();

        r16 = virtualinvoke r1.<com.android.server.wm.Task: com.android.server.wm.ActivityRecord getTopNonFinishingActivity()>();

        if r16 == null goto label1;

        $z5 = r16.<com.android.server.wm.ActivityRecord: boolean mVisibleRequested>;

        if $z5 == 0 goto label1;

        z6 = 1;

        goto label2;

     label1:
        z6 = 0;

     label2:
        $z7 = virtualinvoke r1.<com.android.server.wm.Task: boolean isVisible()>();

        if $z7 != 0 goto label3;

        if z6 == 0 goto label4;

     label3:
        i5 = virtualinvoke r1.<com.android.server.wm.Task: int getOrientation()>();

        if i5 == -2 goto label4;

        return i5;

     label4:
        return -1;

     label5:
        i6 = specialinvoke r0.<com.android.server.wm.DisplayArea: int getOrientation(int)>(i4);

        if i6 == -2 goto label7;

        if i6 == 3 goto label7;

        $z3 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_ORIENTATION_enabled>;

        if $z3 == 0 goto label6;

        l7 = (long) i6;

        $r9 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.DisplayContent mDisplayContent>;

        $i3 = $r9.<com.android.server.wm.DisplayContent: int mDisplayId>;

        l8 = (long) $i3;

        $r11 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_ORIENTATION>;

        $r10 = newarray (java.lang.Object)[2];

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l7);

        $r10[0] = $r12;

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l8);

        $r10[1] = $r13;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void v(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r11, 1381227466, 5, null, $r10);

     label6:
        return i6;

     label7:
        $z2 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_ORIENTATION_enabled>;

        if $z2 == 0 goto label8;

        $r3 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.DisplayContent mDisplayContent>;

        $i1 = virtualinvoke $r3.<com.android.server.wm.DisplayContent: int getLastOrientation()>();

        l9 = (long) $i1;

        $r4 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.DisplayContent mDisplayContent>;

        $i2 = $r4.<com.android.server.wm.DisplayContent: int mDisplayId>;

        l10 = (long) $i2;

        $r6 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_ORIENTATION>;

        $r5 = newarray (java.lang.Object)[2];

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l9);

        $r5[0] = $r7;

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l10);

        $r5[1] = $r8;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void v(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r6, 1640436199, 5, null, $r5);

     label8:
        $r2 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.DisplayContent mDisplayContent>;

        $i0 = virtualinvoke $r2.<com.android.server.wm.DisplayContent: int getLastOrientation()>();

        return $i0;
    }

    com.android.server.wm.ActivityStack getRootHomeTask()
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityStack $r1;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        $r1 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mRootHomeTask>;

        return $r1;
    }

    com.android.server.wm.ActivityStack getRootPinnedTask()
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityStack $r1;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        $r1 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mRootPinnedTask>;

        return $r1;
    }

    com.android.server.wm.ActivityStack getRootRecentsTask()
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityStack $r1;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        $r1 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mRootRecentsTask>;

        return $r1;
    }

    com.android.server.wm.ActivityStack getRootSplitScreenPrimaryTask()
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityStack $r1;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        $r1 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mRootSplitScreenPrimaryTask>;

        return $r1;
    }

    com.android.server.wm.ActivityStack getRootSplitScreenSecondaryTask()
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.WindowList $r1, $r2, $r5;
        int $i0, i1;
        java.lang.Object $r3, $r6;
        com.android.server.wm.ActivityStack $r4, $r7;
        boolean $z0;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        $r1 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.WindowList mChildren>;

        $i0 = virtualinvoke $r1.<com.android.server.wm.WindowList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r2 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.WindowList mChildren>;

        $r3 = virtualinvoke $r2.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i1);

        $r4 = (com.android.server.wm.ActivityStack) $r3;

        $z0 = virtualinvoke $r4.<com.android.server.wm.ActivityStack: boolean inSplitScreenSecondaryWindowingMode()>();

        if $z0 == 0 goto label2;

        $r5 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.WindowList mChildren>;

        $r6 = virtualinvoke $r5.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i1);

        $r7 = (com.android.server.wm.ActivityStack) $r6;

        return $r7;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return null;
    }

    android.view.SurfaceControl getSplitScreenDividerAnchor()
    {
        com.android.server.wm.TaskDisplayArea r0;
        android.view.SurfaceControl $r1;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        $r1 = r0.<com.android.server.wm.TaskDisplayArea: android.view.SurfaceControl mSplitScreenDividerAnchor>;

        return $r1;
    }

    com.android.server.wm.ActivityStack getStack(int)
    {
        com.android.server.wm.TaskDisplayArea r0;
        int i0, $i1, $i2, i3;
        com.android.server.wm.ActivityStack r1;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: int getStackCount()>();

        i3 = $i1 - 1;

     label1:
        if i3 < 0 goto label3;

        r1 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getStackAt(int)>(i3);

        $i2 = virtualinvoke r1.<com.android.server.wm.ActivityStack: int getRootTaskId()>();

        if $i2 != i0 goto label2;

        return r1;

     label2:
        i3 = i3 + -1;

        goto label1;

     label3:
        return null;
    }

    com.android.server.wm.ActivityStack getStack(int, int)
    {
        com.android.server.wm.TaskDisplayArea r0;
        int i0, i1, $i2, $i3, i4;
        com.android.server.wm.ActivityStack r1, $r3, $r4, $r5, $r6;
        com.android.server.wm.WindowContainer $r2;
        boolean $z0;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 != 2 goto label1;

        $r6 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mRootHomeTask>;

        return $r6;

     label1:
        if i1 != 3 goto label2;

        $r5 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mRootRecentsTask>;

        return $r5;

     label2:
        if i0 != 2 goto label3;

        $r4 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mRootPinnedTask>;

        return $r4;

     label3:
        if i0 != 3 goto label4;

        $r3 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mRootSplitScreenPrimaryTask>;

        return $r3;

     label4:
        $i2 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: int getChildCount()>();

        i4 = $i2 - 1;

     label5:
        if i4 < 0 goto label8;

        $r2 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.WindowContainer getChildAt(int)>(i4);

        r1 = (com.android.server.wm.ActivityStack) $r2;

        if i1 != 0 goto label6;

        $i3 = virtualinvoke r1.<com.android.server.wm.ActivityStack: int getWindowingMode()>();

        if i0 != $i3 goto label6;

        return r1;

     label6:
        $z0 = virtualinvoke r1.<com.android.server.wm.ActivityStack: boolean isCompatible(int,int)>(i0, i1);

        if $z0 == 0 goto label7;

        return r1;

     label7:
        i4 = i4 + -1;

        goto label5;

     label8:
        return null;
    }

    protected com.android.server.wm.ActivityStack getStackAt(int)
    {
        com.android.server.wm.TaskDisplayArea r0;
        int i0;
        com.android.server.wm.WindowList $r1;
        java.lang.Object $r2;
        com.android.server.wm.ActivityStack $r3;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.WindowList mChildren>;

        $r2 = virtualinvoke $r1.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i0);

        $r3 = (com.android.server.wm.ActivityStack) $r2;

        return $r3;
    }

    protected int getStackCount()
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.WindowList $r1;
        int $i0;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        $r1 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.WindowList mChildren>;

        $i0 = virtualinvoke $r1.<com.android.server.wm.WindowList: int size()>();

        return $i0;
    }

    com.android.server.wm.ActivityStack getTopStack()
    {
        com.android.server.wm.TaskDisplayArea r0;
        int i0, $i1;
        com.android.server.wm.WindowContainer $r1;
        com.android.server.wm.ActivityStack r2;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        i0 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: int getChildCount()>();

        if i0 <= 0 goto label1;

        $i1 = i0 - 1;

        $r1 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.WindowContainer getChildAt(int)>($i1);

        r2 = (com.android.server.wm.ActivityStack) $r1;

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    com.android.server.wm.ActivityStack getTopStackInWindowingMode(int)
    {
        com.android.server.wm.TaskDisplayArea r0;
        int i0;
        com.android.server.wm.ActivityStack $r1;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getStack(int,int)>(i0, 0);

        return $r1;
    }

    java.util.ArrayList getVisibleTasks()
    {
        com.android.server.wm.TaskDisplayArea r0;
        java.util.ArrayList $r2;
        com.android.server.wm._$$Lambda$TaskDisplayArea$ajDQ2FQogtLzT2xeLoBFC1sWS3U $r3;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = new com.android.server.wm._$$Lambda$TaskDisplayArea$ajDQ2FQogtLzT2xeLoBFC1sWS3U;

        specialinvoke $r3.<com.android.server.wm._$$Lambda$TaskDisplayArea$ajDQ2FQogtLzT2xeLoBFC1sWS3U: void <init>(java.util.ArrayList)>($r2);

        virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: void forAllTasks(java.util.function.Consumer)>($r3);

        return $r2;
    }

    boolean hasPinnedTask()
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityStack $r1;
        boolean z0;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        $r1 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getRootPinnedTask()>();

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    boolean isOnTop()
    {
        com.android.server.wm.TaskDisplayArea r0;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        return 1;
    }

    boolean isRemoved()
    {
        com.android.server.wm.TaskDisplayArea r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        $z0 = r0.<com.android.server.wm.TaskDisplayArea: boolean mRemoved>;

        return $z0;
    }

    boolean isSplitScreenModeActivated()
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityStack r1;
        boolean $z0, z1;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getRootSplitScreenPrimaryTask()>();

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<com.android.server.wm.Task: boolean hasChild()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    boolean isStackVisible(int)
    {
        com.android.server.wm.TaskDisplayArea r0;
        int i0;
        com.android.server.wm.ActivityStack r1;
        boolean $z0, z1;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getTopStackInWindowingMode(int)>(i0);

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<com.android.server.wm.ActivityStack: boolean isVisible()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    boolean isTopNotPinnedStack(com.android.server.wm.ActivityStack)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityStack r1, r2;
        boolean $z0, z1;
        int i0, i1;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: com.android.server.wm.ActivityStack;

        i0 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: int getStackCount()>();

        z1 = 1;

        i1 = i0 + -1;

     label1:
        if i1 < 0 goto label5;

        r2 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getStackAt(int)>(i1);

        $z0 = virtualinvoke r2.<com.android.server.wm.ActivityStack: boolean inPinnedWindowingMode()>();

        if $z0 != 0 goto label4;

        if r2 != r1 goto label2;

        goto label3;

     label2:
        z1 = 0;

     label3:
        return z1;

     label4:
        i1 = i1 + -1;

        goto label1;

     label5:
        return 0;
    }

    boolean isTopStack(com.android.server.wm.ActivityStack)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityStack r1, $r2;
        boolean z0;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: com.android.server.wm.ActivityStack;

        $r2 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getTopStack()>();

        if r1 != $r2 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    boolean isValidWindowingMode(int, com.android.server.wm.ActivityRecord, com.android.server.wm.Task, int)
    {
        com.android.server.wm.TaskDisplayArea r0;
        int i0, i1;
        com.android.server.wm.ActivityRecord r1;
        com.android.server.wm.Task r2;
        boolean z0, z1, z2, z3, $z4, z5, z6, z7, z8, z9;
        com.android.server.wm.ActivityTaskManagerService $r3, $r4, $r5, $r6;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.wm.ActivityRecord;

        r2 := @parameter2: com.android.server.wm.Task;

        i1 := @parameter3: int;

        $r3 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityTaskManagerService mAtmService>;

        z0 = $r3.<com.android.server.wm.ActivityTaskManagerService: boolean mSupportsMultiWindow>;

        $r4 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityTaskManagerService mAtmService>;

        z1 = $r4.<com.android.server.wm.ActivityTaskManagerService: boolean mSupportsSplitScreenMultiWindow>;

        $r5 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityTaskManagerService mAtmService>;

        z2 = $r5.<com.android.server.wm.ActivityTaskManagerService: boolean mSupportsFreeformWindowManagement>;

        $r6 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityTaskManagerService mAtmService>;

        z3 = $r6.<com.android.server.wm.ActivityTaskManagerService: boolean mSupportsPictureInPicture>;

        z5 = z0;

        z6 = z1;

        z7 = z2;

        z8 = z3;

        if z0 == 0 goto label2;

        if r2 == null goto label1;

        z5 = virtualinvoke r2.<com.android.server.wm.Task: boolean isResizeable()>();

        z6 = virtualinvoke r2.<com.android.server.wm.Task: boolean supportsSplitScreenWindowingMode()>();

        z7 = z2;

        z8 = z3;

        goto label2;

     label1:
        z5 = z0;

        z6 = z1;

        z7 = z2;

        z8 = z3;

        if r1 == null goto label2;

        z5 = virtualinvoke r1.<com.android.server.wm.ActivityRecord: boolean isResizeable()>();

        z6 = virtualinvoke r1.<com.android.server.wm.ActivityRecord: boolean supportsSplitScreenWindowingMode()>();

        z7 = virtualinvoke r1.<com.android.server.wm.ActivityRecord: boolean supportsFreeform()>();

        z8 = virtualinvoke r1.<com.android.server.wm.ActivityRecord: boolean supportsPictureInPicture()>();

     label2:
        if i0 == 0 goto label3;

        $z4 = specialinvoke r0.<com.android.server.wm.TaskDisplayArea: boolean isWindowingModeSupported(int,boolean,boolean,boolean,boolean,int)>(i0, z5, z6, z7, z8, i1);

        if $z4 == 0 goto label3;

        z9 = 1;

        goto label4;

     label3:
        z9 = 0;

     label4:
        return z9;
    }

    public void lambda$moveSplitScreenTasksToFullScreen$2$TaskDisplayArea(com.android.server.wm.Task)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.Task r1;
        boolean $z0, $z1, $z2;
        java.util.ArrayList $r2;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: com.android.server.wm.Task;

        $z0 = r1.<com.android.server.wm.Task: boolean mCreatedByOrganizer>;

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r1.<com.android.server.wm.Task: boolean inSplitScreenWindowingMode()>();

        if $z1 == 0 goto label1;

        $z2 = virtualinvoke r1.<com.android.server.wm.Task: boolean hasChild()>();

        if $z2 == 0 goto label1;

        $r2 = r0.<com.android.server.wm.TaskDisplayArea: java.util.ArrayList mTmpTasks>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label1:
        return;
    }

    public void lambda$onParentChanged$1$TaskDisplayArea()
    {
        com.android.server.wm.TaskDisplayArea r0;
        android.view.SurfaceControl$Builder $r1, $r2, $r3, $r5, $r6, $r7, $r9, $r10, $r11, $r13, $r14, $r15;
        android.view.SurfaceControl $r4, $r8, $r12, $r16, $r18, $r20, $r22, $r24;
        android.view.SurfaceControl$Transaction $r17, $r19, $r21, $r23;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        $r1 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: android.view.SurfaceControl$Builder makeChildSurface(com.android.server.wm.WindowContainer)>(null);

        $r2 = virtualinvoke $r1.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setName(java.lang.String)>("animationLayer");

        $r3 = virtualinvoke $r2.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setCallsite(java.lang.String)>("TaskDisplayArea.onParentChanged");

        $r4 = virtualinvoke $r3.<android.view.SurfaceControl$Builder: android.view.SurfaceControl build()>();

        r0.<com.android.server.wm.TaskDisplayArea: android.view.SurfaceControl mAppAnimationLayer> = $r4;

        $r5 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: android.view.SurfaceControl$Builder makeChildSurface(com.android.server.wm.WindowContainer)>(null);

        $r6 = virtualinvoke $r5.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setName(java.lang.String)>("boostedAnimationLayer");

        $r7 = virtualinvoke $r6.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setCallsite(java.lang.String)>("TaskDisplayArea.onParentChanged");

        $r8 = virtualinvoke $r7.<android.view.SurfaceControl$Builder: android.view.SurfaceControl build()>();

        r0.<com.android.server.wm.TaskDisplayArea: android.view.SurfaceControl mBoostedAppAnimationLayer> = $r8;

        $r9 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: android.view.SurfaceControl$Builder makeChildSurface(com.android.server.wm.WindowContainer)>(null);

        $r10 = virtualinvoke $r9.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setName(java.lang.String)>("homeAnimationLayer");

        $r11 = virtualinvoke $r10.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setCallsite(java.lang.String)>("TaskDisplayArea.onParentChanged");

        $r12 = virtualinvoke $r11.<android.view.SurfaceControl$Builder: android.view.SurfaceControl build()>();

        r0.<com.android.server.wm.TaskDisplayArea: android.view.SurfaceControl mHomeAppAnimationLayer> = $r12;

        $r13 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: android.view.SurfaceControl$Builder makeChildSurface(com.android.server.wm.WindowContainer)>(null);

        $r14 = virtualinvoke $r13.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setName(java.lang.String)>("splitScreenDividerAnchor");

        $r15 = virtualinvoke $r14.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setCallsite(java.lang.String)>("TaskDisplayArea.onParentChanged");

        $r16 = virtualinvoke $r15.<android.view.SurfaceControl$Builder: android.view.SurfaceControl build()>();

        r0.<com.android.server.wm.TaskDisplayArea: android.view.SurfaceControl mSplitScreenDividerAnchor> = $r16;

        $r17 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: android.view.SurfaceControl$Transaction getSyncTransaction()>();

        $r18 = r0.<com.android.server.wm.TaskDisplayArea: android.view.SurfaceControl mAppAnimationLayer>;

        $r19 = virtualinvoke $r17.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction show(android.view.SurfaceControl)>($r18);

        $r20 = r0.<com.android.server.wm.TaskDisplayArea: android.view.SurfaceControl mBoostedAppAnimationLayer>;

        $r21 = virtualinvoke $r19.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction show(android.view.SurfaceControl)>($r20);

        $r22 = r0.<com.android.server.wm.TaskDisplayArea: android.view.SurfaceControl mHomeAppAnimationLayer>;

        $r23 = virtualinvoke $r21.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction show(android.view.SurfaceControl)>($r22);

        $r24 = r0.<com.android.server.wm.TaskDisplayArea: android.view.SurfaceControl mSplitScreenDividerAnchor>;

        virtualinvoke $r23.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction show(android.view.SurfaceControl)>($r24);

        return;
    }

    void moveHomeActivityToTop(java.lang.String)
    {
        com.android.server.wm.TaskDisplayArea r0;
        java.lang.String r1;
        com.android.server.wm.ActivityRecord r2;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityRecord getHomeActivity()>();

        if r2 != null goto label1;

        virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: void moveHomeStackToFront(java.lang.String)>(r1);

        return;

     label1:
        virtualinvoke r2.<com.android.server.wm.ActivityRecord: boolean moveFocusableActivityToTop(java.lang.String)>(r1);

        return;
    }

    void moveHomeStackToFront(java.lang.String)
    {
        com.android.server.wm.TaskDisplayArea r0;
        java.lang.String r1;
        com.android.server.wm.ActivityStack r2;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getOrCreateRootHomeTask()>();

        if r2 == null goto label1;

        virtualinvoke r2.<com.android.server.wm.ActivityStack: void moveToFront(java.lang.String)>(r1);

     label1:
        return;
    }

    void moveStackBehindBottomMostVisibleStack(com.android.server.wm.ActivityStack)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityStack r1, r7;
        boolean z0, $z2, z3, $z4;
        int i0, $i1, i2, i3, i4;
        com.android.server.wm.WindowContainer $r2, $r3, $r4, $r5, $r6;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: com.android.server.wm.ActivityStack;

        $z2 = virtualinvoke r1.<com.android.server.wm.ActivityStack: boolean shouldBeVisible(com.android.server.wm.ActivityRecord)>(null);

        if $z2 == 0 goto label01;

        return;

     label01:
        z0 = virtualinvoke r1.<com.android.server.wm.ActivityStack: boolean isRootTask()>();

        if z0 == 0 goto label02;

        virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: void positionStackAtBottom(com.android.server.wm.ActivityStack)>(r1);

        goto label03;

     label02:
        $r2 = virtualinvoke r1.<com.android.server.wm.ActivityStack: com.android.server.wm.WindowContainer getParent()>();

        virtualinvoke $r2.<com.android.server.wm.WindowContainer: void positionChildAt(int,com.android.server.wm.WindowContainer,boolean)>(-2147483648, r1, 0);

     label03:
        if z0 == 0 goto label04;

        i2 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: int getStackCount()>();

        goto label05;

     label04:
        $r3 = virtualinvoke r1.<com.android.server.wm.ActivityStack: com.android.server.wm.WindowContainer getParent()>();

        i2 = virtualinvoke $r3.<com.android.server.wm.WindowContainer: int getChildCount()>();

     label05:
        i3 = 0;

     label06:
        if i3 >= i2 goto label14;

        if z0 == 0 goto label07;

        r7 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getStackAt(int)>(i3);

        goto label08;

     label07:
        $r4 = virtualinvoke r1.<com.android.server.wm.ActivityStack: com.android.server.wm.WindowContainer getParent()>();

        $r5 = virtualinvoke $r4.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getChildAt(int)>(i3);

        r7 = (com.android.server.wm.ActivityStack) $r5;

     label08:
        if r7 != r1 goto label09;

        goto label13;

     label09:
        i0 = virtualinvoke r7.<com.android.server.wm.ActivityStack: int getWindowingMode()>();

        z3 = 1;

        if i0 == 1 goto label11;

        if i0 != 4 goto label10;

        z3 = 1;

        goto label11;

     label10:
        z3 = 0;

     label11:
        $z4 = virtualinvoke r7.<com.android.server.wm.ActivityStack: boolean shouldBeVisible(com.android.server.wm.ActivityRecord)>(null);

        if $z4 == 0 goto label13;

        if z3 == 0 goto label13;

        $i1 = i3 - 1;

        i4 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i1);

        if z0 == 0 goto label12;

        virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: void positionStackAt(com.android.server.wm.ActivityStack,int)>(r1, i4);

        goto label14;

     label12:
        $r6 = virtualinvoke r1.<com.android.server.wm.ActivityStack: com.android.server.wm.WindowContainer getParent()>();

        virtualinvoke $r6.<com.android.server.wm.WindowContainer: void positionChildAt(int,com.android.server.wm.WindowContainer,boolean)>(i4, r1, 0);

        goto label14;

     label13:
        i3 = i3 + 1;

        goto label06;

     label14:
        return;
    }

    void moveStackBehindStack(com.android.server.wm.ActivityStack, com.android.server.wm.ActivityStack)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityStack r1, r2;
        com.android.server.wm.WindowContainer r3, $r4;
        int i0, i1, i2;
        com.android.server.wm.WindowList $r5, $r6;
        boolean $z0;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: com.android.server.wm.ActivityStack;

        r2 := @parameter1: com.android.server.wm.ActivityStack;

        if r2 == null goto label7;

        if r2 != r1 goto label1;

        goto label7;

     label1:
        r3 = virtualinvoke r1.<com.android.server.wm.ActivityStack: com.android.server.wm.WindowContainer getParent()>();

        if r3 == null goto label6;

        $r4 = virtualinvoke r2.<com.android.server.wm.ActivityStack: com.android.server.wm.WindowContainer getParent()>();

        if r3 == $r4 goto label2;

        goto label6;

     label2:
        $r5 = r3.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        i0 = virtualinvoke $r5.<com.android.server.wm.WindowList: int indexOf(java.lang.Object)>(r1);

        $r6 = r3.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        i1 = virtualinvoke $r6.<com.android.server.wm.WindowList: int indexOf(java.lang.Object)>(r2);

        if i0 > i1 goto label3;

        i1 = i1 + -1;

        goto label3;

     label3:
        i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, i1);

        $z0 = virtualinvoke r1.<com.android.server.wm.ActivityStack: boolean isRootTask()>();

        if $z0 == 0 goto label4;

        virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: void positionStackAt(com.android.server.wm.ActivityStack,int)>(r1, i2);

        goto label5;

     label4:
        virtualinvoke r3.<com.android.server.wm.WindowContainer: void positionChildAt(int,com.android.server.wm.WindowContainer,boolean)>(i2, r1, 0);

     label5:
        return;

     label6:
        return;

     label7:
        return;
    }

    void onParentChanged(com.android.server.wm.ConfigurationContainer, com.android.server.wm.ConfigurationContainer)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ConfigurationContainer r1, r2;
        com.android.server.wm.WindowContainer $r3;
        com.android.server.wm.WindowManagerService $r4;
        java.util.function.Supplier $r5;
        java.lang.Object $r6;
        android.view.SurfaceControl $r7, $r10, $r12, $r14;
        android.view.SurfaceControl$Transaction $r8, $r9, $r11, $r13, $r15;
        com.android.server.wm._$$Lambda$TaskDisplayArea$2fufOSTi1fAiixVdHx5JtOWaiDQ $r16;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: com.android.server.wm.ConfigurationContainer;

        r2 := @parameter1: com.android.server.wm.ConfigurationContainer;

        $r3 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.WindowContainer getParent()>();

        if $r3 == null goto label1;

        $r16 = new com.android.server.wm._$$Lambda$TaskDisplayArea$2fufOSTi1fAiixVdHx5JtOWaiDQ;

        specialinvoke $r16.<com.android.server.wm._$$Lambda$TaskDisplayArea$2fufOSTi1fAiixVdHx5JtOWaiDQ: void <init>(com.android.server.wm.TaskDisplayArea)>(r0);

        specialinvoke r0.<com.android.server.wm.DisplayArea: void onParentChanged(com.android.server.wm.ConfigurationContainer,com.android.server.wm.ConfigurationContainer,com.android.server.wm.WindowContainer$PreAssignChildLayersCallback)>(r1, r2, $r16);

        goto label2;

     label1:
        specialinvoke r0.<com.android.server.wm.DisplayArea: void onParentChanged(com.android.server.wm.ConfigurationContainer,com.android.server.wm.ConfigurationContainer)>(r1, r2);

        $r4 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.WindowManagerService mWmService>;

        $r5 = $r4.<com.android.server.wm.WindowManagerService: java.util.function.Supplier mTransactionFactory>;

        $r6 = interfaceinvoke $r5.<java.util.function.Supplier: java.lang.Object get()>();

        $r8 = (android.view.SurfaceControl$Transaction) $r6;

        $r7 = r0.<com.android.server.wm.TaskDisplayArea: android.view.SurfaceControl mAppAnimationLayer>;

        $r9 = virtualinvoke $r8.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction remove(android.view.SurfaceControl)>($r7);

        $r10 = r0.<com.android.server.wm.TaskDisplayArea: android.view.SurfaceControl mBoostedAppAnimationLayer>;

        $r11 = virtualinvoke $r9.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction remove(android.view.SurfaceControl)>($r10);

        $r12 = r0.<com.android.server.wm.TaskDisplayArea: android.view.SurfaceControl mHomeAppAnimationLayer>;

        $r13 = virtualinvoke $r11.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction remove(android.view.SurfaceControl)>($r12);

        $r14 = r0.<com.android.server.wm.TaskDisplayArea: android.view.SurfaceControl mSplitScreenDividerAnchor>;

        $r15 = virtualinvoke $r13.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction remove(android.view.SurfaceControl)>($r14);

        virtualinvoke $r15.<android.view.SurfaceControl$Transaction: void apply()>();

        r0.<com.android.server.wm.TaskDisplayArea: android.view.SurfaceControl mAppAnimationLayer> = null;

        r0.<com.android.server.wm.TaskDisplayArea: android.view.SurfaceControl mBoostedAppAnimationLayer> = null;

        r0.<com.android.server.wm.TaskDisplayArea: android.view.SurfaceControl mHomeAppAnimationLayer> = null;

        r0.<com.android.server.wm.TaskDisplayArea: android.view.SurfaceControl mSplitScreenDividerAnchor> = null;

     label2:
        return;
    }

    void onSplitScreenModeDismissed()
    {
        com.android.server.wm.TaskDisplayArea r0;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: void onSplitScreenModeDismissed(com.android.server.wm.ActivityStack)>(null);

        return;
    }

    void onSplitScreenModeDismissed(com.android.server.wm.ActivityStack)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityStack r1, r2, r5, r6, r9;
        com.android.server.wm.ActivityTaskManagerService $r3, $r7, $r10;
        boolean $z0, $z1;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: com.android.server.wm.ActivityStack;

        $r3 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityTaskManagerService mAtmService>;

        virtualinvoke $r3.<com.android.server.wm.ActivityTaskManagerService: void deferWindowLayout()>();

     label01:
        r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.Task mLaunchRootTask> = null;

        specialinvoke r0.<com.android.server.wm.TaskDisplayArea: void moveSplitScreenTasksToFullScreen()>();

     label02:
        if r1 == null goto label03;

        r5 = r1;

        goto label04;

     label03:
        r5 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getTopStackInWindowingMode(int)>(1);

     label04:
        r6 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getOrCreateRootHomeTask()>();

        if r6 == null goto label07;

        if r5 == null goto label05;

        $z0 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: boolean isTopStack(com.android.server.wm.ActivityStack)>(r6);

        if $z0 == 0 goto label06;

     label05:
        if r1 == null goto label07;

     label06:
        virtualinvoke r6.<com.android.server.wm.ActivityStack: void moveToFront(java.lang.String)>("onSplitScreenModeDismissed");

        virtualinvoke r5.<com.android.server.wm.ActivityStack: void moveToFront(java.lang.String)>("onSplitScreenModeDismissed");

     label07:
        $r7 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityTaskManagerService mAtmService>;

        virtualinvoke $r7.<com.android.server.wm.ActivityTaskManagerService: void continueWindowLayout()>();

        return;

     label08:
        $r4 := @caughtexception;

        if r1 == null goto label09;

        r9 = r1;

        goto label10;

     label09:
        r9 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getTopStackInWindowingMode(int)>(1);

     label10:
        r2 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getOrCreateRootHomeTask()>();

        if r2 == null goto label13;

        if r9 == null goto label11;

        $z1 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: boolean isTopStack(com.android.server.wm.ActivityStack)>(r2);

        if $z1 == 0 goto label12;

     label11:
        if r1 == null goto label13;

     label12:
        virtualinvoke r2.<com.android.server.wm.ActivityStack: void moveToFront(java.lang.String)>("onSplitScreenModeDismissed");

        virtualinvoke r9.<com.android.server.wm.ActivityStack: void moveToFront(java.lang.String)>("onSplitScreenModeDismissed");

     label13:
        $r10 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityTaskManagerService mAtmService>;

        virtualinvoke $r10.<com.android.server.wm.ActivityTaskManagerService: void continueWindowLayout()>();

        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label08;
    }

    void onStackOrderChanged(com.android.server.wm.ActivityStack)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityStack r1;
        java.util.ArrayList $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;
        com.android.server.wm.TaskDisplayArea$OnStackOrderChangedListener $r5;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: com.android.server.wm.ActivityStack;

        $r2 = r0.<com.android.server.wm.TaskDisplayArea: java.util.ArrayList mStackOrderChangedCallbacks>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r3 = r0.<com.android.server.wm.TaskDisplayArea: java.util.ArrayList mStackOrderChangedCallbacks>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (com.android.server.wm.TaskDisplayArea$OnStackOrderChangedListener) $r4;

        interfaceinvoke $r5.<com.android.server.wm.TaskDisplayArea$OnStackOrderChangedListener: void onStackOrderChanged(com.android.server.wm.ActivityStack)>(r1);

        i1 = i1 + -1;

        goto label1;

     label2:
        return;
    }

    void onStackRemoved(com.android.server.wm.ActivityStack)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityStack r1, $r2;
        com.android.server.wm.DisplayContent $r3;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: com.android.server.wm.ActivityStack;

        $r2 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mPreferredTopFocusableStack>;

        if $r2 != r1 goto label1;

        r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mPreferredTopFocusableStack> = null;

     label1:
        $r3 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.DisplayContent mDisplayContent>;

        virtualinvoke $r3.<com.android.server.wm.DisplayContent: void releaseSelfIfNeeded()>();

        virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: void onStackOrderChanged(com.android.server.wm.ActivityStack)>(r1);

        return;
    }

    void onStackWindowingModeChanged(com.android.server.wm.ActivityStack)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityStack r1, $r2, $r3;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: com.android.server.wm.ActivityStack;

        virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: void removeStackReferenceIfNeeded(com.android.server.wm.ActivityStack)>(r1);

        virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: void addStackReferenceIfNeeded(com.android.server.wm.ActivityStack)>(r1);

        $r2 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mRootPinnedTask>;

        if r1 != $r2 goto label1;

        $r3 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getTopStack()>();

        if $r3 == r1 goto label1;

        virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: void positionChildAt(int,com.android.server.wm.ActivityStack,boolean)>(2147483647, r1, 0);

     label1:
        return;
    }

    boolean pauseBackStacks(boolean, com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.TaskDisplayArea r0;
        boolean z0, $z1, $z2, z3, z4;
        com.android.server.wm.ActivityRecord r1, $r3;
        com.android.server.wm.ActivityStack r2;
        int $i0, $i1, i2;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        z0 := @parameter0: boolean;

        r1 := @parameter1: com.android.server.wm.ActivityRecord;

        z3 = 0;

        $i0 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: int getStackCount()>();

        i2 = $i0 - 1;

     label1:
        if i2 < 0 goto label4;

        r2 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getStackAt(int)>(i2);

        z4 = z3;

        $r3 = virtualinvoke r2.<com.android.server.wm.ActivityStack: com.android.server.wm.ActivityRecord getResumedActivity()>();

        if $r3 == null goto label3;

        $i1 = virtualinvoke r2.<com.android.server.wm.ActivityStack: int getVisibility(com.android.server.wm.ActivityRecord)>(r1);

        if $i1 != 0 goto label2;

        z4 = z3;

        $z2 = virtualinvoke r2.<com.android.server.wm.ActivityStack: boolean isTopActivityFocusable()>();

        if $z2 != 0 goto label3;

     label2:
        $z1 = virtualinvoke r2.<com.android.server.wm.ActivityStack: boolean startPausingLocked(boolean,boolean,com.android.server.wm.ActivityRecord)>(z0, 0, r1);

        z4 = z3 | $z1;

     label3:
        i2 = i2 + -1;

        z3 = z4;

        goto label1;

     label4:
        return z3;
    }

    void positionChildAt(int, com.android.server.wm.ActivityStack, boolean)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityStack r1, $r3;
        boolean z0, $z1, $z2, $z3, $z4, z5, z6, z7, $z8, z9;
        int $i1, $i2, $i4, i5, $i6, i7;
        com.android.server.wm.DisplayContent $r2, r14, $r15;
        com.android.server.wm.WindowContainer $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r9;
        com.android.server.wm.WindowList $r10, $r11;
        android.app.WindowConfiguration $r12;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        i5 := @parameter0: int;

        r1 := @parameter1: com.android.server.wm.ActivityStack;

        z0 := @parameter2: boolean;

        $i1 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: int getChildCount()>();

        $i2 = $i1 - 1;

        if i5 < $i2 goto label01;

        z5 = 1;

        goto label02;

     label01:
        z5 = 0;

     label02:
        if i5 == -2147483648 goto label04;

        if i5 != 0 goto label03;

        goto label04;

     label03:
        z6 = 0;

        goto label05;

     label04:
        z6 = 1;

     label05:
        $r11 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.WindowList mChildren>;

        z7 = virtualinvoke $r11.<com.android.server.wm.WindowList: boolean contains(java.lang.Object)>(r1);

        if z5 == 0 goto label06;

        if z7 == 0 goto label06;

        $z4 = virtualinvoke r1.<com.android.server.wm.ActivityStack: boolean isFocusable()>();

        if $z4 == 0 goto label06;

        r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mPreferredTopFocusableStack> = null;

     label06:
        $r12 = virtualinvoke r1.<com.android.server.wm.ActivityStack: android.app.WindowConfiguration getWindowConfiguration()>();

        $z8 = virtualinvoke $r12.<android.app.WindowConfiguration: boolean isAlwaysOnTop()>();

        if $z8 == 0 goto label07;

        if z5 != 0 goto label07;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring move of always-on-top stack=");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to bottom");

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", $r9);

        $r10 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.WindowList mChildren>;

        $i4 = virtualinvoke $r10.<com.android.server.wm.WindowList: int indexOf(java.lang.Object)>(r1);

        specialinvoke r0.<com.android.server.wm.DisplayArea: void positionChildAt(int,com.android.server.wm.WindowContainer,boolean)>($i4, r1, 0);

        return;

     label07:
        z9 = z0;

        $r2 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.DisplayContent mDisplayContent>;

        $z1 = virtualinvoke $r2.<com.android.server.wm.DisplayContent: boolean isTrusted()>();

        if $z1 != 0 goto label08;

        z9 = z0;

        $r4 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.WindowContainer getParent()>();

        $z3 = virtualinvoke $r4.<com.android.server.wm.WindowContainer: boolean isOnTop()>();

        if $z3 != 0 goto label08;

        z9 = 0;

     label08:
        $i6 = specialinvoke r0.<com.android.server.wm.TaskDisplayArea: int findPositionForStack(int,com.android.server.wm.ActivityStack,boolean)>(i5, r1, 0);

        specialinvoke r0.<com.android.server.wm.DisplayArea: void positionChildAt(int,com.android.server.wm.WindowContainer,boolean)>($i6, r1, 0);

        if z9 == 0 goto label11;

        if z5 != 0 goto label09;

        if z6 == 0 goto label11;

     label09:
        r14 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.DisplayContent mDisplayContent>;

        i7 = -2147483648;

        if z5 == 0 goto label10;

        i7 = 2147483647;

     label10:
        virtualinvoke r14.<com.android.server.wm.DisplayContent: void positionDisplayAt(int,boolean)>(i7, 1);

     label11:
        virtualinvoke r1.<com.android.server.wm.ActivityStack: void updateTaskMovement(boolean)>(z5);

        $r15 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.DisplayContent mDisplayContent>;

        virtualinvoke $r15.<com.android.server.wm.DisplayContent: void setLayoutNeeded()>();

        if z5 == 0 goto label12;

        $z2 = virtualinvoke r1.<com.android.server.wm.ActivityStack: boolean isFocusableAndVisible()>();

        if $z2 == 0 goto label12;

        r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mPreferredTopFocusableStack> = r1;

        goto label13;

     label12:
        $r3 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mPreferredTopFocusableStack>;

        if $r3 != r1 goto label13;

        r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mPreferredTopFocusableStack> = null;

     label13:
        return;
    }

    volatile void positionChildAt(int, com.android.server.wm.WindowContainer, boolean)
    {
        com.android.server.wm.TaskDisplayArea r0;
        int i0;
        com.android.server.wm.WindowContainer r1;
        boolean z0;
        com.android.server.wm.ActivityStack $r2;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.wm.WindowContainer;

        z0 := @parameter2: boolean;

        $r2 = (com.android.server.wm.ActivityStack) r1;

        virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: void positionChildAt(int,com.android.server.wm.ActivityStack,boolean)>(i0, $r2, z0);

        return;
    }

    void positionStackAt(int, com.android.server.wm.ActivityStack, boolean)
    {
        com.android.server.wm.TaskDisplayArea r0;
        int i0;
        com.android.server.wm.ActivityStack r1;
        boolean z0;
        com.android.server.wm.DisplayContent $r2;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.wm.ActivityStack;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: void positionChildAt(int,com.android.server.wm.ActivityStack,boolean)>(i0, r1, z0);

        $r2 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.DisplayContent mDisplayContent>;

        virtualinvoke $r2.<com.android.server.wm.DisplayContent: void layoutAndAssignWindowLayersIfNeeded()>();

        return;
    }

    void positionStackAt(com.android.server.wm.ActivityStack, int)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityStack r1;
        int i0;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: com.android.server.wm.ActivityStack;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: void positionStackAt(com.android.server.wm.ActivityStack,int,boolean,java.lang.String)>(r1, i0, 0, null);

        return;
    }

    void positionStackAt(com.android.server.wm.ActivityStack, int, boolean, java.lang.String)
    {
        com.android.server.wm.TaskDisplayArea r0;
        boolean z0, z1, $z2;
        java.lang.String r1, $r11;
        com.android.server.wm.ActivityStack r2, r12, r13, r15;
        int i0, i1, $i2, i3, i4, i5;
        com.android.server.wm.WindowList $r3;
        com.android.server.wm.DisplayContent $r4, $r6;
        com.android.server.wm.RootWindowContainer $r5;
        java.lang.StringBuilder $r7;
        java.lang.IllegalStateException $r10;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r12 := @parameter0: com.android.server.wm.ActivityStack;

        i3 := @parameter1: int;

        z0 := @parameter2: boolean;

        r1 := @parameter3: java.lang.String;

        if r1 == null goto label1;

        r13 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getFocusedStack()>();

        goto label2;

     label1:
        r13 = null;

     label2:
        $r3 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.WindowList mChildren>;

        z1 = virtualinvoke $r3.<com.android.server.wm.WindowList: boolean contains(java.lang.Object)>(r12);

        $r4 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.DisplayContent mDisplayContent>;

        $z2 = $r4.<com.android.server.wm.DisplayContent: boolean mSingleTaskInstance>;

        if $z2 == 0 goto label4;

        $i2 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: int getStackCount()>();

        if $i2 != 1 goto label4;

        if z1 == 0 goto label3;

        goto label4;

     label3:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("positionStackAt: Can only have one task on display=");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = new java.lang.IllegalStateException;

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label4:
        virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: void positionStackAt(int,com.android.server.wm.ActivityStack,boolean)>(i3, r12, z0);

        if r1 == null goto label9;

        r2 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getFocusedStack()>();

        if r2 == r13 goto label9;

        r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mLastFocusedStack> = r13;

        $r5 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        i0 = $r5.<com.android.server.wm.RootWindowContainer: int mCurrentUser>;

        $r6 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.DisplayContent mDisplayContent>;

        i1 = $r6.<com.android.server.wm.DisplayContent: int mDisplayId>;

        i4 = -1;

        if r2 != null goto label5;

        i5 = -1;

        goto label6;

     label5:
        i5 = virtualinvoke r2.<com.android.server.wm.ActivityStack: int getRootTaskId()>();

     label6:
        r15 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mLastFocusedStack>;

        if r15 != null goto label7;

        goto label8;

     label7:
        i4 = virtualinvoke r15.<com.android.server.wm.ActivityStack: int getRootTaskId()>();

     label8:
        staticinvoke <com.android.server.wm.EventLogTags: void writeWmFocusedStack(int,int,int,int,java.lang.String)>(i0, i1, i5, i4, r1);

     label9:
        virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: void onStackOrderChanged(com.android.server.wm.ActivityStack)>(r12);

        return;
    }

    void positionStackAtBottom(com.android.server.wm.ActivityStack)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityStack r1;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: com.android.server.wm.ActivityStack;

        virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: void positionStackAtBottom(com.android.server.wm.ActivityStack,java.lang.String)>(r1, null);

        return;
    }

    void positionStackAtBottom(com.android.server.wm.ActivityStack, java.lang.String)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityStack r1;
        java.lang.String r2;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: com.android.server.wm.ActivityStack;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: void positionStackAt(com.android.server.wm.ActivityStack,int,boolean,java.lang.String)>(r1, 0, 0, r2);

        return;
    }

    void positionStackAtTop(com.android.server.wm.ActivityStack, boolean)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityStack r1;
        boolean z0;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: com.android.server.wm.ActivityStack;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: void positionStackAtTop(com.android.server.wm.ActivityStack,boolean,java.lang.String)>(r1, z0, null);

        return;
    }

    void positionStackAtTop(com.android.server.wm.ActivityStack, boolean, java.lang.String)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityStack r1;
        boolean z0;
        java.lang.String r2;
        int $i0;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: com.android.server.wm.ActivityStack;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String;

        $i0 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: int getStackCount()>();

        virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: void positionStackAt(com.android.server.wm.ActivityStack,int,boolean,java.lang.String)>(r1, $i0, z0, r2);

        return;
    }

    void positionTaskBehindHome(com.android.server.wm.ActivityStack)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityStack r1, $r2, $r4, $r5;
        com.android.server.wm.WindowContainer $r3, $r6, r7;
        com.android.server.wm.Task r8;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: com.android.server.wm.ActivityStack;

        $r2 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getOrCreateRootHomeTask()>();

        r7 = virtualinvoke $r2.<com.android.server.wm.ActivityStack: com.android.server.wm.WindowContainer getParent()>();

        if r7 == null goto label1;

        r8 = virtualinvoke r7.<com.android.server.wm.WindowContainer: com.android.server.wm.Task asTask()>();

        goto label2;

     label1:
        r8 = null;

     label2:
        if r8 != null goto label4;

        $r6 = virtualinvoke r1.<com.android.server.wm.ActivityStack: com.android.server.wm.WindowContainer getParent()>();

        if $r6 != r0 goto label3;

        virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: void positionStackAtBottom(com.android.server.wm.ActivityStack)>(r1);

        goto label6;

     label3:
        virtualinvoke r1.<com.android.server.wm.ActivityStack: void reparent(com.android.server.wm.TaskDisplayArea,boolean)>(r0, 0);

        goto label6;

     label4:
        $r3 = virtualinvoke r1.<com.android.server.wm.ActivityStack: com.android.server.wm.WindowContainer getParent()>();

        if r8 != $r3 goto label5;

        $r5 = (com.android.server.wm.ActivityStack) r8;

        virtualinvoke $r5.<com.android.server.wm.ActivityStack: void positionChildAtBottom(com.android.server.wm.Task)>(r1);

        goto label6;

     label5:
        $r4 = (com.android.server.wm.ActivityStack) r8;

        virtualinvoke r1.<com.android.server.wm.ActivityStack: boolean reparent(com.android.server.wm.ActivityStack,boolean,int,boolean,boolean,java.lang.String)>($r4, 0, 2, 0, 0, "positionTaskBehindHome");

     label6:
        return;
    }

    void prepareFreezingTaskBounds()
    {
        com.android.server.wm.TaskDisplayArea r0;
        int $i0, i1;
        com.android.server.wm.WindowContainer $r1;
        com.android.server.wm.ActivityStack $r2;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        $i0 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: int getChildCount()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r1 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.WindowContainer getChildAt(int)>(i1);

        $r2 = (com.android.server.wm.ActivityStack) $r1;

        virtualinvoke $r2.<com.android.server.wm.ActivityStack: void prepareFreezingTaskBounds()>();

        i1 = i1 + -1;

        goto label1;

     label2:
        return;
    }

    void registerStackOrderChangedListener(com.android.server.wm.TaskDisplayArea$OnStackOrderChangedListener)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.TaskDisplayArea$OnStackOrderChangedListener r1;
        java.util.ArrayList $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: com.android.server.wm.TaskDisplayArea$OnStackOrderChangedListener;

        $r2 = r0.<com.android.server.wm.TaskDisplayArea: java.util.ArrayList mStackOrderChangedCallbacks>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<com.android.server.wm.TaskDisplayArea: java.util.ArrayList mStackOrderChangedCallbacks>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label1:
        return;
    }

    com.android.server.wm.ActivityStack remove()
    {
        com.android.server.wm.TaskDisplayArea r0, r1;
        boolean z0, z1, $z2, $z3, $z4;
        int i0, i1, i2, i3, $i4, $i5;
        com.android.server.wm.ActivityStack r2, r7, r8;
        com.android.server.wm.DisplayContent $r3;
        com.android.server.wm.RootWindowContainer $r4;
        com.android.server.wm.ActivityTaskManagerService $r5;
        com.android.server.wm.TaskChangeNotificationController $r6;
        com.android.server.wm.WindowContainer r9;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r7 = null;

        r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mPreferredTopFocusableStack> = null;

        $r3 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.DisplayContent mDisplayContent>;

        z0 = virtualinvoke $r3.<com.android.server.wm.DisplayContent: boolean shouldDestroyContentOnRemove()>();

        $r4 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        r1 = virtualinvoke $r4.<com.android.server.wm.RootWindowContainer: com.android.server.wm.TaskDisplayArea getDefaultTaskDisplayArea()>();

        r8 = null;

        i2 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: int getStackCount()>();

        z1 = virtualinvoke r1.<com.android.server.wm.TaskDisplayArea: boolean isSplitScreenModeActivated()>();

        if z1 == 0 goto label01;

        r7 = virtualinvoke r1.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getTopStackInWindowingMode(int)>(4);

        goto label01;

     label01:
        i3 = 0;

     label02:
        i0 = i2;

        if i3 >= i2 goto label08;

        r2 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getStackAt(int)>(i3);

        if z0 != 0 goto label06;

        $z3 = virtualinvoke r2.<com.android.server.wm.ActivityStack: boolean isActivityTypeStandardOrUndefined()>();

        if $z3 != 0 goto label03;

        goto label06;

     label03:
        $z4 = virtualinvoke r2.<com.android.server.wm.ActivityStack: boolean supportsSplitScreenWindowingMode()>();

        if $z4 == 0 goto label04;

        if r7 == null goto label04;

        r9 = r7;

        goto label05;

     label04:
        r9 = r1;

     label05:
        virtualinvoke r2.<com.android.server.wm.ActivityStack: void reparent(com.android.server.wm.WindowContainer,int)>(r9, 2147483647);

        virtualinvoke r2.<com.android.server.wm.ActivityStack: void setWindowingMode(int)>(0);

        r8 = r2;

        goto label07;

     label06:
        virtualinvoke r2.<com.android.server.wm.ActivityStack: void finishAllActivitiesImmediately()>();

     label07:
        i1 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: int getStackCount()>();

        i2 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: int getStackCount()>();

        $i4 = i0 - i1;

        $i5 = i3 - $i4;

        i3 = $i5 + 1;

        goto label02;

     label08:
        if r8 == null goto label10;

        if z1 == 0 goto label10;

        $z2 = virtualinvoke r8.<com.android.server.wm.ActivityStack: boolean supportsSplitScreenWindowingMode()>();

        if $z2 != 0 goto label09;

        $r5 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityTaskManagerService mAtmService>;

        $r6 = virtualinvoke $r5.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.TaskChangeNotificationController getTaskChangeNotificationController()>();

        virtualinvoke $r6.<com.android.server.wm.TaskChangeNotificationController: void notifyActivityDismissingDockedStack()>();

        virtualinvoke r1.<com.android.server.wm.TaskDisplayArea: void onSplitScreenModeDismissed(com.android.server.wm.ActivityStack)>(r8);

        goto label10;

     label09:
        if r7 == null goto label10;

        virtualinvoke r7.<com.android.server.wm.ActivityStack: void moveToFront(java.lang.String)>("display-removed");

     label10:
        r0.<com.android.server.wm.TaskDisplayArea: boolean mRemoved> = 1;

        return r8;
    }

    protected void removeChild(com.android.server.wm.ActivityStack)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityStack r1;
        com.android.server.wm.ActivityTaskManagerService $r2;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: com.android.server.wm.ActivityStack;

        specialinvoke r0.<com.android.server.wm.DisplayArea: void removeChild(com.android.server.wm.WindowContainer)>(r1);

        virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: void onStackRemoved(com.android.server.wm.ActivityStack)>(r1);

        $r2 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityTaskManagerService mAtmService>;

        virtualinvoke $r2.<com.android.server.wm.ActivityTaskManagerService: void updateSleepIfNeededLocked()>();

        virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: void removeStackReferenceIfNeeded(com.android.server.wm.ActivityStack)>(r1);

        return;
    }

    protected volatile void removeChild(com.android.server.wm.WindowContainer)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.WindowContainer r1;
        com.android.server.wm.ActivityStack $r2;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: com.android.server.wm.WindowContainer;

        $r2 = (com.android.server.wm.ActivityStack) r1;

        virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: void removeChild(com.android.server.wm.ActivityStack)>($r2);

        return;
    }

    void removeExistingAppTokensIfPossible()
    {
        com.android.server.wm.TaskDisplayArea r0;
        java.util.ArrayList r1;
        com.android.server.wm.ActivityRecord r2;
        java.lang.String r3;
        com.android.server.wm.WindowList $r4, $r5;
        int $i0, $i1, i2, i3;
        java.lang.Object $r6, $r8;
        com.android.server.wm.ActivityStack $r7;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.android.server.wm.DisplayContent $r9;
        android.util.ArraySet $r10;
        java.lang.Object[] $r11;
        com.android.server.wm.ProtoLogGroup $r12;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        $r4 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.WindowList mChildren>;

        $i0 = virtualinvoke $r4.<com.android.server.wm.WindowList: int size()>();

        i2 = $i0 - 1;

     label1:
        if i2 < 0 goto label7;

        $r5 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.WindowList mChildren>;

        $r6 = virtualinvoke $r5.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i2);

        $r7 = (com.android.server.wm.ActivityStack) $r6;

        r1 = $r7.<com.android.server.wm.ActivityStack: java.util.ArrayList mExitingActivities>;

        $i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i3 = $i1 - 1;

     label2:
        if i3 < 0 goto label6;

        $r8 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r2 = (com.android.server.wm.ActivityRecord) $r8;

        $z0 = r2.<com.android.server.wm.ActivityRecord: boolean hasVisible>;

        if $z0 != 0 goto label5;

        $r9 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.DisplayContent mDisplayContent>;

        $r10 = $r9.<com.android.server.wm.DisplayContent: android.util.ArraySet mClosingApps>;

        $z1 = virtualinvoke $r10.<android.util.ArraySet: boolean contains(java.lang.Object)>(r2);

        if $z1 != 0 goto label5;

        $z2 = r2.<com.android.server.wm.ActivityRecord: boolean mIsExiting>;

        if $z2 == 0 goto label3;

        $z4 = virtualinvoke r2.<com.android.server.wm.ActivityRecord: boolean isEmpty()>();

        if $z4 == 0 goto label5;

     label3:
        virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: void cancelAnimation()>();

        $z3 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_ADD_REMOVE_enabled>;

        if $z3 == 0 goto label4;

        r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        $r12 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_ADD_REMOVE>;

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = r3;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void v(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r12, -49129622, 0, null, $r11);

     label4:
        virtualinvoke r2.<com.android.server.wm.ActivityRecord: void removeIfPossible()>();

     label5:
        i3 = i3 + -1;

        goto label2;

     label6:
        i2 = i2 + -1;

        goto label1;

     label7:
        return;
    }

    void removeStack(com.android.server.wm.ActivityStack)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityStack r1;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: com.android.server.wm.ActivityStack;

        virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: void removeChild(com.android.server.wm.ActivityStack)>(r1);

        return;
    }

    void removeStackReferenceIfNeeded(com.android.server.wm.ActivityStack)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityStack r1, $r2, $r3, $r4, $r5;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: com.android.server.wm.ActivityStack;

        $r2 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mRootHomeTask>;

        if r1 != $r2 goto label1;

        r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mRootHomeTask> = null;

        goto label4;

     label1:
        $r3 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mRootRecentsTask>;

        if r1 != $r3 goto label2;

        r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mRootRecentsTask> = null;

        goto label4;

     label2:
        $r4 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mRootPinnedTask>;

        if r1 != $r4 goto label3;

        r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mRootPinnedTask> = null;

        goto label4;

     label3:
        $r5 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mRootSplitScreenPrimaryTask>;

        if r1 != $r5 goto label4;

        r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mRootSplitScreenPrimaryTask> = null;

     label4:
        return;
    }

    transient void removeStacksInWindowingModes(int[])
    {
        com.android.server.wm.TaskDisplayArea r0;
        int[] r1;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8;
        com.android.server.wm.ActivityStack r3, $r8;
        java.util.ArrayList $r4;
        com.android.server.wm.RootWindowContainer $r5;
        com.android.server.wm.ActivityStackSupervisor $r6;
        java.lang.Object $r7;
        boolean $z0;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: int[];

        if r1 == null goto label11;

        $i1 = lengthof r1;

        if $i1 != 0 goto label01;

        goto label11;

     label01:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $i2 = lengthof r1;

        i6 = $i2 - 1;

     label02:
        if i6 < 0 goto label08;

        i0 = r1[i6];

        $i4 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: int getStackCount()>();

        i7 = $i4 - 1;

     label03:
        if i7 < 0 goto label07;

        r3 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getStackAt(int)>(i7);

        $z0 = virtualinvoke r3.<com.android.server.wm.ActivityStack: boolean isActivityTypeStandardOrUndefined()>();

        if $z0 != 0 goto label04;

        goto label06;

     label04:
        $i5 = virtualinvoke r3.<com.android.server.wm.ActivityStack: int getWindowingMode()>();

        if $i5 == i0 goto label05;

        goto label06;

     label05:
        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label06:
        i7 = i7 + -1;

        goto label03;

     label07:
        i6 = i6 + -1;

        goto label02;

     label08:
        $i3 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i8 = $i3 - 1;

     label09:
        if i8 < 0 goto label10;

        $r5 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        $r6 = $r5.<com.android.server.wm.RootWindowContainer: com.android.server.wm.ActivityStackSupervisor mStackSupervisor>;

        $r7 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        $r8 = (com.android.server.wm.ActivityStack) $r7;

        virtualinvoke $r6.<com.android.server.wm.ActivityStackSupervisor: void removeStack(com.android.server.wm.ActivityStack)>($r8);

        i8 = i8 + -1;

        goto label09;

     label10:
        return;

     label11:
        return;
    }

    transient void removeStacksWithActivityTypes(int[])
    {
        com.android.server.wm.TaskDisplayArea r0;
        int[] r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11;
        com.android.server.wm.ActivityStack r3, r4, $r9;
        java.util.ArrayList $r5;
        com.android.server.wm.RootWindowContainer $r6;
        com.android.server.wm.ActivityStackSupervisor $r7;
        java.lang.Object $r8;
        boolean $z0;
        com.android.server.wm.WindowContainer $r10;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: int[];

        if r1 == null goto label13;

        $i1 = lengthof r1;

        if $i1 != 0 goto label01;

        goto label13;

     label01:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $i2 = lengthof r1;

        i8 = $i2 - 1;

     label02:
        if i8 < 0 goto label10;

        i0 = r1[i8];

        $i4 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: int getStackCount()>();

        i9 = $i4 - 1;

     label03:
        if i9 < 0 goto label09;

        r3 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getStackAt(int)>(i9);

        $z0 = r3.<com.android.server.wm.ActivityStack: boolean mCreatedByOrganizer>;

        if $z0 == 0 goto label07;

        $i6 = virtualinvoke r3.<com.android.server.wm.ActivityStack: int getChildCount()>();

        i10 = $i6 - 1;

     label04:
        if i10 < 0 goto label06;

        $r10 = virtualinvoke r3.<com.android.server.wm.ActivityStack: com.android.server.wm.WindowContainer getChildAt(int)>(i10);

        r4 = (com.android.server.wm.ActivityStack) $r10;

        $i7 = virtualinvoke r4.<com.android.server.wm.ActivityStack: int getActivityType()>();

        if $i7 != i0 goto label05;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

     label05:
        i10 = i10 + -1;

        goto label04;

     label06:
        goto label08;

     label07:
        $i5 = virtualinvoke r3.<com.android.server.wm.ActivityStack: int getActivityType()>();

        if $i5 != i0 goto label08;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label08:
        i9 = i9 + -1;

        goto label03;

     label09:
        i8 = i8 + -1;

        goto label02;

     label10:
        $i3 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i11 = $i3 - 1;

     label11:
        if i11 < 0 goto label12;

        $r6 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        $r7 = $r6.<com.android.server.wm.RootWindowContainer: com.android.server.wm.ActivityStackSupervisor mStackSupervisor>;

        $r8 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i11);

        $r9 = (com.android.server.wm.ActivityStack) $r8;

        virtualinvoke $r7.<com.android.server.wm.ActivityStackSupervisor: void removeStack(com.android.server.wm.ActivityStack)>($r9);

        i11 = i11 + -1;

        goto label11;

     label12:
        return;

     label13:
        return;
    }

    void resetPreferredTopFocusableStackIfBelow(com.android.server.wm.Task)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.Task r1;
        com.android.server.wm.ActivityStack r2;
        int $i0;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: com.android.server.wm.Task;

        r2 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mPreferredTopFocusableStack>;

        if r2 == null goto label1;

        $i0 = virtualinvoke r2.<com.android.server.wm.ActivityStack: int compareTo(com.android.server.wm.WindowContainer)>(r1);

        if $i0 >= 0 goto label1;

        r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack mPreferredTopFocusableStack> = null;

     label1:
        return;
    }

    int resolveWindowingMode(com.android.server.wm.ActivityRecord, android.app.ActivityOptions, com.android.server.wm.Task, int)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityRecord r1;
        android.app.ActivityOptions r2;
        com.android.server.wm.Task r3;
        int i0, i1, i2, i3, i4, i5;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        r2 := @parameter1: android.app.ActivityOptions;

        r3 := @parameter2: com.android.server.wm.Task;

        i0 := @parameter3: int;

        if r2 == null goto label1;

        i1 = virtualinvoke r2.<android.app.ActivityOptions: int getLaunchWindowingMode()>();

        goto label2;

     label1:
        i1 = 0;

     label2:
        i2 = i1;

        if i1 != 0 goto label5;

        i3 = i1;

        if r3 == null goto label3;

        i3 = virtualinvoke r3.<com.android.server.wm.Task: int getWindowingMode()>();

     label3:
        i4 = i3;

        if i3 != 0 goto label4;

        i4 = i3;

        if r1 == null goto label4;

        i4 = virtualinvoke r1.<com.android.server.wm.ActivityRecord: int getWindowingMode()>();

     label4:
        i2 = i4;

        if i4 != 0 goto label5;

        i2 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: int getWindowingMode()>();

     label5:
        i5 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: int validateWindowingMode(int,com.android.server.wm.ActivityRecord,com.android.server.wm.Task,int)>(i2, r1, r3, i0);

        if i5 == 0 goto label6;

        goto label7;

     label6:
        i5 = 1;

     label7:
        return i5;
    }

    void setExitingTokensHasVisible(boolean)
    {
        com.android.server.wm.TaskDisplayArea r0;
        boolean z0;
        java.util.ArrayList r1;
        com.android.server.wm.WindowList $r2, $r3;
        int $i0, $i1, i2, i3;
        java.lang.Object $r4, $r6;
        com.android.server.wm.ActivityStack $r5;
        com.android.server.wm.ActivityRecord $r7;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        z0 := @parameter0: boolean;

        $r2 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.WindowList mChildren>;

        $i0 = virtualinvoke $r2.<com.android.server.wm.WindowList: int size()>();

        i2 = $i0 - 1;

     label1:
        if i2 < 0 goto label4;

        $r3 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.WindowList mChildren>;

        $r4 = virtualinvoke $r3.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i2);

        $r5 = (com.android.server.wm.ActivityStack) $r4;

        r1 = $r5.<com.android.server.wm.ActivityStack: java.util.ArrayList mExitingActivities>;

        $i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i3 = $i1 - 1;

     label2:
        if i3 < 0 goto label3;

        $r6 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r7 = (com.android.server.wm.ActivityRecord) $r6;

        $r7.<com.android.server.wm.ActivityRecord: boolean hasVisible> = z0;

        i3 = i3 + -1;

        goto label2;

     label3:
        i2 = i2 + -1;

        goto label1;

     label4:
        return;
    }

    com.android.server.wm.ActivityRecord topRunningActivity()
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.ActivityRecord $r1;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        $r1 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityRecord topRunningActivity(boolean)>(0);

        return $r1;
    }

    com.android.server.wm.ActivityRecord topRunningActivity(boolean)
    {
        com.android.server.wm.TaskDisplayArea r0;
        boolean z0, $z1, $z2, $z3;
        com.android.server.wm.ActivityStack r1, r2;
        com.android.server.wm.RootWindowContainer $r3;
        com.android.server.wm.ActivityStackSupervisor $r4;
        com.android.server.wm.KeyguardController $r5;
        int $i0, i1;
        com.android.server.wm.ActivityRecord r6, r7, r8, r9;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        z0 := @parameter0: boolean;

        r6 = null;

        r1 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getFocusedStack()>();

        if r1 == null goto label1;

        r6 = virtualinvoke r1.<com.android.server.wm.ActivityStack: com.android.server.wm.ActivityRecord topRunningActivity()>();

     label1:
        r7 = r6;

        if r6 != null goto label5;

        $i0 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: int getStackCount()>();

        i1 = $i0 - 1;

     label2:
        r7 = r6;

        if i1 < 0 goto label5;

        r2 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.ActivityStack getStackAt(int)>(i1);

        r8 = r6;

        if r2 == r1 goto label4;

        $z3 = virtualinvoke r2.<com.android.server.wm.ActivityStack: boolean isTopActivityFocusable()>();

        if $z3 != 0 goto label3;

        r8 = r6;

        goto label4;

     label3:
        r9 = virtualinvoke r2.<com.android.server.wm.ActivityStack: com.android.server.wm.ActivityRecord topRunningActivity()>();

        r8 = r9;

        if r9 == null goto label4;

        r7 = r9;

        goto label5;

     label4:
        i1 = i1 + -1;

        r6 = r8;

        goto label2;

     label5:
        if r7 == null goto label6;

        if z0 == 0 goto label6;

        $r3 = r0.<com.android.server.wm.TaskDisplayArea: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        $r4 = $r3.<com.android.server.wm.RootWindowContainer: com.android.server.wm.ActivityStackSupervisor mStackSupervisor>;

        $r5 = virtualinvoke $r4.<com.android.server.wm.ActivityStackSupervisor: com.android.server.wm.KeyguardController getKeyguardController()>();

        $z1 = virtualinvoke $r5.<com.android.server.wm.KeyguardController: boolean isKeyguardLocked()>();

        if $z1 == 0 goto label6;

        $z2 = virtualinvoke r7.<com.android.server.wm.ActivityRecord: boolean canShowWhenLocked()>();

        if $z2 != 0 goto label6;

        return null;

     label6:
        return r7;
    }

    void unregisterStackOrderChangedListener(com.android.server.wm.TaskDisplayArea$OnStackOrderChangedListener)
    {
        com.android.server.wm.TaskDisplayArea r0;
        com.android.server.wm.TaskDisplayArea$OnStackOrderChangedListener r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        r1 := @parameter0: com.android.server.wm.TaskDisplayArea$OnStackOrderChangedListener;

        $r2 = r0.<com.android.server.wm.TaskDisplayArea: java.util.ArrayList mStackOrderChangedCallbacks>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        return;
    }

    int validateWindowingMode(int, com.android.server.wm.ActivityRecord, com.android.server.wm.Task, int)
    {
        com.android.server.wm.TaskDisplayArea r0;
        int i0, i1, i2;
        com.android.server.wm.ActivityRecord r1;
        com.android.server.wm.Task r2;
        boolean z0, $z1;

        r0 := @this: com.android.server.wm.TaskDisplayArea;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.wm.ActivityRecord;

        r2 := @parameter2: com.android.server.wm.Task;

        i1 := @parameter3: int;

        z0 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: boolean isSplitScreenModeActivated()>();

        if z0 != 0 goto label1;

        if i0 != 4 goto label1;

        i2 = 0;

        goto label2;

     label1:
        i2 = i0;

        if z0 == 0 goto label2;

        i2 = i0;

        if i0 != 0 goto label2;

        i2 = 4;

     label2:
        $z1 = virtualinvoke r0.<com.android.server.wm.TaskDisplayArea: boolean isValidWindowingMode(int,com.android.server.wm.ActivityRecord,com.android.server.wm.Task,int)>(i2, r1, r2, i1);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        return i2;
    }
}
