class com.android.server.wm.TaskOrganizerController$TaskOrganizerState extends java.lang.Object
{
    private final com.android.server.wm.TaskOrganizerController$DeathRecipient mDeathRecipient;
    private boolean mInterceptBackPressedOnTaskRoot;
    private final java.util.ArrayList mOrganizedTasks;
    private final com.android.server.wm.TaskOrganizerController$TaskOrganizerCallbacks mOrganizer;
    private final int mUid;
    final com.android.server.wm.TaskOrganizerController this$0;

    void <init>(com.android.server.wm.TaskOrganizerController, android.window.ITaskOrganizer, int)
    {
        com.android.server.wm.TaskOrganizerController$TaskOrganizerState r0;
        android.window.ITaskOrganizer r1;
        int i0;
        java.util.function.Consumer $r3, r23;
        com.android.server.wm.ActivityTaskManagerService $r4, $r9;
        com.android.server.wm.WindowManagerService $r5, $r10;
        android.os.IBinder $r12;
        com.android.server.wm.TaskOrganizerController$DeathRecipient $r13, r22;
        android.os.RemoteException $r14;
        com.android.server.wm.TaskOrganizerController r15;
        java.lang.Object r16;
        com.android.server.wm.WindowAnimator r17;
        java.util.ArrayList r19;
        com.android.server.wm._$$Lambda$vZR5471cvTgvcvM990tM31bi4pI r20;
        com.android.server.wm.TaskOrganizerController$TaskOrganizerCallbacks r21;

        r0 := @this: com.android.server.wm.TaskOrganizerController$TaskOrganizerState;

        r15 := @parameter0: com.android.server.wm.TaskOrganizerController;

        r1 := @parameter1: android.window.ITaskOrganizer;

        i0 := @parameter2: int;

        r0.<com.android.server.wm.TaskOrganizerController$TaskOrganizerState: com.android.server.wm.TaskOrganizerController this$0> = r15;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r19 = new java.util.ArrayList;

        specialinvoke r19.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.wm.TaskOrganizerController$TaskOrganizerState: java.util.ArrayList mOrganizedTasks> = r19;

        $r3 = staticinvoke <com.android.server.wm.TaskOrganizerController: java.util.function.Consumer access$200(com.android.server.wm.TaskOrganizerController)>(r15);

        if $r3 == null goto label1;

        r16 = staticinvoke <com.android.server.wm.TaskOrganizerController: java.util.function.Consumer access$200(com.android.server.wm.TaskOrganizerController)>(r15);

        goto label2;

     label1:
        $r4 = staticinvoke <com.android.server.wm.TaskOrganizerController: com.android.server.wm.ActivityTaskManagerService access$300(com.android.server.wm.TaskOrganizerController)>(r15);

        $r5 = $r4.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        r17 = $r5.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowAnimator mAnimator>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r17);

        r20 = new com.android.server.wm._$$Lambda$vZR5471cvTgvcvM990tM31bi4pI;

        specialinvoke r20.<com.android.server.wm._$$Lambda$vZR5471cvTgvcvM990tM31bi4pI: void <init>(com.android.server.wm.WindowAnimator)>(r17);

        r16 = r20;

     label2:
        r21 = new com.android.server.wm.TaskOrganizerController$TaskOrganizerCallbacks;

        $r9 = staticinvoke <com.android.server.wm.TaskOrganizerController: com.android.server.wm.ActivityTaskManagerService access$300(com.android.server.wm.TaskOrganizerController)>(r15);

        $r10 = $r9.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        r23 = (java.util.function.Consumer) r16;

        specialinvoke r21.<com.android.server.wm.TaskOrganizerController$TaskOrganizerCallbacks: void <init>(com.android.server.wm.TaskOrganizerController,com.android.server.wm.WindowManagerService,android.window.ITaskOrganizer,java.util.function.Consumer)>(r15, $r10, r1, r23);

        r0.<com.android.server.wm.TaskOrganizerController$TaskOrganizerState: com.android.server.wm.TaskOrganizerController$TaskOrganizerCallbacks mOrganizer> = r21;

        r22 = new com.android.server.wm.TaskOrganizerController$DeathRecipient;

        specialinvoke r22.<com.android.server.wm.TaskOrganizerController$DeathRecipient: void <init>(com.android.server.wm.TaskOrganizerController,android.window.ITaskOrganizer)>(r15, r1);

        r0.<com.android.server.wm.TaskOrganizerController$TaskOrganizerState: com.android.server.wm.TaskOrganizerController$DeathRecipient mDeathRecipient> = r22;

     label3:
        $r12 = interfaceinvoke r1.<android.window.ITaskOrganizer: android.os.IBinder asBinder()>();

        $r13 = r0.<com.android.server.wm.TaskOrganizerController$TaskOrganizerState: com.android.server.wm.TaskOrganizerController$DeathRecipient mDeathRecipient>;

        interfaceinvoke $r12.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r13, 0);

     label4:
        goto label6;

     label5:
        $r14 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("TaskOrganizerController", "TaskOrganizer failed to register death recipient");

     label6:
        r0.<com.android.server.wm.TaskOrganizerController$TaskOrganizerState: int mUid> = i0;

        return;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    static com.android.server.wm.TaskOrganizerController$TaskOrganizerCallbacks access$500(com.android.server.wm.TaskOrganizerController$TaskOrganizerState)
    {
        com.android.server.wm.TaskOrganizerController$TaskOrganizerState r0;
        com.android.server.wm.TaskOrganizerController$TaskOrganizerCallbacks $r1;

        r0 := @parameter0: com.android.server.wm.TaskOrganizerController$TaskOrganizerState;

        $r1 = r0.<com.android.server.wm.TaskOrganizerController$TaskOrganizerState: com.android.server.wm.TaskOrganizerController$TaskOrganizerCallbacks mOrganizer>;

        return $r1;
    }

    static boolean access$600(com.android.server.wm.TaskOrganizerController$TaskOrganizerState)
    {
        com.android.server.wm.TaskOrganizerController$TaskOrganizerState r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.wm.TaskOrganizerController$TaskOrganizerState;

        $z0 = r0.<com.android.server.wm.TaskOrganizerController$TaskOrganizerState: boolean mInterceptBackPressedOnTaskRoot>;

        return $z0;
    }

    static java.util.ArrayList access$700(com.android.server.wm.TaskOrganizerController$TaskOrganizerState)
    {
        com.android.server.wm.TaskOrganizerController$TaskOrganizerState r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: com.android.server.wm.TaskOrganizerController$TaskOrganizerState;

        $r1 = r0.<com.android.server.wm.TaskOrganizerController$TaskOrganizerState: java.util.ArrayList mOrganizedTasks>;

        return $r1;
    }

    static int access$800(com.android.server.wm.TaskOrganizerController$TaskOrganizerState)
    {
        com.android.server.wm.TaskOrganizerController$TaskOrganizerState r0;
        int $i0;

        r0 := @parameter0: com.android.server.wm.TaskOrganizerController$TaskOrganizerState;

        $i0 = r0.<com.android.server.wm.TaskOrganizerController$TaskOrganizerState: int mUid>;

        return $i0;
    }

    void addTask(com.android.server.wm.Task)
    {
        com.android.server.wm.TaskOrganizerController$TaskOrganizerState r0;
        com.android.server.wm.Task r1;
        boolean $z0, $z1, $z2;
        java.util.ArrayList $r2, $r4;
        com.android.server.wm.TaskOrganizerController$TaskOrganizerCallbacks $r3;

        r0 := @this: com.android.server.wm.TaskOrganizerController$TaskOrganizerState;

        r1 := @parameter0: com.android.server.wm.Task;

        $z0 = r1.<com.android.server.wm.Task: boolean mTaskAppearedSent>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.server.wm.TaskOrganizerController$TaskOrganizerState: java.util.ArrayList mOrganizedTasks>;

        $z1 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z1 != 0 goto label2;

        $r4 = r0.<com.android.server.wm.TaskOrganizerController$TaskOrganizerState: java.util.ArrayList mOrganizedTasks>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label2:
        $z2 = virtualinvoke r1.<com.android.server.wm.Task: boolean taskAppearedReady()>();

        if $z2 == 0 goto label3;

        r1.<com.android.server.wm.Task: boolean mTaskAppearedSent> = 1;

        $r3 = r0.<com.android.server.wm.TaskOrganizerController$TaskOrganizerState: com.android.server.wm.TaskOrganizerController$TaskOrganizerCallbacks mOrganizer>;

        virtualinvoke $r3.<com.android.server.wm.TaskOrganizerController$TaskOrganizerCallbacks: void onTaskAppeared(com.android.server.wm.Task)>(r1);

     label3:
        return;
    }

    void dispose()
    {
        com.android.server.wm.TaskOrganizerController$TaskOrganizerState r0;
        com.android.server.wm.Task r1;
        com.android.server.wm.TaskOrganizerController $r2, $r5, $r7, $r13;
        android.util.SparseArray $r3, $r14;
        int $i0, i1;
        java.util.ArrayList $r4, $r10, $r12;
        boolean $z0, $z2;
        java.util.HashMap $r6;
        android.os.IBinder $r8, $r18;
        java.lang.Object $r11, $r15;
        com.android.server.wm.TaskOrganizerController$TaskOrganizerCallbacks $r16;
        java.util.LinkedList $r17;

        r0 := @this: com.android.server.wm.TaskOrganizerController$TaskOrganizerState;

        $r2 = r0.<com.android.server.wm.TaskOrganizerController$TaskOrganizerState: com.android.server.wm.TaskOrganizerController this$0>;

        $r3 = staticinvoke <com.android.server.wm.TaskOrganizerController: android.util.SparseArray access$400(com.android.server.wm.TaskOrganizerController)>($r2);

        $i0 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r13 = r0.<com.android.server.wm.TaskOrganizerController$TaskOrganizerState: com.android.server.wm.TaskOrganizerController this$0>;

        $r14 = staticinvoke <com.android.server.wm.TaskOrganizerController: android.util.SparseArray access$400(com.android.server.wm.TaskOrganizerController)>($r13);

        $r15 = virtualinvoke $r14.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r17 = (java.util.LinkedList) $r15;

        $r16 = r0.<com.android.server.wm.TaskOrganizerController$TaskOrganizerState: com.android.server.wm.TaskOrganizerController$TaskOrganizerCallbacks mOrganizer>;

        $r18 = virtualinvoke $r16.<com.android.server.wm.TaskOrganizerController$TaskOrganizerCallbacks: android.os.IBinder getBinder()>();

        virtualinvoke $r17.<java.util.LinkedList: boolean remove(java.lang.Object)>($r18);

        i1 = i1 + -1;

        goto label1;

     label2:
        $r4 = r0.<com.android.server.wm.TaskOrganizerController$TaskOrganizerState: java.util.ArrayList mOrganizedTasks>;

        $z0 = virtualinvoke $r4.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        $r10 = r0.<com.android.server.wm.TaskOrganizerController$TaskOrganizerState: java.util.ArrayList mOrganizedTasks>;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r1 = (com.android.server.wm.Task) $r11;

        virtualinvoke r1.<com.android.server.wm.Task: boolean updateTaskOrganizerState(boolean)>(1);

        $r12 = r0.<com.android.server.wm.TaskOrganizerController$TaskOrganizerState: java.util.ArrayList mOrganizedTasks>;

        $z2 = virtualinvoke $r12.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z2 == 0 goto label3;

        virtualinvoke r0.<com.android.server.wm.TaskOrganizerController$TaskOrganizerState: void removeTask(com.android.server.wm.Task)>(r1);

     label3:
        goto label2;

     label4:
        $r5 = r0.<com.android.server.wm.TaskOrganizerController$TaskOrganizerState: com.android.server.wm.TaskOrganizerController this$0>;

        $r6 = staticinvoke <com.android.server.wm.TaskOrganizerController: java.util.HashMap access$100(com.android.server.wm.TaskOrganizerController)>($r5);

        $r7 = r0.<com.android.server.wm.TaskOrganizerController$TaskOrganizerState: com.android.server.wm.TaskOrganizerController this$0>;

        $r8 = virtualinvoke $r7.<com.android.server.wm.TaskOrganizerController: android.os.IBinder asBinder()>();

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r8);

        return;
    }

    void removeTask(com.android.server.wm.Task)
    {
        com.android.server.wm.TaskOrganizerController$TaskOrganizerState r0;
        com.android.server.wm.Task r1;
        boolean $z0;
        java.util.ArrayList $r2;
        com.android.server.wm.TaskOrganizerController$TaskOrganizerCallbacks $r3;

        r0 := @this: com.android.server.wm.TaskOrganizerController$TaskOrganizerState;

        r1 := @parameter0: com.android.server.wm.Task;

        $z0 = r1.<com.android.server.wm.Task: boolean mTaskAppearedSent>;

        if $z0 == 0 goto label1;

        virtualinvoke r1.<com.android.server.wm.Task: void migrateToNewSurfaceControl()>();

        r1.<com.android.server.wm.Task: boolean mTaskAppearedSent> = 0;

        $r3 = r0.<com.android.server.wm.TaskOrganizerController$TaskOrganizerState: com.android.server.wm.TaskOrganizerController$TaskOrganizerCallbacks mOrganizer>;

        virtualinvoke $r3.<com.android.server.wm.TaskOrganizerController$TaskOrganizerCallbacks: void onTaskVanished(com.android.server.wm.Task)>(r1);

     label1:
        $r2 = r0.<com.android.server.wm.TaskOrganizerController$TaskOrganizerState: java.util.ArrayList mOrganizedTasks>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        return;
    }

    void setInterceptBackPressedOnTaskRoot(boolean)
    {
        com.android.server.wm.TaskOrganizerController$TaskOrganizerState r0;
        boolean z0;

        r0 := @this: com.android.server.wm.TaskOrganizerController$TaskOrganizerState;

        z0 := @parameter0: boolean;

        r0.<com.android.server.wm.TaskOrganizerController$TaskOrganizerState: boolean mInterceptBackPressedOnTaskRoot> = z0;

        return;
    }

    void unlinkDeath()
    {
        com.android.server.wm.TaskOrganizerController$TaskOrganizerState r0;
        com.android.server.wm.TaskOrganizerController$TaskOrganizerCallbacks $r1;
        android.os.IBinder $r2;
        com.android.server.wm.TaskOrganizerController$DeathRecipient $r3;

        r0 := @this: com.android.server.wm.TaskOrganizerController$TaskOrganizerState;

        $r1 = r0.<com.android.server.wm.TaskOrganizerController$TaskOrganizerState: com.android.server.wm.TaskOrganizerController$TaskOrganizerCallbacks mOrganizer>;

        $r2 = virtualinvoke $r1.<com.android.server.wm.TaskOrganizerController$TaskOrganizerCallbacks: android.os.IBinder getBinder()>();

        $r3 = r0.<com.android.server.wm.TaskOrganizerController$TaskOrganizerState: com.android.server.wm.TaskOrganizerController$DeathRecipient mDeathRecipient>;

        interfaceinvoke $r2.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r3, 0);

        return;
    }
}
