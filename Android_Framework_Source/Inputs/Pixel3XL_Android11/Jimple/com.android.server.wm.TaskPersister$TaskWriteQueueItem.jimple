class com.android.server.wm.TaskPersister$TaskWriteQueueItem extends java.lang.Object implements com.android.server.wm.PersisterQueue$WriteQueueItem
{
    private final com.android.server.wm.ActivityTaskManagerService mService;
    private final com.android.server.wm.Task mTask;

    void <init>(com.android.server.wm.Task, com.android.server.wm.ActivityTaskManagerService)
    {
        com.android.server.wm.TaskPersister$TaskWriteQueueItem r0;
        com.android.server.wm.Task r1;
        com.android.server.wm.ActivityTaskManagerService r2;

        r0 := @this: com.android.server.wm.TaskPersister$TaskWriteQueueItem;

        r1 := @parameter0: com.android.server.wm.Task;

        r2 := @parameter1: com.android.server.wm.ActivityTaskManagerService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.wm.TaskPersister$TaskWriteQueueItem: com.android.server.wm.Task mTask> = r1;

        r0.<com.android.server.wm.TaskPersister$TaskWriteQueueItem: com.android.server.wm.ActivityTaskManagerService mService> = r2;

        return;
    }

    static com.android.server.wm.Task access$200(com.android.server.wm.TaskPersister$TaskWriteQueueItem)
    {
        com.android.server.wm.TaskPersister$TaskWriteQueueItem r0;
        com.android.server.wm.Task $r1;

        r0 := @parameter0: com.android.server.wm.TaskPersister$TaskWriteQueueItem;

        $r1 = r0.<com.android.server.wm.TaskPersister$TaskWriteQueueItem: com.android.server.wm.Task mTask>;

        return $r1;
    }

    private java.io.StringWriter saveToXml(com.android.server.wm.Task) throws java.lang.Exception
    {
        com.android.server.wm.TaskPersister$TaskWriteQueueItem r0;
        com.android.server.wm.Task r1;
        com.android.internal.util.FastXmlSerializer $r4;
        java.io.StringWriter $r5;
        java.lang.Boolean $r6;

        r0 := @this: com.android.server.wm.TaskPersister$TaskWriteQueueItem;

        r1 := @parameter0: com.android.server.wm.Task;

        $r4 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r4.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        $r5 = new java.io.StringWriter;

        specialinvoke $r5.<java.io.StringWriter: void <init>()>();

        interfaceinvoke $r4.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.Writer)>($r5);

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke $r4.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r6);

        interfaceinvoke $r4.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "task");

        virtualinvoke r1.<com.android.server.wm.Task: void saveToXml(org.xmlpull.v1.XmlSerializer)>($r4);

        interfaceinvoke $r4.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "task");

        interfaceinvoke $r4.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        interfaceinvoke $r4.<org.xmlpull.v1.XmlSerializer: void flush()>();

        return $r5;
    }

    public void process()
    {
        com.android.server.wm.TaskPersister$TaskWriteQueueItem r0;
        com.android.server.wm.Task r1;
        boolean z0, $z1, $z2;
        java.io.File r2, r4;
        android.util.AtomicFile r3, r20;
        java.lang.StringBuilder r5, $r13, r21;
        com.android.server.wm.ActivityTaskManagerService $r6;
        int $i0, $i1, $i2;
        java.lang.String $r7, $r8, $r9, $r11, $r14;
        byte[] $r10;
        java.lang.Throwable $r12, $r15;
        java.lang.Exception $r16;
        com.android.server.wm.WindowManagerGlobalLock r17;
        java.io.StringWriter r18;
        java.io.FileOutputStream r19, r23;

        r0 := @this: com.android.server.wm.TaskPersister$TaskWriteQueueItem;

        r1 = r0.<com.android.server.wm.TaskPersister$TaskWriteQueueItem: com.android.server.wm.Task mTask>;

        $r6 = r0.<com.android.server.wm.TaskPersister$TaskWriteQueueItem: com.android.server.wm.ActivityTaskManagerService mService>;

        r17 = $r6.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r17;

     label01:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        z0 = r1.<com.android.server.wm.Task: boolean inRecents>;

     label02:
        r18 = null;

        if z0 == 0 goto label06;

     label03:
        r18 = specialinvoke r0.<com.android.server.wm.TaskPersister$TaskWriteQueueItem: java.io.StringWriter saveToXml(com.android.server.wm.Task)>(r1);

     label04:
        goto label06;

     label05:
        $r16 := @caughtexception;

        r18 = null;

     label06:
        exitmonitor r17;

     label07:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        if r18 == null goto label59;

        r19 = null;

        r20 = null;

     label08:
        $i0 = r1.<com.android.server.wm.Task: int mUserId>;

        r2 = staticinvoke <com.android.server.wm.TaskPersister: java.io.File access$000(int)>($i0);

     label09:
        r19 = null;

        r20 = null;

     label10:
        $z1 = virtualinvoke r2.<java.io.File: boolean isDirectory()>();

        if $z1 != 0 goto label32;

     label11:
        r19 = null;

        r20 = null;

     label12:
        $z2 = virtualinvoke r2.<java.io.File: boolean mkdirs()>();

        if $z2 != 0 goto label32;

     label13:
        r19 = null;

        r20 = null;

     label14:
        r21 = new java.lang.StringBuilder;

     label15:
        r19 = null;

        r20 = null;

     label16:
        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

     label17:
        r19 = null;

        r20 = null;

     label18:
        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure creating tasks directory for user ");

     label19:
        r19 = null;

        r20 = null;

     label20:
        $i2 = r1.<com.android.server.wm.Task: int mUserId>;

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

     label21:
        r19 = null;

        r20 = null;

     label22:
        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

     label23:
        r19 = null;

        r20 = null;

     label24:
        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

     label25:
        r19 = null;

        r20 = null;

     label26:
        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Dropping persistence for task ");

     label27:
        r19 = null;

        r20 = null;

     label28:
        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

     label29:
        r19 = null;

        r20 = null;

     label30:
        $r11 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("TaskPersister", $r11);

     label31:
        return;

     label32:
        r19 = null;

        r20 = null;

     label33:
        r3 = new android.util.AtomicFile;

     label34:
        r19 = null;

        r20 = null;

     label35:
        r4 = new java.io.File;

     label36:
        r19 = null;

        r20 = null;

     label37:
        r5 = new java.lang.StringBuilder;

     label38:
        r19 = null;

        r20 = null;

     label39:
        specialinvoke r5.<java.lang.StringBuilder: void <init>()>();

     label40:
        r19 = null;

        r20 = null;

     label41:
        $i1 = r1.<com.android.server.wm.Task: int mTaskId>;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

     label42:
        r19 = null;

        r20 = null;

     label43:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_task.xml");

     label44:
        r19 = null;

        r20 = null;

     label45:
        $r8 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r4.<java.io.File: void <init>(java.io.File,java.lang.String)>(r2, $r8);

     label46:
        r19 = null;

        r20 = null;

     label47:
        specialinvoke r3.<android.util.AtomicFile: void <init>(java.io.File)>(r4);

     label48:
        r19 = null;

        r20 = r3;

     label49:
        r23 = virtualinvoke r3.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

     label50:
        r19 = r23;

        r20 = r3;

     label51:
        $r9 = virtualinvoke r18.<java.io.StringWriter: java.lang.String toString()>();

        $r10 = virtualinvoke $r9.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r23.<java.io.FileOutputStream: void write(byte[])>($r10);

     label52:
        r19 = r23;

        r20 = r3;

     label53:
        virtualinvoke r23.<java.io.FileOutputStream: void write(int)>(10);

     label54:
        r19 = r23;

        r20 = r3;

     label55:
        virtualinvoke r3.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r23);

     label56:
        goto label59;

     label57:
        $r12 := @caughtexception;

        if r19 == null goto label58;

        virtualinvoke r20.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r19);

     label58:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to open ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r20);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for persisting. ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("TaskPersister", $r14);

     label59:
        return;

     label60:
        $r15 := @caughtexception;

     label61:
        exitmonitor r17;

     label62:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r15;

        catch java.lang.Throwable from label01 to label02 with label60;
        catch java.lang.Exception from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label60;
        catch java.lang.Throwable from label06 to label07 with label60;
        catch java.io.IOException from label08 to label09 with label57;
        catch java.io.IOException from label10 to label11 with label57;
        catch java.io.IOException from label12 to label13 with label57;
        catch java.io.IOException from label14 to label15 with label57;
        catch java.io.IOException from label16 to label17 with label57;
        catch java.io.IOException from label18 to label19 with label57;
        catch java.io.IOException from label20 to label21 with label57;
        catch java.io.IOException from label22 to label23 with label57;
        catch java.io.IOException from label24 to label25 with label57;
        catch java.io.IOException from label26 to label27 with label57;
        catch java.io.IOException from label28 to label29 with label57;
        catch java.io.IOException from label30 to label31 with label57;
        catch java.io.IOException from label33 to label34 with label57;
        catch java.io.IOException from label35 to label36 with label57;
        catch java.io.IOException from label37 to label38 with label57;
        catch java.io.IOException from label39 to label40 with label57;
        catch java.io.IOException from label41 to label42 with label57;
        catch java.io.IOException from label43 to label44 with label57;
        catch java.io.IOException from label45 to label46 with label57;
        catch java.io.IOException from label47 to label48 with label57;
        catch java.io.IOException from label49 to label50 with label57;
        catch java.io.IOException from label51 to label52 with label57;
        catch java.io.IOException from label53 to label54 with label57;
        catch java.io.IOException from label55 to label56 with label57;
        catch java.lang.Throwable from label61 to label62 with label60;
    }

    public java.lang.String toString()
    {
        com.android.server.wm.TaskPersister$TaskWriteQueueItem r0;
        java.lang.StringBuilder $r2;
        com.android.server.wm.Task $r4;
        java.lang.String $r7;

        r0 := @this: com.android.server.wm.TaskPersister$TaskWriteQueueItem;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TaskWriteQueueItem{task=");

        $r4 = r0.<com.android.server.wm.TaskPersister$TaskWriteQueueItem: com.android.server.wm.Task mTask>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }
}
