public class com.android.server.wm.TaskPersister extends java.lang.Object implements com.android.server.wm.PersisterQueue$Listener
{
    static final boolean DEBUG;
    private static final java.lang.String IMAGES_DIRNAME;
    static final java.lang.String IMAGE_EXTENSION;
    private static final java.lang.String PERSISTED_TASK_IDS_FILENAME;
    static final java.lang.String TAG;
    private static final java.lang.String TAG_TASK;
    private static final java.lang.String TASKS_DIRNAME;
    private static final java.lang.String TASK_FILENAME_SUFFIX;
    private final java.lang.Object mIoLock;
    private final com.android.server.wm.PersisterQueue mPersisterQueue;
    private final com.android.server.wm.RecentTasks mRecentTasks;
    private final com.android.server.wm.ActivityTaskManagerService mService;
    private final com.android.server.wm.ActivityStackSupervisor mStackSupervisor;
    private final java.io.File mTaskIdsDir;
    private final android.util.SparseArray mTaskIdsInFile;
    private final android.util.ArraySet mTmpTaskIds;

    void <init>(java.io.File)
    {
        com.android.server.wm.TaskPersister r0;
        android.util.SparseArray $r1;
        java.lang.Object $r2;
        android.util.ArraySet $r3;
        com.android.server.wm.PersisterQueue $r4;
        java.io.File r5;

        r0 := @this: com.android.server.wm.TaskPersister;

        r5 := @parameter0: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.util.SparseArray;

        specialinvoke $r1.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.wm.TaskPersister: android.util.SparseArray mTaskIdsInFile> = $r1;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.server.wm.TaskPersister: java.lang.Object mIoLock> = $r2;

        $r3 = new android.util.ArraySet;

        specialinvoke $r3.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.wm.TaskPersister: android.util.ArraySet mTmpTaskIds> = $r3;

        r0.<com.android.server.wm.TaskPersister: java.io.File mTaskIdsDir> = r5;

        r0.<com.android.server.wm.TaskPersister: com.android.server.wm.ActivityStackSupervisor mStackSupervisor> = null;

        r0.<com.android.server.wm.TaskPersister: com.android.server.wm.ActivityTaskManagerService mService> = null;

        r0.<com.android.server.wm.TaskPersister: com.android.server.wm.RecentTasks mRecentTasks> = null;

        $r4 = new com.android.server.wm.PersisterQueue;

        specialinvoke $r4.<com.android.server.wm.PersisterQueue: void <init>()>();

        r0.<com.android.server.wm.TaskPersister: com.android.server.wm.PersisterQueue mPersisterQueue> = $r4;

        virtualinvoke $r4.<com.android.server.wm.PersisterQueue: void addListener(com.android.server.wm.PersisterQueue$Listener)>(r0);

        return;
    }

    void <init>(java.io.File, com.android.server.wm.ActivityStackSupervisor, com.android.server.wm.ActivityTaskManagerService, com.android.server.wm.RecentTasks, com.android.server.wm.PersisterQueue)
    {
        com.android.server.wm.TaskPersister r0;
        com.android.server.wm.ActivityStackSupervisor r1;
        com.android.server.wm.ActivityTaskManagerService r2;
        com.android.server.wm.RecentTasks r3;
        com.android.server.wm.PersisterQueue r4;
        android.util.SparseArray $r6;
        java.lang.Object $r7;
        android.util.ArraySet $r8;
        java.io.File $r9, r18, $r20, $r23, $r24;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.StringBuilder $r10, $r14;
        java.lang.String $r13, $r17;

        r0 := @this: com.android.server.wm.TaskPersister;

        r18 := @parameter0: java.io.File;

        r1 := @parameter1: com.android.server.wm.ActivityStackSupervisor;

        r2 := @parameter2: com.android.server.wm.ActivityTaskManagerService;

        r3 := @parameter3: com.android.server.wm.RecentTasks;

        r4 := @parameter4: com.android.server.wm.PersisterQueue;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r6 = new android.util.SparseArray;

        specialinvoke $r6.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.wm.TaskPersister: android.util.SparseArray mTaskIdsInFile> = $r6;

        $r7 = new java.lang.Object;

        specialinvoke $r7.<java.lang.Object: void <init>()>();

        r0.<com.android.server.wm.TaskPersister: java.lang.Object mIoLock> = $r7;

        $r8 = new android.util.ArraySet;

        specialinvoke $r8.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.wm.TaskPersister: android.util.ArraySet mTmpTaskIds> = $r8;

        $r9 = new java.io.File;

        specialinvoke $r9.<java.io.File: void <init>(java.io.File,java.lang.String)>(r18, "recent_images");

        $z0 = virtualinvoke $r9.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label2;

        $z3 = staticinvoke <android.os.FileUtils: boolean deleteContents(java.io.File)>($r9);

        if $z3 == 0 goto label1;

        $z4 = virtualinvoke $r9.<java.io.File: boolean delete()>();

        if $z4 != 0 goto label2;

     label1:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure deleting legacy images directory: ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("TaskPersister", $r17);

     label2:
        $r20 = new java.io.File;

        specialinvoke $r20.<java.io.File: void <init>(java.io.File,java.lang.String)>(r18, "recent_tasks");

        $z5 = virtualinvoke $r20.<java.io.File: boolean exists()>();

        if $z5 == 0 goto label4;

        $z1 = staticinvoke <android.os.FileUtils: boolean deleteContents(java.io.File)>($r20);

        if $z1 == 0 goto label3;

        $z2 = virtualinvoke $r20.<java.io.File: boolean delete()>();

        if $z2 != 0 goto label4;

     label3:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure deleting legacy tasks directory: ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("TaskPersister", $r13);

     label4:
        $r23 = new java.io.File;

        $r24 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        specialinvoke $r23.<java.io.File: void <init>(java.io.File,java.lang.String)>($r24, "system_de");

        r0.<com.android.server.wm.TaskPersister: java.io.File mTaskIdsDir> = $r23;

        r0.<com.android.server.wm.TaskPersister: com.android.server.wm.ActivityStackSupervisor mStackSupervisor> = r1;

        r0.<com.android.server.wm.TaskPersister: com.android.server.wm.ActivityTaskManagerService mService> = r2;

        r0.<com.android.server.wm.TaskPersister: com.android.server.wm.RecentTasks mRecentTasks> = r3;

        r0.<com.android.server.wm.TaskPersister: com.android.server.wm.PersisterQueue mPersisterQueue> = r4;

        virtualinvoke r4.<com.android.server.wm.PersisterQueue: void addListener(com.android.server.wm.PersisterQueue$Listener)>(r0);

        return;
    }

    static java.io.File access$000(int)
    {
        int i0;
        java.io.File $r0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <com.android.server.wm.TaskPersister: java.io.File getUserTasksDir(int)>(i0);

        return $r0;
    }

    static boolean access$100(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <com.android.server.wm.TaskPersister: boolean createParentDirectory(java.lang.String)>(r0);

        return $z0;
    }

    private static boolean createParentDirectory(java.lang.String)
    {
        java.io.File $r0, r2;
        boolean $z0, $z1, z2;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(r1);

        r2 = virtualinvoke $r0.<java.io.File: java.io.File getParentFile()>();

        $z0 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r2.<java.io.File: boolean mkdirs()>();

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    private java.lang.String fileToString(java.io.File)
    {
        com.android.server.wm.TaskPersister r0;
        java.io.File r1;
        java.lang.String r2, $r7, $r12, $r14, r17, r18;
        java.lang.StringBuffer r3;
        java.lang.StringBuilder r4, $r10;
        long $l0;
        int $i1, $i2;
        java.lang.Throwable $r9;
        java.io.BufferedReader r15;
        java.io.FileReader r16;

        r0 := @this: com.android.server.wm.TaskPersister;

        r1 := @parameter0: java.io.File;

        r2 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

     label1:
        r15 = new java.io.BufferedReader;

        r16 = new java.io.FileReader;

        specialinvoke r16.<java.io.FileReader: void <init>(java.io.File)>(r1);

        specialinvoke r15.<java.io.BufferedReader: void <init>(java.io.Reader)>(r16);

        r3 = new java.lang.StringBuffer;

        $l0 = virtualinvoke r1.<java.io.File: long length()>();

        $i1 = (int) $l0;

        $i2 = $i1 * 2;

        specialinvoke r3.<java.lang.StringBuffer: void <init>(int)>($i2);

     label2:
        r17 = virtualinvoke r15.<java.io.BufferedReader: java.lang.String readLine()>();

     label3:
        if r17 == null goto label6;

     label4:
        r4 = new java.lang.StringBuilder;

        specialinvoke r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

     label5:
        goto label2;

     label6:
        virtualinvoke r15.<java.io.BufferedReader: void close()>();

        r18 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>();

     label7:
        return r18;

     label8:
        $r9 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t read file ");

        $r12 = virtualinvoke r1.<java.io.File: java.lang.String getName()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("TaskPersister", $r14);

        return null;

        catch java.io.IOException from label1 to label2 with label8;
        catch java.io.IOException from label2 to label3 with label8;
        catch java.io.IOException from label4 to label5 with label8;
        catch java.io.IOException from label6 to label7 with label8;
    }

    private android.graphics.Bitmap getImageFromWriteQueue(java.lang.String)
    {
        com.android.server.wm.TaskPersister r0;
        com.android.server.wm._$$Lambda$TaskPersister$mW0HULrR8EtZ9La_pL9kLTnHSzk $r1;
        com.android.server.wm.PersisterQueue $r2;
        com.android.server.wm.PersisterQueue$WriteQueueItem $r3;
        java.lang.String r4;
        com.android.server.wm.TaskPersister$ImageWriteQueueItem r5;
        android.graphics.Bitmap r6;

        r0 := @this: com.android.server.wm.TaskPersister;

        r4 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.wm.TaskPersister: com.android.server.wm.PersisterQueue mPersisterQueue>;

        $r1 = new com.android.server.wm._$$Lambda$TaskPersister$mW0HULrR8EtZ9La_pL9kLTnHSzk;

        specialinvoke $r1.<com.android.server.wm._$$Lambda$TaskPersister$mW0HULrR8EtZ9La_pL9kLTnHSzk: void <init>(java.lang.String)>(r4);

        $r3 = virtualinvoke $r2.<com.android.server.wm.PersisterQueue: com.android.server.wm.PersisterQueue$WriteQueueItem findLastItem(java.util.function.Predicate,java.lang.Class)>($r1, class "Lcom/android/server/wm/TaskPersister$ImageWriteQueueItem;");

        r5 = (com.android.server.wm.TaskPersister$ImageWriteQueueItem) $r3;

        if r5 == null goto label1;

        r6 = r5.<com.android.server.wm.TaskPersister$ImageWriteQueueItem: android.graphics.Bitmap mImage>;

        goto label2;

     label1:
        r6 = null;

     label2:
        return r6;
    }

    static java.io.File getUserImagesDir(int)
    {
        int i0;
        java.io.File $r0, $r1;

        i0 := @parameter0: int;

        $r0 = new java.io.File;

        $r1 = staticinvoke <android.os.Environment: java.io.File getDataSystemCeDirectory(int)>(i0);

        specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, "recent_images");

        return $r0;
    }

    private java.io.File getUserPersistedTaskIdsFile(int)
    {
        com.android.server.wm.TaskPersister r0;
        int i0;
        java.io.File $r3, $r4, $r10;
        java.lang.String $r5, $r9;
        boolean $z0, $z1;
        java.lang.StringBuilder $r6;

        r0 := @this: com.android.server.wm.TaskPersister;

        i0 := @parameter0: int;

        $r3 = new java.io.File;

        $r4 = r0.<com.android.server.wm.TaskPersister: java.io.File mTaskIdsDir>;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, $r5);

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke $r3.<java.io.File: boolean mkdirs()>();

        if $z1 != 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error while creating user directory: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("TaskPersister", $r9);

     label1:
        $r10 = new java.io.File;

        specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, "persisted_taskIds.txt");

        return $r10;
    }

    private static java.io.File getUserTasksDir(int)
    {
        int i0;
        java.io.File $r0, $r1;

        i0 := @parameter0: int;

        $r0 = new java.io.File;

        $r1 = staticinvoke <android.os.Environment: java.io.File getDataSystemCeDirectory(int)>(i0);

        specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, "recent_tasks");

        return $r0;
    }

    static boolean lambda$getImageFromWriteQueue$2(java.lang.String, com.android.server.wm.TaskPersister$ImageWriteQueueItem)
    {
        java.lang.String r0, $r2;
        com.android.server.wm.TaskPersister$ImageWriteQueueItem r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.android.server.wm.TaskPersister$ImageWriteQueueItem;

        $r2 = r1.<com.android.server.wm.TaskPersister$ImageWriteQueueItem: java.lang.String mFilePath>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        return $z0;
    }

    static boolean lambda$removeThumbnails$0(com.android.server.wm.Task, com.android.server.wm.TaskPersister$ImageWriteQueueItem)
    {
        com.android.server.wm.Task r0;
        com.android.server.wm.TaskPersister$ImageWriteQueueItem r1;
        java.io.File $r2;
        java.lang.String $r3, $r4, $r5;
        int $i0;
        boolean $z0;

        r0 := @parameter0: com.android.server.wm.Task;

        r1 := @parameter1: com.android.server.wm.TaskPersister$ImageWriteQueueItem;

        $r2 = new java.io.File;

        $r3 = r1.<com.android.server.wm.TaskPersister$ImageWriteQueueItem: java.lang.String mFilePath>;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r3);

        $r4 = virtualinvoke $r2.<java.io.File: java.lang.String getName()>();

        $i0 = r0.<com.android.server.wm.Task: int mTaskId>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>($r5);

        return $z0;
    }

    static boolean lambda$wakeup$1(com.android.server.wm.Task, com.android.server.wm.TaskPersister$TaskWriteQueueItem)
    {
        com.android.server.wm.Task r0, $r2;
        com.android.server.wm.TaskPersister$TaskWriteQueueItem r1;
        boolean z0;

        r0 := @parameter0: com.android.server.wm.Task;

        r1 := @parameter1: com.android.server.wm.TaskPersister$TaskWriteQueueItem;

        $r2 = staticinvoke <com.android.server.wm.TaskPersister$TaskWriteQueueItem: com.android.server.wm.Task access$200(com.android.server.wm.TaskPersister$TaskWriteQueueItem)>(r1);

        if r0 != $r2 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void removeObsoleteFiles(android.util.ArraySet)
    {
        com.android.server.wm.TaskPersister r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        int[] r2;
        int i0, i1, i2;
        com.android.server.wm.ActivityTaskManagerService $r3;
        com.android.server.wm.RecentTasks $r4;
        java.io.File $r5, $r7;
        java.io.File[] $r6, $r8;
        java.lang.Throwable $r9;
        android.util.ArraySet r10;

        r0 := @this: com.android.server.wm.TaskPersister;

        r10 := @parameter0: android.util.ArraySet;

        $r3 = r0.<com.android.server.wm.TaskPersister: com.android.server.wm.ActivityTaskManagerService mService>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r4 = r0.<com.android.server.wm.TaskPersister: com.android.server.wm.RecentTasks mRecentTasks>;

        r2 = virtualinvoke $r4.<com.android.server.wm.RecentTasks: int[] usersWithRecentsLoadedLocked()>();

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        i0 = lengthof r2;

        i2 = 0;

     label3:
        if i2 >= i0 goto label4;

        i1 = r2[i2];

        $r5 = staticinvoke <com.android.server.wm.TaskPersister: java.io.File getUserImagesDir(int)>(i1);

        $r6 = virtualinvoke $r5.<java.io.File: java.io.File[] listFiles()>();

        staticinvoke <com.android.server.wm.TaskPersister: void removeObsoleteFiles(android.util.ArraySet,java.io.File[])>(r10, $r6);

        $r7 = staticinvoke <com.android.server.wm.TaskPersister: java.io.File getUserTasksDir(int)>(i1);

        $r8 = virtualinvoke $r7.<java.io.File: java.io.File[] listFiles()>();

        staticinvoke <com.android.server.wm.TaskPersister: void removeObsoleteFiles(android.util.ArraySet,java.io.File[])>(r10, $r8);

        i2 = i2 + 1;

        goto label3;

     label4:
        return;

     label5:
        $r9 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    private static void removeObsoleteFiles(android.util.ArraySet, java.io.File[])
    {
        android.util.ArraySet r0;
        java.io.File[] r1;
        java.io.File r2;
        int $i0, i3, i4, i5;
        java.lang.String $r3, $r8, $r10, r11;
        java.lang.Integer $r4;
        boolean $z0;
        java.lang.Exception $r5;
        java.lang.StringBuilder $r6;

        r0 := @parameter0: android.util.ArraySet;

        r1 := @parameter1: java.io.File[];

        if r1 != null goto label1;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("TaskPersister", "File error accessing recents directory (directory doesn\'t exist?).");

        return;

     label1:
        i3 = 0;

     label2:
        $i0 = lengthof r1;

        if i3 >= $i0 goto label7;

        r2 = r1[i3];

        r11 = virtualinvoke r2.<java.io.File: java.lang.String getName()>();

        i4 = virtualinvoke r11.<java.lang.String: int indexOf(int)>(95);

        if i4 <= 0 goto label6;

     label3:
        $r3 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int,int)>(0, i4);

        i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

     label4:
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        $z0 = virtualinvoke r0.<android.util.ArraySet: boolean contains(java.lang.Object)>($r4);

        if $z0 != 0 goto label6;

        virtualinvoke r2.<java.io.File: boolean delete()>();

        goto label6;

     label5:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removeObsoleteFiles: Can\'t parse file=");

        $r8 = virtualinvoke r2.<java.io.File: java.lang.String getName()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("TaskPersister", $r10);

        virtualinvoke r2.<java.io.File: boolean delete()>();

     label6:
        i3 = i3 + 1;

        goto label2;

     label7:
        return;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    private void removeThumbnails(com.android.server.wm.Task)
    {
        com.android.server.wm.TaskPersister r0;
        com.android.server.wm.Task r1;
        com.android.server.wm._$$Lambda$TaskPersister$8MhgCrM41UuyRqTjWwKtfifKRLo $r2;
        com.android.server.wm.PersisterQueue $r3;

        r0 := @this: com.android.server.wm.TaskPersister;

        r1 := @parameter0: com.android.server.wm.Task;

        $r3 = r0.<com.android.server.wm.TaskPersister: com.android.server.wm.PersisterQueue mPersisterQueue>;

        $r2 = new com.android.server.wm._$$Lambda$TaskPersister$8MhgCrM41UuyRqTjWwKtfifKRLo;

        specialinvoke $r2.<com.android.server.wm._$$Lambda$TaskPersister$8MhgCrM41UuyRqTjWwKtfifKRLo: void <init>(com.android.server.wm.Task)>(r1);

        virtualinvoke $r3.<com.android.server.wm.PersisterQueue: void removeItems(java.util.function.Predicate,java.lang.Class)>($r2, class "Lcom/android/server/wm/TaskPersister$ImageWriteQueueItem;");

        return;
    }

    static android.graphics.Bitmap restoreImage(java.lang.String)
    {
        java.lang.String r0;
        android.graphics.Bitmap $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>(r0);

        return $r1;
    }

    private com.android.server.wm.Task taskIdToTask(int, java.util.ArrayList)
    {
        com.android.server.wm.TaskPersister r0;
        int i0, $i1, $i3, i4;
        com.android.server.wm.Task r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;
        java.lang.Object $r6;
        java.util.ArrayList r7;

        r0 := @this: com.android.server.wm.TaskPersister;

        i0 := @parameter0: int;

        r7 := @parameter1: java.util.ArrayList;

        if i0 >= 0 goto label1;

        return null;

     label1:
        $i1 = virtualinvoke r7.<java.util.ArrayList: int size()>();

        i4 = $i1 - 1;

     label2:
        if i4 < 0 goto label4;

        $r6 = virtualinvoke r7.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r1 = (com.android.server.wm.Task) $r6;

        $i3 = r1.<com.android.server.wm.Task: int mTaskId>;

        if $i3 != i0 goto label3;

        return r1;

     label3:
        i4 = i4 + -1;

        goto label2;

     label4:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Restore affiliation error looking for taskId=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("TaskPersister", $r5);

        return null;
    }

    private void writeTaskIdsFiles()
    {
        com.android.server.wm.TaskPersister r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        int[] r2;
        int i0, i1, $i2, $i3, i4, i5;
        android.util.SparseBooleanArray r3, $r8, r15, r16;
        android.util.SparseArray $r4, $r10, $r12;
        com.android.server.wm.ActivityTaskManagerService $r5;
        com.android.server.wm.RecentTasks $r6, $r9;
        java.lang.Object $r7, $r11;
        boolean $z0;
        java.lang.Throwable $r13;

        r0 := @this: com.android.server.wm.TaskPersister;

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        $r5 = r0.<com.android.server.wm.TaskPersister: com.android.server.wm.ActivityTaskManagerService mService>;

        r1 = $r5.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label01:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r6 = r0.<com.android.server.wm.TaskPersister: com.android.server.wm.RecentTasks mRecentTasks>;

        r2 = virtualinvoke $r6.<com.android.server.wm.RecentTasks: int[] usersWithRecentsLoadedLocked()>();

        i0 = lengthof r2;

     label02:
        i4 = 0;

     label03:
        if i4 >= i0 goto label10;

        i1 = r2[i4];

     label04:
        $r9 = r0.<com.android.server.wm.TaskPersister: com.android.server.wm.RecentTasks mRecentTasks>;

        r15 = virtualinvoke $r9.<com.android.server.wm.RecentTasks: android.util.SparseBooleanArray getTaskIdsForUser(int)>(i1);

        $r10 = r0.<com.android.server.wm.TaskPersister: android.util.SparseArray mTaskIdsInFile>;

        $r11 = virtualinvoke $r10.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r3 = (android.util.SparseBooleanArray) $r11;

     label05:
        if r3 == null goto label08;

     label06:
        $z0 = virtualinvoke r3.<android.util.SparseBooleanArray: boolean equals(java.lang.Object)>(r15);

        if $z0 == 0 goto label08;

     label07:
        goto label09;

     label08:
        r16 = virtualinvoke r15.<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>();

        $r12 = r0.<com.android.server.wm.TaskPersister: android.util.SparseArray mTaskIdsInFile>;

        virtualinvoke $r12.<android.util.SparseArray: void put(int,java.lang.Object)>(i1, r16);

        virtualinvoke $r4.<android.util.SparseArray: void put(int,java.lang.Object)>(i1, r16);

     label09:
        i4 = i4 + 1;

        goto label03;

     label10:
        exitmonitor r1;

     label11:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        i5 = 0;

     label12:
        $i2 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        if i5 >= $i2 goto label13;

        $r7 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i5);

        $r8 = (android.util.SparseBooleanArray) $r7;

        $i3 = virtualinvoke $r4.<android.util.SparseArray: int keyAt(int)>(i5);

        virtualinvoke r0.<com.android.server.wm.TaskPersister: void writePersistedTaskIdsForUser(android.util.SparseBooleanArray,int)>($r8, $i3);

        i5 = i5 + 1;

        goto label12;

     label13:
        return;

     label14:
        $r13 := @caughtexception;

     label15:
        exitmonitor r1;

     label16:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    void flush()
    {
        com.android.server.wm.TaskPersister r0;
        com.android.server.wm.PersisterQueue $r1;

        r0 := @this: com.android.server.wm.TaskPersister;

        $r1 = r0.<com.android.server.wm.TaskPersister: com.android.server.wm.PersisterQueue mPersisterQueue>;

        virtualinvoke $r1.<com.android.server.wm.PersisterQueue: void flush()>();

        return;
    }

    android.graphics.Bitmap getTaskDescriptionIcon(java.lang.String)
    {
        com.android.server.wm.TaskPersister r0;
        java.lang.String r1;
        android.graphics.Bitmap r2, $r3;

        r0 := @this: com.android.server.wm.TaskPersister;

        r1 := @parameter0: java.lang.String;

        r2 = specialinvoke r0.<com.android.server.wm.TaskPersister: android.graphics.Bitmap getImageFromWriteQueue(java.lang.String)>(r1);

        if r2 == null goto label1;

        return r2;

     label1:
        $r3 = staticinvoke <com.android.server.wm.TaskPersister: android.graphics.Bitmap restoreImage(java.lang.String)>(r1);

        return $r3;
    }

    android.util.SparseBooleanArray loadPersistedTaskIdsForUser(int)
    {
        com.android.server.wm.TaskPersister r0;
        int i0, i1, $i2, i3;
        java.lang.Object r2, $r5, $r10;
        java.io.FileReader r3;
        android.util.SparseArray $r4, $r9, $r28;
        android.util.SparseBooleanArray $r6, $r11, $r12, $r29;
        java.io.File $r7;
        java.lang.String $r8, $r17, r23;
        java.lang.Throwable $r13, $r14, $r15;
        java.lang.Exception $r16;
        java.io.BufferedReader r18, r19, r20, r21;
        java.lang.String[] r24;
        java.lang.StringBuilder r27;

        r0 := @this: com.android.server.wm.TaskPersister;

        i0 := @parameter0: int;

        $r4 = r0.<com.android.server.wm.TaskPersister: android.util.SparseArray mTaskIdsInFile>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        if $r5 == null goto label01;

        $r9 = r0.<com.android.server.wm.TaskPersister: android.util.SparseArray mTaskIdsInFile>;

        $r10 = virtualinvoke $r9.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r11 = (android.util.SparseBooleanArray) $r10;

        $r12 = virtualinvoke $r11.<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>();

        return $r12;

     label01:
        $r6 = new android.util.SparseBooleanArray;

        specialinvoke $r6.<android.util.SparseBooleanArray: void <init>()>();

        r2 = r0.<com.android.server.wm.TaskPersister: java.lang.Object mIoLock>;

        entermonitor r2;

        r18 = null;

        r19 = null;

        r20 = null;

     label02:
        r21 = new java.io.BufferedReader;

     label03:
        r18 = null;

        r19 = null;

        r20 = null;

     label04:
        r3 = new java.io.FileReader;

     label05:
        r18 = null;

        r19 = null;

        r20 = null;

     label06:
        $r7 = specialinvoke r0.<com.android.server.wm.TaskPersister: java.io.File getUserPersistedTaskIdsFile(int)>(i0);

        specialinvoke r3.<java.io.FileReader: void <init>(java.io.File)>($r7);

     label07:
        r18 = null;

        r19 = null;

        r20 = null;

     label08:
        specialinvoke r21.<java.io.BufferedReader: void <init>(java.io.Reader)>(r3);

     label09:
        r18 = r21;

        r19 = r21;

        r20 = r21;

     label10:
        r23 = virtualinvoke r21.<java.io.BufferedReader: java.lang.String readLine()>();

     label11:
        if r23 == null goto label19;

        r18 = r21;

        r19 = r21;

        r20 = r21;

     label12:
        r24 = virtualinvoke r23.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\s+");

     label13:
        r18 = r21;

        r19 = r21;

        r20 = r21;

     label14:
        i1 = lengthof r24;

     label15:
        i3 = 0;

     label16:
        if i3 >= i1 goto label09;

        r18 = r21;

        r19 = r21;

        r20 = r21;

     label17:
        $r8 = r24[i3];

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

        virtualinvoke $r6.<android.util.SparseBooleanArray: void put(int,boolean)>($i2, 1);

     label18:
        i3 = i3 + 1;

        goto label16;

     label19:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r21);

     label20:
        goto label37;

     label21:
        $r15 := @caughtexception;

        goto label33;

     label22:
        $r16 := @caughtexception;

        r18 = r19;

     label23:
        r27 = new java.lang.StringBuilder;

     label24:
        r18 = r19;

     label25:
        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

     label26:
        r18 = r19;

     label27:
        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error while reading taskIds file for user ");

     label28:
        r18 = r19;

     label29:
        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

     label30:
        r18 = r19;

     label31:
        $r17 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TaskPersister", $r17, $r16);

     label32:
        goto label36;

     label33:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r18);

     label34:
        throw $r15;

     label35:
        $r14 := @caughtexception;

        r19 = r20;

     label36:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r19);

     label37:
        exitmonitor r2;

     label38:
        $r28 = r0.<com.android.server.wm.TaskPersister: android.util.SparseArray mTaskIdsInFile>;

        virtualinvoke $r28.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r6);

        $r29 = virtualinvoke $r6.<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>();

        return $r29;

     label39:
        $r13 := @caughtexception;

     label40:
        exitmonitor r2;

     label41:
        throw $r13;

        catch java.io.FileNotFoundException from label02 to label03 with label35;
        catch java.lang.Exception from label02 to label03 with label22;
        catch java.lang.Throwable from label02 to label03 with label21;
        catch java.io.FileNotFoundException from label04 to label05 with label35;
        catch java.lang.Exception from label04 to label05 with label22;
        catch java.lang.Throwable from label04 to label05 with label21;
        catch java.io.FileNotFoundException from label06 to label07 with label35;
        catch java.lang.Exception from label06 to label07 with label22;
        catch java.lang.Throwable from label06 to label07 with label21;
        catch java.io.FileNotFoundException from label08 to label09 with label35;
        catch java.lang.Exception from label08 to label09 with label22;
        catch java.lang.Throwable from label08 to label09 with label21;
        catch java.io.FileNotFoundException from label10 to label11 with label35;
        catch java.lang.Exception from label10 to label11 with label22;
        catch java.lang.Throwable from label10 to label11 with label21;
        catch java.io.FileNotFoundException from label12 to label13 with label35;
        catch java.lang.Exception from label12 to label13 with label22;
        catch java.lang.Throwable from label12 to label13 with label21;
        catch java.io.FileNotFoundException from label14 to label15 with label35;
        catch java.lang.Exception from label14 to label15 with label22;
        catch java.lang.Throwable from label14 to label15 with label21;
        catch java.io.FileNotFoundException from label17 to label18 with label35;
        catch java.lang.Exception from label17 to label18 with label22;
        catch java.lang.Throwable from label17 to label18 with label21;
        catch java.lang.Throwable from label19 to label20 with label39;
        catch java.lang.Throwable from label23 to label24 with label21;
        catch java.lang.Throwable from label25 to label26 with label21;
        catch java.lang.Throwable from label27 to label28 with label21;
        catch java.lang.Throwable from label29 to label30 with label21;
        catch java.lang.Throwable from label31 to label32 with label21;
        catch java.lang.Throwable from label33 to label34 with label39;
        catch java.lang.Throwable from label34 to label35 with label39;
        catch java.lang.Throwable from label36 to label37 with label39;
        catch java.lang.Throwable from label37 to label38 with label39;
        catch java.lang.Throwable from label40 to label41 with label39;
    }

    public void onPreProcessItem(boolean)
    {
        com.android.server.wm.TaskPersister r0;
        boolean z0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        android.util.ArraySet $r3, $r5, $r10, $r12;
        com.android.server.wm.ActivityTaskManagerService $r4, $r7;
        com.android.server.wm.RecentTasks $r6, $r8;
        com.android.server.wm.WindowManagerService $r9;
        int[] $r11;
        java.lang.Throwable $r13;

        r0 := @this: com.android.server.wm.TaskPersister;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label6;

        $r3 = r0.<com.android.server.wm.TaskPersister: android.util.ArraySet mTmpTaskIds>;

        virtualinvoke $r3.<android.util.ArraySet: void clear()>();

        $r4 = r0.<com.android.server.wm.TaskPersister: com.android.server.wm.ActivityTaskManagerService mService>;

        r1 = $r4.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r6 = r0.<com.android.server.wm.TaskPersister: com.android.server.wm.RecentTasks mRecentTasks>;

        $r5 = r0.<com.android.server.wm.TaskPersister: android.util.ArraySet mTmpTaskIds>;

        virtualinvoke $r6.<com.android.server.wm.RecentTasks: void getPersistableTaskIds(android.util.ArraySet)>($r5);

        $r7 = r0.<com.android.server.wm.TaskPersister: com.android.server.wm.ActivityTaskManagerService mService>;

        $r9 = $r7.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        $r10 = r0.<com.android.server.wm.TaskPersister: android.util.ArraySet mTmpTaskIds>;

        $r8 = r0.<com.android.server.wm.TaskPersister: com.android.server.wm.RecentTasks mRecentTasks>;

        $r11 = virtualinvoke $r8.<com.android.server.wm.RecentTasks: int[] usersWithRecentsLoadedLocked()>();

        virtualinvoke $r9.<com.android.server.wm.WindowManagerService: void removeObsoleteTaskFiles(android.util.ArraySet,int[])>($r10, $r11);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        $r12 = r0.<com.android.server.wm.TaskPersister: android.util.ArraySet mTmpTaskIds>;

        specialinvoke r0.<com.android.server.wm.TaskPersister: void removeObsoleteFiles(android.util.ArraySet)>($r12);

        goto label6;

     label3:
        $r13 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r13;

     label6:
        specialinvoke r0.<com.android.server.wm.TaskPersister: void writeTaskIdsFiles()>();

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    java.util.List restoreTasksForUserLocked(int, android.util.SparseBooleanArray)
    {
        com.android.server.wm.TaskPersister r0;
        java.io.File r3, r4;
        boolean z0, $z1, $z2;
        java.io.FileReader r5;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13, i14, i16;
        java.util.ArrayList $r6;
        android.util.ArraySet $r7;
        java.io.File[] $r8, r42, r47, r53, r61;
        com.android.server.wm.TaskPersister$1 $r9;
        java.lang.Object $r10;
        com.android.server.wm.Task $r11, $r12, $r24, r52, r71;
        java.lang.String $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r21, $r22, $r27, $r28, $r29, $r30, $r32, r51, $r67, $r69, $r70;
        com.android.server.wm.ActivityStackSupervisor $r20, $r25;
        com.android.server.wm.ActivityTaskManagerService $r23;
        java.lang.Integer $r26;
        java.lang.StringBuilder $r31, r44, r56, r57, r62, r63, r66, r68;
        java.lang.Exception $r33, $r34, $r40, r59;
        java.lang.Throwable $r35, $r36, $r37, $r38, $r39, r45, r58;
        android.util.SparseBooleanArray r41;
        java.io.BufferedReader r46, r48, r49, r55, r60;
        org.xmlpull.v1.XmlPullParser r50;
        com.android.server.wm.RootWindowContainer r54;

        r0 := @this: com.android.server.wm.TaskPersister;

        i10 := @parameter0: int;

        r41 := @parameter1: android.util.SparseBooleanArray;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $r7 = new android.util.ArraySet;

        specialinvoke $r7.<android.util.ArraySet: void <init>()>();

        r3 = staticinvoke <com.android.server.wm.TaskPersister: java.io.File getUserTasksDir(int)>(i10);

        r42 = virtualinvoke r3.<java.io.File: java.io.File[] listFiles()>();

        if r42 != null goto label001;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("restoreTasksForUserLocked: Unable to list files from ");

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("TaskPersister", $r32);

        return $r6;

     label001:
        i11 = 0;

     label002:
        $i1 = lengthof r42;

        if i11 >= $i1 goto label139;

        r4 = r42[i11];

        $r13 = virtualinvoke r4.<java.io.File: java.lang.String getName()>();

        $z1 = virtualinvoke $r13.<java.lang.String: boolean endsWith(java.lang.String)>("_task.xml");

        if $z1 != 0 goto label003;

        goto label138;

     label003:
        $r14 = virtualinvoke r4.<java.io.File: java.lang.String getName()>();

        $r15 = virtualinvoke r4.<java.io.File: java.lang.String getName()>();

        $i5 = virtualinvoke $r15.<java.lang.String: int length()>();

        $r16 = "_task.xml";

        $i6 = virtualinvoke $r16.<java.lang.String: int length()>();

        $i7 = $i5 - $i6;

        $r17 = virtualinvoke $r14.<java.lang.String: java.lang.String substring(int,int)>(0, $i7);

        i12 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r17);

        z0 = virtualinvoke r41.<android.util.SparseBooleanArray: boolean get(int,boolean)>(i12, 0);

     label004:
        if z0 == 0 goto label008;

     label005:
        r44 = new java.lang.StringBuilder;

        specialinvoke r44.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Task #");

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i12);

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has already been created so we don\'t restore again");

        $r30 = virtualinvoke r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("TaskPersister", $r30);

     label006:
        goto label138;

     label007:
        $r35 := @caughtexception;

        r45 = $r35;

        goto label137;

     label008:
        r46 = null;

        r47 = r42;

        i13 = i11;

        r48 = null;

     label009:
        r49 = new java.io.BufferedReader;

     label010:
        r46 = null;

        r47 = r42;

        i13 = i11;

        r48 = null;

     label011:
        r5 = new java.io.FileReader;

     label012:
        r46 = null;

        r47 = r42;

        i13 = i11;

        r48 = null;

     label013:
        specialinvoke r5.<java.io.FileReader: void <init>(java.io.File)>(r4);

     label014:
        r46 = null;

        r47 = r42;

        i13 = i11;

        r48 = null;

     label015:
        specialinvoke r49.<java.io.BufferedReader: void <init>(java.io.Reader)>(r5);

     label016:
        r46 = r49;

        r47 = r42;

        i13 = i11;

        r48 = r49;

     label017:
        r50 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

     label018:
        r46 = r49;

        r47 = r42;

        i13 = i11;

        r48 = r49;

     label019:
        interfaceinvoke r50.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.Reader)>(r49);

     label020:
        r46 = r49;

        r47 = r42;

        i13 = i11;

        r48 = r49;

     label021:
        i0 = interfaceinvoke r50.<org.xmlpull.v1.XmlPullParser: int next()>();

     label022:
        if i0 == 1 goto label107;

        if i0 == 3 goto label107;

        r46 = r49;

        r47 = r42;

        i13 = i11;

        r48 = r49;

     label023:
        r51 = interfaceinvoke r50.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

     label024:
        if i0 != 2 goto label103;

        r46 = r49;

        r47 = r42;

        i13 = i11;

        r48 = r49;

     label025:
        $r18 = "task";

        $z2 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r51);

        if $z2 == 0 goto label088;

     label026:
        r46 = r49;

        r47 = r42;

        i13 = i11;

        r48 = r49;

     label027:
        $r20 = r0.<com.android.server.wm.TaskPersister: com.android.server.wm.ActivityStackSupervisor mStackSupervisor>;

        r52 = staticinvoke <com.android.server.wm.Task: com.android.server.wm.Task restoreFromXml(org.xmlpull.v1.XmlPullParser,com.android.server.wm.ActivityStackSupervisor)>(r50, $r20);

     label028:
        if r52 == null goto label073;

        r53 = r42;

     label029:
        i14 = r52.<com.android.server.wm.Task: int mTaskId>;

        $r23 = r0.<com.android.server.wm.TaskPersister: com.android.server.wm.ActivityTaskManagerService mService>;

        r54 = $r23.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

     label030:
        r55 = r49;

     label031:
        $r24 = virtualinvoke r54.<com.android.server.wm.RootWindowContainer: com.android.server.wm.Task anyTaskForId(int,int)>(i14, 1);

        if $r24 == null goto label045;

     label032:
        r55 = r49;

     label033:
        r56 = new java.lang.StringBuilder;

     label034:
        r55 = r49;

     label035:
        specialinvoke r56.<java.lang.StringBuilder: void <init>()>();

     label036:
        r55 = r49;

     label037:
        virtualinvoke r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Existing task with taskId ");

     label038:
        r55 = r49;

     label039:
        virtualinvoke r56.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i14);

     label040:
        r55 = r49;

     label041:
        virtualinvoke r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("found");

     label042:
        r55 = r49;

     label043:
        $r29 = virtualinvoke r56.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("TaskPersister", $r29);

     label044:
        goto label070;

     label045:
        r55 = r49;

     label046:
        $i8 = r52.<com.android.server.wm.Task: int mUserId>;

        if i10 == $i8 goto label062;

     label047:
        r55 = r49;

     label048:
        r57 = new java.lang.StringBuilder;

     label049:
        r55 = r49;

     label050:
        specialinvoke r57.<java.lang.StringBuilder: void <init>()>();

     label051:
        r55 = r49;

     label052:
        virtualinvoke r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Task with userId ");

     label053:
        r55 = r49;

     label054:
        $i9 = r52.<com.android.server.wm.Task: int mUserId>;

        virtualinvoke r57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

     label055:
        r55 = r49;

     label056:
        virtualinvoke r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" found in ");

     label057:
        r55 = r49;

     label058:
        $r27 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

     label059:
        r55 = r49;

     label060:
        $r28 = virtualinvoke r57.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("TaskPersister", $r28);

     label061:
        goto label070;

     label062:
        r55 = r49;

     label063:
        $r25 = r0.<com.android.server.wm.TaskPersister: com.android.server.wm.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r25.<com.android.server.wm.ActivityStackSupervisor: void setNextTaskIdForUser(int,int)>(i14, i10);

     label064:
        r55 = r49;

     label065:
        r52.<com.android.server.wm.Task: boolean isPersistable> = 1;

     label066:
        r55 = r49;

     label067:
        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r52);

     label068:
        r55 = r49;

     label069:
        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i14);

        virtualinvoke $r7.<android.util.ArraySet: boolean add(java.lang.Object)>($r26);

     label070:
        goto label087;

     label071:
        $r39 := @caughtexception;

        r58 = $r39;

        goto label134;

     label072:
        $r33 := @caughtexception;

        r59 = $r33;

        r60 = r49;

        r61 = r53;

        i13 = i11;

        goto label110;

     label073:
        r55 = r49;

     label074:
        r62 = new java.lang.StringBuilder;

     label075:
        r55 = r49;

     label076:
        specialinvoke r62.<java.lang.StringBuilder: void <init>()>();

     label077:
        r55 = r49;

     label078:
        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("restoreTasksForUserLocked: Unable to restore taskFile=");

     label079:
        r55 = r49;

     label080:
        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

     label081:
        r55 = r49;

     label082:
        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

     label083:
        r55 = r49;

     label084:
        $r21 = specialinvoke r0.<com.android.server.wm.TaskPersister: java.lang.String fileToString(java.io.File)>(r4);

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

     label085:
        r55 = r49;

     label086:
        $r22 = virtualinvoke r62.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("TaskPersister", $r22);

     label087:
        goto label103;

     label088:
        r55 = r49;

     label089:
        r63 = new java.lang.StringBuilder;

     label090:
        r55 = r49;

     label091:
        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

     label092:
        r55 = r49;

     label093:
        virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("restoreTasksForUserLocked: Unknown xml event=");

     label094:
        r55 = r49;

     label095:
        virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

     label096:
        r55 = r49;

     label097:
        virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" name=");

     label098:
        r55 = r49;

     label099:
        virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r51);

     label100:
        r55 = r49;

     label101:
        $r19 = virtualinvoke r63.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("TaskPersister", $r19);

     label102:
        goto label103;

     label103:
        r55 = r49;

     label104:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r50);

     label105:
        goto label020;

     label106:
        $r34 := @caughtexception;

        r59 = $r34;

        r60 = r49;

        r61 = r42;

        i13 = i11;

        goto label110;

     label107:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r49);

        goto label138;

     label108:
        $r38 := @caughtexception;

        r58 = $r38;

        r49 = r46;

        goto label134;

     label109:
        $r40 := @caughtexception;

        r59 = $r40;

        r61 = r47;

        r60 = r48;

     label110:
        r55 = r60;

     label111:
        r66 = new java.lang.StringBuilder;

     label112:
        r55 = r60;

     label113:
        specialinvoke r66.<java.lang.StringBuilder: void <init>()>();

     label114:
        r55 = r60;

     label115:
        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse ");

     label116:
        r55 = r60;

     label117:
        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

     label118:
        r55 = r60;

     label119:
        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Error ");

     label120:
        r55 = r60;

     label121:
        $r67 = virtualinvoke r66.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("TaskPersister", $r67, r59);

     label122:
        r55 = r60;

     label123:
        r68 = new java.lang.StringBuilder;

     label124:
        r55 = r60;

     label125:
        specialinvoke r68.<java.lang.StringBuilder: void <init>()>();

     label126:
        r55 = r60;

     label127:
        virtualinvoke r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failing file: ");

     label128:
        r55 = r60;

     label129:
        $r69 = specialinvoke r0.<com.android.server.wm.TaskPersister: java.lang.String fileToString(java.io.File)>(r4);

        virtualinvoke r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);

     label130:
        r55 = r60;

     label131:
        $r70 = virtualinvoke r68.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("TaskPersister", $r70);

     label132:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r60);

        virtualinvoke r4.<java.io.File: boolean delete()>();

        r42 = r61;

        i11 = i13;

        goto label138;

     label133:
        $r36 := @caughtexception;

        r58 = $r36;

        r49 = r55;

     label134:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r49);

        goto label135;

     label135:
        throw r58;

     label136:
        $r37 := @caughtexception;

        r45 = $r37;

     label137:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("TaskPersister", "Unexpected task file name", r45);

     label138:
        i11 = i11 + 1;

        goto label002;

     label139:
        $r8 = virtualinvoke r3.<java.io.File: java.io.File[] listFiles()>();

        staticinvoke <com.android.server.wm.TaskPersister: void removeObsoleteFiles(android.util.ArraySet,java.io.File[])>($r7, $r8);

        $i2 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i16 = $i2 - 1;

     label140:
        if i16 < 0 goto label141;

        $r10 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i16);

        r71 = (com.android.server.wm.Task) $r10;

        $i3 = r71.<com.android.server.wm.Task: int mPrevAffiliateTaskId>;

        $r11 = specialinvoke r0.<com.android.server.wm.TaskPersister: com.android.server.wm.Task taskIdToTask(int,java.util.ArrayList)>($i3, $r6);

        virtualinvoke r71.<com.android.server.wm.Task: void setPrevAffiliate(com.android.server.wm.Task)>($r11);

        $i4 = r71.<com.android.server.wm.Task: int mNextAffiliateTaskId>;

        $r12 = specialinvoke r0.<com.android.server.wm.TaskPersister: com.android.server.wm.Task taskIdToTask(int,java.util.ArrayList)>($i4, $r6);

        virtualinvoke r71.<com.android.server.wm.Task: void setNextAffiliate(com.android.server.wm.Task)>($r12);

        i16 = i16 + -1;

        goto label140;

     label141:
        $r9 = new com.android.server.wm.TaskPersister$1;

        specialinvoke $r9.<com.android.server.wm.TaskPersister$1: void <init>(com.android.server.wm.TaskPersister)>(r0);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r6, $r9);

        return $r6;

        catch java.lang.NumberFormatException from label003 to label004 with label136;
        catch java.lang.NumberFormatException from label005 to label006 with label007;
        catch java.lang.Exception from label009 to label010 with label109;
        catch java.lang.Throwable from label009 to label010 with label108;
        catch java.lang.Exception from label011 to label012 with label109;
        catch java.lang.Throwable from label011 to label012 with label108;
        catch java.lang.Exception from label013 to label014 with label109;
        catch java.lang.Throwable from label013 to label014 with label108;
        catch java.lang.Exception from label015 to label016 with label109;
        catch java.lang.Throwable from label015 to label016 with label108;
        catch java.lang.Exception from label017 to label018 with label109;
        catch java.lang.Throwable from label017 to label018 with label108;
        catch java.lang.Exception from label019 to label020 with label109;
        catch java.lang.Throwable from label019 to label020 with label108;
        catch java.lang.Exception from label021 to label022 with label109;
        catch java.lang.Throwable from label021 to label022 with label108;
        catch java.lang.Exception from label023 to label024 with label109;
        catch java.lang.Throwable from label023 to label024 with label108;
        catch java.lang.Exception from label025 to label026 with label109;
        catch java.lang.Throwable from label025 to label026 with label108;
        catch java.lang.Exception from label027 to label028 with label109;
        catch java.lang.Throwable from label027 to label028 with label108;
        catch java.lang.Exception from label029 to label030 with label072;
        catch java.lang.Throwable from label029 to label030 with label071;
        catch java.lang.Exception from label031 to label032 with label106;
        catch java.lang.Throwable from label031 to label032 with label133;
        catch java.lang.Exception from label033 to label034 with label106;
        catch java.lang.Throwable from label033 to label034 with label133;
        catch java.lang.Exception from label035 to label036 with label106;
        catch java.lang.Throwable from label035 to label036 with label133;
        catch java.lang.Exception from label037 to label038 with label106;
        catch java.lang.Throwable from label037 to label038 with label133;
        catch java.lang.Exception from label039 to label040 with label106;
        catch java.lang.Throwable from label039 to label040 with label133;
        catch java.lang.Exception from label041 to label042 with label106;
        catch java.lang.Throwable from label041 to label042 with label133;
        catch java.lang.Exception from label043 to label044 with label106;
        catch java.lang.Throwable from label043 to label044 with label133;
        catch java.lang.Exception from label046 to label047 with label106;
        catch java.lang.Throwable from label046 to label047 with label133;
        catch java.lang.Exception from label048 to label049 with label106;
        catch java.lang.Throwable from label048 to label049 with label133;
        catch java.lang.Exception from label050 to label051 with label106;
        catch java.lang.Throwable from label050 to label051 with label133;
        catch java.lang.Exception from label052 to label053 with label106;
        catch java.lang.Throwable from label052 to label053 with label133;
        catch java.lang.Exception from label054 to label055 with label106;
        catch java.lang.Throwable from label054 to label055 with label133;
        catch java.lang.Exception from label056 to label057 with label106;
        catch java.lang.Throwable from label056 to label057 with label133;
        catch java.lang.Exception from label058 to label059 with label106;
        catch java.lang.Throwable from label058 to label059 with label133;
        catch java.lang.Exception from label060 to label061 with label106;
        catch java.lang.Throwable from label060 to label061 with label133;
        catch java.lang.Exception from label063 to label064 with label106;
        catch java.lang.Throwable from label063 to label064 with label133;
        catch java.lang.Exception from label065 to label066 with label106;
        catch java.lang.Throwable from label065 to label066 with label133;
        catch java.lang.Exception from label067 to label068 with label106;
        catch java.lang.Throwable from label067 to label068 with label133;
        catch java.lang.Exception from label069 to label070 with label106;
        catch java.lang.Throwable from label069 to label070 with label133;
        catch java.lang.Exception from label074 to label075 with label106;
        catch java.lang.Throwable from label074 to label075 with label133;
        catch java.lang.Exception from label076 to label077 with label106;
        catch java.lang.Throwable from label076 to label077 with label133;
        catch java.lang.Exception from label078 to label079 with label106;
        catch java.lang.Throwable from label078 to label079 with label133;
        catch java.lang.Exception from label080 to label081 with label106;
        catch java.lang.Throwable from label080 to label081 with label133;
        catch java.lang.Exception from label082 to label083 with label106;
        catch java.lang.Throwable from label082 to label083 with label133;
        catch java.lang.Exception from label084 to label085 with label106;
        catch java.lang.Throwable from label084 to label085 with label133;
        catch java.lang.Exception from label086 to label087 with label106;
        catch java.lang.Throwable from label086 to label087 with label133;
        catch java.lang.Exception from label089 to label090 with label106;
        catch java.lang.Throwable from label089 to label090 with label133;
        catch java.lang.Exception from label091 to label092 with label106;
        catch java.lang.Throwable from label091 to label092 with label133;
        catch java.lang.Exception from label093 to label094 with label106;
        catch java.lang.Throwable from label093 to label094 with label133;
        catch java.lang.Exception from label095 to label096 with label106;
        catch java.lang.Throwable from label095 to label096 with label133;
        catch java.lang.Exception from label097 to label098 with label106;
        catch java.lang.Throwable from label097 to label098 with label133;
        catch java.lang.Exception from label099 to label100 with label106;
        catch java.lang.Throwable from label099 to label100 with label133;
        catch java.lang.Exception from label101 to label102 with label106;
        catch java.lang.Throwable from label101 to label102 with label133;
        catch java.lang.Exception from label104 to label105 with label106;
        catch java.lang.Throwable from label104 to label105 with label133;
        catch java.lang.Throwable from label111 to label112 with label133;
        catch java.lang.Throwable from label113 to label114 with label133;
        catch java.lang.Throwable from label115 to label116 with label133;
        catch java.lang.Throwable from label117 to label118 with label133;
        catch java.lang.Throwable from label119 to label120 with label133;
        catch java.lang.Throwable from label121 to label122 with label133;
        catch java.lang.Throwable from label123 to label124 with label133;
        catch java.lang.Throwable from label125 to label126 with label133;
        catch java.lang.Throwable from label127 to label128 with label133;
        catch java.lang.Throwable from label129 to label130 with label133;
        catch java.lang.Throwable from label131 to label132 with label133;
    }

    void saveImage(android.graphics.Bitmap, java.lang.String)
    {
        com.android.server.wm.TaskPersister r0;
        android.graphics.Bitmap r1;
        java.lang.String r2;
        com.android.server.wm.TaskPersister$ImageWriteQueueItem $r3;
        com.android.server.wm.PersisterQueue $r4;

        r0 := @this: com.android.server.wm.TaskPersister;

        r1 := @parameter0: android.graphics.Bitmap;

        r2 := @parameter1: java.lang.String;

        $r4 = r0.<com.android.server.wm.TaskPersister: com.android.server.wm.PersisterQueue mPersisterQueue>;

        $r3 = new com.android.server.wm.TaskPersister$ImageWriteQueueItem;

        specialinvoke $r3.<com.android.server.wm.TaskPersister$ImageWriteQueueItem: void <init>(java.lang.String,android.graphics.Bitmap)>(r2, r1);

        virtualinvoke $r4.<com.android.server.wm.PersisterQueue: void updateLastOrAddItem(com.android.server.wm.PersisterQueue$WriteQueueItem,boolean)>($r3, 0);

        return;
    }

    void unloadUserDataFromMemory(int)
    {
        com.android.server.wm.TaskPersister r0;
        int i0;
        android.util.SparseArray $r1;

        r0 := @this: com.android.server.wm.TaskPersister;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.wm.TaskPersister: android.util.SparseArray mTaskIdsInFile>;

        virtualinvoke $r1.<android.util.SparseArray: void delete(int)>(i0);

        return;
    }

    void wakeup(com.android.server.wm.Task, boolean)
    {
        com.android.server.wm.TaskPersister r0;
        boolean z0, $z1, $z2;
        com.android.server.wm.PersisterQueue r1, $r3, $r4, r9, r12;
        com.android.server.wm.PersisterQueue$WriteQueueItem $r2, $r5;
        com.android.server.wm.ActivityTaskManagerService $r6;
        java.lang.Throwable $r7;
        com.android.server.wm.Task r8;
        com.android.server.wm._$$Lambda$TaskPersister$piHtCTZMpbHMTXAk2o7OdlK4Xvc r10;
        com.android.server.wm.TaskPersister$TaskWriteQueueItem r11, r13;

        r0 := @this: com.android.server.wm.TaskPersister;

        r8 := @parameter0: com.android.server.wm.Task;

        z0 := @parameter1: boolean;

        r1 = r0.<com.android.server.wm.TaskPersister: com.android.server.wm.PersisterQueue mPersisterQueue>;

        entermonitor r1;

        if r8 == null goto label07;

     label01:
        r9 = r0.<com.android.server.wm.TaskPersister: com.android.server.wm.PersisterQueue mPersisterQueue>;

        r10 = new com.android.server.wm._$$Lambda$TaskPersister$piHtCTZMpbHMTXAk2o7OdlK4Xvc;

        specialinvoke r10.<com.android.server.wm._$$Lambda$TaskPersister$piHtCTZMpbHMTXAk2o7OdlK4Xvc: void <init>(com.android.server.wm.Task)>(r8);

        $r5 = virtualinvoke r9.<com.android.server.wm.PersisterQueue: com.android.server.wm.PersisterQueue$WriteQueueItem findLastItem(java.util.function.Predicate,java.lang.Class)>(r10, class "Lcom/android/server/wm/TaskPersister$TaskWriteQueueItem;");

        r11 = (com.android.server.wm.TaskPersister$TaskWriteQueueItem) $r5;

     label02:
        if r11 == null goto label04;

     label03:
        $z2 = r8.<com.android.server.wm.Task: boolean inRecents>;

        if $z2 != 0 goto label04;

        specialinvoke r0.<com.android.server.wm.TaskPersister: void removeThumbnails(com.android.server.wm.Task)>(r8);

     label04:
        if r11 != null goto label06;

     label05:
        $z1 = r8.<com.android.server.wm.Task: boolean isPersistable>;

        if $z1 == 0 goto label06;

        r12 = r0.<com.android.server.wm.TaskPersister: com.android.server.wm.PersisterQueue mPersisterQueue>;

        r13 = new com.android.server.wm.TaskPersister$TaskWriteQueueItem;

        $r6 = r0.<com.android.server.wm.TaskPersister: com.android.server.wm.ActivityTaskManagerService mService>;

        specialinvoke r13.<com.android.server.wm.TaskPersister$TaskWriteQueueItem: void <init>(com.android.server.wm.Task,com.android.server.wm.ActivityTaskManagerService)>(r8, $r6);

        virtualinvoke r12.<com.android.server.wm.PersisterQueue: void addItem(com.android.server.wm.PersisterQueue$WriteQueueItem,boolean)>(r13, z0);

     label06:
        goto label08;

     label07:
        $r3 = r0.<com.android.server.wm.TaskPersister: com.android.server.wm.PersisterQueue mPersisterQueue>;

        $r2 = <com.android.server.wm.PersisterQueue: com.android.server.wm.PersisterQueue$WriteQueueItem EMPTY_ITEM>;

        virtualinvoke $r3.<com.android.server.wm.PersisterQueue: void addItem(com.android.server.wm.PersisterQueue$WriteQueueItem,boolean)>($r2, z0);

     label08:
        exitmonitor r1;

     label09:
        $r4 = r0.<com.android.server.wm.TaskPersister: com.android.server.wm.PersisterQueue mPersisterQueue>;

        virtualinvoke $r4.<com.android.server.wm.PersisterQueue: void yieldIfQueueTooDeep()>();

        return;

     label10:
        $r7 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    void writePersistedTaskIdsForUser(android.util.SparseBooleanArray, int)
    {
        com.android.server.wm.TaskPersister r0;
        int i0, $i1, $i2, i3;
        java.io.File r1;
        java.lang.Object r2;
        java.io.BufferedWriter r3, r11, r12;
        java.io.FileWriter r4;
        boolean $z0;
        java.lang.String $r5, $r8;
        java.lang.Throwable $r6, $r9;
        java.lang.Exception $r7;
        android.util.SparseBooleanArray r10;
        java.lang.StringBuilder r16;

        r0 := @this: com.android.server.wm.TaskPersister;

        r10 := @parameter0: android.util.SparseBooleanArray;

        i0 := @parameter1: int;

        if i0 >= 0 goto label01;

        return;

     label01:
        r1 = specialinvoke r0.<com.android.server.wm.TaskPersister: java.io.File getUserPersistedTaskIdsFile(int)>(i0);

        r2 = r0.<com.android.server.wm.TaskPersister: java.lang.Object mIoLock>;

        entermonitor r2;

        r11 = null;

        r12 = null;

     label02:
        r3 = new java.io.BufferedWriter;

     label03:
        r11 = null;

        r12 = null;

     label04:
        r4 = new java.io.FileWriter;

     label05:
        r11 = null;

        r12 = null;

     label06:
        specialinvoke r4.<java.io.FileWriter: void <init>(java.io.File)>(r1);

     label07:
        r11 = null;

        r12 = null;

     label08:
        specialinvoke r3.<java.io.BufferedWriter: void <init>(java.io.Writer)>(r4);

     label09:
        i3 = 0;

     label10:
        r11 = r3;

        r12 = r3;

     label11:
        $i1 = virtualinvoke r10.<android.util.SparseBooleanArray: int size()>();

        if i3 >= $i1 goto label19;

     label12:
        r11 = r3;

        r12 = r3;

     label13:
        $z0 = virtualinvoke r10.<android.util.SparseBooleanArray: boolean valueAt(int)>(i3);

        if $z0 == 0 goto label18;

     label14:
        r11 = r3;

        r12 = r3;

     label15:
        $i2 = virtualinvoke r10.<android.util.SparseBooleanArray: int keyAt(int)>(i3);

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i2);

        virtualinvoke r3.<java.io.BufferedWriter: void write(java.lang.String)>($r5);

     label16:
        r11 = r3;

        r12 = r3;

     label17:
        virtualinvoke r3.<java.io.BufferedWriter: void newLine()>();

     label18:
        i3 = i3 + 1;

        goto label10;

     label19:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r3);

     label20:
        goto label34;

     label21:
        $r6 := @caughtexception;

        goto label36;

     label22:
        $r7 := @caughtexception;

        r11 = r12;

     label23:
        r16 = new java.lang.StringBuilder;

     label24:
        r11 = r12;

     label25:
        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

     label26:
        r11 = r12;

     label27:
        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error while writing taskIds file for user ");

     label28:
        r11 = r12;

     label29:
        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

     label30:
        r11 = r12;

     label31:
        $r8 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TaskPersister", $r8, $r7);

     label32:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r12);

     label33:
        goto label20;

     label34:
        exitmonitor r2;

     label35:
        return;

     label36:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r11);

     label37:
        throw $r6;

     label38:
        $r9 := @caughtexception;

     label39:
        exitmonitor r2;

     label40:
        throw $r9;

        catch java.lang.Exception from label02 to label03 with label22;
        catch java.lang.Throwable from label02 to label03 with label21;
        catch java.lang.Exception from label04 to label05 with label22;
        catch java.lang.Throwable from label04 to label05 with label21;
        catch java.lang.Exception from label06 to label07 with label22;
        catch java.lang.Throwable from label06 to label07 with label21;
        catch java.lang.Exception from label08 to label09 with label22;
        catch java.lang.Throwable from label08 to label09 with label21;
        catch java.lang.Exception from label11 to label12 with label22;
        catch java.lang.Throwable from label11 to label12 with label21;
        catch java.lang.Exception from label13 to label14 with label22;
        catch java.lang.Throwable from label13 to label14 with label21;
        catch java.lang.Exception from label15 to label16 with label22;
        catch java.lang.Throwable from label15 to label16 with label21;
        catch java.lang.Exception from label17 to label18 with label22;
        catch java.lang.Throwable from label17 to label18 with label21;
        catch java.lang.Throwable from label19 to label20 with label38;
        catch java.lang.Throwable from label23 to label24 with label21;
        catch java.lang.Throwable from label25 to label26 with label21;
        catch java.lang.Throwable from label27 to label28 with label21;
        catch java.lang.Throwable from label29 to label30 with label21;
        catch java.lang.Throwable from label31 to label32 with label21;
        catch java.lang.Throwable from label32 to label33 with label38;
        catch java.lang.Throwable from label34 to label35 with label38;
        catch java.lang.Throwable from label36 to label37 with label38;
        catch java.lang.Throwable from label37 to label38 with label38;
        catch java.lang.Throwable from label39 to label40 with label38;
    }

    public static void <clinit>()
    {
        <com.android.server.wm.TaskPersister: java.lang.String TASK_FILENAME_SUFFIX> = "_task.xml";

        <com.android.server.wm.TaskPersister: java.lang.String TASKS_DIRNAME> = "recent_tasks";

        <com.android.server.wm.TaskPersister: java.lang.String TAG_TASK> = "task";

        <com.android.server.wm.TaskPersister: java.lang.String TAG> = "TaskPersister";

        <com.android.server.wm.TaskPersister: java.lang.String PERSISTED_TASK_IDS_FILENAME> = "persisted_taskIds.txt";

        <com.android.server.wm.TaskPersister: java.lang.String IMAGE_EXTENSION> = ".png";

        <com.android.server.wm.TaskPersister: java.lang.String IMAGES_DIRNAME> = "recent_images";

        <com.android.server.wm.TaskPersister: boolean DEBUG> = 0;

        return;
    }
}
