class com.android.server.wm.TaskPositioner extends java.lang.Object implements android.os.IBinder$DeathRecipient
{
    private static final boolean DEBUG_ORIENTATION_VIOLATIONS;
    public static final float RESIZING_HINT_ALPHA;
    public static final int RESIZING_HINT_DURATION_MS;
    private static final java.lang.String TAG;
    private static final java.lang.String TAG_LOCAL;
    private static com.android.server.wm.TaskPositioner$Factory sFactory;
    android.os.IBinder mClientCallback;
    android.view.InputChannel mClientChannel;
    private int mCtrlType;
    private com.android.server.wm.DisplayContent mDisplayContent;
    android.view.InputApplicationHandle mDragApplicationHandle;
    boolean mDragEnded;
    android.view.InputWindowHandle mDragWindowHandle;
    private com.android.server.wm.TaskPositioner$WindowPositionerEventReceiver mInputEventReceiver;
    private final android.graphics.Point mMaxVisibleSize;
    private int mMinVisibleHeight;
    private int mMinVisibleWidth;
    private boolean mPreserveOrientation;
    private boolean mResizing;
    android.view.InputChannel mServerChannel;
    private final com.android.server.wm.WindowManagerService mService;
    private float mStartDragX;
    private float mStartDragY;
    private boolean mStartOrientationWasLandscape;
    com.android.server.wm.Task mTask;
    private android.graphics.Rect mTmpRect;
    com.android.server.wm.WindowState mWindow;
    private final android.graphics.Rect mWindowDragBounds;
    private final android.graphics.Rect mWindowOriginalBounds;

    void <init>(com.android.server.wm.WindowManagerService)
    {
        com.android.server.wm.TaskPositioner r0;
        com.android.server.wm.WindowManagerService r1;
        android.graphics.Rect $r2, $r3, $r4;
        android.graphics.Point $r5;

        r0 := @this: com.android.server.wm.TaskPositioner;

        r1 := @parameter0: com.android.server.wm.WindowManagerService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.TaskPositioner: android.graphics.Rect mTmpRect> = $r2;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.TaskPositioner: android.graphics.Rect mWindowOriginalBounds> = $r3;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.TaskPositioner: android.graphics.Rect mWindowDragBounds> = $r4;

        $r5 = new android.graphics.Point;

        specialinvoke $r5.<android.graphics.Point: void <init>()>();

        r0.<com.android.server.wm.TaskPositioner: android.graphics.Point mMaxVisibleSize> = $r5;

        r0.<com.android.server.wm.TaskPositioner: int mCtrlType> = 0;

        r0.<com.android.server.wm.TaskPositioner: com.android.server.wm.WindowManagerService mService> = r1;

        return;
    }

    static com.android.server.wm.WindowManagerService access$000(com.android.server.wm.TaskPositioner)
    {
        com.android.server.wm.TaskPositioner r0;
        com.android.server.wm.WindowManagerService $r1;

        r0 := @parameter0: com.android.server.wm.TaskPositioner;

        $r1 = r0.<com.android.server.wm.TaskPositioner: com.android.server.wm.WindowManagerService mService>;

        return $r1;
    }

    static android.graphics.Rect access$100(com.android.server.wm.TaskPositioner)
    {
        com.android.server.wm.TaskPositioner r0;
        android.graphics.Rect $r1;

        r0 := @parameter0: com.android.server.wm.TaskPositioner;

        $r1 = r0.<com.android.server.wm.TaskPositioner: android.graphics.Rect mTmpRect>;

        return $r1;
    }

    static android.graphics.Rect access$200(com.android.server.wm.TaskPositioner)
    {
        com.android.server.wm.TaskPositioner r0;
        android.graphics.Rect $r1;

        r0 := @parameter0: com.android.server.wm.TaskPositioner;

        $r1 = r0.<com.android.server.wm.TaskPositioner: android.graphics.Rect mWindowDragBounds>;

        return $r1;
    }

    static boolean access$300(com.android.server.wm.TaskPositioner)
    {
        com.android.server.wm.TaskPositioner r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.wm.TaskPositioner;

        $z0 = r0.<com.android.server.wm.TaskPositioner: boolean mResizing>;

        return $z0;
    }

    static void access$400(com.android.server.wm.TaskPositioner)
    {
        com.android.server.wm.TaskPositioner r0;

        r0 := @parameter0: com.android.server.wm.TaskPositioner;

        specialinvoke r0.<com.android.server.wm.TaskPositioner: void endDragLocked()>();

        return;
    }

    private void checkBoundsForOrientationViolations(android.graphics.Rect)
    {
        com.android.server.wm.TaskPositioner r0;
        android.graphics.Rect r1;

        r0 := @this: com.android.server.wm.TaskPositioner;

        r1 := @parameter0: android.graphics.Rect;

        return;
    }

    static com.android.server.wm.TaskPositioner create(com.android.server.wm.WindowManagerService)
    {
        com.android.server.wm.WindowManagerService r0;
        com.android.server.wm.TaskPositioner$Factory $r1, $r2;
        com.android.server.wm.TaskPositioner $r3;
        com.android.server.wm.TaskPositioner$1 $r4;

        r0 := @parameter0: com.android.server.wm.WindowManagerService;

        $r1 = <com.android.server.wm.TaskPositioner: com.android.server.wm.TaskPositioner$Factory sFactory>;

        if $r1 != null goto label1;

        $r4 = new com.android.server.wm.TaskPositioner$1;

        specialinvoke $r4.<com.android.server.wm.TaskPositioner$1: void <init>()>();

        <com.android.server.wm.TaskPositioner: com.android.server.wm.TaskPositioner$Factory sFactory> = $r4;

     label1:
        $r2 = <com.android.server.wm.TaskPositioner: com.android.server.wm.TaskPositioner$Factory sFactory>;

        $r3 = interfaceinvoke $r2.<com.android.server.wm.TaskPositioner$Factory: com.android.server.wm.TaskPositioner create(com.android.server.wm.WindowManagerService)>(r0);

        return $r3;
    }

    private void endDragLocked()
    {
        com.android.server.wm.TaskPositioner r0;
        com.android.server.wm.Task $r1;

        r0 := @this: com.android.server.wm.TaskPositioner;

        r0.<com.android.server.wm.TaskPositioner: boolean mResizing> = 0;

        $r1 = r0.<com.android.server.wm.TaskPositioner: com.android.server.wm.Task mTask>;

        virtualinvoke $r1.<com.android.server.wm.Task: void setDragResizing(boolean,int)>(0, 0);

        return;
    }

    static void setFactory(com.android.server.wm.TaskPositioner$Factory)
    {
        com.android.server.wm.TaskPositioner$Factory r0;

        r0 := @parameter0: com.android.server.wm.TaskPositioner$Factory;

        <com.android.server.wm.TaskPositioner: com.android.server.wm.TaskPositioner$Factory sFactory> = r0;

        return;
    }

    private void updateDraggedBounds(android.graphics.Rect)
    {
        com.android.server.wm.TaskPositioner r0;
        android.graphics.Rect r1, $r2, $r3;

        r0 := @this: com.android.server.wm.TaskPositioner;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<com.android.server.wm.TaskPositioner: android.graphics.Rect mWindowDragBounds>;

        virtualinvoke $r2.<android.graphics.Rect: void set(android.graphics.Rect)>(r1);

        $r3 = r0.<com.android.server.wm.TaskPositioner: android.graphics.Rect mWindowDragBounds>;

        specialinvoke r0.<com.android.server.wm.TaskPositioner: void checkBoundsForOrientationViolations(android.graphics.Rect)>($r3);

        return;
    }

    private void updateWindowDragBounds(int, int, android.graphics.Rect)
    {
        com.android.server.wm.TaskPositioner r0;
        android.graphics.Rect r1, $r2, $r3, $r4, $r5, $r6, $r7;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, i21, i22, i23;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: com.android.server.wm.TaskPositioner;

        i20 := @parameter0: int;

        i21 := @parameter1: int;

        r1 := @parameter2: android.graphics.Rect;

        $f1 = (float) i20;

        $f0 = r0.<com.android.server.wm.TaskPositioner: float mStartDragX>;

        $f2 = $f1 - $f0;

        i22 = staticinvoke <java.lang.Math: int round(float)>($f2);

        $f4 = (float) i21;

        $f3 = r0.<com.android.server.wm.TaskPositioner: float mStartDragY>;

        $f5 = $f4 - $f3;

        i0 = staticinvoke <java.lang.Math: int round(float)>($f5);

        $r3 = r0.<com.android.server.wm.TaskPositioner: android.graphics.Rect mWindowDragBounds>;

        $r2 = r0.<com.android.server.wm.TaskPositioner: android.graphics.Rect mWindowOriginalBounds>;

        virtualinvoke $r3.<android.graphics.Rect: void set(android.graphics.Rect)>($r2);

        i1 = r1.<android.graphics.Rect: int right>;

        i23 = r0.<com.android.server.wm.TaskPositioner: int mMinVisibleWidth>;

        i2 = r1.<android.graphics.Rect: int left>;

        i3 = r0.<com.android.server.wm.TaskPositioner: int mMinVisibleWidth>;

        $r4 = r0.<com.android.server.wm.TaskPositioner: android.graphics.Rect mWindowOriginalBounds>;

        i4 = virtualinvoke $r4.<android.graphics.Rect: int width()>();

        i5 = r1.<android.graphics.Rect: int top>;

        i6 = r1.<android.graphics.Rect: int bottom>;

        i7 = r0.<com.android.server.wm.TaskPositioner: int mMinVisibleHeight>;

        $r6 = r0.<com.android.server.wm.TaskPositioner: android.graphics.Rect mWindowDragBounds>;

        $r5 = r0.<com.android.server.wm.TaskPositioner: android.graphics.Rect mWindowOriginalBounds>;

        $i8 = $r5.<android.graphics.Rect: int left>;

        $i11 = $i8 + i22;

        $i9 = i2 + i3;

        $i10 = $i9 - i4;

        $i12 = staticinvoke <java.lang.Math: int max(int,int)>($i11, $i10);

        $i13 = i1 - i23;

        $i14 = staticinvoke <java.lang.Math: int min(int,int)>($i12, $i13);

        $r7 = r0.<com.android.server.wm.TaskPositioner: android.graphics.Rect mWindowOriginalBounds>;

        $i15 = $r7.<android.graphics.Rect: int top>;

        $i16 = $i15 + i0;

        $i17 = staticinvoke <java.lang.Math: int max(int,int)>($i16, i5);

        $i18 = i6 - i7;

        $i19 = staticinvoke <java.lang.Math: int min(int,int)>($i17, $i18);

        virtualinvoke $r6.<android.graphics.Rect: void offsetTo(int,int)>($i14, $i19);

        return;
    }

    public void binderDied()
    {
        com.android.server.wm.TaskPositioner r0;
        com.android.server.wm.WindowManagerService $r1;
        com.android.server.wm.TaskPositioningController $r2;

        r0 := @this: com.android.server.wm.TaskPositioner;

        $r1 = r0.<com.android.server.wm.TaskPositioner: com.android.server.wm.WindowManagerService mService>;

        $r2 = $r1.<com.android.server.wm.WindowManagerService: com.android.server.wm.TaskPositioningController mTaskPositioningController>;

        virtualinvoke $r2.<com.android.server.wm.TaskPositioningController: void finishTaskPositioning()>();

        return;
    }

    android.graphics.Rect getWindowDragBounds()
    {
        com.android.server.wm.TaskPositioner r0;
        android.graphics.Rect $r1;

        r0 := @this: com.android.server.wm.TaskPositioner;

        $r1 = r0.<com.android.server.wm.TaskPositioner: android.graphics.Rect mWindowDragBounds>;

        return $r1;
    }

    public void lambda$startDrag$0$TaskPositioner(android.graphics.Rect)
    {
        com.android.server.wm.TaskPositioner r0;
        android.graphics.Rect r1;
        com.android.server.wm.WindowManagerService $r2;
        com.android.server.wm.Task $r3;
        int $i0;
        com.android.server.wm.ActivityTaskManagerService $r4;

        r0 := @this: com.android.server.wm.TaskPositioner;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<com.android.server.wm.TaskPositioner: com.android.server.wm.WindowManagerService mService>;

        $r4 = $r2.<com.android.server.wm.WindowManagerService: com.android.server.wm.ActivityTaskManagerService mAtmService>;

        $r3 = r0.<com.android.server.wm.TaskPositioner: com.android.server.wm.Task mTask>;

        $i0 = $r3.<com.android.server.wm.Task: int mTaskId>;

        virtualinvoke $r4.<com.android.server.wm.ActivityTaskManagerService: boolean resizeTask(int,android.graphics.Rect,int)>($i0, r1, 3);

        return;
    }

    boolean notifyMoveLocked(float, float)
    {
        com.android.server.wm.TaskPositioner r0;
        float f0, f1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10;
        android.graphics.Rect $r1, $r4, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        com.android.server.wm.DisplayContent $r2;
        com.android.server.wm.Task $r3, $r5, $r14;
        com.android.server.wm.WindowContainer $r6;
        boolean $z1;

        r0 := @this: com.android.server.wm.TaskPositioner;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $i2 = r0.<com.android.server.wm.TaskPositioner: int mCtrlType>;

        if $i2 == 0 goto label1;

        virtualinvoke r0.<com.android.server.wm.TaskPositioner: void resizeDrag(float,float)>(f0, f1);

        $r14 = r0.<com.android.server.wm.TaskPositioner: com.android.server.wm.Task mTask>;

        virtualinvoke $r14.<com.android.server.wm.Task: void setDragResizing(boolean,int)>(1, 0);

        return 0;

     label1:
        $r2 = r0.<com.android.server.wm.TaskPositioner: com.android.server.wm.DisplayContent mDisplayContent>;

        $r1 = r0.<com.android.server.wm.TaskPositioner: android.graphics.Rect mTmpRect>;

        virtualinvoke $r2.<com.android.server.wm.DisplayContent: void getStableRect(android.graphics.Rect)>($r1);

        $r4 = r0.<com.android.server.wm.TaskPositioner: android.graphics.Rect mTmpRect>;

        $r3 = r0.<com.android.server.wm.TaskPositioner: com.android.server.wm.Task mTask>;

        $r5 = virtualinvoke $r3.<com.android.server.wm.Task: com.android.server.wm.Task getRootTask()>();

        $r6 = virtualinvoke $r5.<com.android.server.wm.Task: com.android.server.wm.WindowContainer getParent()>();

        $r7 = virtualinvoke $r6.<com.android.server.wm.WindowContainer: android.graphics.Rect getBounds()>();

        virtualinvoke $r4.<android.graphics.Rect: boolean intersect(android.graphics.Rect)>($r7);

        i0 = (int) f0;

        i1 = (int) f1;

        i9 = i0;

        i10 = i1;

        $r8 = r0.<com.android.server.wm.TaskPositioner: android.graphics.Rect mTmpRect>;

        $z1 = virtualinvoke $r8.<android.graphics.Rect: boolean contains(int,int)>(i0, i1);

        if $z1 != 0 goto label2;

        $r10 = r0.<com.android.server.wm.TaskPositioner: android.graphics.Rect mTmpRect>;

        $i3 = $r10.<android.graphics.Rect: int left>;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(i0, $i3);

        $r11 = r0.<com.android.server.wm.TaskPositioner: android.graphics.Rect mTmpRect>;

        $i5 = $r11.<android.graphics.Rect: int right>;

        i9 = staticinvoke <java.lang.Math: int min(int,int)>($i4, $i5);

        $r12 = r0.<com.android.server.wm.TaskPositioner: android.graphics.Rect mTmpRect>;

        $i6 = $r12.<android.graphics.Rect: int top>;

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>(i1, $i6);

        $r13 = r0.<com.android.server.wm.TaskPositioner: android.graphics.Rect mTmpRect>;

        $i8 = $r13.<android.graphics.Rect: int bottom>;

        i10 = staticinvoke <java.lang.Math: int min(int,int)>($i7, $i8);

     label2:
        $r9 = r0.<com.android.server.wm.TaskPositioner: android.graphics.Rect mTmpRect>;

        specialinvoke r0.<com.android.server.wm.TaskPositioner: void updateWindowDragBounds(int,int,android.graphics.Rect)>(i9, i10, $r9);

        return 0;
    }

    void register(com.android.server.wm.DisplayContent, com.android.server.wm.WindowState)
    {
        com.android.server.wm.TaskPositioner r0;
        com.android.server.wm.WindowState r1;
        android.view.InputChannel $r2, $r3, $r4, $r6, $r11, $r21;
        com.android.server.wm.WindowManagerService $r5, $r9, $r13, $r45, $r53;
        com.android.server.input.InputManagerService $r7;
        com.android.server.wm.TaskPositioner$WindowPositionerEventReceiver $r8;
        android.os.Handler $r10;
        android.os.Looper $r12;
        com.android.server.wm.WindowAnimator $r14;
        android.view.Choreographer $r15;
        android.view.InputApplicationHandle $r16, $r18, $r20;
        android.os.Binder $r17;
        android.view.InputWindowHandle $r19, $r22, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r39, $r40, $r41, $r42;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        android.os.IBinder $r23, r61;
        android.graphics.Region $r37;
        android.graphics.Rect $r38, r59;
        boolean $z0;
        com.android.server.wm.DisplayContent $r43, r55;
        com.android.server.wm.DisplayRotation $r44;
        com.android.server.wm.TaskPositioningController $r46, $r54;
        android.graphics.Point $r47;
        android.view.IWindow $r48;
        com.android.server.wm.Task $r49;
        java.lang.Object[] $r50;
        com.android.server.wm.ProtoLogGroup $r51;
        android.os.RemoteException $r52;
        android.view.InputChannel[] r56;
        android.util.DisplayMetrics r60;

        r0 := @this: com.android.server.wm.TaskPositioner;

        r55 := @parameter0: com.android.server.wm.DisplayContent;

        r1 := @parameter1: com.android.server.wm.WindowState;

        $r2 = r0.<com.android.server.wm.TaskPositioner: android.view.InputChannel mClientChannel>;

        if $r2 == null goto label1;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("WindowManager", "Task positioner already registered");

        return;

     label1:
        r0.<com.android.server.wm.TaskPositioner: com.android.server.wm.DisplayContent mDisplayContent> = r55;

        r56 = staticinvoke <android.view.InputChannel: android.view.InputChannel[] openInputChannelPair(java.lang.String)>("WindowManager");

        $r3 = r56[0];

        r0.<com.android.server.wm.TaskPositioner: android.view.InputChannel mServerChannel> = $r3;

        $r4 = r56[1];

        r0.<com.android.server.wm.TaskPositioner: android.view.InputChannel mClientChannel> = $r4;

        $r5 = r0.<com.android.server.wm.TaskPositioner: com.android.server.wm.WindowManagerService mService>;

        $r7 = $r5.<com.android.server.wm.WindowManagerService: com.android.server.input.InputManagerService mInputManager>;

        $r6 = r0.<com.android.server.wm.TaskPositioner: android.view.InputChannel mServerChannel>;

        virtualinvoke $r7.<com.android.server.input.InputManagerService: void registerInputChannel(android.view.InputChannel)>($r6);

        $r8 = new com.android.server.wm.TaskPositioner$WindowPositionerEventReceiver;

        $r11 = r0.<com.android.server.wm.TaskPositioner: android.view.InputChannel mClientChannel>;

        $r9 = r0.<com.android.server.wm.TaskPositioner: com.android.server.wm.WindowManagerService mService>;

        $r10 = $r9.<com.android.server.wm.WindowManagerService: android.os.Handler mAnimationHandler>;

        $r12 = virtualinvoke $r10.<android.os.Handler: android.os.Looper getLooper()>();

        $r13 = r0.<com.android.server.wm.TaskPositioner: com.android.server.wm.WindowManagerService mService>;

        $r14 = $r13.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowAnimator mAnimator>;

        $r15 = virtualinvoke $r14.<com.android.server.wm.WindowAnimator: android.view.Choreographer getChoreographer()>();

        specialinvoke $r8.<com.android.server.wm.TaskPositioner$WindowPositionerEventReceiver: void <init>(com.android.server.wm.TaskPositioner,android.view.InputChannel,android.os.Looper,android.view.Choreographer)>(r0, $r11, $r12, $r15);

        r0.<com.android.server.wm.TaskPositioner: com.android.server.wm.TaskPositioner$WindowPositionerEventReceiver mInputEventReceiver> = $r8;

        $r16 = new android.view.InputApplicationHandle;

        $r17 = new android.os.Binder;

        specialinvoke $r17.<android.os.Binder: void <init>()>();

        specialinvoke $r16.<android.view.InputApplicationHandle: void <init>(android.os.IBinder)>($r17);

        r0.<com.android.server.wm.TaskPositioner: android.view.InputApplicationHandle mDragApplicationHandle> = $r16;

        $r16.<android.view.InputApplicationHandle: java.lang.String name> = "WindowManager";

        $r18 = r0.<com.android.server.wm.TaskPositioner: android.view.InputApplicationHandle mDragApplicationHandle>;

        $r18.<android.view.InputApplicationHandle: long dispatchingTimeoutNanos> = 5000000000L;

        $r19 = new android.view.InputWindowHandle;

        $r20 = r0.<com.android.server.wm.TaskPositioner: android.view.InputApplicationHandle mDragApplicationHandle>;

        $i0 = virtualinvoke r55.<com.android.server.wm.DisplayContent: int getDisplayId()>();

        specialinvoke $r19.<android.view.InputWindowHandle: void <init>(android.view.InputApplicationHandle,int)>($r20, $i0);

        r0.<com.android.server.wm.TaskPositioner: android.view.InputWindowHandle mDragWindowHandle> = $r19;

        $r19.<android.view.InputWindowHandle: java.lang.String name> = "WindowManager";

        $r22 = r0.<com.android.server.wm.TaskPositioner: android.view.InputWindowHandle mDragWindowHandle>;

        $r21 = r0.<com.android.server.wm.TaskPositioner: android.view.InputChannel mServerChannel>;

        $r23 = virtualinvoke $r21.<android.view.InputChannel: android.os.IBinder getToken()>();

        $r22.<android.view.InputWindowHandle: android.os.IBinder token> = $r23;

        $r24 = r0.<com.android.server.wm.TaskPositioner: android.view.InputWindowHandle mDragWindowHandle>;

        $r24.<android.view.InputWindowHandle: int layoutParamsFlags> = 0;

        $r25 = r0.<com.android.server.wm.TaskPositioner: android.view.InputWindowHandle mDragWindowHandle>;

        $r25.<android.view.InputWindowHandle: int layoutParamsType> = 2016;

        $r26 = r0.<com.android.server.wm.TaskPositioner: android.view.InputWindowHandle mDragWindowHandle>;

        $r26.<android.view.InputWindowHandle: long dispatchingTimeoutNanos> = 5000000000L;

        $r27 = r0.<com.android.server.wm.TaskPositioner: android.view.InputWindowHandle mDragWindowHandle>;

        $r27.<android.view.InputWindowHandle: boolean visible> = 1;

        $r28 = r0.<com.android.server.wm.TaskPositioner: android.view.InputWindowHandle mDragWindowHandle>;

        $r28.<android.view.InputWindowHandle: boolean canReceiveKeys> = 0;

        $r29 = r0.<com.android.server.wm.TaskPositioner: android.view.InputWindowHandle mDragWindowHandle>;

        $r29.<android.view.InputWindowHandle: boolean hasFocus> = 1;

        $r30 = r0.<com.android.server.wm.TaskPositioner: android.view.InputWindowHandle mDragWindowHandle>;

        $r30.<android.view.InputWindowHandle: boolean hasWallpaper> = 0;

        $r31 = r0.<com.android.server.wm.TaskPositioner: android.view.InputWindowHandle mDragWindowHandle>;

        $r31.<android.view.InputWindowHandle: boolean paused> = 0;

        $r32 = r0.<com.android.server.wm.TaskPositioner: android.view.InputWindowHandle mDragWindowHandle>;

        $i1 = staticinvoke <android.os.Process: int myPid()>();

        $r32.<android.view.InputWindowHandle: int ownerPid> = $i1;

        $r33 = r0.<com.android.server.wm.TaskPositioner: android.view.InputWindowHandle mDragWindowHandle>;

        $i2 = staticinvoke <android.os.Process: int myUid()>();

        $r33.<android.view.InputWindowHandle: int ownerUid> = $i2;

        $r34 = r0.<com.android.server.wm.TaskPositioner: android.view.InputWindowHandle mDragWindowHandle>;

        $r34.<android.view.InputWindowHandle: int inputFeatures> = 0;

        $r35 = r0.<com.android.server.wm.TaskPositioner: android.view.InputWindowHandle mDragWindowHandle>;

        $r35.<android.view.InputWindowHandle: float scaleFactor> = 1.0F;

        $r36 = r0.<com.android.server.wm.TaskPositioner: android.view.InputWindowHandle mDragWindowHandle>;

        $r37 = $r36.<android.view.InputWindowHandle: android.graphics.Region touchableRegion>;

        virtualinvoke $r37.<android.graphics.Region: void setEmpty()>();

        r59 = r0.<com.android.server.wm.TaskPositioner: android.graphics.Rect mTmpRect>;

        $r38 = r0.<com.android.server.wm.TaskPositioner: android.graphics.Rect mTmpRect>;

        virtualinvoke r55.<com.android.server.wm.DisplayContent: void getBounds(android.graphics.Rect)>($r38);

        $r39 = r0.<com.android.server.wm.TaskPositioner: android.view.InputWindowHandle mDragWindowHandle>;

        $i3 = r59.<android.graphics.Rect: int left>;

        $r39.<android.view.InputWindowHandle: int frameLeft> = $i3;

        $r40 = r0.<com.android.server.wm.TaskPositioner: android.view.InputWindowHandle mDragWindowHandle>;

        $i4 = r59.<android.graphics.Rect: int top>;

        $r40.<android.view.InputWindowHandle: int frameTop> = $i4;

        $r41 = r0.<com.android.server.wm.TaskPositioner: android.view.InputWindowHandle mDragWindowHandle>;

        $i5 = r59.<android.graphics.Rect: int right>;

        $r41.<android.view.InputWindowHandle: int frameRight> = $i5;

        $r42 = r0.<com.android.server.wm.TaskPositioner: android.view.InputWindowHandle mDragWindowHandle>;

        $i6 = r59.<android.graphics.Rect: int bottom>;

        $r42.<android.view.InputWindowHandle: int frameBottom> = $i6;

        $z0 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_ORIENTATION_enabled>;

        if $z0 == 0 goto label2;

        $r51 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_ORIENTATION>;

        $r50 = (java.lang.Object[]) null;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void d(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r51, 791468751, 0, null, $r50);

     label2:
        $r43 = r0.<com.android.server.wm.TaskPositioner: com.android.server.wm.DisplayContent mDisplayContent>;

        $r44 = virtualinvoke $r43.<com.android.server.wm.DisplayContent: com.android.server.wm.DisplayRotation getDisplayRotation()>();

        virtualinvoke $r44.<com.android.server.wm.DisplayRotation: void pause()>();

        $r45 = r0.<com.android.server.wm.TaskPositioner: com.android.server.wm.WindowManagerService mService>;

        $r46 = $r45.<com.android.server.wm.WindowManagerService: com.android.server.wm.TaskPositioningController mTaskPositioningController>;

        $i7 = virtualinvoke r1.<com.android.server.wm.WindowState: int getDisplayId()>();

        virtualinvoke $r46.<com.android.server.wm.TaskPositioningController: void showInputSurface(int)>($i7);

        r60 = virtualinvoke r55.<com.android.server.wm.DisplayContent: android.util.DisplayMetrics getDisplayMetrics()>();

        $i8 = staticinvoke <com.android.server.wm.WindowManagerService: int dipToPixel(int,android.util.DisplayMetrics)>(48, r60);

        r0.<com.android.server.wm.TaskPositioner: int mMinVisibleWidth> = $i8;

        $i9 = staticinvoke <com.android.server.wm.WindowManagerService: int dipToPixel(int,android.util.DisplayMetrics)>(32, r60);

        r0.<com.android.server.wm.TaskPositioner: int mMinVisibleHeight> = $i9;

        $r47 = r0.<com.android.server.wm.TaskPositioner: android.graphics.Point mMaxVisibleSize>;

        $i10 = virtualinvoke r59.<android.graphics.Rect: int width()>();

        $i11 = virtualinvoke r59.<android.graphics.Rect: int height()>();

        virtualinvoke $r47.<android.graphics.Point: void set(int,int)>($i10, $i11);

        r0.<com.android.server.wm.TaskPositioner: boolean mDragEnded> = 0;

     label3:
        $r48 = r1.<com.android.server.wm.WindowState: android.view.IWindow mClient>;

        r61 = interfaceinvoke $r48.<android.view.IWindow: android.os.IBinder asBinder()>();

        r0.<com.android.server.wm.TaskPositioner: android.os.IBinder mClientCallback> = r61;

        interfaceinvoke r61.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

     label4:
        r0.<com.android.server.wm.TaskPositioner: com.android.server.wm.WindowState mWindow> = r1;

        $r49 = virtualinvoke r1.<com.android.server.wm.WindowState: com.android.server.wm.Task getTask()>();

        r0.<com.android.server.wm.TaskPositioner: com.android.server.wm.Task mTask> = $r49;

        return;

     label5:
        $r52 := @caughtexception;

        $r53 = r0.<com.android.server.wm.TaskPositioner: com.android.server.wm.WindowManagerService mService>;

        $r54 = $r53.<com.android.server.wm.WindowManagerService: com.android.server.wm.TaskPositioningController mTaskPositioningController>;

        virtualinvoke $r54.<com.android.server.wm.TaskPositioningController: void finishTaskPositioning()>();

        return;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    void resizeDrag(float, float)
    {
        com.android.server.wm.TaskPositioner r0;
        float f0, f1, $f2, $f3;
        boolean $z0, $z1;
        android.graphics.Point $r1;
        int $i0, $i1, $i2;
        android.graphics.Rect $r2, $r3;

        r0 := @this: com.android.server.wm.TaskPositioner;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $f3 = r0.<com.android.server.wm.TaskPositioner: float mStartDragX>;

        $f2 = r0.<com.android.server.wm.TaskPositioner: float mStartDragY>;

        $r2 = r0.<com.android.server.wm.TaskPositioner: android.graphics.Rect mWindowOriginalBounds>;

        $i2 = r0.<com.android.server.wm.TaskPositioner: int mCtrlType>;

        $i1 = r0.<com.android.server.wm.TaskPositioner: int mMinVisibleWidth>;

        $i0 = r0.<com.android.server.wm.TaskPositioner: int mMinVisibleHeight>;

        $r1 = r0.<com.android.server.wm.TaskPositioner: android.graphics.Point mMaxVisibleSize>;

        $z1 = r0.<com.android.server.wm.TaskPositioner: boolean mPreserveOrientation>;

        $z0 = r0.<com.android.server.wm.TaskPositioner: boolean mStartOrientationWasLandscape>;

        $r3 = staticinvoke <com.android.internal.policy.TaskResizingAlgorithm: android.graphics.Rect resizeDrag(float,float,float,float,android.graphics.Rect,int,int,int,android.graphics.Point,boolean,boolean)>(f0, f1, $f3, $f2, $r2, $i2, $i1, $i0, $r1, $z1, $z0);

        specialinvoke r0.<com.android.server.wm.TaskPositioner: void updateDraggedBounds(android.graphics.Rect)>($r3);

        return;
    }

    void startDrag(boolean, boolean, float, float)
    {
        com.android.server.wm.TaskPositioner r0;
        boolean z0, $z2, z5, z6, z7;
        float f0, f1, $f2, $f3, $f4, $f5;
        android.graphics.Rect r1, $r3, $r4;
        com.android.server.wm.Task $r2;
        com.android.server.wm.WindowManagerService $r5;
        com.android.server.wm._$$Lambda$TaskPositioner$TE0EjYzJeOSFARmUlY6wF3y3c2U $r6;
        com.android.server.wm.WindowManagerService$H $r7;
        int $i0, $i2, $i4, $i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        byte $b1, $b3, $b5, $b7;

        r0 := @this: com.android.server.wm.TaskPositioner;

        z5 := @parameter0: boolean;

        z0 := @parameter1: boolean;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        r1 = r0.<com.android.server.wm.TaskPositioner: android.graphics.Rect mTmpRect>;

        $r2 = r0.<com.android.server.wm.TaskPositioner: com.android.server.wm.Task mTask>;

        virtualinvoke $r2.<com.android.server.wm.Task: void getBounds(android.graphics.Rect)>(r1);

        r0.<com.android.server.wm.TaskPositioner: int mCtrlType> = 0;

        r0.<com.android.server.wm.TaskPositioner: float mStartDragX> = f0;

        r0.<com.android.server.wm.TaskPositioner: float mStartDragY> = f1;

        r0.<com.android.server.wm.TaskPositioner: boolean mPreserveOrientation> = z0;

        if z5 == 0 goto label7;

        $i0 = r1.<android.graphics.Rect: int left>;

        $f2 = (float) $i0;

        $b1 = f0 cmpg $f2;

        if $b1 >= 0 goto label1;

        $i15 = r0.<com.android.server.wm.TaskPositioner: int mCtrlType>;

        $i16 = $i15 | 1;

        r0.<com.android.server.wm.TaskPositioner: int mCtrlType> = $i16;

     label1:
        $i2 = r1.<android.graphics.Rect: int right>;

        $f3 = (float) $i2;

        $b3 = f0 cmpl $f3;

        if $b3 <= 0 goto label2;

        $i13 = r0.<com.android.server.wm.TaskPositioner: int mCtrlType>;

        $i14 = $i13 | 2;

        r0.<com.android.server.wm.TaskPositioner: int mCtrlType> = $i14;

     label2:
        $i4 = r1.<android.graphics.Rect: int top>;

        $f4 = (float) $i4;

        $b5 = f1 cmpg $f4;

        if $b5 >= 0 goto label3;

        $i11 = r0.<com.android.server.wm.TaskPositioner: int mCtrlType>;

        $i12 = $i11 | 4;

        r0.<com.android.server.wm.TaskPositioner: int mCtrlType> = $i12;

     label3:
        $i6 = r1.<android.graphics.Rect: int bottom>;

        $f5 = (float) $i6;

        $b7 = f1 cmpl $f5;

        if $b7 <= 0 goto label4;

        $i9 = r0.<com.android.server.wm.TaskPositioner: int mCtrlType>;

        $i10 = $i9 | 8;

        r0.<com.android.server.wm.TaskPositioner: int mCtrlType> = $i10;

     label4:
        $i8 = r0.<com.android.server.wm.TaskPositioner: int mCtrlType>;

        if $i8 == 0 goto label5;

        z6 = 1;

        goto label6;

     label5:
        z6 = 0;

     label6:
        r0.<com.android.server.wm.TaskPositioner: boolean mResizing> = z6;

     label7:
        z7 = 0;

        $i17 = virtualinvoke r1.<android.graphics.Rect: int width()>();

        $i18 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        if $i17 < $i18 goto label8;

        z7 = 1;

     label8:
        r0.<com.android.server.wm.TaskPositioner: boolean mStartOrientationWasLandscape> = z7;

        $r3 = r0.<com.android.server.wm.TaskPositioner: android.graphics.Rect mWindowOriginalBounds>;

        virtualinvoke $r3.<android.graphics.Rect: void set(android.graphics.Rect)>(r1);

        $z2 = r0.<com.android.server.wm.TaskPositioner: boolean mResizing>;

        if $z2 == 0 goto label9;

        virtualinvoke r0.<com.android.server.wm.TaskPositioner: boolean notifyMoveLocked(float,float)>(f0, f1);

        $r5 = r0.<com.android.server.wm.TaskPositioner: com.android.server.wm.WindowManagerService mService>;

        $r7 = $r5.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerService$H mH>;

        $r6 = new com.android.server.wm._$$Lambda$TaskPositioner$TE0EjYzJeOSFARmUlY6wF3y3c2U;

        specialinvoke $r6.<com.android.server.wm._$$Lambda$TaskPositioner$TE0EjYzJeOSFARmUlY6wF3y3c2U: void <init>(com.android.server.wm.TaskPositioner,android.graphics.Rect)>(r0, r1);

        virtualinvoke $r7.<com.android.server.wm.WindowManagerService$H: boolean post(java.lang.Runnable)>($r6);

     label9:
        $r4 = r0.<com.android.server.wm.TaskPositioner: android.graphics.Rect mWindowDragBounds>;

        virtualinvoke $r4.<android.graphics.Rect: void set(android.graphics.Rect)>(r1);

        return;
    }

    public java.lang.String toShortString()
    {
        com.android.server.wm.TaskPositioner r0;

        r0 := @this: com.android.server.wm.TaskPositioner;

        return "WindowManager";
    }

    void unregister()
    {
        com.android.server.wm.TaskPositioner r0;
        android.os.IBinder r1;
        android.view.InputChannel $r2, $r7, $r10, $r11;
        com.android.server.wm.WindowManagerService $r3, $r6;
        com.android.server.wm.DisplayContent $r4, $r12, $r14;
        com.android.server.wm.TaskPositioningController $r5;
        int $i0;
        com.android.server.input.InputManagerService $r8;
        com.android.server.wm.TaskPositioner$WindowPositionerEventReceiver $r9;
        com.android.server.wm.InputMonitor $r13;
        boolean $z0;
        com.android.server.wm.DisplayRotation $r15;
        java.lang.Object[] $r16;
        com.android.server.wm.ProtoLogGroup $r17;

        r0 := @this: com.android.server.wm.TaskPositioner;

        $r2 = r0.<com.android.server.wm.TaskPositioner: android.view.InputChannel mClientChannel>;

        if $r2 != null goto label1;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("WindowManager", "Task positioner not registered");

        return;

     label1:
        $r3 = r0.<com.android.server.wm.TaskPositioner: com.android.server.wm.WindowManagerService mService>;

        $r5 = $r3.<com.android.server.wm.WindowManagerService: com.android.server.wm.TaskPositioningController mTaskPositioningController>;

        $r4 = r0.<com.android.server.wm.TaskPositioner: com.android.server.wm.DisplayContent mDisplayContent>;

        $i0 = virtualinvoke $r4.<com.android.server.wm.DisplayContent: int getDisplayId()>();

        virtualinvoke $r5.<com.android.server.wm.TaskPositioningController: void hideInputSurface(int)>($i0);

        $r6 = r0.<com.android.server.wm.TaskPositioner: com.android.server.wm.WindowManagerService mService>;

        $r8 = $r6.<com.android.server.wm.WindowManagerService: com.android.server.input.InputManagerService mInputManager>;

        $r7 = r0.<com.android.server.wm.TaskPositioner: android.view.InputChannel mServerChannel>;

        virtualinvoke $r8.<com.android.server.input.InputManagerService: void unregisterInputChannel(android.view.InputChannel)>($r7);

        $r9 = r0.<com.android.server.wm.TaskPositioner: com.android.server.wm.TaskPositioner$WindowPositionerEventReceiver mInputEventReceiver>;

        virtualinvoke $r9.<com.android.server.wm.TaskPositioner$WindowPositionerEventReceiver: void dispose()>();

        r0.<com.android.server.wm.TaskPositioner: com.android.server.wm.TaskPositioner$WindowPositionerEventReceiver mInputEventReceiver> = null;

        $r10 = r0.<com.android.server.wm.TaskPositioner: android.view.InputChannel mClientChannel>;

        virtualinvoke $r10.<android.view.InputChannel: void dispose()>();

        $r11 = r0.<com.android.server.wm.TaskPositioner: android.view.InputChannel mServerChannel>;

        virtualinvoke $r11.<android.view.InputChannel: void dispose()>();

        r0.<com.android.server.wm.TaskPositioner: android.view.InputChannel mClientChannel> = null;

        r0.<com.android.server.wm.TaskPositioner: android.view.InputChannel mServerChannel> = null;

        r0.<com.android.server.wm.TaskPositioner: android.view.InputWindowHandle mDragWindowHandle> = null;

        r0.<com.android.server.wm.TaskPositioner: android.view.InputApplicationHandle mDragApplicationHandle> = null;

        r0.<com.android.server.wm.TaskPositioner: boolean mDragEnded> = 1;

        $r12 = r0.<com.android.server.wm.TaskPositioner: com.android.server.wm.DisplayContent mDisplayContent>;

        $r13 = virtualinvoke $r12.<com.android.server.wm.DisplayContent: com.android.server.wm.InputMonitor getInputMonitor()>();

        virtualinvoke $r13.<com.android.server.wm.InputMonitor: void updateInputWindowsLw(boolean)>(1);

        $z0 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_ORIENTATION_enabled>;

        if $z0 == 0 goto label2;

        $r17 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_ORIENTATION>;

        $r16 = (java.lang.Object[]) null;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void d(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r17, 1422781269, 0, null, $r16);

     label2:
        $r14 = r0.<com.android.server.wm.TaskPositioner: com.android.server.wm.DisplayContent mDisplayContent>;

        $r15 = virtualinvoke $r14.<com.android.server.wm.DisplayContent: com.android.server.wm.DisplayRotation getDisplayRotation()>();

        virtualinvoke $r15.<com.android.server.wm.DisplayRotation: void resume()>();

        r0.<com.android.server.wm.TaskPositioner: com.android.server.wm.DisplayContent mDisplayContent> = null;

        r1 = r0.<com.android.server.wm.TaskPositioner: android.os.IBinder mClientCallback>;

        if r1 == null goto label3;

        interfaceinvoke r1.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

     label3:
        r0.<com.android.server.wm.TaskPositioner: com.android.server.wm.WindowState mWindow> = null;

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.wm.TaskPositioner: java.lang.String TAG_LOCAL> = "TaskPositioner";

        <com.android.server.wm.TaskPositioner: java.lang.String TAG> = "WindowManager";

        <com.android.server.wm.TaskPositioner: int RESIZING_HINT_DURATION_MS> = 0;

        <com.android.server.wm.TaskPositioner: float RESIZING_HINT_ALPHA> = 0.5F;

        <com.android.server.wm.TaskPositioner: boolean DEBUG_ORIENTATION_VIOLATIONS> = 0;

        return;
    }
}
