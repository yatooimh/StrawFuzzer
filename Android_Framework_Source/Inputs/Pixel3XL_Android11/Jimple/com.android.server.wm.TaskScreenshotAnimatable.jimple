class com.android.server.wm.TaskScreenshotAnimatable extends java.lang.Object implements com.android.server.wm.SurfaceAnimator$Animatable
{
    private static final java.lang.String TAG;
    private int mHeight;
    private android.view.SurfaceControl mSurfaceControl;
    private com.android.server.wm.Task mTask;
    private int mWidth;

    void <init>(java.util.function.Function, com.android.server.wm.Task, android.view.SurfaceControl$ScreenshotGraphicBuffer)
    {
        com.android.server.wm.TaskScreenshotAnimatable r0;
        android.view.SurfaceControl$ScreenshotGraphicBuffer r1;
        long l0, l1;
        float f0, $f1, $f2, $f3;
        boolean $z0;
        android.view.SurfaceSession $r2;
        java.lang.Object $r3;
        android.view.SurfaceControl$Builder $r4, $r5, $r6, $r7;
        int $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        android.view.SurfaceControl $r8, $r10, $r13, $r17;
        android.view.SurfaceControl$Transaction $r9;
        android.view.Surface $r12;
        android.graphics.ColorSpace $r14;
        com.android.server.wm.Task $r15, r23;
        android.graphics.Rect $r16;
        java.lang.Object[] $r18;
        com.android.server.wm.ProtoLogGroup $r19;
        java.lang.Long $r20, $r21;
        java.util.function.Function r22;
        android.graphics.GraphicBuffer r24;
        java.lang.String r25;

        r0 := @this: com.android.server.wm.TaskScreenshotAnimatable;

        r22 := @parameter0: java.util.function.Function;

        r23 := @parameter1: com.android.server.wm.Task;

        r1 := @parameter2: android.view.SurfaceControl$ScreenshotGraphicBuffer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        r24 = null;

        goto label2;

     label1:
        r24 = virtualinvoke r1.<android.view.SurfaceControl$ScreenshotGraphicBuffer: android.graphics.GraphicBuffer getGraphicBuffer()>();

     label2:
        r0.<com.android.server.wm.TaskScreenshotAnimatable: com.android.server.wm.Task mTask> = r23;

        if r24 == null goto label3;

        i8 = virtualinvoke r24.<android.graphics.GraphicBuffer: int getWidth()>();

        goto label4;

     label3:
        i8 = 1;

     label4:
        r0.<com.android.server.wm.TaskScreenshotAnimatable: int mWidth> = i8;

        if r24 == null goto label5;

        i9 = virtualinvoke r24.<android.graphics.GraphicBuffer: int getHeight()>();

        goto label6;

     label5:
        i9 = 1;

     label6:
        r0.<com.android.server.wm.TaskScreenshotAnimatable: int mHeight> = i9;

        $z0 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_RECENTS_ANIMATIONS_enabled>;

        if $z0 == 0 goto label7;

        r25 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r23);

        $i6 = r0.<com.android.server.wm.TaskScreenshotAnimatable: int mWidth>;

        l0 = (long) $i6;

        $i7 = r0.<com.android.server.wm.TaskScreenshotAnimatable: int mHeight>;

        l1 = (long) $i7;

        $r19 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_RECENTS_ANIMATIONS>;

        $r18 = newarray (java.lang.Object)[3];

        $r18[0] = r25;

        $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r18[1] = $r20;

        $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r18[2] = $r21;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void d(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r19, 1984470582, 20, null, $r18);

     label7:
        $r2 = new android.view.SurfaceSession;

        specialinvoke $r2.<android.view.SurfaceSession: void <init>()>();

        $r3 = interfaceinvoke r22.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>($r2);

        $r4 = (android.view.SurfaceControl$Builder) $r3;

        $r5 = virtualinvoke $r4.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setName(java.lang.String)>("RecentTaskScreenshotSurface");

        $i3 = r0.<com.android.server.wm.TaskScreenshotAnimatable: int mWidth>;

        $i2 = r0.<com.android.server.wm.TaskScreenshotAnimatable: int mHeight>;

        $r6 = virtualinvoke $r5.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setBufferSize(int,int)>($i3, $i2);

        $r7 = virtualinvoke $r6.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setCallsite(java.lang.String)>("TaskScreenshotAnimatable");

        $r8 = virtualinvoke $r7.<android.view.SurfaceControl$Builder: android.view.SurfaceControl build()>();

        r0.<com.android.server.wm.TaskScreenshotAnimatable: android.view.SurfaceControl mSurfaceControl> = $r8;

        if r24 == null goto label8;

        $r12 = new android.view.Surface;

        specialinvoke $r12.<android.view.Surface: void <init>()>();

        $r13 = r0.<com.android.server.wm.TaskScreenshotAnimatable: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r12.<android.view.Surface: void copyFrom(android.view.SurfaceControl)>($r13);

        $r14 = virtualinvoke r1.<android.view.SurfaceControl$ScreenshotGraphicBuffer: android.graphics.ColorSpace getColorSpace()>();

        virtualinvoke $r12.<android.view.Surface: void attachAndQueueBufferWithColorSpace(android.graphics.GraphicBuffer,android.graphics.ColorSpace)>(r24, $r14);

        virtualinvoke $r12.<android.view.Surface: void release()>();

        $r15 = r0.<com.android.server.wm.TaskScreenshotAnimatable: com.android.server.wm.Task mTask>;

        $r16 = virtualinvoke $r15.<com.android.server.wm.Task: android.graphics.Rect getBounds()>();

        $i4 = virtualinvoke $r16.<android.graphics.Rect: int width()>();

        $f1 = (float) $i4;

        $f3 = $f1 * 1.0F;

        $i5 = r0.<com.android.server.wm.TaskScreenshotAnimatable: int mWidth>;

        $f2 = (float) $i5;

        f0 = $f3 / $f2;

        $r17 = r0.<com.android.server.wm.TaskScreenshotAnimatable: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r17.<android.view.SurfaceControl: void setMatrix(float,float,float,float)>(f0, 0.0F, 0.0F, f0);

     label8:
        $r9 = virtualinvoke r0.<com.android.server.wm.TaskScreenshotAnimatable: android.view.SurfaceControl$Transaction getPendingTransaction()>();

        $r10 = r0.<com.android.server.wm.TaskScreenshotAnimatable: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r9.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction show(android.view.SurfaceControl)>($r10);

        return;
    }

    public void commitPendingTransaction()
    {
        com.android.server.wm.TaskScreenshotAnimatable r0;
        com.android.server.wm.Task $r1;

        r0 := @this: com.android.server.wm.TaskScreenshotAnimatable;

        $r1 = r0.<com.android.server.wm.TaskScreenshotAnimatable: com.android.server.wm.Task mTask>;

        virtualinvoke $r1.<com.android.server.wm.Task: void commitPendingTransaction()>();

        return;
    }

    public android.view.SurfaceControl getAnimationLeashParent()
    {
        com.android.server.wm.TaskScreenshotAnimatable r0;
        com.android.server.wm.Task $r1;
        android.view.SurfaceControl $r2;

        r0 := @this: com.android.server.wm.TaskScreenshotAnimatable;

        $r1 = r0.<com.android.server.wm.TaskScreenshotAnimatable: com.android.server.wm.Task mTask>;

        $r2 = virtualinvoke $r1.<com.android.server.wm.Task: android.view.SurfaceControl getAnimationLeashParent()>();

        return $r2;
    }

    public android.view.SurfaceControl getParentSurfaceControl()
    {
        com.android.server.wm.TaskScreenshotAnimatable r0;
        com.android.server.wm.Task $r1;
        android.view.SurfaceControl $r2;

        r0 := @this: com.android.server.wm.TaskScreenshotAnimatable;

        $r1 = r0.<com.android.server.wm.TaskScreenshotAnimatable: com.android.server.wm.Task mTask>;

        $r2 = $r1.<com.android.server.wm.Task: android.view.SurfaceControl mSurfaceControl>;

        return $r2;
    }

    public android.view.SurfaceControl$Transaction getPendingTransaction()
    {
        com.android.server.wm.TaskScreenshotAnimatable r0;
        com.android.server.wm.Task $r1;
        android.view.SurfaceControl$Transaction $r2;

        r0 := @this: com.android.server.wm.TaskScreenshotAnimatable;

        $r1 = r0.<com.android.server.wm.TaskScreenshotAnimatable: com.android.server.wm.Task mTask>;

        $r2 = virtualinvoke $r1.<com.android.server.wm.Task: android.view.SurfaceControl$Transaction getPendingTransaction()>();

        return $r2;
    }

    public android.view.SurfaceControl getSurfaceControl()
    {
        com.android.server.wm.TaskScreenshotAnimatable r0;
        android.view.SurfaceControl $r1;

        r0 := @this: com.android.server.wm.TaskScreenshotAnimatable;

        $r1 = r0.<com.android.server.wm.TaskScreenshotAnimatable: android.view.SurfaceControl mSurfaceControl>;

        return $r1;
    }

    public int getSurfaceHeight()
    {
        com.android.server.wm.TaskScreenshotAnimatable r0;
        int $i0;

        r0 := @this: com.android.server.wm.TaskScreenshotAnimatable;

        $i0 = r0.<com.android.server.wm.TaskScreenshotAnimatable: int mHeight>;

        return $i0;
    }

    public int getSurfaceWidth()
    {
        com.android.server.wm.TaskScreenshotAnimatable r0;
        int $i0;

        r0 := @this: com.android.server.wm.TaskScreenshotAnimatable;

        $i0 = r0.<com.android.server.wm.TaskScreenshotAnimatable: int mWidth>;

        return $i0;
    }

    public android.view.SurfaceControl$Builder makeAnimationLeash()
    {
        com.android.server.wm.TaskScreenshotAnimatable r0;
        com.android.server.wm.Task $r1;
        android.view.SurfaceControl$Builder $r2;

        r0 := @this: com.android.server.wm.TaskScreenshotAnimatable;

        $r1 = r0.<com.android.server.wm.TaskScreenshotAnimatable: com.android.server.wm.Task mTask>;

        $r2 = virtualinvoke $r1.<com.android.server.wm.Task: android.view.SurfaceControl$Builder makeAnimationLeash()>();

        return $r2;
    }

    public void onAnimationLeashCreated(android.view.SurfaceControl$Transaction, android.view.SurfaceControl)
    {
        com.android.server.wm.TaskScreenshotAnimatable r0;
        android.view.SurfaceControl$Transaction r1;
        android.view.SurfaceControl r2;

        r0 := @this: com.android.server.wm.TaskScreenshotAnimatable;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        r2 := @parameter1: android.view.SurfaceControl;

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setLayer(android.view.SurfaceControl,int)>(r2, 1);

        return;
    }

    public void onAnimationLeashLost(android.view.SurfaceControl$Transaction)
    {
        com.android.server.wm.TaskScreenshotAnimatable r0;
        android.view.SurfaceControl$Transaction r1;
        android.view.SurfaceControl r2;

        r0 := @this: com.android.server.wm.TaskScreenshotAnimatable;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        r2 = r0.<com.android.server.wm.TaskScreenshotAnimatable: android.view.SurfaceControl mSurfaceControl>;

        if r2 == null goto label1;

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction remove(android.view.SurfaceControl)>(r2);

        r0.<com.android.server.wm.TaskScreenshotAnimatable: android.view.SurfaceControl mSurfaceControl> = null;

     label1:
        return;
    }

    public static void <clinit>()
    {
        <com.android.server.wm.TaskScreenshotAnimatable: java.lang.String TAG> = "TaskScreenshotAnim";

        return;
    }
}
