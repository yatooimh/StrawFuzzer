class com.android.server.wm.TaskSnapshotCache extends java.lang.Object
{
    private final android.util.ArrayMap mAppTaskMap;
    private final com.android.server.wm.TaskSnapshotLoader mLoader;
    private final android.util.ArrayMap mRunningCache;
    private final com.android.server.wm.WindowManagerService mService;

    void <init>(com.android.server.wm.WindowManagerService, com.android.server.wm.TaskSnapshotLoader)
    {
        com.android.server.wm.TaskSnapshotCache r0;
        com.android.server.wm.WindowManagerService r1;
        com.android.server.wm.TaskSnapshotLoader r2;
        android.util.ArrayMap $r3, $r4;

        r0 := @this: com.android.server.wm.TaskSnapshotCache;

        r1 := @parameter0: com.android.server.wm.WindowManagerService;

        r2 := @parameter1: com.android.server.wm.TaskSnapshotLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.wm.TaskSnapshotCache: android.util.ArrayMap mAppTaskMap> = $r3;

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.wm.TaskSnapshotCache: android.util.ArrayMap mRunningCache> = $r4;

        r0.<com.android.server.wm.TaskSnapshotCache: com.android.server.wm.WindowManagerService mService> = r1;

        r0.<com.android.server.wm.TaskSnapshotCache: com.android.server.wm.TaskSnapshotLoader mLoader> = r2;

        return;
    }

    private android.app.ActivityManager$TaskSnapshot tryRestoreFromDisk(int, int, boolean)
    {
        com.android.server.wm.TaskSnapshotCache r0;
        int i0, i1;
        boolean z0;
        android.app.ActivityManager$TaskSnapshot r1;
        com.android.server.wm.TaskSnapshotLoader $r2;

        r0 := @this: com.android.server.wm.TaskSnapshotCache;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r2 = r0.<com.android.server.wm.TaskSnapshotCache: com.android.server.wm.TaskSnapshotLoader mLoader>;

        r1 = virtualinvoke $r2.<com.android.server.wm.TaskSnapshotLoader: android.app.ActivityManager$TaskSnapshot loadTask(int,int,boolean)>(i0, i1, z0);

        if r1 != null goto label1;

        return null;

     label1:
        return r1;
    }

    void clearRunningCache()
    {
        com.android.server.wm.TaskSnapshotCache r0;
        android.util.ArrayMap $r1;

        r0 := @this: com.android.server.wm.TaskSnapshotCache;

        $r1 = r0.<com.android.server.wm.TaskSnapshotCache: android.util.ArrayMap mRunningCache>;

        virtualinvoke $r1.<android.util.ArrayMap: void clear()>();

        return;
    }

    void dump(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.wm.TaskSnapshotCache r0;
        java.io.PrintWriter r1;
        java.lang.StringBuilder $r2, $r5, $r8, $r15, $r22, $r28;
        java.lang.String $r11, $r21, $r27, $r33, r34, r36, r38;
        android.util.ArrayMap $r12, $r13, $r18;
        int $i0, i1;
        java.lang.Object $r14, $r19;
        com.android.server.wm.ActivityRecord $r25;
        android.app.ActivityManager$TaskSnapshot $r31;
        com.android.server.wm.TaskSnapshotCache$CacheEntry r40;

        r0 := @this: com.android.server.wm.TaskSnapshotCache;

        r1 := @parameter0: java.io.PrintWriter;

        r34 := @parameter1: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r34);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        r36 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r36);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        r38 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r34);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SnapshotCache");

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r11);

        $r12 = r0.<com.android.server.wm.TaskSnapshotCache: android.util.ArrayMap mRunningCache>;

        $i0 = virtualinvoke $r12.<android.util.ArrayMap: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r13 = r0.<com.android.server.wm.TaskSnapshotCache: android.util.ArrayMap mRunningCache>;

        $r14 = virtualinvoke $r13.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        r40 = (com.android.server.wm.TaskSnapshotCache$CacheEntry) $r14;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r36);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Entry taskId=");

        $r18 = r0.<com.android.server.wm.TaskSnapshotCache: android.util.ArrayMap mRunningCache>;

        $r19 = virtualinvoke $r18.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i1);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r21 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r21);

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("topApp=");

        $r25 = r40.<com.android.server.wm.TaskSnapshotCache$CacheEntry: com.android.server.wm.ActivityRecord topApp>;

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r27);

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38);

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("snapshot=");

        $r31 = r40.<com.android.server.wm.TaskSnapshotCache$CacheEntry: android.app.ActivityManager$TaskSnapshot snapshot>;

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r31);

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r33);

        i1 = i1 + -1;

        goto label1;

     label2:
        return;
    }

    android.app.ActivityManager$TaskSnapshot getSnapshot(int, int, boolean, boolean)
    {
        com.android.server.wm.TaskSnapshotCache r0;
        int i0, i1;
        boolean z0, z1;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.WindowManagerService $r2;
        android.util.ArrayMap $r3;
        java.lang.Integer $r4;
        java.lang.Object $r5;
        android.app.ActivityManager$TaskSnapshot $r6, r9;
        java.lang.Throwable $r7;
        com.android.server.wm.TaskSnapshotCache$CacheEntry r8;

        r0 := @this: com.android.server.wm.TaskSnapshotCache;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r2 = r0.<com.android.server.wm.TaskSnapshotCache: com.android.server.wm.WindowManagerService mService>;

        r1 = $r2.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label01:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.TaskSnapshotCache: android.util.ArrayMap mRunningCache>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r4);

        r8 = (com.android.server.wm.TaskSnapshotCache$CacheEntry) $r5;

     label02:
        if r8 == null goto label05;

     label03:
        r9 = r8.<com.android.server.wm.TaskSnapshotCache$CacheEntry: android.app.ActivityManager$TaskSnapshot snapshot>;

        exitmonitor r1;

     label04:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return r9;

     label05:
        exitmonitor r1;

     label06:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        if z0 != 0 goto label07;

        return null;

     label07:
        $r6 = specialinvoke r0.<com.android.server.wm.TaskSnapshotCache: android.app.ActivityManager$TaskSnapshot tryRestoreFromDisk(int,int,boolean)>(i0, i1, z1);

        return $r6;

     label08:
        $r7 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    void onAppDied(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.TaskSnapshotCache r0;
        android.util.ArrayMap $r1;
        java.lang.Object $r2;
        int $i0;
        com.android.server.wm.ActivityRecord r3;
        java.lang.Integer r4;

        r0 := @this: com.android.server.wm.TaskSnapshotCache;

        r3 := @parameter0: com.android.server.wm.ActivityRecord;

        $r1 = r0.<com.android.server.wm.TaskSnapshotCache: android.util.ArrayMap mAppTaskMap>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (java.lang.Integer) $r2;

        if r4 == null goto label1;

        $i0 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        virtualinvoke r0.<com.android.server.wm.TaskSnapshotCache: void removeRunningEntry(int)>($i0);

     label1:
        return;
    }

    void onAppRemoved(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.TaskSnapshotCache r0;
        android.util.ArrayMap $r1;
        java.lang.Object $r2;
        int $i0;
        com.android.server.wm.ActivityRecord r3;
        java.lang.Integer r4;

        r0 := @this: com.android.server.wm.TaskSnapshotCache;

        r3 := @parameter0: com.android.server.wm.ActivityRecord;

        $r1 = r0.<com.android.server.wm.TaskSnapshotCache: android.util.ArrayMap mAppTaskMap>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (java.lang.Integer) $r2;

        if r4 == null goto label1;

        $i0 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        virtualinvoke r0.<com.android.server.wm.TaskSnapshotCache: void removeRunningEntry(int)>($i0);

     label1:
        return;
    }

    void onTaskRemoved(int)
    {
        com.android.server.wm.TaskSnapshotCache r0;
        int i0;

        r0 := @this: com.android.server.wm.TaskSnapshotCache;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.wm.TaskSnapshotCache: void removeRunningEntry(int)>(i0);

        return;
    }

    void putSnapshot(com.android.server.wm.Task, android.app.ActivityManager$TaskSnapshot)
    {
        com.android.server.wm.TaskSnapshotCache r0;
        com.android.server.wm.Task r1;
        android.app.ActivityManager$TaskSnapshot r2;
        int $i0, $i1, $i2;
        android.util.ArrayMap $r3, $r6, $r9, $r14;
        java.lang.Integer $r4, $r7, $r10;
        java.lang.Object $r5;
        com.android.server.wm.TaskSnapshotCache$CacheEntry $r11, r16;
        com.android.server.wm.ActivityRecord $r13, r17;

        r0 := @this: com.android.server.wm.TaskSnapshotCache;

        r1 := @parameter0: com.android.server.wm.Task;

        r2 := @parameter1: android.app.ActivityManager$TaskSnapshot;

        $r3 = r0.<com.android.server.wm.TaskSnapshotCache: android.util.ArrayMap mRunningCache>;

        $i0 = r1.<com.android.server.wm.Task: int mTaskId>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r4);

        r16 = (com.android.server.wm.TaskSnapshotCache$CacheEntry) $r5;

        if r16 == null goto label1;

        $r14 = r0.<com.android.server.wm.TaskSnapshotCache: android.util.ArrayMap mAppTaskMap>;

        $r13 = r16.<com.android.server.wm.TaskSnapshotCache$CacheEntry: com.android.server.wm.ActivityRecord topApp>;

        virtualinvoke $r14.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r13);

     label1:
        r17 = virtualinvoke r1.<com.android.server.wm.Task: com.android.server.wm.ActivityRecord getTopMostActivity()>();

        $r6 = r0.<com.android.server.wm.TaskSnapshotCache: android.util.ArrayMap mAppTaskMap>;

        $i1 = r1.<com.android.server.wm.Task: int mTaskId>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r17, $r7);

        $r9 = r0.<com.android.server.wm.TaskSnapshotCache: android.util.ArrayMap mRunningCache>;

        $i2 = r1.<com.android.server.wm.Task: int mTaskId>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r11 = new com.android.server.wm.TaskSnapshotCache$CacheEntry;

        specialinvoke $r11.<com.android.server.wm.TaskSnapshotCache$CacheEntry: void <init>(android.app.ActivityManager$TaskSnapshot,com.android.server.wm.ActivityRecord)>(r2, r17);

        virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r11);

        return;
    }

    void removeRunningEntry(int)
    {
        com.android.server.wm.TaskSnapshotCache r0;
        int i0;
        com.android.server.wm.TaskSnapshotCache$CacheEntry r1;
        android.util.ArrayMap $r2, $r6, $r8;
        java.lang.Integer $r3, $r9;
        java.lang.Object $r4;
        com.android.server.wm.ActivityRecord $r5;

        r0 := @this: com.android.server.wm.TaskSnapshotCache;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.wm.TaskSnapshotCache: android.util.ArrayMap mRunningCache>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r3);

        r1 = (com.android.server.wm.TaskSnapshotCache$CacheEntry) $r4;

        if r1 == null goto label1;

        $r6 = r0.<com.android.server.wm.TaskSnapshotCache: android.util.ArrayMap mAppTaskMap>;

        $r5 = r1.<com.android.server.wm.TaskSnapshotCache$CacheEntry: com.android.server.wm.ActivityRecord topApp>;

        virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r5);

        $r8 = r0.<com.android.server.wm.TaskSnapshotCache: android.util.ArrayMap mRunningCache>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r9);

     label1:
        return;
    }
}
