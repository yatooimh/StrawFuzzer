class com.android.server.wm.TaskSnapshotLoader extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final com.android.server.wm.TaskSnapshotPersister mPersister;

    void <init>(com.android.server.wm.TaskSnapshotPersister)
    {
        com.android.server.wm.TaskSnapshotLoader r0;
        com.android.server.wm.TaskSnapshotPersister r1;

        r0 := @this: com.android.server.wm.TaskSnapshotLoader;

        r1 := @parameter0: com.android.server.wm.TaskSnapshotPersister;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.wm.TaskSnapshotLoader: com.android.server.wm.TaskSnapshotPersister mPersister> = r1;

        return;
    }

    com.android.server.wm.TaskSnapshotLoader$PreRLegacySnapshotConfig getLegacySnapshotConfig(int, float, boolean, boolean)
    {
        com.android.server.wm.TaskSnapshotLoader r0;
        boolean z0, $z2, $z3, z4, z5, z6, z7;
        int $i0, i1;
        float f1, f3, f4;
        com.android.server.wm.TaskSnapshotLoader$PreRLegacySnapshotConfig $r1;

        r0 := @this: com.android.server.wm.TaskSnapshotLoader;

        i1 := @parameter0: int;

        f1 := @parameter1: float;

        z4 := @parameter2: boolean;

        z0 := @parameter3: boolean;

        z5 = 1;

        if i1 != 0 goto label01;

        z6 = 1;

        goto label02;

     label01:
        z6 = 0;

     label02:
        if z6 != 0 goto label03;

        return null;

     label03:
        if z6 == 0 goto label04;

        $i0 = staticinvoke <java.lang.Float: int compare(float,float)>(f1, 0.0F);

        if $i0 != 0 goto label04;

        goto label05;

     label04:
        z5 = 0;

     label05:
        if z5 == 0 goto label09;

        $z3 = staticinvoke <android.app.ActivityManager: boolean isLowRamDeviceStatic()>();

        if $z3 == 0 goto label06;

        if z4 != 0 goto label06;

        f3 = 0.6F;

        z7 = 1;

        goto label12;

     label06:
        if z0 == 0 goto label07;

        f4 = 0.5F;

        goto label08;

     label07:
        f4 = 1.0F;

     label08:
        f3 = f4;

        z7 = 0;

        goto label12;

     label09:
        f3 = 0.0F;

        z7 = 0;

        if z6 == 0 goto label12;

        $z2 = staticinvoke <android.app.ActivityManager: boolean isLowRamDeviceStatic()>();

        if $z2 == 0 goto label10;

        z7 = 1;

        f3 = f1;

        goto label12;

     label10:
        if z0 == 0 goto label11;

        f1 = 0.5F * f1;

        goto label11;

     label11:
        z7 = 0;

        f3 = f1;

     label12:
        $r1 = new com.android.server.wm.TaskSnapshotLoader$PreRLegacySnapshotConfig;

        specialinvoke $r1.<com.android.server.wm.TaskSnapshotLoader$PreRLegacySnapshotConfig: void <init>(float,boolean)>(f3, z7);

        return $r1;
    }

    android.app.ActivityManager$TaskSnapshot loadTask(int, int, boolean)
    {
        com.android.server.wm.TaskSnapshotLoader r0;
        int i0, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i17, i18, i19, i20, i21;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, z8, $z9;
        com.android.server.wm.nano.WindowManagerProtos$TaskSnapshotProto r1;
        android.content.ComponentName r2;
        long l1;
        com.android.server.wm.TaskSnapshotPersister $r3, $r6, $r7, $r8;
        java.nio.file.Path $r4;
        byte[] $r5;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        android.graphics.Bitmap$Config $r9, r35;
        java.lang.String $r10, $r14, $r16, $r18, $r20, $r22, $r24, $r29, $r36;
        android.graphics.Point $r11, r43;
        android.app.ActivityManager$TaskSnapshot $r12;
        java.lang.Throwable $r25, $r30;
        java.lang.StringBuilder $r26, r38, r40, r42;
        java.io.File r31, r32;
        com.android.server.wm.TaskSnapshotLoader$PreRLegacySnapshotConfig r33;
        android.graphics.BitmapFactory$Options r34;
        android.graphics.Bitmap r37, r39;
        android.graphics.GraphicBuffer r41;
        android.graphics.ColorSpace r44;
        android.graphics.Rect r45;

        r0 := @this: com.android.server.wm.TaskSnapshotLoader;

        i0 := @parameter0: int;

        i17 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r3 = r0.<com.android.server.wm.TaskSnapshotLoader: com.android.server.wm.TaskSnapshotPersister mPersister>;

        r31 = virtualinvoke $r3.<com.android.server.wm.TaskSnapshotPersister: java.io.File getProtoFile(int,int)>(i0, i17);

        $z3 = virtualinvoke r31.<java.io.File: boolean exists()>();

        if $z3 != 0 goto label01;

        return null;

     label01:
        $r4 = virtualinvoke r31.<java.io.File: java.nio.file.Path toPath()>();

        $r5 = staticinvoke <java.nio.file.Files: byte[] readAllBytes(java.nio.file.Path)>($r4);

        r1 = staticinvoke <com.android.server.wm.nano.WindowManagerProtos$TaskSnapshotProto: com.android.server.wm.nano.WindowManagerProtos$TaskSnapshotProto parseFrom(byte[])>($r5);

        $r6 = r0.<com.android.server.wm.TaskSnapshotLoader: com.android.server.wm.TaskSnapshotPersister mPersister>;

        r32 = virtualinvoke $r6.<com.android.server.wm.TaskSnapshotPersister: java.io.File getHighResolutionBitmapFile(int,int)>(i0, i17);

        $i4 = r1.<com.android.server.wm.nano.WindowManagerProtos$TaskSnapshotProto: int taskWidth>;

        $f0 = r1.<com.android.server.wm.nano.WindowManagerProtos$TaskSnapshotProto: float legacyScale>;

        $z4 = virtualinvoke r32.<java.io.File: boolean exists()>();

        r33 = virtualinvoke r0.<com.android.server.wm.TaskSnapshotLoader: com.android.server.wm.TaskSnapshotLoader$PreRLegacySnapshotConfig getLegacySnapshotConfig(int,float,boolean,boolean)>($i4, $f0, $z4, z0);

     label02:
        if r33 == null goto label05;

     label03:
        $z7 = r33.<com.android.server.wm.TaskSnapshotLoader$PreRLegacySnapshotConfig: boolean mForceLoadReducedJpeg>;

        if $z7 == 0 goto label05;

     label04:
        z8 = 1;

        goto label06;

     label05:
        z8 = 0;

     label06:
        if z0 != 0 goto label08;

        if z8 == 0 goto label07;

        goto label08;

     label07:
        goto label09;

     label08:
        $r7 = r0.<com.android.server.wm.TaskSnapshotLoader: com.android.server.wm.TaskSnapshotPersister mPersister>;

        r32 = virtualinvoke $r7.<com.android.server.wm.TaskSnapshotPersister: java.io.File getLowResolutionBitmapFile(int,int)>(i0, i17);

     label09:
        $z9 = virtualinvoke r32.<java.io.File: boolean exists()>();

        if $z9 != 0 goto label11;

     label10:
        return null;

     label11:
        r34 = new android.graphics.BitmapFactory$Options;

        specialinvoke r34.<android.graphics.BitmapFactory$Options: void <init>()>();

        $r8 = r0.<com.android.server.wm.TaskSnapshotLoader: com.android.server.wm.TaskSnapshotPersister mPersister>;

        $z5 = virtualinvoke $r8.<com.android.server.wm.TaskSnapshotPersister: boolean use16BitFormat()>();

        if $z5 == 0 goto label13;

        $z6 = r1.<com.android.server.wm.nano.WindowManagerProtos$TaskSnapshotProto: boolean isTranslucent>;

        if $z6 != 0 goto label13;

        r35 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config RGB_565>;

     label12:
        goto label14;

     label13:
        r35 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

     label14:
        r34.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap$Config inPreferredConfig> = r35;

        $r36 = virtualinvoke r32.<java.io.File: java.lang.String getPath()>();

        r37 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>($r36, r34);

     label15:
        if r37 != null goto label18;

     label16:
        r38 = new java.lang.StringBuilder;

        specialinvoke r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to load bitmap: ");

        $r22 = virtualinvoke r32.<java.io.File: java.lang.String getPath()>();

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", $r24);

     label17:
        return null;

     label18:
        $r9 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config HARDWARE>;

        r39 = virtualinvoke r37.<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap$Config,boolean)>($r9, 0);

        virtualinvoke r37.<android.graphics.Bitmap: void recycle()>();

     label19:
        if r39 != null goto label22;

     label20:
        r40 = new java.lang.StringBuilder;

        specialinvoke r40.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create hardware bitmap: ");

        $r18 = virtualinvoke r32.<java.io.File: java.lang.String getPath()>();

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", $r20);

     label21:
        return null;

     label22:
        r41 = virtualinvoke r39.<android.graphics.Bitmap: android.graphics.GraphicBuffer createGraphicBufferHandle()>();

     label23:
        if r41 != null goto label26;

     label24:
        r42 = new java.lang.StringBuilder;

        specialinvoke r42.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to retrieve gralloc buffer for bitmap: ");

        $r14 = virtualinvoke r32.<java.io.File: java.lang.String getPath()>();

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke r42.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", $r16);

     label25:
        return null;

     label26:
        $r10 = r1.<com.android.server.wm.nano.WindowManagerProtos$TaskSnapshotProto: java.lang.String topActivityComponent>;

        r2 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>($r10);

     label27:
        if r33 == null goto label30;

     label28:
        $i11 = virtualinvoke r39.<android.graphics.Bitmap: int getWidth()>();

        $f2 = (float) $i11;

        $f1 = r33.<com.android.server.wm.TaskSnapshotLoader$PreRLegacySnapshotConfig: float mScale>;

        $f3 = $f2 / $f1;

        i18 = (int) $f3;

        $i12 = virtualinvoke r39.<android.graphics.Bitmap: int getHeight()>();

        $f5 = (float) $i12;

        $f4 = r33.<com.android.server.wm.TaskSnapshotLoader$PreRLegacySnapshotConfig: float mScale>;

        $f6 = $f5 / $f4;

        i19 = (int) $f6;

        r43 = new android.graphics.Point;

        specialinvoke r43.<android.graphics.Point: void <init>(int,int)>(i18, i19);

     label29:
        goto label31;

     label30:
        $r11 = new android.graphics.Point;

        $i6 = r1.<com.android.server.wm.nano.WindowManagerProtos$TaskSnapshotProto: int taskWidth>;

        $i5 = r1.<com.android.server.wm.nano.WindowManagerProtos$TaskSnapshotProto: int taskHeight>;

        specialinvoke $r11.<android.graphics.Point: void <init>(int,int)>($i6, $i5);

        r43 = $r11;

     label31:
        l1 = r1.<com.android.server.wm.nano.WindowManagerProtos$TaskSnapshotProto: long id>;

        r44 = virtualinvoke r39.<android.graphics.Bitmap: android.graphics.ColorSpace getColorSpace()>();

        i2 = r1.<com.android.server.wm.nano.WindowManagerProtos$TaskSnapshotProto: int orientation>;

        i3 = r1.<com.android.server.wm.nano.WindowManagerProtos$TaskSnapshotProto: int rotation>;

        r45 = new android.graphics.Rect;

        $i10 = r1.<com.android.server.wm.nano.WindowManagerProtos$TaskSnapshotProto: int insetLeft>;

        $i9 = r1.<com.android.server.wm.nano.WindowManagerProtos$TaskSnapshotProto: int insetTop>;

        $i8 = r1.<com.android.server.wm.nano.WindowManagerProtos$TaskSnapshotProto: int insetRight>;

        $i7 = r1.<com.android.server.wm.nano.WindowManagerProtos$TaskSnapshotProto: int insetBottom>;

        specialinvoke r45.<android.graphics.Rect: void <init>(int,int,int,int)>($i10, $i9, $i8, $i7);

        z1 = r1.<com.android.server.wm.nano.WindowManagerProtos$TaskSnapshotProto: boolean isRealSnapshot>;

        i20 = r1.<com.android.server.wm.nano.WindowManagerProtos$TaskSnapshotProto: int windowingMode>;

        i21 = r1.<com.android.server.wm.nano.WindowManagerProtos$TaskSnapshotProto: int systemUiVisibility>;

        z2 = r1.<com.android.server.wm.nano.WindowManagerProtos$TaskSnapshotProto: boolean isTranslucent>;

     label32:
        $r12 = new android.app.ActivityManager$TaskSnapshot;

        specialinvoke $r12.<android.app.ActivityManager$TaskSnapshot: void <init>(long,android.content.ComponentName,android.graphics.GraphicBuffer,android.graphics.ColorSpace,int,int,android.graphics.Point,android.graphics.Rect,boolean,boolean,int,int,boolean)>(l1, r2, r41, r44, i2, i3, r43, r45, z0, z1, i20, i21, z2);

     label33:
        return $r12;

     label34:
        $r30 := @caughtexception;

        goto label36;

     label35:
        $r25 := @caughtexception;

     label36:
        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to load task snapshot data for taskId=");

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", $r29);

        return null;

        catch java.io.IOException from label01 to label02 with label35;
        catch java.io.IOException from label03 to label04 with label35;
        catch java.io.IOException from label08 to label09 with label35;
        catch java.io.IOException from label09 to label10 with label35;
        catch java.io.IOException from label11 to label12 with label35;
        catch java.io.IOException from label13 to label14 with label35;
        catch java.io.IOException from label14 to label15 with label35;
        catch java.io.IOException from label16 to label17 with label35;
        catch java.io.IOException from label18 to label19 with label35;
        catch java.io.IOException from label20 to label21 with label35;
        catch java.io.IOException from label22 to label23 with label35;
        catch java.io.IOException from label24 to label25 with label35;
        catch java.io.IOException from label26 to label27 with label35;
        catch java.io.IOException from label28 to label29 with label35;
        catch java.io.IOException from label30 to label31 with label35;
        catch java.io.IOException from label31 to label32 with label35;
        catch java.io.IOException from label32 to label33 with label34;
    }

    public static void <clinit>()
    {
        <com.android.server.wm.TaskSnapshotLoader: java.lang.String TAG> = "WindowManager";

        return;
    }
}
