class com.android.server.wm.TaskSnapshotPersister$1 extends java.lang.Thread
{
    final com.android.server.wm.TaskSnapshotPersister this$0;

    void <init>(com.android.server.wm.TaskSnapshotPersister, java.lang.String)
    {
        com.android.server.wm.TaskSnapshotPersister$1 r0;
        com.android.server.wm.TaskSnapshotPersister r1;
        java.lang.String r2;

        r0 := @this: com.android.server.wm.TaskSnapshotPersister$1;

        r1 := @parameter0: com.android.server.wm.TaskSnapshotPersister;

        r2 := @parameter1: java.lang.String;

        r0.<com.android.server.wm.TaskSnapshotPersister$1: com.android.server.wm.TaskSnapshotPersister this$0> = r1;

        specialinvoke r0.<java.lang.Thread: void <init>(java.lang.String)>(r2);

        return;
    }

    public void run()
    {
        com.android.server.wm.TaskSnapshotPersister$1 r0;
        java.lang.Object r1, $r4, $r7, r20;
        boolean z1, $z4, $z5, $z6, z7;
        com.android.server.wm.TaskSnapshotPersister $r2, $r5, $r6, $r8, $r9, $r10, $r15, $r16, $r19, $r21;
        java.util.ArrayDeque $r3, $r11, $r22;
        java.lang.Throwable $r12, $r13, $r14;
        com.android.server.wm.TaskSnapshotPersister$WriteQueueItem r17, r18;

        r0 := @this: com.android.server.wm.TaskSnapshotPersister$1;

        staticinvoke <android.os.Process: void setThreadPriority(int)>(10);

     label01:
        $r15 = r0.<com.android.server.wm.TaskSnapshotPersister$1: com.android.server.wm.TaskSnapshotPersister this$0>;

        r1 = staticinvoke <com.android.server.wm.TaskSnapshotPersister: java.lang.Object access$100(com.android.server.wm.TaskSnapshotPersister)>($r15);

        entermonitor r1;

     label02:
        $r16 = r0.<com.android.server.wm.TaskSnapshotPersister$1: com.android.server.wm.TaskSnapshotPersister this$0>;

        $z6 = staticinvoke <com.android.server.wm.TaskSnapshotPersister: boolean access$200(com.android.server.wm.TaskSnapshotPersister)>($r16);

        if $z6 == 0 goto label04;

     label03:
        r17 = null;

        z7 = 0;

        goto label12;

     label04:
        $r2 = r0.<com.android.server.wm.TaskSnapshotPersister$1: com.android.server.wm.TaskSnapshotPersister this$0>;

        $r3 = staticinvoke <com.android.server.wm.TaskSnapshotPersister: java.util.ArrayDeque access$300(com.android.server.wm.TaskSnapshotPersister)>($r2);

        $r4 = virtualinvoke $r3.<java.util.ArrayDeque: java.lang.Object poll()>();

        r18 = (com.android.server.wm.TaskSnapshotPersister$WriteQueueItem) $r4;

     label05:
        z7 = 0;

        r17 = r18;

        if r18 == null goto label12;

     label06:
        $z5 = virtualinvoke r18.<com.android.server.wm.TaskSnapshotPersister$WriteQueueItem: boolean isReady()>();

        if $z5 == 0 goto label10;

     label07:
        z7 = 1;

     label08:
        virtualinvoke r18.<com.android.server.wm.TaskSnapshotPersister$WriteQueueItem: void onDequeuedLocked()>();

     label09:
        r17 = r18;

        goto label12;

     label10:
        $r10 = r0.<com.android.server.wm.TaskSnapshotPersister$1: com.android.server.wm.TaskSnapshotPersister this$0>;

        $r11 = staticinvoke <com.android.server.wm.TaskSnapshotPersister: java.util.ArrayDeque access$300(com.android.server.wm.TaskSnapshotPersister)>($r10);

        virtualinvoke $r11.<java.util.ArrayDeque: void addLast(java.lang.Object)>(r18);

     label11:
        r17 = r18;

        z7 = 0;

     label12:
        exitmonitor r1;

     label13:
        if r17 == null goto label15;

        if z7 == 0 goto label14;

        virtualinvoke r17.<com.android.server.wm.TaskSnapshotPersister$WriteQueueItem: void write()>();

     label14:
        staticinvoke <android.os.SystemClock: void sleep(long)>(100L);

     label15:
        $r19 = r0.<com.android.server.wm.TaskSnapshotPersister$1: com.android.server.wm.TaskSnapshotPersister this$0>;

        r20 = staticinvoke <com.android.server.wm.TaskSnapshotPersister: java.lang.Object access$100(com.android.server.wm.TaskSnapshotPersister)>($r19);

        entermonitor r20;

     label16:
        $r21 = r0.<com.android.server.wm.TaskSnapshotPersister$1: com.android.server.wm.TaskSnapshotPersister this$0>;

        $r22 = staticinvoke <com.android.server.wm.TaskSnapshotPersister: java.util.ArrayDeque access$300(com.android.server.wm.TaskSnapshotPersister)>($r21);

        z1 = virtualinvoke $r22.<java.util.ArrayDeque: boolean isEmpty()>();

     label17:
        if z1 != 0 goto label20;

     label18:
        $r9 = r0.<com.android.server.wm.TaskSnapshotPersister$1: com.android.server.wm.TaskSnapshotPersister this$0>;

        $z4 = staticinvoke <com.android.server.wm.TaskSnapshotPersister: boolean access$200(com.android.server.wm.TaskSnapshotPersister)>($r9);

        if $z4 != 0 goto label20;

        exitmonitor r20;

     label19:
        goto label01;

     label20:
        $r5 = r0.<com.android.server.wm.TaskSnapshotPersister$1: com.android.server.wm.TaskSnapshotPersister this$0>;

        staticinvoke <com.android.server.wm.TaskSnapshotPersister: boolean access$402(com.android.server.wm.TaskSnapshotPersister,boolean)>($r5, z1);

        $r6 = r0.<com.android.server.wm.TaskSnapshotPersister$1: com.android.server.wm.TaskSnapshotPersister this$0>;

        $r7 = staticinvoke <com.android.server.wm.TaskSnapshotPersister: java.lang.Object access$100(com.android.server.wm.TaskSnapshotPersister)>($r6);

        virtualinvoke $r7.<java.lang.Object: void wait()>();

        $r8 = r0.<com.android.server.wm.TaskSnapshotPersister$1: com.android.server.wm.TaskSnapshotPersister this$0>;

        staticinvoke <com.android.server.wm.TaskSnapshotPersister: boolean access$402(com.android.server.wm.TaskSnapshotPersister,boolean)>($r8, 0);

     label21:
        goto label23;

     label22:
        $r12 := @caughtexception;

     label23:
        exitmonitor r20;

     label24:
        goto label01;

     label25:
        $r13 := @caughtexception;

     label26:
        exitmonitor r20;

     label27:
        throw $r13;

     label28:
        $r14 := @caughtexception;

     label29:
        exitmonitor r1;

     label30:
        throw $r14;

        catch java.lang.Throwable from label02 to label03 with label28;
        catch java.lang.Throwable from label04 to label05 with label28;
        catch java.lang.Throwable from label06 to label07 with label28;
        catch java.lang.Throwable from label08 to label09 with label28;
        catch java.lang.Throwable from label10 to label11 with label28;
        catch java.lang.Throwable from label12 to label13 with label28;
        catch java.lang.Throwable from label16 to label17 with label25;
        catch java.lang.Throwable from label18 to label19 with label25;
        catch java.lang.InterruptedException from label20 to label21 with label22;
        catch java.lang.Throwable from label20 to label21 with label25;
        catch java.lang.Throwable from label23 to label24 with label25;
        catch java.lang.Throwable from label26 to label27 with label25;
        catch java.lang.Throwable from label29 to label30 with label28;
    }
}
