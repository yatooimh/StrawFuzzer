class com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem extends com.android.server.wm.TaskSnapshotPersister$WriteQueueItem
{
    private final android.app.ActivityManager$TaskSnapshot mSnapshot;
    private final int mTaskId;
    private final int mUserId;
    final com.android.server.wm.TaskSnapshotPersister this$0;

    void <init>(com.android.server.wm.TaskSnapshotPersister, int, int, android.app.ActivityManager$TaskSnapshot)
    {
        com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem r0;
        com.android.server.wm.TaskSnapshotPersister r1;
        int i0, i1;
        android.app.ActivityManager$TaskSnapshot r2;

        r0 := @this: com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem;

        r1 := @parameter0: com.android.server.wm.TaskSnapshotPersister;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.app.ActivityManager$TaskSnapshot;

        r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: com.android.server.wm.TaskSnapshotPersister this$0> = r1;

        specialinvoke r0.<com.android.server.wm.TaskSnapshotPersister$WriteQueueItem: void <init>(com.android.server.wm.TaskSnapshotPersister,com.android.server.wm.TaskSnapshotPersister$1)>(r1, null);

        r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: int mTaskId> = i0;

        r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: int mUserId> = i1;

        r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: android.app.ActivityManager$TaskSnapshot mSnapshot> = r2;

        return;
    }

    static int access$000(com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem)
    {
        com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem r0;
        int $i0;

        r0 := @parameter0: com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem;

        $i0 = r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: int mTaskId>;

        return $i0;
    }

    boolean isReady()
    {
        com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem r0;
        com.android.server.wm.TaskSnapshotPersister $r1;
        android.os.UserManagerInternal $r2;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem;

        $r1 = r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: com.android.server.wm.TaskSnapshotPersister this$0>;

        $r2 = staticinvoke <com.android.server.wm.TaskSnapshotPersister: android.os.UserManagerInternal access$700(com.android.server.wm.TaskSnapshotPersister)>($r1);

        $i0 = r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: int mUserId>;

        $z0 = virtualinvoke $r2.<android.os.UserManagerInternal: boolean isUserUnlocked(int)>($i0);

        return $z0;
    }

    void onDequeuedLocked()
    {
        com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem r0;
        com.android.server.wm.TaskSnapshotPersister $r1;
        java.util.ArrayDeque $r2;

        r0 := @this: com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem;

        $r1 = r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: com.android.server.wm.TaskSnapshotPersister this$0>;

        $r2 = staticinvoke <com.android.server.wm.TaskSnapshotPersister: java.util.ArrayDeque access$600(com.android.server.wm.TaskSnapshotPersister)>($r1);

        virtualinvoke $r2.<java.util.ArrayDeque: boolean remove(java.lang.Object)>(r0);

        return;
    }

    void onQueuedLocked()
    {
        com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem r0;
        com.android.server.wm.TaskSnapshotPersister $r1;
        java.util.ArrayDeque $r2;

        r0 := @this: com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem;

        $r1 = r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: com.android.server.wm.TaskSnapshotPersister this$0>;

        $r2 = staticinvoke <com.android.server.wm.TaskSnapshotPersister: java.util.ArrayDeque access$600(com.android.server.wm.TaskSnapshotPersister)>($r1);

        virtualinvoke $r2.<java.util.ArrayDeque: boolean offer(java.lang.Object)>(r0);

        return;
    }

    void write()
    {
        com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem r0;
        int $i0, $i1, $i2, $i3;
        com.android.server.wm.TaskSnapshotPersister $r2, $r3, $r6;
        boolean $z0, $z1, $z2, z3;
        java.lang.StringBuilder $r4;
        java.io.File $r7;
        java.lang.String $r9;

        r0 := @this: com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem;

        $r2 = r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: com.android.server.wm.TaskSnapshotPersister this$0>;

        $i0 = r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: int mUserId>;

        $z0 = staticinvoke <com.android.server.wm.TaskSnapshotPersister: boolean access$800(com.android.server.wm.TaskSnapshotPersister,int)>($r2, $i0);

        if $z0 != 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create snapshot directory for user dir=");

        $r6 = r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: com.android.server.wm.TaskSnapshotPersister this$0>;

        $i3 = r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: int mUserId>;

        $r7 = staticinvoke <com.android.server.wm.TaskSnapshotPersister: java.io.File access$900(com.android.server.wm.TaskSnapshotPersister,int)>($r6, $i3);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("WindowManager", $r9);

     label1:
        z3 = 0;

        $z1 = virtualinvoke r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: boolean writeProto()>();

        if $z1 != 0 goto label2;

        z3 = 1;

     label2:
        $z2 = virtualinvoke r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: boolean writeBuffer()>();

        if $z2 != 0 goto label3;

        z3 = 1;

     label3:
        if z3 == 0 goto label4;

        $r3 = r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: com.android.server.wm.TaskSnapshotPersister this$0>;

        $i2 = r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: int mTaskId>;

        $i1 = r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: int mUserId>;

        staticinvoke <com.android.server.wm.TaskSnapshotPersister: void access$1000(com.android.server.wm.TaskSnapshotPersister,int,int)>($r3, $i2, $i1);

     label4:
        return;
    }

    boolean writeBuffer()
    {
        com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem r0;
        android.graphics.Bitmap r1, r26, r29;
        android.app.ActivityManager$TaskSnapshot $r2, $r4;
        android.graphics.GraphicBuffer $r3;
        android.graphics.ColorSpace $r5;
        android.graphics.Bitmap$Config $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        com.android.server.wm.TaskSnapshotPersister $r7, $r9, $r10, $r11, $r12;
        android.graphics.Bitmap$CompressFormat $r8, $r13;
        boolean $z1;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        java.lang.Throwable $r14, $r20;
        java.lang.StringBuilder $r15, $r21;
        java.lang.String $r19, $r25;
        java.io.File r27, r30;
        java.io.FileOutputStream r28, r31;

        r0 := @this: com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem;

        $r2 = r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: android.app.ActivityManager$TaskSnapshot mSnapshot>;

        $r3 = virtualinvoke $r2.<android.app.ActivityManager$TaskSnapshot: android.graphics.GraphicBuffer getSnapshot()>();

        $r4 = r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: android.app.ActivityManager$TaskSnapshot mSnapshot>;

        $r5 = virtualinvoke $r4.<android.app.ActivityManager$TaskSnapshot: android.graphics.ColorSpace getColorSpace()>();

        r1 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap wrapHardwareBuffer(android.graphics.GraphicBuffer,android.graphics.ColorSpace)>($r3, $r5);

        if r1 != null goto label1;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("WindowManager", "Invalid task snapshot hw bitmap");

        return 0;

     label1:
        $r6 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r26 = virtualinvoke r1.<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap$Config,boolean)>($r6, 0);

        $r7 = r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: com.android.server.wm.TaskSnapshotPersister this$0>;

        $i1 = r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: int mTaskId>;

        $i0 = r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: int mUserId>;

        r27 = virtualinvoke $r7.<com.android.server.wm.TaskSnapshotPersister: java.io.File getHighResolutionBitmapFile(int,int)>($i1, $i0);

     label2:
        r28 = new java.io.FileOutputStream;

        specialinvoke r28.<java.io.FileOutputStream: void <init>(java.io.File)>(r27);

        $r8 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat JPEG>;

        virtualinvoke r26.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r8, 95, r28);

        virtualinvoke r28.<java.io.FileOutputStream: void close()>();

     label3:
        $r9 = r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: com.android.server.wm.TaskSnapshotPersister this$0>;

        $z1 = staticinvoke <com.android.server.wm.TaskSnapshotPersister: boolean access$1100(com.android.server.wm.TaskSnapshotPersister)>($r9);

        if $z1 != 0 goto label4;

        virtualinvoke r26.<android.graphics.Bitmap: void recycle()>();

        return 1;

     label4:
        $i2 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        $f0 = (float) $i2;

        $r10 = r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: com.android.server.wm.TaskSnapshotPersister this$0>;

        $f1 = staticinvoke <com.android.server.wm.TaskSnapshotPersister: float access$1200(com.android.server.wm.TaskSnapshotPersister)>($r10);

        $f2 = $f0 * $f1;

        $i3 = (int) $f2;

        $i4 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        $f3 = (float) $i4;

        $r11 = r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: com.android.server.wm.TaskSnapshotPersister this$0>;

        $f4 = staticinvoke <com.android.server.wm.TaskSnapshotPersister: float access$1200(com.android.server.wm.TaskSnapshotPersister)>($r11);

        $f5 = $f3 * $f4;

        $i5 = (int) $f5;

        r29 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>(r26, $i3, $i5, 1);

        virtualinvoke r26.<android.graphics.Bitmap: void recycle()>();

        $r12 = r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: com.android.server.wm.TaskSnapshotPersister this$0>;

        $i7 = r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: int mTaskId>;

        $i6 = r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: int mUserId>;

        r30 = virtualinvoke $r12.<com.android.server.wm.TaskSnapshotPersister: java.io.File getLowResolutionBitmapFile(int,int)>($i7, $i6);

     label5:
        r31 = new java.io.FileOutputStream;

        specialinvoke r31.<java.io.FileOutputStream: void <init>(java.io.File)>(r30);

        $r13 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat JPEG>;

        virtualinvoke r29.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r13, 95, r31);

        virtualinvoke r31.<java.io.FileOutputStream: void close()>();

     label6:
        virtualinvoke r29.<android.graphics.Bitmap: void recycle()>();

        return 1;

     label7:
        $r14 := @caughtexception;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to open ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r30);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for persisting.");

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", $r19, $r14);

        return 0;

     label8:
        $r20 := @caughtexception;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to open ");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r27);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for persisting.");

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", $r25, $r20);

        return 0;

        catch java.io.IOException from label2 to label3 with label8;
        catch java.io.IOException from label5 to label6 with label7;
    }

    boolean writeProto()
    {
        com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem r0;
        byte[] r1;
        java.io.File r2;
        com.android.server.wm.nano.WindowManagerProtos$TaskSnapshotProto $r4;
        android.app.ActivityManager$TaskSnapshot $r5, $r6, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r20, $r21, $r22, $r23, $r26;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12;
        android.graphics.Point $r8, $r10;
        android.graphics.Rect $r12, $r14, $r16, $r18;
        boolean $z0, $z1;
        android.content.ComponentName $r24;
        java.lang.String $r25, $r35;
        long $l10;
        com.android.server.wm.TaskSnapshotPersister $r27;
        android.util.AtomicFile $r28;
        java.lang.Throwable $r29;
        java.lang.StringBuilder $r30;
        java.io.FileOutputStream r37, r38;

        r0 := @this: com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem;

        $r4 = new com.android.server.wm.nano.WindowManagerProtos$TaskSnapshotProto;

        specialinvoke $r4.<com.android.server.wm.nano.WindowManagerProtos$TaskSnapshotProto: void <init>()>();

        $r5 = r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: android.app.ActivityManager$TaskSnapshot mSnapshot>;

        $i0 = virtualinvoke $r5.<android.app.ActivityManager$TaskSnapshot: int getOrientation()>();

        $r4.<com.android.server.wm.nano.WindowManagerProtos$TaskSnapshotProto: int orientation> = $i0;

        $r6 = r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: android.app.ActivityManager$TaskSnapshot mSnapshot>;

        $i1 = virtualinvoke $r6.<android.app.ActivityManager$TaskSnapshot: int getRotation()>();

        $r4.<com.android.server.wm.nano.WindowManagerProtos$TaskSnapshotProto: int rotation> = $i1;

        $r7 = r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: android.app.ActivityManager$TaskSnapshot mSnapshot>;

        $r8 = virtualinvoke $r7.<android.app.ActivityManager$TaskSnapshot: android.graphics.Point getTaskSize()>();

        $i2 = $r8.<android.graphics.Point: int x>;

        $r4.<com.android.server.wm.nano.WindowManagerProtos$TaskSnapshotProto: int taskWidth> = $i2;

        $r9 = r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: android.app.ActivityManager$TaskSnapshot mSnapshot>;

        $r10 = virtualinvoke $r9.<android.app.ActivityManager$TaskSnapshot: android.graphics.Point getTaskSize()>();

        $i3 = $r10.<android.graphics.Point: int y>;

        $r4.<com.android.server.wm.nano.WindowManagerProtos$TaskSnapshotProto: int taskHeight> = $i3;

        $r11 = r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: android.app.ActivityManager$TaskSnapshot mSnapshot>;

        $r12 = virtualinvoke $r11.<android.app.ActivityManager$TaskSnapshot: android.graphics.Rect getContentInsets()>();

        $i4 = $r12.<android.graphics.Rect: int left>;

        $r4.<com.android.server.wm.nano.WindowManagerProtos$TaskSnapshotProto: int insetLeft> = $i4;

        $r13 = r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: android.app.ActivityManager$TaskSnapshot mSnapshot>;

        $r14 = virtualinvoke $r13.<android.app.ActivityManager$TaskSnapshot: android.graphics.Rect getContentInsets()>();

        $i5 = $r14.<android.graphics.Rect: int top>;

        $r4.<com.android.server.wm.nano.WindowManagerProtos$TaskSnapshotProto: int insetTop> = $i5;

        $r15 = r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: android.app.ActivityManager$TaskSnapshot mSnapshot>;

        $r16 = virtualinvoke $r15.<android.app.ActivityManager$TaskSnapshot: android.graphics.Rect getContentInsets()>();

        $i6 = $r16.<android.graphics.Rect: int right>;

        $r4.<com.android.server.wm.nano.WindowManagerProtos$TaskSnapshotProto: int insetRight> = $i6;

        $r17 = r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: android.app.ActivityManager$TaskSnapshot mSnapshot>;

        $r18 = virtualinvoke $r17.<android.app.ActivityManager$TaskSnapshot: android.graphics.Rect getContentInsets()>();

        $i7 = $r18.<android.graphics.Rect: int bottom>;

        $r4.<com.android.server.wm.nano.WindowManagerProtos$TaskSnapshotProto: int insetBottom> = $i7;

        $r19 = r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: android.app.ActivityManager$TaskSnapshot mSnapshot>;

        $z0 = virtualinvoke $r19.<android.app.ActivityManager$TaskSnapshot: boolean isRealSnapshot()>();

        $r4.<com.android.server.wm.nano.WindowManagerProtos$TaskSnapshotProto: boolean isRealSnapshot> = $z0;

        $r20 = r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: android.app.ActivityManager$TaskSnapshot mSnapshot>;

        $i8 = virtualinvoke $r20.<android.app.ActivityManager$TaskSnapshot: int getWindowingMode()>();

        $r4.<com.android.server.wm.nano.WindowManagerProtos$TaskSnapshotProto: int windowingMode> = $i8;

        $r21 = r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: android.app.ActivityManager$TaskSnapshot mSnapshot>;

        $i9 = virtualinvoke $r21.<android.app.ActivityManager$TaskSnapshot: int getSystemUiVisibility()>();

        $r4.<com.android.server.wm.nano.WindowManagerProtos$TaskSnapshotProto: int systemUiVisibility> = $i9;

        $r22 = r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: android.app.ActivityManager$TaskSnapshot mSnapshot>;

        $z1 = virtualinvoke $r22.<android.app.ActivityManager$TaskSnapshot: boolean isTranslucent()>();

        $r4.<com.android.server.wm.nano.WindowManagerProtos$TaskSnapshotProto: boolean isTranslucent> = $z1;

        $r23 = r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: android.app.ActivityManager$TaskSnapshot mSnapshot>;

        $r24 = virtualinvoke $r23.<android.app.ActivityManager$TaskSnapshot: android.content.ComponentName getTopActivityComponent()>();

        $r25 = virtualinvoke $r24.<android.content.ComponentName: java.lang.String flattenToString()>();

        $r4.<com.android.server.wm.nano.WindowManagerProtos$TaskSnapshotProto: java.lang.String topActivityComponent> = $r25;

        $r26 = r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: android.app.ActivityManager$TaskSnapshot mSnapshot>;

        $l10 = virtualinvoke $r26.<android.app.ActivityManager$TaskSnapshot: long getId()>();

        $r4.<com.android.server.wm.nano.WindowManagerProtos$TaskSnapshotProto: long id> = $l10;

        r1 = staticinvoke <com.android.server.wm.nano.WindowManagerProtos$TaskSnapshotProto: byte[] toByteArray(com.android.framework.protobuf.nano.MessageNano)>($r4);

        $r27 = r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: com.android.server.wm.TaskSnapshotPersister this$0>;

        $i12 = r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: int mTaskId>;

        $i11 = r0.<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: int mUserId>;

        r2 = virtualinvoke $r27.<com.android.server.wm.TaskSnapshotPersister: java.io.File getProtoFile(int,int)>($i12, $i11);

        $r28 = new android.util.AtomicFile;

        specialinvoke $r28.<android.util.AtomicFile: void <init>(java.io.File)>(r2);

        r37 = null;

     label1:
        r38 = virtualinvoke $r28.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

     label2:
        r37 = r38;

     label3:
        virtualinvoke r38.<java.io.FileOutputStream: void write(byte[])>(r1);

     label4:
        r37 = r38;

     label5:
        virtualinvoke $r28.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r38);

     label6:
        return 1;

     label7:
        $r29 := @caughtexception;

        virtualinvoke $r28.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r37);

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to open ");

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for persisting. ");

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);

        $r35 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("WindowManager", $r35);

        return 0;

        catch java.io.IOException from label1 to label2 with label7;
        catch java.io.IOException from label3 to label4 with label7;
        catch java.io.IOException from label5 to label6 with label7;
    }
}
