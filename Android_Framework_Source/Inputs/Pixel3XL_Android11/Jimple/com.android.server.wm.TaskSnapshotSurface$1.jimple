class com.android.server.wm.TaskSnapshotSurface$1 extends android.os.Handler
{

    void <init>(android.os.Looper)
    {
        com.android.server.wm.TaskSnapshotSurface$1 r0;
        android.os.Looper r1;

        r0 := @this: com.android.server.wm.TaskSnapshotSurface$1;

        r1 := @parameter0: android.os.Looper;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r1);

        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.server.wm.TaskSnapshotSurface$1 r0;
        boolean z0;
        int $i0;
        java.lang.Object $r1;
        com.android.server.wm.WindowManagerService $r2;
        java.lang.Throwable $r3;
        android.os.Message r4;
        com.android.server.wm.TaskSnapshotSurface r5;
        com.android.server.wm.WindowManagerGlobalLock r6;

        r0 := @this: com.android.server.wm.TaskSnapshotSurface$1;

        r4 := @parameter0: android.os.Message;

        $i0 = r4.<android.os.Message: int what>;

        if $i0 == 0 goto label1;

        goto label4;

     label1:
        $r1 = r4.<android.os.Message: java.lang.Object obj>;

        r5 = (com.android.server.wm.TaskSnapshotSurface) $r1;

        $r2 = staticinvoke <com.android.server.wm.TaskSnapshotSurface: com.android.server.wm.WindowManagerService access$000(com.android.server.wm.TaskSnapshotSurface)>(r5);

        r6 = $r2.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r6;

     label2:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        z0 = staticinvoke <com.android.server.wm.TaskSnapshotSurface: boolean access$100(com.android.server.wm.TaskSnapshotSurface)>(r5);

        exitmonitor r6;

     label3:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        if z0 == 0 goto label4;

        staticinvoke <com.android.server.wm.TaskSnapshotSurface: void access$200(com.android.server.wm.TaskSnapshotSurface)>(r5);

     label4:
        return;

     label5:
        $r3 := @caughtexception;

     label6:
        exitmonitor r6;

     label7:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r3;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }
}
