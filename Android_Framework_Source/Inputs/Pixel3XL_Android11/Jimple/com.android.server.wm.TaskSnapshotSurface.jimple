class com.android.server.wm.TaskSnapshotSurface extends java.lang.Object implements com.android.server.policy.WindowManagerPolicy$StartingSurface
{
    private static final int FLAG_INHERIT_EXCLUDES;
    private static final int MSG_REPORT_DRAW;
    private static final int PRIVATE_FLAG_INHERITS;
    private static final long SIZE_MISMATCH_MINIMUM_TIME_MS;
    private static final java.lang.String TAG;
    private static final java.lang.String TITLE_FORMAT;
    private static android.os.Handler sHandler;
    private static final android.view.SurfaceControl sTmpSurfaceControl;
    private static final android.graphics.Point sTmpSurfaceSize;
    private final android.graphics.Paint mBackgroundPaint;
    private android.view.SurfaceControl mChildSurfaceControl;
    private final android.graphics.Rect mFrame;
    private final android.os.Handler mHandler;
    private boolean mHasDrawn;
    private final int mOrientationOnCreation;
    private final com.android.server.wm.WindowManagerService mService;
    private final android.view.IWindowSession mSession;
    private long mShownTime;
    private boolean mSizeMismatch;
    private android.app.ActivityManager$TaskSnapshot mSnapshot;
    private final android.graphics.Matrix mSnapshotMatrix;
    private final int mStatusBarColor;
    private final android.view.Surface mSurface;
    private android.view.SurfaceControl mSurfaceControl;
    final com.android.server.wm.TaskSnapshotSurface$SystemBarBackgroundPainter mSystemBarBackgroundPainter;
    private final android.graphics.Rect mSystemBarInsets;
    private final android.graphics.Rect mTaskBounds;
    private final java.lang.CharSequence mTitle;
    private final android.graphics.RectF mTmpDstFrame;
    private final float[] mTmpFloat9;
    private final android.graphics.RectF mTmpSnapshotSize;
    private final android.view.SurfaceControl$Transaction mTransaction;
    private final com.android.server.wm.TaskSnapshotSurface$Window mWindow;

    static void <clinit>()
    {
        android.graphics.Point $r0;
        android.view.SurfaceControl $r1;
        com.android.server.wm.TaskSnapshotSurface$1 $r2;
        android.os.Looper $r3;

        <com.android.server.wm.TaskSnapshotSurface: java.lang.String TITLE_FORMAT> = "SnapshotStartingWindow for taskId=%s";

        <com.android.server.wm.TaskSnapshotSurface: java.lang.String TAG> = "WindowManager";

        <com.android.server.wm.TaskSnapshotSurface: long SIZE_MISMATCH_MINIMUM_TIME_MS> = 450L;

        <com.android.server.wm.TaskSnapshotSurface: int PRIVATE_FLAG_INHERITS> = 131072;

        <com.android.server.wm.TaskSnapshotSurface: int MSG_REPORT_DRAW> = 0;

        <com.android.server.wm.TaskSnapshotSurface: int FLAG_INHERIT_EXCLUDES> = 830922808;

        $r0 = new android.graphics.Point;

        specialinvoke $r0.<android.graphics.Point: void <init>()>();

        <com.android.server.wm.TaskSnapshotSurface: android.graphics.Point sTmpSurfaceSize> = $r0;

        $r1 = new android.view.SurfaceControl;

        specialinvoke $r1.<android.view.SurfaceControl: void <init>()>();

        <com.android.server.wm.TaskSnapshotSurface: android.view.SurfaceControl sTmpSurfaceControl> = $r1;

        $r2 = new com.android.server.wm.TaskSnapshotSurface$1;

        $r3 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r2.<com.android.server.wm.TaskSnapshotSurface$1: void <init>(android.os.Looper)>($r3);

        <com.android.server.wm.TaskSnapshotSurface: android.os.Handler sHandler> = $r2;

        return;
    }

    void <init>(com.android.server.wm.WindowManagerService, com.android.server.wm.TaskSnapshotSurface$Window, android.view.SurfaceControl, android.app.ActivityManager$TaskSnapshot, java.lang.CharSequence, android.app.ActivityManager$TaskDescription, int, int, int, android.graphics.Rect, int, android.view.InsetsState)
    {
        com.android.server.wm.TaskSnapshotSurface r0;
        com.android.server.wm.TaskSnapshotSurface$Window r1;
        android.view.SurfaceControl r2;
        android.app.ActivityManager$TaskSnapshot r3;
        java.lang.CharSequence r4;
        android.app.ActivityManager$TaskDescription r5;
        int i0, i1, i2, i3, $i4, i5;
        android.graphics.Rect r6, $r8, $r9;
        android.view.InsetsState r7;
        android.graphics.RectF $r10, $r11;
        android.graphics.Paint $r12, r29;
        android.graphics.Matrix $r13;
        float[] $r14;
        java.util.function.Supplier $r15, $r25;
        java.lang.Object $r16, $r26;
        android.view.Surface $r17;
        android.os.Handler $r18;
        com.android.server.wm.WindowManagerService $r19, $r24, r28;
        com.android.server.wm.WindowManagerService$H $r20;
        android.os.Looper $r21;
        android.view.IWindowSession $r22;
        com.android.server.wm.TaskSnapshotSurface$SystemBarBackgroundPainter $r23;
        android.view.SurfaceControl$Transaction $r27;

        r0 := @this: com.android.server.wm.TaskSnapshotSurface;

        r28 := @parameter0: com.android.server.wm.WindowManagerService;

        r1 := @parameter1: com.android.server.wm.TaskSnapshotSurface$Window;

        r2 := @parameter2: android.view.SurfaceControl;

        r3 := @parameter3: android.app.ActivityManager$TaskSnapshot;

        r4 := @parameter4: java.lang.CharSequence;

        r5 := @parameter5: android.app.ActivityManager$TaskDescription;

        i0 := @parameter6: int;

        i1 := @parameter7: int;

        i2 := @parameter8: int;

        r6 := @parameter9: android.graphics.Rect;

        i3 := @parameter10: int;

        r7 := @parameter11: android.view.InsetsState;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r8 = new android.graphics.Rect;

        specialinvoke $r8.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.TaskSnapshotSurface: android.graphics.Rect mFrame> = $r8;

        $r9 = new android.graphics.Rect;

        specialinvoke $r9.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.TaskSnapshotSurface: android.graphics.Rect mSystemBarInsets> = $r9;

        $r10 = new android.graphics.RectF;

        specialinvoke $r10.<android.graphics.RectF: void <init>()>();

        r0.<com.android.server.wm.TaskSnapshotSurface: android.graphics.RectF mTmpSnapshotSize> = $r10;

        $r11 = new android.graphics.RectF;

        specialinvoke $r11.<android.graphics.RectF: void <init>()>();

        r0.<com.android.server.wm.TaskSnapshotSurface: android.graphics.RectF mTmpDstFrame> = $r11;

        $r12 = new android.graphics.Paint;

        specialinvoke $r12.<android.graphics.Paint: void <init>()>();

        r0.<com.android.server.wm.TaskSnapshotSurface: android.graphics.Paint mBackgroundPaint> = $r12;

        $r13 = new android.graphics.Matrix;

        specialinvoke $r13.<android.graphics.Matrix: void <init>()>();

        r0.<com.android.server.wm.TaskSnapshotSurface: android.graphics.Matrix mSnapshotMatrix> = $r13;

        $r14 = newarray (float)[9];

        r0.<com.android.server.wm.TaskSnapshotSurface: float[] mTmpFloat9> = $r14;

        r0.<com.android.server.wm.TaskSnapshotSurface: com.android.server.wm.WindowManagerService mService> = r28;

        $r15 = r28.<com.android.server.wm.WindowManagerService: java.util.function.Supplier mSurfaceFactory>;

        $r16 = interfaceinvoke $r15.<java.util.function.Supplier: java.lang.Object get()>();

        $r17 = (android.view.Surface) $r16;

        r0.<com.android.server.wm.TaskSnapshotSurface: android.view.Surface mSurface> = $r17;

        $r18 = new android.os.Handler;

        $r19 = r0.<com.android.server.wm.TaskSnapshotSurface: com.android.server.wm.WindowManagerService mService>;

        $r20 = $r19.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerService$H mH>;

        $r21 = virtualinvoke $r20.<com.android.server.wm.WindowManagerService$H: android.os.Looper getLooper()>();

        specialinvoke $r18.<android.os.Handler: void <init>(android.os.Looper)>($r21);

        r0.<com.android.server.wm.TaskSnapshotSurface: android.os.Handler mHandler> = $r18;

        $r22 = staticinvoke <android.view.WindowManagerGlobal: android.view.IWindowSession getWindowSession()>();

        r0.<com.android.server.wm.TaskSnapshotSurface: android.view.IWindowSession mSession> = $r22;

        r0.<com.android.server.wm.TaskSnapshotSurface: com.android.server.wm.TaskSnapshotSurface$Window mWindow> = r1;

        r0.<com.android.server.wm.TaskSnapshotSurface: android.view.SurfaceControl mSurfaceControl> = r2;

        r0.<com.android.server.wm.TaskSnapshotSurface: android.app.ActivityManager$TaskSnapshot mSnapshot> = r3;

        r0.<com.android.server.wm.TaskSnapshotSurface: java.lang.CharSequence mTitle> = r4;

        i5 = virtualinvoke r5.<android.app.ActivityManager$TaskDescription: int getBackgroundColor()>();

        r29 = r0.<com.android.server.wm.TaskSnapshotSurface: android.graphics.Paint mBackgroundPaint>;

        if i5 == 0 goto label1;

        goto label2;

     label1:
        i5 = -1;

     label2:
        virtualinvoke r29.<android.graphics.Paint: void setColor(int)>(i5);

        r0.<com.android.server.wm.TaskSnapshotSurface: android.graphics.Rect mTaskBounds> = r6;

        $r23 = new com.android.server.wm.TaskSnapshotSurface$SystemBarBackgroundPainter;

        specialinvoke $r23.<com.android.server.wm.TaskSnapshotSurface$SystemBarBackgroundPainter: void <init>(int,int,int,android.app.ActivityManager$TaskDescription,float,android.view.InsetsState)>(i1, i2, i0, r5, 1.0F, r7);

        r0.<com.android.server.wm.TaskSnapshotSurface: com.android.server.wm.TaskSnapshotSurface$SystemBarBackgroundPainter mSystemBarBackgroundPainter> = $r23;

        $i4 = virtualinvoke r5.<android.app.ActivityManager$TaskDescription: int getStatusBarColor()>();

        r0.<com.android.server.wm.TaskSnapshotSurface: int mStatusBarColor> = $i4;

        r0.<com.android.server.wm.TaskSnapshotSurface: int mOrientationOnCreation> = i3;

        $r24 = r0.<com.android.server.wm.TaskSnapshotSurface: com.android.server.wm.WindowManagerService mService>;

        $r25 = $r24.<com.android.server.wm.WindowManagerService: java.util.function.Supplier mTransactionFactory>;

        $r26 = interfaceinvoke $r25.<java.util.function.Supplier: java.lang.Object get()>();

        $r27 = (android.view.SurfaceControl$Transaction) $r26;

        r0.<com.android.server.wm.TaskSnapshotSurface: android.view.SurfaceControl$Transaction mTransaction> = $r27;

        return;
    }

    static com.android.server.wm.WindowManagerService access$000(com.android.server.wm.TaskSnapshotSurface)
    {
        com.android.server.wm.TaskSnapshotSurface r0;
        com.android.server.wm.WindowManagerService $r1;

        r0 := @parameter0: com.android.server.wm.TaskSnapshotSurface;

        $r1 = r0.<com.android.server.wm.TaskSnapshotSurface: com.android.server.wm.WindowManagerService mService>;

        return $r1;
    }

    static boolean access$100(com.android.server.wm.TaskSnapshotSurface)
    {
        com.android.server.wm.TaskSnapshotSurface r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.wm.TaskSnapshotSurface;

        $z0 = r0.<com.android.server.wm.TaskSnapshotSurface: boolean mHasDrawn>;

        return $z0;
    }

    static void access$200(com.android.server.wm.TaskSnapshotSurface)
    {
        com.android.server.wm.TaskSnapshotSurface r0;

        r0 := @parameter0: com.android.server.wm.TaskSnapshotSurface;

        specialinvoke r0.<com.android.server.wm.TaskSnapshotSurface: void reportDrawn()>();

        return;
    }

    static int access$300(com.android.server.wm.TaskSnapshotSurface)
    {
        com.android.server.wm.TaskSnapshotSurface r0;
        int $i0;

        r0 := @parameter0: com.android.server.wm.TaskSnapshotSurface;

        $i0 = r0.<com.android.server.wm.TaskSnapshotSurface: int mOrientationOnCreation>;

        return $i0;
    }

    static android.os.Handler access$400()
    {
        android.os.Handler $r0;

        $r0 = <com.android.server.wm.TaskSnapshotSurface: android.os.Handler sHandler>;

        return $r0;
    }

    static com.android.server.wm.TaskSnapshotSurface create(com.android.server.wm.WindowManagerService, com.android.server.wm.ActivityRecord, android.app.ActivityManager$TaskSnapshot)
    {
        android.view.IWindowSession r2;
        android.view.InsetsSourceControl[] r10;
        com.android.server.wm.WindowManagerGlobalLock r13;
        com.android.server.wm.WindowState r15, r75;
        int i0, i1, i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i20, i21, i22, i23, i24, i25, i26;
        android.view.WindowManager$LayoutParams $r16, $r32, $r34, $r35, $r38, $r41, r81;
        com.android.server.wm.TaskSnapshotSurface$Window $r17;
        android.view.SurfaceControl $r18, r93;
        android.graphics.Rect $r19, $r21, $r22, $r23, r83, $r96;
        android.view.DisplayCutout$ParcelableWrapper $r20;
        android.view.InsetsState $r24, $r49, $r50, r85;
        android.util.MergedConfiguration $r25;
        android.app.ActivityManager$TaskDescription $r26, r82;
        com.android.server.wm.Task $r27, r76;
        java.lang.String $r30, $r33, $r46, $r54, $r58, $r61;
        android.app.WindowConfiguration $r31;
        float $f0;
        android.graphics.GraphicBuffer $r36;
        android.os.IBinder $r37;
        android.view.InsetsFlags $r39, $r40, $r42, $r43;
        boolean $z0;
        java.lang.Object[] $r44;
        java.lang.Integer $r45;
        android.content.res.Configuration $r47;
        com.android.server.wm.DisplayContent $r48, $r51, $r55;
        java.lang.Throwable $r62, $r63, $r64, $r66, $r69, $r71, r78;
        android.os.RemoteException $r65, $r67, $r68, $r70;
        com.android.server.wm.WindowManagerService r72;
        com.android.server.wm.ActivityRecord r73, r79;
        android.app.ActivityManager$TaskSnapshot r74;
        java.lang.StringBuilder r77, r80, r86, r97;
        com.android.server.wm.InsetsPolicy r84;
        com.android.server.wm.TaskSnapshotSurface $r89;
        java.lang.CharSequence $r90;
        android.graphics.Point r92;

        r72 := @parameter0: com.android.server.wm.WindowManagerService;

        r73 := @parameter1: com.android.server.wm.ActivityRecord;

        r74 := @parameter2: android.app.ActivityManager$TaskSnapshot;

        $r16 = new android.view.WindowManager$LayoutParams;

        specialinvoke $r16.<android.view.WindowManager$LayoutParams: void <init>()>();

        $r17 = new com.android.server.wm.TaskSnapshotSurface$Window;

        specialinvoke $r17.<com.android.server.wm.TaskSnapshotSurface$Window: void <init>()>();

        r2 = staticinvoke <android.view.WindowManagerGlobal: android.view.IWindowSession getWindowSession()>();

        virtualinvoke $r17.<com.android.server.wm.TaskSnapshotSurface$Window: void setSession(android.view.IWindowSession)>(r2);

        $r18 = new android.view.SurfaceControl;

        specialinvoke $r18.<android.view.SurfaceControl: void <init>()>();

        $r19 = new android.graphics.Rect;

        specialinvoke $r19.<android.graphics.Rect: void <init>()>();

        $r20 = new android.view.DisplayCutout$ParcelableWrapper;

        specialinvoke $r20.<android.view.DisplayCutout$ParcelableWrapper: void <init>()>();

        $r21 = new android.graphics.Rect;

        specialinvoke $r21.<android.graphics.Rect: void <init>()>();

        $r22 = new android.graphics.Rect;

        specialinvoke $r22.<android.graphics.Rect: void <init>()>();

        $r23 = new android.graphics.Rect;

        specialinvoke $r23.<android.graphics.Rect: void <init>()>();

        $r24 = new android.view.InsetsState;

        specialinvoke $r24.<android.view.InsetsState: void <init>()>();

        r10 = newarray (android.view.InsetsSourceControl)[0];

        $r25 = new android.util.MergedConfiguration;

        specialinvoke $r25.<android.util.MergedConfiguration: void <init>()>();

        $r26 = new android.app.ActivityManager$TaskDescription;

        specialinvoke $r26.<android.app.ActivityManager$TaskDescription: void <init>()>();

        virtualinvoke $r26.<android.app.ActivityManager$TaskDescription: void setBackgroundColor(int)>(-1);

        r13 = r72.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r13;

     label01:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        r75 = virtualinvoke r73.<com.android.server.wm.ActivityRecord: com.android.server.wm.WindowState findMainWindow()>();

        r76 = virtualinvoke r73.<com.android.server.wm.ActivityRecord: com.android.server.wm.Task getTask()>();

     label02:
        if r76 != null goto label06;

     label03:
        r77 = new java.lang.StringBuilder;

        specialinvoke r77.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TaskSnapshotSurface.create: Failed to find task for activity=");

        virtualinvoke r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r73);

        $r61 = virtualinvoke r77.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", $r61);

        exitmonitor r13;

     label04:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return null;

     label05:
        $r71 := @caughtexception;

        r78 = $r71;

        goto label42;

     label06:
        $r27 = virtualinvoke r73.<com.android.server.wm.ActivityRecord: com.android.server.wm.Task getTask()>();

        r79 = virtualinvoke $r27.<com.android.server.wm.Task: com.android.server.wm.ActivityRecord getTopFullscreenActivity()>();

     label07:
        if r79 != null goto label13;

     label08:
        r80 = new java.lang.StringBuilder;

        specialinvoke r80.<java.lang.StringBuilder: void <init>()>();

     label09:
        virtualinvoke r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TaskSnapshotSurface.create: Failed to find top fullscreen for task=");

        virtualinvoke r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r76);

        $r58 = virtualinvoke r80.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", $r58);

        exitmonitor r13;

     label10:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return null;

     label11:
        $r64 := @caughtexception;

        r78 = $r64;

        goto label42;

     label12:
        $r62 := @caughtexception;

        r78 = $r62;

        goto label42;

     label13:
        r15 = virtualinvoke r79.<com.android.server.wm.ActivityRecord: com.android.server.wm.WindowState getTopFullscreenOpaqueWindow()>();

     label14:
        if r75 == null goto label38;

        if r15 != null goto label15;

        goto label38;

     label15:
        $r31 = virtualinvoke r79.<com.android.server.wm.ActivityRecord: android.app.WindowConfiguration getWindowConfiguration()>();

        i20 = virtualinvoke $r31.<android.app.WindowConfiguration: int getRotation()>();

        i21 = virtualinvoke r74.<android.app.ActivityManager$TaskSnapshot: int getRotation()>();

     label16:
        if i20 == i21 goto label18;

     label17:
        $r55 = r73.<com.android.server.wm.ActivityRecord: com.android.server.wm.DisplayContent mDisplayContent>;

        virtualinvoke $r55.<com.android.server.wm.DisplayContent: boolean handleTopActivityLaunchingInDifferentOrientation(com.android.server.wm.ActivityRecord,boolean)>(r79, 0);

     label18:
        i22 = virtualinvoke r15.<com.android.server.wm.WindowState: int getSystemUiVisibility()>();

        r81 = r15.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        i0 = r81.<android.view.WindowManager$LayoutParams: int flags>;

        i1 = r81.<android.view.WindowManager$LayoutParams: int privateFlags>;

        $r32 = virtualinvoke r75.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams getAttrs()>();

        $r33 = $r32.<android.view.WindowManager$LayoutParams: java.lang.String packageName>;

        $r16.<android.view.WindowManager$LayoutParams: java.lang.String packageName> = $r33;

        $r34 = virtualinvoke r75.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams getAttrs()>();

        $i4 = $r34.<android.view.WindowManager$LayoutParams: int windowAnimations>;

        $r16.<android.view.WindowManager$LayoutParams: int windowAnimations> = $i4;

        $r35 = virtualinvoke r75.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams getAttrs()>();

        $f0 = $r35.<android.view.WindowManager$LayoutParams: float dimAmount>;

        $r16.<android.view.WindowManager$LayoutParams: float dimAmount> = $f0;

        $r16.<android.view.WindowManager$LayoutParams: int type> = 3;

        $r36 = virtualinvoke r74.<android.app.ActivityManager$TaskSnapshot: android.graphics.GraphicBuffer getSnapshot()>();

        $i5 = virtualinvoke $r36.<android.graphics.GraphicBuffer: int getFormat()>();

        $r16.<android.view.WindowManager$LayoutParams: int format> = $i5;

        $i6 = i0 & -830922809;

        $i7 = $i6 | 8;

        $i8 = $i7 | 16;

        $r16.<android.view.WindowManager$LayoutParams: int flags> = $i8;

        $i9 = i1 & 131072;

        $r16.<android.view.WindowManager$LayoutParams: int privateFlags> = $i9;

        $r37 = r73.<com.android.server.wm.ActivityRecord: android.os.IBinder token>;

        $r16.<android.view.WindowManager$LayoutParams: android.os.IBinder token> = $r37;

        $r16.<android.view.WindowManager$LayoutParams: int width> = -1;

        $r16.<android.view.WindowManager$LayoutParams: int height> = -1;

        $r16.<android.view.WindowManager$LayoutParams: int systemUiVisibility> = i22;

        $r40 = $r16.<android.view.WindowManager$LayoutParams: android.view.InsetsFlags insetsFlags>;

        $r38 = r15.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $r39 = $r38.<android.view.WindowManager$LayoutParams: android.view.InsetsFlags insetsFlags>;

        $i10 = $r39.<android.view.InsetsFlags: int behavior>;

        $r40.<android.view.InsetsFlags: int behavior> = $i10;

        $r43 = $r16.<android.view.WindowManager$LayoutParams: android.view.InsetsFlags insetsFlags>;

        $r41 = r15.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $r42 = $r41.<android.view.WindowManager$LayoutParams: android.view.InsetsFlags insetsFlags>;

        $i11 = $r42.<android.view.InsetsFlags: int appearance>;

        $r43.<android.view.InsetsFlags: int appearance> = $i11;

        $i12 = r81.<android.view.WindowManager$LayoutParams: int layoutInDisplayCutoutMode>;

        $r16.<android.view.WindowManager$LayoutParams: int layoutInDisplayCutoutMode> = $i12;

        $i13 = virtualinvoke r81.<android.view.WindowManager$LayoutParams: int getFitInsetsTypes()>();

        virtualinvoke $r16.<android.view.WindowManager$LayoutParams: void setFitInsetsTypes(int)>($i13);

        $i14 = virtualinvoke r81.<android.view.WindowManager$LayoutParams: int getFitInsetsSides()>();

        virtualinvoke $r16.<android.view.WindowManager$LayoutParams: void setFitInsetsSides(int)>($i14);

        $z0 = virtualinvoke r81.<android.view.WindowManager$LayoutParams: boolean isFitInsetsIgnoringVisibility()>();

        virtualinvoke $r16.<android.view.WindowManager$LayoutParams: void setFitInsetsIgnoringVisibility(boolean)>($z0);

        $r44 = newarray (java.lang.Object)[1];

        $i15 = r76.<com.android.server.wm.Task: int mTaskId>;

        $r45 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i15);

        $r44[0] = $r45;

        $r46 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("SnapshotStartingWindow for taskId=%s", $r44);

        virtualinvoke $r16.<android.view.WindowManager$LayoutParams: void setTitle(java.lang.CharSequence)>($r46);

        r82 = virtualinvoke r76.<com.android.server.wm.Task: android.app.ActivityManager$TaskDescription getTaskDescription()>();

     label19:
        if r82 == null goto label21;

     label20:
        virtualinvoke $r26.<android.app.ActivityManager$TaskDescription: void copyFromPreserveHiddenFields(android.app.ActivityManager$TaskDescription)>(r82);

     label21:
        r83 = new android.graphics.Rect;

        specialinvoke r83.<android.graphics.Rect: void <init>()>();

        virtualinvoke r76.<com.android.server.wm.Task: void getBounds(android.graphics.Rect)>(r83);

        $r47 = virtualinvoke r15.<com.android.server.wm.WindowState: android.content.res.Configuration getConfiguration()>();

        i23 = $r47.<android.content.res.Configuration: int orientation>;

        $r48 = virtualinvoke r15.<com.android.server.wm.WindowState: com.android.server.wm.DisplayContent getDisplayContent()>();

        r84 = virtualinvoke $r48.<com.android.server.wm.DisplayContent: com.android.server.wm.InsetsPolicy getInsetsPolicy()>();

        r85 = new android.view.InsetsState;

        $r49 = virtualinvoke r84.<com.android.server.wm.InsetsPolicy: android.view.InsetsState getInsetsForDispatch(com.android.server.wm.WindowState)>(r15);

        specialinvoke r85.<android.view.InsetsState: void <init>(android.view.InsetsState)>($r49);

        $r50 = virtualinvoke r15.<com.android.server.wm.WindowState: android.view.InsetsState getRequestedInsetsState()>();

        staticinvoke <com.android.server.wm.TaskSnapshotController: void mergeInsetsSources(android.view.InsetsState,android.view.InsetsState)>(r85, $r50);

        exitmonitor r13;

     label22:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

     label23:
        i24 = $r17.<com.android.server.wm.TaskSnapshotSurface$Window: int mSeq>;

        $r51 = virtualinvoke r73.<com.android.server.wm.ActivityRecord: com.android.server.wm.DisplayContent getDisplayContent()>();

        i2 = virtualinvoke $r51.<com.android.server.wm.DisplayContent: int getDisplayId()>();

     label24:
        i25 = interfaceinvoke r2.<android.view.IWindowSession: int addToDisplay(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.view.DisplayCutout$ParcelableWrapper,android.view.InputChannel,android.view.InsetsState,android.view.InsetsSourceControl[])>($r17, i24, $r16, 8, i2, $r21, $r19, $r19, $r20, null, $r24, r10);

     label25:
        if i25 >= 0 goto label28;

     label26:
        r86 = new java.lang.StringBuilder;

        specialinvoke r86.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to add snapshot starting window res=");

        virtualinvoke r86.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i25);

        $r54 = virtualinvoke r86.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", $r54);

     label27:
        return null;

     label28:
        goto label31;

     label29:
        $r65 := @caughtexception;

        goto label31;

     label30:
        $r67 := @caughtexception;

     label31:
        $r89 = new com.android.server.wm.TaskSnapshotSurface;

        $r90 = virtualinvoke $r16.<android.view.WindowManager$LayoutParams: java.lang.CharSequence getTitle()>();

        specialinvoke $r89.<com.android.server.wm.TaskSnapshotSurface: void <init>(com.android.server.wm.WindowManagerService,com.android.server.wm.TaskSnapshotSurface$Window,android.view.SurfaceControl,android.app.ActivityManager$TaskSnapshot,java.lang.CharSequence,android.app.ActivityManager$TaskDescription,int,int,int,android.graphics.Rect,int,android.view.InsetsState)>(r72, $r17, $r18, r74, $r90, $r26, i22, i0, i1, r83, i23, r85);

        virtualinvoke $r17.<com.android.server.wm.TaskSnapshotSurface$Window: void setOuter(com.android.server.wm.TaskSnapshotSurface)>($r89);

     label32:
        i26 = $r17.<com.android.server.wm.TaskSnapshotSurface$Window: int mSeq>;

        r92 = <com.android.server.wm.TaskSnapshotSurface: android.graphics.Point sTmpSurfaceSize>;

        r93 = <com.android.server.wm.TaskSnapshotSurface: android.view.SurfaceControl sTmpSurfaceControl>;

     label33:
        interfaceinvoke r2.<android.view.IWindowSession: int relayout(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,int,int,long,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.view.DisplayCutout$ParcelableWrapper,android.util.MergedConfiguration,android.view.SurfaceControl,android.view.InsetsState,android.view.InsetsSourceControl[],android.graphics.Point,android.view.SurfaceControl)>($r17, i26, $r16, -1, -1, 0, 0, -1L, $r21, $r22, $r19, $r23, $r19, $r20, $r25, $r18, $r24, r10, r92, r93);

     label34:
        goto label37;

     label35:
        $r70 := @caughtexception;

        goto label37;

     label36:
        $r68 := @caughtexception;

     label37:
        $r96 = staticinvoke <com.android.server.wm.TaskSnapshotController: android.graphics.Rect getSystemBarInsets(android.graphics.Rect,android.view.InsetsState)>($r21, r85);

        virtualinvoke $r89.<com.android.server.wm.TaskSnapshotSurface: void setFrames(android.graphics.Rect,android.graphics.Rect)>($r21, $r96);

        specialinvoke $r89.<com.android.server.wm.TaskSnapshotSurface: void drawSnapshot()>();

        return $r89;

     label38:
        r97 = new java.lang.StringBuilder;

        specialinvoke r97.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TaskSnapshotSurface.create: Failed to find main window for activity=");

        virtualinvoke r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r73);

        $r30 = virtualinvoke r97.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", $r30);

        exitmonitor r13;

     label39:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return null;

     label40:
        $r66 := @caughtexception;

        r78 = $r66;

        goto label42;

     label41:
        $r69 := @caughtexception;

        r78 = $r69;

     label42:
        exitmonitor r13;

     label43:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw r78;

     label44:
        $r63 := @caughtexception;

        r78 = $r63;

        goto label42;

        catch java.lang.Throwable from label01 to label02 with label41;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label41;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label13 to label14 with label40;
        catch java.lang.Throwable from label15 to label16 with label40;
        catch java.lang.Throwable from label17 to label18 with label11;
        catch java.lang.Throwable from label18 to label19 with label40;
        catch java.lang.Throwable from label20 to label21 with label11;
        catch java.lang.Throwable from label21 to label22 with label40;
        catch android.os.RemoteException from label23 to label24 with label30;
        catch android.os.RemoteException from label24 to label25 with label29;
        catch android.os.RemoteException from label26 to label27 with label29;
        catch android.os.RemoteException from label32 to label33 with label36;
        catch android.os.RemoteException from label33 to label34 with label35;
        catch java.lang.Throwable from label38 to label39 with label44;
        catch java.lang.Throwable from label42 to label43 with label44;
    }

    private void drawSizeMatchSnapshot()
    {
        com.android.server.wm.TaskSnapshotSurface r0;
        android.app.ActivityManager$TaskSnapshot $r1, $r4;
        android.view.Surface $r2, $r6;
        android.graphics.GraphicBuffer $r3;
        android.graphics.ColorSpace $r5;

        r0 := @this: com.android.server.wm.TaskSnapshotSurface;

        $r2 = r0.<com.android.server.wm.TaskSnapshotSurface: android.view.Surface mSurface>;

        $r1 = r0.<com.android.server.wm.TaskSnapshotSurface: android.app.ActivityManager$TaskSnapshot mSnapshot>;

        $r3 = virtualinvoke $r1.<android.app.ActivityManager$TaskSnapshot: android.graphics.GraphicBuffer getSnapshot()>();

        $r4 = r0.<com.android.server.wm.TaskSnapshotSurface: android.app.ActivityManager$TaskSnapshot mSnapshot>;

        $r5 = virtualinvoke $r4.<android.app.ActivityManager$TaskSnapshot: android.graphics.ColorSpace getColorSpace()>();

        virtualinvoke $r2.<android.view.Surface: void attachAndQueueBufferWithColorSpace(android.graphics.GraphicBuffer,android.graphics.ColorSpace)>($r3, $r5);

        $r6 = r0.<com.android.server.wm.TaskSnapshotSurface: android.view.Surface mSurface>;

        virtualinvoke $r6.<android.view.Surface: void release()>();

        return;
    }

    private void drawSizeMismatchSnapshot()
    {
        com.android.server.wm.TaskSnapshotSurface r0;
        android.graphics.Rect r1, $r6, $r7, $r31, r62;
        android.view.Surface $r2, $r46, $r47, $r48, r61;
        boolean $z0, z2;
        java.lang.IllegalStateException $r3;
        android.app.ActivityManager$TaskSnapshot $r4, $r44;
        android.view.SurfaceSession $r5;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        byte $b4;
        com.android.server.wm.WindowManagerService $r8, $r23;
        java.util.function.Function $r9;
        java.lang.Object $r10, $r25;
        java.lang.StringBuilder $r11;
        java.lang.CharSequence $r12;
        java.lang.String $r15;
        android.view.SurfaceControl$Builder $r16, $r17, $r18, $r20, $r21, r59;
        android.view.SurfaceControl $r19, $r22, $r26, $r27, $r40, $r49, $r52;
        java.util.function.Supplier $r24;
        android.view.SurfaceControl$Transaction $r28, $r41, $r43, $r50, $r53;
        android.graphics.RectF $r30, $r32, $r33, $r35, $r36, $r55, $r56;
        android.graphics.Matrix$ScaleToFit $r34;
        android.graphics.Matrix $r37, $r39;
        float[] $r38;
        android.graphics.ColorSpace $r45;
        android.graphics.GraphicBuffer r57;
        android.graphics.Canvas r63;

        r0 := @this: com.android.server.wm.TaskSnapshotSurface;

        $r2 = r0.<com.android.server.wm.TaskSnapshotSurface: android.view.Surface mSurface>;

        $z0 = virtualinvoke $r2.<android.view.Surface: boolean isValid()>();

        if $z0 == 0 goto label6;

        $r4 = r0.<com.android.server.wm.TaskSnapshotSurface: android.app.ActivityManager$TaskSnapshot mSnapshot>;

        r57 = virtualinvoke $r4.<android.app.ActivityManager$TaskSnapshot: android.graphics.GraphicBuffer getSnapshot()>();

        $r5 = new android.view.SurfaceSession;

        specialinvoke $r5.<android.view.SurfaceSession: void <init>()>();

        $i0 = virtualinvoke r57.<android.graphics.GraphicBuffer: int getWidth()>();

        $f0 = (float) $i0;

        $i1 = virtualinvoke r57.<android.graphics.GraphicBuffer: int getHeight()>();

        $f1 = (float) $i1;

        $f2 = $f0 / $f1;

        $r6 = r0.<com.android.server.wm.TaskSnapshotSurface: android.graphics.Rect mFrame>;

        $i2 = virtualinvoke $r6.<android.graphics.Rect: int width()>();

        $f3 = (float) $i2;

        $r7 = r0.<com.android.server.wm.TaskSnapshotSurface: android.graphics.Rect mFrame>;

        $i3 = virtualinvoke $r7.<android.graphics.Rect: int height()>();

        $f4 = (float) $i3;

        $f5 = $f3 / $f4;

        $f6 = $f2 - $f5;

        $f7 = staticinvoke <java.lang.Math: float abs(float)>($f6);

        $b4 = $f7 cmpl 0.01F;

        if $b4 <= 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        $r8 = r0.<com.android.server.wm.TaskSnapshotSurface: com.android.server.wm.WindowManagerService mService>;

        $r9 = $r8.<com.android.server.wm.WindowManagerService: java.util.function.Function mSurfaceControlFactory>;

        $r10 = interfaceinvoke $r9.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>($r5);

        r59 = (android.view.SurfaceControl$Builder) $r10;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = r0.<com.android.server.wm.TaskSnapshotSurface: java.lang.CharSequence mTitle>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - task-snapshot-surface");

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = virtualinvoke r59.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setName(java.lang.String)>($r15);

        $i5 = virtualinvoke r57.<android.graphics.GraphicBuffer: int getWidth()>();

        $i6 = virtualinvoke r57.<android.graphics.GraphicBuffer: int getHeight()>();

        $r17 = virtualinvoke $r16.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setBufferSize(int,int)>($i5, $i6);

        $i7 = virtualinvoke r57.<android.graphics.GraphicBuffer: int getFormat()>();

        $r18 = virtualinvoke $r17.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setFormat(int)>($i7);

        $r19 = r0.<com.android.server.wm.TaskSnapshotSurface: android.view.SurfaceControl mSurfaceControl>;

        $r20 = virtualinvoke $r18.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setParent(android.view.SurfaceControl)>($r19);

        $r21 = virtualinvoke $r20.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setCallsite(java.lang.String)>("TaskSnapshotSurface.drawSizeMismatchSnapshot");

        $r22 = virtualinvoke $r21.<android.view.SurfaceControl$Builder: android.view.SurfaceControl build()>();

        r0.<com.android.server.wm.TaskSnapshotSurface: android.view.SurfaceControl mChildSurfaceControl> = $r22;

        $r23 = r0.<com.android.server.wm.TaskSnapshotSurface: com.android.server.wm.WindowManagerService mService>;

        $r24 = $r23.<com.android.server.wm.WindowManagerService: java.util.function.Supplier mSurfaceFactory>;

        $r25 = interfaceinvoke $r24.<java.util.function.Supplier: java.lang.Object get()>();

        r61 = (android.view.Surface) $r25;

        $r26 = r0.<com.android.server.wm.TaskSnapshotSurface: android.view.SurfaceControl mChildSurfaceControl>;

        virtualinvoke r61.<android.view.Surface: void copyFrom(android.view.SurfaceControl)>($r26);

        $r28 = r0.<com.android.server.wm.TaskSnapshotSurface: android.view.SurfaceControl$Transaction mTransaction>;

        $r27 = r0.<com.android.server.wm.TaskSnapshotSurface: android.view.SurfaceControl mChildSurfaceControl>;

        virtualinvoke $r28.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction show(android.view.SurfaceControl)>($r27);

        if z2 == 0 goto label3;

        r1 = virtualinvoke r0.<com.android.server.wm.TaskSnapshotSurface: android.graphics.Rect calculateSnapshotCrop()>();

        r62 = virtualinvoke r0.<com.android.server.wm.TaskSnapshotSurface: android.graphics.Rect calculateSnapshotFrame(android.graphics.Rect)>(r1);

        $r50 = r0.<com.android.server.wm.TaskSnapshotSurface: android.view.SurfaceControl$Transaction mTransaction>;

        $r49 = r0.<com.android.server.wm.TaskSnapshotSurface: android.view.SurfaceControl mChildSurfaceControl>;

        virtualinvoke $r50.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setWindowCrop(android.view.SurfaceControl,android.graphics.Rect)>($r49, r1);

        $r53 = r0.<com.android.server.wm.TaskSnapshotSurface: android.view.SurfaceControl$Transaction mTransaction>;

        $r52 = r0.<com.android.server.wm.TaskSnapshotSurface: android.view.SurfaceControl mChildSurfaceControl>;

        $i10 = r62.<android.graphics.Rect: int left>;

        $f11 = (float) $i10;

        $i11 = r62.<android.graphics.Rect: int top>;

        $f10 = (float) $i11;

        virtualinvoke $r53.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setPosition(android.view.SurfaceControl,float,float)>($r52, $f11, $f10);

        $r55 = r0.<com.android.server.wm.TaskSnapshotSurface: android.graphics.RectF mTmpSnapshotSize>;

        virtualinvoke $r55.<android.graphics.RectF: void set(android.graphics.Rect)>(r1);

        $r56 = r0.<com.android.server.wm.TaskSnapshotSurface: android.graphics.RectF mTmpDstFrame>;

        virtualinvoke $r56.<android.graphics.RectF: void set(android.graphics.Rect)>(r62);

        goto label4;

     label3:
        r62 = null;

        $r30 = r0.<com.android.server.wm.TaskSnapshotSurface: android.graphics.RectF mTmpSnapshotSize>;

        $i8 = virtualinvoke r57.<android.graphics.GraphicBuffer: int getWidth()>();

        $f8 = (float) $i8;

        $i9 = virtualinvoke r57.<android.graphics.GraphicBuffer: int getHeight()>();

        $f9 = (float) $i9;

        virtualinvoke $r30.<android.graphics.RectF: void set(float,float,float,float)>(0.0F, 0.0F, $f8, $f9);

        $r32 = r0.<com.android.server.wm.TaskSnapshotSurface: android.graphics.RectF mTmpDstFrame>;

        $r31 = r0.<com.android.server.wm.TaskSnapshotSurface: android.graphics.Rect mFrame>;

        virtualinvoke $r32.<android.graphics.RectF: void set(android.graphics.Rect)>($r31);

        $r33 = r0.<com.android.server.wm.TaskSnapshotSurface: android.graphics.RectF mTmpDstFrame>;

        virtualinvoke $r33.<android.graphics.RectF: void offsetTo(float,float)>(0.0F, 0.0F);

     label4:
        $r37 = r0.<com.android.server.wm.TaskSnapshotSurface: android.graphics.Matrix mSnapshotMatrix>;

        $r36 = r0.<com.android.server.wm.TaskSnapshotSurface: android.graphics.RectF mTmpSnapshotSize>;

        $r35 = r0.<com.android.server.wm.TaskSnapshotSurface: android.graphics.RectF mTmpDstFrame>;

        $r34 = <android.graphics.Matrix$ScaleToFit: android.graphics.Matrix$ScaleToFit FILL>;

        virtualinvoke $r37.<android.graphics.Matrix: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit)>($r36, $r35, $r34);

        $r41 = r0.<com.android.server.wm.TaskSnapshotSurface: android.view.SurfaceControl$Transaction mTransaction>;

        $r40 = r0.<com.android.server.wm.TaskSnapshotSurface: android.view.SurfaceControl mChildSurfaceControl>;

        $r39 = r0.<com.android.server.wm.TaskSnapshotSurface: android.graphics.Matrix mSnapshotMatrix>;

        $r38 = r0.<com.android.server.wm.TaskSnapshotSurface: float[] mTmpFloat9>;

        virtualinvoke $r41.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setMatrix(android.view.SurfaceControl,android.graphics.Matrix,float[])>($r40, $r39, $r38);

        $r43 = r0.<com.android.server.wm.TaskSnapshotSurface: android.view.SurfaceControl$Transaction mTransaction>;

        virtualinvoke $r43.<android.view.SurfaceControl$Transaction: void apply()>();

        $r44 = r0.<com.android.server.wm.TaskSnapshotSurface: android.app.ActivityManager$TaskSnapshot mSnapshot>;

        $r45 = virtualinvoke $r44.<android.app.ActivityManager$TaskSnapshot: android.graphics.ColorSpace getColorSpace()>();

        virtualinvoke r61.<android.view.Surface: void attachAndQueueBufferWithColorSpace(android.graphics.GraphicBuffer,android.graphics.ColorSpace)>(r57, $r45);

        virtualinvoke r61.<android.view.Surface: void release()>();

        if z2 == 0 goto label5;

        $r46 = r0.<com.android.server.wm.TaskSnapshotSurface: android.view.Surface mSurface>;

        r63 = virtualinvoke $r46.<android.view.Surface: android.graphics.Canvas lockCanvas(android.graphics.Rect)>(null);

        virtualinvoke r0.<com.android.server.wm.TaskSnapshotSurface: void drawBackgroundAndBars(android.graphics.Canvas,android.graphics.Rect)>(r63, r62);

        $r47 = r0.<com.android.server.wm.TaskSnapshotSurface: android.view.Surface mSurface>;

        virtualinvoke $r47.<android.view.Surface: void unlockCanvasAndPost(android.graphics.Canvas)>(r63);

        $r48 = r0.<com.android.server.wm.TaskSnapshotSurface: android.view.Surface mSurface>;

        virtualinvoke $r48.<android.view.Surface: void release()>();

     label5:
        return;

     label6:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("mSurface does not hold a valid surface.");

        throw $r3;
    }

    private void drawSnapshot()
    {
        com.android.server.wm.TaskSnapshotSurface r0;
        boolean z0, $z1, $z2;
        com.android.server.wm.WindowManagerGlobalLock r1;
        android.view.SurfaceControl $r3;
        android.view.Surface $r4;
        com.android.server.wm.WindowManagerService $r5;
        long $l0;
        java.lang.Object[] $r6;
        com.android.server.wm.ProtoLogGroup $r7;
        java.lang.Boolean $r8;
        java.lang.Throwable $r9;

        r0 := @this: com.android.server.wm.TaskSnapshotSurface;

        $r4 = r0.<com.android.server.wm.TaskSnapshotSurface: android.view.Surface mSurface>;

        $r3 = r0.<com.android.server.wm.TaskSnapshotSurface: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r4.<android.view.Surface: void copyFrom(android.view.SurfaceControl)>($r3);

        $z1 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_STARTING_WINDOW_enabled>;

        if $z1 == 0 goto label1;

        z0 = r0.<com.android.server.wm.TaskSnapshotSurface: boolean mSizeMismatch>;

        $r7 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_STARTING_WINDOW>;

        $r6 = newarray (java.lang.Object)[1];

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r6[0] = $r8;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void v(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r7, -1991255017, 3, null, $r6);

     label1:
        $z2 = r0.<com.android.server.wm.TaskSnapshotSurface: boolean mSizeMismatch>;

        if $z2 == 0 goto label2;

        specialinvoke r0.<com.android.server.wm.TaskSnapshotSurface: void drawSizeMismatchSnapshot()>();

        goto label3;

     label2:
        specialinvoke r0.<com.android.server.wm.TaskSnapshotSurface: void drawSizeMatchSnapshot()>();

     label3:
        $r5 = r0.<com.android.server.wm.TaskSnapshotSurface: com.android.server.wm.WindowManagerService mService>;

        r1 = $r5.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label4:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.server.wm.TaskSnapshotSurface: long mShownTime> = $l0;

        r0.<com.android.server.wm.TaskSnapshotSurface: boolean mHasDrawn> = 1;

        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        specialinvoke r0.<com.android.server.wm.TaskSnapshotSurface: void reportDrawn()>();

        r0.<com.android.server.wm.TaskSnapshotSurface: android.app.ActivityManager$TaskSnapshot mSnapshot> = null;

        return;

     label6:
        $r9 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r9;

        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private void reportDrawn()
    {
        com.android.server.wm.TaskSnapshotSurface r0;
        com.android.server.wm.TaskSnapshotSurface$Window $r2;
        android.view.IWindowSession $r3;
        android.os.RemoteException $r4;

        r0 := @this: com.android.server.wm.TaskSnapshotSurface;

     label1:
        $r3 = r0.<com.android.server.wm.TaskSnapshotSurface: android.view.IWindowSession mSession>;

        $r2 = r0.<com.android.server.wm.TaskSnapshotSurface: com.android.server.wm.TaskSnapshotSurface$Window mWindow>;

        interfaceinvoke $r3.<android.view.IWindowSession: void finishDrawing(android.view.IWindow,android.view.SurfaceControl$Transaction)>($r2, null);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    android.graphics.Rect calculateSnapshotCrop()
    {
        com.android.server.wm.TaskSnapshotSurface r0;
        android.graphics.Rect r2, $r3, $r17, $r18;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13;
        android.app.ActivityManager$TaskSnapshot $r4, $r6, $r8, $r9, $r11, $r13, $r15;
        android.graphics.GraphicBuffer $r5, $r7, $r10, $r14;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, $i14, i15, i16;
        android.graphics.Point $r12, $r16;
        boolean z0;

        r0 := @this: com.android.server.wm.TaskSnapshotSurface;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        $r4 = r0.<com.android.server.wm.TaskSnapshotSurface: android.app.ActivityManager$TaskSnapshot mSnapshot>;

        $r5 = virtualinvoke $r4.<android.app.ActivityManager$TaskSnapshot: android.graphics.GraphicBuffer getSnapshot()>();

        i12 = virtualinvoke $r5.<android.graphics.GraphicBuffer: int getWidth()>();

        $r6 = r0.<com.android.server.wm.TaskSnapshotSurface: android.app.ActivityManager$TaskSnapshot mSnapshot>;

        $r7 = virtualinvoke $r6.<android.app.ActivityManager$TaskSnapshot: android.graphics.GraphicBuffer getSnapshot()>();

        i13 = virtualinvoke $r7.<android.graphics.GraphicBuffer: int getHeight()>();

        virtualinvoke $r3.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, i12, i13);

        $r8 = r0.<com.android.server.wm.TaskSnapshotSurface: android.app.ActivityManager$TaskSnapshot mSnapshot>;

        r2 = virtualinvoke $r8.<android.app.ActivityManager$TaskSnapshot: android.graphics.Rect getContentInsets()>();

        $r9 = r0.<com.android.server.wm.TaskSnapshotSurface: android.app.ActivityManager$TaskSnapshot mSnapshot>;

        $r10 = virtualinvoke $r9.<android.app.ActivityManager$TaskSnapshot: android.graphics.GraphicBuffer getSnapshot()>();

        $i1 = virtualinvoke $r10.<android.graphics.GraphicBuffer: int getWidth()>();

        $f2 = (float) $i1;

        $r11 = r0.<com.android.server.wm.TaskSnapshotSurface: android.app.ActivityManager$TaskSnapshot mSnapshot>;

        $r12 = virtualinvoke $r11.<android.app.ActivityManager$TaskSnapshot: android.graphics.Point getTaskSize()>();

        $i2 = $r12.<android.graphics.Point: int x>;

        $f3 = (float) $i2;

        f0 = $f2 / $f3;

        $r13 = r0.<com.android.server.wm.TaskSnapshotSurface: android.app.ActivityManager$TaskSnapshot mSnapshot>;

        $r14 = virtualinvoke $r13.<android.app.ActivityManager$TaskSnapshot: android.graphics.GraphicBuffer getSnapshot()>();

        $i3 = virtualinvoke $r14.<android.graphics.GraphicBuffer: int getHeight()>();

        $f4 = (float) $i3;

        $r15 = r0.<com.android.server.wm.TaskSnapshotSurface: android.app.ActivityManager$TaskSnapshot mSnapshot>;

        $r16 = virtualinvoke $r15.<android.app.ActivityManager$TaskSnapshot: android.graphics.Point getTaskSize()>();

        $i4 = $r16.<android.graphics.Point: int y>;

        $f5 = (float) $i4;

        f1 = $f4 / $f5;

        $r17 = r0.<com.android.server.wm.TaskSnapshotSurface: android.graphics.Rect mTaskBounds>;

        $i5 = $r17.<android.graphics.Rect: int top>;

        if $i5 != 0 goto label1;

        $r18 = r0.<com.android.server.wm.TaskSnapshotSurface: android.graphics.Rect mFrame>;

        $i11 = $r18.<android.graphics.Rect: int top>;

        if $i11 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        $i14 = r2.<android.graphics.Rect: int left>;

        $f12 = (float) $i14;

        $f13 = $f12 * f0;

        i15 = (int) $f13;

        if z0 == 0 goto label3;

        i16 = 0;

        goto label4;

     label3:
        $i6 = r2.<android.graphics.Rect: int top>;

        $f6 = (float) $i6;

        $f7 = $f6 * f1;

        i16 = (int) $f7;

     label4:
        $i7 = r2.<android.graphics.Rect: int right>;

        $f8 = (float) $i7;

        $f9 = $f8 * f0;

        $i10 = (int) $f9;

        $i8 = r2.<android.graphics.Rect: int bottom>;

        $f10 = (float) $i8;

        $f11 = $f10 * f1;

        $i9 = (int) $f11;

        virtualinvoke $r3.<android.graphics.Rect: void inset(int,int,int,int)>(i15, i16, $i10, $i9);

        return $r3;
    }

    android.graphics.Rect calculateSnapshotFrame(android.graphics.Rect)
    {
        com.android.server.wm.TaskSnapshotSurface r0;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        android.app.ActivityManager$TaskSnapshot $r1, $r3, $r5, $r7;
        android.graphics.GraphicBuffer $r2, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.graphics.Point $r4, $r8;
        android.graphics.Rect $r9, $r10, r11;

        r0 := @this: com.android.server.wm.TaskSnapshotSurface;

        r11 := @parameter0: android.graphics.Rect;

        $r1 = r0.<com.android.server.wm.TaskSnapshotSurface: android.app.ActivityManager$TaskSnapshot mSnapshot>;

        $r2 = virtualinvoke $r1.<android.app.ActivityManager$TaskSnapshot: android.graphics.GraphicBuffer getSnapshot()>();

        $i0 = virtualinvoke $r2.<android.graphics.GraphicBuffer: int getWidth()>();

        $f2 = (float) $i0;

        $r3 = r0.<com.android.server.wm.TaskSnapshotSurface: android.app.ActivityManager$TaskSnapshot mSnapshot>;

        $r4 = virtualinvoke $r3.<android.app.ActivityManager$TaskSnapshot: android.graphics.Point getTaskSize()>();

        $i1 = $r4.<android.graphics.Point: int x>;

        $f3 = (float) $i1;

        f0 = $f2 / $f3;

        $r5 = r0.<com.android.server.wm.TaskSnapshotSurface: android.app.ActivityManager$TaskSnapshot mSnapshot>;

        $r6 = virtualinvoke $r5.<android.app.ActivityManager$TaskSnapshot: android.graphics.GraphicBuffer getSnapshot()>();

        $i2 = virtualinvoke $r6.<android.graphics.GraphicBuffer: int getHeight()>();

        $f4 = (float) $i2;

        $r7 = r0.<com.android.server.wm.TaskSnapshotSurface: android.app.ActivityManager$TaskSnapshot mSnapshot>;

        $r8 = virtualinvoke $r7.<android.app.ActivityManager$TaskSnapshot: android.graphics.Point getTaskSize()>();

        $i3 = $r8.<android.graphics.Point: int y>;

        $f5 = (float) $i3;

        f1 = $f4 / $f5;

        $r9 = new android.graphics.Rect;

        $i4 = virtualinvoke r11.<android.graphics.Rect: int width()>();

        $f6 = (float) $i4;

        $f7 = $f6 / f0;

        $f8 = $f7 + 0.5F;

        $i5 = (int) $f8;

        $i6 = virtualinvoke r11.<android.graphics.Rect: int height()>();

        $f9 = (float) $i6;

        $f10 = $f9 / f1;

        $f11 = $f10 + 0.5F;

        $i7 = (int) $f11;

        specialinvoke $r9.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, $i5, $i7);

        $r10 = r0.<com.android.server.wm.TaskSnapshotSurface: android.graphics.Rect mSystemBarInsets>;

        $i8 = $r10.<android.graphics.Rect: int left>;

        virtualinvoke $r9.<android.graphics.Rect: void offset(int,int)>($i8, 0);

        return $r9;
    }

    void drawBackgroundAndBars(android.graphics.Canvas, android.graphics.Rect)
    {
        com.android.server.wm.TaskSnapshotSurface r0;
        android.graphics.Canvas r1;
        android.graphics.Rect r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13;
        float f0, f1, $f2, $f3, $f4, f5, f6;
        com.android.server.wm.TaskSnapshotSurface$SystemBarBackgroundPainter $r3, $r4;
        android.graphics.Paint $r5, $r6;
        boolean z0, z1;

        r0 := @this: com.android.server.wm.TaskSnapshotSurface;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: android.graphics.Rect;

        $r3 = r0.<com.android.server.wm.TaskSnapshotSurface: com.android.server.wm.TaskSnapshotSurface$SystemBarBackgroundPainter mSystemBarBackgroundPainter>;

        i0 = virtualinvoke $r3.<com.android.server.wm.TaskSnapshotSurface$SystemBarBackgroundPainter: int getStatusBarColorViewHeight()>();

        i13 = virtualinvoke r1.<android.graphics.Canvas: int getWidth()>();

        i1 = r2.<android.graphics.Rect: int right>;

        z0 = 1;

        if i13 <= i1 goto label01;

        z1 = 1;

        goto label02;

     label01:
        z1 = 0;

     label02:
        $i2 = virtualinvoke r1.<android.graphics.Canvas: int getHeight()>();

        $i3 = r2.<android.graphics.Rect: int bottom>;

        if $i2 <= $i3 goto label03;

        goto label04;

     label03:
        z0 = 0;

     label04:
        if z1 == 0 goto label09;

        $i7 = r2.<android.graphics.Rect: int right>;

        f0 = (float) $i7;

        $i8 = r0.<com.android.server.wm.TaskSnapshotSurface: int mStatusBarColor>;

        $i9 = staticinvoke <android.graphics.Color: int alpha(int)>($i8);

        if $i9 != 255 goto label05;

        f5 = (float) i0;

        goto label06;

     label05:
        f5 = 0.0F;

     label06:
        $i10 = virtualinvoke r1.<android.graphics.Canvas: int getWidth()>();

        f1 = (float) $i10;

        if z0 == 0 goto label07;

        $i12 = r2.<android.graphics.Rect: int bottom>;

        f6 = (float) $i12;

        goto label08;

     label07:
        $i11 = virtualinvoke r1.<android.graphics.Canvas: int getHeight()>();

        f6 = (float) $i11;

     label08:
        $r6 = r0.<com.android.server.wm.TaskSnapshotSurface: android.graphics.Paint mBackgroundPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>(f0, f5, f1, f6, $r6);

     label09:
        if z0 == 0 goto label10;

        $i4 = r2.<android.graphics.Rect: int bottom>;

        $f2 = (float) $i4;

        $i5 = virtualinvoke r1.<android.graphics.Canvas: int getWidth()>();

        $f3 = (float) $i5;

        $i6 = virtualinvoke r1.<android.graphics.Canvas: int getHeight()>();

        $f4 = (float) $i6;

        $r5 = r0.<com.android.server.wm.TaskSnapshotSurface: android.graphics.Paint mBackgroundPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>(0.0F, $f2, $f3, $f4, $r5);

     label10:
        $r4 = r0.<com.android.server.wm.TaskSnapshotSurface: com.android.server.wm.TaskSnapshotSurface$SystemBarBackgroundPainter mSystemBarBackgroundPainter>;

        virtualinvoke $r4.<com.android.server.wm.TaskSnapshotSurface$SystemBarBackgroundPainter: void drawDecors(android.graphics.Canvas,android.graphics.Rect)>(r1, r2);

        return;
    }

    public void remove()
    {
        com.android.server.wm.TaskSnapshotSurface r0;
        long l0, l1, $l2, $l3, $l5, $l6, $l7;
        android.os.Handler r1;
        com.android.server.wm.WindowManagerService $r2;
        boolean $z0, $z1, $z3;
        com.android.server.wm.TaskSnapshotSurface$Window $r3;
        android.view.IWindowSession $r4;
        java.lang.Object[] $r5, $r7;
        com.android.server.wm.ProtoLogGroup $r6, $r8;
        byte $b4;
        java.lang.Long $r9;
        java.lang.Throwable $r10;
        android.os.RemoteException $r11;
        com.android.server.wm.WindowManagerGlobalLock r12;
        com.android.server.wm._$$Lambda$_OevXHSXgaSE351ZqRnMoA024MM r13;

        r0 := @this: com.android.server.wm.TaskSnapshotSurface;

        $r2 = r0.<com.android.server.wm.TaskSnapshotSurface: com.android.server.wm.WindowManagerService mService>;

        r12 = $r2.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r12;

     label01:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $z0 = r0.<com.android.server.wm.TaskSnapshotSurface: boolean mSizeMismatch>;

        if $z0 == 0 goto label04;

        $l2 = r0.<com.android.server.wm.TaskSnapshotSurface: long mShownTime>;

        $l3 = l0 - $l2;

        $b4 = $l3 cmp 450L;

        if $b4 >= 0 goto label04;

        r1 = r0.<com.android.server.wm.TaskSnapshotSurface: android.os.Handler mHandler>;

        r13 = new com.android.server.wm._$$Lambda$_OevXHSXgaSE351ZqRnMoA024MM;

        specialinvoke r13.<com.android.server.wm._$$Lambda$_OevXHSXgaSE351ZqRnMoA024MM: void <init>(com.android.server.wm.TaskSnapshotSurface)>(r0);

        $l5 = r0.<com.android.server.wm.TaskSnapshotSurface: long mShownTime>;

        $l6 = $l5 + 450L;

        virtualinvoke r1.<android.os.Handler: boolean postAtTime(java.lang.Runnable,long)>(r13, $l6);

        $z3 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_STARTING_WINDOW_enabled>;

        if $z3 == 0 goto label02;

        l1 = r0.<com.android.server.wm.TaskSnapshotSurface: long mShownTime>;

        $r8 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_STARTING_WINDOW>;

        $r7 = newarray (java.lang.Object)[1];

        $l7 = l0 - l1;

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7);

        $r7[0] = $r9;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void v(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r8, -2002500255, 1, null, $r7);

     label02:
        exitmonitor r12;

     label03:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label04:
        exitmonitor r12;

     label05:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

     label06:
        $z1 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_STARTING_WINDOW_enabled>;

        if $z1 == 0 goto label07;

        $r6 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_STARTING_WINDOW>;

        $r5 = (java.lang.Object[]) null;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void v(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r6, -405536909, 0, null, $r5);

     label07:
        $r4 = r0.<com.android.server.wm.TaskSnapshotSurface: android.view.IWindowSession mSession>;

        $r3 = r0.<com.android.server.wm.TaskSnapshotSurface: com.android.server.wm.TaskSnapshotSurface$Window mWindow>;

        interfaceinvoke $r4.<android.view.IWindowSession: void remove(android.view.IWindow)>($r3);

     label08:
        goto label10;

     label09:
        $r11 := @caughtexception;

     label10:
        return;

     label11:
        $r10 := @caughtexception;

     label12:
        exitmonitor r12;

     label13:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch android.os.RemoteException from label06 to label07 with label09;
        catch android.os.RemoteException from label07 to label08 with label09;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    void setFrames(android.graphics.Rect, android.graphics.Rect)
    {
        com.android.server.wm.TaskSnapshotSurface r0;
        android.graphics.Rect r1, r2, $r3, $r4, $r5, $r8;
        int $i0, $i1, $i2, $i3;
        android.app.ActivityManager$TaskSnapshot $r6, $r9;
        android.graphics.GraphicBuffer $r7, $r10;
        boolean z0;
        com.android.server.wm.TaskSnapshotSurface$SystemBarBackgroundPainter $r11;

        r0 := @this: com.android.server.wm.TaskSnapshotSurface;

        r1 := @parameter0: android.graphics.Rect;

        r2 := @parameter1: android.graphics.Rect;

        $r3 = r0.<com.android.server.wm.TaskSnapshotSurface: android.graphics.Rect mFrame>;

        virtualinvoke $r3.<android.graphics.Rect: void set(android.graphics.Rect)>(r1);

        $r4 = r0.<com.android.server.wm.TaskSnapshotSurface: android.graphics.Rect mSystemBarInsets>;

        virtualinvoke $r4.<android.graphics.Rect: void set(android.graphics.Rect)>(r2);

        $r5 = r0.<com.android.server.wm.TaskSnapshotSurface: android.graphics.Rect mFrame>;

        $i0 = virtualinvoke $r5.<android.graphics.Rect: int width()>();

        $r6 = r0.<com.android.server.wm.TaskSnapshotSurface: android.app.ActivityManager$TaskSnapshot mSnapshot>;

        $r7 = virtualinvoke $r6.<android.app.ActivityManager$TaskSnapshot: android.graphics.GraphicBuffer getSnapshot()>();

        $i1 = virtualinvoke $r7.<android.graphics.GraphicBuffer: int getWidth()>();

        if $i0 != $i1 goto label2;

        $r8 = r0.<com.android.server.wm.TaskSnapshotSurface: android.graphics.Rect mFrame>;

        $i2 = virtualinvoke $r8.<android.graphics.Rect: int height()>();

        $r9 = r0.<com.android.server.wm.TaskSnapshotSurface: android.app.ActivityManager$TaskSnapshot mSnapshot>;

        $r10 = virtualinvoke $r9.<android.app.ActivityManager$TaskSnapshot: android.graphics.GraphicBuffer getSnapshot()>();

        $i3 = virtualinvoke $r10.<android.graphics.GraphicBuffer: int getHeight()>();

        if $i2 == $i3 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        r0.<com.android.server.wm.TaskSnapshotSurface: boolean mSizeMismatch> = z0;

        $r11 = r0.<com.android.server.wm.TaskSnapshotSurface: com.android.server.wm.TaskSnapshotSurface$SystemBarBackgroundPainter mSystemBarBackgroundPainter>;

        virtualinvoke $r11.<com.android.server.wm.TaskSnapshotSurface$SystemBarBackgroundPainter: void setInsets(android.graphics.Rect)>(r2);

        return;
    }
}
