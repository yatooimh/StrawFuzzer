class com.android.server.wm.ViewServer$ViewServerWorker extends java.lang.Object implements java.lang.Runnable, com.android.server.wm.WindowManagerService$WindowChangeListener
{
    private java.net.Socket mClient;
    private boolean mNeedFocusedWindowUpdate;
    private boolean mNeedWindowListUpdate;
    final com.android.server.wm.ViewServer this$0;

    public void <init>(com.android.server.wm.ViewServer, java.net.Socket)
    {
        com.android.server.wm.ViewServer$ViewServerWorker r0;
        com.android.server.wm.ViewServer r1;
        java.net.Socket r2;

        r0 := @this: com.android.server.wm.ViewServer$ViewServerWorker;

        r1 := @parameter0: com.android.server.wm.ViewServer;

        r2 := @parameter1: java.net.Socket;

        r0.<com.android.server.wm.ViewServer$ViewServerWorker: com.android.server.wm.ViewServer this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.wm.ViewServer$ViewServerWorker: java.net.Socket mClient> = r2;

        r0.<com.android.server.wm.ViewServer$ViewServerWorker: boolean mNeedWindowListUpdate> = 0;

        r0.<com.android.server.wm.ViewServer$ViewServerWorker: boolean mNeedFocusedWindowUpdate> = 0;

        return;
    }

    private boolean windowManagerAutolistLoop()
    {
        com.android.server.wm.ViewServer$ViewServerWorker r0;
        java.io.OutputStreamWriter r1;
        com.android.server.wm.ViewServer $r2, $r17, $r19;
        com.android.server.wm.WindowManagerService $r3, $r18, $r20;
        java.net.Socket $r4;
        java.io.OutputStream $r5;
        boolean $z0, $z1, $z2, $z3, $z4, z5, z6;
        java.lang.Throwable $r6, $r7, $r8, $r9, $r10;
        java.lang.Exception $r11;
        java.io.BufferedWriter r12, r13, r14;

        r0 := @this: com.android.server.wm.ViewServer$ViewServerWorker;

        $r2 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: com.android.server.wm.ViewServer this$0>;

        $r3 = staticinvoke <com.android.server.wm.ViewServer: com.android.server.wm.WindowManagerService access$100(com.android.server.wm.ViewServer)>($r2);

        virtualinvoke $r3.<com.android.server.wm.WindowManagerService: void addWindowChangeListener(com.android.server.wm.WindowManagerService$WindowChangeListener)>(r0);

        r12 = null;

        r13 = null;

     label01:
        r14 = new java.io.BufferedWriter;

     label02:
        r12 = null;

        r13 = null;

     label03:
        r1 = new java.io.OutputStreamWriter;

     label04:
        r12 = null;

        r13 = null;

     label05:
        $r4 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: java.net.Socket mClient>;

        $r5 = virtualinvoke $r4.<java.net.Socket: java.io.OutputStream getOutputStream()>();

        specialinvoke r1.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>($r5);

     label06:
        r12 = null;

        r13 = null;

     label07:
        specialinvoke r14.<java.io.BufferedWriter: void <init>(java.io.Writer)>(r1);

     label08:
        r12 = r14;

        r13 = r14;

     label09:
        $z0 = staticinvoke <java.lang.Thread: boolean interrupted()>();

        if $z0 != 0 goto label32;

     label10:
        z5 = 0;

        z6 = 0;

        r12 = r14;

        r13 = r14;

     label11:
        entermonitor r0;

     label12:
        $z1 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: boolean mNeedWindowListUpdate>;

        if $z1 != 0 goto label14;

        $z4 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: boolean mNeedFocusedWindowUpdate>;

        if $z4 != 0 goto label14;

        virtualinvoke r0.<java.lang.Object: void wait()>();

     label13:
        goto label12;

     label14:
        $z2 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: boolean mNeedWindowListUpdate>;

        if $z2 == 0 goto label16;

        r0.<com.android.server.wm.ViewServer$ViewServerWorker: boolean mNeedWindowListUpdate> = 0;

     label15:
        z5 = 1;

     label16:
        $z3 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: boolean mNeedFocusedWindowUpdate>;

        if $z3 == 0 goto label18;

        r0.<com.android.server.wm.ViewServer$ViewServerWorker: boolean mNeedFocusedWindowUpdate> = 0;

     label17:
        z6 = 1;

     label18:
        exitmonitor r0;

     label19:
        if z5 == 0 goto label23;

        r12 = r14;

        r13 = r14;

     label20:
        virtualinvoke r14.<java.io.BufferedWriter: void write(java.lang.String)>("LIST UPDATE\n");

     label21:
        r12 = r14;

        r13 = r14;

     label22:
        virtualinvoke r14.<java.io.BufferedWriter: void flush()>();

     label23:
        if z6 == 0 goto label27;

        r12 = r14;

        r13 = r14;

     label24:
        virtualinvoke r14.<java.io.BufferedWriter: void write(java.lang.String)>("ACTION_FOCUS UPDATE\n");

     label25:
        r12 = r14;

        r13 = r14;

     label26:
        virtualinvoke r14.<java.io.BufferedWriter: void flush()>();

     label27:
        goto label08;

     label28:
        $r6 := @caughtexception;

     label29:
        exitmonitor r0;

     label30:
        r12 = r14;

        r13 = r14;

     label31:
        throw $r6;

     label32:
        virtualinvoke r14.<java.io.BufferedWriter: void close()>();

     label33:
        goto label42;

     label34:
        $r9 := @caughtexception;

        goto label44;

     label35:
        $r7 := @caughtexception;

        if r12 == null goto label39;

     label36:
        virtualinvoke r12.<java.io.BufferedWriter: void close()>();

     label37:
        goto label39;

     label38:
        $r8 := @caughtexception;

     label39:
        $r17 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: com.android.server.wm.ViewServer this$0>;

        $r18 = staticinvoke <com.android.server.wm.ViewServer: com.android.server.wm.WindowManagerService access$100(com.android.server.wm.ViewServer)>($r17);

        virtualinvoke $r18.<com.android.server.wm.WindowManagerService: void removeWindowChangeListener(com.android.server.wm.WindowManagerService$WindowChangeListener)>(r0);

        throw $r7;

     label40:
        $r11 := @caughtexception;

        if r13 == null goto label44;

     label41:
        virtualinvoke r13.<java.io.BufferedWriter: void close()>();

     label42:
        goto label44;

     label43:
        $r10 := @caughtexception;

     label44:
        $r19 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: com.android.server.wm.ViewServer this$0>;

        $r20 = staticinvoke <com.android.server.wm.ViewServer: com.android.server.wm.WindowManagerService access$100(com.android.server.wm.ViewServer)>($r19);

        virtualinvoke $r20.<com.android.server.wm.WindowManagerService: void removeWindowChangeListener(com.android.server.wm.WindowManagerService$WindowChangeListener)>(r0);

        return 1;

        catch java.lang.Exception from label01 to label02 with label40;
        catch java.lang.Throwable from label01 to label02 with label35;
        catch java.lang.Exception from label03 to label04 with label40;
        catch java.lang.Throwable from label03 to label04 with label35;
        catch java.lang.Exception from label05 to label06 with label40;
        catch java.lang.Throwable from label05 to label06 with label35;
        catch java.lang.Exception from label07 to label08 with label40;
        catch java.lang.Throwable from label07 to label08 with label35;
        catch java.lang.Exception from label09 to label10 with label40;
        catch java.lang.Throwable from label09 to label10 with label35;
        catch java.lang.Exception from label11 to label12 with label40;
        catch java.lang.Throwable from label11 to label12 with label35;
        catch java.lang.Throwable from label12 to label13 with label28;
        catch java.lang.Throwable from label14 to label15 with label28;
        catch java.lang.Throwable from label16 to label17 with label28;
        catch java.lang.Throwable from label18 to label19 with label28;
        catch java.lang.Exception from label20 to label21 with label40;
        catch java.lang.Throwable from label20 to label21 with label35;
        catch java.lang.Exception from label22 to label23 with label40;
        catch java.lang.Throwable from label22 to label23 with label35;
        catch java.lang.Exception from label24 to label25 with label40;
        catch java.lang.Throwable from label24 to label25 with label35;
        catch java.lang.Exception from label26 to label27 with label40;
        catch java.lang.Throwable from label26 to label27 with label35;
        catch java.lang.Throwable from label29 to label30 with label28;
        catch java.lang.Exception from label31 to label32 with label40;
        catch java.lang.Throwable from label31 to label32 with label35;
        catch java.io.IOException from label32 to label33 with label34;
        catch java.io.IOException from label36 to label37 with label38;
        catch java.io.IOException from label41 to label42 with label43;
    }

    public void focusChanged()
    {
        com.android.server.wm.ViewServer$ViewServerWorker r0;
        java.lang.Throwable $r2;

        r0 := @this: com.android.server.wm.ViewServer$ViewServerWorker;

        entermonitor r0;

     label1:
        r0.<com.android.server.wm.ViewServer$ViewServerWorker: boolean mNeedFocusedWindowUpdate> = 1;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void run()
    {
        com.android.server.wm.ViewServer$ViewServerWorker r0;
        int i0, $i1;
        java.net.Socket $r2, $r11, $r15, $r18, $r19, $r20, r36, r41, r43;
        java.io.InputStream $r3;
        java.lang.String $r4, $r5, $r6, $r7, $r8, $r12, r31, r32, r33;
        boolean $z0, $z1, $z2, $z3, z4, z5;
        com.android.server.wm.ViewServer $r9, $r13, $r16;
        com.android.server.wm.WindowManagerService $r10, $r14, $r17;
        java.lang.Throwable $r21, $r22, $r23, $r24, $r25, $r26, $r27;
        java.io.BufferedReader r28, r29, r46;
        java.io.InputStreamReader r45;
        java.lang.StringBuilder r47;
        java.io.IOException r48, r49, r50, r51, r52;

        r0 := @this: com.android.server.wm.ViewServer$ViewServerWorker;

        r28 = null;

        r29 = null;

     label01:
        r46 = new java.io.BufferedReader;

     label02:
        r28 = null;

        r29 = null;

     label03:
        r45 = new java.io.InputStreamReader;

     label04:
        r28 = null;

        r29 = null;

     label05:
        $r2 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: java.net.Socket mClient>;

        $r3 = virtualinvoke $r2.<java.net.Socket: java.io.InputStream getInputStream()>();

        specialinvoke r45.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r3);

     label06:
        r28 = null;

        r29 = null;

     label07:
        specialinvoke r46.<java.io.BufferedReader: void <init>(java.io.Reader,int)>(r45, 1024);

     label08:
        r28 = r46;

        r29 = r46;

     label09:
        r31 = virtualinvoke r46.<java.io.BufferedReader: java.lang.String readLine()>();

     label10:
        r28 = r46;

        r29 = r46;

     label11:
        i0 = virtualinvoke r31.<java.lang.String: int indexOf(int)>(32);

     label12:
        if i0 != -1 goto label13;

        r32 = r31;

        r33 = "";

        goto label17;

     label13:
        r28 = r46;

        r29 = r46;

     label14:
        r32 = virtualinvoke r31.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

     label15:
        r28 = r46;

        r29 = r46;

     label16:
        $i1 = i0 + 1;

        r33 = virtualinvoke r31.<java.lang.String: java.lang.String substring(int)>($i1);

     label17:
        r28 = r46;

        r29 = r46;

     label18:
        $r4 = "PROTOCOL";

        z4 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r32);

     label19:
        if z4 == 0 goto label22;

        r28 = r46;

        r29 = r46;

     label20:
        $r20 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: java.net.Socket mClient>;

        z5 = staticinvoke <com.android.server.wm.ViewServer: boolean access$000(java.net.Socket,java.lang.String)>($r20, "4");

     label21:
        goto label44;

     label22:
        r28 = r46;

        r29 = r46;

     label23:
        $r5 = "SERVER";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r32);

        if $z0 == 0 goto label27;

     label24:
        r28 = r46;

        r29 = r46;

     label25:
        $r19 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: java.net.Socket mClient>;

        z5 = staticinvoke <com.android.server.wm.ViewServer: boolean access$000(java.net.Socket,java.lang.String)>($r19, "4");

     label26:
        goto label44;

     label27:
        r28 = r46;

        r29 = r46;

     label28:
        $r6 = "LIST";

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r32);

        if $z1 == 0 goto label32;

     label29:
        r28 = r46;

        r29 = r46;

     label30:
        $r16 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: com.android.server.wm.ViewServer this$0>;

        $r17 = staticinvoke <com.android.server.wm.ViewServer: com.android.server.wm.WindowManagerService access$100(com.android.server.wm.ViewServer)>($r16);

        $r18 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: java.net.Socket mClient>;

        z5 = virtualinvoke $r17.<com.android.server.wm.WindowManagerService: boolean viewServerListWindows(java.net.Socket)>($r18);

     label31:
        goto label44;

     label32:
        r28 = r46;

        r29 = r46;

     label33:
        $r7 = "GET_FOCUS";

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r32);

        if $z2 == 0 goto label37;

     label34:
        r28 = r46;

        r29 = r46;

     label35:
        $r13 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: com.android.server.wm.ViewServer this$0>;

        $r14 = staticinvoke <com.android.server.wm.ViewServer: com.android.server.wm.WindowManagerService access$100(com.android.server.wm.ViewServer)>($r13);

        $r15 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: java.net.Socket mClient>;

        z5 = virtualinvoke $r14.<com.android.server.wm.WindowManagerService: boolean viewServerGetFocusedWindow(java.net.Socket)>($r15);

     label36:
        goto label44;

     label37:
        r28 = r46;

        r29 = r46;

     label38:
        $r8 = "AUTOLIST";

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r32);

        if $z3 == 0 goto label42;

     label39:
        r28 = r46;

        r29 = r46;

     label40:
        z5 = specialinvoke r0.<com.android.server.wm.ViewServer$ViewServerWorker: boolean windowManagerAutolistLoop()>();

     label41:
        goto label44;

     label42:
        r28 = r46;

        r29 = r46;

     label43:
        $r9 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: com.android.server.wm.ViewServer this$0>;

        $r10 = staticinvoke <com.android.server.wm.ViewServer: com.android.server.wm.WindowManagerService access$100(com.android.server.wm.ViewServer)>($r9);

        $r11 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: java.net.Socket mClient>;

        z5 = virtualinvoke $r10.<com.android.server.wm.WindowManagerService: boolean viewServerWindowCommand(java.net.Socket,java.lang.String,java.lang.String)>($r11, r32, r33);

     label44:
        if z5 != 0 goto label54;

        r28 = r46;

        r29 = r46;

     label45:
        r47 = new java.lang.StringBuilder;

     label46:
        r28 = r46;

        r29 = r46;

     label47:
        specialinvoke r47.<java.lang.StringBuilder: void <init>()>();

     label48:
        r28 = r46;

        r29 = r46;

     label49:
        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("An error occurred with the command: ");

     label50:
        r28 = r46;

        r29 = r46;

     label51:
        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32);

     label52:
        r28 = r46;

        r29 = r46;

     label53:
        $r12 = virtualinvoke r47.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", $r12);

     label54:
        virtualinvoke r46.<java.io.BufferedReader: void close()>();

     label55:
        goto label57;

     label56:
        $r21 := @caughtexception;

        r48 = (java.io.IOException) $r21;

        virtualinvoke r48.<java.io.IOException: void printStackTrace()>();

     label57:
        r36 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: java.net.Socket mClient>;

        if r36 == null goto label72;

     label58:
        virtualinvoke r36.<java.net.Socket: void close()>();

     label59:
        goto label61;

     label60:
        $r23 := @caughtexception;

        r49 = (java.io.IOException) $r23;

        virtualinvoke r49.<java.io.IOException: void printStackTrace()>();

     label61:
        goto label72;

     label62:
        $r26 := @caughtexception;

        goto label73;

     label63:
        $r25 := @caughtexception;

        r28 = r29;

     label64:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", "Connection error: ", $r25);

     label65:
        if r29 == null goto label69;

     label66:
        virtualinvoke r29.<java.io.BufferedReader: void close()>();

     label67:
        goto label69;

     label68:
        $r24 := @caughtexception;

        r50 = (java.io.IOException) $r24;

        virtualinvoke r50.<java.io.IOException: void printStackTrace()>();

     label69:
        r41 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: java.net.Socket mClient>;

        if r41 == null goto label72;

     label70:
        virtualinvoke r41.<java.net.Socket: void close()>();

     label71:
        goto label61;

     label72:
        return;

     label73:
        if r28 == null goto label77;

     label74:
        virtualinvoke r28.<java.io.BufferedReader: void close()>();

     label75:
        goto label77;

     label76:
        $r22 := @caughtexception;

        r51 = (java.io.IOException) $r22;

        virtualinvoke r51.<java.io.IOException: void printStackTrace()>();

     label77:
        r43 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: java.net.Socket mClient>;

        if r43 == null goto label81;

     label78:
        virtualinvoke r43.<java.net.Socket: void close()>();

     label79:
        goto label81;

     label80:
        $r27 := @caughtexception;

        r52 = (java.io.IOException) $r27;

        virtualinvoke r52.<java.io.IOException: void printStackTrace()>();

     label81:
        throw $r26;

        catch java.io.IOException from label01 to label02 with label63;
        catch java.lang.Throwable from label01 to label02 with label62;
        catch java.io.IOException from label03 to label04 with label63;
        catch java.lang.Throwable from label03 to label04 with label62;
        catch java.io.IOException from label05 to label06 with label63;
        catch java.lang.Throwable from label05 to label06 with label62;
        catch java.io.IOException from label07 to label08 with label63;
        catch java.lang.Throwable from label07 to label08 with label62;
        catch java.io.IOException from label09 to label10 with label63;
        catch java.lang.Throwable from label09 to label10 with label62;
        catch java.io.IOException from label11 to label12 with label63;
        catch java.lang.Throwable from label11 to label12 with label62;
        catch java.io.IOException from label14 to label15 with label63;
        catch java.lang.Throwable from label14 to label15 with label62;
        catch java.io.IOException from label16 to label17 with label63;
        catch java.lang.Throwable from label16 to label17 with label62;
        catch java.io.IOException from label18 to label19 with label63;
        catch java.lang.Throwable from label18 to label19 with label62;
        catch java.io.IOException from label20 to label21 with label63;
        catch java.lang.Throwable from label20 to label21 with label62;
        catch java.io.IOException from label23 to label24 with label63;
        catch java.lang.Throwable from label23 to label24 with label62;
        catch java.io.IOException from label25 to label26 with label63;
        catch java.lang.Throwable from label25 to label26 with label62;
        catch java.io.IOException from label28 to label29 with label63;
        catch java.lang.Throwable from label28 to label29 with label62;
        catch java.io.IOException from label30 to label31 with label63;
        catch java.lang.Throwable from label30 to label31 with label62;
        catch java.io.IOException from label33 to label34 with label63;
        catch java.lang.Throwable from label33 to label34 with label62;
        catch java.io.IOException from label35 to label36 with label63;
        catch java.lang.Throwable from label35 to label36 with label62;
        catch java.io.IOException from label38 to label39 with label63;
        catch java.lang.Throwable from label38 to label39 with label62;
        catch java.io.IOException from label40 to label41 with label63;
        catch java.lang.Throwable from label40 to label41 with label62;
        catch java.io.IOException from label43 to label44 with label63;
        catch java.lang.Throwable from label43 to label44 with label62;
        catch java.io.IOException from label45 to label46 with label63;
        catch java.lang.Throwable from label45 to label46 with label62;
        catch java.io.IOException from label47 to label48 with label63;
        catch java.lang.Throwable from label47 to label48 with label62;
        catch java.io.IOException from label49 to label50 with label63;
        catch java.lang.Throwable from label49 to label50 with label62;
        catch java.io.IOException from label51 to label52 with label63;
        catch java.lang.Throwable from label51 to label52 with label62;
        catch java.io.IOException from label53 to label54 with label63;
        catch java.lang.Throwable from label53 to label54 with label62;
        catch java.io.IOException from label54 to label55 with label56;
        catch java.io.IOException from label58 to label59 with label60;
        catch java.lang.Throwable from label64 to label65 with label62;
        catch java.io.IOException from label66 to label67 with label68;
        catch java.io.IOException from label70 to label71 with label60;
        catch java.io.IOException from label74 to label75 with label76;
        catch java.io.IOException from label78 to label79 with label80;
    }

    public void windowsChanged()
    {
        com.android.server.wm.ViewServer$ViewServerWorker r0;
        java.lang.Throwable $r2;

        r0 := @this: com.android.server.wm.ViewServer$ViewServerWorker;

        entermonitor r0;

     label1:
        r0.<com.android.server.wm.ViewServer$ViewServerWorker: boolean mNeedWindowListUpdate> = 1;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
