final class com.android.server.wm.VrController extends java.lang.Object
{
    private static final int FLAG_NON_VR_MODE;
    private static final int FLAG_PERSISTENT_VR_MODE;
    private static final int FLAG_VR_MODE;
    private static int[] ORIG_ENUMS;
    private static int[] PROTO_ENUMS;
    private static final java.lang.String TAG;
    private final java.lang.Object mGlobalAmLock;
    private final android.service.vr.IPersistentVrStateCallbacks mPersistentVrModeListener;
    private int mVrRenderThreadTid;
    private int mVrState;

    static void <clinit>()
    {
        int[] $r0, $r1;

        <com.android.server.wm.VrController: java.lang.String TAG> = "VrController";

        <com.android.server.wm.VrController: int FLAG_VR_MODE> = 1;

        <com.android.server.wm.VrController: int FLAG_PERSISTENT_VR_MODE> = 2;

        <com.android.server.wm.VrController: int FLAG_NON_VR_MODE> = 0;

        $r0 = newarray (int)[3];

        $r0[0] = 0;

        $r0[1] = 1;

        $r0[2] = 2;

        <com.android.server.wm.VrController: int[] ORIG_ENUMS> = $r0;

        $r1 = newarray (int)[3];

        $r1[0] = 0;

        $r1[1] = 1;

        $r1[2] = 2;

        <com.android.server.wm.VrController: int[] PROTO_ENUMS> = $r1;

        return;
    }

    public void <init>(java.lang.Object)
    {
        com.android.server.wm.VrController r0;
        java.lang.Object r1;
        com.android.server.wm.VrController$1 $r2;

        r0 := @this: com.android.server.wm.VrController;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.wm.VrController: int mVrState> = 0;

        r0.<com.android.server.wm.VrController: int mVrRenderThreadTid> = 0;

        $r2 = new com.android.server.wm.VrController$1;

        specialinvoke $r2.<com.android.server.wm.VrController$1: void <init>(com.android.server.wm.VrController)>(r0);

        r0.<com.android.server.wm.VrController: android.service.vr.IPersistentVrStateCallbacks mPersistentVrModeListener> = $r2;

        r0.<com.android.server.wm.VrController: java.lang.Object mGlobalAmLock> = r1;

        return;
    }

    static java.lang.Object access$000(com.android.server.wm.VrController)
    {
        com.android.server.wm.VrController r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.wm.VrController;

        $r1 = r0.<com.android.server.wm.VrController: java.lang.Object mGlobalAmLock>;

        return $r1;
    }

    static int access$100(com.android.server.wm.VrController, int, int, boolean)
    {
        com.android.server.wm.VrController r0;
        int i0, i1, $i2;
        boolean z0;

        r0 := @parameter0: com.android.server.wm.VrController;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        $i2 = specialinvoke r0.<com.android.server.wm.VrController: int setVrRenderThreadLocked(int,int,boolean)>(i0, i1, z0);

        return $i2;
    }

    static int access$272(com.android.server.wm.VrController, int)
    {
        com.android.server.wm.VrController r0;
        int $i0, i1, i2;

        r0 := @parameter0: com.android.server.wm.VrController;

        i1 := @parameter1: int;

        $i0 = r0.<com.android.server.wm.VrController: int mVrState>;

        i2 = $i0 & i1;

        r0.<com.android.server.wm.VrController: int mVrState> = i2;

        return i2;
    }

    static int access$276(com.android.server.wm.VrController, int)
    {
        com.android.server.wm.VrController r0;
        int $i0, i1, i2;

        r0 := @parameter0: com.android.server.wm.VrController;

        i1 := @parameter1: int;

        $i0 = r0.<com.android.server.wm.VrController: int mVrState>;

        i2 = $i0 | i1;

        r0.<com.android.server.wm.VrController: int mVrState> = i2;

        return i2;
    }

    static int access$300(com.android.server.wm.VrController, int, boolean)
    {
        com.android.server.wm.VrController r0;
        int i0, $i1;
        boolean z0;

        r0 := @parameter0: com.android.server.wm.VrController;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $i1 = specialinvoke r0.<com.android.server.wm.VrController: int setPersistentVrRenderThreadLocked(int,boolean)>(i0, z0);

        return $i1;
    }

    private boolean changeVrModeLocked(boolean, com.android.server.wm.WindowProcessController)
    {
        com.android.server.wm.VrController r0;
        com.android.server.wm.WindowProcessController r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9;
        boolean z1, z2;

        r0 := @this: com.android.server.wm.VrController;

        z1 := @parameter0: boolean;

        r1 := @parameter1: com.android.server.wm.WindowProcessController;

        i0 = r0.<com.android.server.wm.VrController: int mVrState>;

        if z1 == 0 goto label1;

        $i8 = r0.<com.android.server.wm.VrController: int mVrState>;

        $i9 = $i8 | 1;

        r0.<com.android.server.wm.VrController: int mVrState> = $i9;

        goto label2;

     label1:
        $i1 = r0.<com.android.server.wm.VrController: int mVrState>;

        $i2 = $i1 & -2;

        r0.<com.android.server.wm.VrController: int mVrState> = $i2;

     label2:
        $i3 = r0.<com.android.server.wm.VrController: int mVrState>;

        if i0 == $i3 goto label3;

        z2 = 1;

        goto label4;

     label3:
        z2 = 0;

     label4:
        if z2 == 0 goto label6;

        if r1 == null goto label5;

        $i4 = r1.<com.android.server.wm.WindowProcessController: int mVrThreadTid>;

        if $i4 <= 0 goto label6;

        $i5 = r1.<com.android.server.wm.WindowProcessController: int mVrThreadTid>;

        $i6 = virtualinvoke r1.<com.android.server.wm.WindowProcessController: int getCurrentSchedulingGroup()>();

        specialinvoke r0.<com.android.server.wm.VrController: int setVrRenderThreadLocked(int,int,boolean)>($i5, $i6, 0);

        goto label6;

     label5:
        specialinvoke r0.<com.android.server.wm.VrController: void clearVrRenderThreadLocked(boolean)>(0);

     label6:
        return z2;
    }

    private void clearVrRenderThreadLocked(boolean)
    {
        com.android.server.wm.VrController r0;
        boolean z0;

        r0 := @this: com.android.server.wm.VrController;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.android.server.wm.VrController: int updateVrRenderThreadLocked(int,boolean)>(0, z0);

        return;
    }

    private void enforceThreadInProcess(int, int)
    {
        com.android.server.wm.VrController r0;
        int i0, i1;
        boolean $z0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.android.server.wm.VrController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = staticinvoke <android.os.Process: boolean isThreadInProcess(int,int)>(i1, i0);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("VR thread does not belong to process");

        throw $r1;
    }

    private boolean hasPersistentVrFlagSet()
    {
        com.android.server.wm.VrController r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.wm.VrController;

        $i0 = r0.<com.android.server.wm.VrController: int mVrState>;

        $i1 = $i0 & 2;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean inVrMode()
    {
        com.android.server.wm.VrController r0;
        int i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.wm.VrController;

        i0 = r0.<com.android.server.wm.VrController: int mVrState>;

        z0 = 1;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private int setPersistentVrRenderThreadLocked(int, boolean)
    {
        com.android.server.wm.VrController r0;
        int i0, $i1, $i2;
        boolean z0, $z1;

        r0 := @this: com.android.server.wm.VrController;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $z1 = specialinvoke r0.<com.android.server.wm.VrController: boolean hasPersistentVrFlagSet()>();

        if $z1 != 0 goto label2;

        if z0 != 0 goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("VrController", "Failed to set persistent VR thread, system not in persistent VR mode.");

     label1:
        $i2 = r0.<com.android.server.wm.VrController: int mVrRenderThreadTid>;

        return $i2;

     label2:
        $i1 = specialinvoke r0.<com.android.server.wm.VrController: int updateVrRenderThreadLocked(int,boolean)>(i0, z0);

        return $i1;
    }

    private int setVrRenderThreadLocked(int, int, boolean)
    {
        com.android.server.wm.VrController r0;
        int i0, i1, $i3, $i4;
        boolean z0, z1, z2;
        java.lang.String r4, $r6;
        java.lang.StringBuilder $r5;

        r0 := @this: com.android.server.wm.VrController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 = specialinvoke r0.<com.android.server.wm.VrController: boolean inVrMode()>();

        z2 = specialinvoke r0.<com.android.server.wm.VrController: boolean hasPersistentVrFlagSet()>();

        if z1 == 0 goto label2;

        if z2 != 0 goto label2;

        if i1 == 3 goto label1;

        goto label2;

     label1:
        $i3 = specialinvoke r0.<com.android.server.wm.VrController: int updateVrRenderThreadLocked(int,boolean)>(i0, z0);

        return $i3;

     label2:
        if z0 != 0 goto label5;

        r4 = "caller is not the current top application.";

        if z1 != 0 goto label3;

        r4 = "system not in VR mode.";

        goto label4;

     label3:
        if z2 == 0 goto label4;

        r4 = "system in persistent VR mode.";

     label4:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to set VR thread, ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("VrController", $r6);

     label5:
        $i4 = r0.<com.android.server.wm.VrController: int mVrRenderThreadTid>;

        return $i4;
    }

    private int updateVrRenderThreadLocked(int, boolean)
    {
        com.android.server.wm.VrController r0;
        int i0, i1, $i2;
        boolean z0;

        r0 := @this: com.android.server.wm.VrController;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        i1 = r0.<com.android.server.wm.VrController: int mVrRenderThreadTid>;

        if i1 != i0 goto label1;

        return i1;

     label1:
        if i1 <= 0 goto label2;

        staticinvoke <com.android.server.am.ActivityManagerService: boolean scheduleAsRegularPriority(int,boolean)>(i1, z0);

        r0.<com.android.server.wm.VrController: int mVrRenderThreadTid> = 0;

     label2:
        if i0 <= 0 goto label3;

        r0.<com.android.server.wm.VrController: int mVrRenderThreadTid> = i0;

        staticinvoke <com.android.server.am.ActivityManagerService: boolean scheduleAsFifoPriority(int,boolean)>(i0, z0);

     label3:
        $i2 = r0.<com.android.server.wm.VrController: int mVrRenderThreadTid>;

        return $i2;
    }

    void dumpDebug(android.util.proto.ProtoOutputStream, long)
    {
        com.android.server.wm.VrController r0;
        android.util.proto.ProtoOutputStream r1;
        int[] $r2, $r3;
        int $i0, $i1;
        long l2, l3;

        r0 := @this: com.android.server.wm.VrController;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        l2 := @parameter1: long;

        l3 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(l2);

        $i0 = r0.<com.android.server.wm.VrController: int mVrState>;

        $r3 = <com.android.server.wm.VrController: int[] ORIG_ENUMS>;

        $r2 = <com.android.server.wm.VrController: int[] PROTO_ENUMS>;

        staticinvoke <android.util.proto.ProtoUtils: void writeBitWiseFlagsToProtoEnum(android.util.proto.ProtoOutputStream,long,int,int[],int[])>(r1, 2259152797697L, $i0, $r3, $r2);

        $i1 = r0.<com.android.server.wm.VrController: int mVrRenderThreadTid>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464258L, $i1);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l3);

        return;
    }

    public void onSystemReady()
    {
        com.android.server.wm.VrController r0;
        com.android.server.vr.VrManagerInternal r1;
        java.lang.Object $r2;
        android.service.vr.IPersistentVrStateCallbacks $r3;

        r0 := @this: com.android.server.wm.VrController;

        $r2 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/vr/VrManagerInternal;");

        r1 = (com.android.server.vr.VrManagerInternal) $r2;

        if r1 == null goto label1;

        $r3 = r0.<com.android.server.wm.VrController: android.service.vr.IPersistentVrStateCallbacks mPersistentVrModeListener>;

        virtualinvoke r1.<com.android.server.vr.VrManagerInternal: void addPersistentVrModeStateListener(android.service.vr.IPersistentVrStateCallbacks)>($r3);

     label1:
        return;
    }

    public void onTopProcChangedLocked(com.android.server.wm.WindowProcessController)
    {
        com.android.server.wm.VrController r0;
        com.android.server.wm.WindowProcessController r1;
        int i0, $i1, $i2, $i3;

        r0 := @this: com.android.server.wm.VrController;

        r1 := @parameter0: com.android.server.wm.WindowProcessController;

        i0 = virtualinvoke r1.<com.android.server.wm.WindowProcessController: int getCurrentSchedulingGroup()>();

        if i0 != 3 goto label1;

        $i3 = r1.<com.android.server.wm.WindowProcessController: int mVrThreadTid>;

        specialinvoke r0.<com.android.server.wm.VrController: int setVrRenderThreadLocked(int,int,boolean)>($i3, i0, 1);

        goto label2;

     label1:
        $i2 = r1.<com.android.server.wm.WindowProcessController: int mVrThreadTid>;

        $i1 = r0.<com.android.server.wm.VrController: int mVrRenderThreadTid>;

        if $i2 != $i1 goto label2;

        specialinvoke r0.<com.android.server.wm.VrController: void clearVrRenderThreadLocked(boolean)>(1);

     label2:
        return;
    }

    public boolean onVrModeChanged(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.VrController r0;
        com.android.server.vr.VrManagerInternal r1;
        java.lang.Object r2, $r5;
        android.content.ComponentName r3, r4, $r6;
        int i0, i1;
        boolean z0, z1;
        android.content.pm.ActivityInfo $r7;
        com.android.server.wm.WindowProcessController $r8, $r9, $r10;
        java.lang.Throwable $r11, $r12, $r13, r15;
        com.android.server.wm.ActivityRecord r14;

        r0 := @this: com.android.server.wm.VrController;

        r14 := @parameter0: com.android.server.wm.ActivityRecord;

        $r5 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/vr/VrManagerInternal;");

        r1 = (com.android.server.vr.VrManagerInternal) $r5;

        z1 = 0;

        if r1 != null goto label01;

        return 0;

     label01:
        r2 = r0.<com.android.server.wm.VrController: java.lang.Object mGlobalAmLock>;

        entermonitor r2;

     label02:
        $r6 = r14.<com.android.server.wm.ActivityRecord: android.content.ComponentName requestedVrComponent>;

        if $r6 == null goto label04;

     label03:
        z1 = 1;

     label04:
        r3 = r14.<com.android.server.wm.ActivityRecord: android.content.ComponentName requestedVrComponent>;

        i0 = r14.<com.android.server.wm.ActivityRecord: int mUserId>;

        $r7 = r14.<com.android.server.wm.ActivityRecord: android.content.pm.ActivityInfo info>;

        r4 = virtualinvoke $r7.<android.content.pm.ActivityInfo: android.content.ComponentName getComponentName()>();

        $r8 = r14.<com.android.server.wm.ActivityRecord: com.android.server.wm.WindowProcessController app>;

        z0 = specialinvoke r0.<com.android.server.wm.VrController: boolean changeVrModeLocked(boolean,com.android.server.wm.WindowProcessController)>(z1, $r8);

     label05:
        $r9 = r14.<com.android.server.wm.ActivityRecord: com.android.server.wm.WindowProcessController app>;

        if $r9 == null goto label07;

        $r10 = r14.<com.android.server.wm.ActivityRecord: com.android.server.wm.WindowProcessController app>;

        i1 = virtualinvoke $r10.<com.android.server.wm.WindowProcessController: int getPid()>();

     label06:
        goto label08;

     label07:
        i1 = -1;

     label08:
        exitmonitor r2;

     label09:
        virtualinvoke r1.<com.android.server.vr.VrManagerInternal: void setVrMode(boolean,android.content.ComponentName,int,int,android.content.ComponentName)>(z1, r3, i0, i1, r4);

        return z0;

     label10:
        $r11 := @caughtexception;

        r15 = $r11;

        goto label13;

     label11:
        $r13 := @caughtexception;

        r15 = $r13;

        goto label13;

     label12:
        $r12 := @caughtexception;

        r15 = $r12;

     label13:
        exitmonitor r2;

     label14:
        throw r15;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void setPersistentVrThreadLocked(int, int, com.android.server.wm.WindowProcessController)
    {
        com.android.server.wm.VrController r0;
        int i0, i1;
        com.android.server.wm.WindowProcessController r1;
        boolean $z0;

        r0 := @this: com.android.server.wm.VrController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: com.android.server.wm.WindowProcessController;

        $z0 = specialinvoke r0.<com.android.server.wm.VrController: boolean hasPersistentVrFlagSet()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("VrController", "Persistent VR thread may only be set in persistent VR mode!");

        return;

     label1:
        if r1 != null goto label2;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("VrController", "Persistent VR thread not set, calling process doesn\'t exist!");

        return;

     label2:
        if i0 == 0 goto label3;

        specialinvoke r0.<com.android.server.wm.VrController: void enforceThreadInProcess(int,int)>(i0, i1);

     label3:
        specialinvoke r0.<com.android.server.wm.VrController: int setPersistentVrRenderThreadLocked(int,boolean)>(i0, 0);

        return;
    }

    public void setVrThreadLocked(int, int, com.android.server.wm.WindowProcessController)
    {
        com.android.server.wm.VrController r0;
        int i0, $i1, i6, i7;
        com.android.server.wm.WindowProcessController r1;
        boolean z0, $z1;

        r0 := @this: com.android.server.wm.VrController;

        i0 := @parameter0: int;

        i6 := @parameter1: int;

        r1 := @parameter2: com.android.server.wm.WindowProcessController;

        $z1 = specialinvoke r0.<com.android.server.wm.VrController: boolean hasPersistentVrFlagSet()>();

        if $z1 == 0 goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("VrController", "VR thread cannot be set in persistent VR mode!");

        return;

     label1:
        if r1 != null goto label2;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("VrController", "Persistent VR thread not set, calling process doesn\'t exist!");

        return;

     label2:
        if i0 == 0 goto label3;

        specialinvoke r0.<com.android.server.wm.VrController: void enforceThreadInProcess(int,int)>(i0, i6);

     label3:
        z0 = specialinvoke r0.<com.android.server.wm.VrController: boolean inVrMode()>();

        i7 = 0;

        if z0 != 0 goto label4;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("VrController", "VR thread cannot be set when not in VR mode!");

        goto label5;

     label4:
        $i1 = virtualinvoke r1.<com.android.server.wm.WindowProcessController: int getCurrentSchedulingGroup()>();

        specialinvoke r0.<com.android.server.wm.VrController: int setVrRenderThreadLocked(int,int,boolean)>(i0, $i1, 0);

     label5:
        if i0 <= 0 goto label6;

        i7 = i0;

     label6:
        r1.<com.android.server.wm.WindowProcessController: int mVrThreadTid> = i7;

        return;
    }

    public boolean shouldDisableNonVrUiLocked()
    {
        com.android.server.wm.VrController r0;
        int $i0;
        boolean z0;

        r0 := @this: com.android.server.wm.VrController;

        $i0 = r0.<com.android.server.wm.VrController: int mVrState>;

        if $i0 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public java.lang.String toString()
    {
        com.android.server.wm.VrController r0;
        java.lang.Object[] $r1;
        int $i0, $i1;
        java.lang.Integer $r2, $r3;
        java.lang.String $r4;

        r0 := @this: com.android.server.wm.VrController;

        $r1 = newarray (java.lang.Object)[2];

        $i0 = r0.<com.android.server.wm.VrController: int mVrState>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r2;

        $i1 = r0.<com.android.server.wm.VrController: int mVrRenderThreadTid>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[1] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[VrState=0x%x,VrRenderThreadTid=%d]", $r1);

        return $r4;
    }
}
