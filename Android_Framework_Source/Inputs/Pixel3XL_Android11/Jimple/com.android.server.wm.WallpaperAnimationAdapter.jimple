class com.android.server.wm.WallpaperAnimationAdapter extends java.lang.Object implements com.android.server.wm.AnimationAdapter
{
    private static final java.lang.String TAG;
    private java.util.function.Consumer mAnimationCanceledRunnable;
    private android.view.SurfaceControl mCapturedLeash;
    private com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback mCapturedLeashFinishCallback;
    private long mDurationHint;
    private int mLastAnimationType;
    private long mStatusBarTransitionDelay;
    private android.view.RemoteAnimationTarget mTarget;
    private final com.android.server.wm.WallpaperWindowToken mWallpaperToken;

    void <init>(com.android.server.wm.WallpaperWindowToken, long, long, java.util.function.Consumer)
    {
        com.android.server.wm.WallpaperAnimationAdapter r0;
        com.android.server.wm.WallpaperWindowToken r1;
        long l0, l1;
        java.util.function.Consumer r2;

        r0 := @this: com.android.server.wm.WallpaperAnimationAdapter;

        r1 := @parameter0: com.android.server.wm.WallpaperWindowToken;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r2 := @parameter3: java.util.function.Consumer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.wm.WallpaperAnimationAdapter: com.android.server.wm.WallpaperWindowToken mWallpaperToken> = r1;

        r0.<com.android.server.wm.WallpaperAnimationAdapter: long mDurationHint> = l0;

        r0.<com.android.server.wm.WallpaperAnimationAdapter: long mStatusBarTransitionDelay> = l1;

        r0.<com.android.server.wm.WallpaperAnimationAdapter: java.util.function.Consumer mAnimationCanceledRunnable> = r2;

        return;
    }

    static void lambda$startWallpaperAnimations$0(long, long, java.util.function.Consumer, java.util.ArrayList, java.util.ArrayList, com.android.server.wm.WallpaperWindowToken)
    {
        long l0, l1;
        java.util.ArrayList r0, r1;
        com.android.server.wm.WallpaperWindowToken r2;
        java.lang.String r3, r14;
        com.android.server.wm.DisplayContent $r4;
        com.android.server.wm.WallpaperController $r5;
        boolean $z0, $z1, $z4;
        com.android.server.wm.WallpaperAnimationAdapter $r6;
        android.view.SurfaceControl$Transaction $r7;
        android.view.RemoteAnimationTarget $r8;
        java.lang.Object[] $r9, $r11;
        com.android.server.wm.ProtoLogGroup $r10, $r12;
        java.util.function.Consumer r13;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r13 := @parameter2: java.util.function.Consumer;

        r0 := @parameter3: java.util.ArrayList;

        r1 := @parameter4: java.util.ArrayList;

        r2 := @parameter5: com.android.server.wm.WallpaperWindowToken;

        $r4 = virtualinvoke r2.<com.android.server.wm.WallpaperWindowToken: com.android.server.wm.DisplayContent getDisplayContent()>();

        $r5 = $r4.<com.android.server.wm.DisplayContent: com.android.server.wm.WallpaperController mWallpaperController>;

        $z0 = virtualinvoke $r5.<com.android.server.wm.WallpaperController: boolean isWallpaperVisible()>();

        if $z0 != 0 goto label2;

        $z4 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_REMOTE_ANIMATIONS_enabled>;

        if $z4 == 0 goto label1;

        r14 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        $r12 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_REMOTE_ANIMATIONS>;

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = r14;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void d(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r12, 457951957, 0, null, $r11);

     label1:
        return;

     label2:
        $z1 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_REMOTE_ANIMATIONS_enabled>;

        if $z1 == 0 goto label3;

        r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        $r10 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_REMOTE_ANIMATIONS>;

        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = r3;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void d(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r10, 2057434754, 0, null, $r9);

     label3:
        $r6 = new com.android.server.wm.WallpaperAnimationAdapter;

        specialinvoke $r6.<com.android.server.wm.WallpaperAnimationAdapter: void <init>(com.android.server.wm.WallpaperWindowToken,long,long,java.util.function.Consumer)>(r2, l0, l1, r13);

        $r7 = virtualinvoke r2.<com.android.server.wm.WallpaperWindowToken: android.view.SurfaceControl$Transaction getPendingTransaction()>();

        virtualinvoke r2.<com.android.server.wm.WallpaperWindowToken: void startAnimation(android.view.SurfaceControl$Transaction,com.android.server.wm.AnimationAdapter,boolean,int)>($r7, $r6, 0, 16);

        $r8 = virtualinvoke $r6.<com.android.server.wm.WallpaperAnimationAdapter: android.view.RemoteAnimationTarget createRemoteAnimationTarget()>();

        virtualinvoke r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        return;
    }

    public static android.view.RemoteAnimationTarget[] startWallpaperAnimations(com.android.server.wm.WindowManagerService, long, long, java.util.function.Consumer, java.util.ArrayList)
    {
        com.android.server.wm.WindowManagerService r0;
        long l0, l1;
        java.util.function.Consumer r1;
        java.util.ArrayList r2, $r4;
        com.android.server.wm._$$Lambda$WallpaperAnimationAdapter$_EwtM9NXnIMpRq_OzBHTdmhakaM $r5;
        com.android.server.wm.RootWindowContainer $r6;
        int $i2;
        android.view.RemoteAnimationTarget[] $r7, $r9;
        java.lang.Object[] $r8;

        r0 := @parameter0: com.android.server.wm.WindowManagerService;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r1 := @parameter3: java.util.function.Consumer;

        r2 := @parameter4: java.util.ArrayList;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r6 = r0.<com.android.server.wm.WindowManagerService: com.android.server.wm.RootWindowContainer mRoot>;

        $r5 = new com.android.server.wm._$$Lambda$WallpaperAnimationAdapter$_EwtM9NXnIMpRq_OzBHTdmhakaM;

        specialinvoke $r5.<com.android.server.wm._$$Lambda$WallpaperAnimationAdapter$_EwtM9NXnIMpRq_OzBHTdmhakaM: void <init>(long,long,java.util.function.Consumer,java.util.ArrayList,java.util.ArrayList)>(l0, l1, r1, $r4, r2);

        virtualinvoke $r6.<com.android.server.wm.RootWindowContainer: void forAllWallpaperWindows(java.util.function.Consumer)>($r5);

        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $r7 = newarray (android.view.RemoteAnimationTarget)[$i2];

        $r8 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        $r9 = (android.view.RemoteAnimationTarget[]) $r8;

        return $r9;
    }

    android.view.RemoteAnimationTarget createRemoteAnimationTarget()
    {
        com.android.server.wm.WallpaperAnimationAdapter r0;
        android.view.RemoteAnimationTarget $r2;
        android.view.SurfaceControl $r3;
        com.android.server.wm.WallpaperWindowToken $r4, $r6;
        int $i0;
        android.graphics.Point $r5;
        android.app.WindowConfiguration $r7;

        r0 := @this: com.android.server.wm.WallpaperAnimationAdapter;

        $r2 = new android.view.RemoteAnimationTarget;

        $r3 = virtualinvoke r0.<com.android.server.wm.WallpaperAnimationAdapter: android.view.SurfaceControl getLeash()>();

        $r4 = r0.<com.android.server.wm.WallpaperAnimationAdapter: com.android.server.wm.WallpaperWindowToken mWallpaperToken>;

        $i0 = virtualinvoke $r4.<com.android.server.wm.WallpaperWindowToken: int getPrefixOrderIndex()>();

        $r5 = new android.graphics.Point;

        specialinvoke $r5.<android.graphics.Point: void <init>()>();

        $r6 = r0.<com.android.server.wm.WallpaperAnimationAdapter: com.android.server.wm.WallpaperWindowToken mWallpaperToken>;

        $r7 = virtualinvoke $r6.<com.android.server.wm.WallpaperWindowToken: android.app.WindowConfiguration getWindowConfiguration()>();

        specialinvoke $r2.<android.view.RemoteAnimationTarget: void <init>(int,int,android.view.SurfaceControl,boolean,android.graphics.Rect,android.graphics.Rect,int,android.graphics.Point,android.graphics.Rect,android.graphics.Rect,android.app.WindowConfiguration,boolean,android.view.SurfaceControl,android.graphics.Rect)>(-1, -1, $r3, 0, null, null, $i0, $r5, null, null, $r7, 1, null, null);

        r0.<com.android.server.wm.WallpaperAnimationAdapter: android.view.RemoteAnimationTarget mTarget> = $r2;

        return $r2;
    }

    public void dump(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.wm.WallpaperAnimationAdapter r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r10;
        android.view.RemoteAnimationTarget r3, $r6;
        com.android.server.wm.WallpaperWindowToken $r5;
        java.lang.StringBuilder $r7;

        r0 := @this: com.android.server.wm.WallpaperAnimationAdapter;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("token=");

        $r5 = r0.<com.android.server.wm.WallpaperAnimationAdapter: com.android.server.wm.WallpaperWindowToken mWallpaperToken>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r5);

        $r6 = r0.<com.android.server.wm.WallpaperAnimationAdapter: android.view.RemoteAnimationTarget mTarget>;

        if $r6 == null goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Target:");

        r3 = r0.<com.android.server.wm.WallpaperAnimationAdapter: android.view.RemoteAnimationTarget mTarget>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<android.view.RemoteAnimationTarget: void dump(java.io.PrintWriter,java.lang.String)>(r1, $r10);

        goto label2;

     label1:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Target: null");

     label2:
        return;
    }

    public void dumpDebug(android.util.proto.ProtoOutputStream)
    {
        com.android.server.wm.WallpaperAnimationAdapter r0;
        android.util.proto.ProtoOutputStream r1;
        long l0;
        android.view.RemoteAnimationTarget r2;

        r0 := @this: com.android.server.wm.WallpaperAnimationAdapter;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        l0 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268034L);

        r2 = r0.<com.android.server.wm.WallpaperAnimationAdapter: android.view.RemoteAnimationTarget mTarget>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.view.RemoteAnimationTarget: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r1, 1146756268033L);

     label1:
        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l0);

        return;
    }

    public long getDurationHint()
    {
        com.android.server.wm.WallpaperAnimationAdapter r0;
        long $l0;

        r0 := @this: com.android.server.wm.WallpaperAnimationAdapter;

        $l0 = r0.<com.android.server.wm.WallpaperAnimationAdapter: long mDurationHint>;

        return $l0;
    }

    int getLastAnimationType()
    {
        com.android.server.wm.WallpaperAnimationAdapter r0;
        int $i0;

        r0 := @this: com.android.server.wm.WallpaperAnimationAdapter;

        $i0 = r0.<com.android.server.wm.WallpaperAnimationAdapter: int mLastAnimationType>;

        return $i0;
    }

    android.view.SurfaceControl getLeash()
    {
        com.android.server.wm.WallpaperAnimationAdapter r0;
        android.view.SurfaceControl $r1;

        r0 := @this: com.android.server.wm.WallpaperAnimationAdapter;

        $r1 = r0.<com.android.server.wm.WallpaperAnimationAdapter: android.view.SurfaceControl mCapturedLeash>;

        return $r1;
    }

    com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback getLeashFinishedCallback()
    {
        com.android.server.wm.WallpaperAnimationAdapter r0;
        com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback $r1;

        r0 := @this: com.android.server.wm.WallpaperAnimationAdapter;

        $r1 = r0.<com.android.server.wm.WallpaperAnimationAdapter: com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback mCapturedLeashFinishCallback>;

        return $r1;
    }

    public boolean getShowWallpaper()
    {
        com.android.server.wm.WallpaperAnimationAdapter r0;

        r0 := @this: com.android.server.wm.WallpaperAnimationAdapter;

        return 0;
    }

    public long getStatusBarTransitionsStartTime()
    {
        com.android.server.wm.WallpaperAnimationAdapter r0;
        long $l0, $l1, $l2;

        r0 := @this: com.android.server.wm.WallpaperAnimationAdapter;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l1 = r0.<com.android.server.wm.WallpaperAnimationAdapter: long mStatusBarTransitionDelay>;

        $l2 = $l0 + $l1;

        return $l2;
    }

    com.android.server.wm.WallpaperWindowToken getToken()
    {
        com.android.server.wm.WallpaperAnimationAdapter r0;
        com.android.server.wm.WallpaperWindowToken $r1;

        r0 := @this: com.android.server.wm.WallpaperAnimationAdapter;

        $r1 = r0.<com.android.server.wm.WallpaperAnimationAdapter: com.android.server.wm.WallpaperWindowToken mWallpaperToken>;

        return $r1;
    }

    public void onAnimationCancelled(android.view.SurfaceControl)
    {
        com.android.server.wm.WallpaperAnimationAdapter r0;
        android.view.SurfaceControl r1;
        boolean $z0;
        java.util.function.Consumer $r2;
        java.lang.Object[] $r3;
        com.android.server.wm.ProtoLogGroup $r4;

        r0 := @this: com.android.server.wm.WallpaperAnimationAdapter;

        r1 := @parameter0: android.view.SurfaceControl;

        $z0 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_REMOTE_ANIMATIONS_enabled>;

        if $z0 == 0 goto label1;

        $r4 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_REMOTE_ANIMATIONS>;

        $r3 = (java.lang.Object[]) null;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void d(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r4, -760801764, 0, null, $r3);

     label1:
        $r2 = r0.<com.android.server.wm.WallpaperAnimationAdapter: java.util.function.Consumer mAnimationCanceledRunnable>;

        interfaceinvoke $r2.<java.util.function.Consumer: void accept(java.lang.Object)>(r0);

        return;
    }

    public void startAnimation(android.view.SurfaceControl, android.view.SurfaceControl$Transaction, int, com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback)
    {
        com.android.server.wm.WallpaperAnimationAdapter r0;
        android.view.SurfaceControl r1;
        android.view.SurfaceControl$Transaction r2;
        int i0, $i1;
        com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback r3;
        boolean $z0;
        com.android.server.wm.WallpaperWindowToken $r4;
        java.lang.Object[] $r6;
        com.android.server.wm.ProtoLogGroup $r7;

        r0 := @this: com.android.server.wm.WallpaperAnimationAdapter;

        r1 := @parameter0: android.view.SurfaceControl;

        r2 := @parameter1: android.view.SurfaceControl$Transaction;

        i0 := @parameter2: int;

        r3 := @parameter3: com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback;

        $z0 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_REMOTE_ANIMATIONS_enabled>;

        if $z0 == 0 goto label1;

        $r7 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_REMOTE_ANIMATIONS>;

        $r6 = (java.lang.Object[]) null;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void d(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r7, 1073230342, 0, null, $r6);

     label1:
        $r4 = r0.<com.android.server.wm.WallpaperAnimationAdapter: com.android.server.wm.WallpaperWindowToken mWallpaperToken>;

        $i1 = virtualinvoke $r4.<com.android.server.wm.WallpaperWindowToken: int getPrefixOrderIndex()>();

        virtualinvoke r2.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setLayer(android.view.SurfaceControl,int)>(r1, $i1);

        r0.<com.android.server.wm.WallpaperAnimationAdapter: android.view.SurfaceControl mCapturedLeash> = r1;

        r0.<com.android.server.wm.WallpaperAnimationAdapter: com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback mCapturedLeashFinishCallback> = r3;

        r0.<com.android.server.wm.WallpaperAnimationAdapter: int mLastAnimationType> = i0;

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.wm.WallpaperAnimationAdapter: java.lang.String TAG> = "WallpaperAnimationAdapter";

        return;
    }
}
