final class com.android.server.wm.WallpaperController$FindWallpaperTargetResult extends java.lang.Object
{
    boolean resetTopWallpaper;
    com.android.server.wm.WindowState topWallpaper;
    boolean useTopWallpaperAsTarget;
    com.android.server.wm.WindowState wallpaperTarget;

    private void <init>()
    {
        com.android.server.wm.WallpaperController$FindWallpaperTargetResult r0;

        r0 := @this: com.android.server.wm.WallpaperController$FindWallpaperTargetResult;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.wm.WallpaperController$FindWallpaperTargetResult: com.android.server.wm.WindowState topWallpaper> = null;

        r0.<com.android.server.wm.WallpaperController$FindWallpaperTargetResult: boolean useTopWallpaperAsTarget> = 0;

        r0.<com.android.server.wm.WallpaperController$FindWallpaperTargetResult: com.android.server.wm.WindowState wallpaperTarget> = null;

        r0.<com.android.server.wm.WallpaperController$FindWallpaperTargetResult: boolean resetTopWallpaper> = 0;

        return;
    }

    void <init>(com.android.server.wm.WallpaperController$1)
    {
        com.android.server.wm.WallpaperController$FindWallpaperTargetResult r0;
        com.android.server.wm.WallpaperController$1 r1;

        r0 := @this: com.android.server.wm.WallpaperController$FindWallpaperTargetResult;

        r1 := @parameter0: com.android.server.wm.WallpaperController$1;

        specialinvoke r0.<com.android.server.wm.WallpaperController$FindWallpaperTargetResult: void <init>()>();

        return;
    }

    void reset()
    {
        com.android.server.wm.WallpaperController$FindWallpaperTargetResult r0;

        r0 := @this: com.android.server.wm.WallpaperController$FindWallpaperTargetResult;

        r0.<com.android.server.wm.WallpaperController$FindWallpaperTargetResult: com.android.server.wm.WindowState topWallpaper> = null;

        r0.<com.android.server.wm.WallpaperController$FindWallpaperTargetResult: com.android.server.wm.WindowState wallpaperTarget> = null;

        r0.<com.android.server.wm.WallpaperController$FindWallpaperTargetResult: boolean useTopWallpaperAsTarget> = 0;

        r0.<com.android.server.wm.WallpaperController$FindWallpaperTargetResult: boolean resetTopWallpaper> = 0;

        return;
    }

    void setTopWallpaper(com.android.server.wm.WindowState)
    {
        com.android.server.wm.WallpaperController$FindWallpaperTargetResult r0;
        com.android.server.wm.WindowState r1;

        r0 := @this: com.android.server.wm.WallpaperController$FindWallpaperTargetResult;

        r1 := @parameter0: com.android.server.wm.WindowState;

        r0.<com.android.server.wm.WallpaperController$FindWallpaperTargetResult: com.android.server.wm.WindowState topWallpaper> = r1;

        return;
    }

    void setUseTopWallpaperAsTarget(boolean)
    {
        com.android.server.wm.WallpaperController$FindWallpaperTargetResult r0;
        boolean z0;

        r0 := @this: com.android.server.wm.WallpaperController$FindWallpaperTargetResult;

        z0 := @parameter0: boolean;

        r0.<com.android.server.wm.WallpaperController$FindWallpaperTargetResult: boolean useTopWallpaperAsTarget> = z0;

        return;
    }

    void setWallpaperTarget(com.android.server.wm.WindowState)
    {
        com.android.server.wm.WallpaperController$FindWallpaperTargetResult r0;
        com.android.server.wm.WindowState r1;

        r0 := @this: com.android.server.wm.WallpaperController$FindWallpaperTargetResult;

        r1 := @parameter0: com.android.server.wm.WindowState;

        r0.<com.android.server.wm.WallpaperController$FindWallpaperTargetResult: com.android.server.wm.WindowState wallpaperTarget> = r1;

        return;
    }
}
