class com.android.server.wm.Watermark extends java.lang.Object
{
    private final int mDeltaX;
    private final int mDeltaY;
    private final android.view.Display mDisplay;
    private boolean mDrawNeeded;
    private int mLastDH;
    private int mLastDW;
    private final android.view.Surface mSurface;
    private final android.view.SurfaceControl mSurfaceControl;
    private final java.lang.String mText;
    private final int mTextHeight;
    private final android.graphics.Paint mTextPaint;
    private final int mTextWidth;
    private final java.lang.String[] mTokens;

    void <init>(java.util.function.Supplier, com.android.server.wm.DisplayContent, android.util.DisplayMetrics, java.lang.String[], android.view.SurfaceControl$Transaction)
    {
        com.android.server.wm.Watermark r0;
        java.lang.String[] r1, $r7, $r29, $r31;
        android.view.SurfaceControl$Transaction r2, $r25, $r26;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19, i22, i23, $i24, $i25, $i26, i28, i29, i30, i31, i32;
        java.lang.Object $r3;
        android.view.Surface $r4, $r28;
        android.view.Display $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r8, $r9, $r16, $r30, $r32;
        android.graphics.Paint $r10, $r12, $r15, $r17, $r18, $r19;
        float $f0, $f1, $f2, $f3, $f4;
        android.graphics.Typeface $r11, $r13;
        android.view.SurfaceControl$Builder $r20, $r21, $r22, $r23, $r24;
        android.view.Surface$OutOfResourcesException $r34;
        java.util.function.Supplier r35;
        com.android.server.wm.DisplayContent r36;
        android.util.DisplayMetrics r37;
        char c20, c21, $c27;
        android.graphics.Paint$FontMetricsInt r40;
        android.view.SurfaceControl r41, r42;

        r0 := @this: com.android.server.wm.Watermark;

        r35 := @parameter0: java.util.function.Supplier;

        r36 := @parameter1: com.android.server.wm.DisplayContent;

        r37 := @parameter2: android.util.DisplayMetrics;

        r1 := @parameter3: java.lang.String[];

        r2 := @parameter4: android.view.SurfaceControl$Transaction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = interfaceinvoke r35.<java.util.function.Supplier: java.lang.Object get()>();

        $r4 = (android.view.Surface) $r3;

        r0.<com.android.server.wm.Watermark: android.view.Surface mSurface> = $r4;

        $r5 = virtualinvoke r36.<com.android.server.wm.DisplayContent: android.view.Display getDisplay()>();

        r0.<com.android.server.wm.Watermark: android.view.Display mDisplay> = $r5;

        r0.<com.android.server.wm.Watermark: java.lang.String[] mTokens> = r1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(int)>(32);

        $r7 = r0.<com.android.server.wm.Watermark: java.lang.String[] mTokens>;

        $r8 = $r7[0];

        i18 = virtualinvoke $r8.<java.lang.String: int length()>();

        i19 = 0;

     label01:
        $i1 = i18 & -2;

        if i19 >= $i1 goto label08;

        $r29 = r0.<com.android.server.wm.Watermark: java.lang.String[] mTokens>;

        $r30 = $r29[0];

        c20 = virtualinvoke $r30.<java.lang.String: char charAt(int)>(i19);

        $r31 = r0.<com.android.server.wm.Watermark: java.lang.String[] mTokens>;

        $r32 = $r31[0];

        $i13 = i19 + 1;

        c21 = virtualinvoke $r32.<java.lang.String: char charAt(int)>($i13);

        if c20 < 97 goto label02;

        if c20 > 102 goto label02;

        $i17 = c20 - 97;

        i22 = $i17 + 10;

        goto label04;

     label02:
        if c20 < 65 goto label03;

        if c20 > 70 goto label03;

        $i16 = c20 - 65;

        i22 = $i16 + 10;

        goto label04;

     label03:
        i22 = c20 + -48;

     label04:
        if c21 < 97 goto label05;

        if c21 > 102 goto label05;

        $i15 = c21 - 97;

        i23 = $i15 + 10;

        goto label07;

     label05:
        if c21 < 65 goto label06;

        if c21 > 70 goto label06;

        $i14 = c21 - 65;

        i23 = $i14 + 10;

        goto label07;

     label06:
        i23 = c21 + -48;

     label07:
        $i24 = i22 * 16;

        $i25 = $i24 + i23;

        $i26 = 255 - $i25;

        $c27 = (char) $i26;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c27);

        i19 = i19 + 2;

        goto label01;

     label08:
        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.server.wm.Watermark: java.lang.String mText> = $r9;

        i28 = staticinvoke <com.android.server.wm.WindowManagerService: int getPropertyInt(java.lang.String[],int,int,int,android.util.DisplayMetrics)>(r1, 1, 1, 20, r37);

        $r10 = new android.graphics.Paint;

        specialinvoke $r10.<android.graphics.Paint: void <init>(int)>(1);

        r0.<com.android.server.wm.Watermark: android.graphics.Paint mTextPaint> = $r10;

        $f0 = (float) i28;

        virtualinvoke $r10.<android.graphics.Paint: void setTextSize(float)>($f0);

        $r12 = r0.<com.android.server.wm.Watermark: android.graphics.Paint mTextPaint>;

        $r11 = <android.graphics.Typeface: android.graphics.Typeface SANS_SERIF>;

        $r13 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int)>($r11, 1);

        virtualinvoke $r12.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r13);

        $r15 = r0.<com.android.server.wm.Watermark: android.graphics.Paint mTextPaint>;

        r40 = virtualinvoke $r15.<android.graphics.Paint: android.graphics.Paint$FontMetricsInt getFontMetricsInt()>();

        $r17 = r0.<com.android.server.wm.Watermark: android.graphics.Paint mTextPaint>;

        $r16 = r0.<com.android.server.wm.Watermark: java.lang.String mText>;

        $f1 = virtualinvoke $r17.<android.graphics.Paint: float measureText(java.lang.String)>($r16);

        $i2 = (int) $f1;

        r0.<com.android.server.wm.Watermark: int mTextWidth> = $i2;

        $i4 = r40.<android.graphics.Paint$FontMetricsInt: int descent>;

        $i3 = r40.<android.graphics.Paint$FontMetricsInt: int ascent>;

        $i5 = $i4 - $i3;

        r0.<com.android.server.wm.Watermark: int mTextHeight> = $i5;

        $i6 = r0.<com.android.server.wm.Watermark: int mTextWidth>;

        $i7 = $i6 * 2;

        $i8 = staticinvoke <com.android.server.wm.WindowManagerService: int getPropertyInt(java.lang.String[],int,int,int,android.util.DisplayMetrics)>(r1, 2, 0, $i7, r37);

        r0.<com.android.server.wm.Watermark: int mDeltaX> = $i8;

        $i9 = r0.<com.android.server.wm.Watermark: int mTextHeight>;

        $i10 = $i9 * 3;

        $i11 = staticinvoke <com.android.server.wm.WindowManagerService: int getPropertyInt(java.lang.String[],int,int,int,android.util.DisplayMetrics)>(r1, 3, 0, $i10, r37);

        r0.<com.android.server.wm.Watermark: int mDeltaY> = $i11;

        i29 = staticinvoke <com.android.server.wm.WindowManagerService: int getPropertyInt(java.lang.String[],int,int,int,android.util.DisplayMetrics)>(r1, 4, 0, -1342177280, r37);

        i30 = staticinvoke <com.android.server.wm.WindowManagerService: int getPropertyInt(java.lang.String[],int,int,int,android.util.DisplayMetrics)>(r1, 5, 0, 1627389951, r37);

        i0 = staticinvoke <com.android.server.wm.WindowManagerService: int getPropertyInt(java.lang.String[],int,int,int,android.util.DisplayMetrics)>(r1, 6, 0, 7, r37);

        i31 = staticinvoke <com.android.server.wm.WindowManagerService: int getPropertyInt(java.lang.String[],int,int,int,android.util.DisplayMetrics)>(r1, 8, 0, 0, r37);

        i32 = staticinvoke <com.android.server.wm.WindowManagerService: int getPropertyInt(java.lang.String[],int,int,int,android.util.DisplayMetrics)>(r1, 9, 0, 0, r37);

        $r18 = r0.<com.android.server.wm.Watermark: android.graphics.Paint mTextPaint>;

        virtualinvoke $r18.<android.graphics.Paint: void setColor(int)>(i30);

        $r19 = r0.<com.android.server.wm.Watermark: android.graphics.Paint mTextPaint>;

        $f4 = (float) i0;

        $f3 = (float) i31;

        $f2 = (float) i32;

        virtualinvoke $r19.<android.graphics.Paint: void setShadowLayer(float,float,float,int)>($f4, $f3, $f2, i29);

        r41 = null;

     label09:
        $r20 = virtualinvoke r36.<com.android.server.wm.DisplayContent: android.view.SurfaceControl$Builder makeOverlay()>();

        $r21 = virtualinvoke $r20.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setName(java.lang.String)>("WatermarkSurface");

        $r22 = virtualinvoke $r21.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setBufferSize(int,int)>(1, 1);

        $r23 = virtualinvoke $r22.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setFormat(int)>(-3);

        $r24 = virtualinvoke $r23.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setCallsite(java.lang.String)>("Watermark");

        r42 = virtualinvoke $r24.<android.view.SurfaceControl$Builder: android.view.SurfaceControl build()>();

     label10:
        r41 = r42;

     label11:
        $r25 = virtualinvoke r2.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setLayer(android.view.SurfaceControl,int)>(r42, 1000000);

        $r26 = virtualinvoke $r25.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setPosition(android.view.SurfaceControl,float,float)>(r42, 0.0F, 0.0F);

        virtualinvoke $r26.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction show(android.view.SurfaceControl)>(r42);

     label12:
        r41 = r42;

     label13:
        $i12 = virtualinvoke r36.<com.android.server.wm.DisplayContent: int getDisplayId()>();

        staticinvoke <com.android.server.wm.InputMonitor: void setTrustedOverlayInputInfo(android.view.SurfaceControl,android.view.SurfaceControl$Transaction,int,java.lang.String)>(r42, r2, $i12, "Watermark");

     label14:
        r41 = r42;

     label15:
        $r28 = r0.<com.android.server.wm.Watermark: android.view.Surface mSurface>;

        virtualinvoke $r28.<android.view.Surface: void copyFrom(android.view.SurfaceControl)>(r42);

     label16:
        r41 = r42;

        goto label18;

     label17:
        $r34 := @caughtexception;

     label18:
        r0.<com.android.server.wm.Watermark: android.view.SurfaceControl mSurfaceControl> = r41;

        return;

        catch android.view.Surface$OutOfResourcesException from label09 to label10 with label17;
        catch android.view.Surface$OutOfResourcesException from label11 to label12 with label17;
        catch android.view.Surface$OutOfResourcesException from label13 to label14 with label17;
        catch android.view.Surface$OutOfResourcesException from label15 to label16 with label17;
    }

    void drawIfNeeded()
    {
        com.android.server.wm.Watermark r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14, i15, $i16, i17, $i18, i19, $i20, $i21, i22;
        boolean $z0;
        android.graphics.Rect $r1;
        android.view.Surface $r2, $r4;
        android.graphics.PorterDuff$Mode $r3;
        android.graphics.Paint $r5;
        float $f0, $f1;
        java.lang.String $r6;
        java.lang.Throwable $r7;
        android.view.Surface$OutOfResourcesException $r8;
        android.graphics.Canvas r10, r11;

        r0 := @this: com.android.server.wm.Watermark;

        $z0 = r0.<com.android.server.wm.Watermark: boolean mDrawNeeded>;

        if $z0 == 0 goto label11;

        i0 = r0.<com.android.server.wm.Watermark: int mLastDW>;

        i1 = r0.<com.android.server.wm.Watermark: int mLastDH>;

        r0.<com.android.server.wm.Watermark: boolean mDrawNeeded> = 0;

        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, i0, i1);

        r10 = null;

     label01:
        $r2 = r0.<com.android.server.wm.Watermark: android.view.Surface mSurface>;

        r11 = virtualinvoke $r2.<android.view.Surface: android.graphics.Canvas lockCanvas(android.graphics.Rect)>($r1);

     label02:
        r10 = r11;

     label03:
        goto label06;

     label04:
        $r8 := @caughtexception;

        r10 = null;

        goto label06;

     label05:
        $r7 := @caughtexception;

        goto label03;

     label06:
        if r10 == null goto label11;

        $r3 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode CLEAR>;

        virtualinvoke r10.<android.graphics.Canvas: void drawColor(int,android.graphics.PorterDuff$Mode)>(0, $r3);

        i11 = r0.<com.android.server.wm.Watermark: int mDeltaX>;

        i2 = r0.<com.android.server.wm.Watermark: int mDeltaY>;

        i12 = r0.<com.android.server.wm.Watermark: int mTextWidth>;

        $i6 = i12 + i0;

        $i3 = i0 + i12;

        $i4 = $i3 / i11;

        $i5 = $i4 * i11;

        i13 = $i6 - $i5;

        i14 = i11 / 4;

        if i13 < i14 goto label07;

        i15 = i11;

        $i10 = i11 - i14;

        if i13 <= $i10 goto label08;

     label07:
        $i7 = i11 / 3;

        i15 = i11 + $i7;

     label08:
        $i16 = r0.<com.android.server.wm.Watermark: int mTextHeight>;

        i17 = neg $i16;

        $i18 = r0.<com.android.server.wm.Watermark: int mTextWidth>;

        i19 = neg $i18;

     label09:
        $i20 = r0.<com.android.server.wm.Watermark: int mTextHeight>;

        $i21 = $i20 + i1;

        if i17 >= $i21 goto label10;

        $r6 = r0.<com.android.server.wm.Watermark: java.lang.String mText>;

        $f1 = (float) i19;

        $f0 = (float) i17;

        $r5 = r0.<com.android.server.wm.Watermark: android.graphics.Paint mTextPaint>;

        virtualinvoke r10.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r6, $f1, $f0, $r5);

        i22 = i19 + i15;

        i19 = i22;

        if i22 < i0 goto label09;

        $i8 = r0.<com.android.server.wm.Watermark: int mTextWidth>;

        $i9 = $i8 + i0;

        i19 = i22 - $i9;

        i17 = i17 + i2;

        goto label09;

     label10:
        $r4 = r0.<com.android.server.wm.Watermark: android.view.Surface mSurface>;

        virtualinvoke $r4.<android.view.Surface: void unlockCanvasAndPost(android.graphics.Canvas)>(r10);

     label11:
        return;

        catch java.lang.IllegalArgumentException from label01 to label02 with label05;
        catch android.view.Surface$OutOfResourcesException from label01 to label02 with label04;
    }

    void positionSurface(int, int, android.view.SurfaceControl$Transaction)
    {
        com.android.server.wm.Watermark r0;
        int i0, i1, $i2, $i3;
        android.view.SurfaceControl$Transaction r1;
        android.view.SurfaceControl $r2;

        r0 := @this: com.android.server.wm.Watermark;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.view.SurfaceControl$Transaction;

        $i2 = r0.<com.android.server.wm.Watermark: int mLastDW>;

        if $i2 != i0 goto label1;

        $i3 = r0.<com.android.server.wm.Watermark: int mLastDH>;

        if $i3 == i1 goto label2;

     label1:
        r0.<com.android.server.wm.Watermark: int mLastDW> = i0;

        r0.<com.android.server.wm.Watermark: int mLastDH> = i1;

        $r2 = r0.<com.android.server.wm.Watermark: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setBufferSize(android.view.SurfaceControl,int,int)>($r2, i0, i1);

        r0.<com.android.server.wm.Watermark: boolean mDrawNeeded> = 1;

     label2:
        return;
    }
}
