public class com.android.server.wm.WindowChangeAnimationSpec extends java.lang.Object implements com.android.server.wm.LocalAnimationAdapter$AnimationSpec
{
    static final int ANIMATION_DURATION;
    private android.view.animation.Animation mAnimation;
    private final android.graphics.Rect mEndBounds;
    private final boolean mIsAppAnimation;
    private final boolean mIsThumbnail;
    private final android.graphics.Rect mStartBounds;
    private final java.lang.ThreadLocal mThreadLocalTmps;
    private final android.graphics.Rect mTmpRect;

    public void <init>(android.graphics.Rect, android.graphics.Rect, android.view.DisplayInfo, float, boolean, boolean)
    {
        com.android.server.wm.WindowChangeAnimationSpec r0;
        android.graphics.Rect r1, r2, r9, r10, r11;
        android.view.DisplayInfo r3;
        float f0, $f1;
        boolean z0, z1;
        com.android.server.wm.'-$$Lambda$WindowChangeAnimationSpec$J5jIvng4n-ctFR8T6L2f_W3o1KU' $r4;
        java.lang.ThreadLocal $r5;
        int $i0;
        long $l1;
        java.util.function.Supplier r12;

        r0 := @this: com.android.server.wm.WindowChangeAnimationSpec;

        r1 := @parameter0: android.graphics.Rect;

        r2 := @parameter1: android.graphics.Rect;

        r3 := @parameter2: android.view.DisplayInfo;

        f0 := @parameter3: float;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = <com.android.server.wm._$$Lambda$WindowChangeAnimationSpec$J5jIvng4n_ctFR8T6L2f_W3o1KU: com.android.server.wm.'-$$Lambda$WindowChangeAnimationSpec$J5jIvng4n-ctFR8T6L2f_W3o1KU' INSTANCE>;

        r12 = (java.util.function.Supplier) $r4;

        $r5 = staticinvoke <java.lang.ThreadLocal: java.lang.ThreadLocal withInitial(java.util.function.Supplier)>(r12);

        r0.<com.android.server.wm.WindowChangeAnimationSpec: java.lang.ThreadLocal mThreadLocalTmps> = $r5;

        r9 = new android.graphics.Rect;

        specialinvoke r9.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.WindowChangeAnimationSpec: android.graphics.Rect mTmpRect> = r9;

        r10 = new android.graphics.Rect;

        specialinvoke r10.<android.graphics.Rect: void <init>(android.graphics.Rect)>(r1);

        r0.<com.android.server.wm.WindowChangeAnimationSpec: android.graphics.Rect mStartBounds> = r10;

        r11 = new android.graphics.Rect;

        specialinvoke r11.<android.graphics.Rect: void <init>(android.graphics.Rect)>(r2);

        r0.<com.android.server.wm.WindowChangeAnimationSpec: android.graphics.Rect mEndBounds> = r11;

        r0.<com.android.server.wm.WindowChangeAnimationSpec: boolean mIsAppAnimation> = z0;

        r0.<com.android.server.wm.WindowChangeAnimationSpec: boolean mIsThumbnail> = z1;

        $f1 = 336.0F * f0;

        $i0 = (int) $f1;

        $l1 = (long) $i0;

        specialinvoke r0.<com.android.server.wm.WindowChangeAnimationSpec: void createBoundsInterpolator(long,android.view.DisplayInfo)>($l1, r3);

        return;
    }

    private void createBoundsInterpolator(long, android.view.DisplayInfo)
    {
        com.android.server.wm.WindowChangeAnimationSpec r0;
        long l0, l1, $l21, $l26;
        android.graphics.Rect $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r22, $r23, $r27, $r28, $r29, $r30;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i22, $i23, $i24, $i25;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, f16, f17, f18, f19;
        boolean $z0, z1;
        android.view.animation.AnimationSet $r10, $r24;
        android.view.animation.ScaleAnimation $r11, $r26;
        android.view.animation.TranslateAnimation $r12;
        android.view.animation.ClipRectAnimation $r21;
        android.view.animation.AlphaAnimation $r25;
        android.view.DisplayInfo r31;

        r0 := @this: com.android.server.wm.WindowChangeAnimationSpec;

        l0 := @parameter0: long;

        r31 := @parameter1: android.view.DisplayInfo;

        $r2 = r0.<com.android.server.wm.WindowChangeAnimationSpec: android.graphics.Rect mEndBounds>;

        $i2 = virtualinvoke $r2.<android.graphics.Rect: int width()>();

        $r3 = r0.<com.android.server.wm.WindowChangeAnimationSpec: android.graphics.Rect mStartBounds>;

        $i3 = virtualinvoke $r3.<android.graphics.Rect: int width()>();

        $i4 = $i2 - $i3;

        $r4 = r0.<com.android.server.wm.WindowChangeAnimationSpec: android.graphics.Rect mEndBounds>;

        $i5 = virtualinvoke $r4.<android.graphics.Rect: int height()>();

        $i6 = $i4 + $i5;

        $r5 = r0.<com.android.server.wm.WindowChangeAnimationSpec: android.graphics.Rect mStartBounds>;

        $i7 = virtualinvoke $r5.<android.graphics.Rect: int height()>();

        $i8 = $i6 - $i7;

        if $i8 < 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        $f0 = (float) l0;

        $f1 = $f0 * 0.7F;

        l1 = (long) $f1;

        $r6 = r0.<com.android.server.wm.WindowChangeAnimationSpec: android.graphics.Rect mStartBounds>;

        $i9 = virtualinvoke $r6.<android.graphics.Rect: int width()>();

        $f2 = (float) $i9;

        $f3 = $f2 * 0.7F;

        $r7 = r0.<com.android.server.wm.WindowChangeAnimationSpec: android.graphics.Rect mEndBounds>;

        $i10 = virtualinvoke $r7.<android.graphics.Rect: int width()>();

        $f4 = (float) $i10;

        $f6 = $f3 / $f4;

        $f5 = 1.0F - 0.7F;

        f16 = $f6 + $f5;

        $r8 = r0.<com.android.server.wm.WindowChangeAnimationSpec: android.graphics.Rect mStartBounds>;

        $i11 = virtualinvoke $r8.<android.graphics.Rect: int height()>();

        $f7 = (float) $i11;

        $f8 = $f7 * 0.7F;

        $r9 = r0.<com.android.server.wm.WindowChangeAnimationSpec: android.graphics.Rect mEndBounds>;

        $i12 = virtualinvoke $r9.<android.graphics.Rect: int height()>();

        $f9 = (float) $i12;

        $f11 = $f8 / $f9;

        $f10 = 1.0F - 0.7F;

        f17 = $f11 + $f10;

        $z0 = r0.<com.android.server.wm.WindowChangeAnimationSpec: boolean mIsThumbnail>;

        if $z0 == 0 goto label4;

        $r24 = new android.view.animation.AnimationSet;

        specialinvoke $r24.<android.view.animation.AnimationSet: void <init>(boolean)>(1);

        $r25 = new android.view.animation.AlphaAnimation;

        specialinvoke $r25.<android.view.animation.AlphaAnimation: void <init>(float,float)>(1.0F, 0.0F);

        virtualinvoke $r25.<android.view.animation.Animation: void setDuration(long)>(l1);

        if z1 != 0 goto label3;

        $l26 = l0 - l1;

        virtualinvoke $r25.<android.view.animation.Animation: void setStartOffset(long)>($l26);

     label3:
        virtualinvoke $r24.<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>($r25);

        f18 = 1.0F / f16;

        f19 = 1.0F / f17;

        $r26 = new android.view.animation.ScaleAnimation;

        specialinvoke $r26.<android.view.animation.ScaleAnimation: void <init>(float,float,float,float)>(f18, f18, f19, f19);

        virtualinvoke $r26.<android.view.animation.Animation: void setDuration(long)>(l0);

        virtualinvoke $r24.<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>($r26);

        r0.<com.android.server.wm.WindowChangeAnimationSpec: android.view.animation.Animation mAnimation> = $r24;

        $r27 = r0.<com.android.server.wm.WindowChangeAnimationSpec: android.graphics.Rect mStartBounds>;

        $i22 = virtualinvoke $r27.<android.graphics.Rect: int width()>();

        $r28 = r0.<com.android.server.wm.WindowChangeAnimationSpec: android.graphics.Rect mStartBounds>;

        $i23 = virtualinvoke $r28.<android.graphics.Rect: int height()>();

        $r29 = r0.<com.android.server.wm.WindowChangeAnimationSpec: android.graphics.Rect mEndBounds>;

        $i24 = virtualinvoke $r29.<android.graphics.Rect: int width()>();

        $r30 = r0.<com.android.server.wm.WindowChangeAnimationSpec: android.graphics.Rect mEndBounds>;

        $i25 = virtualinvoke $r30.<android.graphics.Rect: int height()>();

        virtualinvoke $r24.<android.view.animation.Animation: void initialize(int,int,int,int)>($i22, $i23, $i24, $i25);

        goto label6;

     label4:
        $r10 = new android.view.animation.AnimationSet;

        specialinvoke $r10.<android.view.animation.AnimationSet: void <init>(boolean)>(1);

        $r11 = new android.view.animation.ScaleAnimation;

        specialinvoke $r11.<android.view.animation.ScaleAnimation: void <init>(float,float,float,float)>(f16, 1.0F, f17, 1.0F);

        virtualinvoke $r11.<android.view.animation.Animation: void setDuration(long)>(l1);

        if z1 != 0 goto label5;

        $l21 = l0 - l1;

        virtualinvoke $r11.<android.view.animation.Animation: void setStartOffset(long)>($l21);

     label5:
        virtualinvoke $r10.<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>($r11);

        $r12 = new android.view.animation.TranslateAnimation;

        $r13 = r0.<com.android.server.wm.WindowChangeAnimationSpec: android.graphics.Rect mStartBounds>;

        $i13 = $r13.<android.graphics.Rect: int left>;

        $f15 = (float) $i13;

        $r14 = r0.<com.android.server.wm.WindowChangeAnimationSpec: android.graphics.Rect mEndBounds>;

        $i14 = $r14.<android.graphics.Rect: int left>;

        $f14 = (float) $i14;

        $r15 = r0.<com.android.server.wm.WindowChangeAnimationSpec: android.graphics.Rect mStartBounds>;

        $i15 = $r15.<android.graphics.Rect: int top>;

        $f13 = (float) $i15;

        $r16 = r0.<com.android.server.wm.WindowChangeAnimationSpec: android.graphics.Rect mEndBounds>;

        $i16 = $r16.<android.graphics.Rect: int top>;

        $f12 = (float) $i16;

        specialinvoke $r12.<android.view.animation.TranslateAnimation: void <init>(float,float,float,float)>($f15, $f14, $f13, $f12);

        virtualinvoke $r12.<android.view.animation.Animation: void setDuration(long)>(l0);

        virtualinvoke $r10.<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>($r12);

        $r17 = new android.graphics.Rect;

        $r18 = r0.<com.android.server.wm.WindowChangeAnimationSpec: android.graphics.Rect mStartBounds>;

        specialinvoke $r17.<android.graphics.Rect: void <init>(android.graphics.Rect)>($r18);

        $r19 = new android.graphics.Rect;

        $r20 = r0.<com.android.server.wm.WindowChangeAnimationSpec: android.graphics.Rect mEndBounds>;

        specialinvoke $r19.<android.graphics.Rect: void <init>(android.graphics.Rect)>($r20);

        virtualinvoke $r17.<android.graphics.Rect: void offsetTo(int,int)>(0, 0);

        virtualinvoke $r19.<android.graphics.Rect: void offsetTo(int,int)>(0, 0);

        $r21 = new android.view.animation.ClipRectAnimation;

        specialinvoke $r21.<android.view.animation.ClipRectAnimation: void <init>(android.graphics.Rect,android.graphics.Rect)>($r17, $r19);

        virtualinvoke $r21.<android.view.animation.Animation: void setDuration(long)>(l0);

        virtualinvoke $r10.<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>($r21);

        r0.<com.android.server.wm.WindowChangeAnimationSpec: android.view.animation.Animation mAnimation> = $r10;

        $r22 = r0.<com.android.server.wm.WindowChangeAnimationSpec: android.graphics.Rect mStartBounds>;

        $i17 = virtualinvoke $r22.<android.graphics.Rect: int width()>();

        $r23 = r0.<com.android.server.wm.WindowChangeAnimationSpec: android.graphics.Rect mStartBounds>;

        $i18 = virtualinvoke $r23.<android.graphics.Rect: int height()>();

        $i20 = r31.<android.view.DisplayInfo: int appWidth>;

        $i19 = r31.<android.view.DisplayInfo: int appHeight>;

        virtualinvoke $r10.<android.view.animation.Animation: void initialize(int,int,int,int)>($i17, $i18, $i20, $i19);

     label6:
        return;
    }

    static com.android.server.wm.WindowChangeAnimationSpec$TmpValues lambda$new$0()
    {
        com.android.server.wm.WindowChangeAnimationSpec$TmpValues $r0;

        $r0 = new com.android.server.wm.WindowChangeAnimationSpec$TmpValues;

        specialinvoke $r0.<com.android.server.wm.WindowChangeAnimationSpec$TmpValues: void <init>(com.android.server.wm.WindowChangeAnimationSpec$1)>(null);

        return $r0;
    }

    public void apply(android.view.SurfaceControl$Transaction, android.view.SurfaceControl, long)
    {
        com.android.server.wm.WindowChangeAnimationSpec r0;
        android.view.SurfaceControl$Transaction r1;
        android.view.SurfaceControl r2;
        long l0;
        com.android.server.wm.WindowChangeAnimationSpec$TmpValues r3;
        java.lang.ThreadLocal $r4;
        java.lang.Object $r5;
        boolean $z0;
        android.view.animation.Transformation $r6, $r8, $r18, $r29, $r31, $r35;
        android.view.animation.Animation $r7, $r30;
        float[] $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r19, $r21, $r23, $r25, $r33, r38, r39;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.graphics.Rect $r20, $r22, $r24, $r26, $r27, r40;
        android.graphics.Matrix $r32, r37;

        r0 := @this: com.android.server.wm.WindowChangeAnimationSpec;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        r2 := @parameter1: android.view.SurfaceControl;

        l0 := @parameter2: long;

        $r4 = r0.<com.android.server.wm.WindowChangeAnimationSpec: java.lang.ThreadLocal mThreadLocalTmps>;

        $r5 = virtualinvoke $r4.<java.lang.ThreadLocal: java.lang.Object get()>();

        r3 = (com.android.server.wm.WindowChangeAnimationSpec$TmpValues) $r5;

        $z0 = r0.<com.android.server.wm.WindowChangeAnimationSpec: boolean mIsThumbnail>;

        if $z0 == 0 goto label1;

        $r30 = r0.<com.android.server.wm.WindowChangeAnimationSpec: android.view.animation.Animation mAnimation>;

        $r29 = r3.<com.android.server.wm.WindowChangeAnimationSpec$TmpValues: android.view.animation.Transformation mTransformation>;

        virtualinvoke $r30.<android.view.animation.Animation: boolean getTransformation(long,android.view.animation.Transformation)>(l0, $r29);

        $r31 = r3.<com.android.server.wm.WindowChangeAnimationSpec$TmpValues: android.view.animation.Transformation mTransformation>;

        $r32 = virtualinvoke $r31.<android.view.animation.Transformation: android.graphics.Matrix getMatrix()>();

        $r33 = r3.<com.android.server.wm.WindowChangeAnimationSpec$TmpValues: float[] mFloats>;

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setMatrix(android.view.SurfaceControl,android.graphics.Matrix,float[])>(r2, $r32, $r33);

        $r35 = r3.<com.android.server.wm.WindowChangeAnimationSpec$TmpValues: android.view.animation.Transformation mTransformation>;

        $f20 = virtualinvoke $r35.<android.view.animation.Transformation: float getAlpha()>();

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setAlpha(android.view.SurfaceControl,float)>(r2, $f20);

        goto label2;

     label1:
        $r7 = r0.<com.android.server.wm.WindowChangeAnimationSpec: android.view.animation.Animation mAnimation>;

        $r6 = r3.<com.android.server.wm.WindowChangeAnimationSpec$TmpValues: android.view.animation.Transformation mTransformation>;

        virtualinvoke $r7.<android.view.animation.Animation: boolean getTransformation(long,android.view.animation.Transformation)>(l0, $r6);

        $r8 = r3.<com.android.server.wm.WindowChangeAnimationSpec$TmpValues: android.view.animation.Transformation mTransformation>;

        r37 = virtualinvoke $r8.<android.view.animation.Transformation: android.graphics.Matrix getMatrix()>();

        $r9 = r3.<com.android.server.wm.WindowChangeAnimationSpec$TmpValues: float[] mFloats>;

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setMatrix(android.view.SurfaceControl,android.graphics.Matrix,float[])>(r2, r37, $r9);

        r38 = r3.<com.android.server.wm.WindowChangeAnimationSpec$TmpValues: float[] mVecs>;

        $r11 = r3.<com.android.server.wm.WindowChangeAnimationSpec$TmpValues: float[] mVecs>;

        $r11[2] = 0.0F;

        r38[1] = 0.0F;

        r39 = r3.<com.android.server.wm.WindowChangeAnimationSpec$TmpValues: float[] mVecs>;

        $r12 = r3.<com.android.server.wm.WindowChangeAnimationSpec$TmpValues: float[] mVecs>;

        $r12[3] = 1.0F;

        r39[0] = 1.0F;

        $r13 = r3.<com.android.server.wm.WindowChangeAnimationSpec$TmpValues: float[] mVecs>;

        virtualinvoke r37.<android.graphics.Matrix: void mapVectors(float[])>($r13);

        $r15 = r3.<com.android.server.wm.WindowChangeAnimationSpec$TmpValues: float[] mVecs>;

        $r14 = r3.<com.android.server.wm.WindowChangeAnimationSpec$TmpValues: float[] mVecs>;

        $f0 = $r14[0];

        $f1 = 1.0F / $f0;

        $r15[0] = $f1;

        $r17 = r3.<com.android.server.wm.WindowChangeAnimationSpec$TmpValues: float[] mVecs>;

        $r16 = r3.<com.android.server.wm.WindowChangeAnimationSpec$TmpValues: float[] mVecs>;

        $f2 = $r16[3];

        $f3 = 1.0F / $f2;

        $r17[3] = $f3;

        $r18 = r3.<com.android.server.wm.WindowChangeAnimationSpec$TmpValues: android.view.animation.Transformation mTransformation>;

        r40 = virtualinvoke $r18.<android.view.animation.Transformation: android.graphics.Rect getClipRect()>();

        $r20 = r0.<com.android.server.wm.WindowChangeAnimationSpec: android.graphics.Rect mTmpRect>;

        $i1 = r40.<android.graphics.Rect: int left>;

        $f5 = (float) $i1;

        $r19 = r3.<com.android.server.wm.WindowChangeAnimationSpec$TmpValues: float[] mVecs>;

        $f4 = $r19[0];

        $f6 = $f5 * $f4;

        $f7 = $f6 + 0.5F;

        $i2 = (int) $f7;

        $r20.<android.graphics.Rect: int left> = $i2;

        $r22 = r0.<com.android.server.wm.WindowChangeAnimationSpec: android.graphics.Rect mTmpRect>;

        $i3 = r40.<android.graphics.Rect: int right>;

        $f9 = (float) $i3;

        $r21 = r3.<com.android.server.wm.WindowChangeAnimationSpec$TmpValues: float[] mVecs>;

        $f8 = $r21[0];

        $f10 = $f9 * $f8;

        $f11 = $f10 + 0.5F;

        $i4 = (int) $f11;

        $r22.<android.graphics.Rect: int right> = $i4;

        $r24 = r0.<com.android.server.wm.WindowChangeAnimationSpec: android.graphics.Rect mTmpRect>;

        $i5 = r40.<android.graphics.Rect: int top>;

        $f13 = (float) $i5;

        $r23 = r3.<com.android.server.wm.WindowChangeAnimationSpec$TmpValues: float[] mVecs>;

        $f12 = $r23[3];

        $f14 = $f13 * $f12;

        $f15 = $f14 + 0.5F;

        $i6 = (int) $f15;

        $r24.<android.graphics.Rect: int top> = $i6;

        $r26 = r0.<com.android.server.wm.WindowChangeAnimationSpec: android.graphics.Rect mTmpRect>;

        $i7 = r40.<android.graphics.Rect: int bottom>;

        $f17 = (float) $i7;

        $r25 = r3.<com.android.server.wm.WindowChangeAnimationSpec$TmpValues: float[] mVecs>;

        $f16 = $r25[3];

        $f18 = $f17 * $f16;

        $f19 = $f18 + 0.5F;

        $i8 = (int) $f19;

        $r26.<android.graphics.Rect: int bottom> = $i8;

        $r27 = r0.<com.android.server.wm.WindowChangeAnimationSpec: android.graphics.Rect mTmpRect>;

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setWindowCrop(android.view.SurfaceControl,android.graphics.Rect)>(r2, $r27);

     label2:
        return;
    }

    public long calculateStatusBarTransitionStartTime()
    {
        com.android.server.wm.WindowChangeAnimationSpec r0;
        long l0, $l1, $l2, $l3, $l4, $l5;
        android.view.animation.Animation $r1;
        float $f0, $f1;

        r0 := @this: com.android.server.wm.WindowChangeAnimationSpec;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r1 = r0.<com.android.server.wm.WindowChangeAnimationSpec: android.view.animation.Animation mAnimation>;

        $l1 = virtualinvoke $r1.<android.view.animation.Animation: long getDuration()>();

        $f0 = (float) $l1;

        $f1 = $f0 * 0.99F;

        $l2 = (long) $f1;

        $l3 = $l2 + l0;

        $l4 = $l3 - 120L;

        $l5 = staticinvoke <java.lang.Math: long max(long,long)>(l0, $l4);

        return $l5;
    }

    public boolean canSkipFirstFrame()
    {
        com.android.server.wm.WindowChangeAnimationSpec r0;

        r0 := @this: com.android.server.wm.WindowChangeAnimationSpec;

        return 0;
    }

    public void dump(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.wm.WindowChangeAnimationSpec r0;
        java.io.PrintWriter r1;
        java.lang.String r2;
        android.view.animation.Animation $r3;
        long $l0;

        r0 := @this: com.android.server.wm.WindowChangeAnimationSpec;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        $r3 = r0.<com.android.server.wm.WindowChangeAnimationSpec: android.view.animation.Animation mAnimation>;

        $l0 = virtualinvoke $r3.<android.view.animation.Animation: long getDuration()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(long)>($l0);

        return;
    }

    public void dumpDebugInner(android.util.proto.ProtoOutputStream)
    {
        com.android.server.wm.WindowChangeAnimationSpec r0;
        android.util.proto.ProtoOutputStream r1;
        long l0;
        android.view.animation.Animation $r2;
        java.lang.String $r3;

        r0 := @this: com.android.server.wm.WindowChangeAnimationSpec;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        l0 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268033L);

        $r2 = r0.<com.android.server.wm.WindowChangeAnimationSpec: android.view.animation.Animation mAnimation>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333441L, $r3);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l0);

        return;
    }

    public long getDuration()
    {
        com.android.server.wm.WindowChangeAnimationSpec r0;
        android.view.animation.Animation $r1;
        long $l0;

        r0 := @this: com.android.server.wm.WindowChangeAnimationSpec;

        $r1 = r0.<com.android.server.wm.WindowChangeAnimationSpec: android.view.animation.Animation mAnimation>;

        $l0 = virtualinvoke $r1.<android.view.animation.Animation: long getDuration()>();

        return $l0;
    }

    public boolean getShowWallpaper()
    {
        com.android.server.wm.WindowChangeAnimationSpec r0;

        r0 := @this: com.android.server.wm.WindowChangeAnimationSpec;

        return 0;
    }

    public boolean needsEarlyWakeup()
    {
        com.android.server.wm.WindowChangeAnimationSpec r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowChangeAnimationSpec;

        $z0 = r0.<com.android.server.wm.WindowChangeAnimationSpec: boolean mIsAppAnimation>;

        return $z0;
    }

    public static void <clinit>()
    {
        <com.android.server.wm.WindowChangeAnimationSpec: int ANIMATION_DURATION> = 336;

        return;
    }
}
