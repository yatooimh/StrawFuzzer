final class com.android.server.wm.WindowContainer$ForAllWindowsConsumerWrapper extends java.lang.Object implements com.android.internal.util.ToBooleanFunction
{
    private java.util.function.Consumer mConsumer;
    final com.android.server.wm.WindowContainer this$0;

    private void <init>(com.android.server.wm.WindowContainer)
    {
        com.android.server.wm.WindowContainer$ForAllWindowsConsumerWrapper r0;
        com.android.server.wm.WindowContainer r1;

        r0 := @this: com.android.server.wm.WindowContainer$ForAllWindowsConsumerWrapper;

        r1 := @parameter0: com.android.server.wm.WindowContainer;

        r0.<com.android.server.wm.WindowContainer$ForAllWindowsConsumerWrapper: com.android.server.wm.WindowContainer this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(com.android.server.wm.WindowContainer, com.android.server.wm.WindowContainer$1)
    {
        com.android.server.wm.WindowContainer$ForAllWindowsConsumerWrapper r0;
        com.android.server.wm.WindowContainer r1;
        com.android.server.wm.WindowContainer$1 r2;

        r0 := @this: com.android.server.wm.WindowContainer$ForAllWindowsConsumerWrapper;

        r1 := @parameter0: com.android.server.wm.WindowContainer;

        r2 := @parameter1: com.android.server.wm.WindowContainer$1;

        specialinvoke r0.<com.android.server.wm.WindowContainer$ForAllWindowsConsumerWrapper: void <init>(com.android.server.wm.WindowContainer)>(r1);

        return;
    }

    public boolean apply(com.android.server.wm.WindowState)
    {
        com.android.server.wm.WindowContainer$ForAllWindowsConsumerWrapper r0;
        com.android.server.wm.WindowState r1;
        java.util.function.Consumer $r2;

        r0 := @this: com.android.server.wm.WindowContainer$ForAllWindowsConsumerWrapper;

        r1 := @parameter0: com.android.server.wm.WindowState;

        $r2 = r0.<com.android.server.wm.WindowContainer$ForAllWindowsConsumerWrapper: java.util.function.Consumer mConsumer>;

        interfaceinvoke $r2.<java.util.function.Consumer: void accept(java.lang.Object)>(r1);

        return 0;
    }

    public volatile boolean apply(java.lang.Object)
    {
        com.android.server.wm.WindowContainer$ForAllWindowsConsumerWrapper r0;
        java.lang.Object r1;
        com.android.server.wm.WindowState $r2;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowContainer$ForAllWindowsConsumerWrapper;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.android.server.wm.WindowState) r1;

        $z0 = virtualinvoke r0.<com.android.server.wm.WindowContainer$ForAllWindowsConsumerWrapper: boolean apply(com.android.server.wm.WindowState)>($r2);

        return $z0;
    }

    void release()
    {
        com.android.server.wm.WindowContainer$ForAllWindowsConsumerWrapper r0;
        com.android.server.wm.WindowContainer $r1;
        android.util.Pools$SynchronizedPool $r2;

        r0 := @this: com.android.server.wm.WindowContainer$ForAllWindowsConsumerWrapper;

        r0.<com.android.server.wm.WindowContainer$ForAllWindowsConsumerWrapper: java.util.function.Consumer mConsumer> = null;

        $r1 = r0.<com.android.server.wm.WindowContainer$ForAllWindowsConsumerWrapper: com.android.server.wm.WindowContainer this$0>;

        $r2 = staticinvoke <com.android.server.wm.WindowContainer: android.util.Pools$SynchronizedPool access$100(com.android.server.wm.WindowContainer)>($r1);

        virtualinvoke $r2.<android.util.Pools$SynchronizedPool: boolean release(java.lang.Object)>(r0);

        return;
    }

    void setConsumer(java.util.function.Consumer)
    {
        com.android.server.wm.WindowContainer$ForAllWindowsConsumerWrapper r0;
        java.util.function.Consumer r1;

        r0 := @this: com.android.server.wm.WindowContainer$ForAllWindowsConsumerWrapper;

        r1 := @parameter0: java.util.function.Consumer;

        r0.<com.android.server.wm.WindowContainer$ForAllWindowsConsumerWrapper: java.util.function.Consumer mConsumer> = r1;

        return;
    }
}
