class com.android.server.wm.WindowContainer extends com.android.server.wm.ConfigurationContainer implements java.lang.Comparable, com.android.server.wm.SurfaceAnimator$Animatable, com.android.server.wm.SurfaceFreezer$Freezable, com.android.server.wm.BLASTSyncEngine$TransactionReadyListener
{
    static final int ANIMATION_LAYER_BOOSTED;
    static final int ANIMATION_LAYER_HOME;
    static final int ANIMATION_LAYER_STANDARD;
    static final int POSITION_BOTTOM;
    static final int POSITION_TOP;
    private static final java.lang.String TAG;
    android.view.SurfaceControl mAnimationBoundsLayer;
    private boolean mAnyParentAnimating;
    com.android.server.wm.BLASTSyncEngine mBLASTSyncEngine;
    android.view.SurfaceControl$Transaction mBLASTSyncTransaction;
    protected final com.android.server.wm.WindowList mChildren;
    private boolean mCommittedReparentToAnimationLeash;
    private final android.util.Pools$SynchronizedPool mConsumerWrapperPool;
    protected com.android.server.wm.DisplayContent mDisplayContent;
    private boolean mIsFocusable;
    private int mLastLayer;
    private android.view.MagnificationSpec mLastMagnificationSpec;
    protected com.android.server.wm.WindowContainer mLastOrientationSource;
    private android.view.SurfaceControl mLastRelativeToLayer;
    protected final android.graphics.Point mLastSurfacePosition;
    boolean mLaunchTaskBehind;
    boolean mNeedsAnimationBoundsLayer;
    boolean mNeedsZBoost;
    protected int mOrientation;
    private com.android.server.wm.WindowContainer mParent;
    private final android.view.SurfaceControl$Transaction mPendingTransaction;
    com.android.server.wm.WindowContainer$RemoteToken mRemoteToken;
    boolean mReparenting;
    private final android.util.ArraySet mSurfaceAnimationSources;
    protected final com.android.server.wm.SurfaceAnimator mSurfaceAnimator;
    protected android.view.SurfaceControl mSurfaceControl;
    final com.android.server.wm.SurfaceFreezer mSurfaceFreezer;
    com.android.server.wm.WindowContainerThumbnail mThumbnail;
    private final java.util.LinkedList mTmpChain1;
    private final java.util.LinkedList mTmpChain2;
    final android.graphics.Point mTmpPoint;
    private final android.graphics.Point mTmpPos;
    final android.graphics.Rect mTmpPrevBounds;
    protected final android.graphics.Rect mTmpRect;
    int mTransit;
    int mTransitFlags;
    private int mTreeWeight;
    boolean mUsingBLASTSyncTransaction;
    final java.util.ArrayList mWaitingForDrawn;
    com.android.server.wm.BLASTSyncEngine$TransactionReadyListener mWaitingListener;
    int mWaitingSyncId;
    protected final com.android.server.wm.WindowManagerService mWmService;

    void <init>(com.android.server.wm.WindowManagerService)
    {
        com.android.server.wm.WindowContainer r0;
        com.android.server.wm.WindowManagerService r1;
        com.android.server.wm.WindowList $r2;
        android.util.Pools$SynchronizedPool $r3;
        java.util.ArrayList $r4;
        android.util.ArraySet $r5;
        android.graphics.Point $r6, $r7, $r8;
        android.graphics.Rect $r9, $r10;
        com.android.server.wm.BLASTSyncEngine $r11;
        java.util.LinkedList $r12, $r13;
        java.util.function.Supplier $r14, $r17;
        java.lang.Object $r15, $r18;
        android.view.SurfaceControl$Transaction $r16, $r19;
        com.android.server.wm.SurfaceAnimator $r20;
        com.android.server.wm._$$Lambda$dwJG8BAnLlvKNGuDY9U3_haNY4M $r21;
        com.android.server.wm.SurfaceFreezer $r22;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: com.android.server.wm.WindowManagerService;

        specialinvoke r0.<com.android.server.wm.ConfigurationContainer: void <init>()>();

        r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer mParent> = null;

        $r2 = new com.android.server.wm.WindowList;

        specialinvoke $r2.<com.android.server.wm.WindowList: void <init>()>();

        r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren> = $r2;

        r0.<com.android.server.wm.WindowContainer: int mOrientation> = -1;

        $r3 = new android.util.Pools$SynchronizedPool;

        specialinvoke $r3.<android.util.Pools$SynchronizedPool: void <init>(int)>(3);

        r0.<com.android.server.wm.WindowContainer: android.util.Pools$SynchronizedPool mConsumerWrapperPool> = $r3;

        r0.<com.android.server.wm.WindowContainer: int mLastLayer> = 0;

        r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl mLastRelativeToLayer> = null;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.wm.WindowContainer: java.util.ArrayList mWaitingForDrawn> = $r4;

        $r5 = new android.util.ArraySet;

        specialinvoke $r5.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.wm.WindowContainer: android.util.ArraySet mSurfaceAnimationSources> = $r5;

        $r6 = new android.graphics.Point;

        specialinvoke $r6.<android.graphics.Point: void <init>()>();

        r0.<com.android.server.wm.WindowContainer: android.graphics.Point mTmpPos> = $r6;

        $r7 = new android.graphics.Point;

        specialinvoke $r7.<android.graphics.Point: void <init>()>();

        r0.<com.android.server.wm.WindowContainer: android.graphics.Point mLastSurfacePosition> = $r7;

        r0.<com.android.server.wm.WindowContainer: int mTreeWeight> = 1;

        $r8 = new android.graphics.Point;

        specialinvoke $r8.<android.graphics.Point: void <init>()>();

        r0.<com.android.server.wm.WindowContainer: android.graphics.Point mTmpPoint> = $r8;

        $r9 = new android.graphics.Rect;

        specialinvoke $r9.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.WindowContainer: android.graphics.Rect mTmpRect> = $r9;

        $r10 = new android.graphics.Rect;

        specialinvoke $r10.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.wm.WindowContainer: android.graphics.Rect mTmpPrevBounds> = $r10;

        r0.<com.android.server.wm.WindowContainer: boolean mIsFocusable> = 1;

        r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer$RemoteToken mRemoteToken> = null;

        $r11 = new com.android.server.wm.BLASTSyncEngine;

        specialinvoke $r11.<com.android.server.wm.BLASTSyncEngine: void <init>()>();

        r0.<com.android.server.wm.WindowContainer: com.android.server.wm.BLASTSyncEngine mBLASTSyncEngine> = $r11;

        r0.<com.android.server.wm.WindowContainer: boolean mUsingBLASTSyncTransaction> = 0;

        $r12 = new java.util.LinkedList;

        specialinvoke $r12.<java.util.LinkedList: void <init>()>();

        r0.<com.android.server.wm.WindowContainer: java.util.LinkedList mTmpChain1> = $r12;

        $r13 = new java.util.LinkedList;

        specialinvoke $r13.<java.util.LinkedList: void <init>()>();

        r0.<com.android.server.wm.WindowContainer: java.util.LinkedList mTmpChain2> = $r13;

        r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowManagerService mWmService> = r1;

        $r14 = r1.<com.android.server.wm.WindowManagerService: java.util.function.Supplier mTransactionFactory>;

        $r15 = interfaceinvoke $r14.<java.util.function.Supplier: java.lang.Object get()>();

        $r16 = (android.view.SurfaceControl$Transaction) $r15;

        r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl$Transaction mPendingTransaction> = $r16;

        $r17 = r1.<com.android.server.wm.WindowManagerService: java.util.function.Supplier mTransactionFactory>;

        $r18 = interfaceinvoke $r17.<java.util.function.Supplier: java.lang.Object get()>();

        $r19 = (android.view.SurfaceControl$Transaction) $r18;

        r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl$Transaction mBLASTSyncTransaction> = $r19;

        $r20 = new com.android.server.wm.SurfaceAnimator;

        $r21 = new com.android.server.wm._$$Lambda$dwJG8BAnLlvKNGuDY9U3_haNY4M;

        specialinvoke $r21.<com.android.server.wm._$$Lambda$dwJG8BAnLlvKNGuDY9U3_haNY4M: void <init>(com.android.server.wm.WindowContainer)>(r0);

        specialinvoke $r20.<com.android.server.wm.SurfaceAnimator: void <init>(com.android.server.wm.SurfaceAnimator$Animatable,com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback,com.android.server.wm.WindowManagerService)>(r0, $r21, r1);

        r0.<com.android.server.wm.WindowContainer: com.android.server.wm.SurfaceAnimator mSurfaceAnimator> = $r20;

        $r22 = new com.android.server.wm.SurfaceFreezer;

        specialinvoke $r22.<com.android.server.wm.SurfaceFreezer: void <init>(com.android.server.wm.SurfaceFreezer$Freezable,com.android.server.wm.WindowManagerService)>(r0, r1);

        r0.<com.android.server.wm.WindowContainer: com.android.server.wm.SurfaceFreezer mSurfaceFreezer> = $r22;

        return;
    }

    static android.util.Pools$SynchronizedPool access$100(com.android.server.wm.WindowContainer)
    {
        com.android.server.wm.WindowContainer r0;
        android.util.Pools$SynchronizedPool $r1;

        r0 := @parameter0: com.android.server.wm.WindowContainer;

        $r1 = r0.<com.android.server.wm.WindowContainer: android.util.Pools$SynchronizedPool mConsumerWrapperPool>;

        return $r1;
    }

    private void doAnimationFinished(int, com.android.server.wm.AnimationAdapter)
    {
        com.android.server.wm.WindowContainer r0, $r6;
        int i0, $i1, i2;
        com.android.server.wm.AnimationAdapter r1;
        android.util.ArraySet $r2, $r3, $r4;
        java.lang.Object $r5;

        r0 := @this: com.android.server.wm.WindowContainer;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.wm.AnimationAdapter;

        i2 = 0;

     label1:
        $r2 = r0.<com.android.server.wm.WindowContainer: android.util.ArraySet mSurfaceAnimationSources>;

        $i1 = virtualinvoke $r2.<android.util.ArraySet: int size()>();

        if i2 >= $i1 goto label2;

        $r4 = r0.<com.android.server.wm.WindowContainer: android.util.ArraySet mSurfaceAnimationSources>;

        $r5 = virtualinvoke $r4.<android.util.ArraySet: java.lang.Object valueAt(int)>(i2);

        $r6 = (com.android.server.wm.WindowContainer) $r5;

        virtualinvoke $r6.<com.android.server.wm.WindowContainer: void onAnimationFinished(int,com.android.server.wm.AnimationAdapter)>(i0, r1);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r3 = r0.<com.android.server.wm.WindowContainer: android.util.ArraySet mSurfaceAnimationSources>;

        virtualinvoke $r3.<android.util.ArraySet: void clear()>();

        return;
    }

    private boolean forAllActivities(java.util.function.Function, com.android.server.wm.WindowContainer, boolean, boolean, boolean[])
    {
        com.android.server.wm.WindowContainer r0, r2, $r7, $r11;
        java.util.function.Function r1;
        boolean z0, z1, $z2, $z3;
        boolean[] r3;
        int i0, $i1, i2, i3;
        com.android.server.wm.WindowList $r4, $r5, $r8, $r9;
        java.lang.Object $r6, $r10;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: java.util.function.Function;

        r2 := @parameter1: com.android.server.wm.WindowContainer;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r3 := @parameter4: boolean[];

        if z1 == 0 goto label4;

        $r8 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i1 = virtualinvoke $r8.<com.android.server.wm.WindowList: int size()>();

        i2 = $i1 - 1;

     label1:
        if i2 < 0 goto label3;

        $r9 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r10 = virtualinvoke $r9.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i2);

        $r11 = (com.android.server.wm.WindowContainer) $r10;

        $z3 = specialinvoke r0.<com.android.server.wm.WindowContainer: boolean processForAllActivitiesWithBoundary(java.util.function.Function,com.android.server.wm.WindowContainer,boolean,boolean,boolean[],com.android.server.wm.WindowContainer)>(r1, r2, z0, z1, r3, $r11);

        if $z3 == 0 goto label2;

        return 1;

     label2:
        i2 = i2 + -1;

        goto label1;

     label3:
        goto label7;

     label4:
        $r4 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        i0 = virtualinvoke $r4.<com.android.server.wm.WindowList: int size()>();

        i3 = 0;

     label5:
        if i3 >= i0 goto label7;

        $r5 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r6 = virtualinvoke $r5.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i3);

        $r7 = (com.android.server.wm.WindowContainer) $r6;

        $z2 = specialinvoke r0.<com.android.server.wm.WindowContainer: boolean processForAllActivitiesWithBoundary(java.util.function.Function,com.android.server.wm.WindowContainer,boolean,boolean,boolean[],com.android.server.wm.WindowContainer)>(r1, r2, z0, z1, r3, $r7);

        if $z2 == 0 goto label6;

        return 1;

     label6:
        i3 = i3 + 1;

        goto label5;

     label7:
        return 0;
    }

    static com.android.server.wm.WindowContainer fromBinder(android.os.IBinder)
    {
        android.os.IBinder r0;
        com.android.server.wm.WindowContainer$RemoteToken $r1;
        com.android.server.wm.WindowContainer $r2;

        r0 := @parameter0: android.os.IBinder;

        $r1 = staticinvoke <com.android.server.wm.WindowContainer$RemoteToken: com.android.server.wm.WindowContainer$RemoteToken fromBinder(android.os.IBinder)>(r0);

        $r2 = virtualinvoke $r1.<com.android.server.wm.WindowContainer$RemoteToken: com.android.server.wm.WindowContainer getContainer()>();

        return $r2;
    }

    private com.android.server.wm.ActivityRecord getActivity(java.util.function.Predicate, com.android.server.wm.WindowContainer, boolean, boolean, boolean[])
    {
        com.android.server.wm.WindowContainer r0, r2, $r7, $r11;
        java.util.function.Predicate r1;
        boolean z0, z1;
        boolean[] r3;
        int i0, $i1, i2, i3;
        com.android.server.wm.WindowList $r4, $r5, $r8, $r9;
        java.lang.Object $r6, $r10;
        com.android.server.wm.ActivityRecord r12, r13;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: java.util.function.Predicate;

        r2 := @parameter1: com.android.server.wm.WindowContainer;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r3 := @parameter4: boolean[];

        if z1 == 0 goto label4;

        $r8 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i1 = virtualinvoke $r8.<com.android.server.wm.WindowList: int size()>();

        i2 = $i1 - 1;

     label1:
        if i2 < 0 goto label3;

        $r9 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r10 = virtualinvoke $r9.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i2);

        $r11 = (com.android.server.wm.WindowContainer) $r10;

        r12 = specialinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.ActivityRecord processGetActivityWithBoundary(java.util.function.Predicate,com.android.server.wm.WindowContainer,boolean,boolean,boolean[],com.android.server.wm.WindowContainer)>(r1, r2, z0, z1, r3, $r11);

        if r12 == null goto label2;

        return r12;

     label2:
        i2 = i2 + -1;

        goto label1;

     label3:
        goto label7;

     label4:
        $r4 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        i0 = virtualinvoke $r4.<com.android.server.wm.WindowList: int size()>();

        i3 = 0;

     label5:
        if i3 >= i0 goto label7;

        $r5 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r6 = virtualinvoke $r5.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i3);

        $r7 = (com.android.server.wm.WindowContainer) $r6;

        r13 = specialinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.ActivityRecord processGetActivityWithBoundary(java.util.function.Predicate,com.android.server.wm.WindowContainer,boolean,boolean,boolean[],com.android.server.wm.WindowContainer)>(r1, r2, z0, z1, r3, $r7);

        if r13 == null goto label6;

        return r13;

     label6:
        i3 = i3 + 1;

        goto label5;

     label7:
        return null;
    }

    private void getParents(java.util.LinkedList)
    {
        com.android.server.wm.WindowContainer r0, r2;
        java.util.LinkedList r1;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: java.util.LinkedList;

        virtualinvoke r1.<java.util.LinkedList: void clear()>();

        r2 = r0;

     label1:
        virtualinvoke r1.<java.util.LinkedList: void addLast(java.lang.Object)>(r2);

        r2 = r2.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer mParent>;

        if r2 != null goto label2;

        return;

     label2:
        goto label1;
    }

    private int getPrefixOrderIndex(com.android.server.wm.WindowContainer)
    {
        com.android.server.wm.WindowContainer r0, r1, r5, r6;
        com.android.server.wm.WindowList $r2, $r3;
        int $i0, $i1, $i2, $i3, i4, i5, i6;
        java.lang.Object $r4;

        r0 := @this: com.android.server.wm.WindowContainer;

        r5 := @parameter0: com.android.server.wm.WindowContainer;

        i4 = 0;

        i5 = 0;

     label1:
        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i0 = virtualinvoke $r2.<com.android.server.wm.WindowList: int size()>();

        if i5 >= $i0 goto label3;

        $r3 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r4 = virtualinvoke $r3.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i5);

        r1 = (com.android.server.wm.WindowContainer) $r4;

        if r5 != r1 goto label2;

        goto label3;

     label2:
        $i3 = r1.<com.android.server.wm.WindowContainer: int mTreeWeight>;

        i4 = i4 + $i3;

        i5 = i5 + 1;

        goto label1;

     label3:
        r6 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer mParent>;

        i6 = i4;

        if r6 == null goto label4;

        $i2 = specialinvoke r6.<com.android.server.wm.WindowContainer: int getPrefixOrderIndex(com.android.server.wm.WindowContainer)>(r0);

        i6 = i4 + $i2;

     label4:
        $i1 = i6 + 1;

        return $i1;
    }

    private com.android.server.wm.Task getTask(java.util.function.Predicate, com.android.server.wm.WindowContainer, boolean, boolean, boolean[])
    {
        com.android.server.wm.WindowContainer r0, r2, $r7, $r11;
        java.util.function.Predicate r1;
        boolean z0, z1;
        boolean[] r3;
        int i0, $i1, i2, i3;
        com.android.server.wm.WindowList $r4, $r5, $r8, $r9;
        java.lang.Object $r6, $r10;
        com.android.server.wm.Task r12, r13;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: java.util.function.Predicate;

        r2 := @parameter1: com.android.server.wm.WindowContainer;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r3 := @parameter4: boolean[];

        if z1 == 0 goto label4;

        $r8 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i1 = virtualinvoke $r8.<com.android.server.wm.WindowList: int size()>();

        i2 = $i1 - 1;

     label1:
        if i2 < 0 goto label3;

        $r9 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r10 = virtualinvoke $r9.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i2);

        $r11 = (com.android.server.wm.WindowContainer) $r10;

        r12 = specialinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.Task processGetTaskWithBoundary(java.util.function.Predicate,com.android.server.wm.WindowContainer,boolean,boolean,boolean[],com.android.server.wm.WindowContainer)>(r1, r2, z0, z1, r3, $r11);

        if r12 == null goto label2;

        return r12;

     label2:
        i2 = i2 + -1;

        goto label1;

     label3:
        goto label7;

     label4:
        $r4 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        i0 = virtualinvoke $r4.<com.android.server.wm.WindowList: int size()>();

        i3 = 0;

     label5:
        if i3 >= i0 goto label7;

        $r5 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r6 = virtualinvoke $r5.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i3);

        $r7 = (com.android.server.wm.WindowContainer) $r6;

        r13 = specialinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.Task processGetTaskWithBoundary(java.util.function.Predicate,com.android.server.wm.WindowContainer,boolean,boolean,boolean[],com.android.server.wm.WindowContainer)>(r1, r2, z0, z1, r3, $r7);

        if r13 == null goto label6;

        return r13;

     label6:
        i3 = i3 + 1;

        goto label5;

     label7:
        return null;
    }

    static void lambda$applyAnimationUnchecked$13(int, com.android.server.wm.AnimationAdapter)
    {
        int i0;
        com.android.server.wm.AnimationAdapter r0;

        i0 := @parameter0: int;

        r0 := @parameter1: com.android.server.wm.AnimationAdapter;

        return;
    }

    static boolean lambda$getActivityAbove$1(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.ActivityRecord r0;

        r0 := @parameter0: com.android.server.wm.ActivityRecord;

        return 1;
    }

    static boolean lambda$getActivityBelow$2(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.ActivityRecord r0;

        r0 := @parameter0: com.android.server.wm.ActivityRecord;

        return 1;
    }

    static boolean lambda$getBottomMostActivity$3(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.ActivityRecord r0;

        r0 := @parameter0: com.android.server.wm.ActivityRecord;

        return 1;
    }

    static boolean lambda$getBottomMostTask$11(com.android.server.wm.Task)
    {
        com.android.server.wm.Task r0;

        r0 := @parameter0: com.android.server.wm.Task;

        return 1;
    }

    static boolean lambda$getTaskAbove$9(com.android.server.wm.Task)
    {
        com.android.server.wm.Task r0;

        r0 := @parameter0: com.android.server.wm.Task;

        return 1;
    }

    static boolean lambda$getTaskBelow$10(com.android.server.wm.Task)
    {
        com.android.server.wm.Task r0;

        r0 := @parameter0: com.android.server.wm.Task;

        return 1;
    }

    static boolean lambda$getTopActivity$5(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.ActivityRecord r0;

        r0 := @parameter0: com.android.server.wm.ActivityRecord;

        return 1;
    }

    static boolean lambda$getTopActivity$6(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.ActivityRecord r0;
        boolean $z0, $z1;

        r0 := @parameter0: com.android.server.wm.ActivityRecord;

        $z0 = virtualinvoke r0.<com.android.server.wm.ActivityRecord: boolean isTaskOverlay()>();

        $z1 = $z0 ^ 1;

        return $z1;
    }

    static boolean lambda$getTopActivity$7(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.ActivityRecord r0;
        boolean $z0, $z1;

        r0 := @parameter0: com.android.server.wm.ActivityRecord;

        $z0 = r0.<com.android.server.wm.ActivityRecord: boolean finishing>;

        $z1 = $z0 ^ 1;

        return $z1;
    }

    static boolean lambda$getTopActivity$8(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.ActivityRecord r0;
        boolean $z0, $z1, z2;

        r0 := @parameter0: com.android.server.wm.ActivityRecord;

        $z0 = r0.<com.android.server.wm.ActivityRecord: boolean finishing>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<com.android.server.wm.ActivityRecord: boolean isTaskOverlay()>();

        if $z1 != 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    static boolean lambda$getTopMostActivity$4(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.ActivityRecord r0;

        r0 := @parameter0: com.android.server.wm.ActivityRecord;

        return 1;
    }

    static boolean lambda$getTopMostTask$12(com.android.server.wm.Task)
    {
        com.android.server.wm.Task r0;

        r0 := @parameter0: com.android.server.wm.Task;

        return 1;
    }

    static boolean lambda$isAppTransitioning$0(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.ActivityRecord r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.wm.ActivityRecord;

        $z0 = virtualinvoke r0.<com.android.server.wm.ActivityRecord: boolean isAnimating(int)>(3);

        return $z0;
    }

    private android.view.animation.Animation loadAnimation(android.view.WindowManager$LayoutParams, int, boolean, boolean)
    {
        com.android.server.wm.WindowContainer r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean z0, $z1, $z2, $z3, $z4, $z5, z6;
        java.lang.String r4, r5, r6, r7, $r16, r25;
        android.graphics.Rect $r8, $r9, $r10, $r11, $r12;
        com.android.server.wm.DisplayContent $r13, r23;
        com.android.server.wm.AppTransition $r14;
        com.android.server.wm.WindowManagerService $r15;
        float $f0;
        java.lang.Object[] $r17, $r20;
        com.android.server.wm.ProtoLogGroup $r18, $r21;
        java.lang.Boolean $r19;
        android.view.WindowManager$LayoutParams r22;
        android.view.DisplayInfo r24;
        android.content.res.Configuration r28;
        android.view.animation.Animation r29;

        r0 := @this: com.android.server.wm.WindowContainer;

        r22 := @parameter0: android.view.WindowManager$LayoutParams;

        i0 := @parameter1: int;

        z6 := @parameter2: boolean;

        z0 := @parameter3: boolean;

        $z1 = virtualinvoke r0.<com.android.server.wm.WindowContainer: boolean isOrganized()>();

        if $z1 == 0 goto label1;

        return null;

     label1:
        r23 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.DisplayContent getDisplayContent()>();

        r24 = virtualinvoke r23.<com.android.server.wm.DisplayContent: android.view.DisplayInfo getDisplayInfo()>();

        i1 = r24.<android.view.DisplayInfo: int appWidth>;

        i2 = r24.<android.view.DisplayInfo: int appHeight>;

        $z2 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_APP_TRANSITIONS_ANIM_enabled>;

        if $z2 == 0 goto label2;

        r25 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        $r21 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_APP_TRANSITIONS_ANIM>;

        $r20 = newarray (java.lang.Object)[1];

        $r20[0] = r25;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void v(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r21, 1584270979, 0, null, $r20);

     label2:
        $r8 = new android.graphics.Rect;

        specialinvoke $r8.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, i1, i2);

        $r9 = new android.graphics.Rect;

        $i4 = r24.<android.view.DisplayInfo: int logicalWidth>;

        $i3 = r24.<android.view.DisplayInfo: int logicalHeight>;

        specialinvoke $r9.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, $i4, $i3);

        $r10 = new android.graphics.Rect;

        specialinvoke $r10.<android.graphics.Rect: void <init>()>();

        $r11 = new android.graphics.Rect;

        specialinvoke $r11.<android.graphics.Rect: void <init>()>();

        $r12 = new android.graphics.Rect;

        specialinvoke $r12.<android.graphics.Rect: void <init>()>();

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void getAnimationFrames(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>($r8, $r10, $r11, $r12);

        $z3 = r0.<com.android.server.wm.WindowContainer: boolean mLaunchTaskBehind>;

        if $z3 == 0 goto label3;

        z6 = 0;

        goto label3;

     label3:
        $z4 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_APP_TRANSITIONS_enabled>;

        if $z4 == 0 goto label4;

        $r16 = staticinvoke <com.android.server.wm.AppTransition: java.lang.String appTransitionToString(int)>(i0);

        r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r16);

        r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r8);

        r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r10);

        r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r12);

        $r18 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_APP_TRANSITIONS>;

        $r17 = newarray (java.lang.Object)[5];

        $r17[0] = r4;

        $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z6);

        $r17[1] = $r19;

        $r17[2] = r5;

        $r17[3] = r6;

        $r17[4] = r7;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void d(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r18, 1831008694, 12, null, $r17);

     label4:
        r28 = virtualinvoke r23.<com.android.server.wm.DisplayContent: android.content.res.Configuration getConfiguration()>();

        $r13 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.DisplayContent getDisplayContent()>();

        $r14 = $r13.<com.android.server.wm.DisplayContent: com.android.server.wm.AppTransition mAppTransition>;

        $i5 = r28.<android.content.res.Configuration: int uiMode>;

        $i6 = r28.<android.content.res.Configuration: int orientation>;

        $z5 = virtualinvoke r0.<com.android.server.wm.WindowContainer: boolean inFreeformWindowingMode()>();

        r29 = virtualinvoke $r14.<com.android.server.wm.AppTransition: android.view.animation.Animation loadAnimation(android.view.WindowManager$LayoutParams,int,boolean,int,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean,boolean,com.android.server.wm.WindowContainer)>(r22, i0, z6, $i5, $i6, $r8, $r9, $r10, $r12, $r11, z0, $z5, r0);

        if r29 == null goto label6;

        if r29 == null goto label5;

        virtualinvoke r29.<android.view.animation.Animation: void restrictDuration(long)>(3000L);

     label5:
        $i7 = virtualinvoke $r8.<android.graphics.Rect: int width()>();

        $i8 = virtualinvoke $r8.<android.graphics.Rect: int height()>();

        virtualinvoke r29.<android.view.animation.Animation: void initialize(int,int,int,int)>($i7, $i8, i1, i2);

        $r15 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowManagerService mWmService>;

        $f0 = virtualinvoke $r15.<com.android.server.wm.WindowManagerService: float getTransitionAnimationScaleLocked()>();

        virtualinvoke r29.<android.view.animation.Animation: void scaleCurrentDuration(float)>($f0);

        goto label6;

     label6:
        return r29;
    }

    private com.android.server.wm.WindowContainer$ForAllWindowsConsumerWrapper obtainConsumerWrapper(java.util.function.Consumer)
    {
        com.android.server.wm.WindowContainer r0;
        java.util.function.Consumer r1;
        com.android.server.wm.WindowContainer$ForAllWindowsConsumerWrapper r2, $r5, r6;
        android.util.Pools$SynchronizedPool $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: java.util.function.Consumer;

        $r3 = r0.<com.android.server.wm.WindowContainer: android.util.Pools$SynchronizedPool mConsumerWrapperPool>;

        $r4 = virtualinvoke $r3.<android.util.Pools$SynchronizedPool: java.lang.Object acquire()>();

        r2 = (com.android.server.wm.WindowContainer$ForAllWindowsConsumerWrapper) $r4;

        r6 = r2;

        if r2 != null goto label1;

        $r5 = new com.android.server.wm.WindowContainer$ForAllWindowsConsumerWrapper;

        specialinvoke $r5.<com.android.server.wm.WindowContainer$ForAllWindowsConsumerWrapper: void <init>(com.android.server.wm.WindowContainer,com.android.server.wm.WindowContainer$1)>(r0, null);

        r6 = $r5;

     label1:
        virtualinvoke r6.<com.android.server.wm.WindowContainer$ForAllWindowsConsumerWrapper: void setConsumer(java.util.function.Consumer)>(r1);

        return r6;
    }

    private void onChildAdded(com.android.server.wm.WindowContainer)
    {
        com.android.server.wm.WindowContainer r0, r1, r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: com.android.server.wm.WindowContainer;

        $i1 = r0.<com.android.server.wm.WindowContainer: int mTreeWeight>;

        $i0 = r1.<com.android.server.wm.WindowContainer: int mTreeWeight>;

        $i2 = $i1 + $i0;

        r0.<com.android.server.wm.WindowContainer: int mTreeWeight> = $i2;

        r2 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getParent()>();

     label1:
        if r2 == null goto label2;

        $i4 = r2.<com.android.server.wm.WindowContainer: int mTreeWeight>;

        $i3 = r1.<com.android.server.wm.WindowContainer: int mTreeWeight>;

        $i5 = $i4 + $i3;

        r2.<com.android.server.wm.WindowContainer: int mTreeWeight> = $i5;

        r2 = virtualinvoke r2.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getParent()>();

        goto label1;

     label2:
        virtualinvoke r0.<com.android.server.wm.WindowContainer: void onChildPositionChanged(com.android.server.wm.WindowContainer)>(r1);

        return;
    }

    private void onChildRemoved(com.android.server.wm.WindowContainer)
    {
        com.android.server.wm.WindowContainer r0, r1, r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: com.android.server.wm.WindowContainer;

        $i1 = r0.<com.android.server.wm.WindowContainer: int mTreeWeight>;

        $i0 = r1.<com.android.server.wm.WindowContainer: int mTreeWeight>;

        $i2 = $i1 - $i0;

        r0.<com.android.server.wm.WindowContainer: int mTreeWeight> = $i2;

        r2 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getParent()>();

     label1:
        if r2 == null goto label2;

        $i4 = r2.<com.android.server.wm.WindowContainer: int mTreeWeight>;

        $i3 = r1.<com.android.server.wm.WindowContainer: int mTreeWeight>;

        $i5 = $i4 - $i3;

        r2.<com.android.server.wm.WindowContainer: int mTreeWeight> = $i5;

        r2 = virtualinvoke r2.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getParent()>();

        goto label1;

     label2:
        virtualinvoke r0.<com.android.server.wm.WindowContainer: void onChildPositionChanged(com.android.server.wm.WindowContainer)>(r1);

        return;
    }

    private boolean processForAllActivitiesWithBoundary(java.util.function.Function, com.android.server.wm.WindowContainer, boolean, boolean, boolean[], com.android.server.wm.WindowContainer)
    {
        com.android.server.wm.WindowContainer r0, r2, r4;
        java.util.function.Function r1;
        boolean z0, z1, $z2, $z3, $z4;
        boolean[] r3;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: java.util.function.Function;

        r2 := @parameter1: com.android.server.wm.WindowContainer;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r3 := @parameter4: boolean[];

        r4 := @parameter5: com.android.server.wm.WindowContainer;

        if r4 != r2 goto label1;

        r3[0] = 1;

        if z0 != 0 goto label1;

        return 0;

     label1:
        $z2 = r3[0];

        if $z2 == 0 goto label2;

        $z4 = virtualinvoke r4.<com.android.server.wm.WindowContainer: boolean forAllActivities(java.util.function.Function,boolean)>(r1, z1);

        return $z4;

     label2:
        $z3 = specialinvoke r4.<com.android.server.wm.WindowContainer: boolean forAllActivities(java.util.function.Function,com.android.server.wm.WindowContainer,boolean,boolean,boolean[])>(r1, r2, z0, z1, r3);

        return $z3;
    }

    private com.android.server.wm.ActivityRecord processGetActivityWithBoundary(java.util.function.Predicate, com.android.server.wm.WindowContainer, boolean, boolean, boolean[], com.android.server.wm.WindowContainer)
    {
        com.android.server.wm.WindowContainer r0, r2, r4;
        java.util.function.Predicate r1;
        boolean z0, z1, $z2;
        boolean[] r3;
        com.android.server.wm.ActivityRecord $r5, $r6;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: java.util.function.Predicate;

        r2 := @parameter1: com.android.server.wm.WindowContainer;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r3 := @parameter4: boolean[];

        r4 := @parameter5: com.android.server.wm.WindowContainer;

        if r4 == r2 goto label1;

        if r2 != null goto label2;

     label1:
        r3[0] = 1;

        if z0 != 0 goto label2;

        return null;

     label2:
        $z2 = r3[0];

        if $z2 == 0 goto label3;

        $r6 = virtualinvoke r4.<com.android.server.wm.WindowContainer: com.android.server.wm.ActivityRecord getActivity(java.util.function.Predicate,boolean)>(r1, z1);

        return $r6;

     label3:
        $r5 = specialinvoke r4.<com.android.server.wm.WindowContainer: com.android.server.wm.ActivityRecord getActivity(java.util.function.Predicate,com.android.server.wm.WindowContainer,boolean,boolean,boolean[])>(r1, r2, z0, z1, r3);

        return $r5;
    }

    private com.android.server.wm.Task processGetTaskWithBoundary(java.util.function.Predicate, com.android.server.wm.WindowContainer, boolean, boolean, boolean[], com.android.server.wm.WindowContainer)
    {
        com.android.server.wm.WindowContainer r0, r2, r4;
        java.util.function.Predicate r1;
        boolean z0, z1, $z2;
        boolean[] r3;
        com.android.server.wm.Task $r5, $r6;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: java.util.function.Predicate;

        r2 := @parameter1: com.android.server.wm.WindowContainer;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r3 := @parameter4: boolean[];

        r4 := @parameter5: com.android.server.wm.WindowContainer;

        if r4 == r2 goto label1;

        if r2 != null goto label2;

     label1:
        r3[0] = 1;

        if z0 != 0 goto label2;

        return null;

     label2:
        $z2 = r3[0];

        if $z2 == 0 goto label3;

        $r6 = virtualinvoke r4.<com.android.server.wm.WindowContainer: com.android.server.wm.Task getTask(java.util.function.Predicate,boolean)>(r1, z1);

        return $r6;

     label3:
        $r5 = specialinvoke r4.<com.android.server.wm.WindowContainer: com.android.server.wm.Task getTask(java.util.function.Predicate,com.android.server.wm.WindowContainer,boolean,boolean,boolean[])>(r1, r2, z0, z1, r3);

        return $r5;
    }

    void addChild(com.android.server.wm.WindowContainer, int)
    {
        com.android.server.wm.WindowContainer r0, $r12, $r18, r29;
        int i0, $i1, $i2, i3;
        boolean $z0;
        com.android.server.wm.WindowList $r2, $r3, $r8, $r31;
        java.lang.StringBuilder $r4, $r13;
        java.lang.IllegalArgumentException $r10, $r27;
        java.lang.String $r11, $r15, $r19, $r22, $r25, $r28;

        r0 := @this: com.android.server.wm.WindowContainer;

        r29 := @parameter0: com.android.server.wm.WindowContainer;

        i0 := @parameter1: int;

        $z0 = r29.<com.android.server.wm.WindowContainer: boolean mReparenting>;

        if $z0 != 0 goto label2;

        $r12 = virtualinvoke r29.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getParent()>();

        if $r12 != null goto label1;

        goto label2;

     label1:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addChild: container=");

        $r15 = virtualinvoke r29.<com.android.server.wm.WindowContainer: java.lang.String getName()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is already a child of container=");

        $r18 = virtualinvoke r29.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getParent()>();

        $r19 = virtualinvoke $r18.<com.android.server.wm.WindowContainer: java.lang.String getName()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can\'t add to container=");

        $r22 = virtualinvoke r0.<com.android.server.wm.WindowContainer: java.lang.String getName()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n callers=");

        $r25 = staticinvoke <android.os.Debug: java.lang.String getCallers(int,java.lang.String)>(15, "\n");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = new java.lang.IllegalArgumentException;

        $r28 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r28);

        throw $r27;

     label2:
        if i0 >= 0 goto label3;

        if i0 != -2147483648 goto label4;

     label3:
        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i1 = virtualinvoke $r2.<com.android.server.wm.WindowList: int size()>();

        if i0 <= $i1 goto label5;

        if i0 != 2147483647 goto label4;

        goto label5;

     label4:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addChild: invalid position=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", children number=");

        $r8 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i2 = virtualinvoke $r8.<com.android.server.wm.WindowList: int size()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label5:
        if i0 != 2147483647 goto label6;

        $r3 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        i3 = virtualinvoke $r3.<com.android.server.wm.WindowList: int size()>();

        goto label7;

     label6:
        i3 = i0;

        if i0 != -2147483648 goto label7;

        i3 = 0;

     label7:
        $r31 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        virtualinvoke $r31.<com.android.server.wm.WindowList: void add(int,java.lang.Object)>(i3, r29);

        virtualinvoke r29.<com.android.server.wm.WindowContainer: void setParent(com.android.server.wm.WindowContainer)>(r0);

        return;
    }

    protected void addChild(com.android.server.wm.WindowContainer, java.util.Comparator)
    {
        com.android.server.wm.WindowContainer r0, r1, $r7, $r8, $r14;
        int i1, $i2, i3, i4;
        boolean $z0;
        com.android.server.wm.WindowList $r2, $r3, $r4, $r5;
        java.lang.Object $r6;
        java.lang.StringBuilder $r9;
        java.lang.String $r11, $r15, $r18, $r21;
        java.lang.IllegalArgumentException $r20;
        java.util.Comparator r22;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: com.android.server.wm.WindowContainer;

        r22 := @parameter1: java.util.Comparator;

        $z0 = r1.<com.android.server.wm.WindowContainer: boolean mReparenting>;

        if $z0 != 0 goto label2;

        $r8 = virtualinvoke r1.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getParent()>();

        if $r8 != null goto label1;

        goto label2;

     label1:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addChild: container=");

        $r11 = virtualinvoke r1.<com.android.server.wm.WindowContainer: java.lang.String getName()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is already a child of container=");

        $r14 = virtualinvoke r1.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getParent()>();

        $r15 = virtualinvoke $r14.<com.android.server.wm.WindowContainer: java.lang.String getName()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can\'t add to container=");

        $r18 = virtualinvoke r0.<com.android.server.wm.WindowContainer: java.lang.String getName()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = new java.lang.IllegalArgumentException;

        $r21 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21);

        throw $r20;

     label2:
        i3 = -1;

        if r22 == null goto label5;

        $r4 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        i1 = virtualinvoke $r4.<com.android.server.wm.WindowList: int size()>();

        i4 = 0;

     label3:
        i3 = -1;

        if i4 >= i1 goto label5;

        $r5 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r6 = virtualinvoke $r5.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i4);

        $r7 = (com.android.server.wm.WindowContainer) $r6;

        $i2 = interfaceinvoke r22.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r1, $r7);

        if $i2 >= 0 goto label4;

        i3 = i4;

        goto label5;

     label4:
        i4 = i4 + 1;

        goto label3;

     label5:
        if i3 != -1 goto label6;

        $r3 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        virtualinvoke $r3.<com.android.server.wm.WindowList: boolean add(java.lang.Object)>(r1);

        goto label7;

     label6:
        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        virtualinvoke $r2.<com.android.server.wm.WindowList: void add(int,java.lang.Object)>(i3, r1);

     label7:
        virtualinvoke r1.<com.android.server.wm.WindowContainer: void setParent(com.android.server.wm.WindowContainer)>(r0);

        return;
    }

    boolean addChildrenToSyncSet(int)
    {
        com.android.server.wm.WindowContainer r0, r1;
        int i0, $i1, i2;
        com.android.server.wm.WindowList $r2, $r3;
        java.lang.Object $r4;
        com.android.server.wm.BLASTSyncEngine $r5;
        boolean $z0, z1;

        r0 := @this: com.android.server.wm.WindowContainer;

        i0 := @parameter0: int;

        z1 = 0;

        i2 = 0;

     label1:
        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i1 = virtualinvoke $r2.<com.android.server.wm.WindowList: int size()>();

        if i2 >= $i1 goto label2;

        $r3 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r4 = virtualinvoke $r3.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i2);

        r1 = (com.android.server.wm.WindowContainer) $r4;

        $r5 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.BLASTSyncEngine mBLASTSyncEngine>;

        $z0 = virtualinvoke $r5.<com.android.server.wm.BLASTSyncEngine: boolean addToSyncSet(int,com.android.server.wm.WindowContainer)>(i0, r1);

        z1 = z1 | $z0;

        i2 = i2 + 1;

        goto label1;

     label2:
        return z1;
    }

    boolean applyAnimation(android.view.WindowManager$LayoutParams, int, boolean, boolean, java.util.ArrayList)
    {
        com.android.server.wm.WindowContainer r0;
        int i0;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        java.util.ArrayList r1;
        com.android.server.wm.WindowManagerService $r2;
        java.lang.Object[] $r3;
        com.android.server.wm.ProtoLogGroup $r4;
        java.lang.Throwable $r5;
        android.view.WindowManager$LayoutParams r6;
        java.lang.String r7;

        r0 := @this: com.android.server.wm.WindowContainer;

        r6 := @parameter0: android.view.WindowManager$LayoutParams;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r1 := @parameter4: java.util.ArrayList;

        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowManagerService mWmService>;

        $z2 = $r2.<com.android.server.wm.WindowManagerService: boolean mDisableTransitionAnimation>;

        if $z2 == 0 goto label2;

        $z5 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_APP_TRANSITIONS_ANIM_enabled>;

        if $z5 == 0 goto label1;

        r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        $r4 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_APP_TRANSITIONS_ANIM>;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r7;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void v(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r4, -33096143, 0, null, $r3);

     label1:
        virtualinvoke r0.<com.android.server.wm.WindowContainer: void cancelAnimation()>();

        return 0;

     label2:
        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(32L, "WC#applyAnimation");

        $z3 = virtualinvoke r0.<com.android.server.wm.WindowContainer: boolean okToAnimate()>();

        if $z3 == 0 goto label4;

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void applyAnimationUnchecked(android.view.WindowManager$LayoutParams,boolean,int,boolean,java.util.ArrayList)>(r6, z0, i0, z1, r1);

     label3:
        goto label5;

     label4:
        virtualinvoke r0.<com.android.server.wm.WindowContainer: void cancelAnimation()>();

     label5:
        staticinvoke <android.os.Trace: void traceEnd(long)>(32L);

        $z4 = virtualinvoke r0.<com.android.server.wm.WindowContainer: boolean isAnimating()>();

        return $z4;

     label6:
        $r5 := @caughtexception;

        staticinvoke <android.os.Trace: void traceEnd(long)>(32L);

        throw $r5;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    protected void applyAnimationUnchecked(android.view.WindowManager$LayoutParams, boolean, int, boolean, java.util.ArrayList)
    {
        com.android.server.wm.WindowContainer r0;
        boolean z0, z1, $z2, $z3, $z4;
        int i0, $i1, $i2;
        com.android.server.wm.AnimationAdapter r1, r13;
        java.lang.Object $r2, $r3;
        android.view.SurfaceControl$Transaction $r4, $r7;
        com.android.server.wm.SurfaceFreezer $r5;
        com.android.server.wm.SurfaceFreezer$Snapshot $r6;
        com.android.server.wm.'-$$Lambda$WindowContainer$W-sszXlHtLhM67cNP4BrYetIqZA' $r8;
        android.util.ArraySet $r9;
        android.view.WindowManager$LayoutParams r10;
        java.util.ArrayList r11;
        android.util.Pair r12;
        com.android.server.wm.DisplayContent r14;
        com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback r15;

        r0 := @this: com.android.server.wm.WindowContainer;

        r10 := @parameter0: android.view.WindowManager$LayoutParams;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        z1 := @parameter3: boolean;

        r11 := @parameter4: java.util.ArrayList;

        r12 = virtualinvoke r0.<com.android.server.wm.WindowContainer: android.util.Pair getAnimationAdapter(android.view.WindowManager$LayoutParams,int,boolean,boolean)>(r10, i0, z0, z1);

        $r2 = r12.<android.util.Pair: java.lang.Object first>;

        r1 = (com.android.server.wm.AnimationAdapter) $r2;

        $r3 = r12.<android.util.Pair: java.lang.Object second>;

        r13 = (com.android.server.wm.AnimationAdapter) $r3;

        if r1 == null goto label3;

        if r11 == null goto label1;

        $r9 = r0.<com.android.server.wm.WindowContainer: android.util.ArraySet mSurfaceAnimationSources>;

        virtualinvoke $r9.<android.util.ArraySet: boolean addAll(java.util.Collection)>(r11);

     label1:
        $r4 = virtualinvoke r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl$Transaction getPendingTransaction()>();

        $z2 = virtualinvoke r0.<com.android.server.wm.WindowContainer: boolean isVisible()>();

        $z3 = $z2 ^ 1;

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void startAnimation(android.view.SurfaceControl$Transaction,com.android.server.wm.AnimationAdapter,boolean,int)>($r4, r1, $z3, 1);

        $z4 = interfaceinvoke r1.<com.android.server.wm.AnimationAdapter: boolean getShowWallpaper()>();

        if $z4 == 0 goto label2;

        r14 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.DisplayContent getDisplayContent()>();

        $i1 = r14.<com.android.server.wm.DisplayContent: int pendingLayoutChanges>;

        $i2 = $i1 | 4;

        r14.<com.android.server.wm.DisplayContent: int pendingLayoutChanges> = $i2;

     label2:
        if r13 == null goto label3;

        $r5 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.SurfaceFreezer mSurfaceFreezer>;

        $r6 = $r5.<com.android.server.wm.SurfaceFreezer: com.android.server.wm.SurfaceFreezer$Snapshot mSnapshot>;

        $r7 = virtualinvoke r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl$Transaction getPendingTransaction()>();

        $r8 = <com.android.server.wm._$$Lambda$WindowContainer$W_sszXlHtLhM67cNP4BrYetIqZA: com.android.server.wm.'-$$Lambda$WindowContainer$W-sszXlHtLhM67cNP4BrYetIqZA' INSTANCE>;

        r15 = (com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback) $r8;

        virtualinvoke $r6.<com.android.server.wm.SurfaceFreezer$Snapshot: void startAnimation(android.view.SurfaceControl$Transaction,com.android.server.wm.AnimationAdapter,int,com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback)>($r7, r13, 1, r15);

     label3:
        return;
    }

    void applyMagnificationSpec(android.view.SurfaceControl$Transaction, android.view.MagnificationSpec)
    {
        com.android.server.wm.WindowContainer r0, $r6;
        android.view.SurfaceControl$Transaction r1, $r8;
        android.view.MagnificationSpec r2;
        boolean $z0;
        com.android.server.wm.WindowList $r3, $r4;
        int $i0, i1;
        java.lang.Object $r5;
        float $f0, $f1, $f2, $f3;
        android.view.SurfaceControl $r7, $r9;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        r2 := @parameter1: android.view.MagnificationSpec;

        $z0 = virtualinvoke r0.<com.android.server.wm.WindowContainer: boolean shouldMagnify()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl mSurfaceControl>;

        $f1 = r2.<android.view.MagnificationSpec: float scale>;

        $f0 = r2.<android.view.MagnificationSpec: float scale>;

        $r8 = virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setMatrix(android.view.SurfaceControl,float,float,float,float)>($r7, $f1, 0.0F, 0.0F, $f0);

        $r9 = r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl mSurfaceControl>;

        $f3 = r2.<android.view.MagnificationSpec: float offsetX>;

        $f2 = r2.<android.view.MagnificationSpec: float offsetY>;

        virtualinvoke $r8.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setPosition(android.view.SurfaceControl,float,float)>($r9, $f3, $f2);

        r0.<com.android.server.wm.WindowContainer: android.view.MagnificationSpec mLastMagnificationSpec> = r2;

        goto label3;

     label1:
        virtualinvoke r0.<com.android.server.wm.WindowContainer: void clearMagnificationSpec(android.view.SurfaceControl$Transaction)>(r1);

        i1 = 0;

     label2:
        $r3 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i0 = virtualinvoke $r3.<com.android.server.wm.WindowList: int size()>();

        if i1 >= $i0 goto label3;

        $r4 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r5 = virtualinvoke $r4.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i1);

        $r6 = (com.android.server.wm.WindowContainer) $r5;

        virtualinvoke $r6.<com.android.server.wm.WindowContainer: void applyMagnificationSpec(android.view.SurfaceControl$Transaction,android.view.MagnificationSpec)>(r1, r2);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    com.android.server.wm.ActivityRecord asActivityRecord()
    {
        com.android.server.wm.WindowContainer r0;

        r0 := @this: com.android.server.wm.WindowContainer;

        return null;
    }

    com.android.server.wm.Task asTask()
    {
        com.android.server.wm.WindowContainer r0;

        r0 := @this: com.android.server.wm.WindowContainer;

        return null;
    }

    void assignChildLayers()
    {
        com.android.server.wm.WindowContainer r0;
        android.view.SurfaceControl$Transaction $r1;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = virtualinvoke r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl$Transaction getSyncTransaction()>();

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void assignChildLayers(android.view.SurfaceControl$Transaction)>($r1);

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void scheduleAnimation()>();

        return;
    }

    void assignChildLayers(android.view.SurfaceControl$Transaction)
    {
        com.android.server.wm.WindowContainer r0, r8, r9;
        android.view.SurfaceControl$Transaction r1;
        com.android.server.wm.WindowList $r2, $r3, $r4, $r6;
        int $i0, $i1, i2, i3, i4, i5, i6, i7;
        java.lang.Object $r5, $r7;
        boolean $z0, $z1;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        i2 = 0;

        i3 = 0;

     label1:
        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i0 = virtualinvoke $r2.<com.android.server.wm.WindowList: int size()>();

        if i3 >= $i0 goto label3;

        $r6 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r7 = virtualinvoke $r6.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i3);

        r8 = (com.android.server.wm.WindowContainer) $r7;

        virtualinvoke r8.<com.android.server.wm.WindowContainer: void assignChildLayers(android.view.SurfaceControl$Transaction)>(r1);

        i4 = i2;

        $z1 = virtualinvoke r8.<com.android.server.wm.WindowContainer: boolean needsZBoost()>();

        if $z1 != 0 goto label2;

        virtualinvoke r8.<com.android.server.wm.WindowContainer: void assignLayer(android.view.SurfaceControl$Transaction,int)>(r1, i2);

        i4 = i2 + 1;

     label2:
        i3 = i3 + 1;

        i2 = i4;

        goto label1;

     label3:
        i5 = 0;

        i6 = i2;

     label4:
        $r3 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i1 = virtualinvoke $r3.<com.android.server.wm.WindowList: int size()>();

        if i5 >= $i1 goto label6;

        $r4 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r5 = virtualinvoke $r4.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i5);

        r9 = (com.android.server.wm.WindowContainer) $r5;

        i7 = i6;

        $z0 = virtualinvoke r9.<com.android.server.wm.WindowContainer: boolean needsZBoost()>();

        if $z0 == 0 goto label5;

        virtualinvoke r9.<com.android.server.wm.WindowContainer: void assignLayer(android.view.SurfaceControl$Transaction,int)>(r1, i6);

        i7 = i6 + 1;

     label5:
        i5 = i5 + 1;

        i6 = i7;

        goto label4;

     label6:
        return;
    }

    void assignLayer(android.view.SurfaceControl$Transaction, int)
    {
        com.android.server.wm.WindowContainer r0;
        android.view.SurfaceControl$Transaction r1;
        int i0, $i1;
        android.view.SurfaceControl $r2, $r3;
        boolean z0;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        i0 := @parameter1: int;

        $i1 = r0.<com.android.server.wm.WindowContainer: int mLastLayer>;

        if i0 != $i1 goto label2;

        $r2 = r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl mLastRelativeToLayer>;

        if $r2 == null goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        $r3 = r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl mSurfaceControl>;

        if $r3 == null goto label4;

        if z0 == 0 goto label4;

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void setLayer(android.view.SurfaceControl$Transaction,int)>(r1, i0);

        r0.<com.android.server.wm.WindowContainer: int mLastLayer> = i0;

        r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl mLastRelativeToLayer> = null;

     label4:
        return;
    }

    void assignRelativeLayer(android.view.SurfaceControl$Transaction, android.view.SurfaceControl, int)
    {
        com.android.server.wm.WindowContainer r0;
        android.view.SurfaceControl$Transaction r1;
        android.view.SurfaceControl r2, $r3, $r4;
        int i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        r2 := @parameter1: android.view.SurfaceControl;

        i0 := @parameter2: int;

        $i1 = r0.<com.android.server.wm.WindowContainer: int mLastLayer>;

        if i0 != $i1 goto label2;

        $r3 = r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl mLastRelativeToLayer>;

        if $r3 == r2 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        $r4 = r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl mSurfaceControl>;

        if $r4 == null goto label4;

        if z0 == 0 goto label4;

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void setRelativeLayer(android.view.SurfaceControl$Transaction,android.view.SurfaceControl,int)>(r1, r2, i0);

        r0.<com.android.server.wm.WindowContainer: int mLastLayer> = i0;

        r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl mLastRelativeToLayer> = r2;

     label4:
        return;
    }

    boolean canCreateRemoteAnimationTarget()
    {
        com.android.server.wm.WindowContainer r0;

        r0 := @this: com.android.server.wm.WindowContainer;

        return 0;
    }

    void cancelAnimation()
    {
        com.android.server.wm.WindowContainer r0;
        com.android.server.wm.SurfaceAnimator $r1, $r2, $r4;
        int $i0;
        com.android.server.wm.AnimationAdapter $r3;
        com.android.server.wm.SurfaceFreezer $r5;
        android.view.SurfaceControl$Transaction $r6;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.SurfaceAnimator mSurfaceAnimator>;

        $i0 = virtualinvoke $r1.<com.android.server.wm.SurfaceAnimator: int getAnimationType()>();

        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.SurfaceAnimator mSurfaceAnimator>;

        $r3 = virtualinvoke $r2.<com.android.server.wm.SurfaceAnimator: com.android.server.wm.AnimationAdapter getAnimation()>();

        specialinvoke r0.<com.android.server.wm.WindowContainer: void doAnimationFinished(int,com.android.server.wm.AnimationAdapter)>($i0, $r3);

        $r4 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.SurfaceAnimator mSurfaceAnimator>;

        virtualinvoke $r4.<com.android.server.wm.SurfaceAnimator: void cancelAnimation()>();

        $r5 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.SurfaceFreezer mSurfaceFreezer>;

        $r6 = virtualinvoke r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl$Transaction getPendingTransaction()>();

        virtualinvoke $r5.<com.android.server.wm.SurfaceFreezer: void unfreeze(android.view.SurfaceControl$Transaction)>($r6);

        return;
    }

    void checkAppWindowsReadyToShow()
    {
        com.android.server.wm.WindowContainer r0, $r4;
        com.android.server.wm.WindowList $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i0 = virtualinvoke $r1.<com.android.server.wm.WindowList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r3 = virtualinvoke $r2.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i1);

        $r4 = (com.android.server.wm.WindowContainer) $r3;

        virtualinvoke $r4.<com.android.server.wm.WindowContainer: void checkAppWindowsReadyToShow()>();

        i1 = i1 + -1;

        goto label1;

     label2:
        return;
    }

    void clearMagnificationSpec(android.view.SurfaceControl$Transaction)
    {
        com.android.server.wm.WindowContainer r0, $r5;
        android.view.SurfaceControl$Transaction r1, $r7;
        android.view.MagnificationSpec $r2;
        com.android.server.wm.WindowList $r3, $r10;
        java.lang.Object $r4;
        android.view.SurfaceControl $r6, $r8;
        int i0, $i1;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        $r2 = r0.<com.android.server.wm.WindowContainer: android.view.MagnificationSpec mLastMagnificationSpec>;

        if $r2 == null goto label1;

        $r6 = r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl mSurfaceControl>;

        $r7 = virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setMatrix(android.view.SurfaceControl,float,float,float,float)>($r6, 1.0F, 0.0F, 0.0F, 1.0F);

        $r8 = r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r7.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setPosition(android.view.SurfaceControl,float,float)>($r8, 0.0F, 0.0F);

     label1:
        r0.<com.android.server.wm.WindowContainer: android.view.MagnificationSpec mLastMagnificationSpec> = null;

        i0 = 0;

     label2:
        $r10 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i1 = virtualinvoke $r10.<com.android.server.wm.WindowList: int size()>();

        if i0 >= $i1 goto label3;

        $r3 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r4 = virtualinvoke $r3.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i0);

        $r5 = (com.android.server.wm.WindowContainer) $r4;

        virtualinvoke $r5.<com.android.server.wm.WindowContainer: void clearMagnificationSpec(android.view.SurfaceControl$Transaction)>(r1);

        i0 = i0 + 1;

        goto label2;

     label3:
        return;
    }

    public void commitPendingTransaction()
    {
        com.android.server.wm.WindowContainer r0;

        r0 := @this: com.android.server.wm.WindowContainer;

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void scheduleAnimation()>();

        return;
    }

    public int compareTo(com.android.server.wm.WindowContainer)
    {
        com.android.server.wm.WindowContainer r0, $r22, r26, r27, r29, r30, r31;
        java.util.LinkedList r1, r2, $r12, $r13, $r14, $r15, $r16, $r17, $r24, $r25;
        int i0, $i1, $i2, i6;
        java.lang.Object $r3, $r4, $r10, $r11, $r18, $r20, $r21;
        java.lang.String $r9;
        java.lang.Throwable $r23;
        byte b3, b5;
        com.android.server.wm.WindowList r28, r32;
        java.lang.IllegalArgumentException r33;
        java.lang.StringBuilder r34;

        r0 := @this: com.android.server.wm.WindowContainer;

        r26 := @parameter0: com.android.server.wm.WindowContainer;

        if r0 != r26 goto label01;

        return 0;

     label01:
        r27 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer mParent>;

        b3 = 1;

        if r27 == null goto label04;

        $r22 = r26.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer mParent>;

        if r27 != $r22 goto label04;

        r28 = r27.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i1 = virtualinvoke r28.<com.android.server.wm.WindowList: int indexOf(java.lang.Object)>(r0);

        $i2 = virtualinvoke r28.<com.android.server.wm.WindowList: int indexOf(java.lang.Object)>(r26);

        if $i1 <= $i2 goto label02;

        b5 = 1;

        goto label03;

     label02:
        b5 = -1;

     label03:
        return b5;

     label04:
        r1 = r0.<com.android.server.wm.WindowContainer: java.util.LinkedList mTmpChain1>;

        r2 = r0.<com.android.server.wm.WindowContainer: java.util.LinkedList mTmpChain2>;

     label05:
        specialinvoke r0.<com.android.server.wm.WindowContainer: void getParents(java.util.LinkedList)>(r1);

        specialinvoke r26.<com.android.server.wm.WindowContainer: void getParents(java.util.LinkedList)>(r2);

     label06:
        r29 = null;

     label07:
        $r3 = virtualinvoke r1.<java.util.LinkedList: java.lang.Object peekLast()>();

        r30 = (com.android.server.wm.WindowContainer) $r3;

        $r4 = virtualinvoke r2.<java.util.LinkedList: java.lang.Object peekLast()>();

        r31 = (com.android.server.wm.WindowContainer) $r4;

     label08:
        if r30 == null goto label11;

        if r31 == null goto label11;

        if r30 != r31 goto label11;

     label09:
        $r18 = virtualinvoke r1.<java.util.LinkedList: java.lang.Object removeLast()>();

        r29 = (com.android.server.wm.WindowContainer) $r18;

        virtualinvoke r2.<java.util.LinkedList: java.lang.Object removeLast()>();

        $r20 = virtualinvoke r1.<java.util.LinkedList: java.lang.Object peekLast()>();

        r30 = (com.android.server.wm.WindowContainer) $r20;

        $r21 = virtualinvoke r2.<java.util.LinkedList: java.lang.Object peekLast()>();

        r31 = (com.android.server.wm.WindowContainer) $r21;

     label10:
        goto label08;

     label11:
        if r29 == null goto label17;

        if r29 != r0 goto label12;

        $r16 = r0.<com.android.server.wm.WindowContainer: java.util.LinkedList mTmpChain1>;

        virtualinvoke $r16.<java.util.LinkedList: void clear()>();

        $r17 = r0.<com.android.server.wm.WindowContainer: java.util.LinkedList mTmpChain2>;

        virtualinvoke $r17.<java.util.LinkedList: void clear()>();

        return -1;

     label12:
        if r29 != r26 goto label13;

        $r14 = r0.<com.android.server.wm.WindowContainer: java.util.LinkedList mTmpChain1>;

        virtualinvoke $r14.<java.util.LinkedList: void clear()>();

        $r15 = r0.<com.android.server.wm.WindowContainer: java.util.LinkedList mTmpChain2>;

        virtualinvoke $r15.<java.util.LinkedList: void clear()>();

        return 1;

     label13:
        r32 = r29.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r10 = virtualinvoke r1.<java.util.LinkedList: java.lang.Object peekLast()>();

        i6 = virtualinvoke r32.<com.android.server.wm.WindowList: int indexOf(java.lang.Object)>($r10);

        $r11 = virtualinvoke r2.<java.util.LinkedList: java.lang.Object peekLast()>();

        i0 = virtualinvoke r32.<com.android.server.wm.WindowList: int indexOf(java.lang.Object)>($r11);

     label14:
        if i6 <= i0 goto label15;

        goto label16;

     label15:
        b3 = -1;

     label16:
        $r12 = r0.<com.android.server.wm.WindowContainer: java.util.LinkedList mTmpChain1>;

        virtualinvoke $r12.<java.util.LinkedList: void clear()>();

        $r13 = r0.<com.android.server.wm.WindowContainer: java.util.LinkedList mTmpChain2>;

        virtualinvoke $r13.<java.util.LinkedList: void clear()>();

        return b3;

     label17:
        r33 = new java.lang.IllegalArgumentException;

        r34 = new java.lang.StringBuilder;

        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No in the same hierarchy this=");

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" other=");

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r9 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r33.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw r33;

     label18:
        $r23 := @caughtexception;

        $r24 = r0.<com.android.server.wm.WindowContainer: java.util.LinkedList mTmpChain1>;

        virtualinvoke $r24.<java.util.LinkedList: void clear()>();

        $r25 = r0.<com.android.server.wm.WindowContainer: java.util.LinkedList mTmpChain2>;

        virtualinvoke $r25.<java.util.LinkedList: void clear()>();

        throw $r23;

        catch java.lang.Throwable from label05 to label06 with label18;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch java.lang.Throwable from label13 to label14 with label18;
        catch java.lang.Throwable from label17 to label18 with label18;
    }

    public volatile int compareTo(java.lang.Object)
    {
        com.android.server.wm.WindowContainer r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.android.server.wm.WindowContainer) r1;

        $i0 = virtualinvoke r0.<com.android.server.wm.WindowContainer: int compareTo(com.android.server.wm.WindowContainer)>($r2);

        return $i0;
    }

    android.view.RemoteAnimationTarget createRemoteAnimationTarget(com.android.server.wm.RemoteAnimationController$RemoteAnimationRecord)
    {
        com.android.server.wm.WindowContainer r0;
        com.android.server.wm.RemoteAnimationController$RemoteAnimationRecord r1;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: com.android.server.wm.RemoteAnimationController$RemoteAnimationRecord;

        return null;
    }

    void createSurfaceControl(boolean)
    {
        com.android.server.wm.WindowContainer r0;
        boolean z0;
        android.view.SurfaceControl$Builder $r1;

        r0 := @this: com.android.server.wm.WindowContainer;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl$Builder makeSurface()>();

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void setInitialSurfaceControlProperties(android.view.SurfaceControl$Builder)>($r1);

        return;
    }

    void dump(java.io.PrintWriter, java.lang.String, boolean)
    {
        com.android.server.wm.WindowContainer r0, $r5, $r9;
        java.io.PrintWriter r1;
        java.lang.String r2, $r11, $r15;
        boolean z0, $z1;
        com.android.server.wm.SurfaceAnimator $r4, r16;
        java.lang.StringBuilder $r6, $r12;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r4 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.SurfaceAnimator mSurfaceAnimator>;

        $z1 = virtualinvoke $r4.<com.android.server.wm.SurfaceAnimator: boolean isAnimating()>();

        if $z1 == 0 goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("ContainerAnimator:");

        r16 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.SurfaceAnimator mSurfaceAnimator>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r16.<com.android.server.wm.SurfaceAnimator: void dump(java.io.PrintWriter,java.lang.String)>(r1, $r15);

     label1:
        $r5 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer mLastOrientationSource>;

        if $r5 == null goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mLastOrientationSource=");

        $r9 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer mLastOrientationSource>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r11);

     label2:
        return;
    }

    public void dumpDebug(android.util.proto.ProtoOutputStream, long, int)
    {
        com.android.server.wm.WindowContainer r0, r2;
        android.util.proto.ProtoOutputStream r1;
        int i0, $i2, i6, $i7;
        boolean z0, $z1;
        long l1, $l3, l4, l5;
        com.android.server.wm.SurfaceAnimator $r3, $r4;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        l4 := @parameter1: long;

        i0 := @parameter2: int;

        z0 = virtualinvoke r0.<com.android.server.wm.WindowContainer: boolean isVisible()>();

        if i0 != 2 goto label1;

        if z0 != 0 goto label1;

        return;

     label1:
        l5 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(l4);

        specialinvoke r0.<com.android.server.wm.ConfigurationContainer: void dumpDebug(android.util.proto.ProtoOutputStream,long,int)>(r1, 1146756268033L, i0);

        $i2 = r0.<com.android.server.wm.WindowContainer: int mOrientation>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464258L, $i2);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366147L, z0);

        $r3 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.SurfaceAnimator mSurfaceAnimator>;

        $z1 = virtualinvoke $r3.<com.android.server.wm.SurfaceAnimator: boolean isAnimating()>();

        if $z1 == 0 goto label2;

        $r4 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.SurfaceAnimator mSurfaceAnimator>;

        virtualinvoke $r4.<com.android.server.wm.SurfaceAnimator: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r1, 1146756268036L);

     label2:
        i6 = 0;

     label3:
        $i7 = virtualinvoke r0.<com.android.server.wm.WindowContainer: int getChildCount()>();

        if i6 >= $i7 goto label4;

        l1 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(2246267895813L);

        r2 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getChildAt(int)>(i6);

        $l3 = virtualinvoke r2.<com.android.server.wm.WindowContainer: long getProtoFieldId()>();

        virtualinvoke r2.<com.android.server.wm.WindowContainer: void dumpDebug(android.util.proto.ProtoOutputStream,long,int)>(r1, $l3, i0);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l1);

        i6 = i6 + 1;

        goto label3;

     label4:
        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l5);

        return;
    }

    void endDelayingAnimationStart()
    {
        com.android.server.wm.WindowContainer r0;
        com.android.server.wm.SurfaceAnimator $r1;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.SurfaceAnimator mSurfaceAnimator>;

        virtualinvoke $r1.<com.android.server.wm.SurfaceAnimator: void endDelayingAnimationStart()>();

        return;
    }

    boolean fillsParent()
    {
        com.android.server.wm.WindowContainer r0;

        r0 := @this: com.android.server.wm.WindowContainer;

        return 0;
    }

    void forAllActivities(java.util.function.Consumer)
    {
        com.android.server.wm.WindowContainer r0;
        java.util.function.Consumer r1;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: java.util.function.Consumer;

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void forAllActivities(java.util.function.Consumer,boolean)>(r1, 1);

        return;
    }

    void forAllActivities(java.util.function.Consumer, boolean)
    {
        com.android.server.wm.WindowContainer r0, $r5, $r9;
        java.util.function.Consumer r1;
        boolean z0;
        int i0, $i1, i2, i3;
        com.android.server.wm.WindowList $r2, $r3, $r6, $r7;
        java.lang.Object $r4, $r8;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: java.util.function.Consumer;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label3;

        $r6 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i1 = virtualinvoke $r6.<com.android.server.wm.WindowList: int size()>();

        i2 = $i1 - 1;

     label1:
        if i2 < 0 goto label2;

        $r7 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r8 = virtualinvoke $r7.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i2);

        $r9 = (com.android.server.wm.WindowContainer) $r8;

        virtualinvoke $r9.<com.android.server.wm.WindowContainer: void forAllActivities(java.util.function.Consumer,boolean)>(r1, z0);

        i2 = i2 + -1;

        goto label1;

     label2:
        goto label5;

     label3:
        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        i0 = virtualinvoke $r2.<com.android.server.wm.WindowList: int size()>();

        i3 = 0;

     label4:
        if i3 >= i0 goto label5;

        $r3 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r4 = virtualinvoke $r3.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i3);

        $r5 = (com.android.server.wm.WindowContainer) $r4;

        virtualinvoke $r5.<com.android.server.wm.WindowContainer: void forAllActivities(java.util.function.Consumer,boolean)>(r1, z0);

        i3 = i3 + 1;

        goto label4;

     label5:
        return;
    }

    boolean forAllActivities(java.util.function.Function)
    {
        com.android.server.wm.WindowContainer r0;
        java.util.function.Function r1;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: java.util.function.Function;

        $z0 = virtualinvoke r0.<com.android.server.wm.WindowContainer: boolean forAllActivities(java.util.function.Function,boolean)>(r1, 1);

        return $z0;
    }

    final boolean forAllActivities(java.util.function.Function, com.android.server.wm.WindowContainer, boolean, boolean)
    {
        com.android.server.wm.WindowContainer r0, r2;
        java.util.function.Function r1;
        boolean z0, z1, $z2;
        boolean[] $r3;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: java.util.function.Function;

        r2 := @parameter1: com.android.server.wm.WindowContainer;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r3 = newarray (boolean)[1];

        $z2 = specialinvoke r0.<com.android.server.wm.WindowContainer: boolean forAllActivities(java.util.function.Function,com.android.server.wm.WindowContainer,boolean,boolean,boolean[])>(r1, r2, z0, z1, $r3);

        return $z2;
    }

    boolean forAllActivities(java.util.function.Function, boolean)
    {
        com.android.server.wm.WindowContainer r0, $r5, $r9;
        java.util.function.Function r1;
        boolean z0, $z1, $z2;
        int i0, $i1, i2, i3;
        com.android.server.wm.WindowList $r2, $r3, $r6, $r7;
        java.lang.Object $r4, $r8;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: java.util.function.Function;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label4;

        $r6 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i1 = virtualinvoke $r6.<com.android.server.wm.WindowList: int size()>();

        i2 = $i1 - 1;

     label1:
        if i2 < 0 goto label3;

        $r7 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r8 = virtualinvoke $r7.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i2);

        $r9 = (com.android.server.wm.WindowContainer) $r8;

        $z2 = virtualinvoke $r9.<com.android.server.wm.WindowContainer: boolean forAllActivities(java.util.function.Function,boolean)>(r1, z0);

        if $z2 == 0 goto label2;

        return 1;

     label2:
        i2 = i2 + -1;

        goto label1;

     label3:
        goto label7;

     label4:
        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        i0 = virtualinvoke $r2.<com.android.server.wm.WindowList: int size()>();

        i3 = 0;

     label5:
        if i3 >= i0 goto label7;

        $r3 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r4 = virtualinvoke $r3.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i3);

        $r5 = (com.android.server.wm.WindowContainer) $r4;

        $z1 = virtualinvoke $r5.<com.android.server.wm.WindowContainer: boolean forAllActivities(java.util.function.Function,boolean)>(r1, z0);

        if $z1 == 0 goto label6;

        return 1;

     label6:
        i3 = i3 + 1;

        goto label5;

     label7:
        return 0;
    }

    void forAllDisplayAreas(java.util.function.Consumer)
    {
        com.android.server.wm.WindowContainer r0, $r5;
        java.util.function.Consumer r1;
        com.android.server.wm.WindowList $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: java.util.function.Consumer;

        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i0 = virtualinvoke $r2.<com.android.server.wm.WindowList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r3 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r4 = virtualinvoke $r3.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i1);

        $r5 = (com.android.server.wm.WindowContainer) $r4;

        virtualinvoke $r5.<com.android.server.wm.WindowContainer: void forAllDisplayAreas(java.util.function.Consumer)>(r1);

        i1 = i1 + -1;

        goto label1;

     label2:
        return;
    }

    void forAllLeafTasks(java.util.function.Consumer, boolean)
    {
        com.android.server.wm.WindowContainer r0, $r5, $r8;
        java.util.function.Consumer r1;
        boolean z0;
        int i0, i1, i2;
        com.android.server.wm.WindowList $r2, $r3, $r6;
        java.lang.Object $r4, $r7;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: java.util.function.Consumer;

        z0 := @parameter1: boolean;

        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        i0 = virtualinvoke $r2.<com.android.server.wm.WindowList: int size()>();

        if z0 == 0 goto label3;

        i1 = i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r6 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r7 = virtualinvoke $r6.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i1);

        $r8 = (com.android.server.wm.WindowContainer) $r7;

        virtualinvoke $r8.<com.android.server.wm.WindowContainer: void forAllLeafTasks(java.util.function.Consumer,boolean)>(r1, z0);

        i1 = i1 + -1;

        goto label1;

     label2:
        goto label5;

     label3:
        i2 = 0;

     label4:
        if i2 >= i0 goto label5;

        $r3 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r4 = virtualinvoke $r3.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i2);

        $r5 = (com.android.server.wm.WindowContainer) $r4;

        virtualinvoke $r5.<com.android.server.wm.WindowContainer: void forAllLeafTasks(java.util.function.Consumer,boolean)>(r1, z0);

        i2 = i2 + 1;

        goto label4;

     label5:
        return;
    }

    boolean forAllLeafTasks(java.util.function.Function)
    {
        com.android.server.wm.WindowContainer r0, $r5;
        java.util.function.Function r1;
        com.android.server.wm.WindowList $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: java.util.function.Function;

        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i0 = virtualinvoke $r2.<com.android.server.wm.WindowList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r3 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r4 = virtualinvoke $r3.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i1);

        $r5 = (com.android.server.wm.WindowContainer) $r4;

        $z0 = virtualinvoke $r5.<com.android.server.wm.WindowContainer: boolean forAllLeafTasks(java.util.function.Function)>(r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return 0;
    }

    void forAllTasks(java.util.function.Consumer)
    {
        com.android.server.wm.WindowContainer r0;
        java.util.function.Consumer r1;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: java.util.function.Consumer;

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void forAllTasks(java.util.function.Consumer,boolean)>(r1, 1);

        return;
    }

    void forAllTasks(java.util.function.Consumer, boolean)
    {
        com.android.server.wm.WindowContainer r0, $r5, $r8;
        java.util.function.Consumer r1;
        boolean z0;
        int i0, i1, i2;
        com.android.server.wm.WindowList $r2, $r3, $r6;
        java.lang.Object $r4, $r7;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: java.util.function.Consumer;

        z0 := @parameter1: boolean;

        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        i0 = virtualinvoke $r2.<com.android.server.wm.WindowList: int size()>();

        if z0 == 0 goto label3;

        i1 = i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r6 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r7 = virtualinvoke $r6.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i1);

        $r8 = (com.android.server.wm.WindowContainer) $r7;

        virtualinvoke $r8.<com.android.server.wm.WindowContainer: void forAllTasks(java.util.function.Consumer,boolean)>(r1, z0);

        i1 = i1 + -1;

        goto label1;

     label2:
        goto label5;

     label3:
        i2 = 0;

     label4:
        if i2 >= i0 goto label5;

        $r3 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r4 = virtualinvoke $r3.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i2);

        $r5 = (com.android.server.wm.WindowContainer) $r4;

        virtualinvoke $r5.<com.android.server.wm.WindowContainer: void forAllTasks(java.util.function.Consumer,boolean)>(r1, z0);

        i2 = i2 + 1;

        goto label4;

     label5:
        return;
    }

    boolean forAllTasks(java.util.function.Function)
    {
        com.android.server.wm.WindowContainer r0, $r5;
        java.util.function.Function r1;
        com.android.server.wm.WindowList $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: java.util.function.Function;

        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i0 = virtualinvoke $r2.<com.android.server.wm.WindowList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r3 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r4 = virtualinvoke $r3.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i1);

        $r5 = (com.android.server.wm.WindowContainer) $r4;

        $z0 = virtualinvoke $r5.<com.android.server.wm.WindowContainer: boolean forAllTasks(java.util.function.Function)>(r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return 0;
    }

    void forAllWallpaperWindows(java.util.function.Consumer)
    {
        com.android.server.wm.WindowContainer r0, $r5;
        java.util.function.Consumer r1;
        com.android.server.wm.WindowList $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: java.util.function.Consumer;

        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i0 = virtualinvoke $r2.<com.android.server.wm.WindowList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r3 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r4 = virtualinvoke $r3.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i1);

        $r5 = (com.android.server.wm.WindowContainer) $r4;

        virtualinvoke $r5.<com.android.server.wm.WindowContainer: void forAllWallpaperWindows(java.util.function.Consumer)>(r1);

        i1 = i1 + -1;

        goto label1;

     label2:
        return;
    }

    void forAllWindows(java.util.function.Consumer, boolean)
    {
        com.android.server.wm.WindowContainer r0;
        boolean z0;
        java.util.function.Consumer r1;
        com.android.server.wm.WindowContainer$ForAllWindowsConsumerWrapper r2;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: java.util.function.Consumer;

        z0 := @parameter1: boolean;

        r2 = specialinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer$ForAllWindowsConsumerWrapper obtainConsumerWrapper(java.util.function.Consumer)>(r1);

        virtualinvoke r0.<com.android.server.wm.WindowContainer: boolean forAllWindows(com.android.internal.util.ToBooleanFunction,boolean)>(r2, z0);

        virtualinvoke r2.<com.android.server.wm.WindowContainer$ForAllWindowsConsumerWrapper: void release()>();

        return;
    }

    boolean forAllWindows(com.android.internal.util.ToBooleanFunction, boolean)
    {
        com.android.server.wm.WindowContainer r0, $r5, $r9;
        com.android.internal.util.ToBooleanFunction r1;
        boolean z0, $z1, $z2;
        int i0, $i1, i2, i3;
        com.android.server.wm.WindowList $r2, $r3, $r6, $r7;
        java.lang.Object $r4, $r8;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: com.android.internal.util.ToBooleanFunction;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label4;

        $r6 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i1 = virtualinvoke $r6.<com.android.server.wm.WindowList: int size()>();

        i2 = $i1 - 1;

     label1:
        if i2 < 0 goto label3;

        $r7 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r8 = virtualinvoke $r7.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i2);

        $r9 = (com.android.server.wm.WindowContainer) $r8;

        $z2 = virtualinvoke $r9.<com.android.server.wm.WindowContainer: boolean forAllWindows(com.android.internal.util.ToBooleanFunction,boolean)>(r1, z0);

        if $z2 == 0 goto label2;

        return 1;

     label2:
        i2 = i2 + -1;

        goto label1;

     label3:
        goto label7;

     label4:
        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        i0 = virtualinvoke $r2.<com.android.server.wm.WindowList: int size()>();

        i3 = 0;

     label5:
        if i3 >= i0 goto label7;

        $r3 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r4 = virtualinvoke $r3.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i3);

        $r5 = (com.android.server.wm.WindowContainer) $r4;

        $z1 = virtualinvoke $r5.<com.android.server.wm.WindowContainer: boolean forAllWindows(com.android.internal.util.ToBooleanFunction,boolean)>(r1, z0);

        if $z1 == 0 goto label6;

        return 1;

     label6:
        i3 = i3 + 1;

        goto label5;

     label7:
        return 0;
    }

    void forceWindowsScaleableInTransaction(boolean)
    {
        com.android.server.wm.WindowContainer r0, $r4;
        boolean z0;
        com.android.server.wm.WindowList $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;

        r0 := @this: com.android.server.wm.WindowContainer;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i0 = virtualinvoke $r1.<com.android.server.wm.WindowList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r3 = virtualinvoke $r2.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i1);

        $r4 = (com.android.server.wm.WindowContainer) $r3;

        virtualinvoke $r4.<com.android.server.wm.WindowContainer: void forceWindowsScaleableInTransaction(boolean)>(z0);

        i1 = i1 + -1;

        goto label1;

     label2:
        return;
    }

    com.android.server.wm.ActivityRecord getActivity(java.util.function.Predicate)
    {
        com.android.server.wm.WindowContainer r0;
        java.util.function.Predicate r1;
        com.android.server.wm.ActivityRecord $r2;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: java.util.function.Predicate;

        $r2 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.ActivityRecord getActivity(java.util.function.Predicate,boolean)>(r1, 1);

        return $r2;
    }

    final com.android.server.wm.ActivityRecord getActivity(java.util.function.Predicate, com.android.server.wm.WindowContainer, boolean, boolean)
    {
        com.android.server.wm.WindowContainer r0, r2;
        java.util.function.Predicate r1;
        boolean z0, z1;
        boolean[] $r3;
        com.android.server.wm.ActivityRecord $r4;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: java.util.function.Predicate;

        r2 := @parameter1: com.android.server.wm.WindowContainer;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r3 = newarray (boolean)[1];

        $r4 = specialinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.ActivityRecord getActivity(java.util.function.Predicate,com.android.server.wm.WindowContainer,boolean,boolean,boolean[])>(r1, r2, z0, z1, $r3);

        return $r4;
    }

    com.android.server.wm.ActivityRecord getActivity(java.util.function.Predicate, boolean)
    {
        com.android.server.wm.WindowContainer r0;
        java.util.function.Predicate r1;
        boolean z0;
        com.android.server.wm.ActivityRecord $r2;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: java.util.function.Predicate;

        z0 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.ActivityRecord getActivity(java.util.function.Predicate,boolean,com.android.server.wm.ActivityRecord)>(r1, z0, null);

        return $r2;
    }

    com.android.server.wm.ActivityRecord getActivity(java.util.function.Predicate, boolean, com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.WindowContainer r0, r9, r11;
        java.util.function.Predicate r1;
        boolean z0;
        com.android.server.wm.ActivityRecord r2, r10, r12;
        int i0, $i1, i2, i3;
        com.android.server.wm.WindowList $r3, $r4, $r6, $r7;
        java.lang.Object $r5, $r8;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: java.util.function.Predicate;

        z0 := @parameter1: boolean;

        r2 := @parameter2: com.android.server.wm.ActivityRecord;

        if z0 == 0 goto label5;

        $r6 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i1 = virtualinvoke $r6.<com.android.server.wm.WindowList: int size()>();

        i2 = $i1 - 1;

     label1:
        if i2 < 0 goto label4;

        $r7 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r8 = virtualinvoke $r7.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i2);

        r9 = (com.android.server.wm.WindowContainer) $r8;

        if r9 != r2 goto label2;

        return r2;

     label2:
        r10 = virtualinvoke r9.<com.android.server.wm.WindowContainer: com.android.server.wm.ActivityRecord getActivity(java.util.function.Predicate,boolean,com.android.server.wm.ActivityRecord)>(r1, z0, r2);

        if r10 == null goto label3;

        return r10;

     label3:
        i2 = i2 + -1;

        goto label1;

     label4:
        goto label9;

     label5:
        $r3 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        i0 = virtualinvoke $r3.<com.android.server.wm.WindowList: int size()>();

        i3 = 0;

     label6:
        if i3 >= i0 goto label9;

        $r4 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r5 = virtualinvoke $r4.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i3);

        r11 = (com.android.server.wm.WindowContainer) $r5;

        if r11 != r2 goto label7;

        return r2;

     label7:
        r12 = virtualinvoke r11.<com.android.server.wm.WindowContainer: com.android.server.wm.ActivityRecord getActivity(java.util.function.Predicate,boolean,com.android.server.wm.ActivityRecord)>(r1, z0, r2);

        if r12 == null goto label8;

        return r12;

     label8:
        i3 = i3 + 1;

        goto label6;

     label9:
        return null;
    }

    com.android.server.wm.ActivityRecord getActivityAbove(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.WindowContainer r0;
        com.android.server.wm.ActivityRecord r1, $r3;
        com.android.server.wm.'-$$Lambda$WindowContainer$WskrGbNwLeexLlAXUNUyGLhHEWA' $r2;
        java.util.function.Predicate r4;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        $r2 = <com.android.server.wm._$$Lambda$WindowContainer$WskrGbNwLeexLlAXUNUyGLhHEWA: com.android.server.wm.'-$$Lambda$WindowContainer$WskrGbNwLeexLlAXUNUyGLhHEWA' INSTANCE>;

        r4 = (java.util.function.Predicate) $r2;

        $r3 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.ActivityRecord getActivity(java.util.function.Predicate,com.android.server.wm.WindowContainer,boolean,boolean)>(r4, r1, 0, 0);

        return $r3;
    }

    com.android.server.wm.ActivityRecord getActivityBelow(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.WindowContainer r0;
        com.android.server.wm.ActivityRecord r1, $r3;
        com.android.server.wm.'-$$Lambda$WindowContainer$sh5zVifGKSmT1fuGQxK_5_eAZ20' $r2;
        java.util.function.Predicate r4;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        $r2 = <com.android.server.wm._$$Lambda$WindowContainer$sh5zVifGKSmT1fuGQxK_5_eAZ20: com.android.server.wm.'-$$Lambda$WindowContainer$sh5zVifGKSmT1fuGQxK_5_eAZ20' INSTANCE>;

        r4 = (java.util.function.Predicate) $r2;

        $r3 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.ActivityRecord getActivity(java.util.function.Predicate,com.android.server.wm.WindowContainer,boolean,boolean)>(r4, r1, 0, 1);

        return $r3;
    }

    final com.android.server.wm.WindowContainer getAnimatingContainer()
    {
        com.android.server.wm.WindowContainer r0, $r1;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getAnimatingContainer(int,int)>(2, -1);

        return $r1;
    }

    com.android.server.wm.WindowContainer getAnimatingContainer(int, int)
    {
        com.android.server.wm.WindowContainer r0, $r4, r5, r6;
        int i0, i1, $i2, $i3, $i4, $i5, i6;
        boolean $z0, $z1;
        com.android.server.wm.WindowList $r1, $r2;
        java.lang.Object $r3;

        r0 := @this: com.android.server.wm.WindowContainer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = virtualinvoke r0.<com.android.server.wm.WindowContainer: boolean isSelfAnimating(int,int)>(i0, i1);

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label4;

        r5 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getParent()>();

     label2:
        if r5 == null goto label4;

        $z1 = virtualinvoke r5.<com.android.server.wm.WindowContainer: boolean isSelfAnimating(int,int)>(i0, i1);

        if $z1 == 0 goto label3;

        return r5;

     label3:
        r5 = virtualinvoke r5.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getParent()>();

        goto label2;

     label4:
        $i3 = i0 & 4;

        if $i3 == 0 goto label7;

        i6 = 0;

     label5:
        $r1 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i4 = virtualinvoke $r1.<com.android.server.wm.WindowList: int size()>();

        if i6 >= $i4 goto label7;

        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r3 = virtualinvoke $r2.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i6);

        $r4 = (com.android.server.wm.WindowContainer) $r3;

        $i5 = i0 & -3;

        r6 = virtualinvoke $r4.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getAnimatingContainer(int,int)>($i5, i1);

        if r6 == null goto label6;

        return r6;

     label6:
        i6 = i6 + 1;

        goto label5;

     label7:
        return null;
    }

    com.android.server.wm.AnimationAdapter getAnimation()
    {
        com.android.server.wm.WindowContainer r0;
        com.android.server.wm.SurfaceAnimator $r1;
        com.android.server.wm.AnimationAdapter $r2;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.SurfaceAnimator mSurfaceAnimator>;

        $r2 = virtualinvoke $r1.<com.android.server.wm.SurfaceAnimator: com.android.server.wm.AnimationAdapter getAnimation()>();

        return $r2;
    }

    android.util.Pair getAnimationAdapter(android.view.WindowManager$LayoutParams, int, boolean, boolean)
    {
        com.android.server.wm.WindowContainer r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8, z9, z10, z11;
        android.graphics.Rect r1, $r6, $r15, $r24, $r28, $r29, $r39, $r40, $r43, $r44, $r51, $r52, r55, r57;
        com.android.server.wm.RemoteAnimationController r2;
        com.android.server.wm.DisplayContent $r4, $r8, $r16, $r19, $r21, $r34, $r64;
        com.android.server.wm.AppTransition $r5, $r9, $r17, $r35, $r65;
        android.graphics.Point $r7, $r14, $r22, $r23, $r45, $r46, $r53, r56;
        android.util.Pair $r10, $r11, $r33, $r47, r59;
        com.android.server.wm.LocalAnimationAdapter $r12, $r25, $r36, r62;
        com.android.server.wm.WindowAnimationSpec $r13;
        com.android.server.wm.SurfaceAnimationRunner $r18, $r30, $r41;
        com.android.server.wm.WindowManagerService $r20;
        com.android.server.wm.WindowChangeAnimationSpec $r26, $r37;
        com.android.server.wm.SurfaceFreezer $r27, $r31, $r38, $r50;
        com.android.server.wm.SurfaceFreezer$Snapshot $r32;
        com.android.server.wm.SurfaceAnimator $r42;
        com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper $r48, $r49;
        android.view.WindowManager$LayoutParams r54;
        com.android.server.wm.RemoteAnimationController$RemoteAnimationRecord r58;
        float f0, f1;
        android.view.DisplayInfo r60;
        android.view.animation.Animation r63;

        r0 := @this: com.android.server.wm.WindowContainer;

        r54 := @parameter0: android.view.WindowManager$LayoutParams;

        i0 := @parameter1: int;

        z8 := @parameter2: boolean;

        z0 := @parameter3: boolean;

        $r4 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.DisplayContent getDisplayContent()>();

        $r5 = $r4.<com.android.server.wm.DisplayContent: com.android.server.wm.AppTransition mAppTransition>;

        i1 = virtualinvoke $r5.<com.android.server.wm.AppTransition: int getAppStackClipMode()>();

        r1 = virtualinvoke r0.<com.android.server.wm.WindowContainer: android.graphics.Rect getAnimationBounds(int)>(i1);

        $r6 = r0.<com.android.server.wm.WindowContainer: android.graphics.Rect mTmpRect>;

        virtualinvoke $r6.<android.graphics.Rect: void set(android.graphics.Rect)>(r1);

        $r7 = r0.<com.android.server.wm.WindowContainer: android.graphics.Point mTmpPoint>;

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void getAnimationPosition(android.graphics.Point)>($r7);

        $z1 = <com.android.server.wm.WindowManagerService: boolean sHierarchicalAnimations>;

        if $z1 != 0 goto label01;

        $r53 = r0.<com.android.server.wm.WindowContainer: android.graphics.Point mTmpPoint>;

        $r51 = r0.<com.android.server.wm.WindowContainer: android.graphics.Rect mTmpRect>;

        $i9 = $r51.<android.graphics.Rect: int left>;

        $r52 = r0.<com.android.server.wm.WindowContainer: android.graphics.Rect mTmpRect>;

        $i8 = $r52.<android.graphics.Rect: int top>;

        virtualinvoke $r53.<android.graphics.Point: void set(int,int)>($i9, $i8);

     label01:
        r55 = r0.<com.android.server.wm.WindowContainer: android.graphics.Rect mTmpRect>;

        virtualinvoke r55.<android.graphics.Rect: void offsetTo(int,int)>(0, 0);

        $r8 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.DisplayContent getDisplayContent()>();

        $r9 = $r8.<com.android.server.wm.DisplayContent: com.android.server.wm.AppTransition mAppTransition>;

        r2 = virtualinvoke $r9.<com.android.server.wm.AppTransition: com.android.server.wm.RemoteAnimationController getRemoteAnimationController()>();

        $z2 = staticinvoke <com.android.server.wm.AppTransition: boolean isChangeTransit(int)>(i0);

        if $z2 == 0 goto label02;

        if z8 == 0 goto label02;

        $z7 = virtualinvoke r0.<com.android.server.wm.WindowContainer: boolean isChangingAppTransition()>();

        if $z7 == 0 goto label02;

        z9 = 1;

        goto label03;

     label02:
        z9 = 0;

     label03:
        if r2 == null goto label05;

        $r42 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.SurfaceAnimator mSurfaceAnimator>;

        $z6 = virtualinvoke $r42.<com.android.server.wm.SurfaceAnimator: boolean isAnimationStartDelayed()>();

        if $z6 != 0 goto label05;

        $r43 = new android.graphics.Rect;

        $r44 = r0.<com.android.server.wm.WindowContainer: android.graphics.Rect mTmpRect>;

        specialinvoke $r43.<android.graphics.Rect: void <init>(android.graphics.Rect)>($r44);

        $r45 = r0.<com.android.server.wm.WindowContainer: android.graphics.Point mTmpPoint>;

        $i7 = $r45.<android.graphics.Point: int x>;

        $r46 = r0.<com.android.server.wm.WindowContainer: android.graphics.Point mTmpPoint>;

        $i6 = $r46.<android.graphics.Point: int y>;

        virtualinvoke $r43.<android.graphics.Rect: void offsetTo(int,int)>($i7, $i6);

        r56 = r0.<com.android.server.wm.WindowContainer: android.graphics.Point mTmpPoint>;

        r57 = null;

        if z9 == 0 goto label04;

        $r50 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.SurfaceFreezer mSurfaceFreezer>;

        r57 = $r50.<com.android.server.wm.SurfaceFreezer: android.graphics.Rect mFreezeBounds>;

     label04:
        r58 = virtualinvoke r2.<com.android.server.wm.RemoteAnimationController: com.android.server.wm.RemoteAnimationController$RemoteAnimationRecord createRemoteAnimationRecord(com.android.server.wm.WindowContainer,android.graphics.Point,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>(r0, r56, $r43, r1, r57);

        $r47 = new android.util.Pair;

        $r49 = r58.<com.android.server.wm.RemoteAnimationController$RemoteAnimationRecord: com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper mAdapter>;

        $r48 = r58.<com.android.server.wm.RemoteAnimationController$RemoteAnimationRecord: com.android.server.wm.RemoteAnimationController$RemoteAnimationAdapterWrapper mThumbnailAdapter>;

        specialinvoke $r47.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r49, $r48);

        r59 = $r47;

        goto label16;

     label05:
        if z9 == 0 goto label08;

        $r20 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowManagerService mWmService>;

        f0 = virtualinvoke $r20.<com.android.server.wm.WindowManagerService: float getTransitionAnimationScaleLocked()>();

        $r21 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.DisplayContent getDisplayContent()>();

        r60 = virtualinvoke $r21.<com.android.server.wm.DisplayContent: android.view.DisplayInfo getDisplayInfo()>();

        $r24 = r0.<com.android.server.wm.WindowContainer: android.graphics.Rect mTmpRect>;

        $r22 = r0.<com.android.server.wm.WindowContainer: android.graphics.Point mTmpPoint>;

        $i4 = $r22.<android.graphics.Point: int x>;

        $r23 = r0.<com.android.server.wm.WindowContainer: android.graphics.Point mTmpPoint>;

        $i3 = $r23.<android.graphics.Point: int y>;

        virtualinvoke $r24.<android.graphics.Rect: void offsetTo(int,int)>($i4, $i3);

        $r25 = new com.android.server.wm.LocalAnimationAdapter;

        $r26 = new com.android.server.wm.WindowChangeAnimationSpec;

        $r27 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.SurfaceFreezer mSurfaceFreezer>;

        $r29 = $r27.<com.android.server.wm.SurfaceFreezer: android.graphics.Rect mFreezeBounds>;

        $r28 = r0.<com.android.server.wm.WindowContainer: android.graphics.Rect mTmpRect>;

        specialinvoke $r26.<com.android.server.wm.WindowChangeAnimationSpec: void <init>(android.graphics.Rect,android.graphics.Rect,android.view.DisplayInfo,float,boolean,boolean)>($r29, $r28, r60, f0, 1, 0);

        $r30 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.SurfaceAnimationRunner getSurfaceAnimationRunner()>();

        specialinvoke $r25.<com.android.server.wm.LocalAnimationAdapter: void <init>(com.android.server.wm.LocalAnimationAdapter$AnimationSpec,com.android.server.wm.SurfaceAnimationRunner)>($r26, $r30);

        $r31 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.SurfaceFreezer mSurfaceFreezer>;

        $r32 = $r31.<com.android.server.wm.SurfaceFreezer: com.android.server.wm.SurfaceFreezer$Snapshot mSnapshot>;

        if $r32 == null goto label06;

        $r36 = new com.android.server.wm.LocalAnimationAdapter;

        $r37 = new com.android.server.wm.WindowChangeAnimationSpec;

        $r38 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.SurfaceFreezer mSurfaceFreezer>;

        $r40 = $r38.<com.android.server.wm.SurfaceFreezer: android.graphics.Rect mFreezeBounds>;

        $r39 = r0.<com.android.server.wm.WindowContainer: android.graphics.Rect mTmpRect>;

        specialinvoke $r37.<com.android.server.wm.WindowChangeAnimationSpec: void <init>(android.graphics.Rect,android.graphics.Rect,android.view.DisplayInfo,float,boolean,boolean)>($r40, $r39, r60, f0, 1, 1);

        $r41 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.SurfaceAnimationRunner getSurfaceAnimationRunner()>();

        specialinvoke $r36.<com.android.server.wm.LocalAnimationAdapter: void <init>(com.android.server.wm.LocalAnimationAdapter$AnimationSpec,com.android.server.wm.SurfaceAnimationRunner)>($r37, $r41);

        r62 = $r36;

        goto label07;

     label06:
        r62 = null;

     label07:
        $r33 = new android.util.Pair;

        specialinvoke $r33.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r25, r62);

        r59 = $r33;

        r0.<com.android.server.wm.WindowContainer: int mTransit> = i0;

        $r34 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.DisplayContent getDisplayContent()>();

        $r35 = $r34.<com.android.server.wm.DisplayContent: com.android.server.wm.AppTransition mAppTransition>;

        $i5 = virtualinvoke $r35.<com.android.server.wm.AppTransition: int getTransitFlags()>();

        r0.<com.android.server.wm.WindowContainer: int mTransitFlags> = $i5;

        goto label16;

     label08:
        if i1 != 0 goto label09;

        z10 = 1;

        goto label10;

     label09:
        z10 = 0;

     label10:
        r0.<com.android.server.wm.WindowContainer: boolean mNeedsAnimationBoundsLayer> = z10;

        r63 = specialinvoke r0.<com.android.server.wm.WindowContainer: android.view.animation.Animation loadAnimation(android.view.WindowManager$LayoutParams,int,boolean,boolean)>(r54, i0, z8, z0);

        if r63 == null goto label15;

        $z3 = virtualinvoke r0.<com.android.server.wm.WindowContainer: boolean inMultiWindowMode()>();

        if $z3 != 0 goto label11;

        $r19 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.DisplayContent getDisplayContent()>();

        f1 = virtualinvoke $r19.<com.android.server.wm.DisplayContent: float getWindowCornerRadius()>();

        goto label12;

     label11:
        f1 = 0.0F;

     label12:
        $r11 = new android.util.Pair;

        $r12 = new com.android.server.wm.LocalAnimationAdapter;

        $r13 = new com.android.server.wm.WindowAnimationSpec;

        $r14 = r0.<com.android.server.wm.WindowContainer: android.graphics.Point mTmpPoint>;

        $r15 = r0.<com.android.server.wm.WindowContainer: android.graphics.Rect mTmpRect>;

        $r16 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.DisplayContent getDisplayContent()>();

        $r17 = $r16.<com.android.server.wm.DisplayContent: com.android.server.wm.AppTransition mAppTransition>;

        $z4 = virtualinvoke $r17.<com.android.server.wm.AppTransition: boolean canSkipFirstFrame()>();

        specialinvoke $r13.<com.android.server.wm.WindowAnimationSpec: void <init>(android.view.animation.Animation,android.graphics.Point,android.graphics.Rect,boolean,int,boolean,float)>(r63, $r14, $r15, $z4, i1, 1, f1);

        $r18 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.SurfaceAnimationRunner getSurfaceAnimationRunner()>();

        specialinvoke $r12.<com.android.server.wm.LocalAnimationAdapter: void <init>(com.android.server.wm.LocalAnimationAdapter$AnimationSpec,com.android.server.wm.SurfaceAnimationRunner)>($r13, $r18);

        specialinvoke $r11.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r12, null);

        r59 = $r11;

        $i2 = virtualinvoke r63.<android.view.animation.Animation: int getZAdjustment()>();

        if $i2 == 1 goto label13;

        z11 = 0;

        $z5 = staticinvoke <com.android.server.wm.AppTransition: boolean isClosingTransit(int)>(i0);

        if $z5 == 0 goto label14;

     label13:
        z11 = 1;

     label14:
        r0.<com.android.server.wm.WindowContainer: boolean mNeedsZBoost> = z11;

        r0.<com.android.server.wm.WindowContainer: int mTransit> = i0;

        $r64 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.DisplayContent getDisplayContent()>();

        $r65 = $r64.<com.android.server.wm.DisplayContent: com.android.server.wm.AppTransition mAppTransition>;

        $i10 = virtualinvoke $r65.<com.android.server.wm.AppTransition: int getTransitFlags()>();

        r0.<com.android.server.wm.WindowContainer: int mTransitFlags> = $i10;

        goto label16;

     label15:
        $r10 = new android.util.Pair;

        specialinvoke $r10.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(null, null);

        r59 = $r10;

     label16:
        return r59;
    }

    android.graphics.Rect getAnimationBounds(int)
    {
        com.android.server.wm.WindowContainer r0;
        int i0;
        android.graphics.Rect $r1;

        r0 := @this: com.android.server.wm.WindowContainer;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.server.wm.WindowContainer: android.graphics.Rect getBounds()>();

        return $r1;
    }

    void getAnimationFrames(android.graphics.Rect, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect)
    {
        com.android.server.wm.WindowContainer r0;
        android.graphics.Rect r1, r2, r3, r4;
        android.view.DisplayInfo r5;
        com.android.server.wm.DisplayContent $r6;
        int $i0, $i1;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: android.graphics.Rect;

        r2 := @parameter1: android.graphics.Rect;

        r3 := @parameter2: android.graphics.Rect;

        r4 := @parameter3: android.graphics.Rect;

        $r6 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.DisplayContent getDisplayContent()>();

        r5 = virtualinvoke $r6.<com.android.server.wm.DisplayContent: android.view.DisplayInfo getDisplayInfo()>();

        $i1 = r5.<android.view.DisplayInfo: int appWidth>;

        $i0 = r5.<android.view.DisplayInfo: int appHeight>;

        virtualinvoke r1.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i1, $i0);

        virtualinvoke r2.<android.graphics.Rect: void setEmpty()>();

        virtualinvoke r3.<android.graphics.Rect: void setEmpty()>();

        virtualinvoke r4.<android.graphics.Rect: void setEmpty()>();

        return;
    }

    public android.view.SurfaceControl getAnimationLeashParent()
    {
        com.android.server.wm.WindowContainer r0;
        android.view.SurfaceControl $r1;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = virtualinvoke r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl getParentSurfaceControl()>();

        return $r1;
    }

    void getAnimationPosition(android.graphics.Point)
    {
        com.android.server.wm.WindowContainer r0;
        android.graphics.Point r1;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: android.graphics.Point;

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void getRelativePosition(android.graphics.Point)>(r1);

        return;
    }

    android.util.ArraySet getAnimationSources()
    {
        com.android.server.wm.WindowContainer r0;
        android.util.ArraySet $r1;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = r0.<com.android.server.wm.WindowContainer: android.util.ArraySet mSurfaceAnimationSources>;

        return $r1;
    }

    android.view.SurfaceControl getAppAnimationLayer(int)
    {
        com.android.server.wm.WindowContainer r0, r1;
        int i0;
        android.view.SurfaceControl $r2;

        r0 := @this: com.android.server.wm.WindowContainer;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getParent()>();

        if r1 == null goto label1;

        $r2 = virtualinvoke r1.<com.android.server.wm.WindowContainer: android.view.SurfaceControl getAppAnimationLayer(int)>(i0);

        return $r2;

     label1:
        return null;
    }

    com.android.server.wm.ActivityRecord getBottomMostActivity()
    {
        com.android.server.wm.WindowContainer r0;
        com.android.server.wm.'-$$Lambda$WindowContainer$TQFCJtak2E5nTjAEG9Q24yp-Oi8' $r1;
        com.android.server.wm.ActivityRecord $r2;
        java.util.function.Predicate r3;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = <com.android.server.wm._$$Lambda$WindowContainer$TQFCJtak2E5nTjAEG9Q24yp_Oi8: com.android.server.wm.'-$$Lambda$WindowContainer$TQFCJtak2E5nTjAEG9Q24yp-Oi8' INSTANCE>;

        r3 = (java.util.function.Predicate) $r1;

        $r2 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.ActivityRecord getActivity(java.util.function.Predicate,boolean)>(r3, 0);

        return $r2;
    }

    com.android.server.wm.Task getBottomMostTask()
    {
        com.android.server.wm.WindowContainer r0;
        com.android.server.wm.'-$$Lambda$WindowContainer$k_PpuHAHKhi1gqk1dQsXNnYX7Ok' $r1;
        com.android.server.wm.Task $r2;
        java.util.function.Predicate r3;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = <com.android.server.wm._$$Lambda$WindowContainer$k_PpuHAHKhi1gqk1dQsXNnYX7Ok: com.android.server.wm.'-$$Lambda$WindowContainer$k_PpuHAHKhi1gqk1dQsXNnYX7Ok' INSTANCE>;

        r3 = (java.util.function.Predicate) $r1;

        $r2 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.Task getTask(java.util.function.Predicate,boolean)>(r3, 0);

        return $r2;
    }

    protected volatile com.android.server.wm.ConfigurationContainer getChildAt(int)
    {
        com.android.server.wm.WindowContainer r0, $r1;
        int i0;

        r0 := @this: com.android.server.wm.WindowContainer;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getChildAt(int)>(i0);

        return $r1;
    }

    protected com.android.server.wm.WindowContainer getChildAt(int)
    {
        com.android.server.wm.WindowContainer r0, $r3;
        int i0;
        com.android.server.wm.WindowList $r1;
        java.lang.Object $r2;

        r0 := @this: com.android.server.wm.WindowContainer;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r2 = virtualinvoke $r1.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i0);

        $r3 = (com.android.server.wm.WindowContainer) $r2;

        return $r3;
    }

    protected int getChildCount()
    {
        com.android.server.wm.WindowContainer r0;
        com.android.server.wm.WindowList $r1;
        int $i0;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i0 = virtualinvoke $r1.<com.android.server.wm.WindowList: int size()>();

        return $i0;
    }

    com.android.server.wm.Dimmer getDimmer()
    {
        com.android.server.wm.WindowContainer r0, r1;
        com.android.server.wm.Dimmer $r2;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer mParent>;

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r1.<com.android.server.wm.WindowContainer: com.android.server.wm.Dimmer getDimmer()>();

        return $r2;
    }

    com.android.server.wm.DisplayArea getDisplayArea()
    {
        com.android.server.wm.WindowContainer r0, r1;
        com.android.server.wm.DisplayArea r2;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getParent()>();

        if r1 == null goto label1;

        r2 = virtualinvoke r1.<com.android.server.wm.WindowContainer: com.android.server.wm.DisplayArea getDisplayArea()>();

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    com.android.server.wm.DisplayContent getDisplayContent()
    {
        com.android.server.wm.WindowContainer r0;
        com.android.server.wm.DisplayContent $r1;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.DisplayContent mDisplayContent>;

        return $r1;
    }

    public android.view.SurfaceControl getFreezeSnapshotTarget()
    {
        com.android.server.wm.WindowContainer r0;

        r0 := @this: com.android.server.wm.WindowContainer;

        return null;
    }

    com.android.server.wm.WindowContainer getLastOrientationSource()
    {
        com.android.server.wm.WindowContainer r0, r1, r2;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer mLastOrientationSource>;

        if r1 == null goto label1;

        if r1 == r0 goto label1;

        r2 = virtualinvoke r1.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getLastOrientationSource()>();

        if r2 == null goto label1;

        return r2;

     label1:
        return r1;
    }

    android.graphics.Point getLastSurfacePosition()
    {
        com.android.server.wm.WindowContainer r0;
        android.graphics.Point $r1;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = r0.<com.android.server.wm.WindowContainer: android.graphics.Point mLastSurfacePosition>;

        return $r1;
    }

    int getOrientation()
    {
        com.android.server.wm.WindowContainer r0;
        int $i0, $i1;

        r0 := @this: com.android.server.wm.WindowContainer;

        $i0 = r0.<com.android.server.wm.WindowContainer: int mOrientation>;

        $i1 = virtualinvoke r0.<com.android.server.wm.WindowContainer: int getOrientation(int)>($i0);

        return $i1;
    }

    int getOrientation(int)
    {
        com.android.server.wm.WindowContainer r0, r1;
        java.lang.String r2, r3, $r7, $r8;
        long l0;
        boolean $z0, $z1, $z2;
        com.android.server.wm.WindowList $r4, $r5;
        int $i1, i2, i3, i4, i5, i6, i8;
        java.lang.Object $r6;
        java.lang.Object[] $r9;
        com.android.server.wm.ProtoLogGroup $r10;
        java.lang.Long $r11;
        byte b7;

        r0 := @this: com.android.server.wm.WindowContainer;

        i2 := @parameter0: int;

        r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer mLastOrientationSource> = null;

        $z0 = virtualinvoke r0.<com.android.server.wm.WindowContainer: boolean fillsParent()>();

        if $z0 != 0 goto label01;

        return -2;

     label01:
        i3 = r0.<com.android.server.wm.WindowContainer: int mOrientation>;

        if i3 == -2 goto label02;

        if i3 == -1 goto label02;

        r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer mLastOrientationSource> = r0;

        return i3;

     label02:
        $r4 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i1 = virtualinvoke $r4.<com.android.server.wm.WindowList: int size()>();

        i4 = $i1 - 1;

        i5 = i2;

        i6 = i4;

     label03:
        if i6 < 0 goto label11;

        $r5 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r6 = virtualinvoke $r5.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i6);

        r1 = (com.android.server.wm.WindowContainer) $r6;

        if i5 != 3 goto label04;

        b7 = 3;

        goto label05;

     label04:
        b7 = -2;

     label05:
        i8 = virtualinvoke r1.<com.android.server.wm.WindowContainer: int getOrientation(int)>(b7);

        if i8 != 3 goto label06;

        i5 = i8;

        r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer mLastOrientationSource> = r1;

        goto label08;

     label06:
        if i8 != -2 goto label07;

        goto label08;

     label07:
        $z1 = virtualinvoke r1.<com.android.server.wm.WindowContainer: boolean fillsParent()>();

        if $z1 != 0 goto label09;

        if i8 == -1 goto label08;

        goto label09;

     label08:
        i6 = i6 + -1;

        goto label03;

     label09:
        $z2 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_ORIENTATION_enabled>;

        if $z2 == 0 goto label10;

        $r7 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7);

        l0 = (long) i8;

        $r8 = staticinvoke <android.content.pm.ActivityInfo: java.lang.String screenOrientationToString(int)>(i8);

        r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r8);

        $r10 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_ORIENTATION>;

        $r9 = newarray (java.lang.Object)[3];

        $r9[0] = r2;

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r9[1] = $r11;

        $r9[2] = r3;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void v(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r10, -1108775960, 4, null, $r9);

     label10:
        r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer mLastOrientationSource> = r1;

        return i8;

     label11:
        return i5;
    }

    protected volatile com.android.server.wm.ConfigurationContainer getParent()
    {
        com.android.server.wm.WindowContainer r0, $r1;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getParent()>();

        return $r1;
    }

    protected final com.android.server.wm.WindowContainer getParent()
    {
        com.android.server.wm.WindowContainer r0, $r1;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer mParent>;

        return $r1;
    }

    public android.view.SurfaceControl getParentSurfaceControl()
    {
        com.android.server.wm.WindowContainer r0, r1;
        android.view.SurfaceControl $r2;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getParent()>();

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r1.<com.android.server.wm.WindowContainer: android.view.SurfaceControl getSurfaceControl()>();

        return $r2;
    }

    public android.view.SurfaceControl$Transaction getPendingTransaction()
    {
        com.android.server.wm.WindowContainer r0;
        com.android.server.wm.DisplayContent r1;
        android.view.SurfaceControl$Transaction $r2, $r3;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.DisplayContent getDisplayContent()>();

        if r1 == null goto label1;

        if r1 == r0 goto label1;

        $r3 = virtualinvoke r1.<com.android.server.wm.DisplayContent: android.view.SurfaceControl$Transaction getPendingTransaction()>();

        return $r3;

     label1:
        $r2 = r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl$Transaction mPendingTransaction>;

        return $r2;
    }

    int getPrefixOrderIndex()
    {
        com.android.server.wm.WindowContainer r0, r1;
        int $i0;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer mParent>;

        if r1 != null goto label1;

        return 0;

     label1:
        $i0 = specialinvoke r1.<com.android.server.wm.WindowContainer: int getPrefixOrderIndex(com.android.server.wm.WindowContainer)>(r0);

        return $i0;
    }

    long getProtoFieldId()
    {
        com.android.server.wm.WindowContainer r0;

        r0 := @this: com.android.server.wm.WindowContainer;

        return 1146756268034L;
    }

    void getRelativePosition(android.graphics.Point)
    {
        com.android.server.wm.WindowContainer r0, r3;
        android.graphics.Point r1;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.graphics.Rect r2, r4;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: android.graphics.Point;

        $z0 = virtualinvoke r0.<com.android.server.wm.WindowContainer: boolean isOrganized()>();

        if $z0 == 0 goto label1;

        virtualinvoke r1.<android.graphics.Point: void set(int,int)>(0, 0);

        return;

     label1:
        r2 = virtualinvoke r0.<com.android.server.wm.WindowContainer: android.graphics.Rect getBounds()>();

        $i1 = r2.<android.graphics.Rect: int left>;

        $i0 = r2.<android.graphics.Rect: int top>;

        virtualinvoke r1.<android.graphics.Point: void set(int,int)>($i1, $i0);

        r3 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getParent()>();

        if r3 == null goto label2;

        r4 = virtualinvoke r3.<com.android.server.wm.WindowContainer: android.graphics.Rect getBounds()>();

        $i2 = r4.<android.graphics.Rect: int left>;

        $i5 = neg $i2;

        $i3 = r4.<android.graphics.Rect: int top>;

        $i4 = neg $i3;

        virtualinvoke r1.<android.graphics.Point: void offset(int,int)>($i5, $i4);

     label2:
        return;
    }

    android.view.RemoteAnimationDefinition getRemoteAnimationDefinition()
    {
        com.android.server.wm.WindowContainer r0;

        r0 := @this: com.android.server.wm.WindowContainer;

        return null;
    }

    int getRequestedConfigurationOrientation()
    {
        com.android.server.wm.WindowContainer r0;
        int i0, $i1, $i2, $i3;
        com.android.server.wm.DisplayContent r1;
        boolean $z0, $z1;
        android.content.res.Configuration $r2;

        r0 := @this: com.android.server.wm.WindowContainer;

        i0 = r0.<com.android.server.wm.WindowContainer: int mOrientation>;

        if i0 != 5 goto label1;

        r1 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.DisplayContent mDisplayContent>;

        if r1 == null goto label4;

        $i3 = virtualinvoke r1.<com.android.server.wm.DisplayContent: int getNaturalOrientation()>();

        return $i3;

     label1:
        if i0 != 14 goto label2;

        $r2 = virtualinvoke r0.<com.android.server.wm.WindowContainer: android.content.res.Configuration getConfiguration()>();

        $i2 = $r2.<android.content.res.Configuration: int orientation>;

        return $i2;

     label2:
        $z0 = staticinvoke <android.content.pm.ActivityInfo: boolean isFixedOrientationLandscape(int)>(i0);

        if $z0 == 0 goto label3;

        return 2;

     label3:
        $i1 = r0.<com.android.server.wm.WindowContainer: int mOrientation>;

        $z1 = staticinvoke <android.content.pm.ActivityInfo: boolean isFixedOrientationPortrait(int)>($i1);

        if $z1 == 0 goto label4;

        return 1;

     label4:
        return 0;
    }

    android.view.SurfaceSession getSession()
    {
        com.android.server.wm.WindowContainer r0, $r1, $r2;
        android.view.SurfaceSession $r3;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getParent()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getParent()>();

        $r3 = virtualinvoke $r2.<com.android.server.wm.WindowContainer: android.view.SurfaceSession getSession()>();

        return $r3;

     label1:
        return null;
    }

    final com.android.server.wm.SurfaceAnimationRunner getSurfaceAnimationRunner()
    {
        com.android.server.wm.WindowContainer r0;
        com.android.server.wm.WindowManagerService $r1;
        com.android.server.wm.SurfaceAnimationRunner $r2;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowManagerService mWmService>;

        $r2 = $r1.<com.android.server.wm.WindowManagerService: com.android.server.wm.SurfaceAnimationRunner mSurfaceAnimationRunner>;

        return $r2;
    }

    public android.view.SurfaceControl getSurfaceControl()
    {
        com.android.server.wm.WindowContainer r0;
        android.view.SurfaceControl $r1;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl mSurfaceControl>;

        return $r1;
    }

    public int getSurfaceHeight()
    {
        com.android.server.wm.WindowContainer r0;
        android.view.SurfaceControl $r1;
        int $i0;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl mSurfaceControl>;

        $i0 = virtualinvoke $r1.<android.view.SurfaceControl: int getHeight()>();

        return $i0;
    }

    public int getSurfaceWidth()
    {
        com.android.server.wm.WindowContainer r0;
        android.view.SurfaceControl $r1;
        int $i0;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl mSurfaceControl>;

        $i0 = virtualinvoke $r1.<android.view.SurfaceControl: int getWidth()>();

        return $i0;
    }

    public android.view.SurfaceControl$Transaction getSyncTransaction()
    {
        com.android.server.wm.WindowContainer r0;
        boolean $z0;
        android.view.SurfaceControl$Transaction $r1, $r2;

        r0 := @this: com.android.server.wm.WindowContainer;

        $z0 = r0.<com.android.server.wm.WindowContainer: boolean mUsingBLASTSyncTransaction>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl$Transaction mBLASTSyncTransaction>;

        return $r2;

     label1:
        $r1 = virtualinvoke r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl$Transaction getPendingTransaction()>();

        return $r1;
    }

    com.android.server.wm.Task getTask(java.util.function.Predicate)
    {
        com.android.server.wm.WindowContainer r0;
        java.util.function.Predicate r1;
        com.android.server.wm.Task $r2;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: java.util.function.Predicate;

        $r2 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.Task getTask(java.util.function.Predicate,boolean)>(r1, 1);

        return $r2;
    }

    final com.android.server.wm.Task getTask(java.util.function.Predicate, com.android.server.wm.WindowContainer, boolean, boolean)
    {
        com.android.server.wm.WindowContainer r0, r2;
        java.util.function.Predicate r1;
        boolean z0, z1;
        boolean[] $r3;
        com.android.server.wm.Task $r4;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: java.util.function.Predicate;

        r2 := @parameter1: com.android.server.wm.WindowContainer;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r3 = newarray (boolean)[1];

        $r4 = specialinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.Task getTask(java.util.function.Predicate,com.android.server.wm.WindowContainer,boolean,boolean,boolean[])>(r1, r2, z0, z1, $r3);

        return $r4;
    }

    com.android.server.wm.Task getTask(java.util.function.Predicate, boolean)
    {
        com.android.server.wm.WindowContainer r0, $r5, $r9;
        java.util.function.Predicate r1;
        boolean z0;
        int i0, $i1, i2, i3;
        com.android.server.wm.WindowList $r2, $r3, $r6, $r7;
        java.lang.Object $r4, $r8;
        com.android.server.wm.Task r10, r11;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: java.util.function.Predicate;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label4;

        $r6 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i1 = virtualinvoke $r6.<com.android.server.wm.WindowList: int size()>();

        i2 = $i1 - 1;

     label1:
        if i2 < 0 goto label3;

        $r7 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r8 = virtualinvoke $r7.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i2);

        $r9 = (com.android.server.wm.WindowContainer) $r8;

        r10 = virtualinvoke $r9.<com.android.server.wm.WindowContainer: com.android.server.wm.Task getTask(java.util.function.Predicate,boolean)>(r1, z0);

        if r10 == null goto label2;

        return r10;

     label2:
        i2 = i2 + -1;

        goto label1;

     label3:
        goto label7;

     label4:
        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        i0 = virtualinvoke $r2.<com.android.server.wm.WindowList: int size()>();

        i3 = 0;

     label5:
        if i3 >= i0 goto label7;

        $r3 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r4 = virtualinvoke $r3.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i3);

        $r5 = (com.android.server.wm.WindowContainer) $r4;

        r11 = virtualinvoke $r5.<com.android.server.wm.WindowContainer: com.android.server.wm.Task getTask(java.util.function.Predicate,boolean)>(r1, z0);

        if r11 == null goto label6;

        return r11;

     label6:
        i3 = i3 + 1;

        goto label5;

     label7:
        return null;
    }

    com.android.server.wm.Task getTaskAbove(com.android.server.wm.Task)
    {
        com.android.server.wm.WindowContainer r0;
        com.android.server.wm.Task r1, $r3;
        com.android.server.wm.'-$$Lambda$WindowContainer$VgO_jyvTwx2IcoTcwvoIKxat95M' $r2;
        java.util.function.Predicate r4;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: com.android.server.wm.Task;

        $r2 = <com.android.server.wm._$$Lambda$WindowContainer$VgO_jyvTwx2IcoTcwvoIKxat95M: com.android.server.wm.'-$$Lambda$WindowContainer$VgO_jyvTwx2IcoTcwvoIKxat95M' INSTANCE>;

        r4 = (java.util.function.Predicate) $r2;

        $r3 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.Task getTask(java.util.function.Predicate,com.android.server.wm.WindowContainer,boolean,boolean)>(r4, r1, 0, 0);

        return $r3;
    }

    com.android.server.wm.Task getTaskBelow(com.android.server.wm.Task)
    {
        com.android.server.wm.WindowContainer r0;
        com.android.server.wm.Task r1, $r3;
        com.android.server.wm.'-$$Lambda$WindowContainer$7x9zhFx3vhSZ5lMUA8efWaz-6co' $r2;
        java.util.function.Predicate r4;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: com.android.server.wm.Task;

        $r2 = <com.android.server.wm._$$Lambda$WindowContainer$7x9zhFx3vhSZ5lMUA8efWaz_6co: com.android.server.wm.'-$$Lambda$WindowContainer$7x9zhFx3vhSZ5lMUA8efWaz-6co' INSTANCE>;

        r4 = (java.util.function.Predicate) $r2;

        $r3 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.Task getTask(java.util.function.Predicate,com.android.server.wm.WindowContainer,boolean,boolean)>(r4, r1, 0, 1);

        return $r3;
    }

    com.android.server.wm.ActivityRecord getTopActivity(boolean, boolean)
    {
        com.android.server.wm.WindowContainer r0;
        boolean z0, z1;
        com.android.server.wm.'-$$Lambda$WindowContainer$7u99Gj9w15XaOTtX23LKq-yXn5o' $r1;
        com.android.server.wm.ActivityRecord $r2, $r4, $r6, $r8;
        com.android.server.wm.'-$$Lambda$WindowContainer$-A4y17DMfFWJcsomzkr9vLbjQAE' $r3;
        com.android.server.wm.'-$$Lambda$WindowContainer$1ZEE7fA5djns2jQRzCNudNIbJ1U' $r5;
        com.android.server.wm.'-$$Lambda$WindowContainer$XFf_Y8TZb5u_pVgOD-hm95z8ghM' $r7;
        java.util.function.Predicate r9, r10, r11, r12;

        r0 := @this: com.android.server.wm.WindowContainer;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        if z0 == 0 goto label2;

        if z1 == 0 goto label1;

        $r7 = <com.android.server.wm._$$Lambda$WindowContainer$XFf_Y8TZb5u_pVgOD_hm95z8ghM: com.android.server.wm.'-$$Lambda$WindowContainer$XFf_Y8TZb5u_pVgOD-hm95z8ghM' INSTANCE>;

        r9 = (java.util.function.Predicate) $r7;

        $r8 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.ActivityRecord getActivity(java.util.function.Predicate)>(r9);

        return $r8;

     label1:
        $r5 = <com.android.server.wm._$$Lambda$WindowContainer$1ZEE7fA5djns2jQRzCNudNIbJ1U: com.android.server.wm.'-$$Lambda$WindowContainer$1ZEE7fA5djns2jQRzCNudNIbJ1U' INSTANCE>;

        r10 = (java.util.function.Predicate) $r5;

        $r6 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.ActivityRecord getActivity(java.util.function.Predicate)>(r10);

        return $r6;

     label2:
        if z1 == 0 goto label3;

        $r3 = <com.android.server.wm._$$Lambda$WindowContainer$_A4y17DMfFWJcsomzkr9vLbjQAE: com.android.server.wm.'-$$Lambda$WindowContainer$-A4y17DMfFWJcsomzkr9vLbjQAE' INSTANCE>;

        r11 = (java.util.function.Predicate) $r3;

        $r4 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.ActivityRecord getActivity(java.util.function.Predicate)>(r11);

        return $r4;

     label3:
        $r1 = <com.android.server.wm._$$Lambda$WindowContainer$7u99Gj9w15XaOTtX23LKq_yXn5o: com.android.server.wm.'-$$Lambda$WindowContainer$7u99Gj9w15XaOTtX23LKq-yXn5o' INSTANCE>;

        r12 = (java.util.function.Predicate) $r1;

        $r2 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.ActivityRecord getActivity(java.util.function.Predicate)>(r12);

        return $r2;
    }

    com.android.server.wm.WindowContainer getTopChild()
    {
        com.android.server.wm.WindowContainer r0, $r3;
        com.android.server.wm.WindowList $r1;
        java.lang.Object $r2;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r2 = virtualinvoke $r1.<com.android.server.wm.WindowList: java.lang.Object peekLast()>();

        $r3 = (com.android.server.wm.WindowContainer) $r2;

        return $r3;
    }

    com.android.server.wm.ActivityRecord getTopMostActivity()
    {
        com.android.server.wm.WindowContainer r0;
        com.android.server.wm.'-$$Lambda$WindowContainer$hEnPtnCJ_pCrhm4O_2UvgVpB0HQ' $r1;
        com.android.server.wm.ActivityRecord $r2;
        java.util.function.Predicate r3;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = <com.android.server.wm._$$Lambda$WindowContainer$hEnPtnCJ_pCrhm4O_2UvgVpB0HQ: com.android.server.wm.'-$$Lambda$WindowContainer$hEnPtnCJ_pCrhm4O_2UvgVpB0HQ' INSTANCE>;

        r3 = (java.util.function.Predicate) $r1;

        $r2 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.ActivityRecord getActivity(java.util.function.Predicate,boolean)>(r3, 1);

        return $r2;
    }

    com.android.server.wm.Task getTopMostTask()
    {
        com.android.server.wm.WindowContainer r0;
        com.android.server.wm.'-$$Lambda$WindowContainer$lJjjxJS1wJFikrxN0jFMgNna43g' $r1;
        com.android.server.wm.Task $r2;
        java.util.function.Predicate r3;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = <com.android.server.wm._$$Lambda$WindowContainer$lJjjxJS1wJFikrxN0jFMgNna43g: com.android.server.wm.'-$$Lambda$WindowContainer$lJjjxJS1wJFikrxN0jFMgNna43g' INSTANCE>;

        r3 = (java.util.function.Predicate) $r1;

        $r2 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.Task getTask(java.util.function.Predicate,boolean)>(r3, 1);

        return $r2;
    }

    com.android.server.wm.WindowState getWindow(java.util.function.Predicate)
    {
        com.android.server.wm.WindowContainer r0, $r6;
        java.util.function.Predicate r1;
        com.android.server.wm.WindowState r2;
        com.android.server.wm.WindowList $r3, $r4;
        int $i0, i1;
        java.lang.Object $r5;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: java.util.function.Predicate;

        $r3 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i0 = virtualinvoke $r3.<com.android.server.wm.WindowList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r4 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r5 = virtualinvoke $r4.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i1);

        $r6 = (com.android.server.wm.WindowContainer) $r5;

        r2 = virtualinvoke $r6.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowState getWindow(java.util.function.Predicate)>(r1);

        if r2 == null goto label2;

        return r2;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return null;
    }

    boolean handleCompleteDeferredRemoval()
    {
        com.android.server.wm.WindowContainer r0, $r4;
        com.android.server.wm.WindowList $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.server.wm.WindowContainer;

        z2 = 0;

        $r1 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i0 = virtualinvoke $r1.<com.android.server.wm.WindowList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r3 = virtualinvoke $r2.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i1);

        $r4 = (com.android.server.wm.WindowContainer) $r3;

        $z0 = virtualinvoke $r4.<com.android.server.wm.WindowContainer: boolean handleCompleteDeferredRemoval()>();

        z2 = z2 | $z0;

        $z1 = virtualinvoke r0.<com.android.server.wm.WindowContainer: boolean hasChild()>();

        if $z1 != 0 goto label2;

        return 0;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return z2;
    }

    boolean handlesOrientationChangeFromDescendant()
    {
        com.android.server.wm.WindowContainer r0, r1;
        boolean $z0, z1;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getParent()>();

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<com.android.server.wm.WindowContainer: boolean handlesOrientationChangeFromDescendant()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    boolean hasActivity()
    {
        com.android.server.wm.WindowContainer r0, $r4;
        com.android.server.wm.WindowList $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i0 = virtualinvoke $r1.<com.android.server.wm.WindowList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r3 = virtualinvoke $r2.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i1);

        $r4 = (com.android.server.wm.WindowContainer) $r3;

        $z0 = virtualinvoke $r4.<com.android.server.wm.WindowContainer: boolean hasActivity()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return 0;
    }

    boolean hasChild(com.android.server.wm.WindowContainer)
    {
        com.android.server.wm.WindowContainer r0, r1, r2;
        com.android.server.wm.WindowList $r3, $r4;
        int $i0, i1;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: com.android.server.wm.WindowContainer;

        $r3 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i0 = virtualinvoke $r3.<com.android.server.wm.WindowList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label4;

        $r4 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r5 = virtualinvoke $r4.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i1);

        r2 = (com.android.server.wm.WindowContainer) $r5;

        if r2 == r1 goto label3;

        $z0 = virtualinvoke r2.<com.android.server.wm.WindowContainer: boolean hasChild(com.android.server.wm.WindowContainer)>(r1);

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return 1;

     label4:
        return 0;
    }

    boolean hasCommittedReparentToAnimationLeash()
    {
        com.android.server.wm.WindowContainer r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowContainer;

        $z0 = r0.<com.android.server.wm.WindowContainer: boolean mCommittedReparentToAnimationLeash>;

        return $z0;
    }

    boolean hasContentToDisplay()
    {
        com.android.server.wm.WindowContainer r0, $r4;
        com.android.server.wm.WindowList $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i0 = virtualinvoke $r1.<com.android.server.wm.WindowList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r3 = virtualinvoke $r2.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i1);

        $r4 = (com.android.server.wm.WindowContainer) $r3;

        $z0 = virtualinvoke $r4.<com.android.server.wm.WindowContainer: boolean hasContentToDisplay()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return 0;
    }

    final boolean isAnimating()
    {
        com.android.server.wm.WindowContainer r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowContainer;

        $z0 = virtualinvoke r0.<com.android.server.wm.WindowContainer: boolean isAnimating(int)>(0);

        return $z0;
    }

    final boolean isAnimating(int)
    {
        com.android.server.wm.WindowContainer r0;
        int i0;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowContainer;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<com.android.server.wm.WindowContainer: boolean isAnimating(int,int)>(i0, -1);

        return $z0;
    }

    final boolean isAnimating(int, int)
    {
        com.android.server.wm.WindowContainer r0, $r1;
        int i0, i1;
        boolean z0;

        r0 := @this: com.android.server.wm.WindowContainer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getAnimatingContainer(int,int)>(i0, i1);

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    final boolean isAnimatingExcluding(int, int)
    {
        com.android.server.wm.WindowContainer r0;
        int i0, i1, $i2;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowContainer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i1 & -1;

        $z0 = virtualinvoke r0.<com.android.server.wm.WindowContainer: boolean isAnimating(int,int)>(i0, $i2);

        return $z0;
    }

    boolean isAppTransitioning()
    {
        com.android.server.wm.WindowContainer r0;
        com.android.server.wm.'-$$Lambda$WindowContainer$4sX6UUtugZXD_J917yuWIm58Q9M' $r1;
        com.android.server.wm.ActivityRecord $r2;
        boolean z0;
        java.util.function.Predicate r3;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = <com.android.server.wm._$$Lambda$WindowContainer$4sX6UUtugZXD_J917yuWIm58Q9M: com.android.server.wm.'-$$Lambda$WindowContainer$4sX6UUtugZXD_J917yuWIm58Q9M' INSTANCE>;

        r3 = (java.util.function.Predicate) $r1;

        $r2 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.ActivityRecord getActivity(java.util.function.Predicate)>(r3);

        if $r2 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    boolean isAttached()
    {
        com.android.server.wm.WindowContainer r0;
        com.android.server.wm.DisplayArea $r1;
        boolean z0;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.DisplayArea getDisplayArea()>();

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    boolean isChangingAppTransition()
    {
        com.android.server.wm.WindowContainer r0;
        com.android.server.wm.DisplayContent r1;
        android.util.ArraySet $r2;
        boolean $z0, z1;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.DisplayContent mDisplayContent>;

        if r1 == null goto label1;

        $r2 = r1.<com.android.server.wm.DisplayContent: android.util.ArraySet mChangingContainers>;

        $z0 = virtualinvoke $r2.<android.util.ArraySet: boolean contains(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    boolean isDescendantOf(com.android.server.wm.WindowContainer)
    {
        com.android.server.wm.WindowContainer r0, r1, r2;
        boolean $z0, z1;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: com.android.server.wm.WindowContainer;

        r2 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getParent()>();

        z1 = 1;

        if r2 != r1 goto label1;

        return 1;

     label1:
        if r2 == null goto label2;

        $z0 = virtualinvoke r2.<com.android.server.wm.WindowContainer: boolean isDescendantOf(com.android.server.wm.WindowContainer)>(r1);

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        z1 = 0;

     label3:
        return z1;
    }

    boolean isFocusable()
    {
        com.android.server.wm.WindowContainer r0, r1;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getParent()>();

        if r1 == null goto label1;

        $z1 = virtualinvoke r1.<com.android.server.wm.WindowContainer: boolean isFocusable()>();

        if $z1 == 0 goto label2;

     label1:
        $z0 = r0.<com.android.server.wm.WindowContainer: boolean mIsFocusable>;

        if $z0 == 0 goto label2;

        z2 = 1;

        goto label3;

     label2:
        z2 = 0;

     label3:
        return z2;
    }

    boolean isOnTop()
    {
        com.android.server.wm.WindowContainer r0, r1, $r2;
        boolean $z0, z1;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getParent()>();

        if r1 == null goto label1;

        $r2 = virtualinvoke r1.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getTopChild()>();

        if $r2 != r0 goto label1;

        $z0 = virtualinvoke r1.<com.android.server.wm.WindowContainer: boolean isOnTop()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    boolean isOrganized()
    {
        com.android.server.wm.WindowContainer r0;

        r0 := @this: com.android.server.wm.WindowContainer;

        return 0;
    }

    protected boolean isSelfAnimating(int, int)
    {
        com.android.server.wm.WindowContainer r0;
        int i0, i1, $i2, $i3, $i4;
        com.android.server.wm.SurfaceAnimator $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: com.android.server.wm.WindowContainer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.SurfaceAnimator mSurfaceAnimator>;

        $z0 = virtualinvoke $r1.<com.android.server.wm.SurfaceAnimator: boolean isAnimating()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.SurfaceAnimator mSurfaceAnimator>;

        $i3 = virtualinvoke $r2.<com.android.server.wm.SurfaceAnimator: int getAnimationType()>();

        $i4 = $i3 & i1;

        if $i4 <= 0 goto label1;

        return 1;

     label1:
        $i2 = i0 & 1;

        if $i2 == 0 goto label2;

        $z1 = virtualinvoke r0.<com.android.server.wm.WindowContainer: boolean isWaitingForTransitionStart()>();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    boolean isVisible()
    {
        com.android.server.wm.WindowContainer r0, $r4;
        com.android.server.wm.WindowList $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i0 = virtualinvoke $r1.<com.android.server.wm.WindowList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r3 = virtualinvoke $r2.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i1);

        $r4 = (com.android.server.wm.WindowContainer) $r3;

        $z0 = virtualinvoke $r4.<com.android.server.wm.WindowContainer: boolean isVisible()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return 0;
    }

    boolean isWaitingForTransitionStart()
    {
        com.android.server.wm.WindowContainer r0;

        r0 := @this: com.android.server.wm.WindowContainer;

        return 0;
    }

    public void lambda$waitForAllWindowsDrawn$14$WindowContainer(com.android.server.wm.WindowState)
    {
        com.android.server.wm.WindowContainer r0;
        com.android.server.wm.WindowState r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: com.android.server.wm.WindowState;

        $r2 = r0.<com.android.server.wm.WindowContainer: java.util.ArrayList mWaitingForDrawn>;

        virtualinvoke r1.<com.android.server.wm.WindowState: void requestDrawIfNeeded(java.util.List)>($r2);

        return;
    }

    public android.view.SurfaceControl$Builder makeAnimationLeash()
    {
        com.android.server.wm.WindowContainer r0;
        android.view.SurfaceControl$Builder $r1, $r2;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = virtualinvoke r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl$Builder makeSurface()>();

        $r2 = virtualinvoke $r1.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setContainerLayer()>();

        return $r2;
    }

    android.view.SurfaceControl$Builder makeChildSurface(com.android.server.wm.WindowContainer)
    {
        com.android.server.wm.WindowContainer r0, r1, $r2;
        android.view.SurfaceControl$Builder $r3, $r5;
        android.view.SurfaceControl $r4;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: com.android.server.wm.WindowContainer;

        $r2 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getParent()>();

        $r3 = virtualinvoke $r2.<com.android.server.wm.WindowContainer: android.view.SurfaceControl$Builder makeChildSurface(com.android.server.wm.WindowContainer)>(r1);

        $r4 = r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl mSurfaceControl>;

        $r5 = virtualinvoke $r3.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setParent(android.view.SurfaceControl)>($r4);

        return $r5;
    }

    android.view.SurfaceControl$Builder makeSurface()
    {
        com.android.server.wm.WindowContainer r0, $r1;
        android.view.SurfaceControl$Builder $r2;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getParent()>();

        $r2 = virtualinvoke $r1.<com.android.server.wm.WindowContainer: android.view.SurfaceControl$Builder makeChildSurface(com.android.server.wm.WindowContainer)>(r0);

        return $r2;
    }

    void mergeBlastSyncTransaction(android.view.SurfaceControl$Transaction)
    {
        com.android.server.wm.WindowContainer r0;
        android.view.SurfaceControl$Transaction r1, $r2;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        $r2 = r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl$Transaction mBLASTSyncTransaction>;

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction merge(android.view.SurfaceControl$Transaction)>($r2);

        r0.<com.android.server.wm.WindowContainer: boolean mUsingBLASTSyncTransaction> = 0;

        return;
    }

    void migrateToNewSurfaceControl()
    {
        com.android.server.wm.WindowContainer r0, r2, $r15;
        android.view.SurfaceControl$Transaction r1;
        android.view.SurfaceControl $r3, $r11, $r16, $r18, r21, r22, r23, r25;
        android.graphics.Point $r5;
        android.view.SurfaceControl$Builder $r6, $r7, $r9;
        java.lang.String $r8;
        int $i0, $i1, i2, $i3;
        com.android.server.wm.WindowList $r13, $r24;
        java.lang.Object $r14;
        com.android.server.wm.WindowManagerService r20;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 = virtualinvoke r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl$Transaction getPendingTransaction()>();

        $r3 = r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction remove(android.view.SurfaceControl)>($r3);

        $r5 = r0.<com.android.server.wm.WindowContainer: android.graphics.Point mLastSurfacePosition>;

        virtualinvoke $r5.<android.graphics.Point: void set(int,int)>(0, 0);

        r20 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowManagerService mWmService>;

        r21 = null;

        $r6 = virtualinvoke r20.<com.android.server.wm.WindowManagerService: android.view.SurfaceControl$Builder makeSurfaceBuilder(android.view.SurfaceSession)>(null);

        $r7 = virtualinvoke $r6.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setContainerLayer()>();

        $r8 = virtualinvoke r0.<com.android.server.wm.WindowContainer: java.lang.String getName()>();

        $r9 = virtualinvoke $r7.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setName(java.lang.String)>($r8);

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void setInitialSurfaceControlProperties(android.view.SurfaceControl$Builder)>($r9);

        r22 = r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl mSurfaceControl>;

        r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer mParent>;

        if r2 != null goto label1;

        goto label2;

     label1:
        r21 = virtualinvoke r2.<com.android.server.wm.WindowContainer: android.view.SurfaceControl getSurfaceControl()>();

     label2:
        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction reparent(android.view.SurfaceControl,android.view.SurfaceControl)>(r22, r21);

        r23 = r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl mLastRelativeToLayer>;

        if r23 == null goto label3;

        $r18 = r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl mSurfaceControl>;

        $i1 = r0.<com.android.server.wm.WindowContainer: int mLastLayer>;

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setRelativeLayer(android.view.SurfaceControl,android.view.SurfaceControl,int)>($r18, r23, $i1);

        goto label4;

     label3:
        $r11 = r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl mSurfaceControl>;

        $i0 = r0.<com.android.server.wm.WindowContainer: int mLastLayer>;

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setLayer(android.view.SurfaceControl,int)>($r11, $i0);

     label4:
        i2 = 0;

     label5:
        $r24 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i3 = virtualinvoke $r24.<com.android.server.wm.WindowList: int size()>();

        if i2 >= $i3 goto label7;

        $r13 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r14 = virtualinvoke $r13.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i2);

        $r15 = (com.android.server.wm.WindowContainer) $r14;

        r25 = virtualinvoke $r15.<com.android.server.wm.WindowContainer: android.view.SurfaceControl getSurfaceControl()>();

        if r25 == null goto label6;

        $r16 = r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction reparent(android.view.SurfaceControl,android.view.SurfaceControl)>(r25, $r16);

     label6:
        i2 = i2 + 1;

        goto label5;

     label7:
        virtualinvoke r0.<com.android.server.wm.WindowContainer: void scheduleAnimation()>();

        return;
    }

    boolean needsZBoost()
    {
        com.android.server.wm.WindowContainer r0, $r4;
        boolean $z0, $z1;
        com.android.server.wm.WindowList $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;

        r0 := @this: com.android.server.wm.WindowContainer;

        $z0 = r0.<com.android.server.wm.WindowContainer: boolean mNeedsZBoost>;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        i1 = 0;

     label2:
        $r1 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i0 = virtualinvoke $r1.<com.android.server.wm.WindowList: int size()>();

        if i1 >= $i0 goto label4;

        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r3 = virtualinvoke $r2.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i1);

        $r4 = (com.android.server.wm.WindowContainer) $r3;

        $z1 = virtualinvoke $r4.<com.android.server.wm.WindowContainer: boolean needsZBoost()>();

        if $z1 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 0;
    }

    boolean okToAnimate()
    {
        com.android.server.wm.WindowContainer r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowContainer;

        $z0 = virtualinvoke r0.<com.android.server.wm.WindowContainer: boolean okToAnimate(boolean)>(0);

        return $z0;
    }

    boolean okToAnimate(boolean)
    {
        com.android.server.wm.WindowContainer r0;
        com.android.server.wm.DisplayContent r1;
        boolean $z0, z1, z2;

        r0 := @this: com.android.server.wm.WindowContainer;

        z1 := @parameter0: boolean;

        r1 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.DisplayContent getDisplayContent()>();

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<com.android.server.wm.DisplayContent: boolean okToAnimate(boolean)>(z1);

        if $z0 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    boolean okToDisplay()
    {
        com.android.server.wm.WindowContainer r0;
        com.android.server.wm.DisplayContent r1;
        boolean $z0, z1;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.DisplayContent getDisplayContent()>();

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<com.android.server.wm.DisplayContent: boolean okToDisplay()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    protected void onAnimationFinished(int, com.android.server.wm.AnimationAdapter)
    {
        com.android.server.wm.WindowContainer r0;
        int i0;
        com.android.server.wm.AnimationAdapter r1;
        com.android.server.wm.WindowManagerService $r2;

        r0 := @this: com.android.server.wm.WindowContainer;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.wm.AnimationAdapter;

        specialinvoke r0.<com.android.server.wm.WindowContainer: void doAnimationFinished(int,com.android.server.wm.AnimationAdapter)>(i0, r1);

        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowManagerService mWmService>;

        virtualinvoke $r2.<com.android.server.wm.WindowManagerService: void onAnimationFinished()>();

        r0.<com.android.server.wm.WindowContainer: boolean mNeedsZBoost> = 0;

        return;
    }

    public void onAnimationLeashCreated(android.view.SurfaceControl$Transaction, android.view.SurfaceControl)
    {
        com.android.server.wm.WindowContainer r0;
        android.view.SurfaceControl$Transaction r1;
        android.view.SurfaceControl r2;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        r2 := @parameter1: android.view.SurfaceControl;

        r0.<com.android.server.wm.WindowContainer: int mLastLayer> = -1;

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void reassignLayer(android.view.SurfaceControl$Transaction)>(r1);

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void resetSurfacePositionForAnimationLeash(android.view.SurfaceControl$Transaction)>(r1);

        return;
    }

    public void onAnimationLeashLost(android.view.SurfaceControl$Transaction)
    {
        com.android.server.wm.WindowContainer r0;
        android.view.SurfaceControl$Transaction r1;
        com.android.server.wm.SurfaceFreezer $r2;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        r0.<com.android.server.wm.WindowContainer: int mLastLayer> = -1;

        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.SurfaceFreezer mSurfaceFreezer>;

        virtualinvoke $r2.<com.android.server.wm.SurfaceFreezer: void unfreeze(android.view.SurfaceControl$Transaction)>(r1);

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void reassignLayer(android.view.SurfaceControl$Transaction)>(r1);

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void updateSurfacePosition(android.view.SurfaceControl$Transaction)>(r1);

        return;
    }

    void onAppTransitionDone()
    {
        com.android.server.wm.WindowContainer r0, $r4;
        com.android.server.wm.WindowList $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i0 = virtualinvoke $r1.<com.android.server.wm.WindowList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r3 = virtualinvoke $r2.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i1);

        $r4 = (com.android.server.wm.WindowContainer) $r3;

        virtualinvoke $r4.<com.android.server.wm.WindowContainer: void onAppTransitionDone()>();

        i1 = i1 + -1;

        goto label1;

     label2:
        return;
    }

    void onChildPositionChanged(com.android.server.wm.WindowContainer)
    {
        com.android.server.wm.WindowContainer r0, r1;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: com.android.server.wm.WindowContainer;

        return;
    }

    void onChildVisibilityRequested(boolean)
    {
        com.android.server.wm.WindowContainer r0, r5;
        boolean z0;
        com.android.server.wm.SurfaceFreezer $r1;
        android.view.SurfaceControl$Transaction $r2;
        android.util.ArraySet $r3;
        com.android.server.wm.DisplayContent r4;

        r0 := @this: com.android.server.wm.WindowContainer;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.SurfaceFreezer mSurfaceFreezer>;

        $r2 = virtualinvoke r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl$Transaction getSyncTransaction()>();

        virtualinvoke $r1.<com.android.server.wm.SurfaceFreezer: void unfreeze(android.view.SurfaceControl$Transaction)>($r2);

        r4 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.DisplayContent mDisplayContent>;

        if r4 == null goto label1;

        $r3 = r4.<com.android.server.wm.DisplayContent: android.util.ArraySet mChangingContainers>;

        virtualinvoke $r3.<android.util.ArraySet: boolean remove(java.lang.Object)>(r0);

     label1:
        r5 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getParent()>();

        if r5 == null goto label2;

        virtualinvoke r5.<com.android.server.wm.WindowContainer: void onChildVisibilityRequested(boolean)>(z0);

     label2:
        return;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        com.android.server.wm.WindowContainer r0;
        android.content.res.Configuration r1;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: android.content.res.Configuration;

        specialinvoke r0.<com.android.server.wm.ConfigurationContainer: void onConfigurationChanged(android.content.res.Configuration)>(r1);

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void updateSurfacePosition()>();

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void scheduleAnimation()>();

        return;
    }

    boolean onDescendantOrientationChanged(android.os.IBinder, com.android.server.wm.ConfigurationContainer)
    {
        com.android.server.wm.WindowContainer r0, r3;
        android.os.IBinder r1;
        com.android.server.wm.ConfigurationContainer r2;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: com.android.server.wm.ConfigurationContainer;

        r3 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getParent()>();

        if r3 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r3.<com.android.server.wm.WindowContainer: boolean onDescendantOrientationChanged(android.os.IBinder,com.android.server.wm.ConfigurationContainer)>(r1, r2);

        return $z0;
    }

    void onDescendantOverrideConfigurationChanged()
    {
        com.android.server.wm.WindowContainer r0, r1;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer mParent>;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.server.wm.WindowContainer: void onDescendantOverrideConfigurationChanged()>();

     label1:
        return;
    }

    void onDisplayChanged(com.android.server.wm.DisplayContent)
    {
        com.android.server.wm.WindowContainer r0, $r5;
        com.android.server.wm.DisplayContent r1, r2;
        com.android.server.wm.WindowList $r3, $r12;
        java.lang.Object $r4;
        android.view.SurfaceControl$Transaction $r6, $r7, $r11;
        android.util.ArraySet $r9;
        boolean $z0;
        com.android.server.wm.SurfaceFreezer $r10;
        int $i0, i1;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: com.android.server.wm.DisplayContent;

        r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.DisplayContent mDisplayContent>;

        if r2 == null goto label1;

        $r9 = r2.<com.android.server.wm.DisplayContent: android.util.ArraySet mChangingContainers>;

        $z0 = virtualinvoke $r9.<android.util.ArraySet: boolean remove(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r10 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.SurfaceFreezer mSurfaceFreezer>;

        $r11 = virtualinvoke r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl$Transaction getPendingTransaction()>();

        virtualinvoke $r10.<com.android.server.wm.SurfaceFreezer: void unfreeze(android.view.SurfaceControl$Transaction)>($r11);

     label1:
        r0.<com.android.server.wm.WindowContainer: com.android.server.wm.DisplayContent mDisplayContent> = r1;

        if r1 == null goto label2;

        if r1 == r0 goto label2;

        $r6 = virtualinvoke r1.<com.android.server.wm.DisplayContent: android.view.SurfaceControl$Transaction getPendingTransaction()>();

        $r7 = r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl$Transaction mPendingTransaction>;

        virtualinvoke $r6.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction merge(android.view.SurfaceControl$Transaction)>($r7);

     label2:
        $r12 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i0 = virtualinvoke $r12.<com.android.server.wm.WindowList: int size()>();

        i1 = $i0 - 1;

     label3:
        if i1 < 0 goto label4;

        $r3 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r4 = virtualinvoke $r3.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i1);

        $r5 = (com.android.server.wm.WindowContainer) $r4;

        virtualinvoke $r5.<com.android.server.wm.WindowContainer: void onDisplayChanged(com.android.server.wm.DisplayContent)>(r1);

        i1 = i1 + -1;

        goto label3;

     label4:
        return;
    }

    void onMovedByResize()
    {
        com.android.server.wm.WindowContainer r0, $r4;
        com.android.server.wm.WindowList $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i0 = virtualinvoke $r1.<com.android.server.wm.WindowList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r3 = virtualinvoke $r2.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i1);

        $r4 = (com.android.server.wm.WindowContainer) $r3;

        virtualinvoke $r4.<com.android.server.wm.WindowContainer: void onMovedByResize()>();

        i1 = i1 + -1;

        goto label1;

     label2:
        return;
    }

    void onParentChanged(com.android.server.wm.ConfigurationContainer, com.android.server.wm.ConfigurationContainer)
    {
        com.android.server.wm.WindowContainer r0;
        com.android.server.wm.ConfigurationContainer r1, r2;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: com.android.server.wm.ConfigurationContainer;

        r2 := @parameter1: com.android.server.wm.ConfigurationContainer;

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void onParentChanged(com.android.server.wm.ConfigurationContainer,com.android.server.wm.ConfigurationContainer,com.android.server.wm.WindowContainer$PreAssignChildLayersCallback)>(r1, r2, null);

        return;
    }

    void onParentChanged(com.android.server.wm.ConfigurationContainer, com.android.server.wm.ConfigurationContainer, com.android.server.wm.WindowContainer$PreAssignChildLayersCallback)
    {
        com.android.server.wm.WindowContainer r0, $r4, $r7, $r9;
        com.android.server.wm.ConfigurationContainer r1, r2;
        com.android.server.wm.WindowContainer$PreAssignChildLayersCallback r3;
        android.view.SurfaceControl $r5, $r8;
        android.view.SurfaceControl$Transaction $r6;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: com.android.server.wm.ConfigurationContainer;

        r2 := @parameter1: com.android.server.wm.ConfigurationContainer;

        r3 := @parameter2: com.android.server.wm.WindowContainer$PreAssignChildLayersCallback;

        specialinvoke r0.<com.android.server.wm.ConfigurationContainer: void onParentChanged(com.android.server.wm.ConfigurationContainer,com.android.server.wm.ConfigurationContainer)>(r1, r2);

        $r4 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer mParent>;

        if $r4 != null goto label1;

        return;

     label1:
        $r5 = r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl mSurfaceControl>;

        if $r5 != null goto label2;

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void createSurfaceControl(boolean)>(0);

        goto label3;

     label2:
        $r6 = virtualinvoke r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl$Transaction getSyncTransaction()>();

        $r7 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer mParent>;

        $r8 = $r7.<com.android.server.wm.WindowContainer: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void reparentSurfaceControl(android.view.SurfaceControl$Transaction,android.view.SurfaceControl)>($r6, $r8);

     label3:
        if r3 == null goto label4;

        interfaceinvoke r3.<com.android.server.wm.WindowContainer$PreAssignChildLayersCallback: void onPreAssignChildLayers()>();

     label4:
        $r9 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer mParent>;

        virtualinvoke $r9.<com.android.server.wm.WindowContainer: void assignChildLayers()>();

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void scheduleAnimation()>();

        return;
    }

    void onParentResize()
    {
        com.android.server.wm.WindowContainer r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowContainer;

        $z0 = virtualinvoke r0.<com.android.server.wm.WindowContainer: boolean hasOverrideBounds()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<com.android.server.wm.WindowContainer: void onResize()>();

        return;
    }

    public void onRequestedOverrideConfigurationChanged(android.content.res.Configuration)
    {
        com.android.server.wm.WindowContainer r0, r4;
        int i0, $i1;
        android.app.WindowConfiguration $r1;
        android.graphics.Rect $r2;
        android.content.res.Configuration r3;

        r0 := @this: com.android.server.wm.WindowContainer;

        r3 := @parameter0: android.content.res.Configuration;

        $r1 = r3.<android.content.res.Configuration: android.app.WindowConfiguration windowConfiguration>;

        $r2 = virtualinvoke $r1.<android.app.WindowConfiguration: android.graphics.Rect getBounds()>();

        i0 = virtualinvoke r0.<com.android.server.wm.WindowContainer: int diffRequestedOverrideBounds(android.graphics.Rect)>($r2);

        specialinvoke r0.<com.android.server.wm.ConfigurationContainer: void onRequestedOverrideConfigurationChanged(android.content.res.Configuration)>(r3);

        r4 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer mParent>;

        if r4 == null goto label1;

        virtualinvoke r4.<com.android.server.wm.WindowContainer: void onDescendantOverrideConfigurationChanged()>();

     label1:
        if i0 != 0 goto label2;

        return;

     label2:
        $i1 = i0 & 2;

        if $i1 != 2 goto label3;

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void onResize()>();

        goto label4;

     label3:
        virtualinvoke r0.<com.android.server.wm.WindowContainer: void onMovedByResize()>();

     label4:
        return;
    }

    void onResize()
    {
        com.android.server.wm.WindowContainer r0, $r4;
        com.android.server.wm.WindowList $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i0 = virtualinvoke $r1.<com.android.server.wm.WindowList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r3 = virtualinvoke $r2.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i1);

        $r4 = (com.android.server.wm.WindowContainer) $r3;

        virtualinvoke $r4.<com.android.server.wm.WindowContainer: void onParentResize()>();

        i1 = i1 + -1;

        goto label1;

     label2:
        return;
    }

    void onSurfaceShown(android.view.SurfaceControl$Transaction)
    {
        com.android.server.wm.WindowContainer r0;
        android.view.SurfaceControl$Transaction r1;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        return;
    }

    public void onTransactionReady(int, java.util.Set)
    {
        com.android.server.wm.WindowContainer r0;
        int i0, $i1;
        java.util.Set r1;
        com.android.server.wm.BLASTSyncEngine$TransactionReadyListener $r2, $r3;

        r0 := @this: com.android.server.wm.WindowContainer;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.Set;

        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.BLASTSyncEngine$TransactionReadyListener mWaitingListener>;

        if $r2 != null goto label1;

        return;

     label1:
        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r0);

        $r3 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.BLASTSyncEngine$TransactionReadyListener mWaitingListener>;

        $i1 = r0.<com.android.server.wm.WindowContainer: int mWaitingSyncId>;

        interfaceinvoke $r3.<com.android.server.wm.BLASTSyncEngine$TransactionReadyListener: void onTransactionReady(int,java.util.Set)>($i1, r1);

        r0.<com.android.server.wm.WindowContainer: com.android.server.wm.BLASTSyncEngine$TransactionReadyListener mWaitingListener> = null;

        r0.<com.android.server.wm.WindowContainer: int mWaitingSyncId> = -1;

        return;
    }

    void positionChildAt(int, com.android.server.wm.WindowContainer, boolean)
    {
        com.android.server.wm.WindowContainer r0, r1, $r3, $r12, $r19, $r20, $r25, $r26;
        int i0, $i1, $i2, $i3, i4;
        boolean z0;
        java.lang.StringBuilder $r4;
        java.lang.String $r6, $r9, $r15;
        java.lang.IllegalArgumentException $r14;
        com.android.server.wm.WindowList $r16, $r17, $r21, $r22, $r23, $r27, $r28, $r29, $r30, $r31;
        java.lang.Object $r18, $r24;

        r0 := @this: com.android.server.wm.WindowContainer;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.wm.WindowContainer;

        z0 := @parameter2: boolean;

        $r3 = virtualinvoke r1.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getParent()>();

        if $r3 != r0 goto label8;

        $r16 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i1 = virtualinvoke $r16.<com.android.server.wm.WindowList: int size()>();

        $i2 = $i1 - 1;

        if i0 < $i2 goto label1;

        i4 = 2147483647;

        goto label2;

     label1:
        i4 = i0;

        if i0 > 0 goto label2;

        i4 = -2147483648;

     label2:
        if i4 == -2147483648 goto label5;

        if i4 == 2147483647 goto label3;

        $r29 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i3 = virtualinvoke $r29.<com.android.server.wm.WindowList: int indexOf(java.lang.Object)>(r1);

        if $i3 == i4 goto label7;

        $r30 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        virtualinvoke $r30.<com.android.server.wm.WindowList: boolean remove(java.lang.Object)>(r1);

        $r31 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        virtualinvoke $r31.<com.android.server.wm.WindowList: void add(int,java.lang.Object)>(i4, r1);

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void onChildPositionChanged(com.android.server.wm.WindowContainer)>(r1);

        goto label7;

     label3:
        $r23 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r24 = virtualinvoke $r23.<com.android.server.wm.WindowList: java.lang.Object peekLast()>();

        if $r24 == r1 goto label4;

        $r27 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        virtualinvoke $r27.<com.android.server.wm.WindowList: boolean remove(java.lang.Object)>(r1);

        $r28 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        virtualinvoke $r28.<com.android.server.wm.WindowList: boolean add(java.lang.Object)>(r1);

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void onChildPositionChanged(com.android.server.wm.WindowContainer)>(r1);

     label4:
        if z0 == 0 goto label7;

        $r25 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getParent()>();

        if $r25 == null goto label7;

        $r26 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getParent()>();

        virtualinvoke $r26.<com.android.server.wm.WindowContainer: void positionChildAt(int,com.android.server.wm.WindowContainer,boolean)>(2147483647, r0, 1);

        goto label7;

     label5:
        $r17 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r18 = virtualinvoke $r17.<com.android.server.wm.WindowList: java.lang.Object peekFirst()>();

        if $r18 == r1 goto label6;

        $r21 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        virtualinvoke $r21.<com.android.server.wm.WindowList: boolean remove(java.lang.Object)>(r1);

        $r22 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        virtualinvoke $r22.<com.android.server.wm.WindowList: void addFirst(java.lang.Object)>(r1);

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void onChildPositionChanged(com.android.server.wm.WindowContainer)>(r1);

     label6:
        if z0 == 0 goto label7;

        $r19 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getParent()>();

        if $r19 == null goto label7;

        $r20 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getParent()>();

        virtualinvoke $r20.<com.android.server.wm.WindowContainer: void positionChildAt(int,com.android.server.wm.WindowContainer,boolean)>(-2147483648, r0, 1);

     label7:
        return;

     label8:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("positionChildAt: container=");

        $r6 = virtualinvoke r1.<com.android.server.wm.WindowContainer: java.lang.String getName()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a child of container=");

        $r9 = virtualinvoke r0.<com.android.server.wm.WindowContainer: java.lang.String getName()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" current parent=");

        $r12 = virtualinvoke r1.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getParent()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = new java.lang.IllegalArgumentException;

        $r15 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r14;
    }

    boolean prepareForSync(com.android.server.wm.BLASTSyncEngine$TransactionReadyListener, int)
    {
        com.android.server.wm.WindowContainer r0;
        com.android.server.wm.BLASTSyncEngine$TransactionReadyListener r1;
        boolean z0, z1, $z2;
        com.android.server.wm.BLASTSyncEngine $r2, $r3;
        int i0, i1;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: com.android.server.wm.BLASTSyncEngine$TransactionReadyListener;

        i0 := @parameter1: int;

        z0 = virtualinvoke r0.<com.android.server.wm.WindowContainer: boolean setPendingListener(com.android.server.wm.BLASTSyncEngine$TransactionReadyListener,int)>(r1, i0);

        if z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.BLASTSyncEngine mBLASTSyncEngine>;

        i1 = virtualinvoke $r2.<com.android.server.wm.BLASTSyncEngine: int startSyncSet(com.android.server.wm.BLASTSyncEngine$TransactionReadyListener)>(r0);

        z1 = virtualinvoke r0.<com.android.server.wm.WindowContainer: boolean addChildrenToSyncSet(int)>(i1);

        $r3 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.BLASTSyncEngine mBLASTSyncEngine>;

        virtualinvoke $r3.<com.android.server.wm.BLASTSyncEngine: void setReady(int)>(i1);

        $z2 = z0 | z1;

        return $z2;
    }

    void prepareSurfaces()
    {
        com.android.server.wm.WindowContainer r0, $r5;
        com.android.server.wm.SurfaceAnimator $r1;
        boolean $z0;
        com.android.server.wm.WindowList $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.SurfaceAnimator mSurfaceAnimator>;

        $z0 = virtualinvoke $r1.<com.android.server.wm.SurfaceAnimator: boolean hasLeash()>();

        r0.<com.android.server.wm.WindowContainer: boolean mCommittedReparentToAnimationLeash> = $z0;

        i1 = 0;

     label1:
        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i0 = virtualinvoke $r2.<com.android.server.wm.WindowList: int size()>();

        if i1 >= $i0 goto label2;

        $r3 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r4 = virtualinvoke $r3.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i1);

        $r5 = (com.android.server.wm.WindowContainer) $r4;

        virtualinvoke $r5.<com.android.server.wm.WindowContainer: void prepareSurfaces()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void reassignLayer(android.view.SurfaceControl$Transaction)
    {
        com.android.server.wm.WindowContainer r0, r2;
        android.view.SurfaceControl$Transaction r1;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        r2 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getParent()>();

        if r2 == null goto label1;

        virtualinvoke r2.<com.android.server.wm.WindowContainer: void assignChildLayers(android.view.SurfaceControl$Transaction)>(r1);

     label1:
        return;
    }

    void removeChild(com.android.server.wm.WindowContainer)
    {
        com.android.server.wm.WindowContainer r0, r1;
        com.android.server.wm.WindowList $r3;
        boolean $z0, $z1;
        java.lang.StringBuilder $r4;
        java.lang.String $r6, $r9, $r12;
        java.lang.IllegalArgumentException $r11;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: com.android.server.wm.WindowContainer;

        $r3 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $z0 = virtualinvoke $r3.<com.android.server.wm.WindowList: boolean remove(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        specialinvoke r0.<com.android.server.wm.WindowContainer: void onChildRemoved(com.android.server.wm.WindowContainer)>(r1);

        $z1 = r1.<com.android.server.wm.WindowContainer: boolean mReparenting>;

        if $z1 != 0 goto label1;

        virtualinvoke r1.<com.android.server.wm.WindowContainer: void setParent(com.android.server.wm.WindowContainer)>(null);

     label1:
        return;

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removeChild: container=");

        $r6 = virtualinvoke r1.<com.android.server.wm.WindowContainer: java.lang.String getName()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a child of container=");

        $r9 = virtualinvoke r0.<com.android.server.wm.WindowContainer: java.lang.String getName()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r11;
    }

    void removeIfPossible()
    {
        com.android.server.wm.WindowContainer r0, $r4;
        com.android.server.wm.WindowList $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i0 = virtualinvoke $r1.<com.android.server.wm.WindowList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r3 = virtualinvoke $r2.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i1);

        $r4 = (com.android.server.wm.WindowContainer) $r3;

        virtualinvoke $r4.<com.android.server.wm.WindowContainer: void removeIfPossible()>();

        i1 = i1 + -1;

        goto label1;

     label2:
        return;
    }

    void removeImmediately()
    {
        com.android.server.wm.WindowContainer r0, r14, r15;
        android.view.SurfaceControl $r1, $r3;
        android.view.SurfaceControl$Transaction $r2, $r10;
        android.graphics.Point $r5;
        com.android.server.wm.WindowList $r6, $r8, $r13;
        java.lang.Object $r7;
        boolean $z0, $z2;
        com.android.server.wm.SurfaceFreezer $r9;
        android.util.ArraySet $r11;
        com.android.server.wm.DisplayContent r12;

        r0 := @this: com.android.server.wm.WindowContainer;

        r12 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.DisplayContent getDisplayContent()>();

        if r12 == null goto label1;

        $r9 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.SurfaceFreezer mSurfaceFreezer>;

        $r10 = virtualinvoke r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl$Transaction getSyncTransaction()>();

        virtualinvoke $r9.<com.android.server.wm.SurfaceFreezer: void unfreeze(android.view.SurfaceControl$Transaction)>($r10);

        $r11 = r12.<com.android.server.wm.DisplayContent: android.util.ArraySet mChangingContainers>;

        virtualinvoke $r11.<android.util.ArraySet: boolean remove(java.lang.Object)>(r0);

     label1:
        $r13 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $z2 = virtualinvoke $r13.<com.android.server.wm.WindowList: boolean isEmpty()>();

        if $z2 != 0 goto label3;

        $r6 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r7 = virtualinvoke $r6.<com.android.server.wm.WindowList: java.lang.Object peekLast()>();

        r14 = (com.android.server.wm.WindowContainer) $r7;

        virtualinvoke r14.<com.android.server.wm.WindowContainer: void removeImmediately()>();

        $r8 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $z0 = virtualinvoke $r8.<com.android.server.wm.WindowList: boolean remove(java.lang.Object)>(r14);

        if $z0 == 0 goto label2;

        specialinvoke r0.<com.android.server.wm.WindowContainer: void onChildRemoved(com.android.server.wm.WindowContainer)>(r14);

     label2:
        goto label1;

     label3:
        $r1 = r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl mSurfaceControl>;

        if $r1 == null goto label4;

        $r2 = virtualinvoke r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl$Transaction getSyncTransaction()>();

        $r3 = r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r2.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction remove(android.view.SurfaceControl)>($r3);

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void setSurfaceControl(android.view.SurfaceControl)>(null);

        $r5 = r0.<com.android.server.wm.WindowContainer: android.graphics.Point mLastSurfacePosition>;

        virtualinvoke $r5.<android.graphics.Point: void set(int,int)>(0, 0);

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void scheduleAnimation()>();

     label4:
        r15 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer mParent>;

        if r15 == null goto label5;

        virtualinvoke r15.<com.android.server.wm.WindowContainer: void removeChild(com.android.server.wm.WindowContainer)>(r0);

     label5:
        return;
    }

    void reparent(com.android.server.wm.WindowContainer, int)
    {
        com.android.server.wm.WindowContainer r0, r1, $r9, $r14, r19;
        int i0;
        com.android.server.wm.DisplayContent r2, r3, $r18;
        java.lang.StringBuilder $r4, $r10;
        java.lang.IllegalArgumentException $r7, $r16;
        java.lang.String $r8, $r17;

        r0 := @this: com.android.server.wm.WindowContainer;

        r19 := @parameter0: com.android.server.wm.WindowContainer;

        i0 := @parameter1: int;

        if r19 == null goto label3;

        r1 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer mParent>;

        $r9 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer mParent>;

        if $r9 == r19 goto label2;

        r2 = virtualinvoke r1.<com.android.server.wm.WindowContainer: com.android.server.wm.DisplayContent getDisplayContent()>();

        r3 = virtualinvoke r19.<com.android.server.wm.WindowContainer: com.android.server.wm.DisplayContent getDisplayContent()>();

        r0.<com.android.server.wm.WindowContainer: boolean mReparenting> = 1;

        virtualinvoke r1.<com.android.server.wm.WindowContainer: void removeChild(com.android.server.wm.WindowContainer)>(r0);

        virtualinvoke r19.<com.android.server.wm.WindowContainer: void addChild(com.android.server.wm.WindowContainer,int)>(r0, i0);

        r0.<com.android.server.wm.WindowContainer: boolean mReparenting> = 0;

        virtualinvoke r3.<com.android.server.wm.DisplayContent: void setLayoutNeeded()>();

        if r2 == r3 goto label1;

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void onDisplayChanged(com.android.server.wm.DisplayContent)>(r3);

        virtualinvoke r2.<com.android.server.wm.DisplayContent: void setLayoutNeeded()>();

     label1:
        $r18 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.DisplayContent getDisplayContent()>();

        virtualinvoke $r18.<com.android.server.wm.DisplayContent: void layoutAndAssignWindowLayersIfNeeded()>();

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void onParentChanged(com.android.server.wm.ConfigurationContainer,com.android.server.wm.ConfigurationContainer)>(r19, r1);

        return;

     label2:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WC=");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already child of ");

        $r14 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer mParent>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = new java.lang.IllegalArgumentException;

        $r17 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r16;

     label3:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("reparent: can\'t reparent to null ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }

    protected void reparentSurfaceControl(android.view.SurfaceControl$Transaction, android.view.SurfaceControl)
    {
        com.android.server.wm.WindowContainer r0;
        android.view.SurfaceControl$Transaction r1;
        android.view.SurfaceControl r2;
        com.android.server.wm.SurfaceAnimator $r3;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        r2 := @parameter1: android.view.SurfaceControl;

        $r3 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.SurfaceAnimator mSurfaceAnimator>;

        virtualinvoke $r3.<com.android.server.wm.SurfaceAnimator: void reparent(android.view.SurfaceControl$Transaction,android.view.SurfaceControl)>(r1, r2);

        return;
    }

    void resetDragResizingChangeReported()
    {
        com.android.server.wm.WindowContainer r0, $r4;
        com.android.server.wm.WindowList $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i0 = virtualinvoke $r1.<com.android.server.wm.WindowList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r3 = virtualinvoke $r2.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i1);

        $r4 = (com.android.server.wm.WindowContainer) $r3;

        virtualinvoke $r4.<com.android.server.wm.WindowContainer: void resetDragResizingChangeReported()>();

        i1 = i1 + -1;

        goto label1;

     label2:
        return;
    }

    void resetSurfacePositionForAnimationLeash(android.view.SurfaceControl$Transaction)
    {
        com.android.server.wm.WindowContainer r0;
        android.view.SurfaceControl$Transaction r1;
        android.view.SurfaceControl $r2;
        android.graphics.Point $r4;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        $r2 = r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setPosition(android.view.SurfaceControl,float,float)>($r2, 0.0F, 0.0F);

        $r4 = r0.<com.android.server.wm.WindowContainer: android.graphics.Point mLastSurfacePosition>;

        virtualinvoke $r4.<android.graphics.Point: void set(int,int)>(0, 0);

        return;
    }

    void scheduleAnimation()
    {
        com.android.server.wm.WindowContainer r0, r1;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer mParent>;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.server.wm.WindowContainer: void scheduleAnimation()>();

     label1:
        return;
    }

    void sendAppVisibilityToClients()
    {
        com.android.server.wm.WindowContainer r0, $r4;
        com.android.server.wm.WindowList $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i0 = virtualinvoke $r1.<com.android.server.wm.WindowList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r3 = virtualinvoke $r2.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i1);

        $r4 = (com.android.server.wm.WindowContainer) $r3;

        virtualinvoke $r4.<com.android.server.wm.WindowContainer: void sendAppVisibilityToClients()>();

        i1 = i1 + -1;

        goto label1;

     label2:
        return;
    }

    boolean setFocusable(boolean)
    {
        com.android.server.wm.WindowContainer r0;
        boolean z0, $z1;

        r0 := @this: com.android.server.wm.WindowContainer;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.wm.WindowContainer: boolean mIsFocusable>;

        if $z1 != z0 goto label1;

        return 0;

     label1:
        r0.<com.android.server.wm.WindowContainer: boolean mIsFocusable> = z0;

        return 1;
    }

    void setInitialSurfaceControlProperties(android.view.SurfaceControl$Builder)
    {
        com.android.server.wm.WindowContainer r0;
        android.view.SurfaceControl$Builder r1, $r2;
        android.view.SurfaceControl $r3, $r5;
        android.view.SurfaceControl$Transaction $r4, $r7;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: android.view.SurfaceControl$Builder;

        $r2 = virtualinvoke r1.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setCallsite(java.lang.String)>("WindowContainer.setInitialSurfaceControlProperties");

        $r3 = virtualinvoke $r2.<android.view.SurfaceControl$Builder: android.view.SurfaceControl build()>();

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void setSurfaceControl(android.view.SurfaceControl)>($r3);

        $r4 = virtualinvoke r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl$Transaction getSyncTransaction()>();

        $r5 = r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r4.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction show(android.view.SurfaceControl)>($r5);

        $r7 = virtualinvoke r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl$Transaction getSyncTransaction()>();

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void onSurfaceShown(android.view.SurfaceControl$Transaction)>($r7);

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void updateSurfacePosition()>();

        return;
    }

    protected void setLayer(android.view.SurfaceControl$Transaction, int)
    {
        com.android.server.wm.WindowContainer r0;
        android.view.SurfaceControl$Transaction r1;
        int i0;
        com.android.server.wm.SurfaceAnimator $r2;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.SurfaceAnimator mSurfaceAnimator>;

        virtualinvoke $r2.<com.android.server.wm.SurfaceAnimator: void setLayer(android.view.SurfaceControl$Transaction,int)>(r1, i0);

        return;
    }

    void setOrientation(int)
    {
        com.android.server.wm.WindowContainer r0;
        int i0;

        r0 := @this: com.android.server.wm.WindowContainer;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void setOrientation(int,android.os.IBinder,com.android.server.wm.ConfigurationContainer)>(i0, null, null);

        return;
    }

    void setOrientation(int, android.os.IBinder, com.android.server.wm.ConfigurationContainer)
    {
        com.android.server.wm.WindowContainer r0, r3;
        int i0, $i1, $i2, $i3;
        android.os.IBinder r1;
        com.android.server.wm.ConfigurationContainer r2;
        android.content.res.Configuration $r4, $r5;

        r0 := @this: com.android.server.wm.WindowContainer;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.IBinder;

        r2 := @parameter2: com.android.server.wm.ConfigurationContainer;

        $i1 = r0.<com.android.server.wm.WindowContainer: int mOrientation>;

        if $i1 != i0 goto label1;

        return;

     label1:
        r0.<com.android.server.wm.WindowContainer: int mOrientation> = i0;

        r3 = virtualinvoke r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getParent()>();

        if r3 == null goto label3;

        $r4 = virtualinvoke r0.<com.android.server.wm.WindowContainer: android.content.res.Configuration getConfiguration()>();

        $i2 = $r4.<android.content.res.Configuration: int orientation>;

        $i3 = virtualinvoke r0.<com.android.server.wm.WindowContainer: int getRequestedConfigurationOrientation()>();

        if $i2 == $i3 goto label2;

        $r5 = virtualinvoke r3.<com.android.server.wm.WindowContainer: android.content.res.Configuration getConfiguration()>();

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void onConfigurationChanged(android.content.res.Configuration)>($r5);

     label2:
        virtualinvoke r0.<com.android.server.wm.WindowContainer: boolean onDescendantOrientationChanged(android.os.IBinder,com.android.server.wm.ConfigurationContainer)>(r1, r2);

     label3:
        return;
    }

    protected final void setParent(com.android.server.wm.WindowContainer)
    {
        com.android.server.wm.WindowContainer r0, r1, r3, r4, $r6;
        boolean $z0;
        com.android.server.wm.DisplayContent $r2, r5;

        r0 := @this: com.android.server.wm.WindowContainer;

        r3 := @parameter0: com.android.server.wm.WindowContainer;

        r1 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer mParent>;

        r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer mParent> = r3;

        if r3 == null goto label1;

        specialinvoke r3.<com.android.server.wm.WindowContainer: void onChildAdded(com.android.server.wm.WindowContainer)>(r0);

     label1:
        $z0 = r0.<com.android.server.wm.WindowContainer: boolean mReparenting>;

        if $z0 != 0 goto label3;

        r4 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer mParent>;

        if r4 == null goto label2;

        r5 = r4.<com.android.server.wm.WindowContainer: com.android.server.wm.DisplayContent mDisplayContent>;

        if r5 == null goto label2;

        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.DisplayContent mDisplayContent>;

        if $r2 == r5 goto label2;

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void onDisplayChanged(com.android.server.wm.DisplayContent)>(r5);

     label2:
        $r6 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer mParent>;

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void onParentChanged(com.android.server.wm.ConfigurationContainer,com.android.server.wm.ConfigurationContainer)>($r6, r1);

     label3:
        return;
    }

    boolean setPendingListener(com.android.server.wm.BLASTSyncEngine$TransactionReadyListener, int)
    {
        com.android.server.wm.WindowContainer r0;
        com.android.server.wm.BLASTSyncEngine$TransactionReadyListener r1, $r2;
        int i0;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: com.android.server.wm.BLASTSyncEngine$TransactionReadyListener;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<com.android.server.wm.WindowContainer: boolean isVisible()>();

        if $z0 == 0 goto label2;

        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.BLASTSyncEngine$TransactionReadyListener mWaitingListener>;

        if $r2 == null goto label1;

        goto label2;

     label1:
        r0.<com.android.server.wm.WindowContainer: boolean mUsingBLASTSyncTransaction> = 1;

        r0.<com.android.server.wm.WindowContainer: int mWaitingSyncId> = i0;

        r0.<com.android.server.wm.WindowContainer: com.android.server.wm.BLASTSyncEngine$TransactionReadyListener mWaitingListener> = r1;

        return 1;

     label2:
        return 0;
    }

    protected void setRelativeLayer(android.view.SurfaceControl$Transaction, android.view.SurfaceControl, int)
    {
        com.android.server.wm.WindowContainer r0;
        android.view.SurfaceControl$Transaction r1;
        android.view.SurfaceControl r2;
        int i0;
        com.android.server.wm.SurfaceAnimator $r3;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        r2 := @parameter1: android.view.SurfaceControl;

        i0 := @parameter2: int;

        $r3 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.SurfaceAnimator mSurfaceAnimator>;

        virtualinvoke $r3.<com.android.server.wm.SurfaceAnimator: void setRelativeLayer(android.view.SurfaceControl$Transaction,android.view.SurfaceControl,int)>(r1, r2, i0);

        return;
    }

    void setSurfaceControl(android.view.SurfaceControl)
    {
        com.android.server.wm.WindowContainer r0;
        android.view.SurfaceControl r1;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: android.view.SurfaceControl;

        r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl mSurfaceControl> = r1;

        return;
    }

    void setWaitingForDrawnIfResizingChanged()
    {
        com.android.server.wm.WindowContainer r0, $r4;
        com.android.server.wm.WindowList $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i0 = virtualinvoke $r1.<com.android.server.wm.WindowList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r3 = virtualinvoke $r2.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i1);

        $r4 = (com.android.server.wm.WindowContainer) $r3;

        virtualinvoke $r4.<com.android.server.wm.WindowContainer: void setWaitingForDrawnIfResizingChanged()>();

        i1 = i1 + -1;

        goto label1;

     label2:
        return;
    }

    boolean shouldMagnify()
    {
        com.android.server.wm.WindowContainer r0, $r5;
        android.view.SurfaceControl $r1;
        com.android.server.wm.WindowList $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl mSurfaceControl>;

        if $r1 != null goto label1;

        return 0;

     label1:
        i1 = 0;

     label2:
        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i0 = virtualinvoke $r2.<com.android.server.wm.WindowList: int size()>();

        if i1 >= $i0 goto label4;

        $r3 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r4 = virtualinvoke $r3.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i1);

        $r5 = (com.android.server.wm.WindowContainer) $r4;

        $z0 = virtualinvoke $r5.<com.android.server.wm.WindowContainer: boolean shouldMagnify()>();

        if $z0 != 0 goto label3;

        return 0;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 1;
    }

    boolean showToCurrentUser()
    {
        com.android.server.wm.WindowContainer r0;

        r0 := @this: com.android.server.wm.WindowContainer;

        return 1;
    }

    void startAnimation(android.view.SurfaceControl$Transaction, com.android.server.wm.AnimationAdapter, boolean, int)
    {
        com.android.server.wm.WindowContainer r0;
        android.view.SurfaceControl$Transaction r1;
        com.android.server.wm.AnimationAdapter r2;
        boolean z0;
        int i0;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        r2 := @parameter1: com.android.server.wm.AnimationAdapter;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void startAnimation(android.view.SurfaceControl$Transaction,com.android.server.wm.AnimationAdapter,boolean,int,com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback)>(r1, r2, z0, i0, null);

        return;
    }

    void startAnimation(android.view.SurfaceControl$Transaction, com.android.server.wm.AnimationAdapter, boolean, int, com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback)
    {
        com.android.server.wm.WindowContainer r0;
        android.view.SurfaceControl$Transaction r1;
        com.android.server.wm.AnimationAdapter r2;
        boolean z0;
        int i0;
        com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback r3;
        com.android.server.wm.SurfaceFreezer $r4;
        com.android.server.wm.SurfaceAnimator $r5;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        r2 := @parameter1: com.android.server.wm.AnimationAdapter;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        r3 := @parameter4: com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback;

        $r5 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.SurfaceAnimator mSurfaceAnimator>;

        $r4 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.SurfaceFreezer mSurfaceFreezer>;

        virtualinvoke $r5.<com.android.server.wm.SurfaceAnimator: void startAnimation(android.view.SurfaceControl$Transaction,com.android.server.wm.AnimationAdapter,boolean,int,com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback,com.android.server.wm.SurfaceFreezer)>(r1, r2, z0, i0, r3, $r4);

        return;
    }

    void startDelayingAnimationStart()
    {
        com.android.server.wm.WindowContainer r0;
        com.android.server.wm.SurfaceAnimator $r1;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.SurfaceAnimator mSurfaceAnimator>;

        virtualinvoke $r1.<com.android.server.wm.SurfaceAnimator: void startDelayingAnimationStart()>();

        return;
    }

    void switchUser(int)
    {
        com.android.server.wm.WindowContainer r0, $r4;
        int i0, $i1, i2;
        com.android.server.wm.WindowList $r1, $r2;
        java.lang.Object $r3;

        r0 := @this: com.android.server.wm.WindowContainer;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $i1 = virtualinvoke $r1.<com.android.server.wm.WindowList: int size()>();

        i2 = $i1 - 1;

     label1:
        if i2 < 0 goto label2;

        $r2 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowList mChildren>;

        $r3 = virtualinvoke $r2.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i2);

        $r4 = (com.android.server.wm.WindowContainer) $r3;

        virtualinvoke $r4.<com.android.server.wm.WindowContainer: void switchUser(int)>(i0);

        i2 = i2 + -1;

        goto label1;

     label2:
        return;
    }

    void transferAnimation(com.android.server.wm.WindowContainer)
    {
        com.android.server.wm.WindowContainer r0, r1;
        com.android.server.wm.SurfaceAnimator $r2, $r3;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: com.android.server.wm.WindowContainer;

        $r3 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.SurfaceAnimator mSurfaceAnimator>;

        $r2 = r1.<com.android.server.wm.WindowContainer: com.android.server.wm.SurfaceAnimator mSurfaceAnimator>;

        virtualinvoke $r3.<com.android.server.wm.SurfaceAnimator: void transferAnimation(com.android.server.wm.SurfaceAnimator)>($r2);

        return;
    }

    final void updateSurfacePosition()
    {
        com.android.server.wm.WindowContainer r0;
        android.view.SurfaceControl$Transaction $r1;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = virtualinvoke r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl$Transaction getSyncTransaction()>();

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void updateSurfacePosition(android.view.SurfaceControl$Transaction)>($r1);

        return;
    }

    void updateSurfacePosition(android.view.SurfaceControl$Transaction)
    {
        com.android.server.wm.WindowContainer r0;
        android.view.SurfaceControl$Transaction r1;
        boolean $z0, $z1, $z2;
        android.view.SurfaceControl $r2, $r9;
        com.android.server.wm.SurfaceAnimator $r3;
        android.graphics.Point $r4, $r5, $r6, $r7, $r8, $r11, $r12, $r13;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        $z0 = virtualinvoke r0.<com.android.server.wm.WindowContainer: boolean isOrganized()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl mSurfaceControl>;

        if $r2 == null goto label4;

        $r3 = r0.<com.android.server.wm.WindowContainer: com.android.server.wm.SurfaceAnimator mSurfaceAnimator>;

        $z1 = virtualinvoke $r3.<com.android.server.wm.SurfaceAnimator: boolean hasLeash()>();

        if $z1 == 0 goto label2;

        goto label4;

     label2:
        $r4 = r0.<com.android.server.wm.WindowContainer: android.graphics.Point mTmpPos>;

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void getRelativePosition(android.graphics.Point)>($r4);

        $r6 = r0.<com.android.server.wm.WindowContainer: android.graphics.Point mTmpPos>;

        $r5 = r0.<com.android.server.wm.WindowContainer: android.graphics.Point mLastSurfacePosition>;

        $z2 = virtualinvoke $r6.<android.graphics.Point: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label3;

        return;

     label3:
        $r9 = r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl mSurfaceControl>;

        $r7 = r0.<com.android.server.wm.WindowContainer: android.graphics.Point mTmpPos>;

        $i0 = $r7.<android.graphics.Point: int x>;

        $f1 = (float) $i0;

        $r8 = r0.<com.android.server.wm.WindowContainer: android.graphics.Point mTmpPos>;

        $i1 = $r8.<android.graphics.Point: int y>;

        $f0 = (float) $i1;

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setPosition(android.view.SurfaceControl,float,float)>($r9, $f1, $f0);

        $r13 = r0.<com.android.server.wm.WindowContainer: android.graphics.Point mLastSurfacePosition>;

        $r11 = r0.<com.android.server.wm.WindowContainer: android.graphics.Point mTmpPos>;

        $i3 = $r11.<android.graphics.Point: int x>;

        $r12 = r0.<com.android.server.wm.WindowContainer: android.graphics.Point mTmpPos>;

        $i2 = $r12.<android.graphics.Point: int y>;

        virtualinvoke $r13.<android.graphics.Point: void set(int,int)>($i3, $i2);

        return;

     label4:
        return;
    }

    boolean useBLASTSync()
    {
        com.android.server.wm.WindowContainer r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowContainer;

        $z0 = r0.<com.android.server.wm.WindowContainer: boolean mUsingBLASTSyncTransaction>;

        return $z0;
    }

    void waitForAllWindowsDrawn()
    {
        com.android.server.wm.WindowContainer r0;
        com.android.server.wm._$$Lambda$WindowContainer$Nezf9LuhT9GSLKWzqEWp7WKs5W8 $r1;

        r0 := @this: com.android.server.wm.WindowContainer;

        $r1 = new com.android.server.wm._$$Lambda$WindowContainer$Nezf9LuhT9GSLKWzqEWp7WKs5W8;

        specialinvoke $r1.<com.android.server.wm._$$Lambda$WindowContainer$Nezf9LuhT9GSLKWzqEWp7WKs5W8: void <init>(com.android.server.wm.WindowContainer)>(r0);

        virtualinvoke r0.<com.android.server.wm.WindowContainer: void forAllWindows(java.util.function.Consumer,boolean)>($r1, 1);

        return;
    }

    void writeIdentifierToProto(android.util.proto.ProtoOutputStream, long)
    {
        com.android.server.wm.WindowContainer r0;
        android.util.proto.ProtoOutputStream r1;
        int $i0;
        long l1, l2;

        r0 := @this: com.android.server.wm.WindowContainer;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        l1 := @parameter1: long;

        l2 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(l1);

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464257L, $i0);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464258L, -10000);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333443L, "WindowContainer");

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l2);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.wm.WindowContainer: java.lang.String TAG> = "WindowManager";

        <com.android.server.wm.WindowContainer: int POSITION_TOP> = 2147483647;

        <com.android.server.wm.WindowContainer: int POSITION_BOTTOM> = -2147483648;

        <com.android.server.wm.WindowContainer: int ANIMATION_LAYER_STANDARD> = 0;

        <com.android.server.wm.WindowContainer: int ANIMATION_LAYER_HOME> = 2;

        <com.android.server.wm.WindowContainer: int ANIMATION_LAYER_BOOSTED> = 1;

        return;
    }
}
