class com.android.server.wm.WindowContainerThumbnail extends java.lang.Object implements com.android.server.wm.SurfaceAnimator$Animatable
{
    private static final java.lang.String TAG;
    private final int mHeight;
    private final boolean mRelative;
    private final com.android.server.wm.SurfaceAnimator mSurfaceAnimator;
    private android.view.SurfaceControl mSurfaceControl;
    private final int mWidth;
    private final com.android.server.wm.WindowContainer mWindowContainer;

    void <init>(android.view.SurfaceControl$Transaction, com.android.server.wm.WindowContainer, android.graphics.GraphicBuffer, boolean, android.view.Surface, com.android.server.wm.SurfaceAnimator)
    {
        com.android.server.wm.WindowContainerThumbnail r0;
        android.view.SurfaceControl$Transaction r1;
        android.graphics.GraphicBuffer r2;
        boolean z0, $z1;
        android.view.Surface r3;
        com.android.server.wm.SurfaceAnimator $r4, r35;
        com.android.server.wm._$$Lambda$WindowContainerThumbnail$TAAowaUKTiUY1j0FFlQQfUHXn0U $r5;
        com.android.server.wm.WindowManagerService $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        com.android.server.wm.WindowContainer $r7, $r10, $r17, $r27, r34, r36;
        java.lang.StringBuilder $r8;
        java.lang.String $r11, $r13, r39;
        android.view.SurfaceControl$Builder $r14, $r15, $r16, $r18, $r19, $r20, r37;
        android.view.SurfaceControl $r21, $r22, $r23, $r25, $r28, $r29, $r31;
        java.lang.Object[] $r32;
        com.android.server.wm.ProtoLogGroup $r33;

        r0 := @this: com.android.server.wm.WindowContainerThumbnail;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        r34 := @parameter1: com.android.server.wm.WindowContainer;

        r2 := @parameter2: android.graphics.GraphicBuffer;

        z0 := @parameter3: boolean;

        r3 := @parameter4: android.view.Surface;

        r35 := @parameter5: com.android.server.wm.SurfaceAnimator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.wm.WindowContainerThumbnail: com.android.server.wm.WindowContainer mWindowContainer> = r34;

        r0.<com.android.server.wm.WindowContainerThumbnail: boolean mRelative> = z0;

        if r35 == null goto label1;

        r0.<com.android.server.wm.WindowContainerThumbnail: com.android.server.wm.SurfaceAnimator mSurfaceAnimator> = r35;

        goto label2;

     label1:
        $r4 = new com.android.server.wm.SurfaceAnimator;

        $r5 = new com.android.server.wm._$$Lambda$WindowContainerThumbnail$TAAowaUKTiUY1j0FFlQQfUHXn0U;

        specialinvoke $r5.<com.android.server.wm._$$Lambda$WindowContainerThumbnail$TAAowaUKTiUY1j0FFlQQfUHXn0U: void <init>(com.android.server.wm.WindowContainerThumbnail)>(r0);

        $r6 = r34.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowManagerService mWmService>;

        specialinvoke $r4.<com.android.server.wm.SurfaceAnimator: void <init>(com.android.server.wm.SurfaceAnimator$Animatable,com.android.server.wm.SurfaceAnimator$OnAnimationFinishedCallback,com.android.server.wm.WindowManagerService)>(r0, $r5, $r6);

        r0.<com.android.server.wm.WindowContainerThumbnail: com.android.server.wm.SurfaceAnimator mSurfaceAnimator> = $r4;

     label2:
        $i0 = virtualinvoke r2.<android.graphics.GraphicBuffer: int getWidth()>();

        r0.<com.android.server.wm.WindowContainerThumbnail: int mWidth> = $i0;

        $i1 = virtualinvoke r2.<android.graphics.GraphicBuffer: int getHeight()>();

        r0.<com.android.server.wm.WindowContainerThumbnail: int mHeight> = $i1;

        r36 = r0.<com.android.server.wm.WindowContainerThumbnail: com.android.server.wm.WindowContainer mWindowContainer>;

        $r7 = virtualinvoke r36.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getTopChild()>();

        r37 = virtualinvoke r36.<com.android.server.wm.WindowContainer: android.view.SurfaceControl$Builder makeChildSurface(com.android.server.wm.WindowContainer)>($r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("thumbnail anim: ");

        $r10 = r0.<com.android.server.wm.WindowContainerThumbnail: com.android.server.wm.WindowContainer mWindowContainer>;

        $r11 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = virtualinvoke r37.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setName(java.lang.String)>($r13);

        $i3 = r0.<com.android.server.wm.WindowContainerThumbnail: int mWidth>;

        $i2 = r0.<com.android.server.wm.WindowContainerThumbnail: int mHeight>;

        $r15 = virtualinvoke $r14.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setBufferSize(int,int)>($i3, $i2);

        $r16 = virtualinvoke $r15.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setFormat(int)>(-3);

        $r17 = r0.<com.android.server.wm.WindowContainerThumbnail: com.android.server.wm.WindowContainer mWindowContainer>;

        $i4 = virtualinvoke $r17.<com.android.server.wm.WindowContainer: int getWindowingMode()>();

        $r18 = virtualinvoke $r16.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setMetadata(int,int)>(2, $i4);

        $i5 = staticinvoke <android.os.Process: int myUid()>();

        $r19 = virtualinvoke $r18.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setMetadata(int,int)>(1, $i5);

        $r20 = virtualinvoke $r19.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setCallsite(java.lang.String)>("WindowContainerThumbnail");

        $r21 = virtualinvoke $r20.<android.view.SurfaceControl$Builder: android.view.SurfaceControl build()>();

        r0.<com.android.server.wm.WindowContainerThumbnail: android.view.SurfaceControl mSurfaceControl> = $r21;

        $z1 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_SHOW_TRANSACTIONS_enabled>;

        if $z1 == 0 goto label3;

        $r31 = r0.<com.android.server.wm.WindowContainerThumbnail: android.view.SurfaceControl mSurfaceControl>;

        r39 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r31);

        $r33 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_SHOW_TRANSACTIONS>;

        $r32 = newarray (java.lang.Object)[1];

        $r32[0] = r39;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void i(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r33, 531242746, 0, null, $r32);

     label3:
        $r22 = r0.<com.android.server.wm.WindowContainerThumbnail: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke r3.<android.view.Surface: void copyFrom(android.view.SurfaceControl)>($r22);

        virtualinvoke r3.<android.view.Surface: void attachAndQueueBuffer(android.graphics.GraphicBuffer)>(r2);

        virtualinvoke r3.<android.view.Surface: void release()>();

        $r23 = r0.<com.android.server.wm.WindowContainerThumbnail: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction show(android.view.SurfaceControl)>($r23);

        $r25 = r0.<com.android.server.wm.WindowContainerThumbnail: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setLayer(android.view.SurfaceControl,int)>($r25, 2147483647);

        if z0 == 0 goto label4;

        $r28 = r0.<com.android.server.wm.WindowContainerThumbnail: android.view.SurfaceControl mSurfaceControl>;

        $r27 = r0.<com.android.server.wm.WindowContainerThumbnail: com.android.server.wm.WindowContainer mWindowContainer>;

        $r29 = virtualinvoke $r27.<com.android.server.wm.WindowContainer: android.view.SurfaceControl getSurfaceControl()>();

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction reparent(android.view.SurfaceControl,android.view.SurfaceControl)>($r28, $r29);

     label4:
        return;
    }

    void <init>(java.util.function.Supplier, android.view.SurfaceControl$Transaction, com.android.server.wm.WindowContainer, android.graphics.GraphicBuffer)
    {
        com.android.server.wm.WindowContainerThumbnail r0;
        java.util.function.Supplier r1;
        android.view.SurfaceControl$Transaction r2;
        com.android.server.wm.WindowContainer r3;
        android.graphics.GraphicBuffer r4;

        r0 := @this: com.android.server.wm.WindowContainerThumbnail;

        r1 := @parameter0: java.util.function.Supplier;

        r2 := @parameter1: android.view.SurfaceControl$Transaction;

        r3 := @parameter2: com.android.server.wm.WindowContainer;

        r4 := @parameter3: android.graphics.GraphicBuffer;

        specialinvoke r0.<com.android.server.wm.WindowContainerThumbnail: void <init>(java.util.function.Supplier,android.view.SurfaceControl$Transaction,com.android.server.wm.WindowContainer,android.graphics.GraphicBuffer,boolean)>(r1, r2, r3, r4, 0);

        return;
    }

    void <init>(java.util.function.Supplier, android.view.SurfaceControl$Transaction, com.android.server.wm.WindowContainer, android.graphics.GraphicBuffer, boolean)
    {
        com.android.server.wm.WindowContainerThumbnail r0;
        java.util.function.Supplier r1;
        android.view.SurfaceControl$Transaction r2;
        com.android.server.wm.WindowContainer r3;
        android.graphics.GraphicBuffer r4;
        boolean z0;
        java.lang.Object $r5;
        android.view.Surface $r6;

        r0 := @this: com.android.server.wm.WindowContainerThumbnail;

        r1 := @parameter0: java.util.function.Supplier;

        r2 := @parameter1: android.view.SurfaceControl$Transaction;

        r3 := @parameter2: com.android.server.wm.WindowContainer;

        r4 := @parameter3: android.graphics.GraphicBuffer;

        z0 := @parameter4: boolean;

        $r5 = interfaceinvoke r1.<java.util.function.Supplier: java.lang.Object get()>();

        $r6 = (android.view.Surface) $r5;

        specialinvoke r0.<com.android.server.wm.WindowContainerThumbnail: void <init>(android.view.SurfaceControl$Transaction,com.android.server.wm.WindowContainer,android.graphics.GraphicBuffer,boolean,android.view.Surface,com.android.server.wm.SurfaceAnimator)>(r2, r3, r4, z0, $r6, null);

        return;
    }

    public static void lambda$TAAowaUKTiUY1j0FFlQQfUHXn0U(com.android.server.wm.WindowContainerThumbnail, int, com.android.server.wm.AnimationAdapter)
    {
        com.android.server.wm.WindowContainerThumbnail r0;
        int i0;
        com.android.server.wm.AnimationAdapter r1;

        r0 := @parameter0: com.android.server.wm.WindowContainerThumbnail;

        i0 := @parameter1: int;

        r1 := @parameter2: com.android.server.wm.AnimationAdapter;

        specialinvoke r0.<com.android.server.wm.WindowContainerThumbnail: void onAnimationFinished(int,com.android.server.wm.AnimationAdapter)>(i0, r1);

        return;
    }

    private void onAnimationFinished(int, com.android.server.wm.AnimationAdapter)
    {
        com.android.server.wm.WindowContainerThumbnail r0;
        int i0;
        com.android.server.wm.AnimationAdapter r1;

        r0 := @this: com.android.server.wm.WindowContainerThumbnail;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.wm.AnimationAdapter;

        return;
    }

    public void commitPendingTransaction()
    {
        com.android.server.wm.WindowContainerThumbnail r0;
        com.android.server.wm.WindowContainer $r1;

        r0 := @this: com.android.server.wm.WindowContainerThumbnail;

        $r1 = r0.<com.android.server.wm.WindowContainerThumbnail: com.android.server.wm.WindowContainer mWindowContainer>;

        virtualinvoke $r1.<com.android.server.wm.WindowContainer: void commitPendingTransaction()>();

        return;
    }

    void destroy()
    {
        com.android.server.wm.WindowContainerThumbnail r0;
        com.android.server.wm.SurfaceAnimator $r1;
        android.view.SurfaceControl$Transaction $r2;
        android.view.SurfaceControl $r3;

        r0 := @this: com.android.server.wm.WindowContainerThumbnail;

        $r1 = r0.<com.android.server.wm.WindowContainerThumbnail: com.android.server.wm.SurfaceAnimator mSurfaceAnimator>;

        virtualinvoke $r1.<com.android.server.wm.SurfaceAnimator: void cancelAnimation()>();

        $r2 = virtualinvoke r0.<com.android.server.wm.WindowContainerThumbnail: android.view.SurfaceControl$Transaction getPendingTransaction()>();

        $r3 = r0.<com.android.server.wm.WindowContainerThumbnail: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r2.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction remove(android.view.SurfaceControl)>($r3);

        r0.<com.android.server.wm.WindowContainerThumbnail: android.view.SurfaceControl mSurfaceControl> = null;

        return;
    }

    void dumpDebug(android.util.proto.ProtoOutputStream, long)
    {
        com.android.server.wm.WindowContainerThumbnail r0;
        android.util.proto.ProtoOutputStream r1;
        int $i0, $i1;
        com.android.server.wm.SurfaceAnimator $r2, $r3;
        boolean $z0;
        long l2, l3;

        r0 := @this: com.android.server.wm.WindowContainerThumbnail;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        l2 := @parameter1: long;

        l3 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(l2);

        $i0 = r0.<com.android.server.wm.WindowContainerThumbnail: int mWidth>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464257L, $i0);

        $i1 = r0.<com.android.server.wm.WindowContainerThumbnail: int mHeight>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464258L, $i1);

        $r2 = r0.<com.android.server.wm.WindowContainerThumbnail: com.android.server.wm.SurfaceAnimator mSurfaceAnimator>;

        $z0 = virtualinvoke $r2.<com.android.server.wm.SurfaceAnimator: boolean isAnimating()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.server.wm.WindowContainerThumbnail: com.android.server.wm.SurfaceAnimator mSurfaceAnimator>;

        virtualinvoke $r3.<com.android.server.wm.SurfaceAnimator: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r1, 1146756268035L);

     label1:
        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l3);

        return;
    }

    public android.view.SurfaceControl getAnimationLeashParent()
    {
        com.android.server.wm.WindowContainerThumbnail r0;
        com.android.server.wm.WindowContainer $r1;
        android.view.SurfaceControl $r2;

        r0 := @this: com.android.server.wm.WindowContainerThumbnail;

        $r1 = r0.<com.android.server.wm.WindowContainerThumbnail: com.android.server.wm.WindowContainer mWindowContainer>;

        $r2 = virtualinvoke $r1.<com.android.server.wm.WindowContainer: android.view.SurfaceControl getAnimationLeashParent()>();

        return $r2;
    }

    public android.view.SurfaceControl getParentSurfaceControl()
    {
        com.android.server.wm.WindowContainerThumbnail r0;
        com.android.server.wm.WindowContainer $r1;
        android.view.SurfaceControl $r2;

        r0 := @this: com.android.server.wm.WindowContainerThumbnail;

        $r1 = r0.<com.android.server.wm.WindowContainerThumbnail: com.android.server.wm.WindowContainer mWindowContainer>;

        $r2 = virtualinvoke $r1.<com.android.server.wm.WindowContainer: android.view.SurfaceControl getParentSurfaceControl()>();

        return $r2;
    }

    public android.view.SurfaceControl$Transaction getPendingTransaction()
    {
        com.android.server.wm.WindowContainerThumbnail r0;
        com.android.server.wm.WindowContainer $r1;
        android.view.SurfaceControl$Transaction $r2;

        r0 := @this: com.android.server.wm.WindowContainerThumbnail;

        $r1 = r0.<com.android.server.wm.WindowContainerThumbnail: com.android.server.wm.WindowContainer mWindowContainer>;

        $r2 = virtualinvoke $r1.<com.android.server.wm.WindowContainer: android.view.SurfaceControl$Transaction getPendingTransaction()>();

        return $r2;
    }

    public android.view.SurfaceControl getSurfaceControl()
    {
        com.android.server.wm.WindowContainerThumbnail r0;
        android.view.SurfaceControl $r1;

        r0 := @this: com.android.server.wm.WindowContainerThumbnail;

        $r1 = r0.<com.android.server.wm.WindowContainerThumbnail: android.view.SurfaceControl mSurfaceControl>;

        return $r1;
    }

    public int getSurfaceHeight()
    {
        com.android.server.wm.WindowContainerThumbnail r0;
        int $i0;

        r0 := @this: com.android.server.wm.WindowContainerThumbnail;

        $i0 = r0.<com.android.server.wm.WindowContainerThumbnail: int mHeight>;

        return $i0;
    }

    public int getSurfaceWidth()
    {
        com.android.server.wm.WindowContainerThumbnail r0;
        int $i0;

        r0 := @this: com.android.server.wm.WindowContainerThumbnail;

        $i0 = r0.<com.android.server.wm.WindowContainerThumbnail: int mWidth>;

        return $i0;
    }

    public android.view.SurfaceControl$Builder makeAnimationLeash()
    {
        com.android.server.wm.WindowContainerThumbnail r0;
        com.android.server.wm.WindowContainer r1, $r2;
        android.view.SurfaceControl$Builder $r3;

        r0 := @this: com.android.server.wm.WindowContainerThumbnail;

        r1 = r0.<com.android.server.wm.WindowContainerThumbnail: com.android.server.wm.WindowContainer mWindowContainer>;

        $r2 = virtualinvoke r1.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getTopChild()>();

        $r3 = virtualinvoke r1.<com.android.server.wm.WindowContainer: android.view.SurfaceControl$Builder makeChildSurface(com.android.server.wm.WindowContainer)>($r2);

        return $r3;
    }

    public void onAnimationLeashCreated(android.view.SurfaceControl$Transaction, android.view.SurfaceControl)
    {
        com.android.server.wm.WindowContainerThumbnail r0;
        android.view.SurfaceControl$Transaction r1;
        android.view.SurfaceControl r2, $r5;
        boolean $z0;
        com.android.server.wm.WindowContainer $r4;

        r0 := @this: com.android.server.wm.WindowContainerThumbnail;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        r2 := @parameter1: android.view.SurfaceControl;

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setLayer(android.view.SurfaceControl,int)>(r2, 2147483647);

        $z0 = r0.<com.android.server.wm.WindowContainerThumbnail: boolean mRelative>;

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.server.wm.WindowContainerThumbnail: com.android.server.wm.WindowContainer mWindowContainer>;

        $r5 = virtualinvoke $r4.<com.android.server.wm.WindowContainer: android.view.SurfaceControl getSurfaceControl()>();

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction reparent(android.view.SurfaceControl,android.view.SurfaceControl)>(r2, $r5);

     label1:
        return;
    }

    public void onAnimationLeashLost(android.view.SurfaceControl$Transaction)
    {
        com.android.server.wm.WindowContainerThumbnail r0;
        android.view.SurfaceControl$Transaction r1;
        android.view.SurfaceControl $r2;

        r0 := @this: com.android.server.wm.WindowContainerThumbnail;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        $r2 = r0.<com.android.server.wm.WindowContainerThumbnail: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction hide(android.view.SurfaceControl)>($r2);

        return;
    }

    void setShowing(android.view.SurfaceControl$Transaction, boolean)
    {
        com.android.server.wm.WindowContainerThumbnail r0;
        android.view.SurfaceControl$Transaction r1;
        boolean z0;
        android.view.SurfaceControl $r2, $r4;

        r0 := @this: com.android.server.wm.WindowContainerThumbnail;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r4 = r0.<com.android.server.wm.WindowContainerThumbnail: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction show(android.view.SurfaceControl)>($r4);

        goto label2;

     label1:
        $r2 = r0.<com.android.server.wm.WindowContainerThumbnail: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction hide(android.view.SurfaceControl)>($r2);

     label2:
        return;
    }

    void startAnimation(android.view.SurfaceControl$Transaction, android.view.animation.Animation)
    {
        com.android.server.wm.WindowContainerThumbnail r0;
        android.view.SurfaceControl$Transaction r1;
        android.view.animation.Animation r2;

        r0 := @this: com.android.server.wm.WindowContainerThumbnail;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        r2 := @parameter1: android.view.animation.Animation;

        virtualinvoke r0.<com.android.server.wm.WindowContainerThumbnail: void startAnimation(android.view.SurfaceControl$Transaction,android.view.animation.Animation,android.graphics.Point)>(r1, r2, null);

        return;
    }

    void startAnimation(android.view.SurfaceControl$Transaction, android.view.animation.Animation, android.graphics.Point)
    {
        com.android.server.wm.WindowContainerThumbnail r0;
        android.view.SurfaceControl$Transaction r1;
        android.view.animation.Animation r2;
        android.graphics.Point r3;
        com.android.server.wm.WindowContainer $r4, $r8, $r12, $r14;
        com.android.server.wm.WindowManagerService $r5, $r15;
        float $f0, $f1;
        com.android.server.wm.LocalAnimationAdapter $r6;
        com.android.server.wm.WindowAnimationSpec $r7;
        com.android.server.wm.SurfaceAnimator $r9;
        com.android.server.wm.DisplayContent $r10, $r13;
        com.android.server.wm.AppTransition $r11;
        boolean $z0;
        com.android.server.wm.SurfaceAnimationRunner $r16;

        r0 := @this: com.android.server.wm.WindowContainerThumbnail;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        r2 := @parameter1: android.view.animation.Animation;

        r3 := @parameter2: android.graphics.Point;

        virtualinvoke r2.<android.view.animation.Animation: void restrictDuration(long)>(10000L);

        $r4 = r0.<com.android.server.wm.WindowContainerThumbnail: com.android.server.wm.WindowContainer mWindowContainer>;

        $r5 = $r4.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowManagerService mWmService>;

        $f0 = virtualinvoke $r5.<com.android.server.wm.WindowManagerService: float getTransitionAnimationScaleLocked()>();

        virtualinvoke r2.<android.view.animation.Animation: void scaleCurrentDuration(float)>($f0);

        $r9 = r0.<com.android.server.wm.WindowContainerThumbnail: com.android.server.wm.SurfaceAnimator mSurfaceAnimator>;

        $r6 = new com.android.server.wm.LocalAnimationAdapter;

        $r7 = new com.android.server.wm.WindowAnimationSpec;

        $r8 = r0.<com.android.server.wm.WindowContainerThumbnail: com.android.server.wm.WindowContainer mWindowContainer>;

        $r10 = virtualinvoke $r8.<com.android.server.wm.WindowContainer: com.android.server.wm.DisplayContent getDisplayContent()>();

        $r11 = $r10.<com.android.server.wm.DisplayContent: com.android.server.wm.AppTransition mAppTransition>;

        $z0 = virtualinvoke $r11.<com.android.server.wm.AppTransition: boolean canSkipFirstFrame()>();

        $r12 = r0.<com.android.server.wm.WindowContainerThumbnail: com.android.server.wm.WindowContainer mWindowContainer>;

        $r13 = virtualinvoke $r12.<com.android.server.wm.WindowContainer: com.android.server.wm.DisplayContent getDisplayContent()>();

        $f1 = virtualinvoke $r13.<com.android.server.wm.DisplayContent: float getWindowCornerRadius()>();

        specialinvoke $r7.<com.android.server.wm.WindowAnimationSpec: void <init>(android.view.animation.Animation,android.graphics.Point,boolean,float)>(r2, r3, $z0, $f1);

        $r14 = r0.<com.android.server.wm.WindowContainerThumbnail: com.android.server.wm.WindowContainer mWindowContainer>;

        $r15 = $r14.<com.android.server.wm.WindowContainer: com.android.server.wm.WindowManagerService mWmService>;

        $r16 = $r15.<com.android.server.wm.WindowManagerService: com.android.server.wm.SurfaceAnimationRunner mSurfaceAnimationRunner>;

        specialinvoke $r6.<com.android.server.wm.LocalAnimationAdapter: void <init>(com.android.server.wm.LocalAnimationAdapter$AnimationSpec,com.android.server.wm.SurfaceAnimationRunner)>($r7, $r16);

        virtualinvoke $r9.<com.android.server.wm.SurfaceAnimator: void startAnimation(android.view.SurfaceControl$Transaction,com.android.server.wm.AnimationAdapter,boolean,int)>(r1, $r6, 0, 8);

        return;
    }

    void startAnimation(android.view.SurfaceControl$Transaction, com.android.server.wm.AnimationAdapter, boolean)
    {
        com.android.server.wm.WindowContainerThumbnail r0;
        android.view.SurfaceControl$Transaction r1;
        com.android.server.wm.AnimationAdapter r2;
        boolean z0;
        com.android.server.wm.SurfaceAnimator $r3;

        r0 := @this: com.android.server.wm.WindowContainerThumbnail;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        r2 := @parameter1: com.android.server.wm.AnimationAdapter;

        z0 := @parameter2: boolean;

        $r3 = r0.<com.android.server.wm.WindowContainerThumbnail: com.android.server.wm.SurfaceAnimator mSurfaceAnimator>;

        virtualinvoke $r3.<com.android.server.wm.SurfaceAnimator: void startAnimation(android.view.SurfaceControl$Transaction,com.android.server.wm.AnimationAdapter,boolean,int)>(r1, r2, z0, 8);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.wm.WindowContainerThumbnail: java.lang.String TAG> = "WindowManager";

        return;
    }
}
