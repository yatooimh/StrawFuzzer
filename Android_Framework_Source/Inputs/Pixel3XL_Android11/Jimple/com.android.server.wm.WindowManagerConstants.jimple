final class com.android.server.wm.WindowManagerConstants extends java.lang.Object
{
    static final java.lang.String KEY_SYSTEM_GESTURE_EXCLUSION_LOG_DEBOUNCE_MILLIS;
    private static final int MIN_GESTURE_EXCLUSION_LIMIT_DP;
    private final com.android.server.wm.utils.DeviceConfigInterface mDeviceConfig;
    private final com.android.server.wm.WindowManagerGlobalLock mGlobalLock;
    private final android.provider.DeviceConfig$OnPropertiesChangedListener mListenerAndroid;
    private final android.provider.DeviceConfig$OnPropertiesChangedListener mListenerWindowManager;
    boolean mSystemGestureExcludedByPreQStickyImmersive;
    int mSystemGestureExclusionLimitDp;
    long mSystemGestureExclusionLogDebounceTimeoutMillis;
    private final java.lang.Runnable mUpdateSystemGestureExclusionCallback;

    void <init>(com.android.server.wm.WindowManagerGlobalLock, java.lang.Runnable, com.android.server.wm.utils.DeviceConfigInterface)
    {
        com.android.server.wm.WindowManagerConstants r0;
        com.android.server.wm.WindowManagerGlobalLock r1, $r5;
        java.lang.Runnable r2, $r7;
        com.android.server.wm.utils.DeviceConfigInterface r3;
        com.android.server.wm._$$Lambda$WindowManagerConstants$vqhvZbTPHnj84vQKH9wjAhgVP44 $r8;
        com.android.server.wm._$$Lambda$WindowManagerConstants$H0Vnr9H2xLD72_22unzb68d1fSM $r9;

        r0 := @this: com.android.server.wm.WindowManagerConstants;

        r1 := @parameter0: com.android.server.wm.WindowManagerGlobalLock;

        r2 := @parameter1: java.lang.Runnable;

        r3 := @parameter2: com.android.server.wm.utils.DeviceConfigInterface;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r5 = (com.android.server.wm.WindowManagerGlobalLock) r1;

        r0.<com.android.server.wm.WindowManagerConstants: com.android.server.wm.WindowManagerGlobalLock mGlobalLock> = $r5;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r7 = (java.lang.Runnable) r2;

        r0.<com.android.server.wm.WindowManagerConstants: java.lang.Runnable mUpdateSystemGestureExclusionCallback> = $r7;

        r0.<com.android.server.wm.WindowManagerConstants: com.android.server.wm.utils.DeviceConfigInterface mDeviceConfig> = r3;

        $r8 = new com.android.server.wm._$$Lambda$WindowManagerConstants$vqhvZbTPHnj84vQKH9wjAhgVP44;

        specialinvoke $r8.<com.android.server.wm._$$Lambda$WindowManagerConstants$vqhvZbTPHnj84vQKH9wjAhgVP44: void <init>(com.android.server.wm.WindowManagerConstants)>(r0);

        r0.<com.android.server.wm.WindowManagerConstants: android.provider.DeviceConfig$OnPropertiesChangedListener mListenerAndroid> = $r8;

        $r9 = new com.android.server.wm._$$Lambda$WindowManagerConstants$H0Vnr9H2xLD72_22unzb68d1fSM;

        specialinvoke $r9.<com.android.server.wm._$$Lambda$WindowManagerConstants$H0Vnr9H2xLD72_22unzb68d1fSM: void <init>(com.android.server.wm.WindowManagerConstants)>(r0);

        r0.<com.android.server.wm.WindowManagerConstants: android.provider.DeviceConfig$OnPropertiesChangedListener mListenerWindowManager> = $r9;

        return;
    }

    void <init>(com.android.server.wm.WindowManagerService, com.android.server.wm.utils.DeviceConfigInterface)
    {
        com.android.server.wm.WindowManagerConstants r0;
        com.android.server.wm.WindowManagerService r1;
        com.android.server.wm.utils.DeviceConfigInterface r2;
        com.android.server.wm._$$Lambda$WindowManagerConstants$YOsWod8qOtbBnduZqPrYHSwyJ5E $r3;
        com.android.server.wm.WindowManagerGlobalLock $r4;

        r0 := @this: com.android.server.wm.WindowManagerConstants;

        r1 := @parameter0: com.android.server.wm.WindowManagerService;

        r2 := @parameter1: com.android.server.wm.utils.DeviceConfigInterface;

        $r4 = r1.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        $r3 = new com.android.server.wm._$$Lambda$WindowManagerConstants$YOsWod8qOtbBnduZqPrYHSwyJ5E;

        specialinvoke $r3.<com.android.server.wm._$$Lambda$WindowManagerConstants$YOsWod8qOtbBnduZqPrYHSwyJ5E: void <init>(com.android.server.wm.WindowManagerService)>(r1);

        specialinvoke r0.<com.android.server.wm.WindowManagerConstants: void <init>(com.android.server.wm.WindowManagerGlobalLock,java.lang.Runnable,com.android.server.wm.utils.DeviceConfigInterface)>($r4, $r3, r2);

        return;
    }

    public static void lambda$H0Vnr9H2xLD72_22unzb68d1fSM(com.android.server.wm.WindowManagerConstants, android.provider.DeviceConfig$Properties)
    {
        com.android.server.wm.WindowManagerConstants r0;
        android.provider.DeviceConfig$Properties r1;

        r0 := @parameter0: com.android.server.wm.WindowManagerConstants;

        r1 := @parameter1: android.provider.DeviceConfig$Properties;

        specialinvoke r0.<com.android.server.wm.WindowManagerConstants: void onWindowPropertiesChanged(android.provider.DeviceConfig$Properties)>(r1);

        return;
    }

    static void lambda$new$0(com.android.server.wm.WindowManagerService)
    {
        com.android.server.wm.WindowManagerService r0;
        com.android.server.wm.'-$$Lambda$JQG7CszycLV40zONwvdlvplb1TI' $r1;
        com.android.server.wm.RootWindowContainer $r2;
        java.util.function.Consumer r3;

        r0 := @parameter0: com.android.server.wm.WindowManagerService;

        $r2 = r0.<com.android.server.wm.WindowManagerService: com.android.server.wm.RootWindowContainer mRoot>;

        $r1 = <com.android.server.wm._$$Lambda$JQG7CszycLV40zONwvdlvplb1TI: com.android.server.wm.'-$$Lambda$JQG7CszycLV40zONwvdlvplb1TI' INSTANCE>;

        r3 = (java.util.function.Consumer) $r1;

        virtualinvoke $r2.<com.android.server.wm.RootWindowContainer: void forAllDisplays(java.util.function.Consumer)>(r3);

        return;
    }

    public static void lambda$vqhvZbTPHnj84vQKH9wjAhgVP44(com.android.server.wm.WindowManagerConstants, android.provider.DeviceConfig$Properties)
    {
        com.android.server.wm.WindowManagerConstants r0;
        android.provider.DeviceConfig$Properties r1;

        r0 := @parameter0: com.android.server.wm.WindowManagerConstants;

        r1 := @parameter1: android.provider.DeviceConfig$Properties;

        specialinvoke r0.<com.android.server.wm.WindowManagerConstants: void onAndroidPropertiesChanged(android.provider.DeviceConfig$Properties)>(r1);

        return;
    }

    private void onAndroidPropertiesChanged(android.provider.DeviceConfig$Properties)
    {
        com.android.server.wm.WindowManagerConstants r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        java.lang.String r2;
        int i0;
        java.util.Set $r3;
        boolean $z0, $z1, $z2, z3, z4;
        java.lang.Runnable $r4;
        java.lang.Object $r5;
        java.lang.Throwable $r6;
        android.provider.DeviceConfig$Properties r7;
        java.util.Iterator r8;
        byte b1;

        r0 := @this: com.android.server.wm.WindowManagerConstants;

        r7 := @parameter0: android.provider.DeviceConfig$Properties;

        r1 = r0.<com.android.server.wm.WindowManagerConstants: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label01:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

     label02:
        z3 = 0;

     label03:
        $r3 = virtualinvoke r7.<android.provider.DeviceConfig$Properties: java.util.Set getKeyset()>();

        r8 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label22;

        $r5 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.lang.String) $r5;

     label05:
        if r2 != null goto label08;

     label06:
        exitmonitor r1;

     label07:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label08:
        b1 = -1;

     label09:
        i0 = virtualinvoke r2.<java.lang.String: int hashCode()>();

     label10:
        if i0 == -1271675449 goto label14;

        if i0 == 316878247 goto label12;

     label11:
        goto label16;

     label12:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("system_gesture_exclusion_limit_dp");

        if $z2 == 0 goto label11;

     label13:
        b1 = 0;

        goto label16;

     label14:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("system_gestures_excluded_by_pre_q_sticky_immersive");

        if $z1 == 0 goto label11;

     label15:
        b1 = 1;

     label16:
        if b1 == 0 goto label19;

        if b1 == 1 goto label17;

        z4 = z3;

        goto label21;

     label17:
        specialinvoke r0.<com.android.server.wm.WindowManagerConstants: void updateSystemGestureExcludedByPreQStickyImmersive()>();

     label18:
        z4 = 1;

        goto label21;

     label19:
        specialinvoke r0.<com.android.server.wm.WindowManagerConstants: void updateSystemGestureExclusionLimitDp()>();

     label20:
        z4 = 1;

     label21:
        z3 = z4;

        goto label04;

     label22:
        if z3 == 0 goto label24;

     label23:
        $r4 = r0.<com.android.server.wm.WindowManagerConstants: java.lang.Runnable mUpdateSystemGestureExclusionCallback>;

        interfaceinvoke $r4.<java.lang.Runnable: void run()>();

     label24:
        exitmonitor r1;

     label25:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label26:
        $r6 := @caughtexception;

     label27:
        exitmonitor r1;

     label28:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label26;
        catch java.lang.Throwable from label03 to label04 with label26;
        catch java.lang.Throwable from label04 to label05 with label26;
        catch java.lang.Throwable from label06 to label07 with label26;
        catch java.lang.Throwable from label09 to label10 with label26;
        catch java.lang.Throwable from label12 to label13 with label26;
        catch java.lang.Throwable from label14 to label15 with label26;
        catch java.lang.Throwable from label17 to label18 with label26;
        catch java.lang.Throwable from label19 to label20 with label26;
        catch java.lang.Throwable from label23 to label24 with label26;
        catch java.lang.Throwable from label24 to label25 with label26;
        catch java.lang.Throwable from label27 to label28 with label26;
    }

    private void onWindowPropertiesChanged(android.provider.DeviceConfig$Properties)
    {
        com.android.server.wm.WindowManagerConstants r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        java.util.Iterator r2;
        java.util.Set $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        int $i0;
        java.lang.Throwable $r5;
        android.provider.DeviceConfig$Properties r6;
        java.lang.String r7;
        byte b1;

        r0 := @this: com.android.server.wm.WindowManagerConstants;

        r6 := @parameter0: android.provider.DeviceConfig$Properties;

        r1 = r0.<com.android.server.wm.WindowManagerConstants: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label01:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = virtualinvoke r6.<android.provider.DeviceConfig$Properties: java.util.Set getKeyset()>();

        r2 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label14;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r4;

     label03:
        if r7 != null goto label06;

     label04:
        exitmonitor r1;

     label05:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label06:
        b1 = -1;

     label07:
        $i0 = virtualinvoke r7.<java.lang.String: int hashCode()>();

        if $i0 == -125834358 goto label09;

     label08:
        goto label11;

     label09:
        $z1 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("system_gesture_exclusion_log_debounce_millis");

        if $z1 == 0 goto label08;

     label10:
        b1 = 0;

     label11:
        if b1 == 0 goto label12;

        goto label13;

     label12:
        specialinvoke r0.<com.android.server.wm.WindowManagerConstants: void updateSystemGestureExclusionLogDebounceMillis()>();

     label13:
        goto label02;

     label14:
        exitmonitor r1;

     label15:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label16:
        $r5 := @caughtexception;

     label17:
        exitmonitor r1;

     label18:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label02 to label03 with label16;
        catch java.lang.Throwable from label04 to label05 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    private void updateSystemGestureExcludedByPreQStickyImmersive()
    {
        com.android.server.wm.WindowManagerConstants r0;
        com.android.server.wm.utils.DeviceConfigInterface $r1;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowManagerConstants;

        $r1 = r0.<com.android.server.wm.WindowManagerConstants: com.android.server.wm.utils.DeviceConfigInterface mDeviceConfig>;

        $z0 = interfaceinvoke $r1.<com.android.server.wm.utils.DeviceConfigInterface: boolean getBoolean(java.lang.String,java.lang.String,boolean)>("android", "system_gestures_excluded_by_pre_q_sticky_immersive", 0);

        r0.<com.android.server.wm.WindowManagerConstants: boolean mSystemGestureExcludedByPreQStickyImmersive> = $z0;

        return;
    }

    private void updateSystemGestureExclusionLimitDp()
    {
        com.android.server.wm.WindowManagerConstants r0;
        com.android.server.wm.utils.DeviceConfigInterface $r1;
        int $i0, $i1;

        r0 := @this: com.android.server.wm.WindowManagerConstants;

        $r1 = r0.<com.android.server.wm.WindowManagerConstants: com.android.server.wm.utils.DeviceConfigInterface mDeviceConfig>;

        $i0 = interfaceinvoke $r1.<com.android.server.wm.utils.DeviceConfigInterface: int getInt(java.lang.String,java.lang.String,int)>("android", "system_gesture_exclusion_limit_dp", 0);

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(200, $i0);

        r0.<com.android.server.wm.WindowManagerConstants: int mSystemGestureExclusionLimitDp> = $i1;

        return;
    }

    private void updateSystemGestureExclusionLogDebounceMillis()
    {
        com.android.server.wm.WindowManagerConstants r0;
        com.android.server.wm.utils.DeviceConfigInterface $r1;
        long $l0;

        r0 := @this: com.android.server.wm.WindowManagerConstants;

        $r1 = r0.<com.android.server.wm.WindowManagerConstants: com.android.server.wm.utils.DeviceConfigInterface mDeviceConfig>;

        $l0 = interfaceinvoke $r1.<com.android.server.wm.utils.DeviceConfigInterface: long getLong(java.lang.String,java.lang.String,long)>("window_manager", "system_gesture_exclusion_log_debounce_millis", 0L);

        r0.<com.android.server.wm.WindowManagerConstants: long mSystemGestureExclusionLogDebounceTimeoutMillis> = $l0;

        return;
    }

    void dispose()
    {
        com.android.server.wm.WindowManagerConstants r0;
        android.provider.DeviceConfig$OnPropertiesChangedListener $r1, $r3;
        com.android.server.wm.utils.DeviceConfigInterface $r2, $r4;

        r0 := @this: com.android.server.wm.WindowManagerConstants;

        $r2 = r0.<com.android.server.wm.WindowManagerConstants: com.android.server.wm.utils.DeviceConfigInterface mDeviceConfig>;

        $r1 = r0.<com.android.server.wm.WindowManagerConstants: android.provider.DeviceConfig$OnPropertiesChangedListener mListenerAndroid>;

        interfaceinvoke $r2.<com.android.server.wm.utils.DeviceConfigInterface: void removeOnPropertiesChangedListener(android.provider.DeviceConfig$OnPropertiesChangedListener)>($r1);

        $r4 = r0.<com.android.server.wm.WindowManagerConstants: com.android.server.wm.utils.DeviceConfigInterface mDeviceConfig>;

        $r3 = r0.<com.android.server.wm.WindowManagerConstants: android.provider.DeviceConfig$OnPropertiesChangedListener mListenerWindowManager>;

        interfaceinvoke $r4.<com.android.server.wm.utils.DeviceConfigInterface: void removeOnPropertiesChangedListener(android.provider.DeviceConfig$OnPropertiesChangedListener)>($r3);

        return;
    }

    void dump(java.io.PrintWriter)
    {
        com.android.server.wm.WindowManagerConstants r0;
        java.io.PrintWriter r1;
        long $l0;
        int $i1;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowManagerConstants;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("WINDOW MANAGER CONSTANTS (dumpsys window constants):");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("system_gesture_exclusion_log_debounce_millis");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("=");

        $l0 = r0.<com.android.server.wm.WindowManagerConstants: long mSystemGestureExclusionLogDebounceTimeoutMillis>;

        virtualinvoke r1.<java.io.PrintWriter: void println(long)>($l0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("system_gesture_exclusion_limit_dp");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("=");

        $i1 = r0.<com.android.server.wm.WindowManagerConstants: int mSystemGestureExclusionLimitDp>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("system_gestures_excluded_by_pre_q_sticky_immersive");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("=");

        $z0 = r0.<com.android.server.wm.WindowManagerConstants: boolean mSystemGestureExcludedByPreQStickyImmersive>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z0);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        return;
    }

    void start(java.util.concurrent.Executor)
    {
        com.android.server.wm.WindowManagerConstants r0;
        java.util.concurrent.Executor r1;
        android.provider.DeviceConfig$OnPropertiesChangedListener $r2, $r4;
        com.android.server.wm.utils.DeviceConfigInterface $r3, $r5;

        r0 := @this: com.android.server.wm.WindowManagerConstants;

        r1 := @parameter0: java.util.concurrent.Executor;

        $r3 = r0.<com.android.server.wm.WindowManagerConstants: com.android.server.wm.utils.DeviceConfigInterface mDeviceConfig>;

        $r2 = r0.<com.android.server.wm.WindowManagerConstants: android.provider.DeviceConfig$OnPropertiesChangedListener mListenerAndroid>;

        interfaceinvoke $r3.<com.android.server.wm.utils.DeviceConfigInterface: void addOnPropertiesChangedListener(java.lang.String,java.util.concurrent.Executor,android.provider.DeviceConfig$OnPropertiesChangedListener)>("android", r1, $r2);

        $r5 = r0.<com.android.server.wm.WindowManagerConstants: com.android.server.wm.utils.DeviceConfigInterface mDeviceConfig>;

        $r4 = r0.<com.android.server.wm.WindowManagerConstants: android.provider.DeviceConfig$OnPropertiesChangedListener mListenerWindowManager>;

        interfaceinvoke $r5.<com.android.server.wm.utils.DeviceConfigInterface: void addOnPropertiesChangedListener(java.lang.String,java.util.concurrent.Executor,android.provider.DeviceConfig$OnPropertiesChangedListener)>("window_manager", r1, $r4);

        specialinvoke r0.<com.android.server.wm.WindowManagerConstants: void updateSystemGestureExclusionLogDebounceMillis()>();

        specialinvoke r0.<com.android.server.wm.WindowManagerConstants: void updateSystemGestureExclusionLimitDp()>();

        specialinvoke r0.<com.android.server.wm.WindowManagerConstants: void updateSystemGestureExcludedByPreQStickyImmersive()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.wm.WindowManagerConstants: int MIN_GESTURE_EXCLUSION_LIMIT_DP> = 200;

        <com.android.server.wm.WindowManagerConstants: java.lang.String KEY_SYSTEM_GESTURE_EXCLUSION_LOG_DEBOUNCE_MILLIS> = "system_gesture_exclusion_log_debounce_millis";

        return;
    }
}
